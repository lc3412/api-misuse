; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--exr.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--exr.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.EXRContext = type { %struct.AVClass*, %struct.AVFrame*, %struct.AVCodecContext*, %struct.ExrDSPContext, i32, i32, [4 x i32], %struct.AVPixFmtDescriptor*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.EXRTileAttribute, i32, i32, %struct.GetByteContext, i8*, i32, %struct.EXRChannel*, i32, i32, %struct.EXRThreadData*, i8*, i32, float, [65536 x i16] }
%struct.ExrDSPContext = type { void (i8*, i8*, i64)*, void (i8*, i64)* }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EXRTileAttribute = type { i32, i32, i32, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.EXRChannel = type { i32, i32, i32 }
%struct.EXRThreadData = type { i8*, i32, i8*, i32, i8*, i16*, i32, i32, i32 }
%union.av_intfloat32 = type { i32 }
%struct.PutByteContext = type { i8*, i8*, i8*, i32 }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%union.unaligned_64 = type { i64 }
%union.unaligned_32 = type { i32 }
%union.unaligned_16 = type { i16 }
%struct.HufDec = type { i32, i32, i32* }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [4 x i8] c"exr\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"OpenEXR image\00", align 1
@exr_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([20 x %struct.AVOption], [20 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @options to [20 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_exr_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 178, i32 12290, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* @exr_class, %struct.AVProfile* null, i8* null, i32 131288, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* @decode_init_thread_copy, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"EXR\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Set the decoding layer\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"Set the float gamma value when decoding\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"apply_trc\00", align 1
@.str.9 = private unnamed_addr constant [60 x i8] c"color transfer characteristics to apply to EXR linear input\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"apply_trc_type\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"bt709\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"BT.709\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"gamma22\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"BT.470 M\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"gamma28\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"BT.470 BG\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"smpte170m\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"SMPTE 170 M\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"smpte240m\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"SMPTE 240 M\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"Linear\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"Log\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"log_sqrt\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"Log square root\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"iec61966_2_4\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"IEC 61966-2-4\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"bt1361\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"BT.1361\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"iec61966_2_1\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"IEC 61966-2-1\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"bt2020_10bit\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"BT.2020 - 10 bit\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"bt2020_12bit\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"BT.2020 - 12 bit\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"smpte2084\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"SMPTE ST 2084\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"smpte428_1\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"SMPTE ST 428-1\00", align 1
@options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 200, i32 5, { i8* } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 18, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i32 0, i32 0), i32 212, i32 4, { double } { double 1.000000e+00 }, double 1.000000e-03, double 0x47EFFFFFE0000000, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.9, i32 0, i32 0), i32 208, i32 1, %union.anon { i64 2 }, double 1.000000e+00, double 1.800000e+01, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 12 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 13 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 14 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 15 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 17 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0) }, %struct.AVOption zeroinitializer }>, align 16
@.str.42 = private unnamed_addr constant [23 x i8] c"Missing channel list.\0A\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"Compression %d\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"Wrong or missing size information.\0A\00", align 1
@.str.45 = private unnamed_addr constant [42 x i8] c"recreating invalid scanline offset table\0A\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"Header too short to parse.\0A\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"Wrong magic number %d.\0A\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"Version %d\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"deep data\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"multipart\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"channels\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"chlist\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"Channel match layer : %s.\0A\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"Channel doesn't match layer : %s.\0A\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"Unsupported channel %.256s.\0A\00", align 1
@.str.69 = private unnamed_addr constant [20 x i8] c"Incomplete header.\0A\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"Pixel type %d\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"Subsampling %dx%d\00", align 1
@.str.72 = private unnamed_addr constant [37 x i8] c"RGB channels not of the same depth.\0A\00", align 1
@.str.73 = private unnamed_addr constant [34 x i8] c"Multiple channels with index %d.\0A\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"Missing red channel.\0A\00", align 1
@.str.75 = private unnamed_addr constant [24 x i8] c"Missing green channel.\0A\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"Missing blue channel.\0A\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"dataWindow\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"box2i\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"displayWindow\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"lineOrder\00", align 1
@.str.81 = private unnamed_addr constant [17 x i8] c"line order: %d.\0A\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"Unknown line order.\0A\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"pixelAspectRatio\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"compression\00", align 1
@.str.86 = private unnamed_addr constant [44 x i8] c"Found more than one compression attribute.\0A\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"tiles\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"tiledesc\00", align 1
@.str.89 = private unnamed_addr constant [79 x i8] c"Found tile attribute and scanline flags. Exr will be interpreted as scanline.\0A\00", align 1
@.str.90 = private unnamed_addr constant [19 x i8] c"Tile level mode %d\00", align 1
@.str.91 = private unnamed_addr constant [20 x i8] c"Tile level round %d\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"writer\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.94 = private unnamed_addr constant [19 x i8] c"Incomplete header\0A\00", align 1
@.str.95 = private unnamed_addr constant [32 x i8] c"Missing compression attribute.\0A\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"Invalid tile attribute.\0A\00", align 1
@.str.97 = private unnamed_addr constant [19 x i8] c"Incomplete frame.\0A\00", align 1
@.str.98 = private unnamed_addr constant [46 x i8] c"Unknown data type %s for header variable %s.\0A\00", align 1
@.str.99 = private unnamed_addr constant [33 x i8] c"Subres tile before full res tile\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"Tiles with xmin/ymin\00", align 1
@.str.101 = private unnamed_addr constant [24 x i8] c"decode_block() failed.\0A\00", align 1
@.str.102 = private unnamed_addr constant [35 x i8] c"Not enough data for B44A block: %d\00", align 1
@.str.103 = private unnamed_addr constant [34 x i8] c"Not enough data for B44 block: %d\00", align 1
@.str.104 = private unnamed_addr constant [43 x i8] c"Not enough data for uncompress channel: %d\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @decode_init_thread_copy(%struct.AVCodecContext* %avctx) #0 !dbg !1738 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.EXRContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1740, metadata !1741), !dbg !1742
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s, metadata !1743, metadata !1741), !dbg !1856
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1857
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1858
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1858
  %2 = bitcast i8* %1 to %struct.EXRContext*, !dbg !1857
  store %struct.EXRContext* %2, %struct.EXRContext** %s, align 8, !dbg !1856
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1859
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 146, !dbg !1860
  %4 = load i32, i32* %thread_count, align 8, !dbg !1860
  %conv = sext i32 %4 to i64, !dbg !1859
  %call = call i8* @av_mallocz_array(i64 %conv, i64 64), !dbg !1861
  %5 = bitcast i8* %call to %struct.EXRThreadData*, !dbg !1861
  %6 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1862
  %thread_data = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %6, i32 0, i32 26, !dbg !1863
  store %struct.EXRThreadData* %5, %struct.EXRThreadData** %thread_data, align 8, !dbg !1864
  %7 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1865
  %thread_data1 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %7, i32 0, i32 26, !dbg !1867
  %8 = load %struct.EXRThreadData*, %struct.EXRThreadData** %thread_data1, align 8, !dbg !1867
  %tobool = icmp ne %struct.EXRThreadData* %8, null, !dbg !1865
  br i1 %tobool, label %if.end, label %if.then, !dbg !1868

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !1869
  br label %return, !dbg !1869

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1870
  br label %return, !dbg !1870

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !1871
  ret i32 %9, !dbg !1871
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #1 !dbg !1872 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.EXRContext*, align 8
  %i = alloca i32, align 4
  %t = alloca %union.av_intfloat32, align 4
  %one_gamma = alloca float, align 4
  %trc_func = alloca double (double)*, align 8
  %coerce = alloca %union.av_intfloat32, align 4
  %coerce33 = alloca %union.av_intfloat32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1873, metadata !1741), !dbg !1874
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s, metadata !1875, metadata !1741), !dbg !1876
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1877
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1878
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1878
  %2 = bitcast i8* %1 to %struct.EXRContext*, !dbg !1877
  store %struct.EXRContext* %2, %struct.EXRContext** %s, align 8, !dbg !1876
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1879, metadata !1741), !dbg !1880
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %t, metadata !1881, metadata !1741), !dbg !1887
  call void @llvm.dbg.declare(metadata float* %one_gamma, metadata !1888, metadata !1741), !dbg !1889
  %3 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1890
  %gamma = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %3, i32 0, i32 29, !dbg !1891
  %4 = load float, float* %gamma, align 4, !dbg !1891
  %div = fdiv float 1.000000e+00, %4, !dbg !1892
  store float %div, float* %one_gamma, align 4, !dbg !1889
  call void @llvm.dbg.declare(metadata double (double)** %trc_func, metadata !1893, metadata !1741), !dbg !1899
  store double (double)* null, double (double)** %trc_func, align 8, !dbg !1899
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1900
  %6 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1901
  %avctx1 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %6, i32 0, i32 2, !dbg !1902
  store %struct.AVCodecContext* %5, %struct.AVCodecContext** %avctx1, align 8, !dbg !1903
  %7 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1904
  %dsp = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %7, i32 0, i32 3, !dbg !1905
  call void @ff_exrdsp_init(%struct.ExrDSPContext* %dsp), !dbg !1906
  %8 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1907
  %apply_trc_type = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %8, i32 0, i32 28, !dbg !1908
  %9 = load i32, i32* %apply_trc_type, align 8, !dbg !1908
  %call = call double (double)* @avpriv_get_trc_function_from_trc(i32 %9), !dbg !1909
  store double (double)* %call, double (double)** %trc_func, align 8, !dbg !1910
  %10 = load double (double)*, double (double)** %trc_func, align 8, !dbg !1911
  %tobool = icmp ne double (double)* %10, null, !dbg !1911
  br i1 %tobool, label %if.then, label %if.else, !dbg !1913

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1914
  br label %for.cond, !dbg !1917

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !1918
  %cmp = icmp ult i32 %11, 65536, !dbg !1921
  br i1 %cmp, label %for.body, label %for.end, !dbg !1922

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !1923
  %conv = trunc i32 %12 to i16, !dbg !1923
  %call2 = call i32 @exr_half2float(i16 zeroext %conv), !dbg !1925
  %coerce.dive = getelementptr inbounds %union.av_intfloat32, %union.av_intfloat32* %coerce, i32 0, i32 0, !dbg !1925
  store i32 %call2, i32* %coerce.dive, align 4, !dbg !1925
  %13 = bitcast %union.av_intfloat32* %t to i8*, !dbg !1925
  %14 = bitcast %union.av_intfloat32* %coerce to i8*, !dbg !1925
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 4, i32 4, i1 false), !dbg !1926
  %15 = load double (double)*, double (double)** %trc_func, align 8, !dbg !1928
  %f = bitcast %union.av_intfloat32* %t to float*, !dbg !1929
  %16 = load float, float* %f, align 4, !dbg !1929
  %conv3 = fpext float %16 to double, !dbg !1930
  %call4 = call double %15(double %conv3), !dbg !1928
  %conv5 = fptrunc double %call4 to float, !dbg !1928
  %f6 = bitcast %union.av_intfloat32* %t to float*, !dbg !1931
  store float %conv5, float* %f6, align 4, !dbg !1932
  %i7 = bitcast %union.av_intfloat32* %t to i32*, !dbg !1933
  %17 = load i32, i32* %i7, align 4, !dbg !1933
  %call8 = call zeroext i16 @exr_flt2uint(i32 %17), !dbg !1934
  %18 = load i32, i32* %i, align 4, !dbg !1935
  %idxprom = zext i32 %18 to i64, !dbg !1936
  %19 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1936
  %gamma_table = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %19, i32 0, i32 30, !dbg !1937
  %arrayidx = getelementptr inbounds [65536 x i16], [65536 x i16]* %gamma_table, i64 0, i64 %idxprom, !dbg !1936
  store i16 %call8, i16* %arrayidx, align 2, !dbg !1938
  br label %for.inc, !dbg !1939

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !1940
  %inc = add i32 %20, 1, !dbg !1940
  store i32 %inc, i32* %i, align 4, !dbg !1940
  br label %for.cond, !dbg !1942, !llvm.loop !1943

for.end:                                          ; preds = %for.cond
  br label %if.end57, !dbg !1945

if.else:                                          ; preds = %entry
  %21 = load float, float* %one_gamma, align 4, !dbg !1946
  %cmp9 = fcmp ogt float %21, 0x3FEFFF2E40000000, !dbg !1949
  br i1 %cmp9, label %land.lhs.true, label %if.else26, !dbg !1950

land.lhs.true:                                    ; preds = %if.else
  %22 = load float, float* %one_gamma, align 4, !dbg !1951
  %cmp11 = fcmp olt float %22, 0x3FF00068E0000000, !dbg !1953
  br i1 %cmp11, label %if.then13, label %if.else26, !dbg !1954

if.then13:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !1955
  br label %for.cond14, !dbg !1958

for.cond14:                                       ; preds = %for.inc23, %if.then13
  %23 = load i32, i32* %i, align 4, !dbg !1959
  %cmp15 = icmp ult i32 %23, 65536, !dbg !1962
  br i1 %cmp15, label %for.body17, label %for.end25, !dbg !1963

for.body17:                                       ; preds = %for.cond14
  %24 = load i32, i32* %i, align 4, !dbg !1964
  %conv18 = trunc i32 %24 to i16, !dbg !1964
  %call19 = call zeroext i16 @exr_halflt2uint(i16 zeroext %conv18), !dbg !1965
  %25 = load i32, i32* %i, align 4, !dbg !1966
  %idxprom20 = zext i32 %25 to i64, !dbg !1967
  %26 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1967
  %gamma_table21 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %26, i32 0, i32 30, !dbg !1968
  %arrayidx22 = getelementptr inbounds [65536 x i16], [65536 x i16]* %gamma_table21, i64 0, i64 %idxprom20, !dbg !1967
  store i16 %call19, i16* %arrayidx22, align 2, !dbg !1969
  br label %for.inc23, !dbg !1967

for.inc23:                                        ; preds = %for.body17
  %27 = load i32, i32* %i, align 4, !dbg !1970
  %inc24 = add i32 %27, 1, !dbg !1970
  store i32 %inc24, i32* %i, align 4, !dbg !1970
  br label %for.cond14, !dbg !1972, !llvm.loop !1973

for.end25:                                        ; preds = %for.cond14
  br label %if.end56, !dbg !1975

if.else26:                                        ; preds = %land.lhs.true, %if.else
  store i32 0, i32* %i, align 4, !dbg !1976
  br label %for.cond27, !dbg !1979

for.cond27:                                       ; preds = %for.inc53, %if.else26
  %28 = load i32, i32* %i, align 4, !dbg !1980
  %cmp28 = icmp ult i32 %28, 65536, !dbg !1983
  br i1 %cmp28, label %for.body30, label %for.end55, !dbg !1984

for.body30:                                       ; preds = %for.cond27
  %29 = load i32, i32* %i, align 4, !dbg !1985
  %conv31 = trunc i32 %29 to i16, !dbg !1985
  %call32 = call i32 @exr_half2float(i16 zeroext %conv31), !dbg !1987
  %coerce.dive34 = getelementptr inbounds %union.av_intfloat32, %union.av_intfloat32* %coerce33, i32 0, i32 0, !dbg !1987
  store i32 %call32, i32* %coerce.dive34, align 4, !dbg !1987
  %30 = bitcast %union.av_intfloat32* %t to i8*, !dbg !1987
  %31 = bitcast %union.av_intfloat32* %coerce33 to i8*, !dbg !1987
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 4, i32 4, i1 false), !dbg !1988
  %f35 = bitcast %union.av_intfloat32* %t to float*, !dbg !1990
  %32 = load float, float* %f35, align 4, !dbg !1990
  %cmp36 = fcmp ole float %32, 0.000000e+00, !dbg !1992
  br i1 %cmp36, label %if.then38, label %if.else44, !dbg !1993

if.then38:                                        ; preds = %for.body30
  %33 = load i32, i32* %i, align 4, !dbg !1994
  %conv39 = trunc i32 %33 to i16, !dbg !1994
  %call40 = call zeroext i16 @exr_halflt2uint(i16 zeroext %conv39), !dbg !1996
  %34 = load i32, i32* %i, align 4, !dbg !1997
  %idxprom41 = zext i32 %34 to i64, !dbg !1998
  %35 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !1998
  %gamma_table42 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %35, i32 0, i32 30, !dbg !1999
  %arrayidx43 = getelementptr inbounds [65536 x i16], [65536 x i16]* %gamma_table42, i64 0, i64 %idxprom41, !dbg !1998
  store i16 %call40, i16* %arrayidx43, align 2, !dbg !2000
  br label %if.end, !dbg !2001

if.else44:                                        ; preds = %for.body30
  %f45 = bitcast %union.av_intfloat32* %t to float*, !dbg !2002
  %36 = load float, float* %f45, align 4, !dbg !2002
  %37 = load float, float* %one_gamma, align 4, !dbg !2004
  %call46 = call float @powf(float %36, float %37) #10, !dbg !2005
  %f47 = bitcast %union.av_intfloat32* %t to float*, !dbg !2006
  store float %call46, float* %f47, align 4, !dbg !2007
  %i48 = bitcast %union.av_intfloat32* %t to i32*, !dbg !2008
  %38 = load i32, i32* %i48, align 4, !dbg !2008
  %call49 = call zeroext i16 @exr_flt2uint(i32 %38), !dbg !2009
  %39 = load i32, i32* %i, align 4, !dbg !2010
  %idxprom50 = zext i32 %39 to i64, !dbg !2011
  %40 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2011
  %gamma_table51 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %40, i32 0, i32 30, !dbg !2012
  %arrayidx52 = getelementptr inbounds [65536 x i16], [65536 x i16]* %gamma_table51, i64 0, i64 %idxprom50, !dbg !2011
  store i16 %call49, i16* %arrayidx52, align 2, !dbg !2013
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then38
  br label %for.inc53, !dbg !2014

for.inc53:                                        ; preds = %if.end
  %41 = load i32, i32* %i, align 4, !dbg !2015
  %inc54 = add i32 %41, 1, !dbg !2015
  store i32 %inc54, i32* %i, align 4, !dbg !2015
  br label %for.cond27, !dbg !2017, !llvm.loop !2018

for.end55:                                        ; preds = %for.cond27
  br label %if.end56

if.end56:                                         ; preds = %for.end55, %for.end25
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %for.end
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2020
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 146, !dbg !2021
  %43 = load i32, i32* %thread_count, align 8, !dbg !2021
  %conv58 = sext i32 %43 to i64, !dbg !2020
  %call59 = call i8* @av_mallocz_array(i64 %conv58, i64 64), !dbg !2022
  %44 = bitcast i8* %call59 to %struct.EXRThreadData*, !dbg !2022
  %45 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2023
  %thread_data = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %45, i32 0, i32 26, !dbg !2024
  store %struct.EXRThreadData* %44, %struct.EXRThreadData** %thread_data, align 8, !dbg !2025
  %46 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2026
  %thread_data60 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %46, i32 0, i32 26, !dbg !2028
  %47 = load %struct.EXRThreadData*, %struct.EXRThreadData** %thread_data60, align 8, !dbg !2028
  %tobool61 = icmp ne %struct.EXRThreadData* %47, null, !dbg !2026
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !2029

if.then62:                                        ; preds = %if.end57
  store i32 -1094995529, i32* %retval, align 4, !dbg !2030
  br label %return, !dbg !2030

if.end63:                                         ; preds = %if.end57
  store i32 0, i32* %retval, align 4, !dbg !2031
  br label %return, !dbg !2031

return:                                           ; preds = %if.end63, %if.then62
  %48 = load i32, i32* %retval, align 4, !dbg !2032
  ret i32 %48, !dbg !2032
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #0 !dbg !2033 {
entry:
  %p.addr.i303 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i303, metadata !2034, metadata !1741), !dbg !2046
  %buf.addr.i304 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i304, metadata !2050, metadata !1741), !dbg !2051
  %buf_size.addr.i305 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i305, metadata !2052, metadata !1741), !dbg !2053
  %p.addr.i = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i, metadata !2054, metadata !1741), !dbg !2058
  %value.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr.i, metadata !2063, metadata !1741), !dbg !2064
  %retval.i44.i204 = alloca i32, align 4
  %a.addr.i45.i205 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i45.i205, metadata !2065, metadata !1741), !dbg !2070
  %amin.addr.i46.i206 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i46.i206, metadata !2078, metadata !1741), !dbg !2079
  %amax.addr.i47.i207 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i47.i207, metadata !2080, metadata !1741), !dbg !2081
  %retval.i33.i208 = alloca i32, align 4
  %a.addr.i34.i209 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i34.i209, metadata !2065, metadata !1741), !dbg !2082
  %amin.addr.i35.i210 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i35.i210, metadata !2078, metadata !1741), !dbg !2084
  %amax.addr.i36.i211 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i36.i211, metadata !2080, metadata !1741), !dbg !2085
  %g.addr.i.i212 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i212, metadata !2086, metadata !1741), !dbg !2090
  %retval.i.i213 = alloca i32, align 4
  %a.addr.i.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i214, metadata !2065, metadata !1741), !dbg !2092
  %amin.addr.i.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i215, metadata !2078, metadata !1741), !dbg !2094
  %amax.addr.i.i216 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i216, metadata !2080, metadata !1741), !dbg !2095
  %retval.i217 = alloca i32, align 4
  %g.addr.i218 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i218, metadata !2096, metadata !1741), !dbg !2097
  %offset.addr.i219 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr.i219, metadata !2098, metadata !1741), !dbg !2099
  %whence.addr.i220 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr.i220, metadata !2100, metadata !1741), !dbg !2101
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2102, metadata !1741), !dbg !2107
  %g.addr.i.i192 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i192, metadata !2116, metadata !1741), !dbg !2117
  %retval.i193 = alloca i32, align 4
  %g.addr.i194 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i194, metadata !2118, metadata !1741), !dbg !2119
  %retval.i44.i = alloca i32, align 4
  %a.addr.i45.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i45.i, metadata !2065, metadata !1741), !dbg !2120
  %amin.addr.i46.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i46.i, metadata !2078, metadata !1741), !dbg !2123
  %amax.addr.i47.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i47.i, metadata !2080, metadata !1741), !dbg !2124
  %retval.i33.i = alloca i32, align 4
  %a.addr.i34.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i34.i, metadata !2065, metadata !1741), !dbg !2125
  %amin.addr.i35.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i35.i, metadata !2078, metadata !1741), !dbg !2127
  %amax.addr.i36.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i36.i, metadata !2080, metadata !1741), !dbg !2128
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2086, metadata !1741), !dbg !2129
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !2065, metadata !1741), !dbg !2131
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !2078, metadata !1741), !dbg !2133
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !2080, metadata !1741), !dbg !2134
  %retval.i180 = alloca i32, align 4
  %g.addr.i181 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i181, metadata !2096, metadata !1741), !dbg !2135
  %offset.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr.i, metadata !2098, metadata !1741), !dbg !2136
  %whence.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr.i, metadata !2100, metadata !1741), !dbg !2137
  %g.addr.i173 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i173, metadata !2086, metadata !1741), !dbg !2138
  %retval.i = alloca i64, align 8
  %g.addr.i165 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i165, metadata !2140, metadata !1741), !dbg !2144
  %g.addr.i162 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i162, metadata !2147, metadata !1741), !dbg !2149
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2152, metadata !1741), !dbg !2156
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !2158, metadata !1741), !dbg !2159
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !2160, metadata !1741), !dbg !2161
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.EXRContext*, align 8
  %frame = alloca %struct.ThreadFrame, align 8
  %picture = alloca %struct.AVFrame*, align 8
  %ptr = alloca i8*, align 8
  %y = alloca i32, align 4
  %ret = alloca i32, align 4
  %out_line_size = alloca i32, align 4
  %nb_blocks = alloca i32, align 4
  %start_offset_table = alloca i64, align 8
  %start_next_scanline = alloca i64, align 8
  %offset_table_writer = alloca %struct.PutByteContext, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2162, metadata !1741), !dbg !2163
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2164, metadata !1741), !dbg !2165
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !2166, metadata !1741), !dbg !2167
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2168, metadata !1741), !dbg !2169
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s, metadata !2170, metadata !1741), !dbg !2171
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2172
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2173
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2173
  %2 = bitcast i8* %1 to %struct.EXRContext*, !dbg !2172
  store %struct.EXRContext* %2, %struct.EXRContext** %s, align 8, !dbg !2171
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame* %frame, metadata !2174, metadata !1741), !dbg !2185
  %3 = bitcast %struct.ThreadFrame* %frame to i8*, !dbg !2185
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 32, i32 8, i1 false), !dbg !2185
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %frame, i32 0, i32 0, !dbg !2186
  %4 = load i8*, i8** %data.addr, align 8, !dbg !2187
  %5 = bitcast i8* %4 to %struct.AVFrame*, !dbg !2187
  store %struct.AVFrame* %5, %struct.AVFrame** %f, align 8, !dbg !2186
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %picture, metadata !2188, metadata !1741), !dbg !2189
  %6 = load i8*, i8** %data.addr, align 8, !dbg !2190
  %7 = bitcast i8* %6 to %struct.AVFrame*, !dbg !2190
  store %struct.AVFrame* %7, %struct.AVFrame** %picture, align 8, !dbg !2189
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !2191, metadata !1741), !dbg !2192
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2193, metadata !1741), !dbg !2194
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2195, metadata !1741), !dbg !2196
  call void @llvm.dbg.declare(metadata i32* %out_line_size, metadata !2197, metadata !1741), !dbg !2198
  call void @llvm.dbg.declare(metadata i32* %nb_blocks, metadata !2199, metadata !1741), !dbg !2200
  call void @llvm.dbg.declare(metadata i64* %start_offset_table, metadata !2201, metadata !1741), !dbg !2202
  call void @llvm.dbg.declare(metadata i64* %start_next_scanline, metadata !2203, metadata !1741), !dbg !2204
  call void @llvm.dbg.declare(metadata %struct.PutByteContext* %offset_table_writer, metadata !2205, metadata !1741), !dbg !2206
  %8 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2207
  %gb = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %8, i32 0, i32 20, !dbg !2208
  %9 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2209
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %9, i32 0, i32 3, !dbg !2210
  %10 = load i8*, i8** %data1, align 8, !dbg !2210
  %11 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2211
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 4, !dbg !2212
  %12 = load i32, i32* %size, align 8, !dbg !2212
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2213
  store i8* %10, i8** %buf.addr.i, align 8, !dbg !2213
  store i32 %12, i32* %buf_size.addr.i, align 4, !dbg !2213
  %13 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2214
  %cmp.i = icmp sge i32 %13, 0, !dbg !2218
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !2219

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i32 137) #10, !dbg !2220
  call void @abort() #11, !dbg !2223
  unreachable, !dbg !2225

bytestream2_init.exit:                            ; preds = %entry
  %14 = load i8*, i8** %buf.addr.i, align 8, !dbg !2226
  %15 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2227
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %15, i32 0, i32 0, !dbg !2228
  store i8* %14, i8** %buffer.i, align 8, !dbg !2229
  %16 = load i8*, i8** %buf.addr.i, align 8, !dbg !2230
  %17 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2231
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %17, i32 0, i32 2, !dbg !2232
  store i8* %16, i8** %buffer_start.i, align 8, !dbg !2233
  %18 = load i8*, i8** %buf.addr.i, align 8, !dbg !2234
  %19 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2235
  %idx.ext.i = sext i32 %19 to i64, !dbg !2236
  %add.ptr.i = getelementptr inbounds i8, i8* %18, i64 %idx.ext.i, !dbg !2236
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2237
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 1, !dbg !2238
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !2239
  %21 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2240
  %22 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2242
  %call = call i32 @decode_header(%struct.EXRContext* %21, %struct.AVFrame* %22), !dbg !2243
  store i32 %call, i32* %ret, align 4, !dbg !2244
  %cmp = icmp slt i32 %call, 0, !dbg !2245
  br i1 %cmp, label %if.then, label %if.end, !dbg !2246

if.then:                                          ; preds = %bytestream2_init.exit
  %23 = load i32, i32* %ret, align 4, !dbg !2247
  store i32 %23, i32* %retval, align 4, !dbg !2248
  br label %return, !dbg !2248

if.end:                                           ; preds = %bytestream2_init.exit
  %24 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2249
  %pixel_type = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %24, i32 0, i32 5, !dbg !2250
  %25 = load i32, i32* %pixel_type, align 4, !dbg !2250
  switch i32 %25, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 0, label %sw.bb
  ], !dbg !2251

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %26 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2252
  %channel_offsets = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %26, i32 0, i32 6, !dbg !2255
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets, i64 0, i64 3, !dbg !2252
  %27 = load i32, i32* %arrayidx, align 4, !dbg !2252
  %cmp2 = icmp sge i32 %27, 0, !dbg !2256
  br i1 %cmp2, label %if.then3, label %if.else7, !dbg !2257

if.then3:                                         ; preds = %sw.bb
  %28 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2258
  %is_luma = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %28, i32 0, i32 19, !dbg !2261
  %29 = load i32, i32* %is_luma, align 8, !dbg !2261
  %tobool = icmp ne i32 %29, 0, !dbg !2258
  br i1 %tobool, label %if.else, label %if.then4, !dbg !2262

if.then4:                                         ; preds = %if.then3
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2263
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 25, !dbg !2265
  store i32 107, i32* %pix_fmt, align 8, !dbg !2266
  br label %if.end6, !dbg !2267

if.else:                                          ; preds = %if.then3
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2268
  %pix_fmt5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 25, !dbg !2270
  store i32 112, i32* %pix_fmt5, align 8, !dbg !2271
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  br label %if.end15, !dbg !2272

if.else7:                                         ; preds = %sw.bb
  %32 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2273
  %is_luma8 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %32, i32 0, i32 19, !dbg !2276
  %33 = load i32, i32* %is_luma8, align 8, !dbg !2276
  %tobool9 = icmp ne i32 %33, 0, !dbg !2273
  br i1 %tobool9, label %if.else12, label %if.then10, !dbg !2277

if.then10:                                        ; preds = %if.else7
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2278
  %pix_fmt11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 25, !dbg !2280
  store i32 35, i32* %pix_fmt11, align 8, !dbg !2281
  br label %if.end14, !dbg !2282

if.else12:                                        ; preds = %if.else7
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2283
  %pix_fmt13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 25, !dbg !2285
  store i32 30, i32* %pix_fmt13, align 8, !dbg !2286
  br label %if.end14

if.end14:                                         ; preds = %if.else12, %if.then10
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end6
  br label %sw.epilog, !dbg !2287

sw.default:                                       ; preds = %if.end
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2288
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !2288
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i32 0, i32 0)), !dbg !2289
  store i32 -1094995529, i32* %retval, align 4, !dbg !2290
  br label %return, !dbg !2290

sw.epilog:                                        ; preds = %if.end15
  %38 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2291
  %apply_trc_type = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %38, i32 0, i32 28, !dbg !2293
  %39 = load i32, i32* %apply_trc_type, align 8, !dbg !2293
  %cmp16 = icmp ne i32 %39, 2, !dbg !2294
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !2295

if.then17:                                        ; preds = %sw.epilog
  %40 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2296
  %apply_trc_type18 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %40, i32 0, i32 28, !dbg !2297
  %41 = load i32, i32* %apply_trc_type18, align 8, !dbg !2297
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2298
  %color_trc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 76, !dbg !2299
  store i32 %41, i32* %color_trc, align 8, !dbg !2300
  br label %if.end19, !dbg !2298

if.end19:                                         ; preds = %if.then17, %sw.epilog
  %43 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2301
  %compression = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %43, i32 0, i32 4, !dbg !2302
  %44 = load i32, i32* %compression, align 8, !dbg !2302
  switch i32 %44, label %sw.default25 [
    i32 0, label %sw.bb20
    i32 1, label %sw.bb20
    i32 2, label %sw.bb20
    i32 5, label %sw.bb21
    i32 3, label %sw.bb21
    i32 4, label %sw.bb23
    i32 6, label %sw.bb23
    i32 7, label %sw.bb23
  ], !dbg !2303

sw.bb20:                                          ; preds = %if.end19, %if.end19, %if.end19
  %45 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2304
  %scan_lines_per_block = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %45, i32 0, i32 16, !dbg !2306
  store i32 1, i32* %scan_lines_per_block, align 8, !dbg !2307
  br label %sw.epilog27, !dbg !2308

sw.bb21:                                          ; preds = %if.end19, %if.end19
  %46 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2309
  %scan_lines_per_block22 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %46, i32 0, i32 16, !dbg !2310
  store i32 16, i32* %scan_lines_per_block22, align 8, !dbg !2311
  br label %sw.epilog27, !dbg !2312

sw.bb23:                                          ; preds = %if.end19, %if.end19, %if.end19
  %47 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2313
  %scan_lines_per_block24 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %47, i32 0, i32 16, !dbg !2314
  store i32 32, i32* %scan_lines_per_block24, align 8, !dbg !2315
  br label %sw.epilog27, !dbg !2316

sw.default25:                                     ; preds = %if.end19
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2317
  %49 = bitcast %struct.AVCodecContext* %48 to i8*, !dbg !2317
  %50 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2318
  %compression26 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %50, i32 0, i32 4, !dbg !2319
  %51 = load i32, i32* %compression26, align 8, !dbg !2319
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i32 %51), !dbg !2320
  store i32 -1163346256, i32* %retval, align 4, !dbg !2321
  br label %return, !dbg !2321

sw.epilog27:                                      ; preds = %sw.bb23, %sw.bb21, %sw.bb20
  %52 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2322
  %xmin = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %52, i32 0, i32 11, !dbg !2324
  %53 = load i32, i32* %xmin, align 4, !dbg !2324
  %54 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2325
  %xmax = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %54, i32 0, i32 10, !dbg !2326
  %55 = load i32, i32* %xmax, align 8, !dbg !2326
  %cmp28 = icmp ugt i32 %53, %55, !dbg !2327
  br i1 %cmp28, label %if.then40, label %lor.lhs.false, !dbg !2328

lor.lhs.false:                                    ; preds = %sw.epilog27
  %56 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2329
  %ymin = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %56, i32 0, i32 13, !dbg !2330
  %57 = load i32, i32* %ymin, align 4, !dbg !2330
  %58 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2331
  %ymax = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %58, i32 0, i32 12, !dbg !2332
  %59 = load i32, i32* %ymax, align 8, !dbg !2332
  %cmp29 = icmp ugt i32 %57, %59, !dbg !2333
  br i1 %cmp29, label %if.then40, label %lor.lhs.false30, !dbg !2334

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %60 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2335
  %xdelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %60, i32 0, i32 14, !dbg !2336
  %61 = load i32, i32* %xdelta, align 8, !dbg !2336
  %62 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2337
  %xmax31 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %62, i32 0, i32 10, !dbg !2338
  %63 = load i32, i32* %xmax31, align 8, !dbg !2338
  %64 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2339
  %xmin32 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %64, i32 0, i32 11, !dbg !2340
  %65 = load i32, i32* %xmin32, align 4, !dbg !2340
  %sub = sub i32 %63, %65, !dbg !2341
  %add = add i32 %sub, 1, !dbg !2342
  %cmp33 = icmp ne i32 %61, %add, !dbg !2343
  br i1 %cmp33, label %if.then40, label %lor.lhs.false34, !dbg !2344

lor.lhs.false34:                                  ; preds = %lor.lhs.false30
  %66 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2345
  %xmax35 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %66, i32 0, i32 10, !dbg !2346
  %67 = load i32, i32* %xmax35, align 8, !dbg !2346
  %68 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2347
  %w = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %68, i32 0, i32 8, !dbg !2348
  %69 = load i32, i32* %w, align 8, !dbg !2348
  %cmp36 = icmp uge i32 %67, %69, !dbg !2349
  br i1 %cmp36, label %if.then40, label %lor.lhs.false37, !dbg !2350

lor.lhs.false37:                                  ; preds = %lor.lhs.false34
  %70 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2351
  %ymax38 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %70, i32 0, i32 12, !dbg !2352
  %71 = load i32, i32* %ymax38, align 8, !dbg !2352
  %72 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2353
  %h = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %72, i32 0, i32 9, !dbg !2354
  %73 = load i32, i32* %h, align 4, !dbg !2354
  %cmp39 = icmp uge i32 %71, %73, !dbg !2355
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !2356

if.then40:                                        ; preds = %lor.lhs.false37, %lor.lhs.false34, %lor.lhs.false30, %lor.lhs.false, %sw.epilog27
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2358
  %75 = bitcast %struct.AVCodecContext* %74 to i8*, !dbg !2358
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i32 0, i32 0)), !dbg !2360
  store i32 -1094995529, i32* %retval, align 4, !dbg !2361
  br label %return, !dbg !2361

if.end41:                                         ; preds = %lor.lhs.false37
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2362
  %77 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2364
  %w42 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %77, i32 0, i32 8, !dbg !2365
  %78 = load i32, i32* %w42, align 8, !dbg !2365
  %79 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2366
  %h43 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %79, i32 0, i32 9, !dbg !2367
  %80 = load i32, i32* %h43, align 4, !dbg !2367
  %call44 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %76, i32 %78, i32 %80), !dbg !2368
  store i32 %call44, i32* %ret, align 4, !dbg !2369
  %cmp45 = icmp slt i32 %call44, 0, !dbg !2370
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !2371

if.then46:                                        ; preds = %if.end41
  %81 = load i32, i32* %ret, align 4, !dbg !2372
  store i32 %81, i32* %retval, align 4, !dbg !2373
  br label %return, !dbg !2373

if.end47:                                         ; preds = %if.end41
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2374
  %pix_fmt48 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 25, !dbg !2375
  %83 = load i32, i32* %pix_fmt48, align 8, !dbg !2375
  %call49 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %83), !dbg !2376
  %84 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2377
  %desc = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %84, i32 0, i32 7, !dbg !2378
  store %struct.AVPixFmtDescriptor* %call49, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !2379
  %85 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2380
  %desc50 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %85, i32 0, i32 7, !dbg !2382
  %86 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc50, align 8, !dbg !2382
  %tobool51 = icmp ne %struct.AVPixFmtDescriptor* %86, null, !dbg !2380
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !2383

if.then52:                                        ; preds = %if.end47
  store i32 -1094995529, i32* %retval, align 4, !dbg !2384
  br label %return, !dbg !2384

if.end53:                                         ; preds = %if.end47
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2385
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 20, !dbg !2386
  %88 = load i32, i32* %width, align 4, !dbg !2386
  %mul = mul nsw i32 %88, 2, !dbg !2387
  %89 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2388
  %desc54 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %89, i32 0, i32 7, !dbg !2389
  %90 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc54, align 8, !dbg !2389
  %nb_components = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %90, i32 0, i32 1, !dbg !2390
  %91 = load i8, i8* %nb_components, align 8, !dbg !2390
  %conv = zext i8 %91 to i32, !dbg !2388
  %mul55 = mul nsw i32 %mul, %conv, !dbg !2391
  store i32 %mul55, i32* %out_line_size, align 4, !dbg !2392
  %92 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2393
  %is_tile = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %92, i32 0, i32 18, !dbg !2395
  %93 = load i32, i32* %is_tile, align 4, !dbg !2395
  %tobool56 = icmp ne i32 %93, 0, !dbg !2393
  br i1 %tobool56, label %if.then57, label %if.else70, !dbg !2396

if.then57:                                        ; preds = %if.end53
  %94 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2397
  %xdelta58 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %94, i32 0, i32 14, !dbg !2399
  %95 = load i32, i32* %xdelta58, align 8, !dbg !2399
  %96 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2400
  %tile_attr = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %96, i32 0, i32 17, !dbg !2401
  %xSize = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr, i32 0, i32 0, !dbg !2402
  %97 = load i32, i32* %xSize, align 4, !dbg !2402
  %add59 = add i32 %95, %97, !dbg !2403
  %sub60 = sub i32 %add59, 1, !dbg !2404
  %98 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2405
  %tile_attr61 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %98, i32 0, i32 17, !dbg !2406
  %xSize62 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr61, i32 0, i32 0, !dbg !2407
  %99 = load i32, i32* %xSize62, align 4, !dbg !2407
  %div = udiv i32 %sub60, %99, !dbg !2408
  %100 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2409
  %ydelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %100, i32 0, i32 15, !dbg !2410
  %101 = load i32, i32* %ydelta, align 4, !dbg !2410
  %102 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2411
  %tile_attr63 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %102, i32 0, i32 17, !dbg !2412
  %ySize = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr63, i32 0, i32 1, !dbg !2413
  %103 = load i32, i32* %ySize, align 4, !dbg !2413
  %add64 = add i32 %101, %103, !dbg !2414
  %sub65 = sub i32 %add64, 1, !dbg !2415
  %104 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2416
  %tile_attr66 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %104, i32 0, i32 17, !dbg !2417
  %ySize67 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr66, i32 0, i32 1, !dbg !2418
  %105 = load i32, i32* %ySize67, align 4, !dbg !2418
  %div68 = udiv i32 %sub65, %105, !dbg !2419
  %mul69 = mul i32 %div, %div68, !dbg !2420
  store i32 %mul69, i32* %nb_blocks, align 4, !dbg !2421
  br label %if.end77, !dbg !2422

if.else70:                                        ; preds = %if.end53
  %106 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2423
  %ydelta71 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %106, i32 0, i32 15, !dbg !2425
  %107 = load i32, i32* %ydelta71, align 4, !dbg !2425
  %108 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2426
  %scan_lines_per_block72 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %108, i32 0, i32 16, !dbg !2427
  %109 = load i32, i32* %scan_lines_per_block72, align 8, !dbg !2427
  %add73 = add i32 %107, %109, !dbg !2428
  %sub74 = sub i32 %add73, 1, !dbg !2429
  %110 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2430
  %scan_lines_per_block75 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %110, i32 0, i32 16, !dbg !2431
  %111 = load i32, i32* %scan_lines_per_block75, align 8, !dbg !2431
  %div76 = udiv i32 %sub74, %111, !dbg !2432
  store i32 %div76, i32* %nb_blocks, align 4, !dbg !2433
  br label %if.end77

if.end77:                                         ; preds = %if.else70, %if.then57
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2434
  %call78 = call i32 @ff_thread_get_buffer(%struct.AVCodecContext* %112, %struct.ThreadFrame* %frame, i32 0), !dbg !2436
  store i32 %call78, i32* %ret, align 4, !dbg !2437
  %cmp79 = icmp slt i32 %call78, 0, !dbg !2438
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !2439

if.then81:                                        ; preds = %if.end77
  %113 = load i32, i32* %ret, align 4, !dbg !2440
  store i32 %113, i32* %retval, align 4, !dbg !2441
  br label %return, !dbg !2441

if.end82:                                         ; preds = %if.end77
  %114 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2442
  %gb83 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %114, i32 0, i32 20, !dbg !2443
  store %struct.GetByteContext* %gb83, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !2444
  %115 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !2445
  %buffer_end.i163 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %115, i32 0, i32 1, !dbg !2446
  %116 = load i8*, i8** %buffer_end.i163, align 8, !dbg !2446
  %117 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !2447
  %buffer.i164 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %117, i32 0, i32 0, !dbg !2448
  %118 = load i8*, i8** %buffer.i164, align 8, !dbg !2448
  %sub.ptr.lhs.cast.i = ptrtoint i8* %116 to i64, !dbg !2449
  %sub.ptr.rhs.cast.i = ptrtoint i8* %118 to i64, !dbg !2449
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !2449
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !2445
  %119 = load i32, i32* %nb_blocks, align 4, !dbg !2450
  %mul85 = mul nsw i32 %119, 8, !dbg !2451
  %cmp86 = icmp ult i32 %conv.i, %mul85, !dbg !2452
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !2453

if.then88:                                        ; preds = %if.end82
  store i32 -1094995529, i32* %retval, align 4, !dbg !2454
  br label %return, !dbg !2454

if.end89:                                         ; preds = %if.end82
  %120 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2455
  %is_tile90 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %120, i32 0, i32 18, !dbg !2456
  %121 = load i32, i32* %is_tile90, align 4, !dbg !2456
  %tobool91 = icmp ne i32 %121, 0, !dbg !2455
  br i1 %tobool91, label %if.end121, label %land.lhs.true, !dbg !2457

land.lhs.true:                                    ; preds = %if.end89
  %122 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2458
  %gb92 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %122, i32 0, i32 20, !dbg !2459
  store %struct.GetByteContext* %gb92, %struct.GetByteContext** %g.addr.i165, align 8, !dbg !2460
  %123 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i165, align 8, !dbg !2461
  %buffer_end.i166 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %123, i32 0, i32 1, !dbg !2463
  %124 = load i8*, i8** %buffer_end.i166, align 8, !dbg !2463
  %125 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i165, align 8, !dbg !2464
  %buffer.i167 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %125, i32 0, i32 0, !dbg !2465
  %126 = load i8*, i8** %buffer.i167, align 8, !dbg !2465
  %sub.ptr.lhs.cast.i168 = ptrtoint i8* %124 to i64, !dbg !2466
  %sub.ptr.rhs.cast.i169 = ptrtoint i8* %126 to i64, !dbg !2466
  %sub.ptr.sub.i170 = sub i64 %sub.ptr.lhs.cast.i168, %sub.ptr.rhs.cast.i169, !dbg !2466
  %cmp.i171 = icmp slt i64 %sub.ptr.sub.i170, 8, !dbg !2467
  br i1 %cmp.i171, label %if.then.i172, label %if.end.i, !dbg !2468

if.then.i172:                                     ; preds = %land.lhs.true
  store i64 0, i64* %retval.i, align 8, !dbg !2469
  br label %bytestream2_peek_le64.exit, !dbg !2469

if.end.i:                                         ; preds = %land.lhs.true
  %127 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i165, align 8, !dbg !2471
  %buffer1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %127, i32 0, i32 0, !dbg !2473
  %128 = load i8*, i8** %buffer1.i, align 8, !dbg !2473
  %129 = bitcast i8* %128 to %union.unaligned_64*, !dbg !2474
  %l.i = bitcast %union.unaligned_64* %129 to i64*, !dbg !2474
  %130 = load i64, i64* %l.i, align 1, !dbg !2474
  store i64 %130, i64* %retval.i, align 8, !dbg !2475
  br label %bytestream2_peek_le64.exit, !dbg !2475

bytestream2_peek_le64.exit:                       ; preds = %if.then.i172, %if.end.i
  %131 = load i64, i64* %retval.i, align 8, !dbg !2476
  %cmp94 = icmp eq i64 %131, 0, !dbg !2478
  br i1 %cmp94, label %if.then96, label %if.end121, !dbg !2479

if.then96:                                        ; preds = %bytestream2_peek_le64.exit
  %132 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2480
  %avctx97 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %132, i32 0, i32 2, !dbg !2481
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx97, align 8, !dbg !2481
  %134 = bitcast %struct.AVCodecContext* %133 to i8*, !dbg !2480
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i32 0, i32 0)), !dbg !2482
  %135 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2483
  %gb98 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %135, i32 0, i32 20, !dbg !2484
  store %struct.GetByteContext* %gb98, %struct.GetByteContext** %g.addr.i173, align 8, !dbg !2485
  %136 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i173, align 8, !dbg !2486
  %buffer.i174 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %136, i32 0, i32 0, !dbg !2487
  %137 = load i8*, i8** %buffer.i174, align 8, !dbg !2487
  %138 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i173, align 8, !dbg !2488
  %buffer_start.i175 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %138, i32 0, i32 2, !dbg !2489
  %139 = load i8*, i8** %buffer_start.i175, align 8, !dbg !2489
  %sub.ptr.lhs.cast.i176 = ptrtoint i8* %137 to i64, !dbg !2490
  %sub.ptr.rhs.cast.i177 = ptrtoint i8* %139 to i64, !dbg !2490
  %sub.ptr.sub.i178 = sub i64 %sub.ptr.lhs.cast.i176, %sub.ptr.rhs.cast.i177, !dbg !2490
  %conv.i179 = trunc i64 %sub.ptr.sub.i178 to i32, !dbg !2491
  %conv100 = sext i32 %conv.i179 to i64, !dbg !2485
  store i64 %conv100, i64* %start_offset_table, align 8, !dbg !2492
  %140 = load i64, i64* %start_offset_table, align 8, !dbg !2493
  %141 = load i32, i32* %nb_blocks, align 4, !dbg !2494
  %mul101 = mul nsw i32 %141, 8, !dbg !2495
  %conv102 = sext i32 %mul101 to i64, !dbg !2494
  %add103 = add i64 %140, %conv102, !dbg !2496
  store i64 %add103, i64* %start_next_scanline, align 8, !dbg !2497
  %142 = load i64, i64* %start_offset_table, align 8, !dbg !2498
  %143 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2499
  %data104 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %143, i32 0, i32 3, !dbg !2500
  %144 = load i8*, i8** %data104, align 8, !dbg !2500
  %arrayidx105 = getelementptr inbounds i8, i8* %144, i64 %142, !dbg !2499
  %145 = load i32, i32* %nb_blocks, align 4, !dbg !2501
  %mul106 = mul nsw i32 %145, 8, !dbg !2502
  store %struct.PutByteContext* %offset_table_writer, %struct.PutByteContext** %p.addr.i303, align 8, !dbg !2503
  store i8* %arrayidx105, i8** %buf.addr.i304, align 8, !dbg !2503
  store i32 %mul106, i32* %buf_size.addr.i305, align 4, !dbg !2503
  %146 = load i32, i32* %buf_size.addr.i305, align 4, !dbg !2504
  %cmp.i306 = icmp sge i32 %146, 0, !dbg !2508
  br i1 %cmp.i306, label %bytestream2_init_writer.exit, label %if.then.i307, !dbg !2509

if.then.i307:                                     ; preds = %if.then96
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i32 147) #10, !dbg !2510
  call void @abort() #11, !dbg !2513
  unreachable, !dbg !2515

bytestream2_init_writer.exit:                     ; preds = %if.then96
  %147 = load i8*, i8** %buf.addr.i304, align 8, !dbg !2516
  %148 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i303, align 8, !dbg !2517
  %buffer.i309 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %148, i32 0, i32 0, !dbg !2518
  store i8* %147, i8** %buffer.i309, align 8, !dbg !2519
  %149 = load i8*, i8** %buf.addr.i304, align 8, !dbg !2520
  %150 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i303, align 8, !dbg !2521
  %buffer_start.i310 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %150, i32 0, i32 2, !dbg !2522
  store i8* %149, i8** %buffer_start.i310, align 8, !dbg !2523
  %151 = load i8*, i8** %buf.addr.i304, align 8, !dbg !2524
  %152 = load i32, i32* %buf_size.addr.i305, align 4, !dbg !2525
  %idx.ext.i311 = sext i32 %152 to i64, !dbg !2526
  %add.ptr.i312 = getelementptr inbounds i8, i8* %151, i64 %idx.ext.i311, !dbg !2526
  %153 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i303, align 8, !dbg !2527
  %buffer_end.i313 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %153, i32 0, i32 1, !dbg !2528
  store i8* %add.ptr.i312, i8** %buffer_end.i313, align 8, !dbg !2529
  %154 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i303, align 8, !dbg !2530
  %eof.i314 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %154, i32 0, i32 3, !dbg !2531
  store i32 0, i32* %eof.i314, align 8, !dbg !2532
  store i32 0, i32* %y, align 4, !dbg !2533
  br label %for.cond, !dbg !2534

for.cond:                                         ; preds = %for.inc, %bytestream2_init_writer.exit
  %155 = load i32, i32* %y, align 4, !dbg !2535
  %156 = load i32, i32* %nb_blocks, align 4, !dbg !2537
  %cmp107 = icmp slt i32 %155, %156, !dbg !2538
  br i1 %cmp107, label %for.body, label %for.end, !dbg !2539

for.body:                                         ; preds = %for.cond
  %157 = load i64, i64* %start_next_scanline, align 8, !dbg !2540
  store %struct.PutByteContext* %offset_table_writer, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2541
  store i64 %157, i64* %value.addr.i, align 8, !dbg !2541
  %158 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2542
  %eof.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %158, i32 0, i32 3, !dbg !2544
  %159 = load i32, i32* %eof.i, align 8, !dbg !2544
  %tobool.i = icmp ne i32 %159, 0, !dbg !2542
  br i1 %tobool.i, label %if.else.i, label %land.lhs.true.i, !dbg !2545

land.lhs.true.i:                                  ; preds = %for.body
  %160 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2546
  %buffer_end.i291 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %160, i32 0, i32 1, !dbg !2548
  %161 = load i8*, i8** %buffer_end.i291, align 8, !dbg !2548
  %162 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2549
  %buffer.i292 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %162, i32 0, i32 0, !dbg !2550
  %163 = load i8*, i8** %buffer.i292, align 8, !dbg !2550
  %sub.ptr.lhs.cast.i293 = ptrtoint i8* %161 to i64, !dbg !2551
  %sub.ptr.rhs.cast.i294 = ptrtoint i8* %163 to i64, !dbg !2551
  %sub.ptr.sub.i295 = sub i64 %sub.ptr.lhs.cast.i293, %sub.ptr.rhs.cast.i294, !dbg !2551
  %cmp.i296 = icmp sge i64 %sub.ptr.sub.i295, 8, !dbg !2552
  br i1 %cmp.i296, label %if.then.i301, label %if.else.i, !dbg !2553

if.then.i301:                                     ; preds = %land.lhs.true.i
  %164 = load i64, i64* %value.addr.i, align 8, !dbg !2554
  %165 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2557
  %buffer1.i297 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %165, i32 0, i32 0, !dbg !2558
  %166 = load i8*, i8** %buffer1.i297, align 8, !dbg !2558
  %167 = bitcast i8* %166 to %union.unaligned_64*, !dbg !2559
  %l.i298 = bitcast %union.unaligned_64* %167 to i64*, !dbg !2559
  store i64 %164, i64* %l.i298, align 1, !dbg !2560
  %168 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2561
  %buffer2.i299 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %168, i32 0, i32 0, !dbg !2562
  %169 = load i8*, i8** %buffer2.i299, align 8, !dbg !2563
  %add.ptr.i300 = getelementptr inbounds i8, i8* %169, i64 8, !dbg !2563
  store i8* %add.ptr.i300, i8** %buffer2.i299, align 8, !dbg !2563
  br label %bytestream2_put_le64.exit, !dbg !2564

if.else.i:                                        ; preds = %land.lhs.true.i, %for.body
  %170 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !2565
  %eof3.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %170, i32 0, i32 3, !dbg !2567
  store i32 1, i32* %eof3.i, align 8, !dbg !2568
  br label %bytestream2_put_le64.exit, !dbg !2541

bytestream2_put_le64.exit:                        ; preds = %if.then.i301, %if.else.i
  %171 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2569
  %gb109 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %171, i32 0, i32 20, !dbg !2570
  %172 = load i64, i64* %start_next_scanline, align 8, !dbg !2571
  %add110 = add i64 %172, 4, !dbg !2572
  %conv111 = trunc i64 %add110 to i32, !dbg !2571
  store %struct.GetByteContext* %gb109, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2573
  store i32 %conv111, i32* %offset.addr.i219, align 4, !dbg !2573
  store i32 0, i32* %whence.addr.i220, align 4, !dbg !2573
  %173 = load i32, i32* %whence.addr.i220, align 4, !dbg !2574
  switch i32 %173, label %sw.default.i282 [
    i32 1, label %sw.bb.i235
    i32 2, label %sw.bb7.i253
    i32 0, label %sw.bb20.i271
  ], !dbg !2575

sw.bb.i235:                                       ; preds = %bytestream2_put_le64.exit
  %174 = load i32, i32* %offset.addr.i219, align 4, !dbg !2576
  %175 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2577
  %buffer.i221 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %175, i32 0, i32 0, !dbg !2578
  %176 = load i8*, i8** %buffer.i221, align 8, !dbg !2578
  %177 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2579
  %buffer_start.i222 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %177, i32 0, i32 2, !dbg !2580
  %178 = load i8*, i8** %buffer_start.i222, align 8, !dbg !2580
  %sub.ptr.lhs.cast.i223 = ptrtoint i8* %176 to i64, !dbg !2581
  %sub.ptr.rhs.cast.i224 = ptrtoint i8* %178 to i64, !dbg !2581
  %sub.ptr.sub.i225 = sub i64 %sub.ptr.lhs.cast.i223, %sub.ptr.rhs.cast.i224, !dbg !2581
  %sub.i226 = sub nsw i64 0, %sub.ptr.sub.i225, !dbg !2582
  %conv.i227 = trunc i64 %sub.i226 to i32, !dbg !2582
  %179 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2583
  %buffer_end.i228 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %179, i32 0, i32 1, !dbg !2584
  %180 = load i8*, i8** %buffer_end.i228, align 8, !dbg !2584
  %181 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2585
  %buffer1.i229 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %181, i32 0, i32 0, !dbg !2586
  %182 = load i8*, i8** %buffer1.i229, align 8, !dbg !2586
  %sub.ptr.lhs.cast2.i230 = ptrtoint i8* %180 to i64, !dbg !2587
  %sub.ptr.rhs.cast3.i231 = ptrtoint i8* %182 to i64, !dbg !2587
  %sub.ptr.sub4.i232 = sub i64 %sub.ptr.lhs.cast2.i230, %sub.ptr.rhs.cast3.i231, !dbg !2587
  %conv5.i233 = trunc i64 %sub.ptr.sub4.i232 to i32, !dbg !2583
  store i32 %174, i32* %a.addr.i.i214, align 4, !dbg !2588
  store i32 %conv.i227, i32* %amin.addr.i.i215, align 4, !dbg !2588
  store i32 %conv5.i233, i32* %amax.addr.i.i216, align 4, !dbg !2588
  %183 = load i32, i32* %a.addr.i.i214, align 4, !dbg !2589
  %184 = load i32, i32* %amin.addr.i.i215, align 4, !dbg !2591
  %cmp.i.i234 = icmp slt i32 %183, %184, !dbg !2592
  br i1 %cmp.i.i234, label %if.then.i.i236, label %if.else.i.i238, !dbg !2593

if.then.i.i236:                                   ; preds = %sw.bb.i235
  %185 = load i32, i32* %amin.addr.i.i215, align 4, !dbg !2594
  store i32 %185, i32* %retval.i.i213, align 4, !dbg !2596
  br label %av_clip_c.exit.i244, !dbg !2596

if.else.i.i238:                                   ; preds = %sw.bb.i235
  %186 = load i32, i32* %a.addr.i.i214, align 4, !dbg !2597
  %187 = load i32, i32* %amax.addr.i.i216, align 4, !dbg !2599
  %cmp1.i.i237 = icmp sgt i32 %186, %187, !dbg !2600
  br i1 %cmp1.i.i237, label %if.then2.i.i239, label %if.else3.i.i240, !dbg !2601

if.then2.i.i239:                                  ; preds = %if.else.i.i238
  %188 = load i32, i32* %amax.addr.i.i216, align 4, !dbg !2602
  store i32 %188, i32* %retval.i.i213, align 4, !dbg !2604
  br label %av_clip_c.exit.i244, !dbg !2604

if.else3.i.i240:                                  ; preds = %if.else.i.i238
  %189 = load i32, i32* %a.addr.i.i214, align 4, !dbg !2605
  store i32 %189, i32* %retval.i.i213, align 4, !dbg !2606
  br label %av_clip_c.exit.i244, !dbg !2606

av_clip_c.exit.i244:                              ; preds = %if.else3.i.i240, %if.then2.i.i239, %if.then.i.i236
  %190 = load i32, i32* %retval.i.i213, align 4, !dbg !2607
  store i32 %190, i32* %offset.addr.i219, align 4, !dbg !2608
  %191 = load i32, i32* %offset.addr.i219, align 4, !dbg !2609
  %192 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2610
  %buffer6.i241 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %192, i32 0, i32 0, !dbg !2611
  %193 = load i8*, i8** %buffer6.i241, align 8, !dbg !2612
  %idx.ext.i242 = sext i32 %191 to i64, !dbg !2612
  %add.ptr.i243 = getelementptr inbounds i8, i8* %193, i64 %idx.ext.i242, !dbg !2612
  store i8* %add.ptr.i243, i8** %buffer6.i241, align 8, !dbg !2612
  br label %sw.epilog.i289, !dbg !2613

sw.bb7.i253:                                      ; preds = %bytestream2_put_le64.exit
  %194 = load i32, i32* %offset.addr.i219, align 4, !dbg !2614
  %195 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2615
  %buffer_end8.i245 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %195, i32 0, i32 1, !dbg !2616
  %196 = load i8*, i8** %buffer_end8.i245, align 8, !dbg !2616
  %197 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2617
  %buffer_start9.i246 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %197, i32 0, i32 2, !dbg !2618
  %198 = load i8*, i8** %buffer_start9.i246, align 8, !dbg !2618
  %sub.ptr.lhs.cast10.i247 = ptrtoint i8* %196 to i64, !dbg !2619
  %sub.ptr.rhs.cast11.i248 = ptrtoint i8* %198 to i64, !dbg !2619
  %sub.ptr.sub12.i249 = sub i64 %sub.ptr.lhs.cast10.i247, %sub.ptr.rhs.cast11.i248, !dbg !2619
  %sub13.i250 = sub nsw i64 0, %sub.ptr.sub12.i249, !dbg !2620
  %conv14.i251 = trunc i64 %sub13.i250 to i32, !dbg !2620
  store i32 %194, i32* %a.addr.i45.i205, align 4, !dbg !2621
  store i32 %conv14.i251, i32* %amin.addr.i46.i206, align 4, !dbg !2621
  store i32 0, i32* %amax.addr.i47.i207, align 4, !dbg !2621
  %199 = load i32, i32* %a.addr.i45.i205, align 4, !dbg !2622
  %200 = load i32, i32* %amin.addr.i46.i206, align 4, !dbg !2623
  %cmp.i48.i252 = icmp slt i32 %199, %200, !dbg !2624
  br i1 %cmp.i48.i252, label %if.then.i49.i254, label %if.else.i51.i256, !dbg !2625

if.then.i49.i254:                                 ; preds = %sw.bb7.i253
  %201 = load i32, i32* %amin.addr.i46.i206, align 4, !dbg !2626
  store i32 %201, i32* %retval.i44.i204, align 4, !dbg !2627
  br label %av_clip_c.exit54.i263, !dbg !2627

if.else.i51.i256:                                 ; preds = %sw.bb7.i253
  %202 = load i32, i32* %a.addr.i45.i205, align 4, !dbg !2628
  %203 = load i32, i32* %amax.addr.i47.i207, align 4, !dbg !2629
  %cmp1.i50.i255 = icmp sgt i32 %202, %203, !dbg !2630
  br i1 %cmp1.i50.i255, label %if.then2.i52.i257, label %if.else3.i53.i258, !dbg !2631

if.then2.i52.i257:                                ; preds = %if.else.i51.i256
  %204 = load i32, i32* %amax.addr.i47.i207, align 4, !dbg !2632
  store i32 %204, i32* %retval.i44.i204, align 4, !dbg !2633
  br label %av_clip_c.exit54.i263, !dbg !2633

if.else3.i53.i258:                                ; preds = %if.else.i51.i256
  %205 = load i32, i32* %a.addr.i45.i205, align 4, !dbg !2634
  store i32 %205, i32* %retval.i44.i204, align 4, !dbg !2635
  br label %av_clip_c.exit54.i263, !dbg !2635

av_clip_c.exit54.i263:                            ; preds = %if.else3.i53.i258, %if.then2.i52.i257, %if.then.i49.i254
  %206 = load i32, i32* %retval.i44.i204, align 4, !dbg !2636
  store i32 %206, i32* %offset.addr.i219, align 4, !dbg !2637
  %207 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2638
  %buffer_end16.i259 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %207, i32 0, i32 1, !dbg !2639
  %208 = load i8*, i8** %buffer_end16.i259, align 8, !dbg !2639
  %209 = load i32, i32* %offset.addr.i219, align 4, !dbg !2640
  %idx.ext17.i260 = sext i32 %209 to i64, !dbg !2641
  %add.ptr18.i261 = getelementptr inbounds i8, i8* %208, i64 %idx.ext17.i260, !dbg !2641
  %210 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2642
  %buffer19.i262 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %210, i32 0, i32 0, !dbg !2643
  store i8* %add.ptr18.i261, i8** %buffer19.i262, align 8, !dbg !2644
  br label %sw.epilog.i289, !dbg !2645

sw.bb20.i271:                                     ; preds = %bytestream2_put_le64.exit
  %211 = load i32, i32* %offset.addr.i219, align 4, !dbg !2646
  %212 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2647
  %buffer_end21.i264 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %212, i32 0, i32 1, !dbg !2648
  %213 = load i8*, i8** %buffer_end21.i264, align 8, !dbg !2648
  %214 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2649
  %buffer_start22.i265 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %214, i32 0, i32 2, !dbg !2650
  %215 = load i8*, i8** %buffer_start22.i265, align 8, !dbg !2650
  %sub.ptr.lhs.cast23.i266 = ptrtoint i8* %213 to i64, !dbg !2651
  %sub.ptr.rhs.cast24.i267 = ptrtoint i8* %215 to i64, !dbg !2651
  %sub.ptr.sub25.i268 = sub i64 %sub.ptr.lhs.cast23.i266, %sub.ptr.rhs.cast24.i267, !dbg !2651
  %conv26.i269 = trunc i64 %sub.ptr.sub25.i268 to i32, !dbg !2647
  store i32 %211, i32* %a.addr.i34.i209, align 4, !dbg !2652
  store i32 0, i32* %amin.addr.i35.i210, align 4, !dbg !2652
  store i32 %conv26.i269, i32* %amax.addr.i36.i211, align 4, !dbg !2652
  %216 = load i32, i32* %a.addr.i34.i209, align 4, !dbg !2653
  %217 = load i32, i32* %amin.addr.i35.i210, align 4, !dbg !2654
  %cmp.i37.i270 = icmp slt i32 %216, %217, !dbg !2655
  br i1 %cmp.i37.i270, label %if.then.i38.i272, label %if.else.i40.i274, !dbg !2656

if.then.i38.i272:                                 ; preds = %sw.bb20.i271
  %218 = load i32, i32* %amin.addr.i35.i210, align 4, !dbg !2657
  store i32 %218, i32* %retval.i33.i208, align 4, !dbg !2658
  br label %av_clip_c.exit43.i281, !dbg !2658

if.else.i40.i274:                                 ; preds = %sw.bb20.i271
  %219 = load i32, i32* %a.addr.i34.i209, align 4, !dbg !2659
  %220 = load i32, i32* %amax.addr.i36.i211, align 4, !dbg !2660
  %cmp1.i39.i273 = icmp sgt i32 %219, %220, !dbg !2661
  br i1 %cmp1.i39.i273, label %if.then2.i41.i275, label %if.else3.i42.i276, !dbg !2662

if.then2.i41.i275:                                ; preds = %if.else.i40.i274
  %221 = load i32, i32* %amax.addr.i36.i211, align 4, !dbg !2663
  store i32 %221, i32* %retval.i33.i208, align 4, !dbg !2664
  br label %av_clip_c.exit43.i281, !dbg !2664

if.else3.i42.i276:                                ; preds = %if.else.i40.i274
  %222 = load i32, i32* %a.addr.i34.i209, align 4, !dbg !2665
  store i32 %222, i32* %retval.i33.i208, align 4, !dbg !2666
  br label %av_clip_c.exit43.i281, !dbg !2666

av_clip_c.exit43.i281:                            ; preds = %if.else3.i42.i276, %if.then2.i41.i275, %if.then.i38.i272
  %223 = load i32, i32* %retval.i33.i208, align 4, !dbg !2667
  store i32 %223, i32* %offset.addr.i219, align 4, !dbg !2668
  %224 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2669
  %buffer_start28.i277 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %224, i32 0, i32 2, !dbg !2670
  %225 = load i8*, i8** %buffer_start28.i277, align 8, !dbg !2670
  %226 = load i32, i32* %offset.addr.i219, align 4, !dbg !2671
  %idx.ext29.i278 = sext i32 %226 to i64, !dbg !2672
  %add.ptr30.i279 = getelementptr inbounds i8, i8* %225, i64 %idx.ext29.i278, !dbg !2672
  %227 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2673
  %buffer31.i280 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %227, i32 0, i32 0, !dbg !2674
  store i8* %add.ptr30.i279, i8** %buffer31.i280, align 8, !dbg !2675
  br label %sw.epilog.i289, !dbg !2676

sw.default.i282:                                  ; preds = %bytestream2_put_le64.exit
  store i32 -22, i32* %retval.i217, align 4, !dbg !2677
  br label %bytestream2_seek.exit290, !dbg !2677

sw.epilog.i289:                                   ; preds = %av_clip_c.exit43.i281, %av_clip_c.exit54.i263, %av_clip_c.exit.i244
  %228 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i218, align 8, !dbg !2678
  store %struct.GetByteContext* %228, %struct.GetByteContext** %g.addr.i.i212, align 8, !dbg !2679
  %229 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i212, align 8, !dbg !2680
  %buffer.i.i283 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %229, i32 0, i32 0, !dbg !2681
  %230 = load i8*, i8** %buffer.i.i283, align 8, !dbg !2681
  %231 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i212, align 8, !dbg !2682
  %buffer_start.i.i284 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %231, i32 0, i32 2, !dbg !2683
  %232 = load i8*, i8** %buffer_start.i.i284, align 8, !dbg !2683
  %sub.ptr.lhs.cast.i.i285 = ptrtoint i8* %230 to i64, !dbg !2684
  %sub.ptr.rhs.cast.i.i286 = ptrtoint i8* %232 to i64, !dbg !2684
  %sub.ptr.sub.i.i287 = sub i64 %sub.ptr.lhs.cast.i.i285, %sub.ptr.rhs.cast.i.i286, !dbg !2684
  %conv.i.i288 = trunc i64 %sub.ptr.sub.i.i287 to i32, !dbg !2685
  store i32 %conv.i.i288, i32* %retval.i217, align 4, !dbg !2686
  br label %bytestream2_seek.exit290, !dbg !2686

bytestream2_seek.exit290:                         ; preds = %sw.default.i282, %sw.epilog.i289
  %233 = load i32, i32* %retval.i217, align 4, !dbg !2687
  %234 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2688
  %gb113 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %234, i32 0, i32 20, !dbg !2689
  store %struct.GetByteContext* %gb113, %struct.GetByteContext** %g.addr.i194, align 8, !dbg !2690
  %235 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i194, align 8, !dbg !2691
  %buffer_end.i195 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %235, i32 0, i32 1, !dbg !2693
  %236 = load i8*, i8** %buffer_end.i195, align 8, !dbg !2693
  %237 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i194, align 8, !dbg !2694
  %buffer.i196 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %237, i32 0, i32 0, !dbg !2695
  %238 = load i8*, i8** %buffer.i196, align 8, !dbg !2695
  %sub.ptr.lhs.cast.i197 = ptrtoint i8* %236 to i64, !dbg !2696
  %sub.ptr.rhs.cast.i198 = ptrtoint i8* %238 to i64, !dbg !2696
  %sub.ptr.sub.i199 = sub i64 %sub.ptr.lhs.cast.i197, %sub.ptr.rhs.cast.i198, !dbg !2696
  %cmp.i200 = icmp slt i64 %sub.ptr.sub.i199, 4, !dbg !2697
  br i1 %cmp.i200, label %if.then.i201, label %if.end.i203, !dbg !2698

if.then.i201:                                     ; preds = %bytestream2_seek.exit290
  %239 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i194, align 8, !dbg !2699
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %239, i32 0, i32 1, !dbg !2702
  %240 = load i8*, i8** %buffer_end1.i, align 8, !dbg !2702
  %241 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i194, align 8, !dbg !2703
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %241, i32 0, i32 0, !dbg !2704
  store i8* %240, i8** %buffer2.i, align 8, !dbg !2705
  store i32 0, i32* %retval.i193, align 4, !dbg !2706
  br label %bytestream2_get_le32.exit, !dbg !2706

if.end.i203:                                      ; preds = %bytestream2_seek.exit290
  %242 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i194, align 8, !dbg !2707
  store %struct.GetByteContext* %242, %struct.GetByteContext** %g.addr.i.i192, align 8, !dbg !2708
  %243 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i192, align 8, !dbg !2709
  %buffer.i.i202 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %243, i32 0, i32 0, !dbg !2710
  store i8** %buffer.i.i202, i8*** %b.addr.i.i.i, align 8, !dbg !2711
  %244 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2712
  %245 = load i8*, i8** %244, align 8, !dbg !2713
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %245, i64 4, !dbg !2713
  store i8* %add.ptr.i.i.i, i8** %244, align 8, !dbg !2713
  %246 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2714
  %247 = load i8*, i8** %246, align 8, !dbg !2715
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %247, i64 -4, !dbg !2716
  %248 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !2717
  %l.i.i.i = bitcast %union.unaligned_32* %248 to i32*, !dbg !2717
  %249 = load i32, i32* %l.i.i.i, align 1, !dbg !2717
  store i32 %249, i32* %retval.i193, align 4, !dbg !2718
  br label %bytestream2_get_le32.exit, !dbg !2718

bytestream2_get_le32.exit:                        ; preds = %if.then.i201, %if.end.i203
  %250 = load i32, i32* %retval.i193, align 4, !dbg !2719
  %add115 = add i32 %250, 8, !dbg !2721
  %conv116 = zext i32 %add115 to i64, !dbg !2722
  %251 = load i64, i64* %start_next_scanline, align 8, !dbg !2723
  %add117 = add i64 %251, %conv116, !dbg !2723
  store i64 %add117, i64* %start_next_scanline, align 8, !dbg !2723
  br label %for.inc, !dbg !2724

for.inc:                                          ; preds = %bytestream2_get_le32.exit
  %252 = load i32, i32* %y, align 4, !dbg !2725
  %inc = add nsw i32 %252, 1, !dbg !2725
  store i32 %inc, i32* %y, align 4, !dbg !2725
  br label %for.cond, !dbg !2727, !llvm.loop !2728

for.end:                                          ; preds = %for.cond
  %253 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2730
  %gb118 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %253, i32 0, i32 20, !dbg !2731
  %254 = load i64, i64* %start_offset_table, align 8, !dbg !2732
  %conv119 = trunc i64 %254 to i32, !dbg !2732
  store %struct.GetByteContext* %gb118, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2733
  store i32 %conv119, i32* %offset.addr.i, align 4, !dbg !2733
  store i32 0, i32* %whence.addr.i, align 4, !dbg !2733
  %255 = load i32, i32* %whence.addr.i, align 4, !dbg !2734
  switch i32 %255, label %sw.default.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb7.i
    i32 0, label %sw.bb20.i
  ], !dbg !2735

sw.bb.i:                                          ; preds = %for.end
  %256 = load i32, i32* %offset.addr.i, align 4, !dbg !2736
  %257 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2737
  %buffer.i182 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %257, i32 0, i32 0, !dbg !2738
  %258 = load i8*, i8** %buffer.i182, align 8, !dbg !2738
  %259 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2739
  %buffer_start.i183 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %259, i32 0, i32 2, !dbg !2740
  %260 = load i8*, i8** %buffer_start.i183, align 8, !dbg !2740
  %sub.ptr.lhs.cast.i184 = ptrtoint i8* %258 to i64, !dbg !2741
  %sub.ptr.rhs.cast.i185 = ptrtoint i8* %260 to i64, !dbg !2741
  %sub.ptr.sub.i186 = sub i64 %sub.ptr.lhs.cast.i184, %sub.ptr.rhs.cast.i185, !dbg !2741
  %sub.i = sub nsw i64 0, %sub.ptr.sub.i186, !dbg !2742
  %conv.i187 = trunc i64 %sub.i to i32, !dbg !2742
  %261 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2743
  %buffer_end.i188 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %261, i32 0, i32 1, !dbg !2744
  %262 = load i8*, i8** %buffer_end.i188, align 8, !dbg !2744
  %263 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2745
  %buffer1.i189 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %263, i32 0, i32 0, !dbg !2746
  %264 = load i8*, i8** %buffer1.i189, align 8, !dbg !2746
  %sub.ptr.lhs.cast2.i = ptrtoint i8* %262 to i64, !dbg !2747
  %sub.ptr.rhs.cast3.i = ptrtoint i8* %264 to i64, !dbg !2747
  %sub.ptr.sub4.i = sub i64 %sub.ptr.lhs.cast2.i, %sub.ptr.rhs.cast3.i, !dbg !2747
  %conv5.i = trunc i64 %sub.ptr.sub4.i to i32, !dbg !2743
  store i32 %256, i32* %a.addr.i.i, align 4, !dbg !2748
  store i32 %conv.i187, i32* %amin.addr.i.i, align 4, !dbg !2748
  store i32 %conv5.i, i32* %amax.addr.i.i, align 4, !dbg !2748
  %265 = load i32, i32* %a.addr.i.i, align 4, !dbg !2749
  %266 = load i32, i32* %amin.addr.i.i, align 4, !dbg !2750
  %cmp.i.i = icmp slt i32 %265, %266, !dbg !2751
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !2752

if.then.i.i:                                      ; preds = %sw.bb.i
  %267 = load i32, i32* %amin.addr.i.i, align 4, !dbg !2753
  store i32 %267, i32* %retval.i.i, align 4, !dbg !2754
  br label %av_clip_c.exit.i, !dbg !2754

if.else.i.i:                                      ; preds = %sw.bb.i
  %268 = load i32, i32* %a.addr.i.i, align 4, !dbg !2755
  %269 = load i32, i32* %amax.addr.i.i, align 4, !dbg !2756
  %cmp1.i.i = icmp sgt i32 %268, %269, !dbg !2757
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !2758

if.then2.i.i:                                     ; preds = %if.else.i.i
  %270 = load i32, i32* %amax.addr.i.i, align 4, !dbg !2759
  store i32 %270, i32* %retval.i.i, align 4, !dbg !2760
  br label %av_clip_c.exit.i, !dbg !2760

if.else3.i.i:                                     ; preds = %if.else.i.i
  %271 = load i32, i32* %a.addr.i.i, align 4, !dbg !2761
  store i32 %271, i32* %retval.i.i, align 4, !dbg !2762
  br label %av_clip_c.exit.i, !dbg !2762

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %272 = load i32, i32* %retval.i.i, align 4, !dbg !2763
  store i32 %272, i32* %offset.addr.i, align 4, !dbg !2764
  %273 = load i32, i32* %offset.addr.i, align 4, !dbg !2765
  %274 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2766
  %buffer6.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %274, i32 0, i32 0, !dbg !2767
  %275 = load i8*, i8** %buffer6.i, align 8, !dbg !2768
  %idx.ext.i190 = sext i32 %273 to i64, !dbg !2768
  %add.ptr.i191 = getelementptr inbounds i8, i8* %275, i64 %idx.ext.i190, !dbg !2768
  store i8* %add.ptr.i191, i8** %buffer6.i, align 8, !dbg !2768
  br label %sw.epilog.i, !dbg !2769

sw.bb7.i:                                         ; preds = %for.end
  %276 = load i32, i32* %offset.addr.i, align 4, !dbg !2770
  %277 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2771
  %buffer_end8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %277, i32 0, i32 1, !dbg !2772
  %278 = load i8*, i8** %buffer_end8.i, align 8, !dbg !2772
  %279 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2773
  %buffer_start9.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %279, i32 0, i32 2, !dbg !2774
  %280 = load i8*, i8** %buffer_start9.i, align 8, !dbg !2774
  %sub.ptr.lhs.cast10.i = ptrtoint i8* %278 to i64, !dbg !2775
  %sub.ptr.rhs.cast11.i = ptrtoint i8* %280 to i64, !dbg !2775
  %sub.ptr.sub12.i = sub i64 %sub.ptr.lhs.cast10.i, %sub.ptr.rhs.cast11.i, !dbg !2775
  %sub13.i = sub nsw i64 0, %sub.ptr.sub12.i, !dbg !2776
  %conv14.i = trunc i64 %sub13.i to i32, !dbg !2776
  store i32 %276, i32* %a.addr.i45.i, align 4, !dbg !2777
  store i32 %conv14.i, i32* %amin.addr.i46.i, align 4, !dbg !2777
  store i32 0, i32* %amax.addr.i47.i, align 4, !dbg !2777
  %281 = load i32, i32* %a.addr.i45.i, align 4, !dbg !2778
  %282 = load i32, i32* %amin.addr.i46.i, align 4, !dbg !2779
  %cmp.i48.i = icmp slt i32 %281, %282, !dbg !2780
  br i1 %cmp.i48.i, label %if.then.i49.i, label %if.else.i51.i, !dbg !2781

if.then.i49.i:                                    ; preds = %sw.bb7.i
  %283 = load i32, i32* %amin.addr.i46.i, align 4, !dbg !2782
  store i32 %283, i32* %retval.i44.i, align 4, !dbg !2783
  br label %av_clip_c.exit54.i, !dbg !2783

if.else.i51.i:                                    ; preds = %sw.bb7.i
  %284 = load i32, i32* %a.addr.i45.i, align 4, !dbg !2784
  %285 = load i32, i32* %amax.addr.i47.i, align 4, !dbg !2785
  %cmp1.i50.i = icmp sgt i32 %284, %285, !dbg !2786
  br i1 %cmp1.i50.i, label %if.then2.i52.i, label %if.else3.i53.i, !dbg !2787

if.then2.i52.i:                                   ; preds = %if.else.i51.i
  %286 = load i32, i32* %amax.addr.i47.i, align 4, !dbg !2788
  store i32 %286, i32* %retval.i44.i, align 4, !dbg !2789
  br label %av_clip_c.exit54.i, !dbg !2789

if.else3.i53.i:                                   ; preds = %if.else.i51.i
  %287 = load i32, i32* %a.addr.i45.i, align 4, !dbg !2790
  store i32 %287, i32* %retval.i44.i, align 4, !dbg !2791
  br label %av_clip_c.exit54.i, !dbg !2791

av_clip_c.exit54.i:                               ; preds = %if.else3.i53.i, %if.then2.i52.i, %if.then.i49.i
  %288 = load i32, i32* %retval.i44.i, align 4, !dbg !2792
  store i32 %288, i32* %offset.addr.i, align 4, !dbg !2793
  %289 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2794
  %buffer_end16.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %289, i32 0, i32 1, !dbg !2795
  %290 = load i8*, i8** %buffer_end16.i, align 8, !dbg !2795
  %291 = load i32, i32* %offset.addr.i, align 4, !dbg !2796
  %idx.ext17.i = sext i32 %291 to i64, !dbg !2797
  %add.ptr18.i = getelementptr inbounds i8, i8* %290, i64 %idx.ext17.i, !dbg !2797
  %292 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2798
  %buffer19.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %292, i32 0, i32 0, !dbg !2799
  store i8* %add.ptr18.i, i8** %buffer19.i, align 8, !dbg !2800
  br label %sw.epilog.i, !dbg !2801

sw.bb20.i:                                        ; preds = %for.end
  %293 = load i32, i32* %offset.addr.i, align 4, !dbg !2802
  %294 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2803
  %buffer_end21.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %294, i32 0, i32 1, !dbg !2804
  %295 = load i8*, i8** %buffer_end21.i, align 8, !dbg !2804
  %296 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2805
  %buffer_start22.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %296, i32 0, i32 2, !dbg !2806
  %297 = load i8*, i8** %buffer_start22.i, align 8, !dbg !2806
  %sub.ptr.lhs.cast23.i = ptrtoint i8* %295 to i64, !dbg !2807
  %sub.ptr.rhs.cast24.i = ptrtoint i8* %297 to i64, !dbg !2807
  %sub.ptr.sub25.i = sub i64 %sub.ptr.lhs.cast23.i, %sub.ptr.rhs.cast24.i, !dbg !2807
  %conv26.i = trunc i64 %sub.ptr.sub25.i to i32, !dbg !2803
  store i32 %293, i32* %a.addr.i34.i, align 4, !dbg !2808
  store i32 0, i32* %amin.addr.i35.i, align 4, !dbg !2808
  store i32 %conv26.i, i32* %amax.addr.i36.i, align 4, !dbg !2808
  %298 = load i32, i32* %a.addr.i34.i, align 4, !dbg !2809
  %299 = load i32, i32* %amin.addr.i35.i, align 4, !dbg !2810
  %cmp.i37.i = icmp slt i32 %298, %299, !dbg !2811
  br i1 %cmp.i37.i, label %if.then.i38.i, label %if.else.i40.i, !dbg !2812

if.then.i38.i:                                    ; preds = %sw.bb20.i
  %300 = load i32, i32* %amin.addr.i35.i, align 4, !dbg !2813
  store i32 %300, i32* %retval.i33.i, align 4, !dbg !2814
  br label %av_clip_c.exit43.i, !dbg !2814

if.else.i40.i:                                    ; preds = %sw.bb20.i
  %301 = load i32, i32* %a.addr.i34.i, align 4, !dbg !2815
  %302 = load i32, i32* %amax.addr.i36.i, align 4, !dbg !2816
  %cmp1.i39.i = icmp sgt i32 %301, %302, !dbg !2817
  br i1 %cmp1.i39.i, label %if.then2.i41.i, label %if.else3.i42.i, !dbg !2818

if.then2.i41.i:                                   ; preds = %if.else.i40.i
  %303 = load i32, i32* %amax.addr.i36.i, align 4, !dbg !2819
  store i32 %303, i32* %retval.i33.i, align 4, !dbg !2820
  br label %av_clip_c.exit43.i, !dbg !2820

if.else3.i42.i:                                   ; preds = %if.else.i40.i
  %304 = load i32, i32* %a.addr.i34.i, align 4, !dbg !2821
  store i32 %304, i32* %retval.i33.i, align 4, !dbg !2822
  br label %av_clip_c.exit43.i, !dbg !2822

av_clip_c.exit43.i:                               ; preds = %if.else3.i42.i, %if.then2.i41.i, %if.then.i38.i
  %305 = load i32, i32* %retval.i33.i, align 4, !dbg !2823
  store i32 %305, i32* %offset.addr.i, align 4, !dbg !2824
  %306 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2825
  %buffer_start28.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %306, i32 0, i32 2, !dbg !2826
  %307 = load i8*, i8** %buffer_start28.i, align 8, !dbg !2826
  %308 = load i32, i32* %offset.addr.i, align 4, !dbg !2827
  %idx.ext29.i = sext i32 %308 to i64, !dbg !2828
  %add.ptr30.i = getelementptr inbounds i8, i8* %307, i64 %idx.ext29.i, !dbg !2828
  %309 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2829
  %buffer31.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %309, i32 0, i32 0, !dbg !2830
  store i8* %add.ptr30.i, i8** %buffer31.i, align 8, !dbg !2831
  br label %sw.epilog.i, !dbg !2832

sw.default.i:                                     ; preds = %for.end
  store i32 -22, i32* %retval.i180, align 4, !dbg !2833
  br label %bytestream2_seek.exit, !dbg !2833

sw.epilog.i:                                      ; preds = %av_clip_c.exit43.i, %av_clip_c.exit54.i, %av_clip_c.exit.i
  %310 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i181, align 8, !dbg !2834
  store %struct.GetByteContext* %310, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2835
  %311 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2836
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %311, i32 0, i32 0, !dbg !2837
  %312 = load i8*, i8** %buffer.i.i, align 8, !dbg !2837
  %313 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2838
  %buffer_start.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %313, i32 0, i32 2, !dbg !2839
  %314 = load i8*, i8** %buffer_start.i.i, align 8, !dbg !2839
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %312 to i64, !dbg !2840
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %314 to i64, !dbg !2840
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i, !dbg !2840
  %conv.i.i = trunc i64 %sub.ptr.sub.i.i to i32, !dbg !2841
  store i32 %conv.i.i, i32* %retval.i180, align 4, !dbg !2842
  br label %bytestream2_seek.exit, !dbg !2842

bytestream2_seek.exit:                            ; preds = %sw.default.i, %sw.epilog.i
  %315 = load i32, i32* %retval.i180, align 4, !dbg !2843
  br label %if.end121, !dbg !2844

if.end121:                                        ; preds = %bytestream2_seek.exit, %bytestream2_peek_le64.exit, %if.end89
  %316 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2845
  %data122 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %316, i32 0, i32 3, !dbg !2846
  %317 = load i8*, i8** %data122, align 8, !dbg !2846
  %318 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2847
  %buf = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %318, i32 0, i32 21, !dbg !2848
  store i8* %317, i8** %buf, align 8, !dbg !2849
  %319 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2850
  %size123 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %319, i32 0, i32 4, !dbg !2851
  %320 = load i32, i32* %size123, align 8, !dbg !2851
  %321 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2852
  %buf_size = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %321, i32 0, i32 22, !dbg !2853
  store i32 %320, i32* %buf_size, align 8, !dbg !2854
  %322 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2855
  %data124 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %322, i32 0, i32 0, !dbg !2856
  %arrayidx125 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data124, i64 0, i64 0, !dbg !2855
  %323 = load i8*, i8** %arrayidx125, align 8, !dbg !2855
  store i8* %323, i8** %ptr, align 8, !dbg !2857
  store i32 0, i32* %y, align 4, !dbg !2858
  br label %for.cond126, !dbg !2860

for.cond126:                                      ; preds = %for.inc133, %if.end121
  %324 = load i32, i32* %y, align 4, !dbg !2861
  %325 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2864
  %ymin127 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %325, i32 0, i32 13, !dbg !2865
  %326 = load i32, i32* %ymin127, align 4, !dbg !2865
  %cmp128 = icmp ult i32 %324, %326, !dbg !2866
  br i1 %cmp128, label %for.body130, label %for.end135, !dbg !2867

for.body130:                                      ; preds = %for.cond126
  %327 = load i8*, i8** %ptr, align 8, !dbg !2868
  %328 = load i32, i32* %out_line_size, align 4, !dbg !2870
  %conv131 = sext i32 %328 to i64, !dbg !2870
  call void @llvm.memset.p0i8.i64(i8* %327, i8 0, i64 %conv131, i32 1, i1 false), !dbg !2871
  %329 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2872
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %329, i32 0, i32 1, !dbg !2873
  %arrayidx132 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !2872
  %330 = load i32, i32* %arrayidx132, align 8, !dbg !2872
  %331 = load i8*, i8** %ptr, align 8, !dbg !2874
  %idx.ext = sext i32 %330 to i64, !dbg !2874
  %add.ptr = getelementptr inbounds i8, i8* %331, i64 %idx.ext, !dbg !2874
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !2874
  br label %for.inc133, !dbg !2875

for.inc133:                                       ; preds = %for.body130
  %332 = load i32, i32* %y, align 4, !dbg !2876
  %inc134 = add nsw i32 %332, 1, !dbg !2876
  store i32 %inc134, i32* %y, align 4, !dbg !2876
  br label %for.cond126, !dbg !2878, !llvm.loop !2879

for.end135:                                       ; preds = %for.cond126
  %333 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2881
  %334 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2882
  %picture136 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %334, i32 0, i32 1, !dbg !2883
  store %struct.AVFrame* %333, %struct.AVFrame** %picture136, align 8, !dbg !2884
  %335 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2885
  %execute2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %335, i32 0, i32 151, !dbg !2886
  %336 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)** %execute2, align 8, !dbg !2886
  %337 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2887
  %338 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2888
  %thread_data = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %338, i32 0, i32 26, !dbg !2889
  %339 = load %struct.EXRThreadData*, %struct.EXRThreadData** %thread_data, align 8, !dbg !2889
  %340 = bitcast %struct.EXRThreadData* %339 to i8*, !dbg !2888
  %341 = load i32, i32* %nb_blocks, align 4, !dbg !2890
  %call137 = call i32 %336(%struct.AVCodecContext* %337, i32 (%struct.AVCodecContext*, i8*, i32, i32)* @decode_block, i8* %340, i32* null, i32 %341), !dbg !2885
  %342 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2891
  %data138 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %342, i32 0, i32 0, !dbg !2892
  %arrayidx139 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data138, i64 0, i64 0, !dbg !2891
  %343 = load i8*, i8** %arrayidx139, align 8, !dbg !2891
  %344 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2893
  %ymax140 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %344, i32 0, i32 12, !dbg !2894
  %345 = load i32, i32* %ymax140, align 8, !dbg !2894
  %add141 = add i32 %345, 1, !dbg !2895
  %346 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2896
  %linesize142 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %346, i32 0, i32 1, !dbg !2897
  %arrayidx143 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize142, i64 0, i64 0, !dbg !2896
  %347 = load i32, i32* %arrayidx143, align 8, !dbg !2896
  %mul144 = mul i32 %add141, %347, !dbg !2898
  %idx.ext145 = zext i32 %mul144 to i64, !dbg !2899
  %add.ptr146 = getelementptr inbounds i8, i8* %343, i64 %idx.ext145, !dbg !2899
  store i8* %add.ptr146, i8** %ptr, align 8, !dbg !2900
  %348 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2901
  %ymax147 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %348, i32 0, i32 12, !dbg !2903
  %349 = load i32, i32* %ymax147, align 8, !dbg !2903
  %add148 = add i32 %349, 1, !dbg !2904
  store i32 %add148, i32* %y, align 4, !dbg !2905
  br label %for.cond149, !dbg !2906

for.cond149:                                      ; preds = %for.inc158, %for.end135
  %350 = load i32, i32* %y, align 4, !dbg !2907
  %351 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2910
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %351, i32 0, i32 21, !dbg !2911
  %352 = load i32, i32* %height, align 8, !dbg !2911
  %cmp150 = icmp slt i32 %350, %352, !dbg !2912
  br i1 %cmp150, label %for.body152, label %for.end160, !dbg !2913

for.body152:                                      ; preds = %for.cond149
  %353 = load i8*, i8** %ptr, align 8, !dbg !2914
  %354 = load i32, i32* %out_line_size, align 4, !dbg !2916
  %conv153 = sext i32 %354 to i64, !dbg !2916
  call void @llvm.memset.p0i8.i64(i8* %353, i8 0, i64 %conv153, i32 1, i1 false), !dbg !2917
  %355 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2918
  %linesize154 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %355, i32 0, i32 1, !dbg !2919
  %arrayidx155 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize154, i64 0, i64 0, !dbg !2918
  %356 = load i32, i32* %arrayidx155, align 8, !dbg !2918
  %357 = load i8*, i8** %ptr, align 8, !dbg !2920
  %idx.ext156 = sext i32 %356 to i64, !dbg !2920
  %add.ptr157 = getelementptr inbounds i8, i8* %357, i64 %idx.ext156, !dbg !2920
  store i8* %add.ptr157, i8** %ptr, align 8, !dbg !2920
  br label %for.inc158, !dbg !2921

for.inc158:                                       ; preds = %for.body152
  %358 = load i32, i32* %y, align 4, !dbg !2922
  %inc159 = add nsw i32 %358, 1, !dbg !2922
  store i32 %inc159, i32* %y, align 4, !dbg !2922
  br label %for.cond149, !dbg !2924, !llvm.loop !2925

for.end160:                                       ; preds = %for.cond149
  %359 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !2927
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %359, i32 0, i32 8, !dbg !2928
  store i32 1, i32* %pict_type, align 4, !dbg !2929
  %360 = load i32*, i32** %got_frame.addr, align 8, !dbg !2930
  store i32 1, i32* %360, align 4, !dbg !2931
  %361 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2932
  %size161 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %361, i32 0, i32 4, !dbg !2933
  %362 = load i32, i32* %size161, align 8, !dbg !2933
  store i32 %362, i32* %retval, align 4, !dbg !2934
  br label %return, !dbg !2934

return:                                           ; preds = %for.end160, %if.then88, %if.then81, %if.then52, %if.then46, %if.then40, %sw.default25, %sw.default, %if.then
  %363 = load i32, i32* %retval, align 4, !dbg !2935
  ret i32 %363, !dbg !2935
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_end(%struct.AVCodecContext* %avctx) #1 !dbg !2936 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.EXRContext*, align 8
  %i = alloca i32, align 4
  %td = alloca %struct.EXRThreadData*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2937, metadata !1741), !dbg !2938
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s, metadata !2939, metadata !1741), !dbg !2940
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2941
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2942
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2942
  %2 = bitcast i8* %1 to %struct.EXRContext*, !dbg !2941
  store %struct.EXRContext* %2, %struct.EXRContext** %s, align 8, !dbg !2940
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2943, metadata !1741), !dbg !2944
  store i32 0, i32* %i, align 4, !dbg !2945
  br label %for.cond, !dbg !2947

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2948
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2951
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 146, !dbg !2952
  %5 = load i32, i32* %thread_count, align 8, !dbg !2952
  %cmp = icmp slt i32 %3, %5, !dbg !2953
  br i1 %cmp, label %for.body, label %for.end, !dbg !2954

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td, metadata !2955, metadata !1741), !dbg !2957
  %6 = load i32, i32* %i, align 4, !dbg !2958
  %idxprom = sext i32 %6 to i64, !dbg !2959
  %7 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2959
  %thread_data = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %7, i32 0, i32 26, !dbg !2960
  %8 = load %struct.EXRThreadData*, %struct.EXRThreadData** %thread_data, align 8, !dbg !2960
  %arrayidx = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %8, i64 %idxprom, !dbg !2959
  store %struct.EXRThreadData* %arrayidx, %struct.EXRThreadData** %td, align 8, !dbg !2957
  %9 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !2961
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %9, i32 0, i32 0, !dbg !2962
  %10 = bitcast i8** %uncompressed_data to i8*, !dbg !2963
  call void @av_freep(i8* %10), !dbg !2964
  %11 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !2965
  %tmp = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %11, i32 0, i32 2, !dbg !2966
  %12 = bitcast i8** %tmp to i8*, !dbg !2967
  call void @av_freep(i8* %12), !dbg !2968
  %13 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !2969
  %bitmap = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %13, i32 0, i32 4, !dbg !2970
  %14 = bitcast i8** %bitmap to i8*, !dbg !2971
  call void @av_freep(i8* %14), !dbg !2972
  %15 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !2973
  %lut = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %15, i32 0, i32 5, !dbg !2974
  %16 = bitcast i16** %lut to i8*, !dbg !2975
  call void @av_freep(i8* %16), !dbg !2976
  br label %for.inc, !dbg !2977

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !2978
  %inc = add nsw i32 %17, 1, !dbg !2978
  store i32 %inc, i32* %i, align 4, !dbg !2978
  br label %for.cond, !dbg !2980, !llvm.loop !2981

for.end:                                          ; preds = %for.cond
  %18 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2983
  %thread_data1 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %18, i32 0, i32 26, !dbg !2984
  %19 = bitcast %struct.EXRThreadData** %thread_data1 to i8*, !dbg !2985
  call void @av_freep(i8* %19), !dbg !2986
  %20 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !2987
  %channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %20, i32 0, i32 23, !dbg !2988
  %21 = bitcast %struct.EXRChannel** %channels to i8*, !dbg !2989
  call void @av_freep(i8* %21), !dbg !2990
  ret i32 0, !dbg !2991
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare i8* @av_mallocz_array(i64, i64) #2

declare void @ff_exrdsp_init(%struct.ExrDSPContext*) #2

declare double (double)* @avpriv_get_trc_function_from_trc(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @exr_half2float(i16 zeroext %hf) #0 !dbg !2992 {
entry:
  %retval = alloca %union.av_intfloat32, align 4
  %hf.addr = alloca i16, align 2
  %sign = alloca i32, align 4
  %mantissa = alloca i32, align 4
  %exp = alloca i32, align 4
  %f = alloca %union.av_intfloat32, align 4
  store i16 %hf, i16* %hf.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %hf.addr, metadata !2995, metadata !1741), !dbg !2996
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !2997, metadata !1741), !dbg !2998
  %0 = load i16, i16* %hf.addr, align 2, !dbg !2999
  %conv = zext i16 %0 to i32, !dbg !2999
  %shr = ashr i32 %conv, 15, !dbg !3000
  store i32 %shr, i32* %sign, align 4, !dbg !2998
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !3001, metadata !1741), !dbg !3002
  %1 = load i16, i16* %hf.addr, align 2, !dbg !3003
  %conv1 = zext i16 %1 to i32, !dbg !3003
  %and = and i32 %conv1, 1023, !dbg !3004
  store i32 %and, i32* %mantissa, align 4, !dbg !3002
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !3005, metadata !1741), !dbg !3006
  %2 = load i16, i16* %hf.addr, align 2, !dbg !3007
  %conv2 = zext i16 %2 to i32, !dbg !3007
  %and3 = and i32 %conv2, 31744, !dbg !3008
  store i32 %and3, i32* %exp, align 4, !dbg !3006
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %f, metadata !3009, metadata !1741), !dbg !3010
  %3 = load i32, i32* %exp, align 4, !dbg !3011
  %cmp = icmp eq i32 %3, 31744, !dbg !3013
  br i1 %cmp, label %if.then, label %if.else, !dbg !3014

if.then:                                          ; preds = %entry
  store i32 2139095040, i32* %exp, align 4, !dbg !3015
  %4 = load i32, i32* %mantissa, align 4, !dbg !3017
  %tobool = icmp ne i32 %4, 0, !dbg !3017
  br i1 %tobool, label %if.then5, label %if.end, !dbg !3019

if.then5:                                         ; preds = %if.then
  store i32 8388607, i32* %mantissa, align 4, !dbg !3020
  br label %if.end, !dbg !3021

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end21, !dbg !3022

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %exp, align 4, !dbg !3023
  %cmp6 = icmp eq i32 %5, 0, !dbg !3026
  br i1 %cmp6, label %if.then8, label %if.else17, !dbg !3023

if.then8:                                         ; preds = %if.else
  %6 = load i32, i32* %mantissa, align 4, !dbg !3027
  %tobool9 = icmp ne i32 %6, 0, !dbg !3027
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !3030

if.then10:                                        ; preds = %if.then8
  %7 = load i32, i32* %mantissa, align 4, !dbg !3031
  %shl = shl i32 %7, 1, !dbg !3031
  store i32 %shl, i32* %mantissa, align 4, !dbg !3031
  store i32 939524096, i32* %exp, align 4, !dbg !3033
  br label %while.cond, !dbg !3034

while.cond:                                       ; preds = %while.body, %if.then10
  %8 = load i32, i32* %mantissa, align 4, !dbg !3035
  %and11 = and i32 %8, 1024, !dbg !3037
  %tobool12 = icmp ne i32 %and11, 0, !dbg !3038
  br i1 %tobool12, label %while.body, label %while.end, !dbg !3038

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* %mantissa, align 4, !dbg !3039
  %shl13 = shl i32 %9, 1, !dbg !3039
  store i32 %shl13, i32* %mantissa, align 4, !dbg !3039
  %10 = load i32, i32* %exp, align 4, !dbg !3041
  %sub = sub i32 %10, 8388608, !dbg !3041
  store i32 %sub, i32* %exp, align 4, !dbg !3041
  br label %while.cond, !dbg !3042, !llvm.loop !3044

while.end:                                        ; preds = %while.cond
  %11 = load i32, i32* %mantissa, align 4, !dbg !3045
  %and14 = and i32 %11, 1023, !dbg !3045
  store i32 %and14, i32* %mantissa, align 4, !dbg !3045
  %12 = load i32, i32* %mantissa, align 4, !dbg !3046
  %shl15 = shl i32 %12, 13, !dbg !3046
  store i32 %shl15, i32* %mantissa, align 4, !dbg !3046
  br label %if.end16, !dbg !3047

if.end16:                                         ; preds = %while.end, %if.then8
  br label %if.end20, !dbg !3048

if.else17:                                        ; preds = %if.else
  %13 = load i32, i32* %mantissa, align 4, !dbg !3049
  %shl18 = shl i32 %13, 13, !dbg !3049
  store i32 %shl18, i32* %mantissa, align 4, !dbg !3049
  %14 = load i32, i32* %exp, align 4, !dbg !3051
  %shl19 = shl i32 %14, 13, !dbg !3052
  %add = add i32 %shl19, 939524096, !dbg !3053
  store i32 %add, i32* %exp, align 4, !dbg !3054
  br label %if.end20

if.end20:                                         ; preds = %if.else17, %if.end16
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  %15 = load i32, i32* %sign, align 4, !dbg !3055
  %shl22 = shl i32 %15, 31, !dbg !3056
  %16 = load i32, i32* %exp, align 4, !dbg !3057
  %or = or i32 %shl22, %16, !dbg !3058
  %17 = load i32, i32* %mantissa, align 4, !dbg !3059
  %or23 = or i32 %or, %17, !dbg !3060
  %i = bitcast %union.av_intfloat32* %f to i32*, !dbg !3061
  store i32 %or23, i32* %i, align 4, !dbg !3062
  %18 = bitcast %union.av_intfloat32* %retval to i8*, !dbg !3063
  %19 = bitcast %union.av_intfloat32* %f to i8*, !dbg !3063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 4, i32 4, i1 false), !dbg !3063
  %coerce.dive = getelementptr inbounds %union.av_intfloat32, %union.av_intfloat32* %retval, i32 0, i32 0, !dbg !3064
  %20 = load i32, i32* %coerce.dive, align 4, !dbg !3064
  ret i32 %20, !dbg !3064
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @exr_flt2uint(i32 %v) #5 !dbg !3065 {
entry:
  %retval = alloca i16, align 2
  %v.addr = alloca i32, align 4
  %exp = alloca i32, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !3068, metadata !1741), !dbg !3069
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !3070, metadata !1741), !dbg !3071
  %0 = load i32, i32* %v.addr, align 4, !dbg !3072
  %shr = ashr i32 %0, 23, !dbg !3073
  store i32 %shr, i32* %exp, align 4, !dbg !3071
  %1 = load i32, i32* %exp, align 4, !dbg !3074
  %cmp = icmp sle i32 %1, 110, !dbg !3076
  br i1 %cmp, label %if.then, label %if.end, !dbg !3077

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !3078
  br label %return, !dbg !3078

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %exp, align 4, !dbg !3079
  %cmp1 = icmp sge i32 %2, 127, !dbg !3081
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3082

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !3083
  br label %return, !dbg !3083

if.end3:                                          ; preds = %if.end
  %3 = load i32, i32* %v.addr, align 4, !dbg !3084
  %and = and i32 %3, 8388607, !dbg !3084
  store i32 %and, i32* %v.addr, align 4, !dbg !3084
  %4 = load i32, i32* %v.addr, align 4, !dbg !3085
  %add = add nsw i32 %4, 8388608, !dbg !3086
  %5 = load i32, i32* %exp, align 4, !dbg !3087
  %sub = sub nsw i32 134, %5, !dbg !3088
  %shr4 = ashr i32 %add, %sub, !dbg !3089
  %conv = trunc i32 %shr4 to i16, !dbg !3090
  store i16 %conv, i16* %retval, align 2, !dbg !3091
  br label %return, !dbg !3091

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i16, i16* %retval, align 2, !dbg !3092
  ret i16 %6, !dbg !3092
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @exr_halflt2uint(i16 zeroext %v) #5 !dbg !3093 {
entry:
  %retval = alloca i16, align 2
  %v.addr = alloca i16, align 2
  %exp = alloca i32, align 4
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !3096, metadata !1741), !dbg !3097
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !3098, metadata !1741), !dbg !3099
  %0 = load i16, i16* %v.addr, align 2, !dbg !3100
  %conv = zext i16 %0 to i32, !dbg !3100
  %shr = ashr i32 %conv, 10, !dbg !3101
  %sub = sub nsw i32 14, %shr, !dbg !3102
  store i32 %sub, i32* %exp, align 4, !dbg !3099
  %1 = load i32, i32* %exp, align 4, !dbg !3103
  %cmp = icmp uge i32 %1, 14, !dbg !3105
  br i1 %cmp, label %if.then, label %if.end, !dbg !3106

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %exp, align 4, !dbg !3107
  %cmp2 = icmp eq i32 %2, 14, !dbg !3110
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !3111

if.then4:                                         ; preds = %if.then
  %3 = load i16, i16* %v.addr, align 2, !dbg !3112
  %conv5 = zext i16 %3 to i32, !dbg !3112
  %shr6 = ashr i32 %conv5, 9, !dbg !3113
  %and = and i32 %shr6, 1, !dbg !3114
  %conv7 = trunc i32 %and to i16, !dbg !3115
  store i16 %conv7, i16* %retval, align 2, !dbg !3116
  br label %return, !dbg !3116

if.else:                                          ; preds = %if.then
  %4 = load i16, i16* %v.addr, align 2, !dbg !3117
  %conv8 = zext i16 %4 to i32, !dbg !3117
  %and9 = and i32 %conv8, 32768, !dbg !3118
  %tobool = icmp ne i32 %and9, 0, !dbg !3119
  %cond = select i1 %tobool, i32 0, i32 65535, !dbg !3119
  %conv10 = trunc i32 %cond to i16, !dbg !3119
  store i16 %conv10, i16* %retval, align 2, !dbg !3120
  br label %return, !dbg !3120

if.end:                                           ; preds = %entry
  %5 = load i16, i16* %v.addr, align 2, !dbg !3121
  %conv11 = zext i16 %5 to i32, !dbg !3121
  %shl = shl i32 %conv11, 6, !dbg !3121
  %conv12 = trunc i32 %shl to i16, !dbg !3121
  store i16 %conv12, i16* %v.addr, align 2, !dbg !3121
  %6 = load i16, i16* %v.addr, align 2, !dbg !3122
  %conv13 = zext i16 %6 to i32, !dbg !3122
  %add = add nsw i32 %conv13, 65536, !dbg !3123
  %7 = load i32, i32* %exp, align 4, !dbg !3124
  %add14 = add i32 %7, 1, !dbg !3125
  %shr15 = ashr i32 %add, %add14, !dbg !3126
  %conv16 = trunc i32 %shr15 to i16, !dbg !3127
  store i16 %conv16, i16* %retval, align 2, !dbg !3128
  br label %return, !dbg !3128

return:                                           ; preds = %if.end, %if.else, %if.then4
  %8 = load i16, i16* %retval, align 2, !dbg !3129
  ret i16 %8, !dbg !3129
}

; Function Attrs: nounwind
declare float @powf(float, float) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @decode_header(%struct.EXRContext* %s, %struct.AVFrame* %frame) #0 !dbg !3130 {
entry:
  %b.addr.i.i.i1015 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i1015, metadata !2102, metadata !1741), !dbg !3133
  %g.addr.i.i1016 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i1016, metadata !2116, metadata !1741), !dbg !3141
  %retval.i1017 = alloca i32, align 4
  %g.addr.i1018 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i1018, metadata !2118, metadata !1741), !dbg !3142
  %g.addr.i994 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i994, metadata !3143, metadata !1741), !dbg !3147
  %size.addr.i995 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i995, metadata !3149, metadata !1741), !dbg !3150
  %b.addr.i.i.i975 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i975, metadata !2102, metadata !1741), !dbg !3151
  %g.addr.i.i976 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i976, metadata !2116, metadata !1741), !dbg !3155
  %retval.i977 = alloca i32, align 4
  %g.addr.i978 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i978, metadata !2118, metadata !1741), !dbg !3156
  %b.addr.i.i.i956 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i956, metadata !2102, metadata !1741), !dbg !3157
  %g.addr.i.i957 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i957, metadata !2116, metadata !1741), !dbg !3161
  %retval.i958 = alloca i32, align 4
  %g.addr.i959 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i959, metadata !2118, metadata !1741), !dbg !3162
  %g.addr.i949 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i949, metadata !2147, metadata !1741), !dbg !3163
  %b.addr.i.i.i930 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i930, metadata !2102, metadata !1741), !dbg !3166
  %g.addr.i.i931 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i931, metadata !2116, metadata !1741), !dbg !3172
  %retval.i932 = alloca i32, align 4
  %g.addr.i933 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i933, metadata !2118, metadata !1741), !dbg !3173
  %b.addr.i.i.i911 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i911, metadata !2102, metadata !1741), !dbg !3174
  %g.addr.i.i912 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i912, metadata !2116, metadata !1741), !dbg !3178
  %retval.i913 = alloca i32, align 4
  %g.addr.i914 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i914, metadata !2118, metadata !1741), !dbg !3179
  %b.addr.i.i.i892 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i892, metadata !2102, metadata !1741), !dbg !3180
  %g.addr.i.i893 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i893, metadata !2116, metadata !1741), !dbg !3184
  %retval.i894 = alloca i32, align 4
  %g.addr.i895 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i895, metadata !2118, metadata !1741), !dbg !3185
  %b.addr.i.i.i873 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i873, metadata !2102, metadata !1741), !dbg !3186
  %g.addr.i.i874 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i874, metadata !2116, metadata !1741), !dbg !3190
  %retval.i875 = alloca i32, align 4
  %g.addr.i876 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i876, metadata !2118, metadata !1741), !dbg !3191
  %b.addr.i.i.i854 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i854, metadata !3192, metadata !1741), !dbg !3194
  %g.addr.i.i855 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i855, metadata !3201, metadata !1741), !dbg !3202
  %retval.i856 = alloca i32, align 4
  %g.addr.i857 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i857, metadata !3203, metadata !1741), !dbg !3204
  %g.addr.i833 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i833, metadata !3143, metadata !1741), !dbg !3205
  %size.addr.i834 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i834, metadata !3149, metadata !1741), !dbg !3209
  %b.addr.i.i.i814 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i814, metadata !2102, metadata !1741), !dbg !3210
  %g.addr.i.i815 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i815, metadata !2116, metadata !1741), !dbg !3214
  %retval.i816 = alloca i32, align 4
  %g.addr.i817 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i817, metadata !2118, metadata !1741), !dbg !3215
  %b.addr.i.i.i795 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i795, metadata !2102, metadata !1741), !dbg !3216
  %g.addr.i.i796 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i796, metadata !2116, metadata !1741), !dbg !3220
  %retval.i797 = alloca i32, align 4
  %g.addr.i798 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i798, metadata !2118, metadata !1741), !dbg !3221
  %g.addr.i788 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i788, metadata !2147, metadata !1741), !dbg !3222
  %g.addr.i781 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i781, metadata !2147, metadata !1741), !dbg !3225
  %g.addr.i773 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i773, metadata !2152, metadata !1741), !dbg !3228
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !2158, metadata !1741), !dbg !3230
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !2160, metadata !1741), !dbg !3231
  %b.addr.i.i.i754 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i754, metadata !3192, metadata !1741), !dbg !3232
  %g.addr.i.i755 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i755, metadata !3201, metadata !1741), !dbg !3238
  %retval.i756 = alloca i32, align 4
  %g.addr.i757 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i757, metadata !3203, metadata !1741), !dbg !3239
  %g.addr.i747 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i747, metadata !2147, metadata !1741), !dbg !3240
  %b.addr.i.i.i728 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i728, metadata !2102, metadata !1741), !dbg !3243
  %g.addr.i.i729 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i729, metadata !2116, metadata !1741), !dbg !3249
  %retval.i730 = alloca i32, align 4
  %g.addr.i731 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i731, metadata !2118, metadata !1741), !dbg !3250
  %b.addr.i.i.i710 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i710, metadata !3251, metadata !1741), !dbg !3253
  %g.addr.i.i711 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i711, metadata !3260, metadata !1741), !dbg !3261
  %retval.i712 = alloca i32, align 4
  %g.addr.i713 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i713, metadata !3262, metadata !1741), !dbg !3263
  %b.addr.i.i.i691 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i691, metadata !3192, metadata !1741), !dbg !3264
  %g.addr.i.i692 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i692, metadata !3201, metadata !1741), !dbg !3271
  %retval.i693 = alloca i32, align 4
  %g.addr.i694 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i694, metadata !3203, metadata !1741), !dbg !3272
  %b.addr.i.i.i672 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i672, metadata !3192, metadata !1741), !dbg !3273
  %g.addr.i.i673 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i673, metadata !3201, metadata !1741), !dbg !3277
  %retval.i674 = alloca i32, align 4
  %g.addr.i675 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i675, metadata !3203, metadata !1741), !dbg !3278
  %b.addr.i.i.i653 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i653, metadata !2102, metadata !1741), !dbg !3279
  %g.addr.i.i654 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i654, metadata !2116, metadata !1741), !dbg !3285
  %retval.i655 = alloca i32, align 4
  %g.addr.i656 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i656, metadata !2118, metadata !1741), !dbg !3286
  %b.addr.i.i.i634 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i634, metadata !2102, metadata !1741), !dbg !3287
  %g.addr.i.i635 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i635, metadata !2116, metadata !1741), !dbg !3291
  %retval.i636 = alloca i32, align 4
  %g.addr.i637 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i637, metadata !2118, metadata !1741), !dbg !3292
  %b.addr.i.i.i615 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i615, metadata !3192, metadata !1741), !dbg !3293
  %g.addr.i.i616 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i616, metadata !3201, metadata !1741), !dbg !3297
  %retval.i617 = alloca i32, align 4
  %g.addr.i618 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i618, metadata !3203, metadata !1741), !dbg !3298
  %b.addr.i.i.i596 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i596, metadata !2102, metadata !1741), !dbg !3299
  %g.addr.i.i597 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i597, metadata !2116, metadata !1741), !dbg !3303
  %retval.i598 = alloca i32, align 4
  %g.addr.i599 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i599, metadata !2118, metadata !1741), !dbg !3304
  %g.addr.i577 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i577, metadata !3305, metadata !1741), !dbg !3309
  %dst.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i, metadata !3314, metadata !1741), !dbg !3315
  %size.addr.i578 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i578, metadata !3316, metadata !1741), !dbg !3317
  %size2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.i, metadata !3318, metadata !1741), !dbg !3319
  %g.addr.i570 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i570, metadata !2147, metadata !1741), !dbg !3320
  %b.addr.i.i.i553 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i553, metadata !3192, metadata !1741), !dbg !3323
  %g.addr.i.i554 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i554, metadata !3201, metadata !1741), !dbg !3330
  %retval.i555 = alloca i32, align 4
  %g.addr.i556 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i556, metadata !3203, metadata !1741), !dbg !3331
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2102, metadata !1741), !dbg !3332
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2116, metadata !1741), !dbg !3336
  %retval.i = alloca i32, align 4
  %g.addr.i546 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i546, metadata !2118, metadata !1741), !dbg !3337
  %g.addr.i525 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i525, metadata !3143, metadata !1741), !dbg !3338
  %size.addr.i526 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i526, metadata !3149, metadata !1741), !dbg !3341
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !3342, metadata !1741), !dbg !3346
  %v.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i, metadata !3348, metadata !1741), !dbg !3349
  %g.addr.i518 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i518, metadata !2147, metadata !1741), !dbg !3350
  %g.addr.i511 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i511, metadata !3143, metadata !1741), !dbg !3353
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3149, metadata !1741), !dbg !3355
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2147, metadata !1741), !dbg !3356
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.EXRContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %metadata = alloca %struct.AVDictionary*, align 8
  %magic_number = alloca i32, align 4
  %version = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i32, align 4
  %sar = alloca i32, align 4
  %layer_match = alloca i32, align 4
  %ret = alloca i32, align 4
  %var_size = alloca i32, align 4
  %ch_gb = alloca %struct.GetByteContext, align 8
  %channel = alloca %struct.EXRChannel*, align 8
  %current_pixel_type = alloca i32, align 4
  %channel_index = alloca i32, align 4
  %xsub = alloca i32, align 4
  %ysub = alloca i32, align 4
  %line_order = alloca i32, align 4
  %tileLevel = alloca i8, align 1
  %key = alloca [256 x i8], align 16
  %agg.tmp = alloca %struct.AVRational, align 4
  store %struct.EXRContext* %s, %struct.EXRContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s.addr, metadata !3359, metadata !1741), !dbg !3360
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3361, metadata !1741), !dbg !3362
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %metadata, metadata !3363, metadata !1741), !dbg !3364
  store %struct.AVDictionary* null, %struct.AVDictionary** %metadata, align 8, !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %magic_number, metadata !3365, metadata !1741), !dbg !3366
  call void @llvm.dbg.declare(metadata i32* %version, metadata !3367, metadata !1741), !dbg !3368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3369, metadata !1741), !dbg !3370
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !3371, metadata !1741), !dbg !3372
  call void @llvm.dbg.declare(metadata i32* %sar, metadata !3373, metadata !1741), !dbg !3374
  store i32 0, i32* %sar, align 4, !dbg !3374
  call void @llvm.dbg.declare(metadata i32* %layer_match, metadata !3375, metadata !1741), !dbg !3376
  store i32 0, i32* %layer_match, align 4, !dbg !3376
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3377, metadata !1741), !dbg !3378
  %0 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3379
  %current_channel_offset = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %0, i32 0, i32 25, !dbg !3380
  store i32 0, i32* %current_channel_offset, align 4, !dbg !3381
  %1 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3382
  %xmin = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %1, i32 0, i32 11, !dbg !3383
  store i32 -1, i32* %xmin, align 4, !dbg !3384
  %2 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3385
  %xmax = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %2, i32 0, i32 10, !dbg !3386
  store i32 -1, i32* %xmax, align 8, !dbg !3387
  %3 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3388
  %ymin = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %3, i32 0, i32 13, !dbg !3389
  store i32 -1, i32* %ymin, align 4, !dbg !3390
  %4 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3391
  %ymax = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %4, i32 0, i32 12, !dbg !3392
  store i32 -1, i32* %ymax, align 8, !dbg !3393
  %5 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3394
  %xdelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %5, i32 0, i32 14, !dbg !3395
  store i32 -1, i32* %xdelta, align 8, !dbg !3396
  %6 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3397
  %ydelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %6, i32 0, i32 15, !dbg !3398
  store i32 -1, i32* %ydelta, align 4, !dbg !3399
  %7 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3400
  %channel_offsets = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %7, i32 0, i32 6, !dbg !3401
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets, i64 0, i64 0, !dbg !3400
  store i32 -1, i32* %arrayidx, align 8, !dbg !3402
  %8 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3403
  %channel_offsets1 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %8, i32 0, i32 6, !dbg !3404
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets1, i64 0, i64 1, !dbg !3403
  store i32 -1, i32* %arrayidx2, align 4, !dbg !3405
  %9 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3406
  %channel_offsets3 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %9, i32 0, i32 6, !dbg !3407
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets3, i64 0, i64 2, !dbg !3406
  store i32 -1, i32* %arrayidx4, align 8, !dbg !3408
  %10 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3409
  %channel_offsets5 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %10, i32 0, i32 6, !dbg !3410
  %arrayidx6 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets5, i64 0, i64 3, !dbg !3409
  store i32 -1, i32* %arrayidx6, align 4, !dbg !3411
  %11 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3412
  %pixel_type = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %11, i32 0, i32 5, !dbg !3413
  store i32 3, i32* %pixel_type, align 4, !dbg !3414
  %12 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3415
  %compression = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %12, i32 0, i32 4, !dbg !3416
  store i32 10, i32* %compression, align 8, !dbg !3417
  %13 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3418
  %nb_channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %13, i32 0, i32 24, !dbg !3419
  store i32 0, i32* %nb_channels, align 8, !dbg !3420
  %14 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3421
  %w = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %14, i32 0, i32 8, !dbg !3422
  store i32 0, i32* %w, align 8, !dbg !3423
  %15 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3424
  %h = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %15, i32 0, i32 9, !dbg !3425
  store i32 0, i32* %h, align 4, !dbg !3426
  %16 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3427
  %tile_attr = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %16, i32 0, i32 17, !dbg !3428
  %xSize = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr, i32 0, i32 0, !dbg !3429
  store i32 -1, i32* %xSize, align 4, !dbg !3430
  %17 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3431
  %tile_attr7 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %17, i32 0, i32 17, !dbg !3432
  %ySize = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr7, i32 0, i32 1, !dbg !3433
  store i32 -1, i32* %ySize, align 4, !dbg !3434
  %18 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3435
  %is_tile = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %18, i32 0, i32 18, !dbg !3436
  store i32 0, i32* %is_tile, align 4, !dbg !3437
  %19 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3438
  %is_luma = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %19, i32 0, i32 19, !dbg !3439
  store i32 0, i32* %is_luma, align 8, !dbg !3440
  %20 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3441
  %gb = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %20, i32 0, i32 20, !dbg !3442
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3443
  %21 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3444
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %21, i32 0, i32 1, !dbg !3445
  %22 = load i8*, i8** %buffer_end.i, align 8, !dbg !3445
  %23 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3446
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %23, i32 0, i32 0, !dbg !3447
  %24 = load i8*, i8** %buffer.i, align 8, !dbg !3447
  %sub.ptr.lhs.cast.i = ptrtoint i8* %22 to i64, !dbg !3448
  %sub.ptr.rhs.cast.i = ptrtoint i8* %24 to i64, !dbg !3448
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !3448
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !3444
  %cmp = icmp ult i32 %conv.i, 10, !dbg !3449
  br i1 %cmp, label %if.then, label %if.end, !dbg !3450

if.then:                                          ; preds = %entry
  %25 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3451
  %avctx = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %25, i32 0, i32 2, !dbg !3453
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3453
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !3451
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i32 0, i32 0)), !dbg !3454
  store i32 -1094995529, i32* %retval, align 4, !dbg !3455
  br label %return, !dbg !3455

if.end:                                           ; preds = %entry
  %28 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3456
  %gb8 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %28, i32 0, i32 20, !dbg !3457
  store %struct.GetByteContext* %gb8, %struct.GetByteContext** %g.addr.i599, align 8, !dbg !3458
  %29 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i599, align 8, !dbg !3459
  %buffer_end.i600 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %29, i32 0, i32 1, !dbg !3460
  %30 = load i8*, i8** %buffer_end.i600, align 8, !dbg !3460
  %31 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i599, align 8, !dbg !3461
  %buffer.i601 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %31, i32 0, i32 0, !dbg !3462
  %32 = load i8*, i8** %buffer.i601, align 8, !dbg !3462
  %sub.ptr.lhs.cast.i602 = ptrtoint i8* %30 to i64, !dbg !3463
  %sub.ptr.rhs.cast.i603 = ptrtoint i8* %32 to i64, !dbg !3463
  %sub.ptr.sub.i604 = sub i64 %sub.ptr.lhs.cast.i602, %sub.ptr.rhs.cast.i603, !dbg !3463
  %cmp.i605 = icmp slt i64 %sub.ptr.sub.i604, 4, !dbg !3464
  br i1 %cmp.i605, label %if.then.i608, label %if.end.i613, !dbg !3465

if.then.i608:                                     ; preds = %if.end
  %33 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i599, align 8, !dbg !3466
  %buffer_end1.i606 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %33, i32 0, i32 1, !dbg !3467
  %34 = load i8*, i8** %buffer_end1.i606, align 8, !dbg !3467
  %35 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i599, align 8, !dbg !3468
  %buffer2.i607 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %35, i32 0, i32 0, !dbg !3469
  store i8* %34, i8** %buffer2.i607, align 8, !dbg !3470
  store i32 0, i32* %retval.i598, align 4, !dbg !3471
  br label %bytestream2_get_le32.exit614, !dbg !3471

if.end.i613:                                      ; preds = %if.end
  %36 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i599, align 8, !dbg !3472
  store %struct.GetByteContext* %36, %struct.GetByteContext** %g.addr.i.i597, align 8, !dbg !3473
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i597, align 8, !dbg !3474
  %buffer.i.i609 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 0, !dbg !3475
  store i8** %buffer.i.i609, i8*** %b.addr.i.i.i596, align 8, !dbg !3476
  %38 = load i8**, i8*** %b.addr.i.i.i596, align 8, !dbg !3477
  %39 = load i8*, i8** %38, align 8, !dbg !3478
  %add.ptr.i.i.i610 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !3478
  store i8* %add.ptr.i.i.i610, i8** %38, align 8, !dbg !3478
  %40 = load i8**, i8*** %b.addr.i.i.i596, align 8, !dbg !3479
  %41 = load i8*, i8** %40, align 8, !dbg !3480
  %add.ptr1.i.i.i611 = getelementptr inbounds i8, i8* %41, i64 -4, !dbg !3481
  %42 = bitcast i8* %add.ptr1.i.i.i611 to %union.unaligned_32*, !dbg !3482
  %l.i.i.i612 = bitcast %union.unaligned_32* %42 to i32*, !dbg !3482
  %43 = load i32, i32* %l.i.i.i612, align 1, !dbg !3482
  store i32 %43, i32* %retval.i598, align 4, !dbg !3483
  br label %bytestream2_get_le32.exit614, !dbg !3483

bytestream2_get_le32.exit614:                     ; preds = %if.then.i608, %if.end.i613
  %44 = load i32, i32* %retval.i598, align 4, !dbg !3484
  store i32 %44, i32* %magic_number, align 4, !dbg !3485
  %45 = load i32, i32* %magic_number, align 4, !dbg !3486
  %cmp10 = icmp ne i32 %45, 20000630, !dbg !3488
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !3489

if.then11:                                        ; preds = %bytestream2_get_le32.exit614
  %46 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3490
  %avctx12 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %46, i32 0, i32 2, !dbg !3492
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 8, !dbg !3492
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !3490
  %49 = load i32, i32* %magic_number, align 4, !dbg !3493
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i32 0, i32 0), i32 %49), !dbg !3494
  store i32 -1094995529, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

if.end13:                                         ; preds = %bytestream2_get_le32.exit614
  %50 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3496
  %gb14 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %50, i32 0, i32 20, !dbg !3497
  store %struct.GetByteContext* %gb14, %struct.GetByteContext** %g.addr.i675, align 8, !dbg !3498
  %51 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i675, align 8, !dbg !3499
  %buffer_end.i676 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %51, i32 0, i32 1, !dbg !3501
  %52 = load i8*, i8** %buffer_end.i676, align 8, !dbg !3501
  %53 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i675, align 8, !dbg !3502
  %buffer.i677 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %53, i32 0, i32 0, !dbg !3503
  %54 = load i8*, i8** %buffer.i677, align 8, !dbg !3503
  %sub.ptr.lhs.cast.i678 = ptrtoint i8* %52 to i64, !dbg !3504
  %sub.ptr.rhs.cast.i679 = ptrtoint i8* %54 to i64, !dbg !3504
  %sub.ptr.sub.i680 = sub i64 %sub.ptr.lhs.cast.i678, %sub.ptr.rhs.cast.i679, !dbg !3504
  %cmp.i681 = icmp slt i64 %sub.ptr.sub.i680, 1, !dbg !3505
  br i1 %cmp.i681, label %if.then.i684, label %if.end.i689, !dbg !3506

if.then.i684:                                     ; preds = %if.end13
  %55 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i675, align 8, !dbg !3507
  %buffer_end1.i682 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %55, i32 0, i32 1, !dbg !3510
  %56 = load i8*, i8** %buffer_end1.i682, align 8, !dbg !3510
  %57 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i675, align 8, !dbg !3511
  %buffer2.i683 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %57, i32 0, i32 0, !dbg !3512
  store i8* %56, i8** %buffer2.i683, align 8, !dbg !3513
  store i32 0, i32* %retval.i674, align 4, !dbg !3514
  br label %bytestream2_get_byte.exit690, !dbg !3514

if.end.i689:                                      ; preds = %if.end13
  %58 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i675, align 8, !dbg !3515
  store %struct.GetByteContext* %58, %struct.GetByteContext** %g.addr.i.i673, align 8, !dbg !3516
  %59 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i673, align 8, !dbg !3517
  %buffer.i.i685 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %59, i32 0, i32 0, !dbg !3518
  store i8** %buffer.i.i685, i8*** %b.addr.i.i.i672, align 8, !dbg !3519
  %60 = load i8**, i8*** %b.addr.i.i.i672, align 8, !dbg !3520
  %61 = load i8*, i8** %60, align 8, !dbg !3521
  %add.ptr.i.i.i686 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !3521
  store i8* %add.ptr.i.i.i686, i8** %60, align 8, !dbg !3521
  %62 = load i8**, i8*** %b.addr.i.i.i672, align 8, !dbg !3522
  %63 = load i8*, i8** %62, align 8, !dbg !3523
  %add.ptr1.i.i.i687 = getelementptr inbounds i8, i8* %63, i64 -1, !dbg !3524
  %64 = load i8, i8* %add.ptr1.i.i.i687, align 1, !dbg !3525
  %conv.i.i.i688 = zext i8 %64 to i32, !dbg !3526
  store i32 %conv.i.i.i688, i32* %retval.i674, align 4, !dbg !3527
  br label %bytestream2_get_byte.exit690, !dbg !3527

bytestream2_get_byte.exit690:                     ; preds = %if.then.i684, %if.end.i689
  %65 = load i32, i32* %retval.i674, align 4, !dbg !3528
  store i32 %65, i32* %version, align 4, !dbg !3530
  %66 = load i32, i32* %version, align 4, !dbg !3531
  %cmp16 = icmp ne i32 %66, 2, !dbg !3533
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !3534

if.then17:                                        ; preds = %bytestream2_get_byte.exit690
  %67 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3535
  %avctx18 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %67, i32 0, i32 2, !dbg !3537
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx18, align 8, !dbg !3537
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !3535
  %70 = load i32, i32* %version, align 4, !dbg !3538
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %69, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i32 0, i32 0), i32 %70), !dbg !3539
  store i32 -1163346256, i32* %retval, align 4, !dbg !3540
  br label %return, !dbg !3540

if.end19:                                         ; preds = %bytestream2_get_byte.exit690
  %71 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3541
  %gb20 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %71, i32 0, i32 20, !dbg !3542
  store %struct.GetByteContext* %gb20, %struct.GetByteContext** %g.addr.i713, align 8, !dbg !3543
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i713, align 8, !dbg !3544
  %buffer_end.i714 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %72, i32 0, i32 1, !dbg !3546
  %73 = load i8*, i8** %buffer_end.i714, align 8, !dbg !3546
  %74 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i713, align 8, !dbg !3547
  %buffer.i715 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %74, i32 0, i32 0, !dbg !3548
  %75 = load i8*, i8** %buffer.i715, align 8, !dbg !3548
  %sub.ptr.lhs.cast.i716 = ptrtoint i8* %73 to i64, !dbg !3549
  %sub.ptr.rhs.cast.i717 = ptrtoint i8* %75 to i64, !dbg !3549
  %sub.ptr.sub.i718 = sub i64 %sub.ptr.lhs.cast.i716, %sub.ptr.rhs.cast.i717, !dbg !3549
  %cmp.i719 = icmp slt i64 %sub.ptr.sub.i718, 3, !dbg !3550
  br i1 %cmp.i719, label %if.then.i722, label %if.end.i727, !dbg !3551

if.then.i722:                                     ; preds = %if.end19
  %76 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i713, align 8, !dbg !3552
  %buffer_end1.i720 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %76, i32 0, i32 1, !dbg !3555
  %77 = load i8*, i8** %buffer_end1.i720, align 8, !dbg !3555
  %78 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i713, align 8, !dbg !3556
  %buffer2.i721 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %78, i32 0, i32 0, !dbg !3557
  store i8* %77, i8** %buffer2.i721, align 8, !dbg !3558
  store i32 0, i32* %retval.i712, align 4, !dbg !3559
  br label %bytestream2_get_le24.exit, !dbg !3559

if.end.i727:                                      ; preds = %if.end19
  %79 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i713, align 8, !dbg !3560
  store %struct.GetByteContext* %79, %struct.GetByteContext** %g.addr.i.i711, align 8, !dbg !3561
  %80 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i711, align 8, !dbg !3562
  %buffer.i.i723 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %80, i32 0, i32 0, !dbg !3563
  store i8** %buffer.i.i723, i8*** %b.addr.i.i.i710, align 8, !dbg !3564
  %81 = load i8**, i8*** %b.addr.i.i.i710, align 8, !dbg !3565
  %82 = load i8*, i8** %81, align 8, !dbg !3566
  %add.ptr.i.i.i724 = getelementptr inbounds i8, i8* %82, i64 3, !dbg !3566
  store i8* %add.ptr.i.i.i724, i8** %81, align 8, !dbg !3566
  %83 = load i8**, i8*** %b.addr.i.i.i710, align 8, !dbg !3567
  %84 = load i8*, i8** %83, align 8, !dbg !3568
  %add.ptr1.i.i.i725 = getelementptr inbounds i8, i8* %84, i64 -3, !dbg !3569
  %arrayidx.i.i.i = getelementptr inbounds i8, i8* %add.ptr1.i.i.i725, i64 2, !dbg !3570
  %85 = load i8, i8* %arrayidx.i.i.i, align 1, !dbg !3570
  %conv.i.i.i726 = zext i8 %85 to i32, !dbg !3570
  %shl.i.i.i = shl i32 %conv.i.i.i726, 16, !dbg !3571
  %86 = load i8**, i8*** %b.addr.i.i.i710, align 8, !dbg !3572
  %87 = load i8*, i8** %86, align 8, !dbg !3573
  %add.ptr2.i.i.i = getelementptr inbounds i8, i8* %87, i64 -3, !dbg !3574
  %arrayidx3.i.i.i = getelementptr inbounds i8, i8* %add.ptr2.i.i.i, i64 1, !dbg !3575
  %88 = load i8, i8* %arrayidx3.i.i.i, align 1, !dbg !3575
  %conv4.i.i.i = zext i8 %88 to i32, !dbg !3575
  %shl5.i.i.i = shl i32 %conv4.i.i.i, 8, !dbg !3576
  %or.i.i.i = or i32 %shl.i.i.i, %shl5.i.i.i, !dbg !3577
  %89 = load i8**, i8*** %b.addr.i.i.i710, align 8, !dbg !3578
  %90 = load i8*, i8** %89, align 8, !dbg !3579
  %add.ptr6.i.i.i = getelementptr inbounds i8, i8* %90, i64 -3, !dbg !3580
  %91 = load i8, i8* %add.ptr6.i.i.i, align 1, !dbg !3581
  %conv8.i.i.i = zext i8 %91 to i32, !dbg !3581
  %or9.i.i.i = or i32 %or.i.i.i, %conv8.i.i.i, !dbg !3582
  store i32 %or9.i.i.i, i32* %retval.i712, align 4, !dbg !3583
  br label %bytestream2_get_le24.exit, !dbg !3583

bytestream2_get_le24.exit:                        ; preds = %if.then.i722, %if.end.i727
  %92 = load i32, i32* %retval.i712, align 4, !dbg !3584
  store i32 %92, i32* %flags, align 4, !dbg !3586
  %93 = load i32, i32* %flags, align 4, !dbg !3587
  %and = and i32 %93, 2, !dbg !3589
  %tobool = icmp ne i32 %and, 0, !dbg !3589
  br i1 %tobool, label %if.then22, label %if.end24, !dbg !3590

if.then22:                                        ; preds = %bytestream2_get_le24.exit
  %94 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3591
  %is_tile23 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %94, i32 0, i32 18, !dbg !3592
  store i32 1, i32* %is_tile23, align 4, !dbg !3593
  br label %if.end24, !dbg !3591

if.end24:                                         ; preds = %if.then22, %bytestream2_get_le24.exit
  %95 = load i32, i32* %flags, align 4, !dbg !3594
  %and25 = and i32 %95, 8, !dbg !3596
  %tobool26 = icmp ne i32 %and25, 0, !dbg !3596
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !3597

if.then27:                                        ; preds = %if.end24
  %96 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3598
  %avctx28 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %96, i32 0, i32 2, !dbg !3600
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx28, align 8, !dbg !3600
  %98 = bitcast %struct.AVCodecContext* %97 to i8*, !dbg !3598
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %98, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0)), !dbg !3601
  store i32 -1163346256, i32* %retval, align 4, !dbg !3602
  br label %return, !dbg !3602

if.end29:                                         ; preds = %if.end24
  %99 = load i32, i32* %flags, align 4, !dbg !3603
  %and30 = and i32 %99, 16, !dbg !3605
  %tobool31 = icmp ne i32 %and30, 0, !dbg !3605
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !3606

if.then32:                                        ; preds = %if.end29
  %100 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3607
  %avctx33 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %100, i32 0, i32 2, !dbg !3609
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx33, align 8, !dbg !3609
  %102 = bitcast %struct.AVCodecContext* %101 to i8*, !dbg !3607
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %102, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0)), !dbg !3610
  store i32 -1163346256, i32* %retval, align 4, !dbg !3611
  br label %return, !dbg !3611

if.end34:                                         ; preds = %if.end29
  br label %while.cond, !dbg !3612

while.cond:                                       ; preds = %bytestream2_skip.exit545, %bytestream2_get_buffer.exit, %if.end427, %if.end382, %bytestream2_get_le32.exit746, %if.end354, %bytestream2_get_le32.exit813, %bytestream2_get_le32.exit891, %if.end287, %if.end34
  %103 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3613
  %gb35 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %103, i32 0, i32 20, !dbg !3614
  store %struct.GetByteContext* %gb35, %struct.GetByteContext** %g.addr.i747, align 8, !dbg !3615
  %104 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i747, align 8, !dbg !3616
  %buffer_end.i748 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %104, i32 0, i32 1, !dbg !3617
  %105 = load i8*, i8** %buffer_end.i748, align 8, !dbg !3617
  %106 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i747, align 8, !dbg !3618
  %buffer.i749 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %106, i32 0, i32 0, !dbg !3619
  %107 = load i8*, i8** %buffer.i749, align 8, !dbg !3619
  %sub.ptr.lhs.cast.i750 = ptrtoint i8* %105 to i64, !dbg !3620
  %sub.ptr.rhs.cast.i751 = ptrtoint i8* %107 to i64, !dbg !3620
  %sub.ptr.sub.i752 = sub i64 %sub.ptr.lhs.cast.i750, %sub.ptr.rhs.cast.i751, !dbg !3620
  %conv.i753 = trunc i64 %sub.ptr.sub.i752 to i32, !dbg !3616
  %cmp37 = icmp ugt i32 %conv.i753, 0, !dbg !3621
  br i1 %cmp37, label %land.rhs, label %land.end, !dbg !3622

land.rhs:                                         ; preds = %while.cond
  %108 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3623
  %gb38 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %108, i32 0, i32 20, !dbg !3625
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb38, i32 0, i32 0, !dbg !3626
  %109 = load i8*, i8** %buffer, align 8, !dbg !3626
  %110 = load i8, i8* %109, align 1, !dbg !3627
  %conv = zext i8 %110 to i32, !dbg !3627
  %tobool39 = icmp ne i32 %conv, 0, !dbg !3628
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %111 = phi i1 [ false, %while.cond ], [ %tobool39, %land.rhs ]
  br i1 %111, label %while.body, label %while.end474, !dbg !3629

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %var_size, metadata !3631, metadata !1741), !dbg !3632
  %112 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3633
  %call40 = call i32 @check_header_variable(%struct.EXRContext* %112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 38), !dbg !3634
  store i32 %call40, i32* %var_size, align 4, !dbg !3635
  %cmp41 = icmp sge i32 %call40, 0, !dbg !3636
  br i1 %cmp41, label %if.then43, label %if.else292, !dbg !3637

if.then43:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %ch_gb, metadata !3638, metadata !1741), !dbg !3639
  %113 = load i32, i32* %var_size, align 4, !dbg !3640
  %tobool44 = icmp ne i32 %113, 0, !dbg !3640
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !3642

if.then45:                                        ; preds = %if.then43
  store i32 -1094995529, i32* %ret, align 4, !dbg !3643
  br label %fail, !dbg !3645

if.end46:                                         ; preds = %if.then43
  %114 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3646
  %gb47 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %114, i32 0, i32 20, !dbg !3647
  %buffer48 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb47, i32 0, i32 0, !dbg !3648
  %115 = load i8*, i8** %buffer48, align 8, !dbg !3648
  %116 = load i32, i32* %var_size, align 4, !dbg !3649
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i773, align 8, !dbg !3650
  store i8* %115, i8** %buf.addr.i, align 8, !dbg !3650
  store i32 %116, i32* %buf_size.addr.i, align 4, !dbg !3650
  %117 = load i32, i32* %buf_size.addr.i, align 4, !dbg !3651
  %cmp.i774 = icmp sge i32 %117, 0, !dbg !3652
  br i1 %cmp.i774, label %bytestream2_init.exit, label %if.then.i775, !dbg !3653

if.then.i775:                                     ; preds = %if.end46
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i32 137) #10, !dbg !3654
  call void @abort() #11, !dbg !3655
  unreachable, !dbg !3656

bytestream2_init.exit:                            ; preds = %if.end46
  %118 = load i8*, i8** %buf.addr.i, align 8, !dbg !3657
  %119 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i773, align 8, !dbg !3658
  %buffer.i777 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %119, i32 0, i32 0, !dbg !3659
  store i8* %118, i8** %buffer.i777, align 8, !dbg !3660
  %120 = load i8*, i8** %buf.addr.i, align 8, !dbg !3661
  %121 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i773, align 8, !dbg !3662
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %121, i32 0, i32 2, !dbg !3663
  store i8* %120, i8** %buffer_start.i, align 8, !dbg !3664
  %122 = load i8*, i8** %buf.addr.i, align 8, !dbg !3665
  %123 = load i32, i32* %buf_size.addr.i, align 4, !dbg !3666
  %idx.ext.i778 = sext i32 %123 to i64, !dbg !3667
  %add.ptr.i779 = getelementptr inbounds i8, i8* %122, i64 %idx.ext.i778, !dbg !3667
  %124 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i773, align 8, !dbg !3668
  %buffer_end.i780 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %124, i32 0, i32 1, !dbg !3669
  store i8* %add.ptr.i779, i8** %buffer_end.i780, align 8, !dbg !3670
  br label %while.cond49, !dbg !3671

while.cond49:                                     ; preds = %if.end223, %bytestream2_init.exit
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i781, align 8, !dbg !3672
  %125 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i781, align 8, !dbg !3673
  %buffer_end.i782 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %125, i32 0, i32 1, !dbg !3674
  %126 = load i8*, i8** %buffer_end.i782, align 8, !dbg !3674
  %127 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i781, align 8, !dbg !3675
  %buffer.i783 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %127, i32 0, i32 0, !dbg !3676
  %128 = load i8*, i8** %buffer.i783, align 8, !dbg !3676
  %sub.ptr.lhs.cast.i784 = ptrtoint i8* %126 to i64, !dbg !3677
  %sub.ptr.rhs.cast.i785 = ptrtoint i8* %128 to i64, !dbg !3677
  %sub.ptr.sub.i786 = sub i64 %sub.ptr.lhs.cast.i784, %sub.ptr.rhs.cast.i785, !dbg !3677
  %conv.i787 = trunc i64 %sub.ptr.sub.i786 to i32, !dbg !3673
  %cmp51 = icmp uge i32 %conv.i787, 19, !dbg !3678
  br i1 %cmp51, label %while.body53, label %while.end224, !dbg !3679

while.body53:                                     ; preds = %while.cond49
  call void @llvm.dbg.declare(metadata %struct.EXRChannel** %channel, metadata !3680, metadata !1741), !dbg !3681
  call void @llvm.dbg.declare(metadata i32* %current_pixel_type, metadata !3682, metadata !1741), !dbg !3683
  call void @llvm.dbg.declare(metadata i32* %channel_index, metadata !3684, metadata !1741), !dbg !3685
  store i32 -1, i32* %channel_index, align 4, !dbg !3685
  call void @llvm.dbg.declare(metadata i32* %xsub, metadata !3686, metadata !1741), !dbg !3687
  call void @llvm.dbg.declare(metadata i32* %ysub, metadata !3688, metadata !1741), !dbg !3689
  %129 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3690
  %layer = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %129, i32 0, i32 27, !dbg !3692
  %130 = load i8*, i8** %layer, align 8, !dbg !3692
  %call54 = call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0)) #12, !dbg !3693
  %cmp55 = icmp ne i32 %call54, 0, !dbg !3694
  br i1 %cmp55, label %if.then57, label %if.else81, !dbg !3695

if.then57:                                        ; preds = %while.body53
  %buffer58 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3696
  %131 = load i8*, i8** %buffer58, align 8, !dbg !3696
  %132 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3699
  %layer59 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %132, i32 0, i32 27, !dbg !3700
  %133 = load i8*, i8** %layer59, align 8, !dbg !3700
  %134 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3701
  %layer60 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %134, i32 0, i32 27, !dbg !3702
  %135 = load i8*, i8** %layer60, align 8, !dbg !3702
  %call61 = call i64 @strlen(i8* %135) #12, !dbg !3703
  %call62 = call i32 @strncmp(i8* %131, i8* %133, i64 %call61) #12, !dbg !3704
  %cmp63 = icmp eq i32 %call62, 0, !dbg !3706
  br i1 %cmp63, label %if.then65, label %if.else, !dbg !3707

if.then65:                                        ; preds = %if.then57
  store i32 1, i32* %layer_match, align 4, !dbg !3708
  %136 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3710
  %avctx66 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %136, i32 0, i32 2, !dbg !3711
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx66, align 8, !dbg !3711
  %138 = bitcast %struct.AVCodecContext* %137 to i8*, !dbg !3710
  %buffer67 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3712
  %139 = load i8*, i8** %buffer67, align 8, !dbg !3712
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i32 0, i32 0), i8* %139), !dbg !3713
  %140 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3714
  %layer68 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %140, i32 0, i32 27, !dbg !3715
  %141 = load i8*, i8** %layer68, align 8, !dbg !3715
  %call69 = call i64 @strlen(i8* %141) #12, !dbg !3716
  %buffer70 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3717
  %142 = load i8*, i8** %buffer70, align 8, !dbg !3718
  %add.ptr = getelementptr inbounds i8, i8* %142, i64 %call69, !dbg !3718
  store i8* %add.ptr, i8** %buffer70, align 8, !dbg !3718
  %buffer71 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3719
  %143 = load i8*, i8** %buffer71, align 8, !dbg !3719
  %144 = load i8, i8* %143, align 1, !dbg !3721
  %conv72 = zext i8 %144 to i32, !dbg !3721
  %cmp73 = icmp eq i32 %conv72, 46, !dbg !3722
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !3723

if.then75:                                        ; preds = %if.then65
  %buffer76 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3724
  %145 = load i8*, i8** %buffer76, align 8, !dbg !3725
  %incdec.ptr = getelementptr inbounds i8, i8* %145, i32 1, !dbg !3725
  store i8* %incdec.ptr, i8** %buffer76, align 8, !dbg !3725
  br label %if.end77, !dbg !3726

if.end77:                                         ; preds = %if.then75, %if.then65
  br label %if.end80, !dbg !3727

if.else:                                          ; preds = %if.then57
  store i32 0, i32* %layer_match, align 4, !dbg !3728
  %146 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3730
  %avctx78 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %146, i32 0, i32 2, !dbg !3731
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx78, align 8, !dbg !3731
  %148 = bitcast %struct.AVCodecContext* %147 to i8*, !dbg !3730
  %buffer79 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3732
  %149 = load i8*, i8** %buffer79, align 8, !dbg !3732
  call void (i8*, i32, i8*, ...) @av_log(i8* %148, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i32 0, i32 0), i8* %149), !dbg !3733
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.end77
  br label %if.end82, !dbg !3734

if.else81:                                        ; preds = %while.body53
  store i32 1, i32* %layer_match, align 4, !dbg !3735
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.end80
  %150 = load i32, i32* %layer_match, align 4, !dbg !3737
  %tobool83 = icmp ne i32 %150, 0, !dbg !3737
  br i1 %tobool83, label %if.then84, label %if.end140, !dbg !3739

if.then84:                                        ; preds = %if.end82
  %buffer85 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3740
  %151 = load i8*, i8** %buffer85, align 8, !dbg !3740
  %call86 = call i32 @strcmp(i8* %151, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0)) #12, !dbg !3743
  %tobool87 = icmp ne i32 %call86, 0, !dbg !3743
  br i1 %tobool87, label %lor.lhs.false, label %if.then95, !dbg !3744

lor.lhs.false:                                    ; preds = %if.then84
  %buffer88 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3745
  %152 = load i8*, i8** %buffer88, align 8, !dbg !3745
  %call89 = call i32 @strcmp(i8* %152, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0)) #12, !dbg !3746
  %tobool90 = icmp ne i32 %call89, 0, !dbg !3746
  br i1 %tobool90, label %lor.lhs.false91, label %if.then95, !dbg !3747

lor.lhs.false91:                                  ; preds = %lor.lhs.false
  %buffer92 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3748
  %153 = load i8*, i8** %buffer92, align 8, !dbg !3748
  %call93 = call i32 @strcmp(i8* %153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i32 0, i32 0)) #12, !dbg !3749
  %tobool94 = icmp ne i32 %call93, 0, !dbg !3749
  br i1 %tobool94, label %if.else97, label %if.then95, !dbg !3750

if.then95:                                        ; preds = %lor.lhs.false91, %lor.lhs.false, %if.then84
  store i32 0, i32* %channel_index, align 4, !dbg !3752
  %154 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3754
  %is_luma96 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %154, i32 0, i32 19, !dbg !3755
  store i32 0, i32* %is_luma96, align 8, !dbg !3756
  br label %if.end139, !dbg !3757

if.else97:                                        ; preds = %lor.lhs.false91
  %buffer98 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3758
  %155 = load i8*, i8** %buffer98, align 8, !dbg !3758
  %call99 = call i32 @strcmp(i8* %155, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i32 0, i32 0)) #12, !dbg !3761
  %tobool100 = icmp ne i32 %call99, 0, !dbg !3761
  br i1 %tobool100, label %lor.lhs.false101, label %if.then105, !dbg !3762

lor.lhs.false101:                                 ; preds = %if.else97
  %buffer102 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3763
  %156 = load i8*, i8** %buffer102, align 8, !dbg !3763
  %call103 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i32 0, i32 0)) #12, !dbg !3764
  %tobool104 = icmp ne i32 %call103, 0, !dbg !3764
  br i1 %tobool104, label %if.else107, label %if.then105, !dbg !3765

if.then105:                                       ; preds = %lor.lhs.false101, %if.else97
  store i32 1, i32* %channel_index, align 4, !dbg !3767
  %157 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3769
  %is_luma106 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %157, i32 0, i32 19, !dbg !3770
  store i32 0, i32* %is_luma106, align 8, !dbg !3771
  br label %if.end138, !dbg !3772

if.else107:                                       ; preds = %lor.lhs.false101
  %buffer108 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3773
  %158 = load i8*, i8** %buffer108, align 8, !dbg !3773
  %call109 = call i32 @strcmp(i8* %158, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i32 0, i32 0)) #12, !dbg !3776
  %tobool110 = icmp ne i32 %call109, 0, !dbg !3776
  br i1 %tobool110, label %if.else113, label %if.then111, !dbg !3777

if.then111:                                       ; preds = %if.else107
  store i32 1, i32* %channel_index, align 4, !dbg !3778
  %159 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3780
  %is_luma112 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %159, i32 0, i32 19, !dbg !3781
  store i32 1, i32* %is_luma112, align 8, !dbg !3782
  br label %if.end137, !dbg !3783

if.else113:                                       ; preds = %if.else107
  %buffer114 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3784
  %160 = load i8*, i8** %buffer114, align 8, !dbg !3784
  %call115 = call i32 @strcmp(i8* %160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0)) #12, !dbg !3787
  %tobool116 = icmp ne i32 %call115, 0, !dbg !3787
  br i1 %tobool116, label %lor.lhs.false117, label %if.then125, !dbg !3788

lor.lhs.false117:                                 ; preds = %if.else113
  %buffer118 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3789
  %161 = load i8*, i8** %buffer118, align 8, !dbg !3789
  %call119 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i32 0, i32 0)) #12, !dbg !3790
  %tobool120 = icmp ne i32 %call119, 0, !dbg !3790
  br i1 %tobool120, label %lor.lhs.false121, label %if.then125, !dbg !3791

lor.lhs.false121:                                 ; preds = %lor.lhs.false117
  %buffer122 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3792
  %162 = load i8*, i8** %buffer122, align 8, !dbg !3792
  %call123 = call i32 @strcmp(i8* %162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i32 0, i32 0)) #12, !dbg !3793
  %tobool124 = icmp ne i32 %call123, 0, !dbg !3793
  br i1 %tobool124, label %if.else127, label %if.then125, !dbg !3794

if.then125:                                       ; preds = %lor.lhs.false121, %lor.lhs.false117, %if.else113
  store i32 2, i32* %channel_index, align 4, !dbg !3796
  %163 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3798
  %is_luma126 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %163, i32 0, i32 19, !dbg !3799
  store i32 0, i32* %is_luma126, align 8, !dbg !3800
  br label %if.end136, !dbg !3801

if.else127:                                       ; preds = %lor.lhs.false121
  %buffer128 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3802
  %164 = load i8*, i8** %buffer128, align 8, !dbg !3802
  %call129 = call i32 @strcmp(i8* %164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0)) #12, !dbg !3805
  %tobool130 = icmp ne i32 %call129, 0, !dbg !3805
  br i1 %tobool130, label %if.else132, label %if.then131, !dbg !3806

if.then131:                                       ; preds = %if.else127
  store i32 3, i32* %channel_index, align 4, !dbg !3807
  br label %if.end135, !dbg !3809

if.else132:                                       ; preds = %if.else127
  %165 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3810
  %avctx133 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %165, i32 0, i32 2, !dbg !3812
  %166 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx133, align 8, !dbg !3812
  %167 = bitcast %struct.AVCodecContext* %166 to i8*, !dbg !3810
  %buffer134 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !3813
  %168 = load i8*, i8** %buffer134, align 8, !dbg !3813
  call void (i8*, i32, i8*, ...) @av_log(i8* %167, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* %168), !dbg !3814
  br label %if.end135

if.end135:                                        ; preds = %if.else132, %if.then131
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then125
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then111
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then105
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then95
  br label %if.end140, !dbg !3815

if.end140:                                        ; preds = %if.end139, %if.end82
  br label %while.cond141, !dbg !3816

while.cond141:                                    ; preds = %while.body149, %if.end140
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i788, align 8, !dbg !3817
  %169 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i788, align 8, !dbg !3818
  %buffer_end.i789 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %169, i32 0, i32 1, !dbg !3819
  %170 = load i8*, i8** %buffer_end.i789, align 8, !dbg !3819
  %171 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i788, align 8, !dbg !3820
  %buffer.i790 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %171, i32 0, i32 0, !dbg !3821
  %172 = load i8*, i8** %buffer.i790, align 8, !dbg !3821
  %sub.ptr.lhs.cast.i791 = ptrtoint i8* %170 to i64, !dbg !3822
  %sub.ptr.rhs.cast.i792 = ptrtoint i8* %172 to i64, !dbg !3822
  %sub.ptr.sub.i793 = sub i64 %sub.ptr.lhs.cast.i791, %sub.ptr.rhs.cast.i792, !dbg !3822
  %conv.i794 = trunc i64 %sub.ptr.sub.i793 to i32, !dbg !3818
  %cmp143 = icmp ugt i32 %conv.i794, 0, !dbg !3823
  br i1 %cmp143, label %land.rhs145, label %land.end148, !dbg !3824

land.rhs145:                                      ; preds = %while.cond141
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i857, align 8, !dbg !3825
  %173 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i857, align 8, !dbg !3826
  %buffer_end.i858 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %173, i32 0, i32 1, !dbg !3827
  %174 = load i8*, i8** %buffer_end.i858, align 8, !dbg !3827
  %175 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i857, align 8, !dbg !3828
  %buffer.i859 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %175, i32 0, i32 0, !dbg !3829
  %176 = load i8*, i8** %buffer.i859, align 8, !dbg !3829
  %sub.ptr.lhs.cast.i860 = ptrtoint i8* %174 to i64, !dbg !3830
  %sub.ptr.rhs.cast.i861 = ptrtoint i8* %176 to i64, !dbg !3830
  %sub.ptr.sub.i862 = sub i64 %sub.ptr.lhs.cast.i860, %sub.ptr.rhs.cast.i861, !dbg !3830
  %cmp.i863 = icmp slt i64 %sub.ptr.sub.i862, 1, !dbg !3831
  br i1 %cmp.i863, label %if.then.i866, label %if.end.i871, !dbg !3832

if.then.i866:                                     ; preds = %land.rhs145
  %177 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i857, align 8, !dbg !3833
  %buffer_end1.i864 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %177, i32 0, i32 1, !dbg !3834
  %178 = load i8*, i8** %buffer_end1.i864, align 8, !dbg !3834
  %179 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i857, align 8, !dbg !3835
  %buffer2.i865 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %179, i32 0, i32 0, !dbg !3836
  store i8* %178, i8** %buffer2.i865, align 8, !dbg !3837
  store i32 0, i32* %retval.i856, align 4, !dbg !3838
  br label %bytestream2_get_byte.exit872, !dbg !3838

if.end.i871:                                      ; preds = %land.rhs145
  %180 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i857, align 8, !dbg !3839
  store %struct.GetByteContext* %180, %struct.GetByteContext** %g.addr.i.i855, align 8, !dbg !3840
  %181 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i855, align 8, !dbg !3841
  %buffer.i.i867 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %181, i32 0, i32 0, !dbg !3842
  store i8** %buffer.i.i867, i8*** %b.addr.i.i.i854, align 8, !dbg !3843
  %182 = load i8**, i8*** %b.addr.i.i.i854, align 8, !dbg !3844
  %183 = load i8*, i8** %182, align 8, !dbg !3845
  %add.ptr.i.i.i868 = getelementptr inbounds i8, i8* %183, i64 1, !dbg !3845
  store i8* %add.ptr.i.i.i868, i8** %182, align 8, !dbg !3845
  %184 = load i8**, i8*** %b.addr.i.i.i854, align 8, !dbg !3846
  %185 = load i8*, i8** %184, align 8, !dbg !3847
  %add.ptr1.i.i.i869 = getelementptr inbounds i8, i8* %185, i64 -1, !dbg !3848
  %186 = load i8, i8* %add.ptr1.i.i.i869, align 1, !dbg !3849
  %conv.i.i.i870 = zext i8 %186 to i32, !dbg !3850
  store i32 %conv.i.i.i870, i32* %retval.i856, align 4, !dbg !3851
  br label %bytestream2_get_byte.exit872, !dbg !3851

bytestream2_get_byte.exit872:                     ; preds = %if.then.i866, %if.end.i871
  %187 = load i32, i32* %retval.i856, align 4, !dbg !3852
  %tobool147 = icmp ne i32 %187, 0, !dbg !3853
  br label %land.end148

land.end148:                                      ; preds = %bytestream2_get_byte.exit872, %while.cond141
  %188 = phi i1 [ false, %while.cond141 ], [ %tobool147, %bytestream2_get_byte.exit872 ]
  br i1 %188, label %while.body149, label %while.end, !dbg !3855

while.body149:                                    ; preds = %land.end148
  br label %while.cond141, !dbg !3857, !llvm.loop !3858

while.end:                                        ; preds = %land.end148
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i949, align 8, !dbg !3859
  %189 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i949, align 8, !dbg !3860
  %buffer_end.i950 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %189, i32 0, i32 1, !dbg !3861
  %190 = load i8*, i8** %buffer_end.i950, align 8, !dbg !3861
  %191 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i949, align 8, !dbg !3862
  %buffer.i951 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %191, i32 0, i32 0, !dbg !3863
  %192 = load i8*, i8** %buffer.i951, align 8, !dbg !3863
  %sub.ptr.lhs.cast.i952 = ptrtoint i8* %190 to i64, !dbg !3864
  %sub.ptr.rhs.cast.i953 = ptrtoint i8* %192 to i64, !dbg !3864
  %sub.ptr.sub.i954 = sub i64 %sub.ptr.lhs.cast.i952, %sub.ptr.rhs.cast.i953, !dbg !3864
  %conv.i955 = trunc i64 %sub.ptr.sub.i954 to i32, !dbg !3860
  %cmp151 = icmp ult i32 %conv.i955, 4, !dbg !3865
  br i1 %cmp151, label %if.then153, label %if.end155, !dbg !3866

if.then153:                                       ; preds = %while.end
  %193 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3867
  %avctx154 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %193, i32 0, i32 2, !dbg !3869
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx154, align 8, !dbg !3869
  %195 = bitcast %struct.AVCodecContext* %194 to i8*, !dbg !3867
  call void (i8*, i32, i8*, ...) @av_log(i8* %195, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i32 0, i32 0)), !dbg !3870
  store i32 -1094995529, i32* %ret, align 4, !dbg !3871
  br label %fail, !dbg !3872

if.end155:                                        ; preds = %while.end
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i1018, align 8, !dbg !3873
  %196 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i1018, align 8, !dbg !3874
  %buffer_end.i1019 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %196, i32 0, i32 1, !dbg !3875
  %197 = load i8*, i8** %buffer_end.i1019, align 8, !dbg !3875
  %198 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i1018, align 8, !dbg !3876
  %buffer.i1020 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %198, i32 0, i32 0, !dbg !3877
  %199 = load i8*, i8** %buffer.i1020, align 8, !dbg !3877
  %sub.ptr.lhs.cast.i1021 = ptrtoint i8* %197 to i64, !dbg !3878
  %sub.ptr.rhs.cast.i1022 = ptrtoint i8* %199 to i64, !dbg !3878
  %sub.ptr.sub.i1023 = sub i64 %sub.ptr.lhs.cast.i1021, %sub.ptr.rhs.cast.i1022, !dbg !3878
  %cmp.i1024 = icmp slt i64 %sub.ptr.sub.i1023, 4, !dbg !3879
  br i1 %cmp.i1024, label %if.then.i1027, label %if.end.i1032, !dbg !3880

if.then.i1027:                                    ; preds = %if.end155
  %200 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i1018, align 8, !dbg !3881
  %buffer_end1.i1025 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %200, i32 0, i32 1, !dbg !3882
  %201 = load i8*, i8** %buffer_end1.i1025, align 8, !dbg !3882
  %202 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i1018, align 8, !dbg !3883
  %buffer2.i1026 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %202, i32 0, i32 0, !dbg !3884
  store i8* %201, i8** %buffer2.i1026, align 8, !dbg !3885
  store i32 0, i32* %retval.i1017, align 4, !dbg !3886
  br label %bytestream2_get_le32.exit1033, !dbg !3886

if.end.i1032:                                     ; preds = %if.end155
  %203 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i1018, align 8, !dbg !3887
  store %struct.GetByteContext* %203, %struct.GetByteContext** %g.addr.i.i1016, align 8, !dbg !3888
  %204 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i1016, align 8, !dbg !3889
  %buffer.i.i1028 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %204, i32 0, i32 0, !dbg !3890
  store i8** %buffer.i.i1028, i8*** %b.addr.i.i.i1015, align 8, !dbg !3891
  %205 = load i8**, i8*** %b.addr.i.i.i1015, align 8, !dbg !3892
  %206 = load i8*, i8** %205, align 8, !dbg !3893
  %add.ptr.i.i.i1029 = getelementptr inbounds i8, i8* %206, i64 4, !dbg !3893
  store i8* %add.ptr.i.i.i1029, i8** %205, align 8, !dbg !3893
  %207 = load i8**, i8*** %b.addr.i.i.i1015, align 8, !dbg !3894
  %208 = load i8*, i8** %207, align 8, !dbg !3895
  %add.ptr1.i.i.i1030 = getelementptr inbounds i8, i8* %208, i64 -4, !dbg !3896
  %209 = bitcast i8* %add.ptr1.i.i.i1030 to %union.unaligned_32*, !dbg !3897
  %l.i.i.i1031 = bitcast %union.unaligned_32* %209 to i32*, !dbg !3897
  %210 = load i32, i32* %l.i.i.i1031, align 1, !dbg !3897
  store i32 %210, i32* %retval.i1017, align 4, !dbg !3898
  br label %bytestream2_get_le32.exit1033, !dbg !3898

bytestream2_get_le32.exit1033:                    ; preds = %if.then.i1027, %if.end.i1032
  %211 = load i32, i32* %retval.i1017, align 4, !dbg !3899
  store i32 %211, i32* %current_pixel_type, align 4, !dbg !3900
  %212 = load i32, i32* %current_pixel_type, align 4, !dbg !3901
  %cmp157 = icmp uge i32 %212, 3, !dbg !3903
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !3904

if.then159:                                       ; preds = %bytestream2_get_le32.exit1033
  %213 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !3905
  %avctx160 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %213, i32 0, i32 2, !dbg !3907
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx160, align 8, !dbg !3907
  %215 = bitcast %struct.AVCodecContext* %214 to i8*, !dbg !3905
  %216 = load i32, i32* %current_pixel_type, align 4, !dbg !3908
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %215, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i32 0, i32 0), i32 %216), !dbg !3909
  store i32 -1163346256, i32* %ret, align 4, !dbg !3910
  br label %fail, !dbg !3911

if.end161:                                        ; preds = %bytestream2_get_le32.exit1033
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i994, align 8, !dbg !3912
  store i32 4, i32* %size.addr.i995, align 4, !dbg !3912
  %217 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i994, align 8, !dbg !3913
  %buffer_end.i996 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %217, i32 0, i32 1, !dbg !3914
  %218 = load i8*, i8** %buffer_end.i996, align 8, !dbg !3914
  %219 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i994, align 8, !dbg !3915
  %buffer.i997 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %219, i32 0, i32 0, !dbg !3916
  %220 = load i8*, i8** %buffer.i997, align 8, !dbg !3916
  %sub.ptr.lhs.cast.i998 = ptrtoint i8* %218 to i64, !dbg !3917
  %sub.ptr.rhs.cast.i999 = ptrtoint i8* %220 to i64, !dbg !3917
  %sub.ptr.sub.i1000 = sub i64 %sub.ptr.lhs.cast.i998, %sub.ptr.rhs.cast.i999, !dbg !3917
  %221 = load i32, i32* %size.addr.i995, align 4, !dbg !3918
  %conv.i1001 = zext i32 %221 to i64, !dbg !3919
  %cmp.i1002 = icmp sgt i64 %sub.ptr.sub.i1000, %conv.i1001, !dbg !3920
  br i1 %cmp.i1002, label %cond.true.i1004, label %cond.false.i1010, !dbg !3921

cond.true.i1004:                                  ; preds = %if.end161
  %222 = load i32, i32* %size.addr.i995, align 4, !dbg !3922
  %conv2.i1003 = zext i32 %222 to i64, !dbg !3924
  br label %bytestream2_skip.exit1014, !dbg !3925

cond.false.i1010:                                 ; preds = %if.end161
  %223 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i994, align 8, !dbg !3926
  %buffer_end3.i1005 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %223, i32 0, i32 1, !dbg !3928
  %224 = load i8*, i8** %buffer_end3.i1005, align 8, !dbg !3928
  %225 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i994, align 8, !dbg !3929
  %buffer4.i1006 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %225, i32 0, i32 0, !dbg !3930
  %226 = load i8*, i8** %buffer4.i1006, align 8, !dbg !3930
  %sub.ptr.lhs.cast5.i1007 = ptrtoint i8* %224 to i64, !dbg !3931
  %sub.ptr.rhs.cast6.i1008 = ptrtoint i8* %226 to i64, !dbg !3931
  %sub.ptr.sub7.i1009 = sub i64 %sub.ptr.lhs.cast5.i1007, %sub.ptr.rhs.cast6.i1008, !dbg !3931
  br label %bytestream2_skip.exit1014, !dbg !3932

bytestream2_skip.exit1014:                        ; preds = %cond.true.i1004, %cond.false.i1010
  %cond.i1011 = phi i64 [ %conv2.i1003, %cond.true.i1004 ], [ %sub.ptr.sub7.i1009, %cond.false.i1010 ], !dbg !3933
  %227 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i994, align 8, !dbg !3935
  %buffer8.i1012 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %227, i32 0, i32 0, !dbg !3936
  %228 = load i8*, i8** %buffer8.i1012, align 8, !dbg !3937
  %add.ptr.i1013 = getelementptr inbounds i8, i8* %228, i64 %cond.i1011, !dbg !3937
  store i8* %add.ptr.i1013, i8** %buffer8.i1012, align 8, !dbg !3937
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i978, align 8, !dbg !3938
  %229 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i978, align 8, !dbg !3939
  %buffer_end.i979 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %229, i32 0, i32 1, !dbg !3940
  %230 = load i8*, i8** %buffer_end.i979, align 8, !dbg !3940
  %231 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i978, align 8, !dbg !3941
  %buffer.i980 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %231, i32 0, i32 0, !dbg !3942
  %232 = load i8*, i8** %buffer.i980, align 8, !dbg !3942
  %sub.ptr.lhs.cast.i981 = ptrtoint i8* %230 to i64, !dbg !3943
  %sub.ptr.rhs.cast.i982 = ptrtoint i8* %232 to i64, !dbg !3943
  %sub.ptr.sub.i983 = sub i64 %sub.ptr.lhs.cast.i981, %sub.ptr.rhs.cast.i982, !dbg !3943
  %cmp.i984 = icmp slt i64 %sub.ptr.sub.i983, 4, !dbg !3944
  br i1 %cmp.i984, label %if.then.i987, label %if.end.i992, !dbg !3945

if.then.i987:                                     ; preds = %bytestream2_skip.exit1014
  %233 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i978, align 8, !dbg !3946
  %buffer_end1.i985 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %233, i32 0, i32 1, !dbg !3947
  %234 = load i8*, i8** %buffer_end1.i985, align 8, !dbg !3947
  %235 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i978, align 8, !dbg !3948
  %buffer2.i986 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %235, i32 0, i32 0, !dbg !3949
  store i8* %234, i8** %buffer2.i986, align 8, !dbg !3950
  store i32 0, i32* %retval.i977, align 4, !dbg !3951
  br label %bytestream2_get_le32.exit993, !dbg !3951

if.end.i992:                                      ; preds = %bytestream2_skip.exit1014
  %236 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i978, align 8, !dbg !3952
  store %struct.GetByteContext* %236, %struct.GetByteContext** %g.addr.i.i976, align 8, !dbg !3953
  %237 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i976, align 8, !dbg !3954
  %buffer.i.i988 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %237, i32 0, i32 0, !dbg !3955
  store i8** %buffer.i.i988, i8*** %b.addr.i.i.i975, align 8, !dbg !3956
  %238 = load i8**, i8*** %b.addr.i.i.i975, align 8, !dbg !3957
  %239 = load i8*, i8** %238, align 8, !dbg !3958
  %add.ptr.i.i.i989 = getelementptr inbounds i8, i8* %239, i64 4, !dbg !3958
  store i8* %add.ptr.i.i.i989, i8** %238, align 8, !dbg !3958
  %240 = load i8**, i8*** %b.addr.i.i.i975, align 8, !dbg !3959
  %241 = load i8*, i8** %240, align 8, !dbg !3960
  %add.ptr1.i.i.i990 = getelementptr inbounds i8, i8* %241, i64 -4, !dbg !3961
  %242 = bitcast i8* %add.ptr1.i.i.i990 to %union.unaligned_32*, !dbg !3962
  %l.i.i.i991 = bitcast %union.unaligned_32* %242 to i32*, !dbg !3962
  %243 = load i32, i32* %l.i.i.i991, align 1, !dbg !3962
  store i32 %243, i32* %retval.i977, align 4, !dbg !3963
  br label %bytestream2_get_le32.exit993, !dbg !3963

bytestream2_get_le32.exit993:                     ; preds = %if.then.i987, %if.end.i992
  %244 = load i32, i32* %retval.i977, align 4, !dbg !3964
  store i32 %244, i32* %xsub, align 4, !dbg !3965
  store %struct.GetByteContext* %ch_gb, %struct.GetByteContext** %g.addr.i959, align 8, !dbg !3966
  %245 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i959, align 8, !dbg !3967
  %buffer_end.i960 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %245, i32 0, i32 1, !dbg !3968
  %246 = load i8*, i8** %buffer_end.i960, align 8, !dbg !3968
  %247 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i959, align 8, !dbg !3969
  %buffer.i961 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %247, i32 0, i32 0, !dbg !3970
  %248 = load i8*, i8** %buffer.i961, align 8, !dbg !3970
  %sub.ptr.lhs.cast.i962 = ptrtoint i8* %246 to i64, !dbg !3971
  %sub.ptr.rhs.cast.i963 = ptrtoint i8* %248 to i64, !dbg !3971
  %sub.ptr.sub.i964 = sub i64 %sub.ptr.lhs.cast.i962, %sub.ptr.rhs.cast.i963, !dbg !3971
  %cmp.i965 = icmp slt i64 %sub.ptr.sub.i964, 4, !dbg !3972
  br i1 %cmp.i965, label %if.then.i968, label %if.end.i973, !dbg !3973

if.then.i968:                                     ; preds = %bytestream2_get_le32.exit993
  %249 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i959, align 8, !dbg !3974
  %buffer_end1.i966 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %249, i32 0, i32 1, !dbg !3975
  %250 = load i8*, i8** %buffer_end1.i966, align 8, !dbg !3975
  %251 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i959, align 8, !dbg !3976
  %buffer2.i967 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %251, i32 0, i32 0, !dbg !3977
  store i8* %250, i8** %buffer2.i967, align 8, !dbg !3978
  store i32 0, i32* %retval.i958, align 4, !dbg !3979
  br label %bytestream2_get_le32.exit974, !dbg !3979

if.end.i973:                                      ; preds = %bytestream2_get_le32.exit993
  %252 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i959, align 8, !dbg !3980
  store %struct.GetByteContext* %252, %struct.GetByteContext** %g.addr.i.i957, align 8, !dbg !3981
  %253 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i957, align 8, !dbg !3982
  %buffer.i.i969 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %253, i32 0, i32 0, !dbg !3983
  store i8** %buffer.i.i969, i8*** %b.addr.i.i.i956, align 8, !dbg !3984
  %254 = load i8**, i8*** %b.addr.i.i.i956, align 8, !dbg !3985
  %255 = load i8*, i8** %254, align 8, !dbg !3986
  %add.ptr.i.i.i970 = getelementptr inbounds i8, i8* %255, i64 4, !dbg !3986
  store i8* %add.ptr.i.i.i970, i8** %254, align 8, !dbg !3986
  %256 = load i8**, i8*** %b.addr.i.i.i956, align 8, !dbg !3987
  %257 = load i8*, i8** %256, align 8, !dbg !3988
  %add.ptr1.i.i.i971 = getelementptr inbounds i8, i8* %257, i64 -4, !dbg !3989
  %258 = bitcast i8* %add.ptr1.i.i.i971 to %union.unaligned_32*, !dbg !3990
  %l.i.i.i972 = bitcast %union.unaligned_32* %258 to i32*, !dbg !3990
  %259 = load i32, i32* %l.i.i.i972, align 1, !dbg !3990
  store i32 %259, i32* %retval.i958, align 4, !dbg !3991
  br label %bytestream2_get_le32.exit974, !dbg !3991

bytestream2_get_le32.exit974:                     ; preds = %if.then.i968, %if.end.i973
  %260 = load i32, i32* %retval.i958, align 4, !dbg !3992
  store i32 %260, i32* %ysub, align 4, !dbg !3993
  %261 = load i32, i32* %xsub, align 4, !dbg !3994
  %cmp164 = icmp ne i32 %261, 1, !dbg !3996
  br i1 %cmp164, label %if.then169, label %lor.lhs.false166, !dbg !3997

lor.lhs.false166:                                 ; preds = %bytestream2_get_le32.exit974
  %262 = load i32, i32* %ysub, align 4, !dbg !3998
  %cmp167 = icmp ne i32 %262, 1, !dbg !4000
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !4001

if.then169:                                       ; preds = %lor.lhs.false166, %bytestream2_get_le32.exit974
  %263 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4002
  %avctx170 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %263, i32 0, i32 2, !dbg !4004
  %264 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx170, align 8, !dbg !4004
  %265 = bitcast %struct.AVCodecContext* %264 to i8*, !dbg !4002
  %266 = load i32, i32* %xsub, align 4, !dbg !4005
  %267 = load i32, i32* %ysub, align 4, !dbg !4006
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %265, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i32 0, i32 0), i32 %266, i32 %267), !dbg !4007
  store i32 -1163346256, i32* %ret, align 4, !dbg !4008
  br label %fail, !dbg !4009

if.end171:                                        ; preds = %lor.lhs.false166
  %268 = load i32, i32* %channel_index, align 4, !dbg !4010
  %cmp172 = icmp sge i32 %268, 0, !dbg !4012
  br i1 %cmp172, label %land.lhs.true, label %if.else194, !dbg !4013

land.lhs.true:                                    ; preds = %if.end171
  %269 = load i32, i32* %channel_index, align 4, !dbg !4014
  %idxprom = sext i32 %269 to i64, !dbg !4016
  %270 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4016
  %channel_offsets174 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %270, i32 0, i32 6, !dbg !4017
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets174, i64 0, i64 %idxprom, !dbg !4016
  %271 = load i32, i32* %arrayidx175, align 4, !dbg !4016
  %cmp176 = icmp eq i32 %271, -1, !dbg !4018
  br i1 %cmp176, label %if.then178, label %if.else194, !dbg !4019

if.then178:                                       ; preds = %land.lhs.true
  %272 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4020
  %pixel_type179 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %272, i32 0, i32 5, !dbg !4023
  %273 = load i32, i32* %pixel_type179, align 4, !dbg !4023
  %cmp180 = icmp ne i32 %273, 3, !dbg !4024
  br i1 %cmp180, label %land.lhs.true182, label %if.end188, !dbg !4025

land.lhs.true182:                                 ; preds = %if.then178
  %274 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4026
  %pixel_type183 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %274, i32 0, i32 5, !dbg !4027
  %275 = load i32, i32* %pixel_type183, align 4, !dbg !4027
  %276 = load i32, i32* %current_pixel_type, align 4, !dbg !4028
  %cmp184 = icmp ne i32 %275, %276, !dbg !4029
  br i1 %cmp184, label %if.then186, label %if.end188, !dbg !4030

if.then186:                                       ; preds = %land.lhs.true182
  %277 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4032
  %avctx187 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %277, i32 0, i32 2, !dbg !4034
  %278 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx187, align 8, !dbg !4034
  %279 = bitcast %struct.AVCodecContext* %278 to i8*, !dbg !4032
  call void (i8*, i32, i8*, ...) @av_log(i8* %279, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i32 0, i32 0)), !dbg !4035
  store i32 -1094995529, i32* %ret, align 4, !dbg !4036
  br label %fail, !dbg !4037

if.end188:                                        ; preds = %land.lhs.true182, %if.then178
  %280 = load i32, i32* %current_pixel_type, align 4, !dbg !4038
  %281 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4039
  %pixel_type189 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %281, i32 0, i32 5, !dbg !4040
  store i32 %280, i32* %pixel_type189, align 4, !dbg !4041
  %282 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4042
  %current_channel_offset190 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %282, i32 0, i32 25, !dbg !4043
  %283 = load i32, i32* %current_channel_offset190, align 4, !dbg !4043
  %284 = load i32, i32* %channel_index, align 4, !dbg !4044
  %idxprom191 = sext i32 %284 to i64, !dbg !4045
  %285 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4045
  %channel_offsets192 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %285, i32 0, i32 6, !dbg !4046
  %arrayidx193 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets192, i64 0, i64 %idxprom191, !dbg !4045
  store i32 %283, i32* %arrayidx193, align 4, !dbg !4047
  br label %if.end200, !dbg !4048

if.else194:                                       ; preds = %land.lhs.true, %if.end171
  %286 = load i32, i32* %channel_index, align 4, !dbg !4049
  %cmp195 = icmp sge i32 %286, 0, !dbg !4052
  br i1 %cmp195, label %if.then197, label %if.end199, !dbg !4049

if.then197:                                       ; preds = %if.else194
  %287 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4053
  %avctx198 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %287, i32 0, i32 2, !dbg !4055
  %288 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx198, align 8, !dbg !4055
  %289 = bitcast %struct.AVCodecContext* %288 to i8*, !dbg !4053
  %290 = load i32, i32* %channel_index, align 4, !dbg !4056
  call void (i8*, i32, i8*, ...) @av_log(i8* %289, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.73, i32 0, i32 0), i32 %290), !dbg !4057
  store i32 -1094995529, i32* %ret, align 4, !dbg !4058
  br label %fail, !dbg !4059

if.end199:                                        ; preds = %if.else194
  br label %if.end200

if.end200:                                        ; preds = %if.end199, %if.end188
  %291 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4060
  %channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %291, i32 0, i32 23, !dbg !4061
  %292 = load %struct.EXRChannel*, %struct.EXRChannel** %channels, align 8, !dbg !4061
  %293 = bitcast %struct.EXRChannel* %292 to i8*, !dbg !4060
  %294 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4062
  %nb_channels201 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %294, i32 0, i32 24, !dbg !4063
  %295 = load i32, i32* %nb_channels201, align 8, !dbg !4064
  %inc = add nsw i32 %295, 1, !dbg !4064
  store i32 %inc, i32* %nb_channels201, align 8, !dbg !4064
  %conv202 = sext i32 %inc to i64, !dbg !4064
  %mul = mul i64 %conv202, 12, !dbg !4065
  %call203 = call i8* @av_realloc(i8* %293, i64 %mul), !dbg !4066
  %296 = bitcast i8* %call203 to %struct.EXRChannel*, !dbg !4066
  %297 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4067
  %channels204 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %297, i32 0, i32 23, !dbg !4068
  store %struct.EXRChannel* %296, %struct.EXRChannel** %channels204, align 8, !dbg !4069
  %298 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4070
  %channels205 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %298, i32 0, i32 23, !dbg !4072
  %299 = load %struct.EXRChannel*, %struct.EXRChannel** %channels205, align 8, !dbg !4072
  %tobool206 = icmp ne %struct.EXRChannel* %299, null, !dbg !4070
  br i1 %tobool206, label %if.end208, label %if.then207, !dbg !4073

if.then207:                                       ; preds = %if.end200
  store i32 -12, i32* %ret, align 4, !dbg !4074
  br label %fail, !dbg !4076

if.end208:                                        ; preds = %if.end200
  %300 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4077
  %nb_channels209 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %300, i32 0, i32 24, !dbg !4078
  %301 = load i32, i32* %nb_channels209, align 8, !dbg !4078
  %sub = sub nsw i32 %301, 1, !dbg !4079
  %idxprom210 = sext i32 %sub to i64, !dbg !4080
  %302 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4080
  %channels211 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %302, i32 0, i32 23, !dbg !4081
  %303 = load %struct.EXRChannel*, %struct.EXRChannel** %channels211, align 8, !dbg !4081
  %arrayidx212 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %303, i64 %idxprom210, !dbg !4080
  store %struct.EXRChannel* %arrayidx212, %struct.EXRChannel** %channel, align 8, !dbg !4082
  %304 = load i32, i32* %current_pixel_type, align 4, !dbg !4083
  %305 = load %struct.EXRChannel*, %struct.EXRChannel** %channel, align 8, !dbg !4084
  %pixel_type213 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %305, i32 0, i32 2, !dbg !4085
  store i32 %304, i32* %pixel_type213, align 4, !dbg !4086
  %306 = load i32, i32* %xsub, align 4, !dbg !4087
  %307 = load %struct.EXRChannel*, %struct.EXRChannel** %channel, align 8, !dbg !4088
  %xsub214 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %307, i32 0, i32 0, !dbg !4089
  store i32 %306, i32* %xsub214, align 4, !dbg !4090
  %308 = load i32, i32* %ysub, align 4, !dbg !4091
  %309 = load %struct.EXRChannel*, %struct.EXRChannel** %channel, align 8, !dbg !4092
  %ysub215 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %309, i32 0, i32 1, !dbg !4093
  store i32 %308, i32* %ysub215, align 4, !dbg !4094
  %310 = load i32, i32* %current_pixel_type, align 4, !dbg !4095
  %cmp216 = icmp eq i32 %310, 1, !dbg !4097
  br i1 %cmp216, label %if.then218, label %if.else220, !dbg !4098

if.then218:                                       ; preds = %if.end208
  %311 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4099
  %current_channel_offset219 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %311, i32 0, i32 25, !dbg !4101
  %312 = load i32, i32* %current_channel_offset219, align 4, !dbg !4102
  %add = add nsw i32 %312, 2, !dbg !4102
  store i32 %add, i32* %current_channel_offset219, align 4, !dbg !4102
  br label %if.end223, !dbg !4103

if.else220:                                       ; preds = %if.end208
  %313 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4104
  %current_channel_offset221 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %313, i32 0, i32 25, !dbg !4106
  %314 = load i32, i32* %current_channel_offset221, align 4, !dbg !4107
  %add222 = add nsw i32 %314, 4, !dbg !4107
  store i32 %add222, i32* %current_channel_offset221, align 4, !dbg !4107
  br label %if.end223

if.end223:                                        ; preds = %if.else220, %if.then218
  br label %while.cond49, !dbg !4108, !llvm.loop !4110

while.end224:                                     ; preds = %while.cond49
  %315 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4111
  %is_luma225 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %315, i32 0, i32 19, !dbg !4113
  %316 = load i32, i32* %is_luma225, align 8, !dbg !4113
  %tobool226 = icmp ne i32 %316, 0, !dbg !4111
  br i1 %tobool226, label %if.end287, label %if.then227, !dbg !4114

if.then227:                                       ; preds = %while.end224
  %317 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4115
  %channel_offsets228 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %317, i32 0, i32 6, !dbg !4118
  %arrayidx229 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets228, i64 0, i64 0, !dbg !4115
  %318 = load i32, i32* %arrayidx229, align 8, !dbg !4115
  %319 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4119
  %channel_offsets230 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %319, i32 0, i32 6, !dbg !4120
  %arrayidx231 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets230, i64 0, i64 1, !dbg !4119
  %320 = load i32, i32* %arrayidx231, align 4, !dbg !4119
  %cmp232 = icmp sgt i32 %318, %320, !dbg !4121
  br i1 %cmp232, label %cond.true, label %cond.false, !dbg !4122

cond.true:                                        ; preds = %if.then227
  %321 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4123
  %channel_offsets234 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %321, i32 0, i32 6, !dbg !4125
  %arrayidx235 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets234, i64 0, i64 1, !dbg !4123
  %322 = load i32, i32* %arrayidx235, align 4, !dbg !4123
  br label %cond.end, !dbg !4126

cond.false:                                       ; preds = %if.then227
  %323 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4127
  %channel_offsets236 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %323, i32 0, i32 6, !dbg !4129
  %arrayidx237 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets236, i64 0, i64 0, !dbg !4127
  %324 = load i32, i32* %arrayidx237, align 8, !dbg !4127
  br label %cond.end, !dbg !4130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %322, %cond.true ], [ %324, %cond.false ], !dbg !4131
  %325 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4133
  %channel_offsets238 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %325, i32 0, i32 6, !dbg !4134
  %arrayidx239 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets238, i64 0, i64 2, !dbg !4133
  %326 = load i32, i32* %arrayidx239, align 8, !dbg !4133
  %cmp240 = icmp sgt i32 %cond, %326, !dbg !4135
  br i1 %cmp240, label %cond.true242, label %cond.false245, !dbg !4136

cond.true242:                                     ; preds = %cond.end
  %327 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4137
  %channel_offsets243 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %327, i32 0, i32 6, !dbg !4139
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets243, i64 0, i64 2, !dbg !4137
  %328 = load i32, i32* %arrayidx244, align 8, !dbg !4137
  br label %cond.end260, !dbg !4140

cond.false245:                                    ; preds = %cond.end
  %329 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4141
  %channel_offsets246 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %329, i32 0, i32 6, !dbg !4143
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets246, i64 0, i64 0, !dbg !4141
  %330 = load i32, i32* %arrayidx247, align 8, !dbg !4141
  %331 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4144
  %channel_offsets248 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %331, i32 0, i32 6, !dbg !4145
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets248, i64 0, i64 1, !dbg !4144
  %332 = load i32, i32* %arrayidx249, align 4, !dbg !4144
  %cmp250 = icmp sgt i32 %330, %332, !dbg !4146
  br i1 %cmp250, label %cond.true252, label %cond.false255, !dbg !4147

cond.true252:                                     ; preds = %cond.false245
  %333 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4148
  %channel_offsets253 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %333, i32 0, i32 6, !dbg !4150
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets253, i64 0, i64 1, !dbg !4148
  %334 = load i32, i32* %arrayidx254, align 4, !dbg !4148
  br label %cond.end258, !dbg !4151

cond.false255:                                    ; preds = %cond.false245
  %335 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4152
  %channel_offsets256 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %335, i32 0, i32 6, !dbg !4154
  %arrayidx257 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets256, i64 0, i64 0, !dbg !4152
  %336 = load i32, i32* %arrayidx257, align 8, !dbg !4152
  br label %cond.end258, !dbg !4155

cond.end258:                                      ; preds = %cond.false255, %cond.true252
  %cond259 = phi i32 [ %334, %cond.true252 ], [ %336, %cond.false255 ], !dbg !4156
  br label %cond.end260, !dbg !4158

cond.end260:                                      ; preds = %cond.end258, %cond.true242
  %cond261 = phi i32 [ %328, %cond.true242 ], [ %cond259, %cond.end258 ], !dbg !4159
  %cmp262 = icmp slt i32 %cond261, 0, !dbg !4161
  br i1 %cmp262, label %if.then264, label %if.end286, !dbg !4162

if.then264:                                       ; preds = %cond.end260
  %337 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4163
  %channel_offsets265 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %337, i32 0, i32 6, !dbg !4166
  %arrayidx266 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets265, i64 0, i64 0, !dbg !4163
  %338 = load i32, i32* %arrayidx266, align 8, !dbg !4163
  %cmp267 = icmp slt i32 %338, 0, !dbg !4167
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !4168

if.then269:                                       ; preds = %if.then264
  %339 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4169
  %avctx270 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %339, i32 0, i32 2, !dbg !4170
  %340 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx270, align 8, !dbg !4170
  %341 = bitcast %struct.AVCodecContext* %340 to i8*, !dbg !4169
  call void (i8*, i32, i8*, ...) @av_log(i8* %341, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i32 0, i32 0)), !dbg !4171
  br label %if.end271, !dbg !4171

if.end271:                                        ; preds = %if.then269, %if.then264
  %342 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4172
  %channel_offsets272 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %342, i32 0, i32 6, !dbg !4174
  %arrayidx273 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets272, i64 0, i64 1, !dbg !4172
  %343 = load i32, i32* %arrayidx273, align 4, !dbg !4172
  %cmp274 = icmp slt i32 %343, 0, !dbg !4175
  br i1 %cmp274, label %if.then276, label %if.end278, !dbg !4176

if.then276:                                       ; preds = %if.end271
  %344 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4177
  %avctx277 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %344, i32 0, i32 2, !dbg !4178
  %345 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx277, align 8, !dbg !4178
  %346 = bitcast %struct.AVCodecContext* %345 to i8*, !dbg !4177
  call void (i8*, i32, i8*, ...) @av_log(i8* %346, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.75, i32 0, i32 0)), !dbg !4179
  br label %if.end278, !dbg !4179

if.end278:                                        ; preds = %if.then276, %if.end271
  %347 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4180
  %channel_offsets279 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %347, i32 0, i32 6, !dbg !4182
  %arrayidx280 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets279, i64 0, i64 2, !dbg !4180
  %348 = load i32, i32* %arrayidx280, align 8, !dbg !4180
  %cmp281 = icmp slt i32 %348, 0, !dbg !4183
  br i1 %cmp281, label %if.then283, label %if.end285, !dbg !4184

if.then283:                                       ; preds = %if.end278
  %349 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4185
  %avctx284 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %349, i32 0, i32 2, !dbg !4186
  %350 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx284, align 8, !dbg !4186
  %351 = bitcast %struct.AVCodecContext* %350 to i8*, !dbg !4185
  call void (i8*, i32, i8*, ...) @av_log(i8* %351, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i32 0, i32 0)), !dbg !4187
  br label %if.end285, !dbg !4187

if.end285:                                        ; preds = %if.then283, %if.end278
  store i32 -1094995529, i32* %ret, align 4, !dbg !4188
  br label %fail, !dbg !4189

if.end286:                                        ; preds = %cond.end260
  br label %if.end287, !dbg !4190

if.end287:                                        ; preds = %if.end286, %while.end224
  %buffer288 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %ch_gb, i32 0, i32 0, !dbg !4191
  %352 = load i8*, i8** %buffer288, align 8, !dbg !4191
  %add.ptr289 = getelementptr inbounds i8, i8* %352, i64 1, !dbg !4192
  %353 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4193
  %gb290 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %353, i32 0, i32 20, !dbg !4194
  %buffer291 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb290, i32 0, i32 0, !dbg !4195
  store i8* %add.ptr289, i8** %buffer291, align 8, !dbg !4196
  br label %while.cond, !dbg !4197, !llvm.loop !4198

if.else292:                                       ; preds = %while.body
  %354 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4199
  %call293 = call i32 @check_header_variable(%struct.EXRContext* %354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i32 31), !dbg !4200
  store i32 %call293, i32* %var_size, align 4, !dbg !4201
  %cmp294 = icmp sge i32 %call293, 0, !dbg !4202
  br i1 %cmp294, label %if.then296, label %if.else322, !dbg !4203

if.then296:                                       ; preds = %if.else292
  %355 = load i32, i32* %var_size, align 4, !dbg !4204
  %tobool297 = icmp ne i32 %355, 0, !dbg !4204
  br i1 %tobool297, label %if.end299, label %if.then298, !dbg !4206

if.then298:                                       ; preds = %if.then296
  store i32 -1094995529, i32* %ret, align 4, !dbg !4207
  br label %fail, !dbg !4209

if.end299:                                        ; preds = %if.then296
  %356 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4210
  %gb300 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %356, i32 0, i32 20, !dbg !4211
  store %struct.GetByteContext* %gb300, %struct.GetByteContext** %g.addr.i933, align 8, !dbg !4212
  %357 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i933, align 8, !dbg !4213
  %buffer_end.i934 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %357, i32 0, i32 1, !dbg !4214
  %358 = load i8*, i8** %buffer_end.i934, align 8, !dbg !4214
  %359 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i933, align 8, !dbg !4215
  %buffer.i935 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %359, i32 0, i32 0, !dbg !4216
  %360 = load i8*, i8** %buffer.i935, align 8, !dbg !4216
  %sub.ptr.lhs.cast.i936 = ptrtoint i8* %358 to i64, !dbg !4217
  %sub.ptr.rhs.cast.i937 = ptrtoint i8* %360 to i64, !dbg !4217
  %sub.ptr.sub.i938 = sub i64 %sub.ptr.lhs.cast.i936, %sub.ptr.rhs.cast.i937, !dbg !4217
  %cmp.i939 = icmp slt i64 %sub.ptr.sub.i938, 4, !dbg !4218
  br i1 %cmp.i939, label %if.then.i942, label %if.end.i947, !dbg !4219

if.then.i942:                                     ; preds = %if.end299
  %361 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i933, align 8, !dbg !4220
  %buffer_end1.i940 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %361, i32 0, i32 1, !dbg !4221
  %362 = load i8*, i8** %buffer_end1.i940, align 8, !dbg !4221
  %363 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i933, align 8, !dbg !4222
  %buffer2.i941 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %363, i32 0, i32 0, !dbg !4223
  store i8* %362, i8** %buffer2.i941, align 8, !dbg !4224
  store i32 0, i32* %retval.i932, align 4, !dbg !4225
  br label %bytestream2_get_le32.exit948, !dbg !4225

if.end.i947:                                      ; preds = %if.end299
  %364 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i933, align 8, !dbg !4226
  store %struct.GetByteContext* %364, %struct.GetByteContext** %g.addr.i.i931, align 8, !dbg !4227
  %365 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i931, align 8, !dbg !4228
  %buffer.i.i943 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %365, i32 0, i32 0, !dbg !4229
  store i8** %buffer.i.i943, i8*** %b.addr.i.i.i930, align 8, !dbg !4230
  %366 = load i8**, i8*** %b.addr.i.i.i930, align 8, !dbg !4231
  %367 = load i8*, i8** %366, align 8, !dbg !4232
  %add.ptr.i.i.i944 = getelementptr inbounds i8, i8* %367, i64 4, !dbg !4232
  store i8* %add.ptr.i.i.i944, i8** %366, align 8, !dbg !4232
  %368 = load i8**, i8*** %b.addr.i.i.i930, align 8, !dbg !4233
  %369 = load i8*, i8** %368, align 8, !dbg !4234
  %add.ptr1.i.i.i945 = getelementptr inbounds i8, i8* %369, i64 -4, !dbg !4235
  %370 = bitcast i8* %add.ptr1.i.i.i945 to %union.unaligned_32*, !dbg !4236
  %l.i.i.i946 = bitcast %union.unaligned_32* %370 to i32*, !dbg !4236
  %371 = load i32, i32* %l.i.i.i946, align 1, !dbg !4236
  store i32 %371, i32* %retval.i932, align 4, !dbg !4237
  br label %bytestream2_get_le32.exit948, !dbg !4237

bytestream2_get_le32.exit948:                     ; preds = %if.then.i942, %if.end.i947
  %372 = load i32, i32* %retval.i932, align 4, !dbg !4238
  %373 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4239
  %xmin302 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %373, i32 0, i32 11, !dbg !4240
  store i32 %372, i32* %xmin302, align 4, !dbg !4241
  %374 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4242
  %gb303 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %374, i32 0, i32 20, !dbg !4243
  store %struct.GetByteContext* %gb303, %struct.GetByteContext** %g.addr.i914, align 8, !dbg !4244
  %375 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i914, align 8, !dbg !4245
  %buffer_end.i915 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %375, i32 0, i32 1, !dbg !4246
  %376 = load i8*, i8** %buffer_end.i915, align 8, !dbg !4246
  %377 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i914, align 8, !dbg !4247
  %buffer.i916 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %377, i32 0, i32 0, !dbg !4248
  %378 = load i8*, i8** %buffer.i916, align 8, !dbg !4248
  %sub.ptr.lhs.cast.i917 = ptrtoint i8* %376 to i64, !dbg !4249
  %sub.ptr.rhs.cast.i918 = ptrtoint i8* %378 to i64, !dbg !4249
  %sub.ptr.sub.i919 = sub i64 %sub.ptr.lhs.cast.i917, %sub.ptr.rhs.cast.i918, !dbg !4249
  %cmp.i920 = icmp slt i64 %sub.ptr.sub.i919, 4, !dbg !4250
  br i1 %cmp.i920, label %if.then.i923, label %if.end.i928, !dbg !4251

if.then.i923:                                     ; preds = %bytestream2_get_le32.exit948
  %379 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i914, align 8, !dbg !4252
  %buffer_end1.i921 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %379, i32 0, i32 1, !dbg !4253
  %380 = load i8*, i8** %buffer_end1.i921, align 8, !dbg !4253
  %381 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i914, align 8, !dbg !4254
  %buffer2.i922 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %381, i32 0, i32 0, !dbg !4255
  store i8* %380, i8** %buffer2.i922, align 8, !dbg !4256
  store i32 0, i32* %retval.i913, align 4, !dbg !4257
  br label %bytestream2_get_le32.exit929, !dbg !4257

if.end.i928:                                      ; preds = %bytestream2_get_le32.exit948
  %382 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i914, align 8, !dbg !4258
  store %struct.GetByteContext* %382, %struct.GetByteContext** %g.addr.i.i912, align 8, !dbg !4259
  %383 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i912, align 8, !dbg !4260
  %buffer.i.i924 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %383, i32 0, i32 0, !dbg !4261
  store i8** %buffer.i.i924, i8*** %b.addr.i.i.i911, align 8, !dbg !4262
  %384 = load i8**, i8*** %b.addr.i.i.i911, align 8, !dbg !4263
  %385 = load i8*, i8** %384, align 8, !dbg !4264
  %add.ptr.i.i.i925 = getelementptr inbounds i8, i8* %385, i64 4, !dbg !4264
  store i8* %add.ptr.i.i.i925, i8** %384, align 8, !dbg !4264
  %386 = load i8**, i8*** %b.addr.i.i.i911, align 8, !dbg !4265
  %387 = load i8*, i8** %386, align 8, !dbg !4266
  %add.ptr1.i.i.i926 = getelementptr inbounds i8, i8* %387, i64 -4, !dbg !4267
  %388 = bitcast i8* %add.ptr1.i.i.i926 to %union.unaligned_32*, !dbg !4268
  %l.i.i.i927 = bitcast %union.unaligned_32* %388 to i32*, !dbg !4268
  %389 = load i32, i32* %l.i.i.i927, align 1, !dbg !4268
  store i32 %389, i32* %retval.i913, align 4, !dbg !4269
  br label %bytestream2_get_le32.exit929, !dbg !4269

bytestream2_get_le32.exit929:                     ; preds = %if.then.i923, %if.end.i928
  %390 = load i32, i32* %retval.i913, align 4, !dbg !4270
  %391 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4271
  %ymin305 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %391, i32 0, i32 13, !dbg !4272
  store i32 %390, i32* %ymin305, align 4, !dbg !4273
  %392 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4274
  %gb306 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %392, i32 0, i32 20, !dbg !4275
  store %struct.GetByteContext* %gb306, %struct.GetByteContext** %g.addr.i895, align 8, !dbg !4276
  %393 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i895, align 8, !dbg !4277
  %buffer_end.i896 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %393, i32 0, i32 1, !dbg !4278
  %394 = load i8*, i8** %buffer_end.i896, align 8, !dbg !4278
  %395 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i895, align 8, !dbg !4279
  %buffer.i897 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %395, i32 0, i32 0, !dbg !4280
  %396 = load i8*, i8** %buffer.i897, align 8, !dbg !4280
  %sub.ptr.lhs.cast.i898 = ptrtoint i8* %394 to i64, !dbg !4281
  %sub.ptr.rhs.cast.i899 = ptrtoint i8* %396 to i64, !dbg !4281
  %sub.ptr.sub.i900 = sub i64 %sub.ptr.lhs.cast.i898, %sub.ptr.rhs.cast.i899, !dbg !4281
  %cmp.i901 = icmp slt i64 %sub.ptr.sub.i900, 4, !dbg !4282
  br i1 %cmp.i901, label %if.then.i904, label %if.end.i909, !dbg !4283

if.then.i904:                                     ; preds = %bytestream2_get_le32.exit929
  %397 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i895, align 8, !dbg !4284
  %buffer_end1.i902 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %397, i32 0, i32 1, !dbg !4285
  %398 = load i8*, i8** %buffer_end1.i902, align 8, !dbg !4285
  %399 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i895, align 8, !dbg !4286
  %buffer2.i903 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %399, i32 0, i32 0, !dbg !4287
  store i8* %398, i8** %buffer2.i903, align 8, !dbg !4288
  store i32 0, i32* %retval.i894, align 4, !dbg !4289
  br label %bytestream2_get_le32.exit910, !dbg !4289

if.end.i909:                                      ; preds = %bytestream2_get_le32.exit929
  %400 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i895, align 8, !dbg !4290
  store %struct.GetByteContext* %400, %struct.GetByteContext** %g.addr.i.i893, align 8, !dbg !4291
  %401 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i893, align 8, !dbg !4292
  %buffer.i.i905 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %401, i32 0, i32 0, !dbg !4293
  store i8** %buffer.i.i905, i8*** %b.addr.i.i.i892, align 8, !dbg !4294
  %402 = load i8**, i8*** %b.addr.i.i.i892, align 8, !dbg !4295
  %403 = load i8*, i8** %402, align 8, !dbg !4296
  %add.ptr.i.i.i906 = getelementptr inbounds i8, i8* %403, i64 4, !dbg !4296
  store i8* %add.ptr.i.i.i906, i8** %402, align 8, !dbg !4296
  %404 = load i8**, i8*** %b.addr.i.i.i892, align 8, !dbg !4297
  %405 = load i8*, i8** %404, align 8, !dbg !4298
  %add.ptr1.i.i.i907 = getelementptr inbounds i8, i8* %405, i64 -4, !dbg !4299
  %406 = bitcast i8* %add.ptr1.i.i.i907 to %union.unaligned_32*, !dbg !4300
  %l.i.i.i908 = bitcast %union.unaligned_32* %406 to i32*, !dbg !4300
  %407 = load i32, i32* %l.i.i.i908, align 1, !dbg !4300
  store i32 %407, i32* %retval.i894, align 4, !dbg !4301
  br label %bytestream2_get_le32.exit910, !dbg !4301

bytestream2_get_le32.exit910:                     ; preds = %if.then.i904, %if.end.i909
  %408 = load i32, i32* %retval.i894, align 4, !dbg !4302
  %409 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4303
  %xmax308 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %409, i32 0, i32 10, !dbg !4304
  store i32 %408, i32* %xmax308, align 8, !dbg !4305
  %410 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4306
  %gb309 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %410, i32 0, i32 20, !dbg !4307
  store %struct.GetByteContext* %gb309, %struct.GetByteContext** %g.addr.i876, align 8, !dbg !4308
  %411 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i876, align 8, !dbg !4309
  %buffer_end.i877 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %411, i32 0, i32 1, !dbg !4310
  %412 = load i8*, i8** %buffer_end.i877, align 8, !dbg !4310
  %413 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i876, align 8, !dbg !4311
  %buffer.i878 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %413, i32 0, i32 0, !dbg !4312
  %414 = load i8*, i8** %buffer.i878, align 8, !dbg !4312
  %sub.ptr.lhs.cast.i879 = ptrtoint i8* %412 to i64, !dbg !4313
  %sub.ptr.rhs.cast.i880 = ptrtoint i8* %414 to i64, !dbg !4313
  %sub.ptr.sub.i881 = sub i64 %sub.ptr.lhs.cast.i879, %sub.ptr.rhs.cast.i880, !dbg !4313
  %cmp.i882 = icmp slt i64 %sub.ptr.sub.i881, 4, !dbg !4314
  br i1 %cmp.i882, label %if.then.i885, label %if.end.i890, !dbg !4315

if.then.i885:                                     ; preds = %bytestream2_get_le32.exit910
  %415 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i876, align 8, !dbg !4316
  %buffer_end1.i883 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %415, i32 0, i32 1, !dbg !4317
  %416 = load i8*, i8** %buffer_end1.i883, align 8, !dbg !4317
  %417 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i876, align 8, !dbg !4318
  %buffer2.i884 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %417, i32 0, i32 0, !dbg !4319
  store i8* %416, i8** %buffer2.i884, align 8, !dbg !4320
  store i32 0, i32* %retval.i875, align 4, !dbg !4321
  br label %bytestream2_get_le32.exit891, !dbg !4321

if.end.i890:                                      ; preds = %bytestream2_get_le32.exit910
  %418 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i876, align 8, !dbg !4322
  store %struct.GetByteContext* %418, %struct.GetByteContext** %g.addr.i.i874, align 8, !dbg !4323
  %419 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i874, align 8, !dbg !4324
  %buffer.i.i886 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %419, i32 0, i32 0, !dbg !4325
  store i8** %buffer.i.i886, i8*** %b.addr.i.i.i873, align 8, !dbg !4326
  %420 = load i8**, i8*** %b.addr.i.i.i873, align 8, !dbg !4327
  %421 = load i8*, i8** %420, align 8, !dbg !4328
  %add.ptr.i.i.i887 = getelementptr inbounds i8, i8* %421, i64 4, !dbg !4328
  store i8* %add.ptr.i.i.i887, i8** %420, align 8, !dbg !4328
  %422 = load i8**, i8*** %b.addr.i.i.i873, align 8, !dbg !4329
  %423 = load i8*, i8** %422, align 8, !dbg !4330
  %add.ptr1.i.i.i888 = getelementptr inbounds i8, i8* %423, i64 -4, !dbg !4331
  %424 = bitcast i8* %add.ptr1.i.i.i888 to %union.unaligned_32*, !dbg !4332
  %l.i.i.i889 = bitcast %union.unaligned_32* %424 to i32*, !dbg !4332
  %425 = load i32, i32* %l.i.i.i889, align 1, !dbg !4332
  store i32 %425, i32* %retval.i875, align 4, !dbg !4333
  br label %bytestream2_get_le32.exit891, !dbg !4333

bytestream2_get_le32.exit891:                     ; preds = %if.then.i885, %if.end.i890
  %426 = load i32, i32* %retval.i875, align 4, !dbg !4334
  %427 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4335
  %ymax311 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %427, i32 0, i32 12, !dbg !4336
  store i32 %426, i32* %ymax311, align 8, !dbg !4337
  %428 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4338
  %xmax312 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %428, i32 0, i32 10, !dbg !4339
  %429 = load i32, i32* %xmax312, align 8, !dbg !4339
  %430 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4340
  %xmin313 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %430, i32 0, i32 11, !dbg !4341
  %431 = load i32, i32* %xmin313, align 4, !dbg !4341
  %sub314 = sub i32 %429, %431, !dbg !4342
  %add315 = add i32 %sub314, 1, !dbg !4343
  %432 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4344
  %xdelta316 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %432, i32 0, i32 14, !dbg !4345
  store i32 %add315, i32* %xdelta316, align 8, !dbg !4346
  %433 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4347
  %ymax317 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %433, i32 0, i32 12, !dbg !4348
  %434 = load i32, i32* %ymax317, align 8, !dbg !4348
  %435 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4349
  %ymin318 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %435, i32 0, i32 13, !dbg !4350
  %436 = load i32, i32* %ymin318, align 4, !dbg !4350
  %sub319 = sub i32 %434, %436, !dbg !4351
  %add320 = add i32 %sub319, 1, !dbg !4352
  %437 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4353
  %ydelta321 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %437, i32 0, i32 15, !dbg !4354
  store i32 %add320, i32* %ydelta321, align 4, !dbg !4355
  br label %while.cond, !dbg !4356, !llvm.loop !4198

if.else322:                                       ; preds = %if.else292
  %438 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4357
  %call323 = call i32 @check_header_variable(%struct.EXRContext* %438, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i32 34), !dbg !4358
  store i32 %call323, i32* %var_size, align 4, !dbg !4359
  %cmp324 = icmp sge i32 %call323, 0, !dbg !4360
  br i1 %cmp324, label %if.then326, label %if.else339, !dbg !4361

if.then326:                                       ; preds = %if.else322
  %439 = load i32, i32* %var_size, align 4, !dbg !4362
  %tobool327 = icmp ne i32 %439, 0, !dbg !4362
  br i1 %tobool327, label %if.end329, label %if.then328, !dbg !4364

if.then328:                                       ; preds = %if.then326
  store i32 -1094995529, i32* %ret, align 4, !dbg !4365
  br label %fail, !dbg !4367

if.end329:                                        ; preds = %if.then326
  %440 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4368
  %gb330 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %440, i32 0, i32 20, !dbg !4369
  store %struct.GetByteContext* %gb330, %struct.GetByteContext** %g.addr.i833, align 8, !dbg !4370
  store i32 8, i32* %size.addr.i834, align 4, !dbg !4370
  %441 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i833, align 8, !dbg !4371
  %buffer_end.i835 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %441, i32 0, i32 1, !dbg !4372
  %442 = load i8*, i8** %buffer_end.i835, align 8, !dbg !4372
  %443 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i833, align 8, !dbg !4373
  %buffer.i836 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %443, i32 0, i32 0, !dbg !4374
  %444 = load i8*, i8** %buffer.i836, align 8, !dbg !4374
  %sub.ptr.lhs.cast.i837 = ptrtoint i8* %442 to i64, !dbg !4375
  %sub.ptr.rhs.cast.i838 = ptrtoint i8* %444 to i64, !dbg !4375
  %sub.ptr.sub.i839 = sub i64 %sub.ptr.lhs.cast.i837, %sub.ptr.rhs.cast.i838, !dbg !4375
  %445 = load i32, i32* %size.addr.i834, align 4, !dbg !4376
  %conv.i840 = zext i32 %445 to i64, !dbg !4377
  %cmp.i841 = icmp sgt i64 %sub.ptr.sub.i839, %conv.i840, !dbg !4378
  br i1 %cmp.i841, label %cond.true.i843, label %cond.false.i849, !dbg !4379

cond.true.i843:                                   ; preds = %if.end329
  %446 = load i32, i32* %size.addr.i834, align 4, !dbg !4380
  %conv2.i842 = zext i32 %446 to i64, !dbg !4381
  br label %bytestream2_skip.exit853, !dbg !4382

cond.false.i849:                                  ; preds = %if.end329
  %447 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i833, align 8, !dbg !4383
  %buffer_end3.i844 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %447, i32 0, i32 1, !dbg !4384
  %448 = load i8*, i8** %buffer_end3.i844, align 8, !dbg !4384
  %449 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i833, align 8, !dbg !4385
  %buffer4.i845 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %449, i32 0, i32 0, !dbg !4386
  %450 = load i8*, i8** %buffer4.i845, align 8, !dbg !4386
  %sub.ptr.lhs.cast5.i846 = ptrtoint i8* %448 to i64, !dbg !4387
  %sub.ptr.rhs.cast6.i847 = ptrtoint i8* %450 to i64, !dbg !4387
  %sub.ptr.sub7.i848 = sub i64 %sub.ptr.lhs.cast5.i846, %sub.ptr.rhs.cast6.i847, !dbg !4387
  br label %bytestream2_skip.exit853, !dbg !4388

bytestream2_skip.exit853:                         ; preds = %cond.true.i843, %cond.false.i849
  %cond.i850 = phi i64 [ %conv2.i842, %cond.true.i843 ], [ %sub.ptr.sub7.i848, %cond.false.i849 ], !dbg !4389
  %451 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i833, align 8, !dbg !4390
  %buffer8.i851 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %451, i32 0, i32 0, !dbg !4391
  %452 = load i8*, i8** %buffer8.i851, align 8, !dbg !4392
  %add.ptr.i852 = getelementptr inbounds i8, i8* %452, i64 %cond.i850, !dbg !4392
  store i8* %add.ptr.i852, i8** %buffer8.i851, align 8, !dbg !4392
  %453 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4393
  %gb331 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %453, i32 0, i32 20, !dbg !4394
  store %struct.GetByteContext* %gb331, %struct.GetByteContext** %g.addr.i817, align 8, !dbg !4395
  %454 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i817, align 8, !dbg !4396
  %buffer_end.i818 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %454, i32 0, i32 1, !dbg !4397
  %455 = load i8*, i8** %buffer_end.i818, align 8, !dbg !4397
  %456 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i817, align 8, !dbg !4398
  %buffer.i819 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %456, i32 0, i32 0, !dbg !4399
  %457 = load i8*, i8** %buffer.i819, align 8, !dbg !4399
  %sub.ptr.lhs.cast.i820 = ptrtoint i8* %455 to i64, !dbg !4400
  %sub.ptr.rhs.cast.i821 = ptrtoint i8* %457 to i64, !dbg !4400
  %sub.ptr.sub.i822 = sub i64 %sub.ptr.lhs.cast.i820, %sub.ptr.rhs.cast.i821, !dbg !4400
  %cmp.i823 = icmp slt i64 %sub.ptr.sub.i822, 4, !dbg !4401
  br i1 %cmp.i823, label %if.then.i826, label %if.end.i831, !dbg !4402

if.then.i826:                                     ; preds = %bytestream2_skip.exit853
  %458 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i817, align 8, !dbg !4403
  %buffer_end1.i824 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %458, i32 0, i32 1, !dbg !4404
  %459 = load i8*, i8** %buffer_end1.i824, align 8, !dbg !4404
  %460 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i817, align 8, !dbg !4405
  %buffer2.i825 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %460, i32 0, i32 0, !dbg !4406
  store i8* %459, i8** %buffer2.i825, align 8, !dbg !4407
  store i32 0, i32* %retval.i816, align 4, !dbg !4408
  br label %bytestream2_get_le32.exit832, !dbg !4408

if.end.i831:                                      ; preds = %bytestream2_skip.exit853
  %461 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i817, align 8, !dbg !4409
  store %struct.GetByteContext* %461, %struct.GetByteContext** %g.addr.i.i815, align 8, !dbg !4410
  %462 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i815, align 8, !dbg !4411
  %buffer.i.i827 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %462, i32 0, i32 0, !dbg !4412
  store i8** %buffer.i.i827, i8*** %b.addr.i.i.i814, align 8, !dbg !4413
  %463 = load i8**, i8*** %b.addr.i.i.i814, align 8, !dbg !4414
  %464 = load i8*, i8** %463, align 8, !dbg !4415
  %add.ptr.i.i.i828 = getelementptr inbounds i8, i8* %464, i64 4, !dbg !4415
  store i8* %add.ptr.i.i.i828, i8** %463, align 8, !dbg !4415
  %465 = load i8**, i8*** %b.addr.i.i.i814, align 8, !dbg !4416
  %466 = load i8*, i8** %465, align 8, !dbg !4417
  %add.ptr1.i.i.i829 = getelementptr inbounds i8, i8* %466, i64 -4, !dbg !4418
  %467 = bitcast i8* %add.ptr1.i.i.i829 to %union.unaligned_32*, !dbg !4419
  %l.i.i.i830 = bitcast %union.unaligned_32* %467 to i32*, !dbg !4419
  %468 = load i32, i32* %l.i.i.i830, align 1, !dbg !4419
  store i32 %468, i32* %retval.i816, align 4, !dbg !4420
  br label %bytestream2_get_le32.exit832, !dbg !4420

bytestream2_get_le32.exit832:                     ; preds = %if.then.i826, %if.end.i831
  %469 = load i32, i32* %retval.i816, align 4, !dbg !4421
  %add333 = add i32 %469, 1, !dbg !4422
  %470 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4423
  %w334 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %470, i32 0, i32 8, !dbg !4424
  store i32 %add333, i32* %w334, align 8, !dbg !4425
  %471 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4426
  %gb335 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %471, i32 0, i32 20, !dbg !4427
  store %struct.GetByteContext* %gb335, %struct.GetByteContext** %g.addr.i798, align 8, !dbg !4428
  %472 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i798, align 8, !dbg !4429
  %buffer_end.i799 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %472, i32 0, i32 1, !dbg !4430
  %473 = load i8*, i8** %buffer_end.i799, align 8, !dbg !4430
  %474 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i798, align 8, !dbg !4431
  %buffer.i800 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %474, i32 0, i32 0, !dbg !4432
  %475 = load i8*, i8** %buffer.i800, align 8, !dbg !4432
  %sub.ptr.lhs.cast.i801 = ptrtoint i8* %473 to i64, !dbg !4433
  %sub.ptr.rhs.cast.i802 = ptrtoint i8* %475 to i64, !dbg !4433
  %sub.ptr.sub.i803 = sub i64 %sub.ptr.lhs.cast.i801, %sub.ptr.rhs.cast.i802, !dbg !4433
  %cmp.i804 = icmp slt i64 %sub.ptr.sub.i803, 4, !dbg !4434
  br i1 %cmp.i804, label %if.then.i807, label %if.end.i812, !dbg !4435

if.then.i807:                                     ; preds = %bytestream2_get_le32.exit832
  %476 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i798, align 8, !dbg !4436
  %buffer_end1.i805 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %476, i32 0, i32 1, !dbg !4437
  %477 = load i8*, i8** %buffer_end1.i805, align 8, !dbg !4437
  %478 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i798, align 8, !dbg !4438
  %buffer2.i806 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %478, i32 0, i32 0, !dbg !4439
  store i8* %477, i8** %buffer2.i806, align 8, !dbg !4440
  store i32 0, i32* %retval.i797, align 4, !dbg !4441
  br label %bytestream2_get_le32.exit813, !dbg !4441

if.end.i812:                                      ; preds = %bytestream2_get_le32.exit832
  %479 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i798, align 8, !dbg !4442
  store %struct.GetByteContext* %479, %struct.GetByteContext** %g.addr.i.i796, align 8, !dbg !4443
  %480 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i796, align 8, !dbg !4444
  %buffer.i.i808 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %480, i32 0, i32 0, !dbg !4445
  store i8** %buffer.i.i808, i8*** %b.addr.i.i.i795, align 8, !dbg !4446
  %481 = load i8**, i8*** %b.addr.i.i.i795, align 8, !dbg !4447
  %482 = load i8*, i8** %481, align 8, !dbg !4448
  %add.ptr.i.i.i809 = getelementptr inbounds i8, i8* %482, i64 4, !dbg !4448
  store i8* %add.ptr.i.i.i809, i8** %481, align 8, !dbg !4448
  %483 = load i8**, i8*** %b.addr.i.i.i795, align 8, !dbg !4449
  %484 = load i8*, i8** %483, align 8, !dbg !4450
  %add.ptr1.i.i.i810 = getelementptr inbounds i8, i8* %484, i64 -4, !dbg !4451
  %485 = bitcast i8* %add.ptr1.i.i.i810 to %union.unaligned_32*, !dbg !4452
  %l.i.i.i811 = bitcast %union.unaligned_32* %485 to i32*, !dbg !4452
  %486 = load i32, i32* %l.i.i.i811, align 1, !dbg !4452
  store i32 %486, i32* %retval.i797, align 4, !dbg !4453
  br label %bytestream2_get_le32.exit813, !dbg !4453

bytestream2_get_le32.exit813:                     ; preds = %if.then.i807, %if.end.i812
  %487 = load i32, i32* %retval.i797, align 4, !dbg !4454
  %add337 = add i32 %487, 1, !dbg !4455
  %488 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4456
  %h338 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %488, i32 0, i32 9, !dbg !4457
  store i32 %add337, i32* %h338, align 4, !dbg !4458
  br label %while.cond, !dbg !4459, !llvm.loop !4198

if.else339:                                       ; preds = %if.else322
  %489 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4460
  %call340 = call i32 @check_header_variable(%struct.EXRContext* %489, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i32 25), !dbg !4461
  store i32 %call340, i32* %var_size, align 4, !dbg !4462
  %cmp341 = icmp sge i32 %call340, 0, !dbg !4463
  br i1 %cmp341, label %if.then343, label %if.else355, !dbg !4464

if.then343:                                       ; preds = %if.else339
  call void @llvm.dbg.declare(metadata i32* %line_order, metadata !4465, metadata !1741), !dbg !4466
  %490 = load i32, i32* %var_size, align 4, !dbg !4467
  %tobool344 = icmp ne i32 %490, 0, !dbg !4467
  br i1 %tobool344, label %if.end346, label %if.then345, !dbg !4469

if.then345:                                       ; preds = %if.then343
  store i32 -1094995529, i32* %ret, align 4, !dbg !4470
  br label %fail, !dbg !4472

if.end346:                                        ; preds = %if.then343
  %491 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4473
  %gb347 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %491, i32 0, i32 20, !dbg !4474
  store %struct.GetByteContext* %gb347, %struct.GetByteContext** %g.addr.i757, align 8, !dbg !4475
  %492 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i757, align 8, !dbg !4476
  %buffer_end.i758 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %492, i32 0, i32 1, !dbg !4477
  %493 = load i8*, i8** %buffer_end.i758, align 8, !dbg !4477
  %494 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i757, align 8, !dbg !4478
  %buffer.i759 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %494, i32 0, i32 0, !dbg !4479
  %495 = load i8*, i8** %buffer.i759, align 8, !dbg !4479
  %sub.ptr.lhs.cast.i760 = ptrtoint i8* %493 to i64, !dbg !4480
  %sub.ptr.rhs.cast.i761 = ptrtoint i8* %495 to i64, !dbg !4480
  %sub.ptr.sub.i762 = sub i64 %sub.ptr.lhs.cast.i760, %sub.ptr.rhs.cast.i761, !dbg !4480
  %cmp.i763 = icmp slt i64 %sub.ptr.sub.i762, 1, !dbg !4481
  br i1 %cmp.i763, label %if.then.i766, label %if.end.i771, !dbg !4482

if.then.i766:                                     ; preds = %if.end346
  %496 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i757, align 8, !dbg !4483
  %buffer_end1.i764 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %496, i32 0, i32 1, !dbg !4484
  %497 = load i8*, i8** %buffer_end1.i764, align 8, !dbg !4484
  %498 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i757, align 8, !dbg !4485
  %buffer2.i765 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %498, i32 0, i32 0, !dbg !4486
  store i8* %497, i8** %buffer2.i765, align 8, !dbg !4487
  store i32 0, i32* %retval.i756, align 4, !dbg !4488
  br label %bytestream2_get_byte.exit772, !dbg !4488

if.end.i771:                                      ; preds = %if.end346
  %499 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i757, align 8, !dbg !4489
  store %struct.GetByteContext* %499, %struct.GetByteContext** %g.addr.i.i755, align 8, !dbg !4490
  %500 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i755, align 8, !dbg !4491
  %buffer.i.i767 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %500, i32 0, i32 0, !dbg !4492
  store i8** %buffer.i.i767, i8*** %b.addr.i.i.i754, align 8, !dbg !4493
  %501 = load i8**, i8*** %b.addr.i.i.i754, align 8, !dbg !4494
  %502 = load i8*, i8** %501, align 8, !dbg !4495
  %add.ptr.i.i.i768 = getelementptr inbounds i8, i8* %502, i64 1, !dbg !4495
  store i8* %add.ptr.i.i.i768, i8** %501, align 8, !dbg !4495
  %503 = load i8**, i8*** %b.addr.i.i.i754, align 8, !dbg !4496
  %504 = load i8*, i8** %503, align 8, !dbg !4497
  %add.ptr1.i.i.i769 = getelementptr inbounds i8, i8* %504, i64 -1, !dbg !4498
  %505 = load i8, i8* %add.ptr1.i.i.i769, align 1, !dbg !4499
  %conv.i.i.i770 = zext i8 %505 to i32, !dbg !4500
  store i32 %conv.i.i.i770, i32* %retval.i756, align 4, !dbg !4501
  br label %bytestream2_get_byte.exit772, !dbg !4501

bytestream2_get_byte.exit772:                     ; preds = %if.then.i766, %if.end.i771
  %506 = load i32, i32* %retval.i756, align 4, !dbg !4502
  store i32 %506, i32* %line_order, align 4, !dbg !4503
  %507 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4504
  %avctx349 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %507, i32 0, i32 2, !dbg !4505
  %508 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx349, align 8, !dbg !4505
  %509 = bitcast %struct.AVCodecContext* %508 to i8*, !dbg !4504
  %510 = load i32, i32* %line_order, align 4, !dbg !4506
  call void (i8*, i32, i8*, ...) @av_log(i8* %509, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81, i32 0, i32 0), i32 %510), !dbg !4507
  %511 = load i32, i32* %line_order, align 4, !dbg !4508
  %cmp350 = icmp sgt i32 %511, 2, !dbg !4510
  br i1 %cmp350, label %if.then352, label %if.end354, !dbg !4511

if.then352:                                       ; preds = %bytestream2_get_byte.exit772
  %512 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4512
  %avctx353 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %512, i32 0, i32 2, !dbg !4514
  %513 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx353, align 8, !dbg !4514
  %514 = bitcast %struct.AVCodecContext* %513 to i8*, !dbg !4512
  call void (i8*, i32, i8*, ...) @av_log(i8* %514, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0)), !dbg !4515
  store i32 -1094995529, i32* %ret, align 4, !dbg !4516
  br label %fail, !dbg !4517

if.end354:                                        ; preds = %bytestream2_get_byte.exit772
  br label %while.cond, !dbg !4518, !llvm.loop !4198

if.else355:                                       ; preds = %if.else339
  %515 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4519
  %call356 = call i32 @check_header_variable(%struct.EXRContext* %515, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i32 31), !dbg !4520
  store i32 %call356, i32* %var_size, align 4, !dbg !4521
  %cmp357 = icmp sge i32 %call356, 0, !dbg !4522
  br i1 %cmp357, label %if.then359, label %if.else365, !dbg !4523

if.then359:                                       ; preds = %if.else355
  %516 = load i32, i32* %var_size, align 4, !dbg !4524
  %tobool360 = icmp ne i32 %516, 0, !dbg !4524
  br i1 %tobool360, label %if.end362, label %if.then361, !dbg !4526

if.then361:                                       ; preds = %if.then359
  store i32 -1094995529, i32* %ret, align 4, !dbg !4527
  br label %fail, !dbg !4529

if.end362:                                        ; preds = %if.then359
  %517 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4530
  %gb363 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %517, i32 0, i32 20, !dbg !4531
  store %struct.GetByteContext* %gb363, %struct.GetByteContext** %g.addr.i731, align 8, !dbg !4532
  %518 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i731, align 8, !dbg !4533
  %buffer_end.i732 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %518, i32 0, i32 1, !dbg !4534
  %519 = load i8*, i8** %buffer_end.i732, align 8, !dbg !4534
  %520 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i731, align 8, !dbg !4535
  %buffer.i733 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %520, i32 0, i32 0, !dbg !4536
  %521 = load i8*, i8** %buffer.i733, align 8, !dbg !4536
  %sub.ptr.lhs.cast.i734 = ptrtoint i8* %519 to i64, !dbg !4537
  %sub.ptr.rhs.cast.i735 = ptrtoint i8* %521 to i64, !dbg !4537
  %sub.ptr.sub.i736 = sub i64 %sub.ptr.lhs.cast.i734, %sub.ptr.rhs.cast.i735, !dbg !4537
  %cmp.i737 = icmp slt i64 %sub.ptr.sub.i736, 4, !dbg !4538
  br i1 %cmp.i737, label %if.then.i740, label %if.end.i745, !dbg !4539

if.then.i740:                                     ; preds = %if.end362
  %522 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i731, align 8, !dbg !4540
  %buffer_end1.i738 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %522, i32 0, i32 1, !dbg !4541
  %523 = load i8*, i8** %buffer_end1.i738, align 8, !dbg !4541
  %524 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i731, align 8, !dbg !4542
  %buffer2.i739 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %524, i32 0, i32 0, !dbg !4543
  store i8* %523, i8** %buffer2.i739, align 8, !dbg !4544
  store i32 0, i32* %retval.i730, align 4, !dbg !4545
  br label %bytestream2_get_le32.exit746, !dbg !4545

if.end.i745:                                      ; preds = %if.end362
  %525 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i731, align 8, !dbg !4546
  store %struct.GetByteContext* %525, %struct.GetByteContext** %g.addr.i.i729, align 8, !dbg !4547
  %526 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i729, align 8, !dbg !4548
  %buffer.i.i741 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %526, i32 0, i32 0, !dbg !4549
  store i8** %buffer.i.i741, i8*** %b.addr.i.i.i728, align 8, !dbg !4550
  %527 = load i8**, i8*** %b.addr.i.i.i728, align 8, !dbg !4551
  %528 = load i8*, i8** %527, align 8, !dbg !4552
  %add.ptr.i.i.i742 = getelementptr inbounds i8, i8* %528, i64 4, !dbg !4552
  store i8* %add.ptr.i.i.i742, i8** %527, align 8, !dbg !4552
  %529 = load i8**, i8*** %b.addr.i.i.i728, align 8, !dbg !4553
  %530 = load i8*, i8** %529, align 8, !dbg !4554
  %add.ptr1.i.i.i743 = getelementptr inbounds i8, i8* %530, i64 -4, !dbg !4555
  %531 = bitcast i8* %add.ptr1.i.i.i743 to %union.unaligned_32*, !dbg !4556
  %l.i.i.i744 = bitcast %union.unaligned_32* %531 to i32*, !dbg !4556
  %532 = load i32, i32* %l.i.i.i744, align 1, !dbg !4556
  store i32 %532, i32* %retval.i730, align 4, !dbg !4557
  br label %bytestream2_get_le32.exit746, !dbg !4557

bytestream2_get_le32.exit746:                     ; preds = %if.then.i740, %if.end.i745
  %533 = load i32, i32* %retval.i730, align 4, !dbg !4558
  store i32 %533, i32* %sar, align 4, !dbg !4559
  br label %while.cond, !dbg !4560, !llvm.loop !4198

if.else365:                                       ; preds = %if.else355
  %534 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4561
  %call366 = call i32 @check_header_variable(%struct.EXRContext* %534, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i32 0, i32 0), i32 29), !dbg !4562
  store i32 %call366, i32* %var_size, align 4, !dbg !4563
  %cmp367 = icmp sge i32 %call366, 0, !dbg !4564
  br i1 %cmp367, label %if.then369, label %if.else383, !dbg !4565

if.then369:                                       ; preds = %if.else365
  %535 = load i32, i32* %var_size, align 4, !dbg !4566
  %tobool370 = icmp ne i32 %535, 0, !dbg !4566
  br i1 %tobool370, label %if.end372, label %if.then371, !dbg !4568

if.then371:                                       ; preds = %if.then369
  store i32 -1094995529, i32* %ret, align 4, !dbg !4569
  br label %fail, !dbg !4571

if.end372:                                        ; preds = %if.then369
  %536 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4572
  %compression373 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %536, i32 0, i32 4, !dbg !4573
  %537 = load i32, i32* %compression373, align 8, !dbg !4573
  %cmp374 = icmp eq i32 %537, 10, !dbg !4574
  br i1 %cmp374, label %if.then376, label %if.else380, !dbg !4575

if.then376:                                       ; preds = %if.end372
  %538 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4576
  %gb377 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %538, i32 0, i32 20, !dbg !4577
  store %struct.GetByteContext* %gb377, %struct.GetByteContext** %g.addr.i694, align 8, !dbg !4578
  %539 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i694, align 8, !dbg !4579
  %buffer_end.i695 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %539, i32 0, i32 1, !dbg !4580
  %540 = load i8*, i8** %buffer_end.i695, align 8, !dbg !4580
  %541 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i694, align 8, !dbg !4581
  %buffer.i696 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %541, i32 0, i32 0, !dbg !4582
  %542 = load i8*, i8** %buffer.i696, align 8, !dbg !4582
  %sub.ptr.lhs.cast.i697 = ptrtoint i8* %540 to i64, !dbg !4583
  %sub.ptr.rhs.cast.i698 = ptrtoint i8* %542 to i64, !dbg !4583
  %sub.ptr.sub.i699 = sub i64 %sub.ptr.lhs.cast.i697, %sub.ptr.rhs.cast.i698, !dbg !4583
  %cmp.i700 = icmp slt i64 %sub.ptr.sub.i699, 1, !dbg !4584
  br i1 %cmp.i700, label %if.then.i703, label %if.end.i708, !dbg !4585

if.then.i703:                                     ; preds = %if.then376
  %543 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i694, align 8, !dbg !4586
  %buffer_end1.i701 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %543, i32 0, i32 1, !dbg !4587
  %544 = load i8*, i8** %buffer_end1.i701, align 8, !dbg !4587
  %545 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i694, align 8, !dbg !4588
  %buffer2.i702 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %545, i32 0, i32 0, !dbg !4589
  store i8* %544, i8** %buffer2.i702, align 8, !dbg !4590
  store i32 0, i32* %retval.i693, align 4, !dbg !4591
  br label %bytestream2_get_byte.exit709, !dbg !4591

if.end.i708:                                      ; preds = %if.then376
  %546 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i694, align 8, !dbg !4592
  store %struct.GetByteContext* %546, %struct.GetByteContext** %g.addr.i.i692, align 8, !dbg !4593
  %547 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i692, align 8, !dbg !4594
  %buffer.i.i704 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %547, i32 0, i32 0, !dbg !4595
  store i8** %buffer.i.i704, i8*** %b.addr.i.i.i691, align 8, !dbg !4596
  %548 = load i8**, i8*** %b.addr.i.i.i691, align 8, !dbg !4597
  %549 = load i8*, i8** %548, align 8, !dbg !4598
  %add.ptr.i.i.i705 = getelementptr inbounds i8, i8* %549, i64 1, !dbg !4598
  store i8* %add.ptr.i.i.i705, i8** %548, align 8, !dbg !4598
  %550 = load i8**, i8*** %b.addr.i.i.i691, align 8, !dbg !4599
  %551 = load i8*, i8** %550, align 8, !dbg !4600
  %add.ptr1.i.i.i706 = getelementptr inbounds i8, i8* %551, i64 -1, !dbg !4601
  %552 = load i8, i8* %add.ptr1.i.i.i706, align 1, !dbg !4602
  %conv.i.i.i707 = zext i8 %552 to i32, !dbg !4603
  store i32 %conv.i.i.i707, i32* %retval.i693, align 4, !dbg !4604
  br label %bytestream2_get_byte.exit709, !dbg !4604

bytestream2_get_byte.exit709:                     ; preds = %if.then.i703, %if.end.i708
  %553 = load i32, i32* %retval.i693, align 4, !dbg !4605
  %554 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4606
  %compression379 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %554, i32 0, i32 4, !dbg !4607
  store i32 %553, i32* %compression379, align 8, !dbg !4608
  br label %if.end382, !dbg !4606

if.else380:                                       ; preds = %if.end372
  %555 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4609
  %avctx381 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %555, i32 0, i32 2, !dbg !4610
  %556 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx381, align 8, !dbg !4610
  %557 = bitcast %struct.AVCodecContext* %556 to i8*, !dbg !4609
  call void (i8*, i32, i8*, ...) @av_log(i8* %557, i32 24, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.86, i32 0, i32 0)), !dbg !4611
  br label %if.end382

if.end382:                                        ; preds = %if.else380, %bytestream2_get_byte.exit709
  br label %while.cond, !dbg !4612, !llvm.loop !4198

if.else383:                                       ; preds = %if.else365
  %558 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4613
  %call384 = call i32 @check_header_variable(%struct.EXRContext* %558, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i32 0, i32 0), i32 22), !dbg !4614
  store i32 %call384, i32* %var_size, align 4, !dbg !4615
  %cmp385 = icmp sge i32 %call384, 0, !dbg !4616
  br i1 %cmp385, label %if.then387, label %if.else428, !dbg !4617

if.then387:                                       ; preds = %if.else383
  call void @llvm.dbg.declare(metadata i8* %tileLevel, metadata !4618, metadata !1741), !dbg !4619
  %559 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4620
  %is_tile388 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %559, i32 0, i32 18, !dbg !4622
  %560 = load i32, i32* %is_tile388, align 4, !dbg !4622
  %tobool389 = icmp ne i32 %560, 0, !dbg !4620
  br i1 %tobool389, label %if.end392, label %if.then390, !dbg !4623

if.then390:                                       ; preds = %if.then387
  %561 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4624
  %avctx391 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %561, i32 0, i32 2, !dbg !4625
  %562 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx391, align 8, !dbg !4625
  %563 = bitcast %struct.AVCodecContext* %562 to i8*, !dbg !4624
  call void (i8*, i32, i8*, ...) @av_log(i8* %563, i32 24, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.89, i32 0, i32 0)), !dbg !4626
  br label %if.end392, !dbg !4626

if.end392:                                        ; preds = %if.then390, %if.then387
  %564 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4627
  %gb393 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %564, i32 0, i32 20, !dbg !4628
  store %struct.GetByteContext* %gb393, %struct.GetByteContext** %g.addr.i656, align 8, !dbg !4629
  %565 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i656, align 8, !dbg !4630
  %buffer_end.i657 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %565, i32 0, i32 1, !dbg !4631
  %566 = load i8*, i8** %buffer_end.i657, align 8, !dbg !4631
  %567 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i656, align 8, !dbg !4632
  %buffer.i658 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %567, i32 0, i32 0, !dbg !4633
  %568 = load i8*, i8** %buffer.i658, align 8, !dbg !4633
  %sub.ptr.lhs.cast.i659 = ptrtoint i8* %566 to i64, !dbg !4634
  %sub.ptr.rhs.cast.i660 = ptrtoint i8* %568 to i64, !dbg !4634
  %sub.ptr.sub.i661 = sub i64 %sub.ptr.lhs.cast.i659, %sub.ptr.rhs.cast.i660, !dbg !4634
  %cmp.i662 = icmp slt i64 %sub.ptr.sub.i661, 4, !dbg !4635
  br i1 %cmp.i662, label %if.then.i665, label %if.end.i670, !dbg !4636

if.then.i665:                                     ; preds = %if.end392
  %569 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i656, align 8, !dbg !4637
  %buffer_end1.i663 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %569, i32 0, i32 1, !dbg !4638
  %570 = load i8*, i8** %buffer_end1.i663, align 8, !dbg !4638
  %571 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i656, align 8, !dbg !4639
  %buffer2.i664 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %571, i32 0, i32 0, !dbg !4640
  store i8* %570, i8** %buffer2.i664, align 8, !dbg !4641
  store i32 0, i32* %retval.i655, align 4, !dbg !4642
  br label %bytestream2_get_le32.exit671, !dbg !4642

if.end.i670:                                      ; preds = %if.end392
  %572 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i656, align 8, !dbg !4643
  store %struct.GetByteContext* %572, %struct.GetByteContext** %g.addr.i.i654, align 8, !dbg !4644
  %573 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i654, align 8, !dbg !4645
  %buffer.i.i666 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %573, i32 0, i32 0, !dbg !4646
  store i8** %buffer.i.i666, i8*** %b.addr.i.i.i653, align 8, !dbg !4647
  %574 = load i8**, i8*** %b.addr.i.i.i653, align 8, !dbg !4648
  %575 = load i8*, i8** %574, align 8, !dbg !4649
  %add.ptr.i.i.i667 = getelementptr inbounds i8, i8* %575, i64 4, !dbg !4649
  store i8* %add.ptr.i.i.i667, i8** %574, align 8, !dbg !4649
  %576 = load i8**, i8*** %b.addr.i.i.i653, align 8, !dbg !4650
  %577 = load i8*, i8** %576, align 8, !dbg !4651
  %add.ptr1.i.i.i668 = getelementptr inbounds i8, i8* %577, i64 -4, !dbg !4652
  %578 = bitcast i8* %add.ptr1.i.i.i668 to %union.unaligned_32*, !dbg !4653
  %l.i.i.i669 = bitcast %union.unaligned_32* %578 to i32*, !dbg !4653
  %579 = load i32, i32* %l.i.i.i669, align 1, !dbg !4653
  store i32 %579, i32* %retval.i655, align 4, !dbg !4654
  br label %bytestream2_get_le32.exit671, !dbg !4654

bytestream2_get_le32.exit671:                     ; preds = %if.then.i665, %if.end.i670
  %580 = load i32, i32* %retval.i655, align 4, !dbg !4655
  %581 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4656
  %tile_attr395 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %581, i32 0, i32 17, !dbg !4657
  %xSize396 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr395, i32 0, i32 0, !dbg !4658
  store i32 %580, i32* %xSize396, align 4, !dbg !4659
  %582 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4660
  %gb397 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %582, i32 0, i32 20, !dbg !4661
  store %struct.GetByteContext* %gb397, %struct.GetByteContext** %g.addr.i637, align 8, !dbg !4662
  %583 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i637, align 8, !dbg !4663
  %buffer_end.i638 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %583, i32 0, i32 1, !dbg !4664
  %584 = load i8*, i8** %buffer_end.i638, align 8, !dbg !4664
  %585 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i637, align 8, !dbg !4665
  %buffer.i639 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %585, i32 0, i32 0, !dbg !4666
  %586 = load i8*, i8** %buffer.i639, align 8, !dbg !4666
  %sub.ptr.lhs.cast.i640 = ptrtoint i8* %584 to i64, !dbg !4667
  %sub.ptr.rhs.cast.i641 = ptrtoint i8* %586 to i64, !dbg !4667
  %sub.ptr.sub.i642 = sub i64 %sub.ptr.lhs.cast.i640, %sub.ptr.rhs.cast.i641, !dbg !4667
  %cmp.i643 = icmp slt i64 %sub.ptr.sub.i642, 4, !dbg !4668
  br i1 %cmp.i643, label %if.then.i646, label %if.end.i651, !dbg !4669

if.then.i646:                                     ; preds = %bytestream2_get_le32.exit671
  %587 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i637, align 8, !dbg !4670
  %buffer_end1.i644 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %587, i32 0, i32 1, !dbg !4671
  %588 = load i8*, i8** %buffer_end1.i644, align 8, !dbg !4671
  %589 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i637, align 8, !dbg !4672
  %buffer2.i645 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %589, i32 0, i32 0, !dbg !4673
  store i8* %588, i8** %buffer2.i645, align 8, !dbg !4674
  store i32 0, i32* %retval.i636, align 4, !dbg !4675
  br label %bytestream2_get_le32.exit652, !dbg !4675

if.end.i651:                                      ; preds = %bytestream2_get_le32.exit671
  %590 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i637, align 8, !dbg !4676
  store %struct.GetByteContext* %590, %struct.GetByteContext** %g.addr.i.i635, align 8, !dbg !4677
  %591 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i635, align 8, !dbg !4678
  %buffer.i.i647 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %591, i32 0, i32 0, !dbg !4679
  store i8** %buffer.i.i647, i8*** %b.addr.i.i.i634, align 8, !dbg !4680
  %592 = load i8**, i8*** %b.addr.i.i.i634, align 8, !dbg !4681
  %593 = load i8*, i8** %592, align 8, !dbg !4682
  %add.ptr.i.i.i648 = getelementptr inbounds i8, i8* %593, i64 4, !dbg !4682
  store i8* %add.ptr.i.i.i648, i8** %592, align 8, !dbg !4682
  %594 = load i8**, i8*** %b.addr.i.i.i634, align 8, !dbg !4683
  %595 = load i8*, i8** %594, align 8, !dbg !4684
  %add.ptr1.i.i.i649 = getelementptr inbounds i8, i8* %595, i64 -4, !dbg !4685
  %596 = bitcast i8* %add.ptr1.i.i.i649 to %union.unaligned_32*, !dbg !4686
  %l.i.i.i650 = bitcast %union.unaligned_32* %596 to i32*, !dbg !4686
  %597 = load i32, i32* %l.i.i.i650, align 1, !dbg !4686
  store i32 %597, i32* %retval.i636, align 4, !dbg !4687
  br label %bytestream2_get_le32.exit652, !dbg !4687

bytestream2_get_le32.exit652:                     ; preds = %if.then.i646, %if.end.i651
  %598 = load i32, i32* %retval.i636, align 4, !dbg !4688
  %599 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4689
  %tile_attr399 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %599, i32 0, i32 17, !dbg !4690
  %ySize400 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr399, i32 0, i32 1, !dbg !4691
  store i32 %598, i32* %ySize400, align 4, !dbg !4692
  %600 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4693
  %gb401 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %600, i32 0, i32 20, !dbg !4694
  store %struct.GetByteContext* %gb401, %struct.GetByteContext** %g.addr.i618, align 8, !dbg !4695
  %601 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i618, align 8, !dbg !4696
  %buffer_end.i619 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %601, i32 0, i32 1, !dbg !4697
  %602 = load i8*, i8** %buffer_end.i619, align 8, !dbg !4697
  %603 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i618, align 8, !dbg !4698
  %buffer.i620 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %603, i32 0, i32 0, !dbg !4699
  %604 = load i8*, i8** %buffer.i620, align 8, !dbg !4699
  %sub.ptr.lhs.cast.i621 = ptrtoint i8* %602 to i64, !dbg !4700
  %sub.ptr.rhs.cast.i622 = ptrtoint i8* %604 to i64, !dbg !4700
  %sub.ptr.sub.i623 = sub i64 %sub.ptr.lhs.cast.i621, %sub.ptr.rhs.cast.i622, !dbg !4700
  %cmp.i624 = icmp slt i64 %sub.ptr.sub.i623, 1, !dbg !4701
  br i1 %cmp.i624, label %if.then.i627, label %if.end.i632, !dbg !4702

if.then.i627:                                     ; preds = %bytestream2_get_le32.exit652
  %605 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i618, align 8, !dbg !4703
  %buffer_end1.i625 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %605, i32 0, i32 1, !dbg !4704
  %606 = load i8*, i8** %buffer_end1.i625, align 8, !dbg !4704
  %607 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i618, align 8, !dbg !4705
  %buffer2.i626 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %607, i32 0, i32 0, !dbg !4706
  store i8* %606, i8** %buffer2.i626, align 8, !dbg !4707
  store i32 0, i32* %retval.i617, align 4, !dbg !4708
  br label %bytestream2_get_byte.exit633, !dbg !4708

if.end.i632:                                      ; preds = %bytestream2_get_le32.exit652
  %608 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i618, align 8, !dbg !4709
  store %struct.GetByteContext* %608, %struct.GetByteContext** %g.addr.i.i616, align 8, !dbg !4710
  %609 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i616, align 8, !dbg !4711
  %buffer.i.i628 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %609, i32 0, i32 0, !dbg !4712
  store i8** %buffer.i.i628, i8*** %b.addr.i.i.i615, align 8, !dbg !4713
  %610 = load i8**, i8*** %b.addr.i.i.i615, align 8, !dbg !4714
  %611 = load i8*, i8** %610, align 8, !dbg !4715
  %add.ptr.i.i.i629 = getelementptr inbounds i8, i8* %611, i64 1, !dbg !4715
  store i8* %add.ptr.i.i.i629, i8** %610, align 8, !dbg !4715
  %612 = load i8**, i8*** %b.addr.i.i.i615, align 8, !dbg !4716
  %613 = load i8*, i8** %612, align 8, !dbg !4717
  %add.ptr1.i.i.i630 = getelementptr inbounds i8, i8* %613, i64 -1, !dbg !4718
  %614 = load i8, i8* %add.ptr1.i.i.i630, align 1, !dbg !4719
  %conv.i.i.i631 = zext i8 %614 to i32, !dbg !4720
  store i32 %conv.i.i.i631, i32* %retval.i617, align 4, !dbg !4721
  br label %bytestream2_get_byte.exit633, !dbg !4721

bytestream2_get_byte.exit633:                     ; preds = %if.then.i627, %if.end.i632
  %615 = load i32, i32* %retval.i617, align 4, !dbg !4722
  %conv403 = trunc i32 %615 to i8, !dbg !4695
  store i8 %conv403, i8* %tileLevel, align 1, !dbg !4723
  %616 = load i8, i8* %tileLevel, align 1, !dbg !4724
  %conv404 = sext i8 %616 to i32, !dbg !4724
  %and405 = and i32 %conv404, 15, !dbg !4725
  %617 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4726
  %tile_attr406 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %617, i32 0, i32 17, !dbg !4727
  %level_mode = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr406, i32 0, i32 2, !dbg !4728
  store i32 %and405, i32* %level_mode, align 4, !dbg !4729
  %618 = load i8, i8* %tileLevel, align 1, !dbg !4730
  %conv407 = sext i8 %618 to i32, !dbg !4730
  %shr = ashr i32 %conv407, 4, !dbg !4731
  %and408 = and i32 %shr, 15, !dbg !4732
  %619 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4733
  %tile_attr409 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %619, i32 0, i32 17, !dbg !4734
  %level_round = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr409, i32 0, i32 3, !dbg !4735
  store i32 %and408, i32* %level_round, align 4, !dbg !4736
  %620 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4737
  %tile_attr410 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %620, i32 0, i32 17, !dbg !4739
  %level_mode411 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr410, i32 0, i32 2, !dbg !4740
  %621 = load i32, i32* %level_mode411, align 4, !dbg !4740
  %cmp412 = icmp uge i32 %621, 3, !dbg !4741
  br i1 %cmp412, label %if.then414, label %if.end418, !dbg !4742

if.then414:                                       ; preds = %bytestream2_get_byte.exit633
  %622 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4743
  %avctx415 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %622, i32 0, i32 2, !dbg !4745
  %623 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx415, align 8, !dbg !4745
  %624 = bitcast %struct.AVCodecContext* %623 to i8*, !dbg !4743
  %625 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4746
  %tile_attr416 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %625, i32 0, i32 17, !dbg !4747
  %level_mode417 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr416, i32 0, i32 2, !dbg !4748
  %626 = load i32, i32* %level_mode417, align 4, !dbg !4748
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %624, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.90, i32 0, i32 0), i32 %626), !dbg !4749
  store i32 -1163346256, i32* %ret, align 4, !dbg !4750
  br label %fail, !dbg !4751

if.end418:                                        ; preds = %bytestream2_get_byte.exit633
  %627 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4752
  %tile_attr419 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %627, i32 0, i32 17, !dbg !4754
  %level_round420 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr419, i32 0, i32 3, !dbg !4755
  %628 = load i32, i32* %level_round420, align 4, !dbg !4755
  %cmp421 = icmp uge i32 %628, 2, !dbg !4756
  br i1 %cmp421, label %if.then423, label %if.end427, !dbg !4757

if.then423:                                       ; preds = %if.end418
  %629 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4758
  %avctx424 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %629, i32 0, i32 2, !dbg !4760
  %630 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx424, align 8, !dbg !4760
  %631 = bitcast %struct.AVCodecContext* %630 to i8*, !dbg !4758
  %632 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4761
  %tile_attr425 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %632, i32 0, i32 17, !dbg !4762
  %level_round426 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr425, i32 0, i32 3, !dbg !4763
  %633 = load i32, i32* %level_round426, align 4, !dbg !4763
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %631, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.91, i32 0, i32 0), i32 %633), !dbg !4764
  store i32 -1163346256, i32* %ret, align 4, !dbg !4765
  br label %fail, !dbg !4766

if.end427:                                        ; preds = %if.end418
  br label %while.cond, !dbg !4767, !llvm.loop !4198

if.else428:                                       ; preds = %if.else383
  %634 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4768
  %call429 = call i32 @check_header_variable(%struct.EXRContext* %634, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i32 0, i32 0), i32 1), !dbg !4769
  store i32 %call429, i32* %var_size, align 4, !dbg !4770
  %cmp430 = icmp sge i32 %call429, 0, !dbg !4771
  br i1 %cmp430, label %if.then432, label %if.end446, !dbg !4772

if.then432:                                       ; preds = %if.else428
  call void @llvm.dbg.declare(metadata [256 x i8]* %key, metadata !4773, metadata !1741), !dbg !4777
  %635 = bitcast [256 x i8]* %key to i8*, !dbg !4777
  call void @llvm.memset.p0i8.i64(i8* %635, i8 0, i64 256, i32 16, i1 false), !dbg !4777
  %636 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4778
  %gb433 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %636, i32 0, i32 20, !dbg !4779
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %key, i32 0, i32 0, !dbg !4780
  %637 = load i32, i32* %var_size, align 4, !dbg !4781
  %conv434 = sext i32 %637 to i64, !dbg !4782
  %cmp435 = icmp ugt i64 255, %conv434, !dbg !4783
  br i1 %cmp435, label %cond.true437, label %cond.false439, !dbg !4784

cond.true437:                                     ; preds = %if.then432
  %638 = load i32, i32* %var_size, align 4, !dbg !4785
  %conv438 = sext i32 %638 to i64, !dbg !4787
  br label %cond.end440, !dbg !4788

cond.false439:                                    ; preds = %if.then432
  br label %cond.end440, !dbg !4789

cond.end440:                                      ; preds = %cond.false439, %cond.true437
  %cond441 = phi i64 [ %conv438, %cond.true437 ], [ 255, %cond.false439 ], !dbg !4791
  %conv442 = trunc i64 %cond441 to i32, !dbg !4792
  store %struct.GetByteContext* %gb433, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4793
  store i8* %arraydecay, i8** %dst.addr.i, align 8, !dbg !4793
  store i32 %conv442, i32* %size.addr.i578, align 4, !dbg !4793
  %639 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4794
  %buffer_end.i579 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %639, i32 0, i32 1, !dbg !4795
  %640 = load i8*, i8** %buffer_end.i579, align 8, !dbg !4795
  %641 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4796
  %buffer.i580 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %641, i32 0, i32 0, !dbg !4797
  %642 = load i8*, i8** %buffer.i580, align 8, !dbg !4797
  %sub.ptr.lhs.cast.i581 = ptrtoint i8* %640 to i64, !dbg !4798
  %sub.ptr.rhs.cast.i582 = ptrtoint i8* %642 to i64, !dbg !4798
  %sub.ptr.sub.i583 = sub i64 %sub.ptr.lhs.cast.i581, %sub.ptr.rhs.cast.i582, !dbg !4798
  %643 = load i32, i32* %size.addr.i578, align 4, !dbg !4799
  %conv.i584 = zext i32 %643 to i64, !dbg !4800
  %cmp.i585 = icmp sgt i64 %sub.ptr.sub.i583, %conv.i584, !dbg !4801
  br i1 %cmp.i585, label %cond.true.i587, label %cond.false.i593, !dbg !4802

cond.true.i587:                                   ; preds = %cond.end440
  %644 = load i32, i32* %size.addr.i578, align 4, !dbg !4803
  %conv2.i586 = zext i32 %644 to i64, !dbg !4805
  br label %bytestream2_get_buffer.exit, !dbg !4806

cond.false.i593:                                  ; preds = %cond.end440
  %645 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4807
  %buffer_end3.i588 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %645, i32 0, i32 1, !dbg !4809
  %646 = load i8*, i8** %buffer_end3.i588, align 8, !dbg !4809
  %647 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4810
  %buffer4.i589 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %647, i32 0, i32 0, !dbg !4811
  %648 = load i8*, i8** %buffer4.i589, align 8, !dbg !4811
  %sub.ptr.lhs.cast5.i590 = ptrtoint i8* %646 to i64, !dbg !4812
  %sub.ptr.rhs.cast6.i591 = ptrtoint i8* %648 to i64, !dbg !4812
  %sub.ptr.sub7.i592 = sub i64 %sub.ptr.lhs.cast5.i590, %sub.ptr.rhs.cast6.i591, !dbg !4812
  br label %bytestream2_get_buffer.exit, !dbg !4813

bytestream2_get_buffer.exit:                      ; preds = %cond.true.i587, %cond.false.i593
  %cond.i594 = phi i64 [ %conv2.i586, %cond.true.i587 ], [ %sub.ptr.sub7.i592, %cond.false.i593 ], !dbg !4814
  %conv8.i = trunc i64 %cond.i594 to i32, !dbg !4816
  store i32 %conv8.i, i32* %size2.i, align 4, !dbg !4817
  %649 = load i8*, i8** %dst.addr.i, align 8, !dbg !4818
  %650 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4819
  %buffer9.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %650, i32 0, i32 0, !dbg !4820
  %651 = load i8*, i8** %buffer9.i, align 8, !dbg !4820
  %652 = load i32, i32* %size2.i, align 4, !dbg !4821
  %conv10.i = sext i32 %652 to i64, !dbg !4821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %649, i8* %651, i64 %conv10.i, i32 1, i1 false) #10, !dbg !4822
  %653 = load i32, i32* %size2.i, align 4, !dbg !4823
  %654 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i577, align 8, !dbg !4824
  %buffer11.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %654, i32 0, i32 0, !dbg !4825
  %655 = load i8*, i8** %buffer11.i, align 8, !dbg !4826
  %idx.ext.i = sext i32 %653 to i64, !dbg !4826
  %add.ptr.i595 = getelementptr inbounds i8, i8* %655, i64 %idx.ext.i, !dbg !4826
  store i8* %add.ptr.i595, i8** %buffer11.i, align 8, !dbg !4826
  %656 = load i32, i32* %size2.i, align 4, !dbg !4827
  %arraydecay444 = getelementptr inbounds [256 x i8], [256 x i8]* %key, i32 0, i32 0, !dbg !4828
  %call445 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* %arraydecay444, i32 0), !dbg !4829
  br label %while.cond, !dbg !4830, !llvm.loop !4198

if.end446:                                        ; preds = %if.else428
  br label %if.end447

if.end447:                                        ; preds = %if.end446
  br label %if.end448

if.end448:                                        ; preds = %if.end447
  br label %if.end449

if.end449:                                        ; preds = %if.end448
  br label %if.end450

if.end450:                                        ; preds = %if.end449
  br label %if.end451

if.end451:                                        ; preds = %if.end450
  br label %if.end452

if.end452:                                        ; preds = %if.end451
  br label %if.end453

if.end453:                                        ; preds = %if.end452
  %657 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4831
  %gb454 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %657, i32 0, i32 20, !dbg !4832
  store %struct.GetByteContext* %gb454, %struct.GetByteContext** %g.addr.i570, align 8, !dbg !4833
  %658 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i570, align 8, !dbg !4834
  %buffer_end.i571 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %658, i32 0, i32 1, !dbg !4835
  %659 = load i8*, i8** %buffer_end.i571, align 8, !dbg !4835
  %660 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i570, align 8, !dbg !4836
  %buffer.i572 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %660, i32 0, i32 0, !dbg !4837
  %661 = load i8*, i8** %buffer.i572, align 8, !dbg !4837
  %sub.ptr.lhs.cast.i573 = ptrtoint i8* %659 to i64, !dbg !4838
  %sub.ptr.rhs.cast.i574 = ptrtoint i8* %661 to i64, !dbg !4838
  %sub.ptr.sub.i575 = sub i64 %sub.ptr.lhs.cast.i573, %sub.ptr.rhs.cast.i574, !dbg !4838
  %conv.i576 = trunc i64 %sub.ptr.sub.i575 to i32, !dbg !4834
  %cmp456 = icmp ule i32 %conv.i576, 9, !dbg !4839
  br i1 %cmp456, label %if.then458, label %if.end460, !dbg !4840

if.then458:                                       ; preds = %if.end453
  %662 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4841
  %avctx459 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %662, i32 0, i32 2, !dbg !4843
  %663 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx459, align 8, !dbg !4843
  %664 = bitcast %struct.AVCodecContext* %663 to i8*, !dbg !4841
  call void (i8*, i32, i8*, ...) @av_log(i8* %664, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.94, i32 0, i32 0)), !dbg !4844
  store i32 -1094995529, i32* %ret, align 4, !dbg !4845
  br label %fail, !dbg !4846

if.end460:                                        ; preds = %if.end453
  store i32 0, i32* %i, align 4, !dbg !4847
  br label %for.cond, !dbg !4848

for.cond:                                         ; preds = %for.inc, %if.end460
  %665 = load i32, i32* %i, align 4, !dbg !4849
  %cmp461 = icmp slt i32 %665, 2, !dbg !4850
  br i1 %cmp461, label %for.body, label %for.end, !dbg !4851

for.body:                                         ; preds = %for.cond
  br label %while.cond463, !dbg !4852

while.cond463:                                    ; preds = %while.body468, %for.body
  %666 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4853
  %gb464 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %666, i32 0, i32 20, !dbg !4854
  store %struct.GetByteContext* %gb464, %struct.GetByteContext** %g.addr.i556, align 8, !dbg !4855
  %667 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i556, align 8, !dbg !4856
  %buffer_end.i557 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %667, i32 0, i32 1, !dbg !4857
  %668 = load i8*, i8** %buffer_end.i557, align 8, !dbg !4857
  %669 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i556, align 8, !dbg !4858
  %buffer.i558 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %669, i32 0, i32 0, !dbg !4859
  %670 = load i8*, i8** %buffer.i558, align 8, !dbg !4859
  %sub.ptr.lhs.cast.i559 = ptrtoint i8* %668 to i64, !dbg !4860
  %sub.ptr.rhs.cast.i560 = ptrtoint i8* %670 to i64, !dbg !4860
  %sub.ptr.sub.i561 = sub i64 %sub.ptr.lhs.cast.i559, %sub.ptr.rhs.cast.i560, !dbg !4860
  %cmp.i562 = icmp slt i64 %sub.ptr.sub.i561, 1, !dbg !4861
  br i1 %cmp.i562, label %if.then.i565, label %if.end.i569, !dbg !4862

if.then.i565:                                     ; preds = %while.cond463
  %671 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i556, align 8, !dbg !4863
  %buffer_end1.i563 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %671, i32 0, i32 1, !dbg !4864
  %672 = load i8*, i8** %buffer_end1.i563, align 8, !dbg !4864
  %673 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i556, align 8, !dbg !4865
  %buffer2.i564 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %673, i32 0, i32 0, !dbg !4866
  store i8* %672, i8** %buffer2.i564, align 8, !dbg !4867
  store i32 0, i32* %retval.i555, align 4, !dbg !4868
  br label %bytestream2_get_byte.exit, !dbg !4868

if.end.i569:                                      ; preds = %while.cond463
  %674 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i556, align 8, !dbg !4869
  store %struct.GetByteContext* %674, %struct.GetByteContext** %g.addr.i.i554, align 8, !dbg !4870
  %675 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i554, align 8, !dbg !4871
  %buffer.i.i566 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %675, i32 0, i32 0, !dbg !4872
  store i8** %buffer.i.i566, i8*** %b.addr.i.i.i553, align 8, !dbg !4873
  %676 = load i8**, i8*** %b.addr.i.i.i553, align 8, !dbg !4874
  %677 = load i8*, i8** %676, align 8, !dbg !4875
  %add.ptr.i.i.i567 = getelementptr inbounds i8, i8* %677, i64 1, !dbg !4875
  store i8* %add.ptr.i.i.i567, i8** %676, align 8, !dbg !4875
  %678 = load i8**, i8*** %b.addr.i.i.i553, align 8, !dbg !4876
  %679 = load i8*, i8** %678, align 8, !dbg !4877
  %add.ptr1.i.i.i568 = getelementptr inbounds i8, i8* %679, i64 -1, !dbg !4878
  %680 = load i8, i8* %add.ptr1.i.i.i568, align 1, !dbg !4879
  %conv.i.i.i = zext i8 %680 to i32, !dbg !4880
  store i32 %conv.i.i.i, i32* %retval.i555, align 4, !dbg !4881
  br label %bytestream2_get_byte.exit, !dbg !4881

bytestream2_get_byte.exit:                        ; preds = %if.then.i565, %if.end.i569
  %681 = load i32, i32* %retval.i555, align 4, !dbg !4882
  %cmp466 = icmp ne i32 %681, 0, !dbg !4883
  br i1 %cmp466, label %while.body468, label %while.end469, !dbg !4884

while.body468:                                    ; preds = %bytestream2_get_byte.exit
  br label %while.cond463, !dbg !4885, !llvm.loop !4887

while.end469:                                     ; preds = %bytestream2_get_byte.exit
  br label %for.inc, !dbg !4888

for.inc:                                          ; preds = %while.end469
  %682 = load i32, i32* %i, align 4, !dbg !4890
  %inc470 = add nsw i32 %682, 1, !dbg !4890
  store i32 %inc470, i32* %i, align 4, !dbg !4890
  br label %for.cond, !dbg !4891, !llvm.loop !4892

for.end:                                          ; preds = %for.cond
  %683 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4894
  %gb471 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %683, i32 0, i32 20, !dbg !4895
  %684 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4896
  %gb472 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %684, i32 0, i32 20, !dbg !4897
  store %struct.GetByteContext* %gb472, %struct.GetByteContext** %g.addr.i546, align 8, !dbg !4898
  %685 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i546, align 8, !dbg !4899
  %buffer_end.i547 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %685, i32 0, i32 1, !dbg !4900
  %686 = load i8*, i8** %buffer_end.i547, align 8, !dbg !4900
  %687 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i546, align 8, !dbg !4901
  %buffer.i548 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %687, i32 0, i32 0, !dbg !4902
  %688 = load i8*, i8** %buffer.i548, align 8, !dbg !4902
  %sub.ptr.lhs.cast.i549 = ptrtoint i8* %686 to i64, !dbg !4903
  %sub.ptr.rhs.cast.i550 = ptrtoint i8* %688 to i64, !dbg !4903
  %sub.ptr.sub.i551 = sub i64 %sub.ptr.lhs.cast.i549, %sub.ptr.rhs.cast.i550, !dbg !4903
  %cmp.i552 = icmp slt i64 %sub.ptr.sub.i551, 4, !dbg !4904
  br i1 %cmp.i552, label %if.then.i, label %if.end.i, !dbg !4905

if.then.i:                                        ; preds = %for.end
  %689 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i546, align 8, !dbg !4906
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %689, i32 0, i32 1, !dbg !4907
  %690 = load i8*, i8** %buffer_end1.i, align 8, !dbg !4907
  %691 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i546, align 8, !dbg !4908
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %691, i32 0, i32 0, !dbg !4909
  store i8* %690, i8** %buffer2.i, align 8, !dbg !4910
  store i32 0, i32* %retval.i, align 4, !dbg !4911
  br label %bytestream2_get_le32.exit, !dbg !4911

if.end.i:                                         ; preds = %for.end
  %692 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i546, align 8, !dbg !4912
  store %struct.GetByteContext* %692, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !4913
  %693 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !4914
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %693, i32 0, i32 0, !dbg !4915
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !4916
  %694 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !4917
  %695 = load i8*, i8** %694, align 8, !dbg !4918
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %695, i64 4, !dbg !4918
  store i8* %add.ptr.i.i.i, i8** %694, align 8, !dbg !4918
  %696 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !4919
  %697 = load i8*, i8** %696, align 8, !dbg !4920
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %697, i64 -4, !dbg !4921
  %698 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !4922
  %l.i.i.i = bitcast %union.unaligned_32* %698 to i32*, !dbg !4922
  %699 = load i32, i32* %l.i.i.i, align 1, !dbg !4922
  store i32 %699, i32* %retval.i, align 4, !dbg !4923
  br label %bytestream2_get_le32.exit, !dbg !4923

bytestream2_get_le32.exit:                        ; preds = %if.then.i, %if.end.i
  %700 = load i32, i32* %retval.i, align 4, !dbg !4924
  store %struct.GetByteContext* %gb471, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !4925
  store i32 %700, i32* %size.addr.i526, align 4, !dbg !4925
  %701 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !4926
  %buffer_end.i527 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %701, i32 0, i32 1, !dbg !4927
  %702 = load i8*, i8** %buffer_end.i527, align 8, !dbg !4927
  %703 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !4928
  %buffer.i528 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %703, i32 0, i32 0, !dbg !4929
  %704 = load i8*, i8** %buffer.i528, align 8, !dbg !4929
  %sub.ptr.lhs.cast.i529 = ptrtoint i8* %702 to i64, !dbg !4930
  %sub.ptr.rhs.cast.i530 = ptrtoint i8* %704 to i64, !dbg !4930
  %sub.ptr.sub.i531 = sub i64 %sub.ptr.lhs.cast.i529, %sub.ptr.rhs.cast.i530, !dbg !4930
  %705 = load i32, i32* %size.addr.i526, align 4, !dbg !4931
  %conv.i532 = zext i32 %705 to i64, !dbg !4932
  %cmp.i533 = icmp sgt i64 %sub.ptr.sub.i531, %conv.i532, !dbg !4933
  br i1 %cmp.i533, label %cond.true.i535, label %cond.false.i541, !dbg !4934

cond.true.i535:                                   ; preds = %bytestream2_get_le32.exit
  %706 = load i32, i32* %size.addr.i526, align 4, !dbg !4935
  %conv2.i534 = zext i32 %706 to i64, !dbg !4936
  br label %bytestream2_skip.exit545, !dbg !4937

cond.false.i541:                                  ; preds = %bytestream2_get_le32.exit
  %707 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !4938
  %buffer_end3.i536 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %707, i32 0, i32 1, !dbg !4939
  %708 = load i8*, i8** %buffer_end3.i536, align 8, !dbg !4939
  %709 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !4940
  %buffer4.i537 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %709, i32 0, i32 0, !dbg !4941
  %710 = load i8*, i8** %buffer4.i537, align 8, !dbg !4941
  %sub.ptr.lhs.cast5.i538 = ptrtoint i8* %708 to i64, !dbg !4942
  %sub.ptr.rhs.cast6.i539 = ptrtoint i8* %710 to i64, !dbg !4942
  %sub.ptr.sub7.i540 = sub i64 %sub.ptr.lhs.cast5.i538, %sub.ptr.rhs.cast6.i539, !dbg !4942
  br label %bytestream2_skip.exit545, !dbg !4943

bytestream2_skip.exit545:                         ; preds = %cond.true.i535, %cond.false.i541
  %cond.i542 = phi i64 [ %conv2.i534, %cond.true.i535 ], [ %sub.ptr.sub7.i540, %cond.false.i541 ], !dbg !4944
  %711 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !4945
  %buffer8.i543 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %711, i32 0, i32 0, !dbg !4946
  %712 = load i8*, i8** %buffer8.i543, align 8, !dbg !4947
  %add.ptr.i544 = getelementptr inbounds i8, i8* %712, i64 %cond.i542, !dbg !4947
  store i8* %add.ptr.i544, i8** %buffer8.i543, align 8, !dbg !4947
  br label %while.cond, !dbg !4948, !llvm.loop !4198

while.end474:                                     ; preds = %land.end
  %713 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4950
  %avctx475 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %713, i32 0, i32 2, !dbg !4951
  %714 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx475, align 8, !dbg !4951
  %715 = load i32, i32* %sar, align 4, !dbg !4952
  store i32 %715, i32* %i.addr.i, align 4, !dbg !4953
  %716 = load i32, i32* %i.addr.i, align 4, !dbg !4954
  %i1.i = bitcast %union.av_intfloat32* %v.i to i32*, !dbg !4955
  store i32 %716, i32* %i1.i, align 4, !dbg !4956
  %f.i = bitcast %union.av_intfloat32* %v.i to float*, !dbg !4957
  %717 = load float, float* %f.i, align 4, !dbg !4957
  %conv477 = fpext float %717 to double, !dbg !4953
  %call478 = call i64 @av_d2q(double %conv477, i32 255) #3, !dbg !4958
  %718 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !4959
  store i64 %call478, i64* %718, align 4, !dbg !4959
  %719 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !4960
  %720 = load i64, i64* %719, align 4, !dbg !4960
  %call479 = call i32 @ff_set_sar(%struct.AVCodecContext* %714, i64 %720), !dbg !4961
  %721 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4962
  %compression480 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %721, i32 0, i32 4, !dbg !4964
  %722 = load i32, i32* %compression480, align 8, !dbg !4964
  %cmp481 = icmp eq i32 %722, 10, !dbg !4965
  br i1 %cmp481, label %if.then483, label %if.end485, !dbg !4966

if.then483:                                       ; preds = %while.end474
  %723 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4967
  %avctx484 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %723, i32 0, i32 2, !dbg !4969
  %724 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx484, align 8, !dbg !4969
  %725 = bitcast %struct.AVCodecContext* %724 to i8*, !dbg !4967
  call void (i8*, i32, i8*, ...) @av_log(i8* %725, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i32 0, i32 0)), !dbg !4970
  store i32 -1094995529, i32* %ret, align 4, !dbg !4971
  br label %fail, !dbg !4972

if.end485:                                        ; preds = %while.end474
  %726 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4973
  %is_tile486 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %726, i32 0, i32 18, !dbg !4975
  %727 = load i32, i32* %is_tile486, align 4, !dbg !4975
  %tobool487 = icmp ne i32 %727, 0, !dbg !4973
  br i1 %tobool487, label %if.then488, label %if.end501, !dbg !4976

if.then488:                                       ; preds = %if.end485
  %728 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4977
  %tile_attr489 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %728, i32 0, i32 17, !dbg !4980
  %xSize490 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr489, i32 0, i32 0, !dbg !4981
  %729 = load i32, i32* %xSize490, align 4, !dbg !4981
  %cmp491 = icmp slt i32 %729, 1, !dbg !4982
  br i1 %cmp491, label %if.then498, label %lor.lhs.false493, !dbg !4983

lor.lhs.false493:                                 ; preds = %if.then488
  %730 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4984
  %tile_attr494 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %730, i32 0, i32 17, !dbg !4986
  %ySize495 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr494, i32 0, i32 1, !dbg !4987
  %731 = load i32, i32* %ySize495, align 4, !dbg !4987
  %cmp496 = icmp slt i32 %731, 1, !dbg !4988
  br i1 %cmp496, label %if.then498, label %if.end500, !dbg !4989

if.then498:                                       ; preds = %lor.lhs.false493, %if.then488
  %732 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4990
  %avctx499 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %732, i32 0, i32 2, !dbg !4992
  %733 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx499, align 8, !dbg !4992
  %734 = bitcast %struct.AVCodecContext* %733 to i8*, !dbg !4990
  call void (i8*, i32, i8*, ...) @av_log(i8* %734, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0)), !dbg !4993
  store i32 -1094995529, i32* %ret, align 4, !dbg !4994
  br label %fail, !dbg !4995

if.end500:                                        ; preds = %lor.lhs.false493
  br label %if.end501, !dbg !4996

if.end501:                                        ; preds = %if.end500, %if.end485
  %735 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !4997
  %gb502 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %735, i32 0, i32 20, !dbg !4998
  store %struct.GetByteContext* %gb502, %struct.GetByteContext** %g.addr.i518, align 8, !dbg !4999
  %736 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i518, align 8, !dbg !5000
  %buffer_end.i519 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %736, i32 0, i32 1, !dbg !5001
  %737 = load i8*, i8** %buffer_end.i519, align 8, !dbg !5001
  %738 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i518, align 8, !dbg !5002
  %buffer.i520 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %738, i32 0, i32 0, !dbg !5003
  %739 = load i8*, i8** %buffer.i520, align 8, !dbg !5003
  %sub.ptr.lhs.cast.i521 = ptrtoint i8* %737 to i64, !dbg !5004
  %sub.ptr.rhs.cast.i522 = ptrtoint i8* %739 to i64, !dbg !5004
  %sub.ptr.sub.i523 = sub i64 %sub.ptr.lhs.cast.i521, %sub.ptr.rhs.cast.i522, !dbg !5004
  %conv.i524 = trunc i64 %sub.ptr.sub.i523 to i32, !dbg !5000
  %cmp504 = icmp ule i32 %conv.i524, 0, !dbg !5005
  br i1 %cmp504, label %if.then506, label %if.end508, !dbg !5006

if.then506:                                       ; preds = %if.end501
  %740 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !5007
  %avctx507 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %740, i32 0, i32 2, !dbg !5009
  %741 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx507, align 8, !dbg !5009
  %742 = bitcast %struct.AVCodecContext* %741 to i8*, !dbg !5007
  call void (i8*, i32, i8*, ...) @av_log(i8* %742, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i32 0, i32 0)), !dbg !5010
  store i32 -1094995529, i32* %ret, align 4, !dbg !5011
  br label %fail, !dbg !5012

if.end508:                                        ; preds = %if.end501
  %743 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !5013
  %744 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5014
  %metadata509 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %744, i32 0, i32 39, !dbg !5015
  store %struct.AVDictionary* %743, %struct.AVDictionary** %metadata509, align 8, !dbg !5016
  %745 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !5017
  %gb510 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %745, i32 0, i32 20, !dbg !5018
  store %struct.GetByteContext* %gb510, %struct.GetByteContext** %g.addr.i511, align 8, !dbg !5019
  store i32 1, i32* %size.addr.i, align 4, !dbg !5019
  %746 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i511, align 8, !dbg !5020
  %buffer_end.i512 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %746, i32 0, i32 1, !dbg !5021
  %747 = load i8*, i8** %buffer_end.i512, align 8, !dbg !5021
  %748 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i511, align 8, !dbg !5022
  %buffer.i513 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %748, i32 0, i32 0, !dbg !5023
  %749 = load i8*, i8** %buffer.i513, align 8, !dbg !5023
  %sub.ptr.lhs.cast.i514 = ptrtoint i8* %747 to i64, !dbg !5024
  %sub.ptr.rhs.cast.i515 = ptrtoint i8* %749 to i64, !dbg !5024
  %sub.ptr.sub.i516 = sub i64 %sub.ptr.lhs.cast.i514, %sub.ptr.rhs.cast.i515, !dbg !5024
  %750 = load i32, i32* %size.addr.i, align 4, !dbg !5025
  %conv.i517 = zext i32 %750 to i64, !dbg !5026
  %cmp.i = icmp sgt i64 %sub.ptr.sub.i516, %conv.i517, !dbg !5027
  br i1 %cmp.i, label %cond.true.i, label %cond.false.i, !dbg !5028

cond.true.i:                                      ; preds = %if.end508
  %751 = load i32, i32* %size.addr.i, align 4, !dbg !5029
  %conv2.i = zext i32 %751 to i64, !dbg !5030
  br label %bytestream2_skip.exit, !dbg !5031

cond.false.i:                                     ; preds = %if.end508
  %752 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i511, align 8, !dbg !5032
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %752, i32 0, i32 1, !dbg !5033
  %753 = load i8*, i8** %buffer_end3.i, align 8, !dbg !5033
  %754 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i511, align 8, !dbg !5034
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %754, i32 0, i32 0, !dbg !5035
  %755 = load i8*, i8** %buffer4.i, align 8, !dbg !5035
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %753 to i64, !dbg !5036
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %755 to i64, !dbg !5036
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !5036
  br label %bytestream2_skip.exit, !dbg !5037

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !5038
  %756 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i511, align 8, !dbg !5039
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %756, i32 0, i32 0, !dbg !5040
  %757 = load i8*, i8** %buffer8.i, align 8, !dbg !5041
  %add.ptr.i = getelementptr inbounds i8, i8* %757, i64 %cond.i, !dbg !5041
  store i8* %add.ptr.i, i8** %buffer8.i, align 8, !dbg !5041
  store i32 0, i32* %retval, align 4, !dbg !5042
  br label %return, !dbg !5042

fail:                                             ; preds = %if.then506, %if.then498, %if.then483, %if.then458, %if.then423, %if.then414, %if.then371, %if.then361, %if.then352, %if.then345, %if.then328, %if.then298, %if.end285, %if.then207, %if.then197, %if.then186, %if.then169, %if.then159, %if.then153, %if.then45
  call void @av_dict_free(%struct.AVDictionary** %metadata), !dbg !5043
  %758 = load i32, i32* %ret, align 4, !dbg !5044
  store i32 %758, i32* %retval, align 4, !dbg !5045
  br label %return, !dbg !5045

return:                                           ; preds = %fail, %bytestream2_skip.exit, %if.then32, %if.then27, %if.then17, %if.then11, %if.then
  %759 = load i32, i32* %retval, align 4, !dbg !5046
  ret i32 %759, !dbg !5046
}

declare void @av_log(i8*, i32, i8*, ...) #2

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #2

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #2

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #2

declare i32 @ff_thread_get_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @decode_block(%struct.AVCodecContext* %avctx, i8* %tdata, i32 %jobnr, i32 %threadnr) #0 !dbg !5047 {
entry:
  %b.addr.i572 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i572, metadata !2102, metadata !1741), !dbg !5050
  %b.addr.i568 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i568, metadata !2102, metadata !1741), !dbg !5063
  %b.addr.i563 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i563, metadata !5068, metadata !1741), !dbg !5070
  %b.addr.i559 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i559, metadata !5068, metadata !1741), !dbg !5080
  %b.addr.i555 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i555, metadata !2102, metadata !1741), !dbg !5083
  %b.addr.i551 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i551, metadata !2102, metadata !1741), !dbg !5090
  %b.addr.i547 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i547, metadata !2102, metadata !1741), !dbg !5100
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2102, metadata !1741), !dbg !5103
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %tdata.addr = alloca i8*, align 8
  %jobnr.addr = alloca i32, align 4
  %threadnr.addr = alloca i32, align 4
  %s = alloca %struct.EXRContext*, align 8
  %p = alloca %struct.AVFrame*, align 8
  %td = alloca %struct.EXRThreadData*, align 8
  %channel_buffer = alloca [4 x i8*], align 16
  %buf = alloca i8*, align 8
  %line_offset = alloca i64, align 8
  %uncompressed_size = alloca i64, align 8
  %ptr_x = alloca i16*, align 8
  %ptr = alloca i8*, align 8
  %data_size = alloca i32, align 4
  %line = alloca i64, align 8
  %col = alloca i64, align 8
  %tile_x = alloca i64, align 8
  %tile_y = alloca i64, align 8
  %tile_level_x = alloca i64, align 8
  %tile_level_y = alloca i64, align 8
  %src = alloca i8*, align 8
  %axmax = alloca i32, align 4
  %bxmin = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %buf_size = alloca i32, align 4
  %c = alloca i32, align 4
  %rgb_channel_count = alloca i32, align 4
  %one_gamma = alloca float, align 4
  %trc_func = alloca double (double)*, align 8
  %ret = alloca i32, align 4
  %a = alloca i8*, align 8
  %rgb = alloca [3 x i8*], align 16
  %t = alloca %union.av_intfloat32, align 4
  %t411 = alloca %union.av_intfloat32, align 4
  %c413 = alloca i32, align 4
  %c458 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5108, metadata !1741), !dbg !5109
  store i8* %tdata, i8** %tdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tdata.addr, metadata !5110, metadata !1741), !dbg !5111
  store i32 %jobnr, i32* %jobnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %jobnr.addr, metadata !5112, metadata !1741), !dbg !5113
  store i32 %threadnr, i32* %threadnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threadnr.addr, metadata !5114, metadata !1741), !dbg !5115
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s, metadata !5116, metadata !1741), !dbg !5117
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5118
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !5119
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5119
  %2 = bitcast i8* %1 to %struct.EXRContext*, !dbg !5118
  store %struct.EXRContext* %2, %struct.EXRContext** %s, align 8, !dbg !5117
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !5120, metadata !1741), !dbg !5122
  %3 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5123
  %picture = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %3, i32 0, i32 1, !dbg !5124
  %4 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !5124
  store %struct.AVFrame* %4, %struct.AVFrame** %p, align 8, !dbg !5122
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td, metadata !5125, metadata !1741), !dbg !5126
  %5 = load i32, i32* %threadnr.addr, align 4, !dbg !5127
  %idxprom = sext i32 %5 to i64, !dbg !5128
  %6 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5128
  %thread_data = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %6, i32 0, i32 26, !dbg !5129
  %7 = load %struct.EXRThreadData*, %struct.EXRThreadData** %thread_data, align 8, !dbg !5129
  %arrayidx = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %7, i64 %idxprom, !dbg !5128
  store %struct.EXRThreadData* %arrayidx, %struct.EXRThreadData** %td, align 8, !dbg !5126
  call void @llvm.dbg.declare(metadata [4 x i8*]* %channel_buffer, metadata !5130, metadata !1741), !dbg !5132
  %8 = bitcast [4 x i8*]* %channel_buffer to i8*, !dbg !5132
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 32, i32 16, i1 false), !dbg !5132
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5133, metadata !1741), !dbg !5134
  %9 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5135
  %buf1 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %9, i32 0, i32 21, !dbg !5136
  %10 = load i8*, i8** %buf1, align 8, !dbg !5136
  store i8* %10, i8** %buf, align 8, !dbg !5134
  call void @llvm.dbg.declare(metadata i64* %line_offset, metadata !5137, metadata !1741), !dbg !5138
  call void @llvm.dbg.declare(metadata i64* %uncompressed_size, metadata !5139, metadata !1741), !dbg !5140
  call void @llvm.dbg.declare(metadata i16** %ptr_x, metadata !5141, metadata !1741), !dbg !5142
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5143, metadata !1741), !dbg !5144
  call void @llvm.dbg.declare(metadata i32* %data_size, metadata !5145, metadata !1741), !dbg !5146
  call void @llvm.dbg.declare(metadata i64* %line, metadata !5147, metadata !1741), !dbg !5148
  call void @llvm.dbg.declare(metadata i64* %col, metadata !5149, metadata !1741), !dbg !5150
  store i64 0, i64* %col, align 8, !dbg !5150
  call void @llvm.dbg.declare(metadata i64* %tile_x, metadata !5151, metadata !1741), !dbg !5152
  call void @llvm.dbg.declare(metadata i64* %tile_y, metadata !5153, metadata !1741), !dbg !5154
  call void @llvm.dbg.declare(metadata i64* %tile_level_x, metadata !5155, metadata !1741), !dbg !5156
  call void @llvm.dbg.declare(metadata i64* %tile_level_y, metadata !5157, metadata !1741), !dbg !5158
  call void @llvm.dbg.declare(metadata i8** %src, metadata !5159, metadata !1741), !dbg !5160
  call void @llvm.dbg.declare(metadata i32* %axmax, metadata !5161, metadata !1741), !dbg !5162
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5163
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 20, !dbg !5164
  %12 = load i32, i32* %width, align 4, !dbg !5164
  %13 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5165
  %xmax = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %13, i32 0, i32 10, !dbg !5166
  %14 = load i32, i32* %xmax, align 8, !dbg !5166
  %add = add i32 %14, 1, !dbg !5167
  %sub = sub i32 %12, %add, !dbg !5168
  %mul = mul i32 %sub, 2, !dbg !5169
  %15 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5170
  %desc = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %15, i32 0, i32 7, !dbg !5171
  %16 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !5171
  %nb_components = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %16, i32 0, i32 1, !dbg !5172
  %17 = load i8, i8* %nb_components, align 8, !dbg !5172
  %conv = zext i8 %17 to i32, !dbg !5170
  %mul2 = mul i32 %mul, %conv, !dbg !5173
  store i32 %mul2, i32* %axmax, align 4, !dbg !5162
  call void @llvm.dbg.declare(metadata i32* %bxmin, metadata !5174, metadata !1741), !dbg !5175
  %18 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5176
  %xmin = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %18, i32 0, i32 11, !dbg !5177
  %19 = load i32, i32* %xmin, align 4, !dbg !5177
  %mul3 = mul i32 %19, 2, !dbg !5178
  %20 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5179
  %desc4 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %20, i32 0, i32 7, !dbg !5180
  %21 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc4, align 8, !dbg !5180
  %nb_components5 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %21, i32 0, i32 1, !dbg !5181
  %22 = load i8, i8* %nb_components5, align 8, !dbg !5181
  %conv6 = zext i8 %22 to i32, !dbg !5179
  %mul7 = mul i32 %mul3, %conv6, !dbg !5182
  store i32 %mul7, i32* %bxmin, align 4, !dbg !5175
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5183, metadata !1741), !dbg !5184
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5185, metadata !1741), !dbg !5186
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !5187, metadata !1741), !dbg !5188
  %23 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5189
  %buf_size8 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %23, i32 0, i32 22, !dbg !5190
  %24 = load i32, i32* %buf_size8, align 8, !dbg !5190
  store i32 %24, i32* %buf_size, align 4, !dbg !5188
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5191, metadata !1741), !dbg !5192
  call void @llvm.dbg.declare(metadata i32* %rgb_channel_count, metadata !5193, metadata !1741), !dbg !5194
  call void @llvm.dbg.declare(metadata float* %one_gamma, metadata !5195, metadata !1741), !dbg !5196
  %25 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5197
  %gamma = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %25, i32 0, i32 29, !dbg !5198
  %26 = load float, float* %gamma, align 4, !dbg !5198
  %div = fdiv float 1.000000e+00, %26, !dbg !5199
  store float %div, float* %one_gamma, align 4, !dbg !5196
  call void @llvm.dbg.declare(metadata double (double)** %trc_func, metadata !5200, metadata !1741), !dbg !5201
  %27 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5202
  %apply_trc_type = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %27, i32 0, i32 28, !dbg !5203
  %28 = load i32, i32* %apply_trc_type, align 8, !dbg !5203
  %call = call double (double)* @avpriv_get_trc_function_from_trc(i32 %28), !dbg !5204
  store double (double)* %call, double (double)** %trc_func, align 8, !dbg !5201
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5205, metadata !1741), !dbg !5206
  %29 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5207
  %gb = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %29, i32 0, i32 20, !dbg !5208
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !5209
  %30 = load i8*, i8** %buffer, align 8, !dbg !5209
  %31 = load i32, i32* %jobnr.addr, align 4, !dbg !5210
  %mul9 = mul nsw i32 %31, 8, !dbg !5211
  %idx.ext = sext i32 %mul9 to i64, !dbg !5212
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !5212
  %32 = bitcast i8* %add.ptr to %union.unaligned_64*, !dbg !5213
  %l = bitcast %union.unaligned_64* %32 to i64*, !dbg !5213
  %33 = load i64, i64* %l, align 1, !dbg !5213
  store i64 %33, i64* %line_offset, align 8, !dbg !5214
  %34 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5215
  %is_tile = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %34, i32 0, i32 18, !dbg !5217
  %35 = load i32, i32* %is_tile, align 4, !dbg !5217
  %tobool = icmp ne i32 %35, 0, !dbg !5215
  br i1 %tobool, label %if.then, label %if.else, !dbg !5218

if.then:                                          ; preds = %entry
  %36 = load i32, i32* %buf_size, align 4, !dbg !5219
  %cmp = icmp slt i32 %36, 20, !dbg !5222
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !5223

lor.lhs.false:                                    ; preds = %if.then
  %37 = load i64, i64* %line_offset, align 8, !dbg !5224
  %38 = load i32, i32* %buf_size, align 4, !dbg !5226
  %sub11 = sub nsw i32 %38, 20, !dbg !5227
  %conv12 = sext i32 %sub11 to i64, !dbg !5226
  %cmp13 = icmp ugt i64 %37, %conv12, !dbg !5228
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !5229

if.then15:                                        ; preds = %lor.lhs.false, %if.then
  store i32 -1094995529, i32* %retval, align 4, !dbg !5230
  br label %return, !dbg !5230

if.end:                                           ; preds = %lor.lhs.false
  %39 = load i8*, i8** %buf, align 8, !dbg !5231
  %40 = load i64, i64* %line_offset, align 8, !dbg !5232
  %add.ptr16 = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !5233
  %add.ptr17 = getelementptr inbounds i8, i8* %add.ptr16, i64 20, !dbg !5234
  store i8* %add.ptr17, i8** %src, align 8, !dbg !5235
  %41 = load i8*, i8** %src, align 8, !dbg !5236
  %add.ptr18 = getelementptr inbounds i8, i8* %41, i64 -20, !dbg !5237
  %42 = bitcast i8* %add.ptr18 to %union.unaligned_32*, !dbg !5238
  %l19 = bitcast %union.unaligned_32* %42 to i32*, !dbg !5238
  %43 = load i32, i32* %l19, align 1, !dbg !5238
  %conv20 = zext i32 %43 to i64, !dbg !5239
  store i64 %conv20, i64* %tile_x, align 8, !dbg !5240
  %44 = load i8*, i8** %src, align 8, !dbg !5241
  %add.ptr21 = getelementptr inbounds i8, i8* %44, i64 -16, !dbg !5242
  %45 = bitcast i8* %add.ptr21 to %union.unaligned_32*, !dbg !5243
  %l22 = bitcast %union.unaligned_32* %45 to i32*, !dbg !5243
  %46 = load i32, i32* %l22, align 1, !dbg !5243
  %conv23 = zext i32 %46 to i64, !dbg !5244
  store i64 %conv23, i64* %tile_y, align 8, !dbg !5245
  %47 = load i8*, i8** %src, align 8, !dbg !5246
  %add.ptr24 = getelementptr inbounds i8, i8* %47, i64 -12, !dbg !5247
  %48 = bitcast i8* %add.ptr24 to %union.unaligned_32*, !dbg !5248
  %l25 = bitcast %union.unaligned_32* %48 to i32*, !dbg !5248
  %49 = load i32, i32* %l25, align 1, !dbg !5248
  %conv26 = zext i32 %49 to i64, !dbg !5249
  store i64 %conv26, i64* %tile_level_x, align 8, !dbg !5250
  %50 = load i8*, i8** %src, align 8, !dbg !5251
  %add.ptr27 = getelementptr inbounds i8, i8* %50, i64 -8, !dbg !5252
  %51 = bitcast i8* %add.ptr27 to %union.unaligned_32*, !dbg !5253
  %l28 = bitcast %union.unaligned_32* %51 to i32*, !dbg !5253
  %52 = load i32, i32* %l28, align 1, !dbg !5253
  %conv29 = zext i32 %52 to i64, !dbg !5254
  store i64 %conv29, i64* %tile_level_y, align 8, !dbg !5255
  %53 = load i8*, i8** %src, align 8, !dbg !5256
  %add.ptr30 = getelementptr inbounds i8, i8* %53, i64 -4, !dbg !5257
  %54 = bitcast i8* %add.ptr30 to %union.unaligned_32*, !dbg !5258
  %l31 = bitcast %union.unaligned_32* %54 to i32*, !dbg !5258
  %55 = load i32, i32* %l31, align 1, !dbg !5258
  store i32 %55, i32* %data_size, align 4, !dbg !5259
  %56 = load i32, i32* %data_size, align 4, !dbg !5260
  %cmp32 = icmp ule i32 %56, 0, !dbg !5262
  br i1 %cmp32, label %if.then41, label %lor.lhs.false34, !dbg !5263

lor.lhs.false34:                                  ; preds = %if.end
  %57 = load i32, i32* %data_size, align 4, !dbg !5264
  %conv35 = zext i32 %57 to i64, !dbg !5264
  %58 = load i32, i32* %buf_size, align 4, !dbg !5266
  %conv36 = sext i32 %58 to i64, !dbg !5266
  %59 = load i64, i64* %line_offset, align 8, !dbg !5267
  %sub37 = sub i64 %conv36, %59, !dbg !5268
  %sub38 = sub i64 %sub37, 20, !dbg !5269
  %cmp39 = icmp ugt i64 %conv35, %sub38, !dbg !5270
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5271

if.then41:                                        ; preds = %lor.lhs.false34, %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !5272
  br label %return, !dbg !5272

if.end42:                                         ; preds = %lor.lhs.false34
  %60 = load i64, i64* %tile_level_x, align 8, !dbg !5273
  %tobool43 = icmp ne i64 %60, 0, !dbg !5273
  br i1 %tobool43, label %if.then46, label %lor.lhs.false44, !dbg !5275

lor.lhs.false44:                                  ; preds = %if.end42
  %61 = load i64, i64* %tile_level_y, align 8, !dbg !5276
  %tobool45 = icmp ne i64 %61, 0, !dbg !5276
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !5278

if.then46:                                        ; preds = %lor.lhs.false44, %if.end42
  %62 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5279
  %avctx47 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %62, i32 0, i32 2, !dbg !5281
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx47, align 8, !dbg !5281
  %64 = bitcast %struct.AVCodecContext* %63 to i8*, !dbg !5279
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %64, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.99, i32 0, i32 0)), !dbg !5282
  store i32 -1163346256, i32* %retval, align 4, !dbg !5283
  br label %return, !dbg !5283

if.end48:                                         ; preds = %lor.lhs.false44
  %65 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5284
  %xmin49 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %65, i32 0, i32 11, !dbg !5286
  %66 = load i32, i32* %xmin49, align 4, !dbg !5286
  %tobool50 = icmp ne i32 %66, 0, !dbg !5284
  br i1 %tobool50, label %if.then53, label %lor.lhs.false51, !dbg !5287

lor.lhs.false51:                                  ; preds = %if.end48
  %67 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5288
  %ymin = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %67, i32 0, i32 13, !dbg !5290
  %68 = load i32, i32* %ymin, align 4, !dbg !5290
  %tobool52 = icmp ne i32 %68, 0, !dbg !5288
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !5291

if.then53:                                        ; preds = %lor.lhs.false51, %if.end48
  %69 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5292
  %avctx54 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %69, i32 0, i32 2, !dbg !5294
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 8, !dbg !5294
  %71 = bitcast %struct.AVCodecContext* %70 to i8*, !dbg !5292
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %71, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i32 0, i32 0)), !dbg !5295
  store i32 -1163346256, i32* %retval, align 4, !dbg !5296
  br label %return, !dbg !5296

if.end55:                                         ; preds = %lor.lhs.false51
  %72 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5297
  %tile_attr = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %72, i32 0, i32 17, !dbg !5298
  %ySize = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr, i32 0, i32 1, !dbg !5299
  %73 = load i32, i32* %ySize, align 4, !dbg !5299
  %conv56 = sext i32 %73 to i64, !dbg !5297
  %74 = load i64, i64* %tile_y, align 8, !dbg !5300
  %mul57 = mul i64 %conv56, %74, !dbg !5301
  store i64 %mul57, i64* %line, align 8, !dbg !5302
  %75 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5303
  %tile_attr58 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %75, i32 0, i32 17, !dbg !5304
  %xSize = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr58, i32 0, i32 0, !dbg !5305
  %76 = load i32, i32* %xSize, align 4, !dbg !5305
  %conv59 = sext i32 %76 to i64, !dbg !5303
  %77 = load i64, i64* %tile_x, align 8, !dbg !5306
  %mul60 = mul i64 %conv59, %77, !dbg !5307
  store i64 %mul60, i64* %col, align 8, !dbg !5308
  %78 = load i64, i64* %line, align 8, !dbg !5309
  %79 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5311
  %ymin61 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %79, i32 0, i32 13, !dbg !5312
  %80 = load i32, i32* %ymin61, align 4, !dbg !5312
  %conv62 = zext i32 %80 to i64, !dbg !5311
  %cmp63 = icmp ult i64 %78, %conv62, !dbg !5313
  br i1 %cmp63, label %if.then79, label %lor.lhs.false65, !dbg !5314

lor.lhs.false65:                                  ; preds = %if.end55
  %81 = load i64, i64* %line, align 8, !dbg !5315
  %82 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5317
  %ymax = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %82, i32 0, i32 12, !dbg !5318
  %83 = load i32, i32* %ymax, align 8, !dbg !5318
  %conv66 = zext i32 %83 to i64, !dbg !5317
  %cmp67 = icmp ugt i64 %81, %conv66, !dbg !5319
  br i1 %cmp67, label %if.then79, label %lor.lhs.false69, !dbg !5320

lor.lhs.false69:                                  ; preds = %lor.lhs.false65
  %84 = load i64, i64* %col, align 8, !dbg !5321
  %85 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5322
  %xmin70 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %85, i32 0, i32 11, !dbg !5323
  %86 = load i32, i32* %xmin70, align 4, !dbg !5323
  %conv71 = zext i32 %86 to i64, !dbg !5322
  %cmp72 = icmp ult i64 %84, %conv71, !dbg !5324
  br i1 %cmp72, label %if.then79, label %lor.lhs.false74, !dbg !5325

lor.lhs.false74:                                  ; preds = %lor.lhs.false69
  %87 = load i64, i64* %col, align 8, !dbg !5326
  %88 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5327
  %xmax75 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %88, i32 0, i32 10, !dbg !5328
  %89 = load i32, i32* %xmax75, align 8, !dbg !5328
  %conv76 = zext i32 %89 to i64, !dbg !5327
  %cmp77 = icmp ugt i64 %87, %conv76, !dbg !5329
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !5330

if.then79:                                        ; preds = %lor.lhs.false74, %lor.lhs.false69, %lor.lhs.false65, %if.end55
  store i32 -1094995529, i32* %retval, align 4, !dbg !5332
  br label %return, !dbg !5332

if.end80:                                         ; preds = %lor.lhs.false74
  %90 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5333
  %tile_attr81 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %90, i32 0, i32 17, !dbg !5334
  %ySize82 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr81, i32 0, i32 1, !dbg !5335
  %91 = load i32, i32* %ySize82, align 4, !dbg !5335
  %conv83 = sext i32 %91 to i64, !dbg !5336
  %92 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5337
  %ydelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %92, i32 0, i32 15, !dbg !5338
  %93 = load i32, i32* %ydelta, align 4, !dbg !5338
  %conv84 = zext i32 %93 to i64, !dbg !5337
  %94 = load i64, i64* %tile_y, align 8, !dbg !5339
  %95 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5340
  %tile_attr85 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %95, i32 0, i32 17, !dbg !5341
  %ySize86 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr85, i32 0, i32 1, !dbg !5342
  %96 = load i32, i32* %ySize86, align 4, !dbg !5342
  %conv87 = sext i32 %96 to i64, !dbg !5340
  %mul88 = mul i64 %94, %conv87, !dbg !5343
  %sub89 = sub i64 %conv84, %mul88, !dbg !5344
  %cmp90 = icmp ugt i64 %conv83, %sub89, !dbg !5345
  br i1 %cmp90, label %cond.true, label %cond.false, !dbg !5336

cond.true:                                        ; preds = %if.end80
  %97 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5346
  %ydelta92 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %97, i32 0, i32 15, !dbg !5348
  %98 = load i32, i32* %ydelta92, align 4, !dbg !5348
  %conv93 = zext i32 %98 to i64, !dbg !5346
  %99 = load i64, i64* %tile_y, align 8, !dbg !5349
  %100 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5350
  %tile_attr94 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %100, i32 0, i32 17, !dbg !5351
  %ySize95 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr94, i32 0, i32 1, !dbg !5352
  %101 = load i32, i32* %ySize95, align 4, !dbg !5352
  %conv96 = sext i32 %101 to i64, !dbg !5350
  %mul97 = mul i64 %99, %conv96, !dbg !5353
  %sub98 = sub i64 %conv93, %mul97, !dbg !5354
  br label %cond.end, !dbg !5355

cond.false:                                       ; preds = %if.end80
  %102 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5356
  %tile_attr99 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %102, i32 0, i32 17, !dbg !5357
  %ySize100 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr99, i32 0, i32 1, !dbg !5358
  %103 = load i32, i32* %ySize100, align 4, !dbg !5358
  %conv101 = sext i32 %103 to i64, !dbg !5359
  br label %cond.end, !dbg !5360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub98, %cond.true ], [ %conv101, %cond.false ], !dbg !5361
  %conv102 = trunc i64 %cond to i32, !dbg !5363
  %104 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5364
  %ysize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %104, i32 0, i32 6, !dbg !5365
  store i32 %conv102, i32* %ysize, align 8, !dbg !5366
  %105 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5367
  %tile_attr103 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %105, i32 0, i32 17, !dbg !5368
  %xSize104 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr103, i32 0, i32 0, !dbg !5369
  %106 = load i32, i32* %xSize104, align 4, !dbg !5369
  %conv105 = sext i32 %106 to i64, !dbg !5370
  %107 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5371
  %xdelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %107, i32 0, i32 14, !dbg !5372
  %108 = load i32, i32* %xdelta, align 8, !dbg !5372
  %conv106 = zext i32 %108 to i64, !dbg !5371
  %109 = load i64, i64* %tile_x, align 8, !dbg !5373
  %110 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5374
  %tile_attr107 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %110, i32 0, i32 17, !dbg !5375
  %xSize108 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr107, i32 0, i32 0, !dbg !5376
  %111 = load i32, i32* %xSize108, align 4, !dbg !5376
  %conv109 = sext i32 %111 to i64, !dbg !5374
  %mul110 = mul i64 %109, %conv109, !dbg !5377
  %sub111 = sub i64 %conv106, %mul110, !dbg !5378
  %cmp112 = icmp ugt i64 %conv105, %sub111, !dbg !5379
  br i1 %cmp112, label %cond.true114, label %cond.false122, !dbg !5370

cond.true114:                                     ; preds = %cond.end
  %112 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5380
  %xdelta115 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %112, i32 0, i32 14, !dbg !5381
  %113 = load i32, i32* %xdelta115, align 8, !dbg !5381
  %conv116 = zext i32 %113 to i64, !dbg !5380
  %114 = load i64, i64* %tile_x, align 8, !dbg !5382
  %115 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5383
  %tile_attr117 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %115, i32 0, i32 17, !dbg !5384
  %xSize118 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr117, i32 0, i32 0, !dbg !5385
  %116 = load i32, i32* %xSize118, align 4, !dbg !5385
  %conv119 = sext i32 %116 to i64, !dbg !5383
  %mul120 = mul i64 %114, %conv119, !dbg !5386
  %sub121 = sub i64 %conv116, %mul120, !dbg !5387
  br label %cond.end126, !dbg !5388

cond.false122:                                    ; preds = %cond.end
  %117 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5389
  %tile_attr123 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %117, i32 0, i32 17, !dbg !5390
  %xSize124 = getelementptr inbounds %struct.EXRTileAttribute, %struct.EXRTileAttribute* %tile_attr123, i32 0, i32 0, !dbg !5391
  %118 = load i32, i32* %xSize124, align 4, !dbg !5391
  %conv125 = sext i32 %118 to i64, !dbg !5392
  br label %cond.end126, !dbg !5393

cond.end126:                                      ; preds = %cond.false122, %cond.true114
  %cond127 = phi i64 [ %sub121, %cond.true114 ], [ %conv125, %cond.false122 ], !dbg !5394
  %conv128 = trunc i64 %cond127 to i32, !dbg !5395
  %119 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5396
  %xsize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %119, i32 0, i32 7, !dbg !5397
  store i32 %conv128, i32* %xsize, align 4, !dbg !5398
  %120 = load i64, i64* %col, align 8, !dbg !5399
  %tobool129 = icmp ne i64 %120, 0, !dbg !5399
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !5401

if.then130:                                       ; preds = %cond.end126
  store i32 0, i32* %bxmin, align 4, !dbg !5402
  br label %if.end131, !dbg !5404

if.end131:                                        ; preds = %if.then130, %cond.end126
  %121 = load i64, i64* %col, align 8, !dbg !5405
  %122 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5407
  %xsize132 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %122, i32 0, i32 7, !dbg !5408
  %123 = load i32, i32* %xsize132, align 4, !dbg !5408
  %conv133 = sext i32 %123 to i64, !dbg !5407
  %add134 = add i64 %121, %conv133, !dbg !5409
  %124 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5410
  %xdelta135 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %124, i32 0, i32 14, !dbg !5411
  %125 = load i32, i32* %xdelta135, align 8, !dbg !5411
  %conv136 = zext i32 %125 to i64, !dbg !5410
  %cmp137 = icmp ne i64 %add134, %conv136, !dbg !5412
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !5413

if.then139:                                       ; preds = %if.end131
  store i32 0, i32* %axmax, align 4, !dbg !5414
  br label %if.end140, !dbg !5415

if.end140:                                        ; preds = %if.then139, %if.end131
  %126 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5416
  %xsize141 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %126, i32 0, i32 7, !dbg !5417
  %127 = load i32, i32* %xsize141, align 4, !dbg !5417
  %128 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5418
  %current_channel_offset = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %128, i32 0, i32 25, !dbg !5419
  %129 = load i32, i32* %current_channel_offset, align 4, !dbg !5419
  %mul142 = mul nsw i32 %127, %129, !dbg !5420
  %130 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5421
  %channel_line_size = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %130, i32 0, i32 8, !dbg !5422
  store i32 %mul142, i32* %channel_line_size, align 8, !dbg !5423
  %131 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5424
  %channel_line_size143 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %131, i32 0, i32 8, !dbg !5425
  %132 = load i32, i32* %channel_line_size143, align 8, !dbg !5425
  %conv144 = sext i32 %132 to i64, !dbg !5424
  %133 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5426
  %ysize145 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %133, i32 0, i32 6, !dbg !5427
  %134 = load i32, i32* %ysize145, align 8, !dbg !5427
  %conv146 = sext i32 %134 to i64, !dbg !5428
  %mul147 = mul i64 %conv144, %conv146, !dbg !5429
  store i64 %mul147, i64* %uncompressed_size, align 8, !dbg !5430
  br label %if.end241, !dbg !5431

if.else:                                          ; preds = %entry
  %135 = load i32, i32* %buf_size, align 4, !dbg !5432
  %cmp148 = icmp slt i32 %135, 8, !dbg !5435
  br i1 %cmp148, label %if.then155, label %lor.lhs.false150, !dbg !5436

lor.lhs.false150:                                 ; preds = %if.else
  %136 = load i64, i64* %line_offset, align 8, !dbg !5437
  %137 = load i32, i32* %buf_size, align 4, !dbg !5439
  %sub151 = sub nsw i32 %137, 8, !dbg !5440
  %conv152 = sext i32 %sub151 to i64, !dbg !5439
  %cmp153 = icmp ugt i64 %136, %conv152, !dbg !5441
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !5442

if.then155:                                       ; preds = %lor.lhs.false150, %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !5443
  br label %return, !dbg !5443

if.end156:                                        ; preds = %lor.lhs.false150
  %138 = load i8*, i8** %buf, align 8, !dbg !5444
  %139 = load i64, i64* %line_offset, align 8, !dbg !5445
  %add.ptr157 = getelementptr inbounds i8, i8* %138, i64 %139, !dbg !5446
  %add.ptr158 = getelementptr inbounds i8, i8* %add.ptr157, i64 8, !dbg !5447
  store i8* %add.ptr158, i8** %src, align 8, !dbg !5448
  %140 = load i8*, i8** %src, align 8, !dbg !5449
  %add.ptr159 = getelementptr inbounds i8, i8* %140, i64 -8, !dbg !5450
  %141 = bitcast i8* %add.ptr159 to %union.unaligned_32*, !dbg !5451
  %l160 = bitcast %union.unaligned_32* %141 to i32*, !dbg !5451
  %142 = load i32, i32* %l160, align 1, !dbg !5451
  %conv161 = zext i32 %142 to i64, !dbg !5452
  store i64 %conv161, i64* %line, align 8, !dbg !5453
  %143 = load i64, i64* %line, align 8, !dbg !5454
  %144 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5456
  %ymin162 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %144, i32 0, i32 13, !dbg !5457
  %145 = load i32, i32* %ymin162, align 4, !dbg !5457
  %conv163 = zext i32 %145 to i64, !dbg !5456
  %cmp164 = icmp ult i64 %143, %conv163, !dbg !5458
  br i1 %cmp164, label %if.then171, label %lor.lhs.false166, !dbg !5459

lor.lhs.false166:                                 ; preds = %if.end156
  %146 = load i64, i64* %line, align 8, !dbg !5460
  %147 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5462
  %ymax167 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %147, i32 0, i32 12, !dbg !5463
  %148 = load i32, i32* %ymax167, align 8, !dbg !5463
  %conv168 = zext i32 %148 to i64, !dbg !5462
  %cmp169 = icmp ugt i64 %146, %conv168, !dbg !5464
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !5465

if.then171:                                       ; preds = %lor.lhs.false166, %if.end156
  store i32 -1094995529, i32* %retval, align 4, !dbg !5466
  br label %return, !dbg !5466

if.end172:                                        ; preds = %lor.lhs.false166
  %149 = load i8*, i8** %src, align 8, !dbg !5467
  %add.ptr173 = getelementptr inbounds i8, i8* %149, i64 -4, !dbg !5468
  %150 = bitcast i8* %add.ptr173 to %union.unaligned_32*, !dbg !5469
  %l174 = bitcast %union.unaligned_32* %150 to i32*, !dbg !5469
  %151 = load i32, i32* %l174, align 1, !dbg !5469
  store i32 %151, i32* %data_size, align 4, !dbg !5470
  %152 = load i32, i32* %data_size, align 4, !dbg !5471
  %cmp175 = icmp ule i32 %152, 0, !dbg !5473
  br i1 %cmp175, label %if.then184, label %lor.lhs.false177, !dbg !5474

lor.lhs.false177:                                 ; preds = %if.end172
  %153 = load i32, i32* %data_size, align 4, !dbg !5475
  %conv178 = zext i32 %153 to i64, !dbg !5475
  %154 = load i32, i32* %buf_size, align 4, !dbg !5477
  %conv179 = sext i32 %154 to i64, !dbg !5477
  %155 = load i64, i64* %line_offset, align 8, !dbg !5478
  %sub180 = sub i64 %conv179, %155, !dbg !5479
  %sub181 = sub i64 %sub180, 8, !dbg !5480
  %cmp182 = icmp ugt i64 %conv178, %sub181, !dbg !5481
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !5482

if.then184:                                       ; preds = %lor.lhs.false177, %if.end172
  store i32 -1094995529, i32* %retval, align 4, !dbg !5483
  br label %return, !dbg !5483

if.end185:                                        ; preds = %lor.lhs.false177
  %156 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5484
  %scan_lines_per_block = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %156, i32 0, i32 16, !dbg !5485
  %157 = load i32, i32* %scan_lines_per_block, align 8, !dbg !5485
  %conv186 = sext i32 %157 to i64, !dbg !5486
  %158 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5487
  %ymax187 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %158, i32 0, i32 12, !dbg !5488
  %159 = load i32, i32* %ymax187, align 8, !dbg !5488
  %conv188 = zext i32 %159 to i64, !dbg !5487
  %160 = load i64, i64* %line, align 8, !dbg !5489
  %sub189 = sub i64 %conv188, %160, !dbg !5490
  %add190 = add i64 %sub189, 1, !dbg !5491
  %cmp191 = icmp ugt i64 %conv186, %add190, !dbg !5492
  br i1 %cmp191, label %cond.true193, label %cond.false198, !dbg !5486

cond.true193:                                     ; preds = %if.end185
  %161 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5493
  %ymax194 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %161, i32 0, i32 12, !dbg !5495
  %162 = load i32, i32* %ymax194, align 8, !dbg !5495
  %conv195 = zext i32 %162 to i64, !dbg !5493
  %163 = load i64, i64* %line, align 8, !dbg !5496
  %sub196 = sub i64 %conv195, %163, !dbg !5497
  %add197 = add i64 %sub196, 1, !dbg !5498
  br label %cond.end201, !dbg !5499

cond.false198:                                    ; preds = %if.end185
  %164 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5500
  %scan_lines_per_block199 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %164, i32 0, i32 16, !dbg !5502
  %165 = load i32, i32* %scan_lines_per_block199, align 8, !dbg !5502
  %conv200 = sext i32 %165 to i64, !dbg !5503
  br label %cond.end201, !dbg !5504

cond.end201:                                      ; preds = %cond.false198, %cond.true193
  %cond202 = phi i64 [ %add197, %cond.true193 ], [ %conv200, %cond.false198 ], !dbg !5505
  %conv203 = trunc i64 %cond202 to i32, !dbg !5507
  %166 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5508
  %ysize204 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %166, i32 0, i32 6, !dbg !5509
  store i32 %conv203, i32* %ysize204, align 8, !dbg !5510
  %167 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5511
  %xdelta205 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %167, i32 0, i32 14, !dbg !5512
  %168 = load i32, i32* %xdelta205, align 8, !dbg !5512
  %169 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5513
  %xsize206 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %169, i32 0, i32 7, !dbg !5514
  store i32 %168, i32* %xsize206, align 4, !dbg !5515
  %170 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5516
  %xsize207 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %170, i32 0, i32 7, !dbg !5517
  %171 = load i32, i32* %xsize207, align 4, !dbg !5517
  %172 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5518
  %current_channel_offset208 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %172, i32 0, i32 25, !dbg !5519
  %173 = load i32, i32* %current_channel_offset208, align 4, !dbg !5519
  %mul209 = mul nsw i32 %171, %173, !dbg !5520
  %174 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5521
  %channel_line_size210 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %174, i32 0, i32 8, !dbg !5522
  store i32 %mul209, i32* %channel_line_size210, align 8, !dbg !5523
  %175 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5524
  %channel_line_size211 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %175, i32 0, i32 8, !dbg !5525
  %176 = load i32, i32* %channel_line_size211, align 8, !dbg !5525
  %conv212 = sext i32 %176 to i64, !dbg !5524
  %177 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5526
  %ysize213 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %177, i32 0, i32 6, !dbg !5527
  %178 = load i32, i32* %ysize213, align 8, !dbg !5527
  %conv214 = sext i32 %178 to i64, !dbg !5528
  %mul215 = mul i64 %conv212, %conv214, !dbg !5529
  store i64 %mul215, i64* %uncompressed_size, align 8, !dbg !5530
  %179 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5531
  %compression = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %179, i32 0, i32 4, !dbg !5533
  %180 = load i32, i32* %compression, align 8, !dbg !5533
  %cmp216 = icmp eq i32 %180, 0, !dbg !5534
  br i1 %cmp216, label %land.lhs.true, label %lor.lhs.false226, !dbg !5535

land.lhs.true:                                    ; preds = %cond.end201
  %181 = load i32, i32* %data_size, align 4, !dbg !5536
  %conv218 = zext i32 %181 to i64, !dbg !5536
  %182 = load i64, i64* %uncompressed_size, align 8, !dbg !5538
  %cmp219 = icmp ne i64 %conv218, %182, !dbg !5539
  br i1 %cmp219, label %if.then239, label %lor.lhs.false221, !dbg !5540

lor.lhs.false221:                                 ; preds = %land.lhs.true
  %183 = load i64, i64* %line_offset, align 8, !dbg !5541
  %184 = load i32, i32* %buf_size, align 4, !dbg !5542
  %conv222 = sext i32 %184 to i64, !dbg !5542
  %185 = load i64, i64* %uncompressed_size, align 8, !dbg !5543
  %sub223 = sub i64 %conv222, %185, !dbg !5544
  %cmp224 = icmp ugt i64 %183, %sub223, !dbg !5545
  br i1 %cmp224, label %if.then239, label %lor.lhs.false226, !dbg !5546

lor.lhs.false226:                                 ; preds = %lor.lhs.false221, %cond.end201
  %186 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5547
  %compression227 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %186, i32 0, i32 4, !dbg !5548
  %187 = load i32, i32* %compression227, align 8, !dbg !5548
  %cmp228 = icmp ne i32 %187, 0, !dbg !5549
  br i1 %cmp228, label %land.lhs.true230, label %if.end240, !dbg !5550

land.lhs.true230:                                 ; preds = %lor.lhs.false226
  %188 = load i32, i32* %data_size, align 4, !dbg !5551
  %conv231 = zext i32 %188 to i64, !dbg !5551
  %189 = load i64, i64* %uncompressed_size, align 8, !dbg !5552
  %cmp232 = icmp ugt i64 %conv231, %189, !dbg !5553
  br i1 %cmp232, label %if.then239, label %lor.lhs.false234, !dbg !5554

lor.lhs.false234:                                 ; preds = %land.lhs.true230
  %190 = load i64, i64* %line_offset, align 8, !dbg !5555
  %191 = load i32, i32* %buf_size, align 4, !dbg !5556
  %192 = load i32, i32* %data_size, align 4, !dbg !5557
  %sub235 = sub i32 %191, %192, !dbg !5558
  %conv236 = zext i32 %sub235 to i64, !dbg !5556
  %cmp237 = icmp ugt i64 %190, %conv236, !dbg !5559
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !5560

if.then239:                                       ; preds = %lor.lhs.false234, %land.lhs.true230, %lor.lhs.false221, %land.lhs.true
  store i32 -1094995529, i32* %retval, align 4, !dbg !5561
  br label %return, !dbg !5561

if.end240:                                        ; preds = %lor.lhs.false234, %lor.lhs.false226
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.end140
  %193 = load i32, i32* %data_size, align 4, !dbg !5563
  %conv242 = zext i32 %193 to i64, !dbg !5563
  %194 = load i64, i64* %uncompressed_size, align 8, !dbg !5565
  %cmp243 = icmp ult i64 %conv242, %194, !dbg !5566
  br i1 %cmp243, label %if.then248, label %lor.lhs.false245, !dbg !5567

lor.lhs.false245:                                 ; preds = %if.end241
  %195 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5568
  %is_tile246 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %195, i32 0, i32 18, !dbg !5570
  %196 = load i32, i32* %is_tile246, align 4, !dbg !5570
  %tobool247 = icmp ne i32 %196, 0, !dbg !5568
  br i1 %tobool247, label %if.then248, label %if.end253, !dbg !5571

if.then248:                                       ; preds = %lor.lhs.false245, %if.end241
  %197 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5572
  %tmp = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %197, i32 0, i32 2, !dbg !5574
  %198 = bitcast i8** %tmp to i8*, !dbg !5575
  %199 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5576
  %tmp_size = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %199, i32 0, i32 3, !dbg !5577
  %200 = load i64, i64* %uncompressed_size, align 8, !dbg !5578
  call void @av_fast_padded_malloc(i8* %198, i32* %tmp_size, i64 %200), !dbg !5579
  %201 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5580
  %tmp249 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %201, i32 0, i32 2, !dbg !5582
  %202 = load i8*, i8** %tmp249, align 8, !dbg !5582
  %tobool250 = icmp ne i8* %202, null, !dbg !5580
  br i1 %tobool250, label %if.end252, label %if.then251, !dbg !5583

if.then251:                                       ; preds = %if.then248
  store i32 -12, i32* %retval, align 4, !dbg !5584
  br label %return, !dbg !5584

if.end252:                                        ; preds = %if.then248
  br label %if.end253, !dbg !5585

if.end253:                                        ; preds = %if.end252, %lor.lhs.false245
  %203 = load i32, i32* %data_size, align 4, !dbg !5586
  %conv254 = zext i32 %203 to i64, !dbg !5586
  %204 = load i64, i64* %uncompressed_size, align 8, !dbg !5588
  %cmp255 = icmp ult i64 %conv254, %204, !dbg !5589
  br i1 %cmp255, label %if.then257, label %if.end284, !dbg !5590

if.then257:                                       ; preds = %if.end253
  %205 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5591
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %205, i32 0, i32 0, !dbg !5593
  %206 = bitcast i8** %uncompressed_data to i8*, !dbg !5594
  %207 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5595
  %uncompressed_size258 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %207, i32 0, i32 1, !dbg !5596
  %208 = load i64, i64* %uncompressed_size, align 8, !dbg !5597
  %add259 = add i64 %208, 64, !dbg !5598
  call void @av_fast_padded_malloc(i8* %206, i32* %uncompressed_size258, i64 %add259), !dbg !5599
  %209 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5600
  %uncompressed_data260 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %209, i32 0, i32 0, !dbg !5602
  %210 = load i8*, i8** %uncompressed_data260, align 8, !dbg !5602
  %tobool261 = icmp ne i8* %210, null, !dbg !5600
  br i1 %tobool261, label %if.end263, label %if.then262, !dbg !5603

if.then262:                                       ; preds = %if.then257
  store i32 -12, i32* %retval, align 4, !dbg !5604
  br label %return, !dbg !5604

if.end263:                                        ; preds = %if.then257
  store i32 -1094995529, i32* %ret, align 4, !dbg !5605
  %211 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5606
  %compression264 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %211, i32 0, i32 4, !dbg !5607
  %212 = load i32, i32* %compression264, align 8, !dbg !5607
  switch i32 %212, label %sw.epilog [
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb267
    i32 5, label %sw.bb270
    i32 1, label %sw.bb273
    i32 6, label %sw.bb276
    i32 7, label %sw.bb276
  ], !dbg !5608

sw.bb:                                            ; preds = %if.end263, %if.end263
  %213 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5609
  %214 = load i8*, i8** %src, align 8, !dbg !5611
  %215 = load i32, i32* %data_size, align 4, !dbg !5612
  %216 = load i64, i64* %uncompressed_size, align 8, !dbg !5613
  %conv265 = trunc i64 %216 to i32, !dbg !5613
  %217 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5614
  %call266 = call i32 @zip_uncompress(%struct.EXRContext* %213, i8* %214, i32 %215, i32 %conv265, %struct.EXRThreadData* %217), !dbg !5615
  store i32 %call266, i32* %ret, align 4, !dbg !5616
  br label %sw.epilog, !dbg !5617

sw.bb267:                                         ; preds = %if.end263
  %218 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5618
  %219 = load i8*, i8** %src, align 8, !dbg !5619
  %220 = load i32, i32* %data_size, align 4, !dbg !5620
  %221 = load i64, i64* %uncompressed_size, align 8, !dbg !5621
  %conv268 = trunc i64 %221 to i32, !dbg !5621
  %222 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5622
  %call269 = call i32 @piz_uncompress(%struct.EXRContext* %218, i8* %219, i32 %220, i32 %conv268, %struct.EXRThreadData* %222), !dbg !5623
  store i32 %call269, i32* %ret, align 4, !dbg !5624
  br label %sw.epilog, !dbg !5625

sw.bb270:                                         ; preds = %if.end263
  %223 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5626
  %224 = load i8*, i8** %src, align 8, !dbg !5627
  %225 = load i32, i32* %data_size, align 4, !dbg !5628
  %226 = load i64, i64* %uncompressed_size, align 8, !dbg !5629
  %conv271 = trunc i64 %226 to i32, !dbg !5629
  %227 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5630
  %call272 = call i32 @pxr24_uncompress(%struct.EXRContext* %223, i8* %224, i32 %225, i32 %conv271, %struct.EXRThreadData* %227), !dbg !5631
  store i32 %call272, i32* %ret, align 4, !dbg !5632
  br label %sw.epilog, !dbg !5633

sw.bb273:                                         ; preds = %if.end263
  %228 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5634
  %229 = load i8*, i8** %src, align 8, !dbg !5635
  %230 = load i32, i32* %data_size, align 4, !dbg !5636
  %231 = load i64, i64* %uncompressed_size, align 8, !dbg !5637
  %conv274 = trunc i64 %231 to i32, !dbg !5637
  %232 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5638
  %call275 = call i32 @rle_uncompress(%struct.EXRContext* %228, i8* %229, i32 %230, i32 %conv274, %struct.EXRThreadData* %232), !dbg !5639
  store i32 %call275, i32* %ret, align 4, !dbg !5640
  br label %sw.epilog, !dbg !5641

sw.bb276:                                         ; preds = %if.end263, %if.end263
  %233 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5642
  %234 = load i8*, i8** %src, align 8, !dbg !5643
  %235 = load i32, i32* %data_size, align 4, !dbg !5644
  %236 = load i64, i64* %uncompressed_size, align 8, !dbg !5645
  %conv277 = trunc i64 %236 to i32, !dbg !5645
  %237 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5646
  %call278 = call i32 @b44_uncompress(%struct.EXRContext* %233, i8* %234, i32 %235, i32 %conv277, %struct.EXRThreadData* %237), !dbg !5647
  store i32 %call278, i32* %ret, align 4, !dbg !5648
  br label %sw.epilog, !dbg !5649

sw.epilog:                                        ; preds = %if.end263, %sw.bb276, %sw.bb273, %sw.bb270, %sw.bb267, %sw.bb
  %238 = load i32, i32* %ret, align 4, !dbg !5650
  %cmp279 = icmp slt i32 %238, 0, !dbg !5652
  br i1 %cmp279, label %if.then281, label %if.end282, !dbg !5653

if.then281:                                       ; preds = %sw.epilog
  %239 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5654
  %240 = bitcast %struct.AVCodecContext* %239 to i8*, !dbg !5654
  call void (i8*, i32, i8*, ...) @av_log(i8* %240, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.101, i32 0, i32 0)), !dbg !5656
  %241 = load i32, i32* %ret, align 4, !dbg !5657
  store i32 %241, i32* %retval, align 4, !dbg !5658
  br label %return, !dbg !5658

if.end282:                                        ; preds = %sw.epilog
  %242 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5659
  %uncompressed_data283 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %242, i32 0, i32 0, !dbg !5660
  %243 = load i8*, i8** %uncompressed_data283, align 8, !dbg !5660
  store i8* %243, i8** %src, align 8, !dbg !5661
  br label %if.end284, !dbg !5662

if.end284:                                        ; preds = %if.end282, %if.end253
  %244 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5663
  %is_luma = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %244, i32 0, i32 19, !dbg !5665
  %245 = load i32, i32* %is_luma, align 8, !dbg !5665
  %tobool285 = icmp ne i32 %245, 0, !dbg !5663
  br i1 %tobool285, label %if.else307, label %if.then286, !dbg !5666

if.then286:                                       ; preds = %if.end284
  %246 = load i8*, i8** %src, align 8, !dbg !5667
  %247 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5669
  %xsize287 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %247, i32 0, i32 7, !dbg !5670
  %248 = load i32, i32* %xsize287, align 4, !dbg !5670
  %249 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5671
  %channel_offsets = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %249, i32 0, i32 6, !dbg !5672
  %arrayidx288 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets, i64 0, i64 0, !dbg !5671
  %250 = load i32, i32* %arrayidx288, align 8, !dbg !5671
  %mul289 = mul nsw i32 %248, %250, !dbg !5673
  %idx.ext290 = sext i32 %mul289 to i64, !dbg !5674
  %add.ptr291 = getelementptr inbounds i8, i8* %246, i64 %idx.ext290, !dbg !5674
  %arrayidx292 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 0, !dbg !5675
  store i8* %add.ptr291, i8** %arrayidx292, align 16, !dbg !5676
  %251 = load i8*, i8** %src, align 8, !dbg !5677
  %252 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5678
  %xsize293 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %252, i32 0, i32 7, !dbg !5679
  %253 = load i32, i32* %xsize293, align 4, !dbg !5679
  %254 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5680
  %channel_offsets294 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %254, i32 0, i32 6, !dbg !5681
  %arrayidx295 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets294, i64 0, i64 1, !dbg !5680
  %255 = load i32, i32* %arrayidx295, align 4, !dbg !5680
  %mul296 = mul nsw i32 %253, %255, !dbg !5682
  %idx.ext297 = sext i32 %mul296 to i64, !dbg !5683
  %add.ptr298 = getelementptr inbounds i8, i8* %251, i64 %idx.ext297, !dbg !5683
  %arrayidx299 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 1, !dbg !5684
  store i8* %add.ptr298, i8** %arrayidx299, align 8, !dbg !5685
  %256 = load i8*, i8** %src, align 8, !dbg !5686
  %257 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5687
  %xsize300 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %257, i32 0, i32 7, !dbg !5688
  %258 = load i32, i32* %xsize300, align 4, !dbg !5688
  %259 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5689
  %channel_offsets301 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %259, i32 0, i32 6, !dbg !5690
  %arrayidx302 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets301, i64 0, i64 2, !dbg !5689
  %260 = load i32, i32* %arrayidx302, align 8, !dbg !5689
  %mul303 = mul nsw i32 %258, %260, !dbg !5691
  %idx.ext304 = sext i32 %mul303 to i64, !dbg !5692
  %add.ptr305 = getelementptr inbounds i8, i8* %256, i64 %idx.ext304, !dbg !5692
  %arrayidx306 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 2, !dbg !5693
  store i8* %add.ptr305, i8** %arrayidx306, align 16, !dbg !5694
  store i32 3, i32* %rgb_channel_count, align 4, !dbg !5695
  br label %if.end315, !dbg !5696

if.else307:                                       ; preds = %if.end284
  %261 = load i8*, i8** %src, align 8, !dbg !5697
  %262 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5699
  %xsize308 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %262, i32 0, i32 7, !dbg !5700
  %263 = load i32, i32* %xsize308, align 4, !dbg !5700
  %264 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5701
  %channel_offsets309 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %264, i32 0, i32 6, !dbg !5702
  %arrayidx310 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets309, i64 0, i64 1, !dbg !5701
  %265 = load i32, i32* %arrayidx310, align 4, !dbg !5701
  %mul311 = mul nsw i32 %263, %265, !dbg !5703
  %idx.ext312 = sext i32 %mul311 to i64, !dbg !5704
  %add.ptr313 = getelementptr inbounds i8, i8* %261, i64 %idx.ext312, !dbg !5704
  %arrayidx314 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 0, !dbg !5705
  store i8* %add.ptr313, i8** %arrayidx314, align 16, !dbg !5706
  store i32 1, i32* %rgb_channel_count, align 4, !dbg !5707
  br label %if.end315

if.end315:                                        ; preds = %if.else307, %if.then286
  %266 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5708
  %channel_offsets316 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %266, i32 0, i32 6, !dbg !5710
  %arrayidx317 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets316, i64 0, i64 3, !dbg !5708
  %267 = load i32, i32* %arrayidx317, align 4, !dbg !5708
  %cmp318 = icmp sge i32 %267, 0, !dbg !5711
  br i1 %cmp318, label %if.then320, label %if.end328, !dbg !5712

if.then320:                                       ; preds = %if.end315
  %268 = load i8*, i8** %src, align 8, !dbg !5713
  %269 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5714
  %xsize321 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %269, i32 0, i32 7, !dbg !5715
  %270 = load i32, i32* %xsize321, align 4, !dbg !5715
  %271 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5716
  %channel_offsets322 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %271, i32 0, i32 6, !dbg !5717
  %arrayidx323 = getelementptr inbounds [4 x i32], [4 x i32]* %channel_offsets322, i64 0, i64 3, !dbg !5716
  %272 = load i32, i32* %arrayidx323, align 4, !dbg !5716
  %mul324 = mul nsw i32 %270, %272, !dbg !5718
  %idx.ext325 = sext i32 %mul324 to i64, !dbg !5719
  %add.ptr326 = getelementptr inbounds i8, i8* %268, i64 %idx.ext325, !dbg !5719
  %arrayidx327 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !5720
  store i8* %add.ptr326, i8** %arrayidx327, align 8, !dbg !5721
  br label %if.end328, !dbg !5720

if.end328:                                        ; preds = %if.then320, %if.end315
  %273 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5722
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %273, i32 0, i32 0, !dbg !5723
  %arrayidx329 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5722
  %274 = load i8*, i8** %arrayidx329, align 8, !dbg !5722
  %275 = load i64, i64* %line, align 8, !dbg !5724
  %276 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5725
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %276, i32 0, i32 1, !dbg !5726
  %arrayidx330 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !5725
  %277 = load i32, i32* %arrayidx330, align 8, !dbg !5725
  %conv331 = sext i32 %277 to i64, !dbg !5725
  %mul332 = mul i64 %275, %conv331, !dbg !5727
  %add.ptr333 = getelementptr inbounds i8, i8* %274, i64 %mul332, !dbg !5728
  %278 = load i64, i64* %col, align 8, !dbg !5729
  %279 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5730
  %desc334 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %279, i32 0, i32 7, !dbg !5731
  %280 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc334, align 8, !dbg !5731
  %nb_components335 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %280, i32 0, i32 1, !dbg !5732
  %281 = load i8, i8* %nb_components335, align 8, !dbg !5732
  %conv336 = zext i8 %281 to i64, !dbg !5730
  %mul337 = mul i64 %278, %conv336, !dbg !5733
  %mul338 = mul i64 %mul337, 2, !dbg !5734
  %add.ptr339 = getelementptr inbounds i8, i8* %add.ptr333, i64 %mul338, !dbg !5735
  store i8* %add.ptr339, i8** %ptr, align 8, !dbg !5736
  store i32 0, i32* %i, align 4, !dbg !5737
  br label %for.cond, !dbg !5738

for.cond:                                         ; preds = %for.inc540, %if.end328
  %282 = load i32, i32* %i, align 4, !dbg !5739
  %283 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5740
  %ysize340 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %283, i32 0, i32 6, !dbg !5741
  %284 = load i32, i32* %ysize340, align 8, !dbg !5741
  %cmp341 = icmp slt i32 %282, %284, !dbg !5742
  br i1 %cmp341, label %for.body, label %for.end546, !dbg !5743

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %a, metadata !5745, metadata !1741), !dbg !5746
  call void @llvm.dbg.declare(metadata [3 x i8*]* %rgb, metadata !5747, metadata !1741), !dbg !5751
  store i32 0, i32* %c, align 4, !dbg !5752
  br label %for.cond345, !dbg !5754

for.cond345:                                      ; preds = %for.inc, %for.body
  %285 = load i32, i32* %c, align 4, !dbg !5755
  %286 = load i32, i32* %rgb_channel_count, align 4, !dbg !5758
  %cmp346 = icmp slt i32 %285, %286, !dbg !5759
  br i1 %cmp346, label %for.body348, label %for.end, !dbg !5760

for.body348:                                      ; preds = %for.cond345
  %287 = load i32, i32* %c, align 4, !dbg !5761
  %idxprom349 = sext i32 %287 to i64, !dbg !5763
  %arrayidx350 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 %idxprom349, !dbg !5763
  %288 = load i8*, i8** %arrayidx350, align 8, !dbg !5763
  %289 = load i32, i32* %c, align 4, !dbg !5764
  %idxprom351 = sext i32 %289 to i64, !dbg !5765
  %arrayidx352 = getelementptr inbounds [3 x i8*], [3 x i8*]* %rgb, i64 0, i64 %idxprom351, !dbg !5765
  store i8* %288, i8** %arrayidx352, align 8, !dbg !5766
  br label %for.inc, !dbg !5767

for.inc:                                          ; preds = %for.body348
  %290 = load i32, i32* %c, align 4, !dbg !5768
  %inc = add nsw i32 %290, 1, !dbg !5768
  store i32 %inc, i32* %c, align 4, !dbg !5768
  br label %for.cond345, !dbg !5770, !llvm.loop !5771

for.end:                                          ; preds = %for.cond345
  %arrayidx353 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !5773
  %291 = load i8*, i8** %arrayidx353, align 8, !dbg !5773
  %tobool354 = icmp ne i8* %291, null, !dbg !5773
  br i1 %tobool354, label %if.then355, label %if.end357, !dbg !5775

if.then355:                                       ; preds = %for.end
  %arrayidx356 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !5776
  %292 = load i8*, i8** %arrayidx356, align 8, !dbg !5776
  store i8* %292, i8** %a, align 8, !dbg !5777
  br label %if.end357, !dbg !5778

if.end357:                                        ; preds = %if.then355, %for.end
  %293 = load i8*, i8** %ptr, align 8, !dbg !5779
  %294 = bitcast i8* %293 to i16*, !dbg !5780
  store i16* %294, i16** %ptr_x, align 8, !dbg !5781
  %295 = load i16*, i16** %ptr_x, align 8, !dbg !5782
  %296 = bitcast i16* %295 to i8*, !dbg !5783
  %297 = load i32, i32* %bxmin, align 4, !dbg !5784
  %conv358 = sext i32 %297 to i64, !dbg !5784
  call void @llvm.memset.p0i8.i64(i8* %296, i8 0, i64 %conv358, i32 2, i1 false), !dbg !5783
  %298 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5785
  %xmin359 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %298, i32 0, i32 11, !dbg !5786
  %299 = load i32, i32* %xmin359, align 4, !dbg !5786
  %300 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5787
  %desc360 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %300, i32 0, i32 7, !dbg !5788
  %301 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc360, align 8, !dbg !5788
  %nb_components361 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %301, i32 0, i32 1, !dbg !5789
  %302 = load i8, i8* %nb_components361, align 8, !dbg !5789
  %conv362 = zext i8 %302 to i32, !dbg !5787
  %mul363 = mul i32 %299, %conv362, !dbg !5790
  %303 = load i16*, i16** %ptr_x, align 8, !dbg !5791
  %idx.ext364 = zext i32 %mul363 to i64, !dbg !5791
  %add.ptr365 = getelementptr inbounds i16, i16* %303, i64 %idx.ext364, !dbg !5791
  store i16* %add.ptr365, i16** %ptr_x, align 8, !dbg !5791
  %304 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5792
  %pixel_type = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %304, i32 0, i32 5, !dbg !5793
  %305 = load i32, i32* %pixel_type, align 4, !dbg !5793
  %cmp366 = icmp eq i32 %305, 2, !dbg !5794
  br i1 %cmp366, label %if.then368, label %if.else447, !dbg !5795

if.then368:                                       ; preds = %if.end357
  %306 = load double (double)*, double (double)** %trc_func, align 8, !dbg !5796
  %tobool369 = icmp ne double (double)* %306, null, !dbg !5796
  br i1 %tobool369, label %if.then370, label %if.else404, !dbg !5797

if.then370:                                       ; preds = %if.then368
  store i32 0, i32* %x, align 4, !dbg !5798
  br label %for.cond371, !dbg !5799

for.cond371:                                      ; preds = %for.inc401, %if.then370
  %307 = load i32, i32* %x, align 4, !dbg !5800
  %308 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5802
  %xsize372 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %308, i32 0, i32 7, !dbg !5803
  %309 = load i32, i32* %xsize372, align 4, !dbg !5803
  %cmp373 = icmp slt i32 %307, %309, !dbg !5804
  br i1 %cmp373, label %for.body375, label %for.end403, !dbg !5805

for.body375:                                      ; preds = %for.cond371
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %t, metadata !5806, metadata !1741), !dbg !5807
  store i32 0, i32* %c, align 4, !dbg !5808
  br label %for.cond377, !dbg !5809

for.cond377:                                      ; preds = %for.inc391, %for.body375
  %310 = load i32, i32* %c, align 4, !dbg !5810
  %311 = load i32, i32* %rgb_channel_count, align 4, !dbg !5812
  %cmp378 = icmp slt i32 %310, %311, !dbg !5813
  br i1 %cmp378, label %for.body380, label %for.end393, !dbg !5814

for.body380:                                      ; preds = %for.cond377
  %312 = load i32, i32* %c, align 4, !dbg !5815
  %idxprom381 = sext i32 %312 to i64, !dbg !5816
  %arrayidx382 = getelementptr inbounds [3 x i8*], [3 x i8*]* %rgb, i64 0, i64 %idxprom381, !dbg !5816
  store i8** %arrayidx382, i8*** %b.addr.i, align 8, !dbg !5817
  %313 = load i8**, i8*** %b.addr.i, align 8, !dbg !5818
  %314 = load i8*, i8** %313, align 8, !dbg !5819
  %add.ptr.i = getelementptr inbounds i8, i8* %314, i64 4, !dbg !5819
  store i8* %add.ptr.i, i8** %313, align 8, !dbg !5819
  %315 = load i8**, i8*** %b.addr.i, align 8, !dbg !5820
  %316 = load i8*, i8** %315, align 8, !dbg !5821
  %add.ptr1.i = getelementptr inbounds i8, i8* %316, i64 -4, !dbg !5822
  %317 = bitcast i8* %add.ptr1.i to %union.unaligned_32*, !dbg !5823
  %l.i = bitcast %union.unaligned_32* %317 to i32*, !dbg !5823
  %318 = load i32, i32* %l.i, align 1, !dbg !5823
  %i384 = bitcast %union.av_intfloat32* %t to i32*, !dbg !5824
  store i32 %318, i32* %i384, align 4, !dbg !5825
  %319 = load double (double)*, double (double)** %trc_func, align 8, !dbg !5826
  %f = bitcast %union.av_intfloat32* %t to float*, !dbg !5827
  %320 = load float, float* %f, align 4, !dbg !5827
  %conv385 = fpext float %320 to double, !dbg !5828
  %call386 = call double %319(double %conv385), !dbg !5826
  %conv387 = fptrunc double %call386 to float, !dbg !5826
  %f388 = bitcast %union.av_intfloat32* %t to float*, !dbg !5829
  store float %conv387, float* %f388, align 4, !dbg !5830
  %i389 = bitcast %union.av_intfloat32* %t to i32*, !dbg !5831
  %321 = load i32, i32* %i389, align 4, !dbg !5831
  %call390 = call zeroext i16 @exr_flt2uint(i32 %321), !dbg !5832
  %322 = load i16*, i16** %ptr_x, align 8, !dbg !5833
  %incdec.ptr = getelementptr inbounds i16, i16* %322, i32 1, !dbg !5833
  store i16* %incdec.ptr, i16** %ptr_x, align 8, !dbg !5833
  store i16 %call390, i16* %322, align 2, !dbg !5834
  br label %for.inc391, !dbg !5835

for.inc391:                                       ; preds = %for.body380
  %323 = load i32, i32* %c, align 4, !dbg !5836
  %inc392 = add nsw i32 %323, 1, !dbg !5836
  store i32 %inc392, i32* %c, align 4, !dbg !5836
  br label %for.cond377, !dbg !5838, !llvm.loop !5839

for.end393:                                       ; preds = %for.cond377
  %arrayidx394 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !5841
  %324 = load i8*, i8** %arrayidx394, align 8, !dbg !5841
  %tobool395 = icmp ne i8* %324, null, !dbg !5841
  br i1 %tobool395, label %if.then396, label %if.end400, !dbg !5842

if.then396:                                       ; preds = %for.end393
  store i8** %a, i8*** %b.addr.i555, align 8, !dbg !5843
  %325 = load i8**, i8*** %b.addr.i555, align 8, !dbg !5844
  %326 = load i8*, i8** %325, align 8, !dbg !5845
  %add.ptr.i556 = getelementptr inbounds i8, i8* %326, i64 4, !dbg !5845
  store i8* %add.ptr.i556, i8** %325, align 8, !dbg !5845
  %327 = load i8**, i8*** %b.addr.i555, align 8, !dbg !5846
  %328 = load i8*, i8** %327, align 8, !dbg !5847
  %add.ptr1.i557 = getelementptr inbounds i8, i8* %328, i64 -4, !dbg !5848
  %329 = bitcast i8* %add.ptr1.i557 to %union.unaligned_32*, !dbg !5849
  %l.i558 = bitcast %union.unaligned_32* %329 to i32*, !dbg !5849
  %330 = load i32, i32* %l.i558, align 1, !dbg !5849
  %call398 = call zeroext i16 @exr_flt2uint(i32 %330), !dbg !5850
  %331 = load i16*, i16** %ptr_x, align 8, !dbg !5852
  %incdec.ptr399 = getelementptr inbounds i16, i16* %331, i32 1, !dbg !5852
  store i16* %incdec.ptr399, i16** %ptr_x, align 8, !dbg !5852
  store i16 %call398, i16* %331, align 2, !dbg !5853
  br label %if.end400, !dbg !5854

if.end400:                                        ; preds = %if.then396, %for.end393
  br label %for.inc401, !dbg !5855

for.inc401:                                       ; preds = %if.end400
  %332 = load i32, i32* %x, align 4, !dbg !5856
  %inc402 = add nsw i32 %332, 1, !dbg !5856
  store i32 %inc402, i32* %x, align 4, !dbg !5856
  br label %for.cond371, !dbg !5858, !llvm.loop !5859

for.end403:                                       ; preds = %for.cond371
  br label %if.end446, !dbg !5861

if.else404:                                       ; preds = %if.then368
  store i32 0, i32* %x, align 4, !dbg !5862
  br label %for.cond405, !dbg !5863

for.cond405:                                      ; preds = %for.inc443, %if.else404
  %333 = load i32, i32* %x, align 4, !dbg !5864
  %334 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5866
  %xsize406 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %334, i32 0, i32 7, !dbg !5867
  %335 = load i32, i32* %xsize406, align 4, !dbg !5867
  %cmp407 = icmp slt i32 %333, %335, !dbg !5868
  br i1 %cmp407, label %for.body409, label %for.end445, !dbg !5869

for.body409:                                      ; preds = %for.cond405
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %t411, metadata !5870, metadata !1741), !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %c413, metadata !5872, metadata !1741), !dbg !5873
  store i32 0, i32* %c413, align 4, !dbg !5874
  br label %for.cond414, !dbg !5875

for.cond414:                                      ; preds = %for.inc433, %for.body409
  %336 = load i32, i32* %c413, align 4, !dbg !5876
  %337 = load i32, i32* %rgb_channel_count, align 4, !dbg !5878
  %cmp415 = icmp slt i32 %336, %337, !dbg !5879
  br i1 %cmp415, label %for.body417, label %for.end435, !dbg !5880

for.body417:                                      ; preds = %for.cond414
  %338 = load i32, i32* %c413, align 4, !dbg !5881
  %idxprom418 = sext i32 %338 to i64, !dbg !5882
  %arrayidx419 = getelementptr inbounds [3 x i8*], [3 x i8*]* %rgb, i64 0, i64 %idxprom418, !dbg !5882
  store i8** %arrayidx419, i8*** %b.addr.i568, align 8, !dbg !5883
  %339 = load i8**, i8*** %b.addr.i568, align 8, !dbg !5884
  %340 = load i8*, i8** %339, align 8, !dbg !5885
  %add.ptr.i569 = getelementptr inbounds i8, i8* %340, i64 4, !dbg !5885
  store i8* %add.ptr.i569, i8** %339, align 8, !dbg !5885
  %341 = load i8**, i8*** %b.addr.i568, align 8, !dbg !5886
  %342 = load i8*, i8** %341, align 8, !dbg !5887
  %add.ptr1.i570 = getelementptr inbounds i8, i8* %342, i64 -4, !dbg !5888
  %343 = bitcast i8* %add.ptr1.i570 to %union.unaligned_32*, !dbg !5889
  %l.i571 = bitcast %union.unaligned_32* %343 to i32*, !dbg !5889
  %344 = load i32, i32* %l.i571, align 1, !dbg !5889
  %i421 = bitcast %union.av_intfloat32* %t411 to i32*, !dbg !5890
  store i32 %344, i32* %i421, align 4, !dbg !5891
  %f422 = bitcast %union.av_intfloat32* %t411 to float*, !dbg !5892
  %345 = load float, float* %f422, align 4, !dbg !5892
  %cmp423 = fcmp ogt float %345, 0.000000e+00, !dbg !5894
  br i1 %cmp423, label %if.then425, label %if.end429, !dbg !5895

if.then425:                                       ; preds = %for.body417
  %f426 = bitcast %union.av_intfloat32* %t411 to float*, !dbg !5896
  %346 = load float, float* %f426, align 4, !dbg !5896
  %347 = load float, float* %one_gamma, align 4, !dbg !5897
  %call427 = call float @powf(float %346, float %347) #10, !dbg !5898
  %f428 = bitcast %union.av_intfloat32* %t411 to float*, !dbg !5899
  store float %call427, float* %f428, align 4, !dbg !5900
  br label %if.end429, !dbg !5901

if.end429:                                        ; preds = %if.then425, %for.body417
  %i430 = bitcast %union.av_intfloat32* %t411 to i32*, !dbg !5902
  %348 = load i32, i32* %i430, align 4, !dbg !5902
  %call431 = call zeroext i16 @exr_flt2uint(i32 %348), !dbg !5903
  %349 = load i16*, i16** %ptr_x, align 8, !dbg !5904
  %incdec.ptr432 = getelementptr inbounds i16, i16* %349, i32 1, !dbg !5904
  store i16* %incdec.ptr432, i16** %ptr_x, align 8, !dbg !5904
  store i16 %call431, i16* %349, align 2, !dbg !5905
  br label %for.inc433, !dbg !5906

for.inc433:                                       ; preds = %if.end429
  %350 = load i32, i32* %c413, align 4, !dbg !5907
  %inc434 = add nsw i32 %350, 1, !dbg !5907
  store i32 %inc434, i32* %c413, align 4, !dbg !5907
  br label %for.cond414, !dbg !5909, !llvm.loop !5910

for.end435:                                       ; preds = %for.cond414
  %arrayidx436 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !5912
  %351 = load i8*, i8** %arrayidx436, align 8, !dbg !5912
  %tobool437 = icmp ne i8* %351, null, !dbg !5912
  br i1 %tobool437, label %if.then438, label %if.end442, !dbg !5913

if.then438:                                       ; preds = %for.end435
  store i8** %a, i8*** %b.addr.i572, align 8, !dbg !5914
  %352 = load i8**, i8*** %b.addr.i572, align 8, !dbg !5915
  %353 = load i8*, i8** %352, align 8, !dbg !5916
  %add.ptr.i573 = getelementptr inbounds i8, i8* %353, i64 4, !dbg !5916
  store i8* %add.ptr.i573, i8** %352, align 8, !dbg !5916
  %354 = load i8**, i8*** %b.addr.i572, align 8, !dbg !5917
  %355 = load i8*, i8** %354, align 8, !dbg !5918
  %add.ptr1.i574 = getelementptr inbounds i8, i8* %355, i64 -4, !dbg !5919
  %356 = bitcast i8* %add.ptr1.i574 to %union.unaligned_32*, !dbg !5920
  %l.i575 = bitcast %union.unaligned_32* %356 to i32*, !dbg !5920
  %357 = load i32, i32* %l.i575, align 1, !dbg !5920
  %call440 = call zeroext i16 @exr_flt2uint(i32 %357), !dbg !5921
  %358 = load i16*, i16** %ptr_x, align 8, !dbg !5923
  %incdec.ptr441 = getelementptr inbounds i16, i16* %358, i32 1, !dbg !5923
  store i16* %incdec.ptr441, i16** %ptr_x, align 8, !dbg !5923
  store i16 %call440, i16* %358, align 2, !dbg !5924
  br label %if.end442, !dbg !5925

if.end442:                                        ; preds = %if.then438, %for.end435
  br label %for.inc443, !dbg !5926

for.inc443:                                       ; preds = %if.end442
  %359 = load i32, i32* %x, align 4, !dbg !5927
  %inc444 = add nsw i32 %359, 1, !dbg !5927
  store i32 %inc444, i32* %x, align 4, !dbg !5927
  br label %for.cond405, !dbg !5929, !llvm.loop !5930

for.end445:                                       ; preds = %for.cond405
  br label %if.end446

if.end446:                                        ; preds = %for.end445, %for.end403
  br label %if.end518, !dbg !5932

if.else447:                                       ; preds = %if.end357
  %360 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5933
  %pixel_type448 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %360, i32 0, i32 5, !dbg !5935
  %361 = load i32, i32* %pixel_type448, align 4, !dbg !5935
  %cmp449 = icmp eq i32 %361, 1, !dbg !5936
  br i1 %cmp449, label %if.then451, label %if.else483, !dbg !5933

if.then451:                                       ; preds = %if.else447
  store i32 0, i32* %x, align 4, !dbg !5937
  br label %for.cond452, !dbg !5938

for.cond452:                                      ; preds = %for.inc480, %if.then451
  %362 = load i32, i32* %x, align 4, !dbg !5939
  %363 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !5941
  %xsize453 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %363, i32 0, i32 7, !dbg !5942
  %364 = load i32, i32* %xsize453, align 4, !dbg !5942
  %cmp454 = icmp slt i32 %362, %364, !dbg !5943
  br i1 %cmp454, label %for.body456, label %for.end482, !dbg !5944

for.body456:                                      ; preds = %for.cond452
  call void @llvm.dbg.declare(metadata i32* %c458, metadata !5945, metadata !1741), !dbg !5946
  store i32 0, i32* %c458, align 4, !dbg !5947
  br label %for.cond459, !dbg !5948

for.cond459:                                      ; preds = %for.inc469, %for.body456
  %365 = load i32, i32* %c458, align 4, !dbg !5949
  %366 = load i32, i32* %rgb_channel_count, align 4, !dbg !5951
  %cmp460 = icmp slt i32 %365, %366, !dbg !5952
  br i1 %cmp460, label %for.body462, label %for.end471, !dbg !5953

for.body462:                                      ; preds = %for.cond459
  %367 = load i32, i32* %c458, align 4, !dbg !5954
  %idxprom463 = sext i32 %367 to i64, !dbg !5955
  %arrayidx464 = getelementptr inbounds [3 x i8*], [3 x i8*]* %rgb, i64 0, i64 %idxprom463, !dbg !5955
  store i8** %arrayidx464, i8*** %b.addr.i563, align 8, !dbg !5956
  %368 = load i8**, i8*** %b.addr.i563, align 8, !dbg !5957
  %369 = load i8*, i8** %368, align 8, !dbg !5958
  %add.ptr.i564 = getelementptr inbounds i8, i8* %369, i64 2, !dbg !5958
  store i8* %add.ptr.i564, i8** %368, align 8, !dbg !5958
  %370 = load i8**, i8*** %b.addr.i563, align 8, !dbg !5959
  %371 = load i8*, i8** %370, align 8, !dbg !5960
  %add.ptr1.i565 = getelementptr inbounds i8, i8* %371, i64 -2, !dbg !5961
  %372 = bitcast i8* %add.ptr1.i565 to %union.unaligned_16*, !dbg !5962
  %l.i566 = bitcast %union.unaligned_16* %372 to i16*, !dbg !5962
  %373 = load i16, i16* %l.i566, align 1, !dbg !5962
  %conv.i567 = zext i16 %373 to i32, !dbg !5963
  %idxprom466 = zext i32 %conv.i567 to i64, !dbg !5964
  %374 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5964
  %gamma_table = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %374, i32 0, i32 30, !dbg !5965
  %arrayidx467 = getelementptr inbounds [65536 x i16], [65536 x i16]* %gamma_table, i64 0, i64 %idxprom466, !dbg !5964
  %375 = load i16, i16* %arrayidx467, align 2, !dbg !5964
  %376 = load i16*, i16** %ptr_x, align 8, !dbg !5966
  %incdec.ptr468 = getelementptr inbounds i16, i16* %376, i32 1, !dbg !5966
  store i16* %incdec.ptr468, i16** %ptr_x, align 8, !dbg !5966
  store i16 %375, i16* %376, align 2, !dbg !5967
  br label %for.inc469, !dbg !5968

for.inc469:                                       ; preds = %for.body462
  %377 = load i32, i32* %c458, align 4, !dbg !5969
  %inc470 = add nsw i32 %377, 1, !dbg !5969
  store i32 %inc470, i32* %c458, align 4, !dbg !5969
  br label %for.cond459, !dbg !5971, !llvm.loop !5972

for.end471:                                       ; preds = %for.cond459
  %arrayidx472 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !5974
  %378 = load i8*, i8** %arrayidx472, align 8, !dbg !5974
  %tobool473 = icmp ne i8* %378, null, !dbg !5974
  br i1 %tobool473, label %if.then474, label %if.end479, !dbg !5975

if.then474:                                       ; preds = %for.end471
  store i8** %a, i8*** %b.addr.i559, align 8, !dbg !5976
  %379 = load i8**, i8*** %b.addr.i559, align 8, !dbg !5977
  %380 = load i8*, i8** %379, align 8, !dbg !5978
  %add.ptr.i560 = getelementptr inbounds i8, i8* %380, i64 2, !dbg !5978
  store i8* %add.ptr.i560, i8** %379, align 8, !dbg !5978
  %381 = load i8**, i8*** %b.addr.i559, align 8, !dbg !5979
  %382 = load i8*, i8** %381, align 8, !dbg !5980
  %add.ptr1.i561 = getelementptr inbounds i8, i8* %382, i64 -2, !dbg !5981
  %383 = bitcast i8* %add.ptr1.i561 to %union.unaligned_16*, !dbg !5982
  %l.i562 = bitcast %union.unaligned_16* %383 to i16*, !dbg !5982
  %384 = load i16, i16* %l.i562, align 1, !dbg !5982
  %conv.i = zext i16 %384 to i32, !dbg !5983
  %conv476 = trunc i32 %conv.i to i16, !dbg !5976
  %call477 = call zeroext i16 @exr_halflt2uint(i16 zeroext %conv476), !dbg !5984
  %385 = load i16*, i16** %ptr_x, align 8, !dbg !5986
  %incdec.ptr478 = getelementptr inbounds i16, i16* %385, i32 1, !dbg !5986
  store i16* %incdec.ptr478, i16** %ptr_x, align 8, !dbg !5986
  store i16 %call477, i16* %385, align 2, !dbg !5987
  br label %if.end479, !dbg !5988

if.end479:                                        ; preds = %if.then474, %for.end471
  br label %for.inc480, !dbg !5989

for.inc480:                                       ; preds = %if.end479
  %386 = load i32, i32* %x, align 4, !dbg !5990
  %inc481 = add nsw i32 %386, 1, !dbg !5990
  store i32 %inc481, i32* %x, align 4, !dbg !5990
  br label %for.cond452, !dbg !5992, !llvm.loop !5993

for.end482:                                       ; preds = %for.cond452
  br label %if.end517, !dbg !5995

if.else483:                                       ; preds = %if.else447
  %387 = load %struct.EXRContext*, %struct.EXRContext** %s, align 8, !dbg !5996
  %pixel_type484 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %387, i32 0, i32 5, !dbg !5998
  %388 = load i32, i32* %pixel_type484, align 4, !dbg !5998
  %cmp485 = icmp eq i32 %388, 0, !dbg !5999
  br i1 %cmp485, label %if.then487, label %if.end516, !dbg !5996

if.then487:                                       ; preds = %if.else483
  store i32 0, i32* %x, align 4, !dbg !6000
  br label %for.cond488, !dbg !6001

for.cond488:                                      ; preds = %for.inc513, %if.then487
  %389 = load i32, i32* %x, align 4, !dbg !6002
  %390 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !6004
  %xsize489 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %390, i32 0, i32 7, !dbg !6005
  %391 = load i32, i32* %xsize489, align 4, !dbg !6005
  %cmp490 = icmp slt i32 %389, %391, !dbg !6006
  br i1 %cmp490, label %for.body492, label %for.end515, !dbg !6007

for.body492:                                      ; preds = %for.cond488
  store i32 0, i32* %c, align 4, !dbg !6008
  br label %for.cond493, !dbg !6009

for.cond493:                                      ; preds = %for.inc502, %for.body492
  %392 = load i32, i32* %c, align 4, !dbg !6010
  %393 = load i32, i32* %rgb_channel_count, align 4, !dbg !6012
  %cmp494 = icmp slt i32 %392, %393, !dbg !6013
  br i1 %cmp494, label %for.body496, label %for.end504, !dbg !6014

for.body496:                                      ; preds = %for.cond493
  %394 = load i32, i32* %c, align 4, !dbg !6015
  %idxprom497 = sext i32 %394 to i64, !dbg !6016
  %arrayidx498 = getelementptr inbounds [3 x i8*], [3 x i8*]* %rgb, i64 0, i64 %idxprom497, !dbg !6016
  store i8** %arrayidx498, i8*** %b.addr.i551, align 8, !dbg !6017
  %395 = load i8**, i8*** %b.addr.i551, align 8, !dbg !6018
  %396 = load i8*, i8** %395, align 8, !dbg !6019
  %add.ptr.i552 = getelementptr inbounds i8, i8* %396, i64 4, !dbg !6019
  store i8* %add.ptr.i552, i8** %395, align 8, !dbg !6019
  %397 = load i8**, i8*** %b.addr.i551, align 8, !dbg !6020
  %398 = load i8*, i8** %397, align 8, !dbg !6021
  %add.ptr1.i553 = getelementptr inbounds i8, i8* %398, i64 -4, !dbg !6022
  %399 = bitcast i8* %add.ptr1.i553 to %union.unaligned_32*, !dbg !6023
  %l.i554 = bitcast %union.unaligned_32* %399 to i32*, !dbg !6023
  %400 = load i32, i32* %l.i554, align 1, !dbg !6023
  %shr = lshr i32 %400, 16, !dbg !6024
  %conv500 = trunc i32 %shr to i16, !dbg !6017
  %401 = load i16*, i16** %ptr_x, align 8, !dbg !6025
  %incdec.ptr501 = getelementptr inbounds i16, i16* %401, i32 1, !dbg !6025
  store i16* %incdec.ptr501, i16** %ptr_x, align 8, !dbg !6025
  store i16 %conv500, i16* %401, align 2, !dbg !6026
  br label %for.inc502, !dbg !6027

for.inc502:                                       ; preds = %for.body496
  %402 = load i32, i32* %c, align 4, !dbg !6028
  %inc503 = add nsw i32 %402, 1, !dbg !6028
  store i32 %inc503, i32* %c, align 4, !dbg !6028
  br label %for.cond493, !dbg !6030, !llvm.loop !6031

for.end504:                                       ; preds = %for.cond493
  %arrayidx505 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !6033
  %403 = load i8*, i8** %arrayidx505, align 8, !dbg !6033
  %tobool506 = icmp ne i8* %403, null, !dbg !6033
  br i1 %tobool506, label %if.then507, label %if.end512, !dbg !6034

if.then507:                                       ; preds = %for.end504
  store i8** %a, i8*** %b.addr.i547, align 8, !dbg !6035
  %404 = load i8**, i8*** %b.addr.i547, align 8, !dbg !6036
  %405 = load i8*, i8** %404, align 8, !dbg !6037
  %add.ptr.i548 = getelementptr inbounds i8, i8* %405, i64 4, !dbg !6037
  store i8* %add.ptr.i548, i8** %404, align 8, !dbg !6037
  %406 = load i8**, i8*** %b.addr.i547, align 8, !dbg !6038
  %407 = load i8*, i8** %406, align 8, !dbg !6039
  %add.ptr1.i549 = getelementptr inbounds i8, i8* %407, i64 -4, !dbg !6040
  %408 = bitcast i8* %add.ptr1.i549 to %union.unaligned_32*, !dbg !6041
  %l.i550 = bitcast %union.unaligned_32* %408 to i32*, !dbg !6041
  %409 = load i32, i32* %l.i550, align 1, !dbg !6041
  %shr509 = lshr i32 %409, 16, !dbg !6042
  %conv510 = trunc i32 %shr509 to i16, !dbg !6035
  %410 = load i16*, i16** %ptr_x, align 8, !dbg !6043
  %incdec.ptr511 = getelementptr inbounds i16, i16* %410, i32 1, !dbg !6043
  store i16* %incdec.ptr511, i16** %ptr_x, align 8, !dbg !6043
  store i16 %conv510, i16* %410, align 2, !dbg !6044
  br label %if.end512, !dbg !6045

if.end512:                                        ; preds = %if.then507, %for.end504
  br label %for.inc513, !dbg !6046

for.inc513:                                       ; preds = %if.end512
  %411 = load i32, i32* %x, align 4, !dbg !6047
  %inc514 = add nsw i32 %411, 1, !dbg !6047
  store i32 %inc514, i32* %x, align 4, !dbg !6047
  br label %for.cond488, !dbg !6049, !llvm.loop !6050

for.end515:                                       ; preds = %for.cond488
  br label %if.end516, !dbg !6052

if.end516:                                        ; preds = %for.end515, %if.else483
  br label %if.end517

if.end517:                                        ; preds = %if.end516, %for.end482
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %if.end446
  %412 = load i16*, i16** %ptr_x, align 8, !dbg !6053
  %413 = bitcast i16* %412 to i8*, !dbg !6054
  %414 = load i32, i32* %axmax, align 4, !dbg !6055
  %conv519 = sext i32 %414 to i64, !dbg !6055
  call void @llvm.memset.p0i8.i64(i8* %413, i8 0, i64 %conv519, i32 2, i1 false), !dbg !6054
  %415 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !6056
  %channel_line_size520 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %415, i32 0, i32 8, !dbg !6057
  %416 = load i32, i32* %channel_line_size520, align 8, !dbg !6057
  %arrayidx521 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 0, !dbg !6058
  %417 = load i8*, i8** %arrayidx521, align 16, !dbg !6059
  %idx.ext522 = sext i32 %416 to i64, !dbg !6059
  %add.ptr523 = getelementptr inbounds i8, i8* %417, i64 %idx.ext522, !dbg !6059
  store i8* %add.ptr523, i8** %arrayidx521, align 16, !dbg !6059
  %418 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !6060
  %channel_line_size524 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %418, i32 0, i32 8, !dbg !6061
  %419 = load i32, i32* %channel_line_size524, align 8, !dbg !6061
  %arrayidx525 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 1, !dbg !6062
  %420 = load i8*, i8** %arrayidx525, align 8, !dbg !6063
  %idx.ext526 = sext i32 %419 to i64, !dbg !6063
  %add.ptr527 = getelementptr inbounds i8, i8* %420, i64 %idx.ext526, !dbg !6063
  store i8* %add.ptr527, i8** %arrayidx525, align 8, !dbg !6063
  %421 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !6064
  %channel_line_size528 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %421, i32 0, i32 8, !dbg !6065
  %422 = load i32, i32* %channel_line_size528, align 8, !dbg !6065
  %arrayidx529 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 2, !dbg !6066
  %423 = load i8*, i8** %arrayidx529, align 16, !dbg !6067
  %idx.ext530 = sext i32 %422 to i64, !dbg !6067
  %add.ptr531 = getelementptr inbounds i8, i8* %423, i64 %idx.ext530, !dbg !6067
  store i8* %add.ptr531, i8** %arrayidx529, align 16, !dbg !6067
  %arrayidx532 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !6068
  %424 = load i8*, i8** %arrayidx532, align 8, !dbg !6068
  %tobool533 = icmp ne i8* %424, null, !dbg !6068
  br i1 %tobool533, label %if.then534, label %if.end539, !dbg !6070

if.then534:                                       ; preds = %if.end518
  %425 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td, align 8, !dbg !6071
  %channel_line_size535 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %425, i32 0, i32 8, !dbg !6072
  %426 = load i32, i32* %channel_line_size535, align 8, !dbg !6072
  %arrayidx536 = getelementptr inbounds [4 x i8*], [4 x i8*]* %channel_buffer, i64 0, i64 3, !dbg !6073
  %427 = load i8*, i8** %arrayidx536, align 8, !dbg !6074
  %idx.ext537 = sext i32 %426 to i64, !dbg !6074
  %add.ptr538 = getelementptr inbounds i8, i8* %427, i64 %idx.ext537, !dbg !6074
  store i8* %add.ptr538, i8** %arrayidx536, align 8, !dbg !6074
  br label %if.end539, !dbg !6073

if.end539:                                        ; preds = %if.then534, %if.end518
  br label %for.inc540, !dbg !6075

for.inc540:                                       ; preds = %if.end539
  %428 = load i32, i32* %i, align 4, !dbg !6076
  %inc541 = add nsw i32 %428, 1, !dbg !6076
  store i32 %inc541, i32* %i, align 4, !dbg !6076
  %429 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6078
  %linesize542 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %429, i32 0, i32 1, !dbg !6079
  %arrayidx543 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize542, i64 0, i64 0, !dbg !6078
  %430 = load i32, i32* %arrayidx543, align 8, !dbg !6078
  %431 = load i8*, i8** %ptr, align 8, !dbg !6080
  %idx.ext544 = sext i32 %430 to i64, !dbg !6080
  %add.ptr545 = getelementptr inbounds i8, i8* %431, i64 %idx.ext544, !dbg !6080
  store i8* %add.ptr545, i8** %ptr, align 8, !dbg !6080
  br label %for.cond, !dbg !6081, !llvm.loop !6083

for.end546:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6085
  br label %return, !dbg !6085

return:                                           ; preds = %for.end546, %if.then281, %if.then262, %if.then251, %if.then239, %if.then184, %if.then171, %if.then155, %if.then79, %if.then53, %if.then46, %if.then41, %if.then15
  %432 = load i32, i32* %retval, align 4, !dbg !6086
  ret i32 %432, !dbg !6086
}

; Function Attrs: noreturn nounwind
declare void @abort() #7

; Function Attrs: nounwind uwtable
define internal i32 @check_header_variable(%struct.EXRContext* %s, i8* %value_name, i8* %value_type, i32 %minimum_length) #0 !dbg !6087 {
entry:
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2102, metadata !1741), !dbg !6090
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2116, metadata !1741), !dbg !6098
  %retval.i = alloca i32, align 4
  %g.addr.i36 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i36, metadata !2118, metadata !1741), !dbg !6099
  %g.addr.i29 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i29, metadata !2147, metadata !1741), !dbg !6100
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2147, metadata !1741), !dbg !6103
  %s.addr = alloca %struct.EXRContext*, align 8
  %value_name.addr = alloca i8*, align 8
  %value_type.addr = alloca i8*, align 8
  %minimum_length.addr = alloca i32, align 4
  %var_size = alloca i32, align 4
  store %struct.EXRContext* %s, %struct.EXRContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s.addr, metadata !6105, metadata !1741), !dbg !6106
  store i8* %value_name, i8** %value_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value_name.addr, metadata !6107, metadata !1741), !dbg !6108
  store i8* %value_type, i8** %value_type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value_type.addr, metadata !6109, metadata !1741), !dbg !6110
  store i32 %minimum_length, i32* %minimum_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minimum_length.addr, metadata !6111, metadata !1741), !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %var_size, metadata !6113, metadata !1741), !dbg !6114
  store i32 -1, i32* %var_size, align 4, !dbg !6114
  %0 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6115
  %gb = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %0, i32 0, i32 20, !dbg !6116
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6117
  %1 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6118
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %1, i32 0, i32 1, !dbg !6119
  %2 = load i8*, i8** %buffer_end.i, align 8, !dbg !6119
  %3 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6120
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %3, i32 0, i32 0, !dbg !6121
  %4 = load i8*, i8** %buffer.i, align 8, !dbg !6121
  %sub.ptr.lhs.cast.i = ptrtoint i8* %2 to i64, !dbg !6122
  %sub.ptr.rhs.cast.i = ptrtoint i8* %4 to i64, !dbg !6122
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !6122
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !6118
  %5 = load i32, i32* %minimum_length.addr, align 4, !dbg !6123
  %cmp = icmp uge i32 %conv.i, %5, !dbg !6124
  br i1 %cmp, label %land.lhs.true, label %if.end28, !dbg !6125

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6126
  %gb1 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %6, i32 0, i32 20, !dbg !6127
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb1, i32 0, i32 0, !dbg !6128
  %7 = load i8*, i8** %buffer, align 8, !dbg !6128
  %8 = load i8*, i8** %value_name.addr, align 8, !dbg !6129
  %call2 = call i32 @strcmp(i8* %7, i8* %8) #12, !dbg !6130
  %tobool = icmp ne i32 %call2, 0, !dbg !6130
  br i1 %tobool, label %if.end28, label %if.then, !dbg !6131

if.then:                                          ; preds = %land.lhs.true
  %9 = load i8*, i8** %value_name.addr, align 8, !dbg !6133
  %call3 = call i64 @strlen(i8* %9) #12, !dbg !6134
  %add = add i64 %call3, 1, !dbg !6135
  %10 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6136
  %gb4 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %10, i32 0, i32 20, !dbg !6137
  %buffer5 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb4, i32 0, i32 0, !dbg !6138
  %11 = load i8*, i8** %buffer5, align 8, !dbg !6139
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %add, !dbg !6139
  store i8* %add.ptr, i8** %buffer5, align 8, !dbg !6139
  %12 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6140
  %gb6 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %12, i32 0, i32 20, !dbg !6141
  %buffer7 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb6, i32 0, i32 0, !dbg !6142
  %13 = load i8*, i8** %buffer7, align 8, !dbg !6142
  %14 = load i8*, i8** %value_type.addr, align 8, !dbg !6143
  %call8 = call i32 @strcmp(i8* %13, i8* %14) #12, !dbg !6144
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6144
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !6145

if.then10:                                        ; preds = %if.then
  %15 = load i8*, i8** %value_type.addr, align 8, !dbg !6146
  %call11 = call i64 @strlen(i8* %15) #12, !dbg !6147
  %add12 = add i64 %call11, 1, !dbg !6148
  %16 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6149
  %gb13 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %16, i32 0, i32 20, !dbg !6150
  %buffer14 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb13, i32 0, i32 0, !dbg !6151
  %17 = load i8*, i8** %buffer14, align 8, !dbg !6152
  %add.ptr15 = getelementptr inbounds i8, i8* %17, i64 %add12, !dbg !6152
  store i8* %add.ptr15, i8** %buffer14, align 8, !dbg !6152
  %18 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6153
  %gb16 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %18, i32 0, i32 20, !dbg !6154
  store %struct.GetByteContext* %gb16, %struct.GetByteContext** %g.addr.i36, align 8, !dbg !6155
  %19 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i36, align 8, !dbg !6156
  %buffer_end.i37 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %19, i32 0, i32 1, !dbg !6157
  %20 = load i8*, i8** %buffer_end.i37, align 8, !dbg !6157
  %21 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i36, align 8, !dbg !6158
  %buffer.i38 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %21, i32 0, i32 0, !dbg !6159
  %22 = load i8*, i8** %buffer.i38, align 8, !dbg !6159
  %sub.ptr.lhs.cast.i39 = ptrtoint i8* %20 to i64, !dbg !6160
  %sub.ptr.rhs.cast.i40 = ptrtoint i8* %22 to i64, !dbg !6160
  %sub.ptr.sub.i41 = sub i64 %sub.ptr.lhs.cast.i39, %sub.ptr.rhs.cast.i40, !dbg !6160
  %cmp.i = icmp slt i64 %sub.ptr.sub.i41, 4, !dbg !6161
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !6162

if.then.i:                                        ; preds = %if.then10
  %23 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i36, align 8, !dbg !6163
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %23, i32 0, i32 1, !dbg !6164
  %24 = load i8*, i8** %buffer_end1.i, align 8, !dbg !6164
  %25 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i36, align 8, !dbg !6165
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %25, i32 0, i32 0, !dbg !6166
  store i8* %24, i8** %buffer2.i, align 8, !dbg !6167
  store i32 0, i32* %retval.i, align 4, !dbg !6168
  br label %bytestream2_get_le32.exit, !dbg !6168

if.end.i:                                         ; preds = %if.then10
  %26 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i36, align 8, !dbg !6169
  store %struct.GetByteContext* %26, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !6170
  %27 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !6171
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %27, i32 0, i32 0, !dbg !6172
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !6173
  %28 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !6174
  %29 = load i8*, i8** %28, align 8, !dbg !6175
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %29, i64 4, !dbg !6175
  store i8* %add.ptr.i.i.i, i8** %28, align 8, !dbg !6175
  %30 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !6176
  %31 = load i8*, i8** %30, align 8, !dbg !6177
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %31, i64 -4, !dbg !6178
  %32 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !6179
  %l.i.i.i = bitcast %union.unaligned_32* %32 to i32*, !dbg !6179
  %33 = load i32, i32* %l.i.i.i, align 1, !dbg !6179
  store i32 %33, i32* %retval.i, align 4, !dbg !6180
  br label %bytestream2_get_le32.exit, !dbg !6180

bytestream2_get_le32.exit:                        ; preds = %if.then.i, %if.end.i
  %34 = load i32, i32* %retval.i, align 4, !dbg !6181
  store i32 %34, i32* %var_size, align 4, !dbg !6182
  %35 = load i32, i32* %var_size, align 4, !dbg !6183
  %36 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6184
  %gb18 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %36, i32 0, i32 20, !dbg !6185
  store %struct.GetByteContext* %gb18, %struct.GetByteContext** %g.addr.i29, align 8, !dbg !6186
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i29, align 8, !dbg !6187
  %buffer_end.i30 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 1, !dbg !6188
  %38 = load i8*, i8** %buffer_end.i30, align 8, !dbg !6188
  %39 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i29, align 8, !dbg !6189
  %buffer.i31 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %39, i32 0, i32 0, !dbg !6190
  %40 = load i8*, i8** %buffer.i31, align 8, !dbg !6190
  %sub.ptr.lhs.cast.i32 = ptrtoint i8* %38 to i64, !dbg !6191
  %sub.ptr.rhs.cast.i33 = ptrtoint i8* %40 to i64, !dbg !6191
  %sub.ptr.sub.i34 = sub i64 %sub.ptr.lhs.cast.i32, %sub.ptr.rhs.cast.i33, !dbg !6191
  %conv.i35 = trunc i64 %sub.ptr.sub.i34 to i32, !dbg !6187
  %cmp20 = icmp ugt i32 %35, %conv.i35, !dbg !6192
  br i1 %cmp20, label %if.then21, label %if.end, !dbg !6193

if.then21:                                        ; preds = %bytestream2_get_le32.exit
  store i32 0, i32* %var_size, align 4, !dbg !6194
  br label %if.end, !dbg !6195

if.end:                                           ; preds = %if.then21, %bytestream2_get_le32.exit
  br label %if.end27, !dbg !6196

if.else:                                          ; preds = %if.then
  %41 = load i8*, i8** %value_name.addr, align 8, !dbg !6197
  %call22 = call i64 @strlen(i8* %41) #12, !dbg !6199
  %add23 = add i64 %call22, 1, !dbg !6200
  %42 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6201
  %gb24 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %42, i32 0, i32 20, !dbg !6202
  %buffer25 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb24, i32 0, i32 0, !dbg !6203
  %43 = load i8*, i8** %buffer25, align 8, !dbg !6204
  %idx.neg = sub i64 0, %add23, !dbg !6204
  %add.ptr26 = getelementptr inbounds i8, i8* %43, i64 %idx.neg, !dbg !6204
  store i8* %add.ptr26, i8** %buffer25, align 8, !dbg !6204
  %44 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6205
  %avctx = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %44, i32 0, i32 2, !dbg !6206
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6206
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !6205
  %47 = load i8*, i8** %value_type.addr, align 8, !dbg !6207
  %48 = load i8*, i8** %value_name.addr, align 8, !dbg !6208
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 24, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.98, i32 0, i32 0), i8* %47, i8* %48), !dbg !6209
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end
  br label %if.end28, !dbg !6210

if.end28:                                         ; preds = %if.end27, %land.lhs.true, %entry
  %49 = load i32, i32* %var_size, align 4, !dbg !6211
  ret i32 %49, !dbg !6212
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #8

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #8

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #8

declare i8* @av_realloc(i8*, i64) #2

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #2

declare i32 @ff_set_sar(%struct.AVCodecContext*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @av_d2q(double, i32) #9

declare void @av_dict_free(%struct.AVDictionary**) #2

declare void @av_fast_padded_malloc(i8*, i32*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @zip_uncompress(%struct.EXRContext* %s, i8* %src, i32 %compressed_size, i32 %uncompressed_size, %struct.EXRThreadData* %td) #0 !dbg !6213 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.EXRContext*, align 8
  %src.addr = alloca i8*, align 8
  %compressed_size.addr = alloca i32, align 4
  %uncompressed_size.addr = alloca i32, align 4
  %td.addr = alloca %struct.EXRThreadData*, align 8
  %dest_len = alloca i64, align 8
  store %struct.EXRContext* %s, %struct.EXRContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s.addr, metadata !6216, metadata !1741), !dbg !6217
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6218, metadata !1741), !dbg !6219
  store i32 %compressed_size, i32* %compressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compressed_size.addr, metadata !6220, metadata !1741), !dbg !6221
  store i32 %uncompressed_size, i32* %uncompressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uncompressed_size.addr, metadata !6222, metadata !1741), !dbg !6223
  store %struct.EXRThreadData* %td, %struct.EXRThreadData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td.addr, metadata !6224, metadata !1741), !dbg !6225
  call void @llvm.dbg.declare(metadata i64* %dest_len, metadata !6226, metadata !1741), !dbg !6227
  %0 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !6228
  %conv = sext i32 %0 to i64, !dbg !6228
  store i64 %conv, i64* %dest_len, align 8, !dbg !6227
  %1 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6229
  %tmp = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %1, i32 0, i32 2, !dbg !6231
  %2 = load i8*, i8** %tmp, align 8, !dbg !6231
  %3 = load i8*, i8** %src.addr, align 8, !dbg !6232
  %4 = load i32, i32* %compressed_size.addr, align 4, !dbg !6233
  %conv1 = sext i32 %4 to i64, !dbg !6233
  %call = call i32 @uncompress(i8* %2, i64* %dest_len, i8* %3, i64 %conv1), !dbg !6234
  %cmp = icmp ne i32 %call, 0, !dbg !6235
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6236

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %dest_len, align 8, !dbg !6237
  %6 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !6238
  %conv3 = sext i32 %6 to i64, !dbg !6238
  %cmp4 = icmp ne i64 %5, %conv3, !dbg !6239
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6240

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !6242
  br label %return, !dbg !6242

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6243
  %dsp = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %7, i32 0, i32 3, !dbg !6244
  %predictor = getelementptr inbounds %struct.ExrDSPContext, %struct.ExrDSPContext* %dsp, i32 0, i32 1, !dbg !6245
  %8 = load void (i8*, i64)*, void (i8*, i64)** %predictor, align 8, !dbg !6245
  %9 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6246
  %tmp6 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %9, i32 0, i32 2, !dbg !6247
  %10 = load i8*, i8** %tmp6, align 8, !dbg !6247
  %11 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !6248
  %conv7 = sext i32 %11 to i64, !dbg !6248
  call void %8(i8* %10, i64 %conv7), !dbg !6243
  %12 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6249
  %dsp8 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %12, i32 0, i32 3, !dbg !6250
  %reorder_pixels = getelementptr inbounds %struct.ExrDSPContext, %struct.ExrDSPContext* %dsp8, i32 0, i32 0, !dbg !6251
  %13 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %reorder_pixels, align 8, !dbg !6251
  %14 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6252
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %14, i32 0, i32 0, !dbg !6253
  %15 = load i8*, i8** %uncompressed_data, align 8, !dbg !6253
  %16 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6254
  %tmp9 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %16, i32 0, i32 2, !dbg !6255
  %17 = load i8*, i8** %tmp9, align 8, !dbg !6255
  %18 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !6256
  %conv10 = sext i32 %18 to i64, !dbg !6256
  call void %13(i8* %15, i8* %17, i64 %conv10), !dbg !6249
  store i32 0, i32* %retval, align 4, !dbg !6257
  br label %return, !dbg !6257

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !6258
  ret i32 %19, !dbg !6258
}

; Function Attrs: nounwind uwtable
define internal i32 @piz_uncompress(%struct.EXRContext* %s, i8* %src, i32 %ssize, i32 %dsize, %struct.EXRThreadData* %td) #0 !dbg !6259 {
entry:
  %g.addr.i162 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i162, metadata !3305, metadata !1741), !dbg !6260
  %dst.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i, metadata !3314, metadata !1741), !dbg !6263
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3316, metadata !1741), !dbg !6264
  %size2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.i, metadata !3318, metadata !1741), !dbg !6265
  %b.addr.i.i.i142 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i142, metadata !5068, metadata !1741), !dbg !6266
  %g.addr.i.i143 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i143, metadata !6273, metadata !1741), !dbg !6274
  %retval.i144 = alloca i32, align 4
  %g.addr.i145 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i145, metadata !6275, metadata !1741), !dbg !6276
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !5068, metadata !1741), !dbg !6277
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !6273, metadata !1741), !dbg !6281
  %retval.i = alloca i32, align 4
  %g.addr.i137 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i137, metadata !6275, metadata !1741), !dbg !6282
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2152, metadata !1741), !dbg !6283
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !2158, metadata !1741), !dbg !6285
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !2160, metadata !1741), !dbg !6286
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.EXRContext*, align 8
  %src.addr = alloca i8*, align 8
  %ssize.addr = alloca i32, align 4
  %dsize.addr = alloca i32, align 4
  %td.addr = alloca %struct.EXRThreadData*, align 8
  %gb = alloca %struct.GetByteContext, align 8
  %maxval = alloca i16, align 2
  %min_non_zero = alloca i16, align 2
  %max_non_zero = alloca i16, align 2
  %ptr = alloca i16*, align 8
  %tmp = alloca i16*, align 8
  %out = alloca i16*, align 8
  %in = alloca i16*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pixel_half_size = alloca i32, align 4
  %channel = alloca %struct.EXRChannel*, align 8
  %tmp_offset = alloca i32, align 4
  store %struct.EXRContext* %s, %struct.EXRContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s.addr, metadata !6287, metadata !1741), !dbg !6288
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6289, metadata !1741), !dbg !6290
  store i32 %ssize, i32* %ssize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ssize.addr, metadata !6291, metadata !1741), !dbg !6292
  store i32 %dsize, i32* %dsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.addr, metadata !6293, metadata !1741), !dbg !6294
  store %struct.EXRThreadData* %td, %struct.EXRThreadData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td.addr, metadata !6295, metadata !1741), !dbg !6296
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gb, metadata !6297, metadata !1741), !dbg !6298
  call void @llvm.dbg.declare(metadata i16* %maxval, metadata !6299, metadata !1741), !dbg !6300
  call void @llvm.dbg.declare(metadata i16* %min_non_zero, metadata !6301, metadata !1741), !dbg !6302
  call void @llvm.dbg.declare(metadata i16* %max_non_zero, metadata !6303, metadata !1741), !dbg !6304
  call void @llvm.dbg.declare(metadata i16** %ptr, metadata !6305, metadata !1741), !dbg !6306
  call void @llvm.dbg.declare(metadata i16** %tmp, metadata !6307, metadata !1741), !dbg !6308
  %0 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6309
  %tmp1 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %0, i32 0, i32 2, !dbg !6310
  %1 = load i8*, i8** %tmp1, align 8, !dbg !6310
  %2 = bitcast i8* %1 to i16*, !dbg !6311
  store i16* %2, i16** %tmp, align 8, !dbg !6308
  call void @llvm.dbg.declare(metadata i16** %out, metadata !6312, metadata !1741), !dbg !6313
  call void @llvm.dbg.declare(metadata i16** %in, metadata !6314, metadata !1741), !dbg !6315
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6316, metadata !1741), !dbg !6317
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6318, metadata !1741), !dbg !6319
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6320, metadata !1741), !dbg !6321
  call void @llvm.dbg.declare(metadata i32* %pixel_half_size, metadata !6322, metadata !1741), !dbg !6323
  call void @llvm.dbg.declare(metadata %struct.EXRChannel** %channel, metadata !6324, metadata !1741), !dbg !6325
  call void @llvm.dbg.declare(metadata i32* %tmp_offset, metadata !6326, metadata !1741), !dbg !6327
  %3 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6328
  %bitmap = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %3, i32 0, i32 4, !dbg !6330
  %4 = load i8*, i8** %bitmap, align 8, !dbg !6330
  %tobool = icmp ne i8* %4, null, !dbg !6328
  br i1 %tobool, label %if.end, label %if.then, !dbg !6331

if.then:                                          ; preds = %entry
  %call = call noalias i8* @av_malloc(i64 8192), !dbg !6332
  %5 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6333
  %bitmap10 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %5, i32 0, i32 4, !dbg !6334
  store i8* %call, i8** %bitmap10, align 8, !dbg !6335
  br label %if.end, !dbg !6333

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6336
  %lut = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %6, i32 0, i32 5, !dbg !6338
  %7 = load i16*, i16** %lut, align 8, !dbg !6338
  %tobool11 = icmp ne i16* %7, null, !dbg !6336
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !6339

if.then12:                                        ; preds = %if.end
  %call13 = call noalias i8* @av_malloc(i64 131072), !dbg !6340
  %8 = bitcast i8* %call13 to i16*, !dbg !6340
  %9 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6341
  %lut14 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %9, i32 0, i32 5, !dbg !6342
  store i16* %8, i16** %lut14, align 8, !dbg !6343
  br label %if.end15, !dbg !6341

if.end15:                                         ; preds = %if.then12, %if.end
  %10 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6344
  %bitmap16 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %10, i32 0, i32 4, !dbg !6346
  %11 = load i8*, i8** %bitmap16, align 8, !dbg !6346
  %tobool17 = icmp ne i8* %11, null, !dbg !6344
  br i1 %tobool17, label %lor.lhs.false, label %if.then20, !dbg !6347

lor.lhs.false:                                    ; preds = %if.end15
  %12 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6348
  %lut18 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %12, i32 0, i32 5, !dbg !6350
  %13 = load i16*, i16** %lut18, align 8, !dbg !6350
  %tobool19 = icmp ne i16* %13, null, !dbg !6348
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !6351

if.then20:                                        ; preds = %lor.lhs.false, %if.end15
  %14 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6352
  %bitmap21 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %14, i32 0, i32 4, !dbg !6354
  %15 = bitcast i8** %bitmap21 to i8*, !dbg !6355
  call void @av_freep(i8* %15), !dbg !6356
  %16 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6357
  %lut22 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %16, i32 0, i32 5, !dbg !6358
  %17 = bitcast i16** %lut22 to i8*, !dbg !6359
  call void @av_freep(i8* %17), !dbg !6360
  store i32 -12, i32* %retval, align 4, !dbg !6361
  br label %return, !dbg !6361

if.end23:                                         ; preds = %lor.lhs.false
  %18 = load i8*, i8** %src.addr, align 8, !dbg !6362
  %19 = load i32, i32* %ssize.addr, align 4, !dbg !6363
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6364
  store i8* %18, i8** %buf.addr.i, align 8, !dbg !6364
  store i32 %19, i32* %buf_size.addr.i, align 4, !dbg !6364
  %20 = load i32, i32* %buf_size.addr.i, align 4, !dbg !6365
  %cmp.i = icmp sge i32 %20, 0, !dbg !6366
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !6367

if.then.i:                                        ; preds = %if.end23
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i32 137) #10, !dbg !6368
  call void @abort() #11, !dbg !6369
  unreachable, !dbg !6370

bytestream2_init.exit:                            ; preds = %if.end23
  %21 = load i8*, i8** %buf.addr.i, align 8, !dbg !6371
  %22 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6372
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %22, i32 0, i32 0, !dbg !6373
  store i8* %21, i8** %buffer.i, align 8, !dbg !6374
  %23 = load i8*, i8** %buf.addr.i, align 8, !dbg !6375
  %24 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6376
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %24, i32 0, i32 2, !dbg !6377
  store i8* %23, i8** %buffer_start.i, align 8, !dbg !6378
  %25 = load i8*, i8** %buf.addr.i, align 8, !dbg !6379
  %26 = load i32, i32* %buf_size.addr.i, align 4, !dbg !6380
  %idx.ext.i = sext i32 %26 to i64, !dbg !6381
  %add.ptr.i = getelementptr inbounds i8, i8* %25, i64 %idx.ext.i, !dbg !6381
  %27 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !6382
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %27, i32 0, i32 1, !dbg !6383
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !6384
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i137, align 8, !dbg !6385
  %28 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i137, align 8, !dbg !6386
  %buffer_end.i138 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %28, i32 0, i32 1, !dbg !6388
  %29 = load i8*, i8** %buffer_end.i138, align 8, !dbg !6388
  %30 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i137, align 8, !dbg !6389
  %buffer.i139 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %30, i32 0, i32 0, !dbg !6390
  %31 = load i8*, i8** %buffer.i139, align 8, !dbg !6390
  %sub.ptr.lhs.cast.i = ptrtoint i8* %29 to i64, !dbg !6391
  %sub.ptr.rhs.cast.i = ptrtoint i8* %31 to i64, !dbg !6391
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !6391
  %cmp.i140 = icmp slt i64 %sub.ptr.sub.i, 2, !dbg !6392
  br i1 %cmp.i140, label %if.then.i141, label %if.end.i, !dbg !6393

if.then.i141:                                     ; preds = %bytestream2_init.exit
  %32 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i137, align 8, !dbg !6394
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %32, i32 0, i32 1, !dbg !6397
  %33 = load i8*, i8** %buffer_end1.i, align 8, !dbg !6397
  %34 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i137, align 8, !dbg !6398
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %34, i32 0, i32 0, !dbg !6399
  store i8* %33, i8** %buffer2.i, align 8, !dbg !6400
  store i32 0, i32* %retval.i, align 4, !dbg !6401
  br label %bytestream2_get_le16.exit, !dbg !6401

if.end.i:                                         ; preds = %bytestream2_init.exit
  %35 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i137, align 8, !dbg !6402
  store %struct.GetByteContext* %35, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !6403
  %36 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !6404
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %36, i32 0, i32 0, !dbg !6405
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !6406
  %37 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !6407
  %38 = load i8*, i8** %37, align 8, !dbg !6408
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %38, i64 2, !dbg !6408
  store i8* %add.ptr.i.i.i, i8** %37, align 8, !dbg !6408
  %39 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !6409
  %40 = load i8*, i8** %39, align 8, !dbg !6410
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %40, i64 -2, !dbg !6411
  %41 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_16*, !dbg !6412
  %l.i.i.i = bitcast %union.unaligned_16* %41 to i16*, !dbg !6412
  %42 = load i16, i16* %l.i.i.i, align 1, !dbg !6412
  %conv.i.i.i = zext i16 %42 to i32, !dbg !6413
  store i32 %conv.i.i.i, i32* %retval.i, align 4, !dbg !6414
  br label %bytestream2_get_le16.exit, !dbg !6414

bytestream2_get_le16.exit:                        ; preds = %if.then.i141, %if.end.i
  %43 = load i32, i32* %retval.i, align 4, !dbg !6415
  %conv = trunc i32 %43 to i16, !dbg !6385
  store i16 %conv, i16* %min_non_zero, align 2, !dbg !6417
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i145, align 8, !dbg !6418
  %44 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i145, align 8, !dbg !6419
  %buffer_end.i146 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %44, i32 0, i32 1, !dbg !6420
  %45 = load i8*, i8** %buffer_end.i146, align 8, !dbg !6420
  %46 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i145, align 8, !dbg !6421
  %buffer.i147 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %46, i32 0, i32 0, !dbg !6422
  %47 = load i8*, i8** %buffer.i147, align 8, !dbg !6422
  %sub.ptr.lhs.cast.i148 = ptrtoint i8* %45 to i64, !dbg !6423
  %sub.ptr.rhs.cast.i149 = ptrtoint i8* %47 to i64, !dbg !6423
  %sub.ptr.sub.i150 = sub i64 %sub.ptr.lhs.cast.i148, %sub.ptr.rhs.cast.i149, !dbg !6423
  %cmp.i151 = icmp slt i64 %sub.ptr.sub.i150, 2, !dbg !6424
  br i1 %cmp.i151, label %if.then.i154, label %if.end.i160, !dbg !6425

if.then.i154:                                     ; preds = %bytestream2_get_le16.exit
  %48 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i145, align 8, !dbg !6426
  %buffer_end1.i152 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %48, i32 0, i32 1, !dbg !6427
  %49 = load i8*, i8** %buffer_end1.i152, align 8, !dbg !6427
  %50 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i145, align 8, !dbg !6428
  %buffer2.i153 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %50, i32 0, i32 0, !dbg !6429
  store i8* %49, i8** %buffer2.i153, align 8, !dbg !6430
  store i32 0, i32* %retval.i144, align 4, !dbg !6431
  br label %bytestream2_get_le16.exit161, !dbg !6431

if.end.i160:                                      ; preds = %bytestream2_get_le16.exit
  %51 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i145, align 8, !dbg !6432
  store %struct.GetByteContext* %51, %struct.GetByteContext** %g.addr.i.i143, align 8, !dbg !6433
  %52 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i143, align 8, !dbg !6434
  %buffer.i.i155 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %52, i32 0, i32 0, !dbg !6435
  store i8** %buffer.i.i155, i8*** %b.addr.i.i.i142, align 8, !dbg !6436
  %53 = load i8**, i8*** %b.addr.i.i.i142, align 8, !dbg !6437
  %54 = load i8*, i8** %53, align 8, !dbg !6438
  %add.ptr.i.i.i156 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !6438
  store i8* %add.ptr.i.i.i156, i8** %53, align 8, !dbg !6438
  %55 = load i8**, i8*** %b.addr.i.i.i142, align 8, !dbg !6439
  %56 = load i8*, i8** %55, align 8, !dbg !6440
  %add.ptr1.i.i.i157 = getelementptr inbounds i8, i8* %56, i64 -2, !dbg !6441
  %57 = bitcast i8* %add.ptr1.i.i.i157 to %union.unaligned_16*, !dbg !6442
  %l.i.i.i158 = bitcast %union.unaligned_16* %57 to i16*, !dbg !6442
  %58 = load i16, i16* %l.i.i.i158, align 1, !dbg !6442
  %conv.i.i.i159 = zext i16 %58 to i32, !dbg !6443
  store i32 %conv.i.i.i159, i32* %retval.i144, align 4, !dbg !6444
  br label %bytestream2_get_le16.exit161, !dbg !6444

bytestream2_get_le16.exit161:                     ; preds = %if.then.i154, %if.end.i160
  %59 = load i32, i32* %retval.i144, align 4, !dbg !6445
  %conv26 = trunc i32 %59 to i16, !dbg !6418
  store i16 %conv26, i16* %max_non_zero, align 2, !dbg !6446
  %60 = load i16, i16* %max_non_zero, align 2, !dbg !6447
  %conv27 = zext i16 %60 to i32, !dbg !6447
  %cmp = icmp sge i32 %conv27, 8192, !dbg !6449
  br i1 %cmp, label %if.then29, label %if.end30, !dbg !6450

if.then29:                                        ; preds = %bytestream2_get_le16.exit161
  store i32 -1094995529, i32* %retval, align 4, !dbg !6451
  br label %return, !dbg !6451

if.end30:                                         ; preds = %bytestream2_get_le16.exit161
  %61 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6452
  %bitmap31 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %61, i32 0, i32 4, !dbg !6453
  %62 = load i8*, i8** %bitmap31, align 8, !dbg !6453
  %63 = load i16, i16* %min_non_zero, align 2, !dbg !6454
  %conv32 = zext i16 %63 to i32, !dbg !6455
  %cmp33 = icmp sgt i32 %conv32, 8192, !dbg !6456
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !6455

cond.true:                                        ; preds = %if.end30
  br label %cond.end, !dbg !6457

cond.false:                                       ; preds = %if.end30
  %64 = load i16, i16* %min_non_zero, align 2, !dbg !6459
  %conv35 = zext i16 %64 to i32, !dbg !6461
  br label %cond.end, !dbg !6462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8192, %cond.true ], [ %conv35, %cond.false ], !dbg !6463
  %conv36 = sext i32 %cond to i64, !dbg !6465
  call void @llvm.memset.p0i8.i64(i8* %62, i8 0, i64 %conv36, i32 1, i1 false), !dbg !6466
  %65 = load i16, i16* %min_non_zero, align 2, !dbg !6467
  %conv37 = zext i16 %65 to i32, !dbg !6467
  %66 = load i16, i16* %max_non_zero, align 2, !dbg !6468
  %conv38 = zext i16 %66 to i32, !dbg !6468
  %cmp39 = icmp sle i32 %conv37, %conv38, !dbg !6469
  br i1 %cmp39, label %if.then41, label %if.end47, !dbg !6470

if.then41:                                        ; preds = %cond.end
  %67 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6471
  %bitmap42 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %67, i32 0, i32 4, !dbg !6472
  %68 = load i8*, i8** %bitmap42, align 8, !dbg !6472
  %69 = load i16, i16* %min_non_zero, align 2, !dbg !6473
  %conv43 = zext i16 %69 to i32, !dbg !6473
  %idx.ext = sext i32 %conv43 to i64, !dbg !6474
  %add.ptr = getelementptr inbounds i8, i8* %68, i64 %idx.ext, !dbg !6474
  %70 = load i16, i16* %max_non_zero, align 2, !dbg !6475
  %conv44 = zext i16 %70 to i32, !dbg !6475
  %71 = load i16, i16* %min_non_zero, align 2, !dbg !6476
  %conv45 = zext i16 %71 to i32, !dbg !6476
  %sub = sub nsw i32 %conv44, %conv45, !dbg !6477
  %add = add nsw i32 %sub, 1, !dbg !6478
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6479
  store i8* %add.ptr, i8** %dst.addr.i, align 8, !dbg !6479
  store i32 %add, i32* %size.addr.i, align 4, !dbg !6479
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6480
  %buffer_end.i163 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %72, i32 0, i32 1, !dbg !6481
  %73 = load i8*, i8** %buffer_end.i163, align 8, !dbg !6481
  %74 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6482
  %buffer.i164 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %74, i32 0, i32 0, !dbg !6483
  %75 = load i8*, i8** %buffer.i164, align 8, !dbg !6483
  %sub.ptr.lhs.cast.i165 = ptrtoint i8* %73 to i64, !dbg !6484
  %sub.ptr.rhs.cast.i166 = ptrtoint i8* %75 to i64, !dbg !6484
  %sub.ptr.sub.i167 = sub i64 %sub.ptr.lhs.cast.i165, %sub.ptr.rhs.cast.i166, !dbg !6484
  %76 = load i32, i32* %size.addr.i, align 4, !dbg !6485
  %conv.i = zext i32 %76 to i64, !dbg !6486
  %cmp.i168 = icmp sgt i64 %sub.ptr.sub.i167, %conv.i, !dbg !6487
  br i1 %cmp.i168, label %cond.true.i, label %cond.false.i, !dbg !6488

cond.true.i:                                      ; preds = %if.then41
  %77 = load i32, i32* %size.addr.i, align 4, !dbg !6489
  %conv2.i = zext i32 %77 to i64, !dbg !6490
  br label %bytestream2_get_buffer.exit, !dbg !6491

cond.false.i:                                     ; preds = %if.then41
  %78 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6492
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %78, i32 0, i32 1, !dbg !6493
  %79 = load i8*, i8** %buffer_end3.i, align 8, !dbg !6493
  %80 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6494
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %80, i32 0, i32 0, !dbg !6495
  %81 = load i8*, i8** %buffer4.i, align 8, !dbg !6495
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %79 to i64, !dbg !6496
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %81 to i64, !dbg !6496
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !6496
  br label %bytestream2_get_buffer.exit, !dbg !6497

bytestream2_get_buffer.exit:                      ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !6498
  %conv8.i = trunc i64 %cond.i to i32, !dbg !6499
  store i32 %conv8.i, i32* %size2.i, align 4, !dbg !6500
  %82 = load i8*, i8** %dst.addr.i, align 8, !dbg !6501
  %83 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6502
  %buffer9.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %83, i32 0, i32 0, !dbg !6503
  %84 = load i8*, i8** %buffer9.i, align 8, !dbg !6503
  %85 = load i32, i32* %size2.i, align 4, !dbg !6504
  %conv10.i = sext i32 %85 to i64, !dbg !6504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %84, i64 %conv10.i, i32 1, i1 false) #10, !dbg !6505
  %86 = load i32, i32* %size2.i, align 4, !dbg !6506
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i162, align 8, !dbg !6507
  %buffer11.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 0, !dbg !6508
  %88 = load i8*, i8** %buffer11.i, align 8, !dbg !6509
  %idx.ext.i169 = sext i32 %86 to i64, !dbg !6509
  %add.ptr.i170 = getelementptr inbounds i8, i8* %88, i64 %idx.ext.i169, !dbg !6509
  store i8* %add.ptr.i170, i8** %buffer11.i, align 8, !dbg !6509
  %89 = load i32, i32* %size2.i, align 4, !dbg !6510
  br label %if.end47, !dbg !6479

if.end47:                                         ; preds = %bytestream2_get_buffer.exit, %cond.end
  %90 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6511
  %bitmap48 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %90, i32 0, i32 4, !dbg !6512
  %91 = load i8*, i8** %bitmap48, align 8, !dbg !6512
  %92 = load i16, i16* %max_non_zero, align 2, !dbg !6513
  %conv49 = zext i16 %92 to i32, !dbg !6513
  %idx.ext50 = sext i32 %conv49 to i64, !dbg !6514
  %add.ptr51 = getelementptr inbounds i8, i8* %91, i64 %idx.ext50, !dbg !6514
  %add.ptr52 = getelementptr inbounds i8, i8* %add.ptr51, i64 1, !dbg !6515
  %93 = load i16, i16* %max_non_zero, align 2, !dbg !6516
  %conv53 = zext i16 %93 to i32, !dbg !6516
  %sub54 = sub nsw i32 8192, %conv53, !dbg !6517
  %sub55 = sub nsw i32 %sub54, 1, !dbg !6518
  %conv56 = sext i32 %sub55 to i64, !dbg !6519
  call void @llvm.memset.p0i8.i64(i8* %add.ptr52, i8 0, i64 %conv56, i32 1, i1 false), !dbg !6520
  %94 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6521
  %bitmap57 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %94, i32 0, i32 4, !dbg !6522
  %95 = load i8*, i8** %bitmap57, align 8, !dbg !6522
  %96 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6523
  %lut58 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %96, i32 0, i32 5, !dbg !6524
  %97 = load i16*, i16** %lut58, align 8, !dbg !6524
  %call59 = call zeroext i16 @reverse_lut(i8* %95, i16* %97), !dbg !6525
  store i16 %call59, i16* %maxval, align 2, !dbg !6526
  %98 = load i16*, i16** %tmp, align 8, !dbg !6527
  %99 = load i32, i32* %dsize.addr, align 4, !dbg !6528
  %conv60 = sext i32 %99 to i64, !dbg !6528
  %div = udiv i64 %conv60, 2, !dbg !6529
  %conv61 = trunc i64 %div to i32, !dbg !6528
  %call62 = call i32 @huf_uncompress(%struct.GetByteContext* %gb, i16* %98, i32 %conv61), !dbg !6530
  store i32 %call62, i32* %ret, align 4, !dbg !6531
  %100 = load i32, i32* %ret, align 4, !dbg !6532
  %tobool63 = icmp ne i32 %100, 0, !dbg !6532
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !6534

if.then64:                                        ; preds = %if.end47
  %101 = load i32, i32* %ret, align 4, !dbg !6535
  store i32 %101, i32* %retval, align 4, !dbg !6536
  br label %return, !dbg !6536

if.end65:                                         ; preds = %if.end47
  %102 = load i16*, i16** %tmp, align 8, !dbg !6537
  store i16* %102, i16** %ptr, align 8, !dbg !6538
  store i32 0, i32* %i, align 4, !dbg !6539
  br label %for.cond, !dbg !6541

for.cond:                                         ; preds = %for.inc85, %if.end65
  %103 = load i32, i32* %i, align 4, !dbg !6542
  %104 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6545
  %nb_channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %104, i32 0, i32 24, !dbg !6546
  %105 = load i32, i32* %nb_channels, align 8, !dbg !6546
  %cmp66 = icmp slt i32 %103, %105, !dbg !6547
  br i1 %cmp66, label %for.body, label %for.end87, !dbg !6548

for.body:                                         ; preds = %for.cond
  %106 = load i32, i32* %i, align 4, !dbg !6549
  %idxprom = sext i32 %106 to i64, !dbg !6551
  %107 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6551
  %channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %107, i32 0, i32 23, !dbg !6552
  %108 = load %struct.EXRChannel*, %struct.EXRChannel** %channels, align 8, !dbg !6552
  %arrayidx = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %108, i64 %idxprom, !dbg !6551
  store %struct.EXRChannel* %arrayidx, %struct.EXRChannel** %channel, align 8, !dbg !6553
  %109 = load %struct.EXRChannel*, %struct.EXRChannel** %channel, align 8, !dbg !6554
  %pixel_type = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %109, i32 0, i32 2, !dbg !6556
  %110 = load i32, i32* %pixel_type, align 4, !dbg !6556
  %cmp68 = icmp eq i32 %110, 1, !dbg !6557
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !6558

if.then70:                                        ; preds = %for.body
  store i32 1, i32* %pixel_half_size, align 4, !dbg !6559
  br label %if.end71, !dbg !6560

if.else:                                          ; preds = %for.body
  store i32 2, i32* %pixel_half_size, align 4, !dbg !6561
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then70
  store i32 0, i32* %j, align 4, !dbg !6562
  br label %for.cond72, !dbg !6564

for.cond72:                                       ; preds = %for.inc, %if.end71
  %111 = load i32, i32* %j, align 4, !dbg !6565
  %112 = load i32, i32* %pixel_half_size, align 4, !dbg !6568
  %cmp73 = icmp slt i32 %111, %112, !dbg !6569
  br i1 %cmp73, label %for.body75, label %for.end, !dbg !6570

for.body75:                                       ; preds = %for.cond72
  %113 = load i16*, i16** %ptr, align 8, !dbg !6571
  %114 = load i32, i32* %j, align 4, !dbg !6572
  %idx.ext76 = sext i32 %114 to i64, !dbg !6573
  %add.ptr77 = getelementptr inbounds i16, i16* %113, i64 %idx.ext76, !dbg !6573
  %115 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6574
  %xsize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %115, i32 0, i32 7, !dbg !6575
  %116 = load i32, i32* %xsize, align 4, !dbg !6575
  %117 = load i32, i32* %pixel_half_size, align 4, !dbg !6576
  %118 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6577
  %ysize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %118, i32 0, i32 6, !dbg !6578
  %119 = load i32, i32* %ysize, align 8, !dbg !6578
  %120 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6579
  %xsize78 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %120, i32 0, i32 7, !dbg !6580
  %121 = load i32, i32* %xsize78, align 4, !dbg !6580
  %122 = load i32, i32* %pixel_half_size, align 4, !dbg !6581
  %mul = mul nsw i32 %121, %122, !dbg !6582
  %123 = load i16, i16* %maxval, align 2, !dbg !6583
  call void @wav_decode(i16* %add.ptr77, i32 %116, i32 %117, i32 %119, i32 %mul, i16 zeroext %123), !dbg !6584
  br label %for.inc, !dbg !6584

for.inc:                                          ; preds = %for.body75
  %124 = load i32, i32* %j, align 4, !dbg !6585
  %inc = add nsw i32 %124, 1, !dbg !6585
  store i32 %inc, i32* %j, align 4, !dbg !6585
  br label %for.cond72, !dbg !6587, !llvm.loop !6588

for.end:                                          ; preds = %for.cond72
  %125 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6590
  %xsize79 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %125, i32 0, i32 7, !dbg !6591
  %126 = load i32, i32* %xsize79, align 4, !dbg !6591
  %127 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6592
  %ysize80 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %127, i32 0, i32 6, !dbg !6593
  %128 = load i32, i32* %ysize80, align 8, !dbg !6593
  %mul81 = mul nsw i32 %126, %128, !dbg !6594
  %129 = load i32, i32* %pixel_half_size, align 4, !dbg !6595
  %mul82 = mul nsw i32 %mul81, %129, !dbg !6596
  %130 = load i16*, i16** %ptr, align 8, !dbg !6597
  %idx.ext83 = sext i32 %mul82 to i64, !dbg !6597
  %add.ptr84 = getelementptr inbounds i16, i16* %130, i64 %idx.ext83, !dbg !6597
  store i16* %add.ptr84, i16** %ptr, align 8, !dbg !6597
  br label %for.inc85, !dbg !6598

for.inc85:                                        ; preds = %for.end
  %131 = load i32, i32* %i, align 4, !dbg !6599
  %inc86 = add nsw i32 %131, 1, !dbg !6599
  store i32 %inc86, i32* %i, align 4, !dbg !6599
  br label %for.cond, !dbg !6601, !llvm.loop !6602

for.end87:                                        ; preds = %for.cond
  %132 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6604
  %lut88 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %132, i32 0, i32 5, !dbg !6605
  %133 = load i16*, i16** %lut88, align 8, !dbg !6605
  %134 = load i16*, i16** %tmp, align 8, !dbg !6606
  %135 = load i32, i32* %dsize.addr, align 4, !dbg !6607
  %conv89 = sext i32 %135 to i64, !dbg !6607
  %div90 = udiv i64 %conv89, 2, !dbg !6608
  %conv91 = trunc i64 %div90 to i32, !dbg !6607
  call void @apply_lut(i16* %133, i16* %134, i32 %conv91), !dbg !6609
  %136 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6610
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %136, i32 0, i32 0, !dbg !6611
  %137 = load i8*, i8** %uncompressed_data, align 8, !dbg !6611
  %138 = bitcast i8* %137 to i16*, !dbg !6612
  store i16* %138, i16** %out, align 8, !dbg !6613
  store i32 0, i32* %i, align 4, !dbg !6614
  br label %for.cond92, !dbg !6616

for.cond92:                                       ; preds = %for.inc134, %for.end87
  %139 = load i32, i32* %i, align 4, !dbg !6617
  %140 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6620
  %ysize93 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %140, i32 0, i32 6, !dbg !6621
  %141 = load i32, i32* %ysize93, align 8, !dbg !6621
  %cmp94 = icmp slt i32 %139, %141, !dbg !6622
  br i1 %cmp94, label %for.body96, label %for.end136, !dbg !6623

for.body96:                                       ; preds = %for.cond92
  store i32 0, i32* %tmp_offset, align 4, !dbg !6624
  store i32 0, i32* %j, align 4, !dbg !6626
  br label %for.cond97, !dbg !6628

for.cond97:                                       ; preds = %for.inc131, %for.body96
  %142 = load i32, i32* %j, align 4, !dbg !6629
  %143 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6632
  %nb_channels98 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %143, i32 0, i32 24, !dbg !6633
  %144 = load i32, i32* %nb_channels98, align 8, !dbg !6633
  %cmp99 = icmp slt i32 %142, %144, !dbg !6634
  br i1 %cmp99, label %for.body101, label %for.end133, !dbg !6635

for.body101:                                      ; preds = %for.cond97
  %145 = load i32, i32* %j, align 4, !dbg !6636
  %idxprom102 = sext i32 %145 to i64, !dbg !6638
  %146 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6638
  %channels103 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %146, i32 0, i32 23, !dbg !6639
  %147 = load %struct.EXRChannel*, %struct.EXRChannel** %channels103, align 8, !dbg !6639
  %arrayidx104 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %147, i64 %idxprom102, !dbg !6638
  store %struct.EXRChannel* %arrayidx104, %struct.EXRChannel** %channel, align 8, !dbg !6640
  %148 = load %struct.EXRChannel*, %struct.EXRChannel** %channel, align 8, !dbg !6641
  %pixel_type105 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %148, i32 0, i32 2, !dbg !6643
  %149 = load i32, i32* %pixel_type105, align 4, !dbg !6643
  %cmp106 = icmp eq i32 %149, 1, !dbg !6644
  br i1 %cmp106, label %if.then108, label %if.else109, !dbg !6645

if.then108:                                       ; preds = %for.body101
  store i32 1, i32* %pixel_half_size, align 4, !dbg !6646
  br label %if.end110, !dbg !6647

if.else109:                                       ; preds = %for.body101
  store i32 2, i32* %pixel_half_size, align 4, !dbg !6648
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.then108
  %150 = load i16*, i16** %tmp, align 8, !dbg !6649
  %151 = load i32, i32* %tmp_offset, align 4, !dbg !6650
  %152 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6651
  %xsize111 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %152, i32 0, i32 7, !dbg !6652
  %153 = load i32, i32* %xsize111, align 4, !dbg !6652
  %mul112 = mul nsw i32 %151, %153, !dbg !6653
  %154 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6654
  %ysize113 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %154, i32 0, i32 6, !dbg !6655
  %155 = load i32, i32* %ysize113, align 8, !dbg !6655
  %mul114 = mul nsw i32 %mul112, %155, !dbg !6656
  %idx.ext115 = sext i32 %mul114 to i64, !dbg !6657
  %add.ptr116 = getelementptr inbounds i16, i16* %150, i64 %idx.ext115, !dbg !6657
  %156 = load i32, i32* %i, align 4, !dbg !6658
  %157 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6659
  %xsize117 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %157, i32 0, i32 7, !dbg !6660
  %158 = load i32, i32* %xsize117, align 4, !dbg !6660
  %mul118 = mul nsw i32 %156, %158, !dbg !6661
  %159 = load i32, i32* %pixel_half_size, align 4, !dbg !6662
  %mul119 = mul nsw i32 %mul118, %159, !dbg !6663
  %idx.ext120 = sext i32 %mul119 to i64, !dbg !6664
  %add.ptr121 = getelementptr inbounds i16, i16* %add.ptr116, i64 %idx.ext120, !dbg !6664
  store i16* %add.ptr121, i16** %in, align 8, !dbg !6665
  %160 = load i32, i32* %pixel_half_size, align 4, !dbg !6666
  %161 = load i32, i32* %tmp_offset, align 4, !dbg !6667
  %add122 = add nsw i32 %161, %160, !dbg !6667
  store i32 %add122, i32* %tmp_offset, align 4, !dbg !6667
  %162 = load i16*, i16** %out, align 8, !dbg !6668
  %163 = bitcast i16* %162 to i8*, !dbg !6669
  %164 = load i16*, i16** %in, align 8, !dbg !6670
  %165 = bitcast i16* %164 to i8*, !dbg !6669
  %166 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6671
  %xsize123 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %166, i32 0, i32 7, !dbg !6672
  %167 = load i32, i32* %xsize123, align 4, !dbg !6672
  %mul124 = mul nsw i32 %167, 2, !dbg !6673
  %168 = load i32, i32* %pixel_half_size, align 4, !dbg !6674
  %mul125 = mul nsw i32 %mul124, %168, !dbg !6675
  %conv126 = sext i32 %mul125 to i64, !dbg !6671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %165, i64 %conv126, i32 2, i1 false), !dbg !6669
  %169 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6676
  %xsize127 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %169, i32 0, i32 7, !dbg !6677
  %170 = load i32, i32* %xsize127, align 4, !dbg !6677
  %171 = load i32, i32* %pixel_half_size, align 4, !dbg !6678
  %mul128 = mul nsw i32 %170, %171, !dbg !6679
  %172 = load i16*, i16** %out, align 8, !dbg !6680
  %idx.ext129 = sext i32 %mul128 to i64, !dbg !6680
  %add.ptr130 = getelementptr inbounds i16, i16* %172, i64 %idx.ext129, !dbg !6680
  store i16* %add.ptr130, i16** %out, align 8, !dbg !6680
  br label %for.inc131, !dbg !6681

for.inc131:                                       ; preds = %if.end110
  %173 = load i32, i32* %j, align 4, !dbg !6682
  %inc132 = add nsw i32 %173, 1, !dbg !6682
  store i32 %inc132, i32* %j, align 4, !dbg !6682
  br label %for.cond97, !dbg !6684, !llvm.loop !6685

for.end133:                                       ; preds = %for.cond97
  br label %for.inc134, !dbg !6687

for.inc134:                                       ; preds = %for.end133
  %174 = load i32, i32* %i, align 4, !dbg !6688
  %inc135 = add nsw i32 %174, 1, !dbg !6688
  store i32 %inc135, i32* %i, align 4, !dbg !6688
  br label %for.cond92, !dbg !6690, !llvm.loop !6691

for.end136:                                       ; preds = %for.cond92
  store i32 0, i32* %retval, align 4, !dbg !6693
  br label %return, !dbg !6693

return:                                           ; preds = %for.end136, %if.then64, %if.then29, %if.then20
  %175 = load i32, i32* %retval, align 4, !dbg !6694
  ret i32 %175, !dbg !6694
}

; Function Attrs: nounwind uwtable
define internal i32 @pxr24_uncompress(%struct.EXRContext* %s, i8* %src, i32 %compressed_size, i32 %uncompressed_size, %struct.EXRThreadData* %td) #0 !dbg !6695 {
entry:
  %b.addr.i179 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i179, metadata !6696, metadata !1741), !dbg !6701
  %value.addr.i180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i180, metadata !6712, metadata !1741), !dbg !6713
  %b.addr.i175 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i175, metadata !6714, metadata !1741), !dbg !6716
  %value.addr.i176 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i176, metadata !6721, metadata !1741), !dbg !6722
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !6714, metadata !1741), !dbg !6723
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !6721, metadata !1741), !dbg !6728
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.EXRContext*, align 8
  %src.addr = alloca i8*, align 8
  %compressed_size.addr = alloca i32, align 4
  %uncompressed_size.addr = alloca i32, align 4
  %td.addr = alloca %struct.EXRThreadData*, align 8
  %dest_len = alloca i64, align 8
  %expected_len = alloca i64, align 8
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %channel = alloca %struct.EXRChannel*, align 8
  %ptr = alloca [4 x i8*], align 16
  %pixel = alloca i32, align 4
  %diff = alloca i32, align 4
  %diff107 = alloca i32, align 4
  %diff146 = alloca i32, align 4
  store %struct.EXRContext* %s, %struct.EXRContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s.addr, metadata !6729, metadata !1741), !dbg !6730
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6731, metadata !1741), !dbg !6732
  store i32 %compressed_size, i32* %compressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compressed_size.addr, metadata !6733, metadata !1741), !dbg !6734
  store i32 %uncompressed_size, i32* %uncompressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uncompressed_size.addr, metadata !6735, metadata !1741), !dbg !6736
  store %struct.EXRThreadData* %td, %struct.EXRThreadData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td.addr, metadata !6737, metadata !1741), !dbg !6738
  call void @llvm.dbg.declare(metadata i64* %dest_len, metadata !6739, metadata !1741), !dbg !6740
  call void @llvm.dbg.declare(metadata i64* %expected_len, metadata !6741, metadata !1741), !dbg !6742
  store i64 0, i64* %expected_len, align 8, !dbg !6742
  call void @llvm.dbg.declare(metadata i8** %in, metadata !6743, metadata !1741), !dbg !6744
  %0 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6745
  %tmp = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %0, i32 0, i32 2, !dbg !6746
  %1 = load i8*, i8** %tmp, align 8, !dbg !6746
  store i8* %1, i8** %in, align 8, !dbg !6744
  call void @llvm.dbg.declare(metadata i8** %out, metadata !6747, metadata !1741), !dbg !6748
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6749, metadata !1741), !dbg !6750
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6751, metadata !1741), !dbg !6752
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6753, metadata !1741), !dbg !6754
  store i32 0, i32* %i, align 4, !dbg !6755
  br label %for.cond, !dbg !6757

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6758
  %3 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6761
  %nb_channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %3, i32 0, i32 24, !dbg !6762
  %4 = load i32, i32* %nb_channels, align 8, !dbg !6762
  %cmp = icmp slt i32 %2, %4, !dbg !6763
  br i1 %cmp, label %for.body, label %for.end, !dbg !6764

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !6765
  %idxprom = sext i32 %5 to i64, !dbg !6768
  %6 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6768
  %channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %6, i32 0, i32 23, !dbg !6769
  %7 = load %struct.EXRChannel*, %struct.EXRChannel** %channels, align 8, !dbg !6769
  %arrayidx = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %7, i64 %idxprom, !dbg !6768
  %pixel_type = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %arrayidx, i32 0, i32 2, !dbg !6770
  %8 = load i32, i32* %pixel_type, align 4, !dbg !6770
  %cmp5 = icmp eq i32 %8, 2, !dbg !6771
  br i1 %cmp5, label %if.then, label %if.else, !dbg !6772

if.then:                                          ; preds = %for.body
  %9 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6773
  %xsize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %9, i32 0, i32 7, !dbg !6775
  %10 = load i32, i32* %xsize, align 4, !dbg !6775
  %11 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6776
  %ysize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %11, i32 0, i32 6, !dbg !6777
  %12 = load i32, i32* %ysize, align 8, !dbg !6777
  %mul = mul nsw i32 %10, %12, !dbg !6778
  %mul6 = mul nsw i32 %mul, 3, !dbg !6779
  %conv = sext i32 %mul6 to i64, !dbg !6780
  %13 = load i64, i64* %expected_len, align 8, !dbg !6781
  %add = add i64 %13, %conv, !dbg !6781
  store i64 %add, i64* %expected_len, align 8, !dbg !6781
  br label %if.end27, !dbg !6782

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6783
  %idxprom7 = sext i32 %14 to i64, !dbg !6786
  %15 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6786
  %channels8 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %15, i32 0, i32 23, !dbg !6787
  %16 = load %struct.EXRChannel*, %struct.EXRChannel** %channels8, align 8, !dbg !6787
  %arrayidx9 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %16, i64 %idxprom7, !dbg !6786
  %pixel_type10 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %arrayidx9, i32 0, i32 2, !dbg !6788
  %17 = load i32, i32* %pixel_type10, align 4, !dbg !6788
  %cmp11 = icmp eq i32 %17, 1, !dbg !6789
  br i1 %cmp11, label %if.then13, label %if.else20, !dbg !6786

if.then13:                                        ; preds = %if.else
  %18 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6790
  %xsize14 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %18, i32 0, i32 7, !dbg !6792
  %19 = load i32, i32* %xsize14, align 4, !dbg !6792
  %20 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6793
  %ysize15 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %20, i32 0, i32 6, !dbg !6794
  %21 = load i32, i32* %ysize15, align 8, !dbg !6794
  %mul16 = mul nsw i32 %19, %21, !dbg !6795
  %mul17 = mul nsw i32 %mul16, 2, !dbg !6796
  %conv18 = sext i32 %mul17 to i64, !dbg !6797
  %22 = load i64, i64* %expected_len, align 8, !dbg !6798
  %add19 = add i64 %22, %conv18, !dbg !6798
  store i64 %add19, i64* %expected_len, align 8, !dbg !6798
  br label %if.end, !dbg !6799

if.else20:                                        ; preds = %if.else
  %23 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6800
  %xsize21 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %23, i32 0, i32 7, !dbg !6802
  %24 = load i32, i32* %xsize21, align 4, !dbg !6802
  %25 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6803
  %ysize22 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %25, i32 0, i32 6, !dbg !6804
  %26 = load i32, i32* %ysize22, align 8, !dbg !6804
  %mul23 = mul nsw i32 %24, %26, !dbg !6805
  %mul24 = mul nsw i32 %mul23, 4, !dbg !6806
  %conv25 = sext i32 %mul24 to i64, !dbg !6807
  %27 = load i64, i64* %expected_len, align 8, !dbg !6808
  %add26 = add i64 %27, %conv25, !dbg !6808
  store i64 %add26, i64* %expected_len, align 8, !dbg !6808
  br label %if.end

if.end:                                           ; preds = %if.else20, %if.then13
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !6809

for.inc:                                          ; preds = %if.end27
  %28 = load i32, i32* %i, align 4, !dbg !6810
  %inc = add nsw i32 %28, 1, !dbg !6810
  store i32 %inc, i32* %i, align 4, !dbg !6810
  br label %for.cond, !dbg !6812, !llvm.loop !6813

for.end:                                          ; preds = %for.cond
  %29 = load i64, i64* %expected_len, align 8, !dbg !6815
  store i64 %29, i64* %dest_len, align 8, !dbg !6816
  %30 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6817
  %tmp28 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %30, i32 0, i32 2, !dbg !6819
  %31 = load i8*, i8** %tmp28, align 8, !dbg !6819
  %32 = load i8*, i8** %src.addr, align 8, !dbg !6820
  %33 = load i32, i32* %compressed_size.addr, align 4, !dbg !6821
  %conv29 = sext i32 %33 to i64, !dbg !6821
  %call = call i32 @uncompress(i8* %31, i64* %dest_len, i8* %32, i64 %conv29), !dbg !6822
  %cmp30 = icmp ne i32 %call, 0, !dbg !6823
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !6824

if.then32:                                        ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !6825
  br label %return, !dbg !6825

if.else33:                                        ; preds = %for.end
  %34 = load i64, i64* %dest_len, align 8, !dbg !6827
  %35 = load i64, i64* %expected_len, align 8, !dbg !6829
  %cmp34 = icmp ne i64 %34, %35, !dbg !6830
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6831

if.then36:                                        ; preds = %if.else33
  store i32 -1094995529, i32* %retval, align 4, !dbg !6832
  br label %return, !dbg !6832

if.end37:                                         ; preds = %if.else33
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %36 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6834
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %36, i32 0, i32 0, !dbg !6835
  %37 = load i8*, i8** %uncompressed_data, align 8, !dbg !6835
  store i8* %37, i8** %out, align 8, !dbg !6836
  store i32 0, i32* %i, align 4, !dbg !6837
  br label %for.cond39, !dbg !6838

for.cond39:                                       ; preds = %for.inc172, %if.end38
  %38 = load i32, i32* %i, align 4, !dbg !6839
  %39 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6841
  %ysize40 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %39, i32 0, i32 6, !dbg !6842
  %40 = load i32, i32* %ysize40, align 8, !dbg !6842
  %cmp41 = icmp slt i32 %38, %40, !dbg !6843
  br i1 %cmp41, label %for.body43, label %for.end174, !dbg !6844

for.body43:                                       ; preds = %for.cond39
  store i32 0, i32* %c, align 4, !dbg !6845
  br label %for.cond44, !dbg !6846

for.cond44:                                       ; preds = %for.inc169, %for.body43
  %41 = load i32, i32* %c, align 4, !dbg !6847
  %42 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6849
  %nb_channels45 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %42, i32 0, i32 24, !dbg !6850
  %43 = load i32, i32* %nb_channels45, align 8, !dbg !6850
  %cmp46 = icmp slt i32 %41, %43, !dbg !6851
  br i1 %cmp46, label %for.body48, label %for.end171, !dbg !6852

for.body48:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata %struct.EXRChannel** %channel, metadata !6853, metadata !1741), !dbg !6854
  %44 = load i32, i32* %c, align 4, !dbg !6855
  %idxprom50 = sext i32 %44 to i64, !dbg !6856
  %45 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6856
  %channels51 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %45, i32 0, i32 23, !dbg !6857
  %46 = load %struct.EXRChannel*, %struct.EXRChannel** %channels51, align 8, !dbg !6857
  %arrayidx52 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %46, i64 %idxprom50, !dbg !6856
  store %struct.EXRChannel* %arrayidx52, %struct.EXRChannel** %channel, align 8, !dbg !6854
  call void @llvm.dbg.declare(metadata [4 x i8*]* %ptr, metadata !6858, metadata !1741), !dbg !6859
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !6860, metadata !1741), !dbg !6861
  store i32 0, i32* %pixel, align 4, !dbg !6861
  %47 = load %struct.EXRChannel*, %struct.EXRChannel** %channel, align 8, !dbg !6862
  %pixel_type55 = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %47, i32 0, i32 2, !dbg !6863
  %48 = load i32, i32* %pixel_type55, align 4, !dbg !6863
  switch i32 %48, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb90
    i32 0, label %sw.bb120
  ], !dbg !6864

sw.bb:                                            ; preds = %for.body48
  %49 = load i8*, i8** %in, align 8, !dbg !6865
  %arrayidx56 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6866
  store i8* %49, i8** %arrayidx56, align 16, !dbg !6867
  %arrayidx57 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6868
  %50 = load i8*, i8** %arrayidx57, align 16, !dbg !6868
  %51 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6869
  %xsize58 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %51, i32 0, i32 7, !dbg !6870
  %52 = load i32, i32* %xsize58, align 4, !dbg !6870
  %idx.ext = sext i32 %52 to i64, !dbg !6871
  %add.ptr = getelementptr inbounds i8, i8* %50, i64 %idx.ext, !dbg !6871
  %arrayidx59 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6872
  store i8* %add.ptr, i8** %arrayidx59, align 8, !dbg !6873
  %arrayidx60 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6874
  %53 = load i8*, i8** %arrayidx60, align 8, !dbg !6874
  %54 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6875
  %xsize61 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %54, i32 0, i32 7, !dbg !6876
  %55 = load i32, i32* %xsize61, align 4, !dbg !6876
  %idx.ext62 = sext i32 %55 to i64, !dbg !6877
  %add.ptr63 = getelementptr inbounds i8, i8* %53, i64 %idx.ext62, !dbg !6877
  %arrayidx64 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 2, !dbg !6878
  store i8* %add.ptr63, i8** %arrayidx64, align 16, !dbg !6879
  %arrayidx65 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 2, !dbg !6880
  %56 = load i8*, i8** %arrayidx65, align 16, !dbg !6880
  %57 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6881
  %xsize66 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %57, i32 0, i32 7, !dbg !6882
  %58 = load i32, i32* %xsize66, align 4, !dbg !6882
  %idx.ext67 = sext i32 %58 to i64, !dbg !6883
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %idx.ext67, !dbg !6883
  store i8* %add.ptr68, i8** %in, align 8, !dbg !6884
  store i32 0, i32* %j, align 4, !dbg !6885
  br label %for.cond69, !dbg !6886

for.cond69:                                       ; preds = %for.inc87, %sw.bb
  %59 = load i32, i32* %j, align 4, !dbg !6887
  %60 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6889
  %xsize70 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %60, i32 0, i32 7, !dbg !6890
  %61 = load i32, i32* %xsize70, align 4, !dbg !6890
  %cmp71 = icmp slt i32 %59, %61, !dbg !6891
  br i1 %cmp71, label %for.body73, label %for.end89, !dbg !6892

for.body73:                                       ; preds = %for.cond69
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6893, metadata !1741), !dbg !6894
  %arrayidx75 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6895
  %62 = load i8*, i8** %arrayidx75, align 16, !dbg !6896
  %incdec.ptr = getelementptr inbounds i8, i8* %62, i32 1, !dbg !6896
  store i8* %incdec.ptr, i8** %arrayidx75, align 16, !dbg !6896
  %63 = load i8, i8* %62, align 1, !dbg !6897
  %conv76 = zext i8 %63 to i32, !dbg !6898
  %shl = shl i32 %conv76, 24, !dbg !6899
  %arrayidx77 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6900
  %64 = load i8*, i8** %arrayidx77, align 8, !dbg !6901
  %incdec.ptr78 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !6901
  store i8* %incdec.ptr78, i8** %arrayidx77, align 8, !dbg !6901
  %65 = load i8, i8* %64, align 1, !dbg !6902
  %conv79 = zext i8 %65 to i32, !dbg !6902
  %shl80 = shl i32 %conv79, 16, !dbg !6903
  %or = or i32 %shl, %shl80, !dbg !6904
  %arrayidx81 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 2, !dbg !6905
  %66 = load i8*, i8** %arrayidx81, align 16, !dbg !6906
  %incdec.ptr82 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !6906
  store i8* %incdec.ptr82, i8** %arrayidx81, align 16, !dbg !6906
  %67 = load i8, i8* %66, align 1, !dbg !6907
  %conv83 = zext i8 %67 to i32, !dbg !6907
  %shl84 = shl i32 %conv83, 8, !dbg !6908
  %or85 = or i32 %or, %shl84, !dbg !6909
  store i32 %or85, i32* %diff, align 4, !dbg !6894
  %68 = load i32, i32* %diff, align 4, !dbg !6910
  %69 = load i32, i32* %pixel, align 4, !dbg !6911
  %add86 = add i32 %69, %68, !dbg !6911
  store i32 %add86, i32* %pixel, align 4, !dbg !6911
  %70 = load i32, i32* %pixel, align 4, !dbg !6912
  store i8** %out, i8*** %b.addr.i, align 8, !dbg !6913
  store i32 %70, i32* %value.addr.i, align 4, !dbg !6913
  %71 = load i32, i32* %value.addr.i, align 4, !dbg !6914
  %72 = load i8**, i8*** %b.addr.i, align 8, !dbg !6915
  %73 = load i8*, i8** %72, align 8, !dbg !6916
  %74 = bitcast i8* %73 to %union.unaligned_32*, !dbg !6917
  %l.i = bitcast %union.unaligned_32* %74 to i32*, !dbg !6917
  store i32 %71, i32* %l.i, align 1, !dbg !6918
  %75 = load i8**, i8*** %b.addr.i, align 8, !dbg !6919
  %76 = load i8*, i8** %75, align 8, !dbg !6920
  %add.ptr.i = getelementptr inbounds i8, i8* %76, i64 4, !dbg !6920
  store i8* %add.ptr.i, i8** %75, align 8, !dbg !6920
  br label %for.inc87, !dbg !6921

for.inc87:                                        ; preds = %for.body73
  %77 = load i32, i32* %j, align 4, !dbg !6922
  %inc88 = add nsw i32 %77, 1, !dbg !6922
  store i32 %inc88, i32* %j, align 4, !dbg !6922
  br label %for.cond69, !dbg !6924, !llvm.loop !6925

for.end89:                                        ; preds = %for.cond69
  br label %sw.epilog, !dbg !6927

sw.bb90:                                          ; preds = %for.body48
  %78 = load i8*, i8** %in, align 8, !dbg !6928
  %arrayidx91 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6929
  store i8* %78, i8** %arrayidx91, align 16, !dbg !6930
  %arrayidx92 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6931
  %79 = load i8*, i8** %arrayidx92, align 16, !dbg !6931
  %80 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6932
  %xsize93 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %80, i32 0, i32 7, !dbg !6933
  %81 = load i32, i32* %xsize93, align 4, !dbg !6933
  %idx.ext94 = sext i32 %81 to i64, !dbg !6934
  %add.ptr95 = getelementptr inbounds i8, i8* %79, i64 %idx.ext94, !dbg !6934
  %arrayidx96 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6935
  store i8* %add.ptr95, i8** %arrayidx96, align 8, !dbg !6936
  %arrayidx97 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6937
  %82 = load i8*, i8** %arrayidx97, align 8, !dbg !6937
  %83 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6938
  %xsize98 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %83, i32 0, i32 7, !dbg !6939
  %84 = load i32, i32* %xsize98, align 4, !dbg !6939
  %idx.ext99 = sext i32 %84 to i64, !dbg !6940
  %add.ptr100 = getelementptr inbounds i8, i8* %82, i64 %idx.ext99, !dbg !6940
  store i8* %add.ptr100, i8** %in, align 8, !dbg !6941
  store i32 0, i32* %j, align 4, !dbg !6942
  br label %for.cond101, !dbg !6943

for.cond101:                                      ; preds = %for.inc117, %sw.bb90
  %85 = load i32, i32* %j, align 4, !dbg !6944
  %86 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !6946
  %xsize102 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %86, i32 0, i32 7, !dbg !6947
  %87 = load i32, i32* %xsize102, align 4, !dbg !6947
  %cmp103 = icmp slt i32 %85, %87, !dbg !6948
  br i1 %cmp103, label %for.body105, label %for.end119, !dbg !6949

for.body105:                                      ; preds = %for.cond101
  call void @llvm.dbg.declare(metadata i32* %diff107, metadata !6950, metadata !1741), !dbg !6951
  %arrayidx108 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6952
  %88 = load i8*, i8** %arrayidx108, align 16, !dbg !6953
  %incdec.ptr109 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !6953
  store i8* %incdec.ptr109, i8** %arrayidx108, align 16, !dbg !6953
  %89 = load i8, i8* %88, align 1, !dbg !6954
  %conv110 = zext i8 %89 to i32, !dbg !6954
  %shl111 = shl i32 %conv110, 8, !dbg !6955
  %arrayidx112 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6956
  %90 = load i8*, i8** %arrayidx112, align 8, !dbg !6957
  %incdec.ptr113 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !6957
  store i8* %incdec.ptr113, i8** %arrayidx112, align 8, !dbg !6957
  %91 = load i8, i8* %90, align 1, !dbg !6958
  %conv114 = zext i8 %91 to i32, !dbg !6958
  %or115 = or i32 %shl111, %conv114, !dbg !6959
  store i32 %or115, i32* %diff107, align 4, !dbg !6951
  %92 = load i32, i32* %diff107, align 4, !dbg !6960
  %93 = load i32, i32* %pixel, align 4, !dbg !6961
  %add116 = add i32 %93, %92, !dbg !6961
  store i32 %add116, i32* %pixel, align 4, !dbg !6961
  %94 = load i32, i32* %pixel, align 4, !dbg !6962
  store i8** %out, i8*** %b.addr.i179, align 8, !dbg !6963
  store i32 %94, i32* %value.addr.i180, align 4, !dbg !6963
  %95 = load i32, i32* %value.addr.i180, align 4, !dbg !6964
  %conv.i = trunc i32 %95 to i16, !dbg !6965
  %96 = load i8**, i8*** %b.addr.i179, align 8, !dbg !6966
  %97 = load i8*, i8** %96, align 8, !dbg !6967
  %98 = bitcast i8* %97 to %union.unaligned_16*, !dbg !6968
  %l.i181 = bitcast %union.unaligned_16* %98 to i16*, !dbg !6968
  store i16 %conv.i, i16* %l.i181, align 1, !dbg !6969
  %99 = load i8**, i8*** %b.addr.i179, align 8, !dbg !6970
  %100 = load i8*, i8** %99, align 8, !dbg !6971
  %add.ptr.i182 = getelementptr inbounds i8, i8* %100, i64 2, !dbg !6971
  store i8* %add.ptr.i182, i8** %99, align 8, !dbg !6971
  br label %for.inc117, !dbg !6972

for.inc117:                                       ; preds = %for.body105
  %101 = load i32, i32* %j, align 4, !dbg !6973
  %inc118 = add nsw i32 %101, 1, !dbg !6973
  store i32 %inc118, i32* %j, align 4, !dbg !6973
  br label %for.cond101, !dbg !6975, !llvm.loop !6976

for.end119:                                       ; preds = %for.cond101
  br label %sw.epilog, !dbg !6978

sw.bb120:                                         ; preds = %for.body48
  %102 = load i8*, i8** %in, align 8, !dbg !6979
  %arrayidx121 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6980
  store i8* %102, i8** %arrayidx121, align 16, !dbg !6981
  %arrayidx122 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !6982
  %103 = load i8*, i8** %arrayidx122, align 16, !dbg !6982
  %104 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6983
  %xdelta = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %104, i32 0, i32 14, !dbg !6984
  %105 = load i32, i32* %xdelta, align 8, !dbg !6984
  %idx.ext123 = zext i32 %105 to i64, !dbg !6985
  %add.ptr124 = getelementptr inbounds i8, i8* %103, i64 %idx.ext123, !dbg !6985
  %arrayidx125 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6986
  store i8* %add.ptr124, i8** %arrayidx125, align 8, !dbg !6987
  %arrayidx126 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !6988
  %106 = load i8*, i8** %arrayidx126, align 8, !dbg !6988
  %107 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6989
  %xdelta127 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %107, i32 0, i32 14, !dbg !6990
  %108 = load i32, i32* %xdelta127, align 8, !dbg !6990
  %idx.ext128 = zext i32 %108 to i64, !dbg !6991
  %add.ptr129 = getelementptr inbounds i8, i8* %106, i64 %idx.ext128, !dbg !6991
  %arrayidx130 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 2, !dbg !6992
  store i8* %add.ptr129, i8** %arrayidx130, align 16, !dbg !6993
  %arrayidx131 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 2, !dbg !6994
  %109 = load i8*, i8** %arrayidx131, align 16, !dbg !6994
  %110 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !6995
  %xdelta132 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %110, i32 0, i32 14, !dbg !6996
  %111 = load i32, i32* %xdelta132, align 8, !dbg !6996
  %idx.ext133 = zext i32 %111 to i64, !dbg !6997
  %add.ptr134 = getelementptr inbounds i8, i8* %109, i64 %idx.ext133, !dbg !6997
  %arrayidx135 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 3, !dbg !6998
  store i8* %add.ptr134, i8** %arrayidx135, align 8, !dbg !6999
  %arrayidx136 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 3, !dbg !7000
  %112 = load i8*, i8** %arrayidx136, align 8, !dbg !7000
  %113 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7001
  %xdelta137 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %113, i32 0, i32 14, !dbg !7002
  %114 = load i32, i32* %xdelta137, align 8, !dbg !7002
  %idx.ext138 = zext i32 %114 to i64, !dbg !7003
  %add.ptr139 = getelementptr inbounds i8, i8* %112, i64 %idx.ext138, !dbg !7003
  store i8* %add.ptr139, i8** %in, align 8, !dbg !7004
  store i32 0, i32* %j, align 4, !dbg !7005
  br label %for.cond140, !dbg !7006

for.cond140:                                      ; preds = %for.inc166, %sw.bb120
  %115 = load i32, i32* %j, align 4, !dbg !7007
  %116 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7009
  %xdelta141 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %116, i32 0, i32 14, !dbg !7010
  %117 = load i32, i32* %xdelta141, align 8, !dbg !7010
  %cmp142 = icmp ult i32 %115, %117, !dbg !7011
  br i1 %cmp142, label %for.body144, label %for.end168, !dbg !7012

for.body144:                                      ; preds = %for.cond140
  call void @llvm.dbg.declare(metadata i32* %diff146, metadata !7013, metadata !1741), !dbg !7014
  %arrayidx147 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 0, !dbg !7015
  %118 = load i8*, i8** %arrayidx147, align 16, !dbg !7016
  %incdec.ptr148 = getelementptr inbounds i8, i8* %118, i32 1, !dbg !7016
  store i8* %incdec.ptr148, i8** %arrayidx147, align 16, !dbg !7016
  %119 = load i8, i8* %118, align 1, !dbg !7017
  %conv149 = zext i8 %119 to i32, !dbg !7017
  %shl150 = shl i32 %conv149, 24, !dbg !7018
  %arrayidx151 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 1, !dbg !7019
  %120 = load i8*, i8** %arrayidx151, align 8, !dbg !7020
  %incdec.ptr152 = getelementptr inbounds i8, i8* %120, i32 1, !dbg !7020
  store i8* %incdec.ptr152, i8** %arrayidx151, align 8, !dbg !7020
  %121 = load i8, i8* %120, align 1, !dbg !7021
  %conv153 = zext i8 %121 to i32, !dbg !7021
  %shl154 = shl i32 %conv153, 16, !dbg !7022
  %or155 = or i32 %shl150, %shl154, !dbg !7023
  %arrayidx156 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 2, !dbg !7024
  %122 = load i8*, i8** %arrayidx156, align 16, !dbg !7025
  %incdec.ptr157 = getelementptr inbounds i8, i8* %122, i32 1, !dbg !7025
  store i8* %incdec.ptr157, i8** %arrayidx156, align 16, !dbg !7025
  %123 = load i8, i8* %122, align 1, !dbg !7026
  %conv158 = zext i8 %123 to i32, !dbg !7026
  %shl159 = shl i32 %conv158, 8, !dbg !7027
  %or160 = or i32 %or155, %shl159, !dbg !7028
  %arrayidx161 = getelementptr inbounds [4 x i8*], [4 x i8*]* %ptr, i64 0, i64 3, !dbg !7029
  %124 = load i8*, i8** %arrayidx161, align 8, !dbg !7030
  %incdec.ptr162 = getelementptr inbounds i8, i8* %124, i32 1, !dbg !7030
  store i8* %incdec.ptr162, i8** %arrayidx161, align 8, !dbg !7030
  %125 = load i8, i8* %124, align 1, !dbg !7031
  %conv163 = zext i8 %125 to i32, !dbg !7032
  %or164 = or i32 %or160, %conv163, !dbg !7033
  store i32 %or164, i32* %diff146, align 4, !dbg !7014
  %126 = load i32, i32* %diff146, align 4, !dbg !7034
  %127 = load i32, i32* %pixel, align 4, !dbg !7035
  %add165 = add i32 %127, %126, !dbg !7035
  store i32 %add165, i32* %pixel, align 4, !dbg !7035
  %128 = load i32, i32* %pixel, align 4, !dbg !7036
  store i8** %out, i8*** %b.addr.i175, align 8, !dbg !7037
  store i32 %128, i32* %value.addr.i176, align 4, !dbg !7037
  %129 = load i32, i32* %value.addr.i176, align 4, !dbg !7038
  %130 = load i8**, i8*** %b.addr.i175, align 8, !dbg !7039
  %131 = load i8*, i8** %130, align 8, !dbg !7040
  %132 = bitcast i8* %131 to %union.unaligned_32*, !dbg !7041
  %l.i177 = bitcast %union.unaligned_32* %132 to i32*, !dbg !7041
  store i32 %129, i32* %l.i177, align 1, !dbg !7042
  %133 = load i8**, i8*** %b.addr.i175, align 8, !dbg !7043
  %134 = load i8*, i8** %133, align 8, !dbg !7044
  %add.ptr.i178 = getelementptr inbounds i8, i8* %134, i64 4, !dbg !7044
  store i8* %add.ptr.i178, i8** %133, align 8, !dbg !7044
  br label %for.inc166, !dbg !7045

for.inc166:                                       ; preds = %for.body144
  %135 = load i32, i32* %j, align 4, !dbg !7046
  %inc167 = add nsw i32 %135, 1, !dbg !7046
  store i32 %inc167, i32* %j, align 4, !dbg !7046
  br label %for.cond140, !dbg !7048, !llvm.loop !7049

for.end168:                                       ; preds = %for.cond140
  br label %sw.epilog, !dbg !7051

sw.default:                                       ; preds = %for.body48
  store i32 -1094995529, i32* %retval, align 4, !dbg !7052
  br label %return, !dbg !7052

sw.epilog:                                        ; preds = %for.end168, %for.end119, %for.end89
  br label %for.inc169, !dbg !7053

for.inc169:                                       ; preds = %sw.epilog
  %136 = load i32, i32* %c, align 4, !dbg !7054
  %inc170 = add nsw i32 %136, 1, !dbg !7054
  store i32 %inc170, i32* %c, align 4, !dbg !7054
  br label %for.cond44, !dbg !7056, !llvm.loop !7057

for.end171:                                       ; preds = %for.cond44
  br label %for.inc172, !dbg !7059

for.inc172:                                       ; preds = %for.end171
  %137 = load i32, i32* %i, align 4, !dbg !7061
  %inc173 = add nsw i32 %137, 1, !dbg !7061
  store i32 %inc173, i32* %i, align 4, !dbg !7061
  br label %for.cond39, !dbg !7063, !llvm.loop !7064

for.end174:                                       ; preds = %for.cond39
  store i32 0, i32* %retval, align 4, !dbg !7066
  br label %return, !dbg !7066

return:                                           ; preds = %for.end174, %sw.default, %if.then36, %if.then32
  %138 = load i32, i32* %retval, align 4, !dbg !7067
  ret i32 %138, !dbg !7067
}

; Function Attrs: nounwind uwtable
define internal i32 @rle_uncompress(%struct.EXRContext* %ctx, i8* %src, i32 %compressed_size, i32 %uncompressed_size, %struct.EXRThreadData* %td) #0 !dbg !7068 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.EXRContext*, align 8
  %src.addr = alloca i8*, align 8
  %compressed_size.addr = alloca i32, align 4
  %uncompressed_size.addr = alloca i32, align 4
  %td.addr = alloca %struct.EXRThreadData*, align 8
  %d = alloca i8*, align 8
  %s = alloca i8*, align 8
  %ssize = alloca i32, align 4
  %dsize = alloca i32, align 4
  %dend = alloca i8*, align 8
  %count = alloca i32, align 4
  store %struct.EXRContext* %ctx, %struct.EXRContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %ctx.addr, metadata !7069, metadata !1741), !dbg !7070
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7071, metadata !1741), !dbg !7072
  store i32 %compressed_size, i32* %compressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compressed_size.addr, metadata !7073, metadata !1741), !dbg !7074
  store i32 %uncompressed_size, i32* %uncompressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uncompressed_size.addr, metadata !7075, metadata !1741), !dbg !7076
  store %struct.EXRThreadData* %td, %struct.EXRThreadData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td.addr, metadata !7077, metadata !1741), !dbg !7078
  call void @llvm.dbg.declare(metadata i8** %d, metadata !7079, metadata !1741), !dbg !7080
  %0 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7081
  %tmp = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %0, i32 0, i32 2, !dbg !7082
  %1 = load i8*, i8** %tmp, align 8, !dbg !7082
  store i8* %1, i8** %d, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i8** %s, metadata !7083, metadata !1741), !dbg !7086
  %2 = load i8*, i8** %src.addr, align 8, !dbg !7087
  store i8* %2, i8** %s, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %ssize, metadata !7088, metadata !1741), !dbg !7089
  %3 = load i32, i32* %compressed_size.addr, align 4, !dbg !7090
  store i32 %3, i32* %ssize, align 4, !dbg !7089
  call void @llvm.dbg.declare(metadata i32* %dsize, metadata !7091, metadata !1741), !dbg !7092
  %4 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !7093
  store i32 %4, i32* %dsize, align 4, !dbg !7092
  call void @llvm.dbg.declare(metadata i8** %dend, metadata !7094, metadata !1741), !dbg !7095
  %5 = load i8*, i8** %d, align 8, !dbg !7096
  %6 = load i32, i32* %dsize, align 4, !dbg !7097
  %idx.ext = sext i32 %6 to i64, !dbg !7098
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7098
  store i8* %add.ptr, i8** %dend, align 8, !dbg !7095
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7099, metadata !1741), !dbg !7100
  br label %while.cond, !dbg !7101

while.cond:                                       ; preds = %if.end35, %entry
  %7 = load i32, i32* %ssize, align 4, !dbg !7102
  %cmp = icmp sgt i32 %7, 0, !dbg !7104
  br i1 %cmp, label %while.body, label %while.end36, !dbg !7105

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %s, align 8, !dbg !7106
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7106
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !7106
  %9 = load i8, i8* %8, align 1, !dbg !7108
  %conv = sext i8 %9 to i32, !dbg !7108
  store i32 %conv, i32* %count, align 4, !dbg !7109
  %10 = load i32, i32* %count, align 4, !dbg !7110
  %cmp6 = icmp slt i32 %10, 0, !dbg !7112
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7113

if.then:                                          ; preds = %while.body
  %11 = load i32, i32* %count, align 4, !dbg !7114
  %sub = sub nsw i32 0, %11, !dbg !7116
  store i32 %sub, i32* %count, align 4, !dbg !7117
  %12 = load i32, i32* %count, align 4, !dbg !7118
  %13 = load i32, i32* %dsize, align 4, !dbg !7120
  %sub8 = sub nsw i32 %13, %12, !dbg !7120
  store i32 %sub8, i32* %dsize, align 4, !dbg !7120
  %cmp9 = icmp slt i32 %sub8, 0, !dbg !7121
  br i1 %cmp9, label %if.then14, label %lor.lhs.false, !dbg !7122

lor.lhs.false:                                    ; preds = %if.then
  %14 = load i32, i32* %count, align 4, !dbg !7123
  %add = add nsw i32 %14, 1, !dbg !7124
  %15 = load i32, i32* %ssize, align 4, !dbg !7125
  %sub11 = sub nsw i32 %15, %add, !dbg !7125
  store i32 %sub11, i32* %ssize, align 4, !dbg !7125
  %cmp12 = icmp slt i32 %sub11, 0, !dbg !7126
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !7127

if.then14:                                        ; preds = %lor.lhs.false, %if.then
  store i32 -1094995529, i32* %retval, align 4, !dbg !7129
  br label %return, !dbg !7129

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond15, !dbg !7130

while.cond15:                                     ; preds = %while.body16, %if.end
  %16 = load i32, i32* %count, align 4, !dbg !7131
  %dec = add nsw i32 %16, -1, !dbg !7131
  store i32 %dec, i32* %count, align 4, !dbg !7131
  %tobool = icmp ne i32 %16, 0, !dbg !7132
  br i1 %tobool, label %while.body16, label %while.end, !dbg !7132

while.body16:                                     ; preds = %while.cond15
  %17 = load i8*, i8** %s, align 8, !dbg !7133
  %incdec.ptr17 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7133
  store i8* %incdec.ptr17, i8** %s, align 8, !dbg !7133
  %18 = load i8, i8* %17, align 1, !dbg !7134
  %19 = load i8*, i8** %d, align 8, !dbg !7135
  %incdec.ptr18 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7135
  store i8* %incdec.ptr18, i8** %d, align 8, !dbg !7135
  store i8 %18, i8* %19, align 1, !dbg !7136
  br label %while.cond15, !dbg !7137, !llvm.loop !7139

while.end:                                        ; preds = %while.cond15
  br label %if.end35, !dbg !7140

if.else:                                          ; preds = %while.body
  %20 = load i32, i32* %count, align 4, !dbg !7141
  %inc = add nsw i32 %20, 1, !dbg !7141
  store i32 %inc, i32* %count, align 4, !dbg !7141
  %21 = load i32, i32* %count, align 4, !dbg !7143
  %22 = load i32, i32* %dsize, align 4, !dbg !7145
  %sub19 = sub nsw i32 %22, %21, !dbg !7145
  store i32 %sub19, i32* %dsize, align 4, !dbg !7145
  %cmp20 = icmp slt i32 %sub19, 0, !dbg !7146
  br i1 %cmp20, label %if.then26, label %lor.lhs.false22, !dbg !7147

lor.lhs.false22:                                  ; preds = %if.else
  %23 = load i32, i32* %ssize, align 4, !dbg !7148
  %sub23 = sub nsw i32 %23, 2, !dbg !7148
  store i32 %sub23, i32* %ssize, align 4, !dbg !7148
  %cmp24 = icmp slt i32 %sub23, 0, !dbg !7149
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !7150

if.then26:                                        ; preds = %lor.lhs.false22, %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !7152
  br label %return, !dbg !7152

if.end27:                                         ; preds = %lor.lhs.false22
  br label %while.cond28, !dbg !7153

while.cond28:                                     ; preds = %while.body31, %if.end27
  %24 = load i32, i32* %count, align 4, !dbg !7154
  %dec29 = add nsw i32 %24, -1, !dbg !7154
  store i32 %dec29, i32* %count, align 4, !dbg !7154
  %tobool30 = icmp ne i32 %24, 0, !dbg !7155
  br i1 %tobool30, label %while.body31, label %while.end33, !dbg !7155

while.body31:                                     ; preds = %while.cond28
  %25 = load i8*, i8** %s, align 8, !dbg !7156
  %26 = load i8, i8* %25, align 1, !dbg !7157
  %27 = load i8*, i8** %d, align 8, !dbg !7158
  %incdec.ptr32 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7158
  store i8* %incdec.ptr32, i8** %d, align 8, !dbg !7158
  store i8 %26, i8* %27, align 1, !dbg !7159
  br label %while.cond28, !dbg !7160, !llvm.loop !7162

while.end33:                                      ; preds = %while.cond28
  %28 = load i8*, i8** %s, align 8, !dbg !7163
  %incdec.ptr34 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !7163
  store i8* %incdec.ptr34, i8** %s, align 8, !dbg !7163
  br label %if.end35

if.end35:                                         ; preds = %while.end33, %while.end
  br label %while.cond, !dbg !7164, !llvm.loop !7166

while.end36:                                      ; preds = %while.cond
  %29 = load i8*, i8** %dend, align 8, !dbg !7167
  %30 = load i8*, i8** %d, align 8, !dbg !7169
  %cmp37 = icmp ne i8* %29, %30, !dbg !7170
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !7171

if.then39:                                        ; preds = %while.end36
  store i32 -1094995529, i32* %retval, align 4, !dbg !7172
  br label %return, !dbg !7172

if.end40:                                         ; preds = %while.end36
  %31 = load %struct.EXRContext*, %struct.EXRContext** %ctx.addr, align 8, !dbg !7173
  %dsp = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %31, i32 0, i32 3, !dbg !7174
  %predictor = getelementptr inbounds %struct.ExrDSPContext, %struct.ExrDSPContext* %dsp, i32 0, i32 1, !dbg !7175
  %32 = load void (i8*, i64)*, void (i8*, i64)** %predictor, align 8, !dbg !7175
  %33 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7176
  %tmp41 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %33, i32 0, i32 2, !dbg !7177
  %34 = load i8*, i8** %tmp41, align 8, !dbg !7177
  %35 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !7178
  %conv42 = sext i32 %35 to i64, !dbg !7178
  call void %32(i8* %34, i64 %conv42), !dbg !7173
  %36 = load %struct.EXRContext*, %struct.EXRContext** %ctx.addr, align 8, !dbg !7179
  %dsp43 = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %36, i32 0, i32 3, !dbg !7180
  %reorder_pixels = getelementptr inbounds %struct.ExrDSPContext, %struct.ExrDSPContext* %dsp43, i32 0, i32 0, !dbg !7181
  %37 = load void (i8*, i8*, i64)*, void (i8*, i8*, i64)** %reorder_pixels, align 8, !dbg !7181
  %38 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7182
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %38, i32 0, i32 0, !dbg !7183
  %39 = load i8*, i8** %uncompressed_data, align 8, !dbg !7183
  %40 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7184
  %tmp44 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %40, i32 0, i32 2, !dbg !7185
  %41 = load i8*, i8** %tmp44, align 8, !dbg !7185
  %42 = load i32, i32* %uncompressed_size.addr, align 4, !dbg !7186
  %conv45 = sext i32 %42 to i64, !dbg !7186
  call void %37(i8* %39, i8* %41, i64 %conv45), !dbg !7179
  store i32 0, i32* %retval, align 4, !dbg !7187
  br label %return, !dbg !7187

return:                                           ; preds = %if.end40, %if.then39, %if.then26, %if.then14
  %43 = load i32, i32* %retval, align 4, !dbg !7188
  ret i32 %43, !dbg !7188
}

; Function Attrs: nounwind uwtable
define internal i32 @b44_uncompress(%struct.EXRContext* %s, i8* %src, i32 %compressed_size, i32 %uncompressed_size, %struct.EXRThreadData* %td) #0 !dbg !7189 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.EXRContext*, align 8
  %src.addr = alloca i8*, align 8
  %compressed_size.addr = alloca i32, align 4
  %uncompressed_size.addr = alloca i32, align 4
  %td.addr = alloca %struct.EXRThreadData*, align 8
  %sr = alloca i8*, align 8
  %stay_to_uncompress = alloca i32, align 4
  %nb_b44_block_w = alloca i32, align 4
  %nb_b44_block_h = alloca i32, align 4
  %index_tl_x = alloca i32, align 4
  %index_tl_y = alloca i32, align 4
  %index_out = alloca i32, align 4
  %index_tmp = alloca i32, align 4
  %tmp_buffer = alloca [16 x i16], align 16
  %c = alloca i32, align 4
  %iY = alloca i32, align 4
  %iX = alloca i32, align 4
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %target_channel_offset = alloca i32, align 4
  store %struct.EXRContext* %s, %struct.EXRContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRContext** %s.addr, metadata !7190, metadata !1741), !dbg !7191
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7192, metadata !1741), !dbg !7193
  store i32 %compressed_size, i32* %compressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compressed_size.addr, metadata !7194, metadata !1741), !dbg !7195
  store i32 %uncompressed_size, i32* %uncompressed_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uncompressed_size.addr, metadata !7196, metadata !1741), !dbg !7197
  store %struct.EXRThreadData* %td, %struct.EXRThreadData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EXRThreadData** %td.addr, metadata !7198, metadata !1741), !dbg !7199
  call void @llvm.dbg.declare(metadata i8** %sr, metadata !7200, metadata !1741), !dbg !7201
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7202
  store i8* %0, i8** %sr, align 8, !dbg !7201
  call void @llvm.dbg.declare(metadata i32* %stay_to_uncompress, metadata !7203, metadata !1741), !dbg !7204
  %1 = load i32, i32* %compressed_size.addr, align 4, !dbg !7205
  store i32 %1, i32* %stay_to_uncompress, align 4, !dbg !7204
  call void @llvm.dbg.declare(metadata i32* %nb_b44_block_w, metadata !7206, metadata !1741), !dbg !7207
  call void @llvm.dbg.declare(metadata i32* %nb_b44_block_h, metadata !7208, metadata !1741), !dbg !7209
  call void @llvm.dbg.declare(metadata i32* %index_tl_x, metadata !7210, metadata !1741), !dbg !7211
  call void @llvm.dbg.declare(metadata i32* %index_tl_y, metadata !7212, metadata !1741), !dbg !7213
  call void @llvm.dbg.declare(metadata i32* %index_out, metadata !7214, metadata !1741), !dbg !7215
  call void @llvm.dbg.declare(metadata i32* %index_tmp, metadata !7216, metadata !1741), !dbg !7217
  call void @llvm.dbg.declare(metadata [16 x i16]* %tmp_buffer, metadata !7218, metadata !1741), !dbg !7222
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7223, metadata !1741), !dbg !7224
  call void @llvm.dbg.declare(metadata i32* %iY, metadata !7225, metadata !1741), !dbg !7226
  call void @llvm.dbg.declare(metadata i32* %iX, metadata !7227, metadata !1741), !dbg !7228
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7229, metadata !1741), !dbg !7230
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7231, metadata !1741), !dbg !7232
  call void @llvm.dbg.declare(metadata i32* %target_channel_offset, metadata !7233, metadata !1741), !dbg !7234
  store i32 0, i32* %target_channel_offset, align 4, !dbg !7234
  %2 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7235
  %xsize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %2, i32 0, i32 7, !dbg !7236
  %3 = load i32, i32* %xsize, align 4, !dbg !7236
  %div = sdiv i32 %3, 4, !dbg !7237
  store i32 %div, i32* %nb_b44_block_w, align 4, !dbg !7238
  %4 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7239
  %xsize1 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %4, i32 0, i32 7, !dbg !7241
  %5 = load i32, i32* %xsize1, align 4, !dbg !7241
  %rem = srem i32 %5, 4, !dbg !7242
  %cmp = icmp ne i32 %rem, 0, !dbg !7243
  br i1 %cmp, label %if.then, label %if.end, !dbg !7244

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %nb_b44_block_w, align 4, !dbg !7245
  %inc = add nsw i32 %6, 1, !dbg !7245
  store i32 %inc, i32* %nb_b44_block_w, align 4, !dbg !7245
  br label %if.end, !dbg !7246

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7247
  %ysize = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %7, i32 0, i32 6, !dbg !7248
  %8 = load i32, i32* %ysize, align 8, !dbg !7248
  %div2 = sdiv i32 %8, 4, !dbg !7249
  store i32 %div2, i32* %nb_b44_block_h, align 4, !dbg !7250
  %9 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7251
  %ysize3 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %9, i32 0, i32 6, !dbg !7253
  %10 = load i32, i32* %ysize3, align 8, !dbg !7253
  %rem4 = srem i32 %10, 4, !dbg !7254
  %cmp5 = icmp ne i32 %rem4, 0, !dbg !7255
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !7256

if.then6:                                         ; preds = %if.end
  %11 = load i32, i32* %nb_b44_block_h, align 4, !dbg !7257
  %inc7 = add nsw i32 %11, 1, !dbg !7257
  store i32 %inc7, i32* %nb_b44_block_h, align 4, !dbg !7257
  br label %if.end8, !dbg !7258

if.end8:                                          ; preds = %if.then6, %if.end
  store i32 0, i32* %c, align 4, !dbg !7259
  br label %for.cond, !dbg !7261

for.cond:                                         ; preds = %for.inc133, %if.end8
  %12 = load i32, i32* %c, align 4, !dbg !7262
  %13 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7265
  %nb_channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %13, i32 0, i32 24, !dbg !7266
  %14 = load i32, i32* %nb_channels, align 8, !dbg !7266
  %cmp9 = icmp slt i32 %12, %14, !dbg !7267
  br i1 %cmp9, label %for.body, label %for.end135, !dbg !7268

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %c, align 4, !dbg !7269
  %idxprom = sext i32 %15 to i64, !dbg !7272
  %16 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7272
  %channels = getelementptr inbounds %struct.EXRContext, %struct.EXRContext* %16, i32 0, i32 23, !dbg !7273
  %17 = load %struct.EXRChannel*, %struct.EXRChannel** %channels, align 8, !dbg !7273
  %arrayidx = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %17, i64 %idxprom, !dbg !7272
  %pixel_type = getelementptr inbounds %struct.EXRChannel, %struct.EXRChannel* %arrayidx, i32 0, i32 2, !dbg !7274
  %18 = load i32, i32* %pixel_type, align 4, !dbg !7274
  %cmp10 = icmp eq i32 %18, 1, !dbg !7275
  br i1 %cmp10, label %if.then11, label %if.else95, !dbg !7276

if.then11:                                        ; preds = %for.body
  store i32 0, i32* %iY, align 4, !dbg !7277
  br label %for.cond12, !dbg !7280

for.cond12:                                       ; preds = %for.inc91, %if.then11
  %19 = load i32, i32* %iY, align 4, !dbg !7281
  %20 = load i32, i32* %nb_b44_block_h, align 4, !dbg !7284
  %cmp13 = icmp slt i32 %19, %20, !dbg !7285
  br i1 %cmp13, label %for.body14, label %for.end93, !dbg !7286

for.body14:                                       ; preds = %for.cond12
  store i32 0, i32* %iX, align 4, !dbg !7287
  br label %for.cond15, !dbg !7290

for.cond15:                                       ; preds = %for.inc88, %for.body14
  %21 = load i32, i32* %iX, align 4, !dbg !7291
  %22 = load i32, i32* %nb_b44_block_w, align 4, !dbg !7294
  %cmp16 = icmp slt i32 %21, %22, !dbg !7295
  br i1 %cmp16, label %for.body17, label %for.end90, !dbg !7296

for.body17:                                       ; preds = %for.cond15
  %23 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7297
  %cmp18 = icmp slt i32 %23, 3, !dbg !7300
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !7301

if.then19:                                        ; preds = %for.body17
  %24 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7302
  %25 = bitcast %struct.EXRContext* %24 to i8*, !dbg !7302
  %26 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7304
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.102, i32 0, i32 0), i32 %26), !dbg !7305
  store i32 -1094995529, i32* %retval, align 4, !dbg !7306
  br label %return, !dbg !7306

if.end20:                                         ; preds = %for.body17
  %27 = load i32, i32* %compressed_size.addr, align 4, !dbg !7307
  %28 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7309
  %sub = sub nsw i32 %27, %28, !dbg !7310
  %add = add nsw i32 %sub, 2, !dbg !7311
  %idxprom21 = sext i32 %add to i64, !dbg !7312
  %29 = load i8*, i8** %src.addr, align 8, !dbg !7312
  %arrayidx22 = getelementptr inbounds i8, i8* %29, i64 %idxprom21, !dbg !7312
  %30 = load i8, i8* %arrayidx22, align 1, !dbg !7312
  %conv = zext i8 %30 to i32, !dbg !7312
  %cmp23 = icmp eq i32 %conv, 252, !dbg !7313
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !7314

if.then25:                                        ; preds = %if.end20
  %31 = load i8*, i8** %sr, align 8, !dbg !7315
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %tmp_buffer, i32 0, i32 0, !dbg !7317
  call void @unpack_3(i8* %31, i16* %arraydecay), !dbg !7318
  %32 = load i8*, i8** %sr, align 8, !dbg !7319
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 3, !dbg !7319
  store i8* %add.ptr, i8** %sr, align 8, !dbg !7319
  %33 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7320
  %sub26 = sub nsw i32 %33, 3, !dbg !7320
  store i32 %sub26, i32* %stay_to_uncompress, align 4, !dbg !7320
  br label %if.end34, !dbg !7321

if.else:                                          ; preds = %if.end20
  %34 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7322
  %cmp27 = icmp slt i32 %34, 14, !dbg !7325
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7326

if.then29:                                        ; preds = %if.else
  %35 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7327
  %36 = bitcast %struct.EXRContext* %35 to i8*, !dbg !7327
  %37 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7329
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.103, i32 0, i32 0), i32 %37), !dbg !7330
  store i32 -1094995529, i32* %retval, align 4, !dbg !7331
  br label %return, !dbg !7331

if.end30:                                         ; preds = %if.else
  %38 = load i8*, i8** %sr, align 8, !dbg !7332
  %arraydecay31 = getelementptr inbounds [16 x i16], [16 x i16]* %tmp_buffer, i32 0, i32 0, !dbg !7333
  call void @unpack_14(i8* %38, i16* %arraydecay31), !dbg !7334
  %39 = load i8*, i8** %sr, align 8, !dbg !7335
  %add.ptr32 = getelementptr inbounds i8, i8* %39, i64 14, !dbg !7335
  store i8* %add.ptr32, i8** %sr, align 8, !dbg !7335
  %40 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7336
  %sub33 = sub nsw i32 %40, 14, !dbg !7336
  store i32 %sub33, i32* %stay_to_uncompress, align 4, !dbg !7336
  br label %if.end34

if.end34:                                         ; preds = %if.end30, %if.then25
  %41 = load i32, i32* %iX, align 4, !dbg !7337
  %mul = mul nsw i32 %41, 4, !dbg !7338
  store i32 %mul, i32* %index_tl_x, align 4, !dbg !7339
  %42 = load i32, i32* %iY, align 4, !dbg !7340
  %mul35 = mul nsw i32 %42, 4, !dbg !7341
  store i32 %mul35, i32* %index_tl_y, align 4, !dbg !7342
  %43 = load i32, i32* %index_tl_y, align 4, !dbg !7343
  store i32 %43, i32* %y, align 4, !dbg !7345
  br label %for.cond36, !dbg !7346

for.cond36:                                       ; preds = %for.inc85, %if.end34
  %44 = load i32, i32* %y, align 4, !dbg !7347
  %45 = load i32, i32* %index_tl_y, align 4, !dbg !7350
  %add37 = add nsw i32 %45, 4, !dbg !7351
  %46 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7352
  %ysize38 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %46, i32 0, i32 6, !dbg !7353
  %47 = load i32, i32* %ysize38, align 8, !dbg !7353
  %cmp39 = icmp sgt i32 %add37, %47, !dbg !7354
  br i1 %cmp39, label %cond.true, label %cond.false, !dbg !7355

cond.true:                                        ; preds = %for.cond36
  %48 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7356
  %ysize41 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %48, i32 0, i32 6, !dbg !7358
  %49 = load i32, i32* %ysize41, align 8, !dbg !7358
  br label %cond.end, !dbg !7359

cond.false:                                       ; preds = %for.cond36
  %50 = load i32, i32* %index_tl_y, align 4, !dbg !7360
  %add42 = add nsw i32 %50, 4, !dbg !7362
  br label %cond.end, !dbg !7363

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %49, %cond.true ], [ %add42, %cond.false ], !dbg !7364
  %cmp43 = icmp slt i32 %44, %cond, !dbg !7366
  br i1 %cmp43, label %for.body45, label %for.end87, !dbg !7367

for.body45:                                       ; preds = %cond.end
  %51 = load i32, i32* %index_tl_x, align 4, !dbg !7368
  store i32 %51, i32* %x, align 4, !dbg !7371
  br label %for.cond46, !dbg !7372

for.cond46:                                       ; preds = %for.inc, %for.body45
  %52 = load i32, i32* %x, align 4, !dbg !7373
  %53 = load i32, i32* %index_tl_x, align 4, !dbg !7376
  %add47 = add nsw i32 %53, 4, !dbg !7377
  %54 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7378
  %xsize48 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %54, i32 0, i32 7, !dbg !7379
  %55 = load i32, i32* %xsize48, align 4, !dbg !7379
  %cmp49 = icmp sgt i32 %add47, %55, !dbg !7380
  br i1 %cmp49, label %cond.true51, label %cond.false53, !dbg !7381

cond.true51:                                      ; preds = %for.cond46
  %56 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7382
  %xsize52 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %56, i32 0, i32 7, !dbg !7384
  %57 = load i32, i32* %xsize52, align 4, !dbg !7384
  br label %cond.end55, !dbg !7385

cond.false53:                                     ; preds = %for.cond46
  %58 = load i32, i32* %index_tl_x, align 4, !dbg !7386
  %add54 = add nsw i32 %58, 4, !dbg !7388
  br label %cond.end55, !dbg !7389

cond.end55:                                       ; preds = %cond.false53, %cond.true51
  %cond56 = phi i32 [ %57, %cond.true51 ], [ %add54, %cond.false53 ], !dbg !7390
  %cmp57 = icmp slt i32 %52, %cond56, !dbg !7392
  br i1 %cmp57, label %for.body59, label %for.end, !dbg !7393

for.body59:                                       ; preds = %cond.end55
  %59 = load i32, i32* %target_channel_offset, align 4, !dbg !7394
  %60 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7396
  %xsize60 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %60, i32 0, i32 7, !dbg !7397
  %61 = load i32, i32* %xsize60, align 4, !dbg !7397
  %mul61 = mul nsw i32 %59, %61, !dbg !7398
  %62 = load i32, i32* %y, align 4, !dbg !7399
  %63 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7400
  %channel_line_size = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %63, i32 0, i32 8, !dbg !7401
  %64 = load i32, i32* %channel_line_size, align 8, !dbg !7401
  %mul62 = mul nsw i32 %62, %64, !dbg !7402
  %add63 = add nsw i32 %mul61, %mul62, !dbg !7403
  %65 = load i32, i32* %x, align 4, !dbg !7404
  %mul64 = mul nsw i32 2, %65, !dbg !7405
  %add65 = add nsw i32 %add63, %mul64, !dbg !7406
  store i32 %add65, i32* %index_out, align 4, !dbg !7407
  %66 = load i32, i32* %y, align 4, !dbg !7408
  %67 = load i32, i32* %index_tl_y, align 4, !dbg !7409
  %sub66 = sub nsw i32 %66, %67, !dbg !7410
  %mul67 = mul nsw i32 %sub66, 4, !dbg !7411
  %68 = load i32, i32* %x, align 4, !dbg !7412
  %69 = load i32, i32* %index_tl_x, align 4, !dbg !7413
  %sub68 = sub nsw i32 %68, %69, !dbg !7414
  %add69 = add nsw i32 %mul67, %sub68, !dbg !7415
  store i32 %add69, i32* %index_tmp, align 4, !dbg !7416
  %70 = load i32, i32* %index_tmp, align 4, !dbg !7417
  %idxprom70 = sext i32 %70 to i64, !dbg !7418
  %arrayidx71 = getelementptr inbounds [16 x i16], [16 x i16]* %tmp_buffer, i64 0, i64 %idxprom70, !dbg !7418
  %71 = load i16, i16* %arrayidx71, align 2, !dbg !7418
  %conv72 = zext i16 %71 to i32, !dbg !7418
  %and = and i32 %conv72, 255, !dbg !7419
  %conv73 = trunc i32 %and to i8, !dbg !7418
  %72 = load i32, i32* %index_out, align 4, !dbg !7420
  %idxprom74 = sext i32 %72 to i64, !dbg !7421
  %73 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7421
  %uncompressed_data = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %73, i32 0, i32 0, !dbg !7422
  %74 = load i8*, i8** %uncompressed_data, align 8, !dbg !7422
  %arrayidx75 = getelementptr inbounds i8, i8* %74, i64 %idxprom74, !dbg !7421
  store i8 %conv73, i8* %arrayidx75, align 1, !dbg !7423
  %75 = load i32, i32* %index_tmp, align 4, !dbg !7424
  %idxprom76 = sext i32 %75 to i64, !dbg !7425
  %arrayidx77 = getelementptr inbounds [16 x i16], [16 x i16]* %tmp_buffer, i64 0, i64 %idxprom76, !dbg !7425
  %76 = load i16, i16* %arrayidx77, align 2, !dbg !7425
  %conv78 = zext i16 %76 to i32, !dbg !7425
  %shr = ashr i32 %conv78, 8, !dbg !7426
  %conv79 = trunc i32 %shr to i8, !dbg !7425
  %77 = load i32, i32* %index_out, align 4, !dbg !7427
  %add80 = add nsw i32 %77, 1, !dbg !7428
  %idxprom81 = sext i32 %add80 to i64, !dbg !7429
  %78 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7429
  %uncompressed_data82 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %78, i32 0, i32 0, !dbg !7430
  %79 = load i8*, i8** %uncompressed_data82, align 8, !dbg !7430
  %arrayidx83 = getelementptr inbounds i8, i8* %79, i64 %idxprom81, !dbg !7429
  store i8 %conv79, i8* %arrayidx83, align 1, !dbg !7431
  br label %for.inc, !dbg !7432

for.inc:                                          ; preds = %for.body59
  %80 = load i32, i32* %x, align 4, !dbg !7433
  %inc84 = add nsw i32 %80, 1, !dbg !7433
  store i32 %inc84, i32* %x, align 4, !dbg !7433
  br label %for.cond46, !dbg !7435, !llvm.loop !7436

for.end:                                          ; preds = %cond.end55
  br label %for.inc85, !dbg !7438

for.inc85:                                        ; preds = %for.end
  %81 = load i32, i32* %y, align 4, !dbg !7439
  %inc86 = add nsw i32 %81, 1, !dbg !7439
  store i32 %inc86, i32* %y, align 4, !dbg !7439
  br label %for.cond36, !dbg !7441, !llvm.loop !7442

for.end87:                                        ; preds = %cond.end
  br label %for.inc88, !dbg !7444

for.inc88:                                        ; preds = %for.end87
  %82 = load i32, i32* %iX, align 4, !dbg !7445
  %inc89 = add nsw i32 %82, 1, !dbg !7445
  store i32 %inc89, i32* %iX, align 4, !dbg !7445
  br label %for.cond15, !dbg !7447, !llvm.loop !7448

for.end90:                                        ; preds = %for.cond15
  br label %for.inc91, !dbg !7450

for.inc91:                                        ; preds = %for.end90
  %83 = load i32, i32* %iY, align 4, !dbg !7451
  %inc92 = add nsw i32 %83, 1, !dbg !7451
  store i32 %inc92, i32* %iY, align 4, !dbg !7451
  br label %for.cond12, !dbg !7453, !llvm.loop !7454

for.end93:                                        ; preds = %for.cond12
  %84 = load i32, i32* %target_channel_offset, align 4, !dbg !7456
  %add94 = add nsw i32 %84, 2, !dbg !7456
  store i32 %add94, i32* %target_channel_offset, align 4, !dbg !7456
  br label %if.end132, !dbg !7457

if.else95:                                        ; preds = %for.body
  %85 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7458
  %86 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7461
  %ysize96 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %86, i32 0, i32 6, !dbg !7462
  %87 = load i32, i32* %ysize96, align 8, !dbg !7462
  %88 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7463
  %xsize97 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %88, i32 0, i32 7, !dbg !7464
  %89 = load i32, i32* %xsize97, align 4, !dbg !7464
  %mul98 = mul nsw i32 %87, %89, !dbg !7465
  %mul99 = mul nsw i32 %mul98, 4, !dbg !7466
  %cmp100 = icmp slt i32 %85, %mul99, !dbg !7467
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !7468

if.then102:                                       ; preds = %if.else95
  %90 = load %struct.EXRContext*, %struct.EXRContext** %s.addr, align 8, !dbg !7469
  %91 = bitcast %struct.EXRContext* %90 to i8*, !dbg !7469
  %92 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7471
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.104, i32 0, i32 0), i32 %92), !dbg !7472
  store i32 -1094995529, i32* %retval, align 4, !dbg !7473
  br label %return, !dbg !7473

if.end103:                                        ; preds = %if.else95
  store i32 0, i32* %y, align 4, !dbg !7474
  br label %for.cond104, !dbg !7476

for.cond104:                                      ; preds = %for.inc123, %if.end103
  %93 = load i32, i32* %y, align 4, !dbg !7477
  %94 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7480
  %ysize105 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %94, i32 0, i32 6, !dbg !7481
  %95 = load i32, i32* %ysize105, align 8, !dbg !7481
  %cmp106 = icmp slt i32 %93, %95, !dbg !7482
  br i1 %cmp106, label %for.body108, label %for.end125, !dbg !7483

for.body108:                                      ; preds = %for.cond104
  %96 = load i32, i32* %target_channel_offset, align 4, !dbg !7484
  %97 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7486
  %xsize109 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %97, i32 0, i32 7, !dbg !7487
  %98 = load i32, i32* %xsize109, align 4, !dbg !7487
  %mul110 = mul nsw i32 %96, %98, !dbg !7488
  %99 = load i32, i32* %y, align 4, !dbg !7489
  %100 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7490
  %channel_line_size111 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %100, i32 0, i32 8, !dbg !7491
  %101 = load i32, i32* %channel_line_size111, align 8, !dbg !7491
  %mul112 = mul nsw i32 %99, %101, !dbg !7492
  %add113 = add nsw i32 %mul110, %mul112, !dbg !7493
  store i32 %add113, i32* %index_out, align 4, !dbg !7494
  %102 = load i32, i32* %index_out, align 4, !dbg !7495
  %idxprom114 = sext i32 %102 to i64, !dbg !7496
  %103 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7496
  %uncompressed_data115 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %103, i32 0, i32 0, !dbg !7497
  %104 = load i8*, i8** %uncompressed_data115, align 8, !dbg !7497
  %arrayidx116 = getelementptr inbounds i8, i8* %104, i64 %idxprom114, !dbg !7496
  %105 = load i8*, i8** %sr, align 8, !dbg !7498
  %106 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7499
  %xsize117 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %106, i32 0, i32 7, !dbg !7500
  %107 = load i32, i32* %xsize117, align 4, !dbg !7500
  %mul118 = mul nsw i32 %107, 4, !dbg !7501
  %conv119 = sext i32 %mul118 to i64, !dbg !7499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx116, i8* %105, i64 %conv119, i32 1, i1 false), !dbg !7502
  %108 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7503
  %xsize120 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %108, i32 0, i32 7, !dbg !7504
  %109 = load i32, i32* %xsize120, align 4, !dbg !7504
  %mul121 = mul nsw i32 %109, 4, !dbg !7505
  %110 = load i8*, i8** %sr, align 8, !dbg !7506
  %idx.ext = sext i32 %mul121 to i64, !dbg !7506
  %add.ptr122 = getelementptr inbounds i8, i8* %110, i64 %idx.ext, !dbg !7506
  store i8* %add.ptr122, i8** %sr, align 8, !dbg !7506
  br label %for.inc123, !dbg !7507

for.inc123:                                       ; preds = %for.body108
  %111 = load i32, i32* %y, align 4, !dbg !7508
  %inc124 = add nsw i32 %111, 1, !dbg !7508
  store i32 %inc124, i32* %y, align 4, !dbg !7508
  br label %for.cond104, !dbg !7510, !llvm.loop !7511

for.end125:                                       ; preds = %for.cond104
  %112 = load i32, i32* %target_channel_offset, align 4, !dbg !7513
  %add126 = add nsw i32 %112, 4, !dbg !7513
  store i32 %add126, i32* %target_channel_offset, align 4, !dbg !7513
  %113 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7514
  %ysize127 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %113, i32 0, i32 6, !dbg !7515
  %114 = load i32, i32* %ysize127, align 8, !dbg !7515
  %115 = load %struct.EXRThreadData*, %struct.EXRThreadData** %td.addr, align 8, !dbg !7516
  %xsize128 = getelementptr inbounds %struct.EXRThreadData, %struct.EXRThreadData* %115, i32 0, i32 7, !dbg !7517
  %116 = load i32, i32* %xsize128, align 4, !dbg !7517
  %mul129 = mul nsw i32 %114, %116, !dbg !7518
  %mul130 = mul nsw i32 %mul129, 4, !dbg !7519
  %117 = load i32, i32* %stay_to_uncompress, align 4, !dbg !7520
  %sub131 = sub nsw i32 %117, %mul130, !dbg !7520
  store i32 %sub131, i32* %stay_to_uncompress, align 4, !dbg !7520
  br label %if.end132

if.end132:                                        ; preds = %for.end125, %for.end93
  br label %for.inc133, !dbg !7521

for.inc133:                                       ; preds = %if.end132
  %118 = load i32, i32* %c, align 4, !dbg !7522
  %inc134 = add nsw i32 %118, 1, !dbg !7522
  store i32 %inc134, i32* %c, align 4, !dbg !7522
  br label %for.cond, !dbg !7524, !llvm.loop !7525

for.end135:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7527
  br label %return, !dbg !7527

return:                                           ; preds = %for.end135, %if.then102, %if.then29, %if.then19
  %119 = load i32, i32* %retval, align 4, !dbg !7528
  ret i32 %119, !dbg !7528
}

declare i32 @uncompress(i8*, i64*, i8*, i64) #2

declare noalias i8* @av_malloc(i64) #2

declare void @av_freep(i8*) #2

; Function Attrs: nounwind uwtable
define internal zeroext i16 @reverse_lut(i8* %bitmap, i16* %lut) #0 !dbg !7529 {
entry:
  %bitmap.addr = alloca i8*, align 8
  %lut.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  store i8* %bitmap, i8** %bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bitmap.addr, metadata !7532, metadata !1741), !dbg !7533
  store i16* %lut, i16** %lut.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lut.addr, metadata !7534, metadata !1741), !dbg !7535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7536, metadata !1741), !dbg !7537
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7538, metadata !1741), !dbg !7539
  store i32 0, i32* %k, align 4, !dbg !7539
  store i32 0, i32* %i, align 4, !dbg !7540
  br label %for.cond, !dbg !7542

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7543
  %cmp = icmp slt i32 %0, 65536, !dbg !7546
  br i1 %cmp, label %for.body, label %for.end, !dbg !7547

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !7548
  %cmp1 = icmp eq i32 %1, 0, !dbg !7550
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !7551

lor.lhs.false:                                    ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !7552
  %shr = ashr i32 %2, 3, !dbg !7554
  %idxprom = sext i32 %shr to i64, !dbg !7555
  %3 = load i8*, i8** %bitmap.addr, align 8, !dbg !7555
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !7555
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7555
  %conv = zext i8 %4 to i32, !dbg !7555
  %5 = load i32, i32* %i, align 4, !dbg !7556
  %and = and i32 %5, 7, !dbg !7557
  %shl = shl i32 1, %and, !dbg !7558
  %and2 = and i32 %conv, %shl, !dbg !7559
  %tobool = icmp ne i32 %and2, 0, !dbg !7559
  br i1 %tobool, label %if.then, label %if.end, !dbg !7560

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %6 = load i32, i32* %i, align 4, !dbg !7561
  %conv3 = trunc i32 %6 to i16, !dbg !7561
  %7 = load i32, i32* %k, align 4, !dbg !7562
  %inc = add nsw i32 %7, 1, !dbg !7562
  store i32 %inc, i32* %k, align 4, !dbg !7562
  %idxprom4 = sext i32 %7 to i64, !dbg !7563
  %8 = load i16*, i16** %lut.addr, align 8, !dbg !7563
  %arrayidx5 = getelementptr inbounds i16, i16* %8, i64 %idxprom4, !dbg !7563
  store i16 %conv3, i16* %arrayidx5, align 2, !dbg !7564
  br label %if.end, !dbg !7563

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !7565

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !7567
  %inc6 = add nsw i32 %9, 1, !dbg !7567
  store i32 %inc6, i32* %i, align 4, !dbg !7567
  br label %for.cond, !dbg !7569, !llvm.loop !7570

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %k, align 4, !dbg !7572
  %sub = sub nsw i32 %10, 1, !dbg !7573
  store i32 %sub, i32* %i, align 4, !dbg !7574
  %11 = load i16*, i16** %lut.addr, align 8, !dbg !7575
  %12 = load i32, i32* %k, align 4, !dbg !7576
  %idx.ext = sext i32 %12 to i64, !dbg !7577
  %add.ptr = getelementptr inbounds i16, i16* %11, i64 %idx.ext, !dbg !7577
  %13 = bitcast i16* %add.ptr to i8*, !dbg !7578
  %14 = load i32, i32* %k, align 4, !dbg !7579
  %sub7 = sub nsw i32 65536, %14, !dbg !7580
  %mul = mul nsw i32 %sub7, 2, !dbg !7581
  %conv8 = sext i32 %mul to i64, !dbg !7582
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 %conv8, i32 2, i1 false), !dbg !7578
  %15 = load i32, i32* %i, align 4, !dbg !7583
  %conv9 = trunc i32 %15 to i16, !dbg !7583
  ret i16 %conv9, !dbg !7584
}

; Function Attrs: nounwind uwtable
define internal i32 @huf_uncompress(%struct.GetByteContext* %gb, i16* %dst, i32 %dst_size) #0 !dbg !7585 {
entry:
  %b.addr.i.i.i107 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i107, metadata !2102, metadata !1741), !dbg !7588
  %g.addr.i.i108 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i108, metadata !2116, metadata !1741), !dbg !7592
  %retval.i109 = alloca i32, align 4
  %g.addr.i110 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i110, metadata !2118, metadata !1741), !dbg !7593
  %g.addr.i86 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i86, metadata !3143, metadata !1741), !dbg !7594
  %size.addr.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i87, metadata !3149, metadata !1741), !dbg !7596
  %g.addr.i78 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i78, metadata !3143, metadata !1741), !dbg !7597
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3149, metadata !1741), !dbg !7599
  %g.addr.i72 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i72, metadata !2147, metadata !1741), !dbg !7600
  %b.addr.i.i.i53 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i53, metadata !2102, metadata !1741), !dbg !7603
  %g.addr.i.i54 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i54, metadata !2116, metadata !1741), !dbg !7607
  %retval.i55 = alloca i32, align 4
  %g.addr.i56 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i56, metadata !2118, metadata !1741), !dbg !7608
  %b.addr.i.i.i34 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i34, metadata !2102, metadata !1741), !dbg !7609
  %g.addr.i.i35 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i35, metadata !2116, metadata !1741), !dbg !7613
  %retval.i36 = alloca i32, align 4
  %g.addr.i37 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i37, metadata !2118, metadata !1741), !dbg !7614
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2102, metadata !1741), !dbg !7615
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2116, metadata !1741), !dbg !7619
  %retval.i = alloca i32, align 4
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2118, metadata !1741), !dbg !7620
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetByteContext*, align 8
  %dst.addr = alloca i16*, align 8
  %dst_size.addr = alloca i32, align 4
  %src_size = alloca i32, align 4
  %im = alloca i32, align 4
  %iM = alloca i32, align 4
  %nBits = alloca i32, align 4
  %freq = alloca i64*, align 8
  %hdec = alloca %struct.HufDec*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %gb.addr, metadata !7621, metadata !1741), !dbg !7622
  store i16* %dst, i16** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr, metadata !7623, metadata !1741), !dbg !7624
  store i32 %dst_size, i32* %dst_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_size.addr, metadata !7625, metadata !1741), !dbg !7626
  call void @llvm.dbg.declare(metadata i32* %src_size, metadata !7627, metadata !1741), !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %im, metadata !7629, metadata !1741), !dbg !7630
  call void @llvm.dbg.declare(metadata i32* %iM, metadata !7631, metadata !1741), !dbg !7632
  call void @llvm.dbg.declare(metadata i32* %nBits, metadata !7633, metadata !1741), !dbg !7634
  call void @llvm.dbg.declare(metadata i64** %freq, metadata !7635, metadata !1741), !dbg !7637
  call void @llvm.dbg.declare(metadata %struct.HufDec** %hdec, metadata !7638, metadata !1741), !dbg !7646
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7647, metadata !1741), !dbg !7648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7649, metadata !1741), !dbg !7650
  %0 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7651
  store %struct.GetByteContext* %0, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7652
  %1 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7653
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %1, i32 0, i32 1, !dbg !7654
  %2 = load i8*, i8** %buffer_end.i, align 8, !dbg !7654
  %3 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7655
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %3, i32 0, i32 0, !dbg !7656
  %4 = load i8*, i8** %buffer.i, align 8, !dbg !7656
  %sub.ptr.lhs.cast.i = ptrtoint i8* %2 to i64, !dbg !7657
  %sub.ptr.rhs.cast.i = ptrtoint i8* %4 to i64, !dbg !7657
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !7657
  %cmp.i = icmp slt i64 %sub.ptr.sub.i, 4, !dbg !7658
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7659

if.then.i:                                        ; preds = %entry
  %5 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7660
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %5, i32 0, i32 1, !dbg !7661
  %6 = load i8*, i8** %buffer_end1.i, align 8, !dbg !7661
  %7 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7662
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %7, i32 0, i32 0, !dbg !7663
  store i8* %6, i8** %buffer2.i, align 8, !dbg !7664
  store i32 0, i32* %retval.i, align 4, !dbg !7665
  br label %bytestream2_get_le32.exit, !dbg !7665

if.end.i:                                         ; preds = %entry
  %8 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7666
  store %struct.GetByteContext* %8, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !7667
  %9 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !7668
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %9, i32 0, i32 0, !dbg !7669
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !7670
  %10 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !7671
  %11 = load i8*, i8** %10, align 8, !dbg !7672
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %11, i64 4, !dbg !7672
  store i8* %add.ptr.i.i.i, i8** %10, align 8, !dbg !7672
  %12 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !7673
  %13 = load i8*, i8** %12, align 8, !dbg !7674
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %13, i64 -4, !dbg !7675
  %14 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !7676
  %l.i.i.i = bitcast %union.unaligned_32* %14 to i32*, !dbg !7676
  %15 = load i32, i32* %l.i.i.i, align 1, !dbg !7676
  store i32 %15, i32* %retval.i, align 4, !dbg !7677
  br label %bytestream2_get_le32.exit, !dbg !7677

bytestream2_get_le32.exit:                        ; preds = %if.then.i, %if.end.i
  %16 = load i32, i32* %retval.i, align 4, !dbg !7678
  store i32 %16, i32* %src_size, align 4, !dbg !7679
  %17 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7680
  store %struct.GetByteContext* %17, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !7681
  %18 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !7682
  %buffer_end.i38 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %18, i32 0, i32 1, !dbg !7683
  %19 = load i8*, i8** %buffer_end.i38, align 8, !dbg !7683
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !7684
  %buffer.i39 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 0, !dbg !7685
  %21 = load i8*, i8** %buffer.i39, align 8, !dbg !7685
  %sub.ptr.lhs.cast.i40 = ptrtoint i8* %19 to i64, !dbg !7686
  %sub.ptr.rhs.cast.i41 = ptrtoint i8* %21 to i64, !dbg !7686
  %sub.ptr.sub.i42 = sub i64 %sub.ptr.lhs.cast.i40, %sub.ptr.rhs.cast.i41, !dbg !7686
  %cmp.i43 = icmp slt i64 %sub.ptr.sub.i42, 4, !dbg !7687
  br i1 %cmp.i43, label %if.then.i46, label %if.end.i51, !dbg !7688

if.then.i46:                                      ; preds = %bytestream2_get_le32.exit
  %22 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !7689
  %buffer_end1.i44 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %22, i32 0, i32 1, !dbg !7690
  %23 = load i8*, i8** %buffer_end1.i44, align 8, !dbg !7690
  %24 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !7691
  %buffer2.i45 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %24, i32 0, i32 0, !dbg !7692
  store i8* %23, i8** %buffer2.i45, align 8, !dbg !7693
  store i32 0, i32* %retval.i36, align 4, !dbg !7694
  br label %bytestream2_get_le32.exit52, !dbg !7694

if.end.i51:                                       ; preds = %bytestream2_get_le32.exit
  %25 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !7695
  store %struct.GetByteContext* %25, %struct.GetByteContext** %g.addr.i.i35, align 8, !dbg !7696
  %26 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i35, align 8, !dbg !7697
  %buffer.i.i47 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %26, i32 0, i32 0, !dbg !7698
  store i8** %buffer.i.i47, i8*** %b.addr.i.i.i34, align 8, !dbg !7699
  %27 = load i8**, i8*** %b.addr.i.i.i34, align 8, !dbg !7700
  %28 = load i8*, i8** %27, align 8, !dbg !7701
  %add.ptr.i.i.i48 = getelementptr inbounds i8, i8* %28, i64 4, !dbg !7701
  store i8* %add.ptr.i.i.i48, i8** %27, align 8, !dbg !7701
  %29 = load i8**, i8*** %b.addr.i.i.i34, align 8, !dbg !7702
  %30 = load i8*, i8** %29, align 8, !dbg !7703
  %add.ptr1.i.i.i49 = getelementptr inbounds i8, i8* %30, i64 -4, !dbg !7704
  %31 = bitcast i8* %add.ptr1.i.i.i49 to %union.unaligned_32*, !dbg !7705
  %l.i.i.i50 = bitcast %union.unaligned_32* %31 to i32*, !dbg !7705
  %32 = load i32, i32* %l.i.i.i50, align 1, !dbg !7705
  store i32 %32, i32* %retval.i36, align 4, !dbg !7706
  br label %bytestream2_get_le32.exit52, !dbg !7706

bytestream2_get_le32.exit52:                      ; preds = %if.then.i46, %if.end.i51
  %33 = load i32, i32* %retval.i36, align 4, !dbg !7707
  store i32 %33, i32* %im, align 4, !dbg !7708
  %34 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7709
  store %struct.GetByteContext* %34, %struct.GetByteContext** %g.addr.i56, align 8, !dbg !7710
  %35 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i56, align 8, !dbg !7711
  %buffer_end.i57 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %35, i32 0, i32 1, !dbg !7712
  %36 = load i8*, i8** %buffer_end.i57, align 8, !dbg !7712
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i56, align 8, !dbg !7713
  %buffer.i58 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 0, !dbg !7714
  %38 = load i8*, i8** %buffer.i58, align 8, !dbg !7714
  %sub.ptr.lhs.cast.i59 = ptrtoint i8* %36 to i64, !dbg !7715
  %sub.ptr.rhs.cast.i60 = ptrtoint i8* %38 to i64, !dbg !7715
  %sub.ptr.sub.i61 = sub i64 %sub.ptr.lhs.cast.i59, %sub.ptr.rhs.cast.i60, !dbg !7715
  %cmp.i62 = icmp slt i64 %sub.ptr.sub.i61, 4, !dbg !7716
  br i1 %cmp.i62, label %if.then.i65, label %if.end.i70, !dbg !7717

if.then.i65:                                      ; preds = %bytestream2_get_le32.exit52
  %39 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i56, align 8, !dbg !7718
  %buffer_end1.i63 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %39, i32 0, i32 1, !dbg !7719
  %40 = load i8*, i8** %buffer_end1.i63, align 8, !dbg !7719
  %41 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i56, align 8, !dbg !7720
  %buffer2.i64 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %41, i32 0, i32 0, !dbg !7721
  store i8* %40, i8** %buffer2.i64, align 8, !dbg !7722
  store i32 0, i32* %retval.i55, align 4, !dbg !7723
  br label %bytestream2_get_le32.exit71, !dbg !7723

if.end.i70:                                       ; preds = %bytestream2_get_le32.exit52
  %42 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i56, align 8, !dbg !7724
  store %struct.GetByteContext* %42, %struct.GetByteContext** %g.addr.i.i54, align 8, !dbg !7725
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i54, align 8, !dbg !7726
  %buffer.i.i66 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 0, !dbg !7727
  store i8** %buffer.i.i66, i8*** %b.addr.i.i.i53, align 8, !dbg !7728
  %44 = load i8**, i8*** %b.addr.i.i.i53, align 8, !dbg !7729
  %45 = load i8*, i8** %44, align 8, !dbg !7730
  %add.ptr.i.i.i67 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !7730
  store i8* %add.ptr.i.i.i67, i8** %44, align 8, !dbg !7730
  %46 = load i8**, i8*** %b.addr.i.i.i53, align 8, !dbg !7731
  %47 = load i8*, i8** %46, align 8, !dbg !7732
  %add.ptr1.i.i.i68 = getelementptr inbounds i8, i8* %47, i64 -4, !dbg !7733
  %48 = bitcast i8* %add.ptr1.i.i.i68 to %union.unaligned_32*, !dbg !7734
  %l.i.i.i69 = bitcast %union.unaligned_32* %48 to i32*, !dbg !7734
  %49 = load i32, i32* %l.i.i.i69, align 1, !dbg !7734
  store i32 %49, i32* %retval.i55, align 4, !dbg !7735
  br label %bytestream2_get_le32.exit71, !dbg !7735

bytestream2_get_le32.exit71:                      ; preds = %if.then.i65, %if.end.i70
  %50 = load i32, i32* %retval.i55, align 4, !dbg !7736
  store i32 %50, i32* %iM, align 4, !dbg !7737
  %51 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7738
  store %struct.GetByteContext* %51, %struct.GetByteContext** %g.addr.i78, align 8, !dbg !7739
  store i32 4, i32* %size.addr.i, align 4, !dbg !7739
  %52 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i78, align 8, !dbg !7740
  %buffer_end.i79 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %52, i32 0, i32 1, !dbg !7741
  %53 = load i8*, i8** %buffer_end.i79, align 8, !dbg !7741
  %54 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i78, align 8, !dbg !7742
  %buffer.i80 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %54, i32 0, i32 0, !dbg !7743
  %55 = load i8*, i8** %buffer.i80, align 8, !dbg !7743
  %sub.ptr.lhs.cast.i81 = ptrtoint i8* %53 to i64, !dbg !7744
  %sub.ptr.rhs.cast.i82 = ptrtoint i8* %55 to i64, !dbg !7744
  %sub.ptr.sub.i83 = sub i64 %sub.ptr.lhs.cast.i81, %sub.ptr.rhs.cast.i82, !dbg !7744
  %56 = load i32, i32* %size.addr.i, align 4, !dbg !7745
  %conv.i84 = zext i32 %56 to i64, !dbg !7746
  %cmp.i85 = icmp sgt i64 %sub.ptr.sub.i83, %conv.i84, !dbg !7747
  br i1 %cmp.i85, label %cond.true.i, label %cond.false.i, !dbg !7748

cond.true.i:                                      ; preds = %bytestream2_get_le32.exit71
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !7749
  %conv2.i = zext i32 %57 to i64, !dbg !7750
  br label %bytestream2_skip.exit, !dbg !7751

cond.false.i:                                     ; preds = %bytestream2_get_le32.exit71
  %58 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i78, align 8, !dbg !7752
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %58, i32 0, i32 1, !dbg !7753
  %59 = load i8*, i8** %buffer_end3.i, align 8, !dbg !7753
  %60 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i78, align 8, !dbg !7754
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %60, i32 0, i32 0, !dbg !7755
  %61 = load i8*, i8** %buffer4.i, align 8, !dbg !7755
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %59 to i64, !dbg !7756
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %61 to i64, !dbg !7756
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !7756
  br label %bytestream2_skip.exit, !dbg !7757

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !7758
  %62 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i78, align 8, !dbg !7759
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %62, i32 0, i32 0, !dbg !7760
  %63 = load i8*, i8** %buffer8.i, align 8, !dbg !7761
  %add.ptr.i = getelementptr inbounds i8, i8* %63, i64 %cond.i, !dbg !7761
  store i8* %add.ptr.i, i8** %buffer8.i, align 8, !dbg !7761
  %64 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7762
  store %struct.GetByteContext* %64, %struct.GetByteContext** %g.addr.i110, align 8, !dbg !7763
  %65 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i110, align 8, !dbg !7764
  %buffer_end.i111 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %65, i32 0, i32 1, !dbg !7765
  %66 = load i8*, i8** %buffer_end.i111, align 8, !dbg !7765
  %67 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i110, align 8, !dbg !7766
  %buffer.i112 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %67, i32 0, i32 0, !dbg !7767
  %68 = load i8*, i8** %buffer.i112, align 8, !dbg !7767
  %sub.ptr.lhs.cast.i113 = ptrtoint i8* %66 to i64, !dbg !7768
  %sub.ptr.rhs.cast.i114 = ptrtoint i8* %68 to i64, !dbg !7768
  %sub.ptr.sub.i115 = sub i64 %sub.ptr.lhs.cast.i113, %sub.ptr.rhs.cast.i114, !dbg !7768
  %cmp.i116 = icmp slt i64 %sub.ptr.sub.i115, 4, !dbg !7769
  br i1 %cmp.i116, label %if.then.i119, label %if.end.i124, !dbg !7770

if.then.i119:                                     ; preds = %bytestream2_skip.exit
  %69 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i110, align 8, !dbg !7771
  %buffer_end1.i117 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %69, i32 0, i32 1, !dbg !7772
  %70 = load i8*, i8** %buffer_end1.i117, align 8, !dbg !7772
  %71 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i110, align 8, !dbg !7773
  %buffer2.i118 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %71, i32 0, i32 0, !dbg !7774
  store i8* %70, i8** %buffer2.i118, align 8, !dbg !7775
  store i32 0, i32* %retval.i109, align 4, !dbg !7776
  br label %bytestream2_get_le32.exit125, !dbg !7776

if.end.i124:                                      ; preds = %bytestream2_skip.exit
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i110, align 8, !dbg !7777
  store %struct.GetByteContext* %72, %struct.GetByteContext** %g.addr.i.i108, align 8, !dbg !7778
  %73 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i108, align 8, !dbg !7779
  %buffer.i.i120 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %73, i32 0, i32 0, !dbg !7780
  store i8** %buffer.i.i120, i8*** %b.addr.i.i.i107, align 8, !dbg !7781
  %74 = load i8**, i8*** %b.addr.i.i.i107, align 8, !dbg !7782
  %75 = load i8*, i8** %74, align 8, !dbg !7783
  %add.ptr.i.i.i121 = getelementptr inbounds i8, i8* %75, i64 4, !dbg !7783
  store i8* %add.ptr.i.i.i121, i8** %74, align 8, !dbg !7783
  %76 = load i8**, i8*** %b.addr.i.i.i107, align 8, !dbg !7784
  %77 = load i8*, i8** %76, align 8, !dbg !7785
  %add.ptr1.i.i.i122 = getelementptr inbounds i8, i8* %77, i64 -4, !dbg !7786
  %78 = bitcast i8* %add.ptr1.i.i.i122 to %union.unaligned_32*, !dbg !7787
  %l.i.i.i123 = bitcast %union.unaligned_32* %78 to i32*, !dbg !7787
  %79 = load i32, i32* %l.i.i.i123, align 1, !dbg !7787
  store i32 %79, i32* %retval.i109, align 4, !dbg !7788
  br label %bytestream2_get_le32.exit125, !dbg !7788

bytestream2_get_le32.exit125:                     ; preds = %if.then.i119, %if.end.i124
  %80 = load i32, i32* %retval.i109, align 4, !dbg !7789
  store i32 %80, i32* %nBits, align 4, !dbg !7790
  %81 = load i32, i32* %im, align 4, !dbg !7791
  %cmp = icmp slt i32 %81, 0, !dbg !7793
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7794

lor.lhs.false:                                    ; preds = %bytestream2_get_le32.exit125
  %82 = load i32, i32* %im, align 4, !dbg !7795
  %cmp4 = icmp sge i32 %82, 65537, !dbg !7797
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !7798

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %83 = load i32, i32* %iM, align 4, !dbg !7799
  %cmp6 = icmp slt i32 %83, 0, !dbg !7800
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !7801

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %84 = load i32, i32* %iM, align 4, !dbg !7802
  %cmp8 = icmp sge i32 %84, 65537, !dbg !7803
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !7804

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %85 = load i32, i32* %src_size, align 4, !dbg !7805
  %cmp10 = icmp slt i32 %85, 0, !dbg !7806
  br i1 %cmp10, label %if.then, label %if.end, !dbg !7807

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false, %bytestream2_get_le32.exit125
  store i32 -1094995529, i32* %retval, align 4, !dbg !7809
  br label %return, !dbg !7809

if.end:                                           ; preds = %lor.lhs.false9
  %86 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7810
  store %struct.GetByteContext* %86, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !7811
  store i32 4, i32* %size.addr.i87, align 4, !dbg !7811
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !7812
  %buffer_end.i88 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 1, !dbg !7813
  %88 = load i8*, i8** %buffer_end.i88, align 8, !dbg !7813
  %89 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !7814
  %buffer.i89 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %89, i32 0, i32 0, !dbg !7815
  %90 = load i8*, i8** %buffer.i89, align 8, !dbg !7815
  %sub.ptr.lhs.cast.i90 = ptrtoint i8* %88 to i64, !dbg !7816
  %sub.ptr.rhs.cast.i91 = ptrtoint i8* %90 to i64, !dbg !7816
  %sub.ptr.sub.i92 = sub i64 %sub.ptr.lhs.cast.i90, %sub.ptr.rhs.cast.i91, !dbg !7816
  %91 = load i32, i32* %size.addr.i87, align 4, !dbg !7817
  %conv.i93 = zext i32 %91 to i64, !dbg !7818
  %cmp.i94 = icmp sgt i64 %sub.ptr.sub.i92, %conv.i93, !dbg !7819
  br i1 %cmp.i94, label %cond.true.i96, label %cond.false.i102, !dbg !7820

cond.true.i96:                                    ; preds = %if.end
  %92 = load i32, i32* %size.addr.i87, align 4, !dbg !7821
  %conv2.i95 = zext i32 %92 to i64, !dbg !7822
  br label %bytestream2_skip.exit106, !dbg !7823

cond.false.i102:                                  ; preds = %if.end
  %93 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !7824
  %buffer_end3.i97 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %93, i32 0, i32 1, !dbg !7825
  %94 = load i8*, i8** %buffer_end3.i97, align 8, !dbg !7825
  %95 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !7826
  %buffer4.i98 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %95, i32 0, i32 0, !dbg !7827
  %96 = load i8*, i8** %buffer4.i98, align 8, !dbg !7827
  %sub.ptr.lhs.cast5.i99 = ptrtoint i8* %94 to i64, !dbg !7828
  %sub.ptr.rhs.cast6.i100 = ptrtoint i8* %96 to i64, !dbg !7828
  %sub.ptr.sub7.i101 = sub i64 %sub.ptr.lhs.cast5.i99, %sub.ptr.rhs.cast6.i100, !dbg !7828
  br label %bytestream2_skip.exit106, !dbg !7829

bytestream2_skip.exit106:                         ; preds = %cond.true.i96, %cond.false.i102
  %cond.i103 = phi i64 [ %conv2.i95, %cond.true.i96 ], [ %sub.ptr.sub7.i101, %cond.false.i102 ], !dbg !7830
  %97 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !7831
  %buffer8.i104 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %97, i32 0, i32 0, !dbg !7832
  %98 = load i8*, i8** %buffer8.i104, align 8, !dbg !7833
  %add.ptr.i105 = getelementptr inbounds i8, i8* %98, i64 %cond.i103, !dbg !7833
  store i8* %add.ptr.i105, i8** %buffer8.i104, align 8, !dbg !7833
  %call11 = call i8* @av_mallocz_array(i64 65537, i64 8), !dbg !7834
  %99 = bitcast i8* %call11 to i64*, !dbg !7834
  store i64* %99, i64** %freq, align 8, !dbg !7835
  %call12 = call i8* @av_mallocz_array(i64 16384, i64 16), !dbg !7836
  %100 = bitcast i8* %call12 to %struct.HufDec*, !dbg !7836
  store %struct.HufDec* %100, %struct.HufDec** %hdec, align 8, !dbg !7837
  %101 = load i64*, i64** %freq, align 8, !dbg !7838
  %tobool = icmp ne i64* %101, null, !dbg !7838
  br i1 %tobool, label %lor.lhs.false13, label %if.then15, !dbg !7840

lor.lhs.false13:                                  ; preds = %bytestream2_skip.exit106
  %102 = load %struct.HufDec*, %struct.HufDec** %hdec, align 8, !dbg !7841
  %tobool14 = icmp ne %struct.HufDec* %102, null, !dbg !7841
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7843

if.then15:                                        ; preds = %lor.lhs.false13, %bytestream2_skip.exit106
  store i32 -12, i32* %ret, align 4, !dbg !7844
  br label %fail, !dbg !7846

if.end16:                                         ; preds = %lor.lhs.false13
  %103 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7847
  %104 = load i32, i32* %im, align 4, !dbg !7849
  %105 = load i32, i32* %iM, align 4, !dbg !7850
  %106 = load i64*, i64** %freq, align 8, !dbg !7851
  %call17 = call i32 @huf_unpack_enc_table(%struct.GetByteContext* %103, i32 %104, i32 %105, i64* %106), !dbg !7852
  store i32 %call17, i32* %ret, align 4, !dbg !7853
  %cmp18 = icmp slt i32 %call17, 0, !dbg !7854
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !7855

if.then19:                                        ; preds = %if.end16
  br label %fail, !dbg !7856

if.end20:                                         ; preds = %if.end16
  %107 = load i32, i32* %nBits, align 4, !dbg !7857
  %108 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7858
  store %struct.GetByteContext* %108, %struct.GetByteContext** %g.addr.i72, align 8, !dbg !7859
  %109 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i72, align 8, !dbg !7860
  %buffer_end.i73 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %109, i32 0, i32 1, !dbg !7861
  %110 = load i8*, i8** %buffer_end.i73, align 8, !dbg !7861
  %111 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i72, align 8, !dbg !7862
  %buffer.i74 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %111, i32 0, i32 0, !dbg !7863
  %112 = load i8*, i8** %buffer.i74, align 8, !dbg !7863
  %sub.ptr.lhs.cast.i75 = ptrtoint i8* %110 to i64, !dbg !7864
  %sub.ptr.rhs.cast.i76 = ptrtoint i8* %112 to i64, !dbg !7864
  %sub.ptr.sub.i77 = sub i64 %sub.ptr.lhs.cast.i75, %sub.ptr.rhs.cast.i76, !dbg !7864
  %conv.i = trunc i64 %sub.ptr.sub.i77 to i32, !dbg !7860
  %mul = mul i32 8, %conv.i, !dbg !7865
  %cmp22 = icmp ugt i32 %107, %mul, !dbg !7866
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !7867

if.then23:                                        ; preds = %if.end20
  store i32 -1094995529, i32* %ret, align 4, !dbg !7868
  br label %fail, !dbg !7870

if.end24:                                         ; preds = %if.end20
  %113 = load i64*, i64** %freq, align 8, !dbg !7871
  %114 = load i32, i32* %im, align 4, !dbg !7873
  %115 = load i32, i32* %iM, align 4, !dbg !7874
  %116 = load %struct.HufDec*, %struct.HufDec** %hdec, align 8, !dbg !7875
  %call25 = call i32 @huf_build_dec_table(i64* %113, i32 %114, i32 %115, %struct.HufDec* %116), !dbg !7876
  store i32 %call25, i32* %ret, align 4, !dbg !7877
  %cmp26 = icmp slt i32 %call25, 0, !dbg !7878
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !7879

if.then27:                                        ; preds = %if.end24
  br label %fail, !dbg !7880

if.end28:                                         ; preds = %if.end24
  %117 = load i64*, i64** %freq, align 8, !dbg !7881
  %118 = load %struct.HufDec*, %struct.HufDec** %hdec, align 8, !dbg !7882
  %119 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !7883
  %120 = load i32, i32* %nBits, align 4, !dbg !7884
  %121 = load i32, i32* %iM, align 4, !dbg !7885
  %122 = load i32, i32* %dst_size.addr, align 4, !dbg !7886
  %123 = load i16*, i16** %dst.addr, align 8, !dbg !7887
  %call29 = call i32 @huf_decode(i64* %117, %struct.HufDec* %118, %struct.GetByteContext* %119, i32 %120, i32 %121, i32 %122, i16* %123), !dbg !7888
  store i32 %call29, i32* %ret, align 4, !dbg !7889
  br label %fail, !dbg !7890

fail:                                             ; preds = %if.end28, %if.then27, %if.then23, %if.then19, %if.then15
  store i32 0, i32* %i, align 4, !dbg !7891
  br label %for.cond, !dbg !7893

for.cond:                                         ; preds = %for.inc, %fail
  %124 = load i32, i32* %i, align 4, !dbg !7894
  %cmp30 = icmp slt i32 %124, 16384, !dbg !7897
  br i1 %cmp30, label %for.body, label %for.end, !dbg !7898

for.body:                                         ; preds = %for.cond
  %125 = load %struct.HufDec*, %struct.HufDec** %hdec, align 8, !dbg !7899
  %tobool31 = icmp ne %struct.HufDec* %125, null, !dbg !7899
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !7901

if.then32:                                        ; preds = %for.body
  %126 = load i32, i32* %i, align 4, !dbg !7902
  %idxprom = sext i32 %126 to i64, !dbg !7903
  %127 = load %struct.HufDec*, %struct.HufDec** %hdec, align 8, !dbg !7903
  %arrayidx = getelementptr inbounds %struct.HufDec, %struct.HufDec* %127, i64 %idxprom, !dbg !7903
  %p = getelementptr inbounds %struct.HufDec, %struct.HufDec* %arrayidx, i32 0, i32 2, !dbg !7904
  %128 = bitcast i32** %p to i8*, !dbg !7905
  call void @av_freep(i8* %128), !dbg !7906
  br label %if.end33, !dbg !7906

if.end33:                                         ; preds = %if.then32, %for.body
  br label %for.inc, !dbg !7907

for.inc:                                          ; preds = %if.end33
  %129 = load i32, i32* %i, align 4, !dbg !7909
  %inc = add nsw i32 %129, 1, !dbg !7909
  store i32 %inc, i32* %i, align 4, !dbg !7909
  br label %for.cond, !dbg !7911, !llvm.loop !7912

for.end:                                          ; preds = %for.cond
  %130 = load i64*, i64** %freq, align 8, !dbg !7914
  %131 = bitcast i64* %130 to i8*, !dbg !7914
  call void @av_free(i8* %131), !dbg !7915
  %132 = load %struct.HufDec*, %struct.HufDec** %hdec, align 8, !dbg !7916
  %133 = bitcast %struct.HufDec* %132 to i8*, !dbg !7916
  call void @av_free(i8* %133), !dbg !7917
  %134 = load i32, i32* %ret, align 4, !dbg !7918
  store i32 %134, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

return:                                           ; preds = %for.end, %if.then
  %135 = load i32, i32* %retval, align 4, !dbg !7920
  ret i32 %135, !dbg !7920
}

; Function Attrs: nounwind uwtable
define internal void @wav_decode(i16* %in, i32 %nx, i32 %ox, i32 %ny, i32 %oy, i16 zeroext %mx) #0 !dbg !7921 {
entry:
  %in.addr = alloca i16*, align 8
  %nx.addr = alloca i32, align 4
  %ox.addr = alloca i32, align 4
  %ny.addr = alloca i32, align 4
  %oy.addr = alloca i32, align 4
  %mx.addr = alloca i16, align 2
  %w14 = alloca i32, align 4
  %n = alloca i32, align 4
  %p = alloca i32, align 4
  %p2 = alloca i32, align 4
  %py = alloca i16*, align 8
  %ey = alloca i16*, align 8
  %i00 = alloca i16, align 2
  %i01 = alloca i16, align 2
  %i10 = alloca i16, align 2
  %i11 = alloca i16, align 2
  %oy1 = alloca i32, align 4
  %oy2 = alloca i32, align 4
  %ox1 = alloca i32, align 4
  %ox2 = alloca i32, align 4
  %px = alloca i16*, align 8
  %ex = alloca i16*, align 8
  %p01 = alloca i16*, align 8
  %p10 = alloca i16*, align 8
  %p11 = alloca i16*, align 8
  %p1035 = alloca i16*, align 8
  %px50 = alloca i16*, align 8
  %ex51 = alloca i16*, align 8
  %p0160 = alloca i16*, align 8
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !7924, metadata !1741), !dbg !7925
  store i32 %nx, i32* %nx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nx.addr, metadata !7926, metadata !1741), !dbg !7927
  store i32 %ox, i32* %ox.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ox.addr, metadata !7928, metadata !1741), !dbg !7929
  store i32 %ny, i32* %ny.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ny.addr, metadata !7930, metadata !1741), !dbg !7931
  store i32 %oy, i32* %oy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oy.addr, metadata !7932, metadata !1741), !dbg !7933
  store i16 %mx, i16* %mx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mx.addr, metadata !7934, metadata !1741), !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %w14, metadata !7936, metadata !1741), !dbg !7937
  %0 = load i16, i16* %mx.addr, align 2, !dbg !7938
  %conv = zext i16 %0 to i32, !dbg !7938
  %cmp = icmp slt i32 %conv, 16384, !dbg !7939
  %conv1 = zext i1 %cmp to i32, !dbg !7939
  store i32 %conv1, i32* %w14, align 4, !dbg !7937
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7940, metadata !1741), !dbg !7941
  %1 = load i32, i32* %nx.addr, align 4, !dbg !7942
  %2 = load i32, i32* %ny.addr, align 4, !dbg !7943
  %cmp2 = icmp sgt i32 %1, %2, !dbg !7944
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7945

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %ny.addr, align 4, !dbg !7946
  br label %cond.end, !dbg !7948

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %nx.addr, align 4, !dbg !7949
  br label %cond.end, !dbg !7951

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %4, %cond.false ], !dbg !7952
  store i32 %cond, i32* %n, align 4, !dbg !7954
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7955, metadata !1741), !dbg !7956
  store i32 1, i32* %p, align 4, !dbg !7956
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !7957, metadata !1741), !dbg !7958
  br label %while.cond, !dbg !7959

while.cond:                                       ; preds = %while.body, %cond.end
  %5 = load i32, i32* %p, align 4, !dbg !7960
  %6 = load i32, i32* %n, align 4, !dbg !7961
  %cmp4 = icmp sle i32 %5, %6, !dbg !7962
  br i1 %cmp4, label %while.body, label %while.end, !dbg !7963

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %p, align 4, !dbg !7964
  %shl = shl i32 %7, 1, !dbg !7964
  store i32 %shl, i32* %p, align 4, !dbg !7964
  br label %while.cond, !dbg !7965, !llvm.loop !7966

while.end:                                        ; preds = %while.cond
  %8 = load i32, i32* %p, align 4, !dbg !7967
  %shr = ashr i32 %8, 1, !dbg !7967
  store i32 %shr, i32* %p, align 4, !dbg !7967
  %9 = load i32, i32* %p, align 4, !dbg !7968
  store i32 %9, i32* %p2, align 4, !dbg !7969
  %10 = load i32, i32* %p, align 4, !dbg !7970
  %shr6 = ashr i32 %10, 1, !dbg !7970
  store i32 %shr6, i32* %p, align 4, !dbg !7970
  br label %while.cond7, !dbg !7971

while.cond7:                                      ; preds = %if.end71, %while.end
  %11 = load i32, i32* %p, align 4, !dbg !7972
  %cmp8 = icmp sge i32 %11, 1, !dbg !7973
  br i1 %cmp8, label %while.body10, label %while.end73, !dbg !7974

while.body10:                                     ; preds = %while.cond7
  call void @llvm.dbg.declare(metadata i16** %py, metadata !7975, metadata !1741), !dbg !7977
  %12 = load i16*, i16** %in.addr, align 8, !dbg !7978
  store i16* %12, i16** %py, align 8, !dbg !7977
  call void @llvm.dbg.declare(metadata i16** %ey, metadata !7979, metadata !1741), !dbg !7980
  %13 = load i16*, i16** %in.addr, align 8, !dbg !7981
  %14 = load i32, i32* %oy.addr, align 4, !dbg !7982
  %15 = load i32, i32* %ny.addr, align 4, !dbg !7983
  %16 = load i32, i32* %p2, align 4, !dbg !7984
  %sub = sub nsw i32 %15, %16, !dbg !7985
  %mul = mul nsw i32 %14, %sub, !dbg !7986
  %idx.ext = sext i32 %mul to i64, !dbg !7987
  %add.ptr = getelementptr inbounds i16, i16* %13, i64 %idx.ext, !dbg !7987
  store i16* %add.ptr, i16** %ey, align 8, !dbg !7980
  call void @llvm.dbg.declare(metadata i16* %i00, metadata !7988, metadata !1741), !dbg !7989
  call void @llvm.dbg.declare(metadata i16* %i01, metadata !7990, metadata !1741), !dbg !7991
  call void @llvm.dbg.declare(metadata i16* %i10, metadata !7992, metadata !1741), !dbg !7993
  call void @llvm.dbg.declare(metadata i16* %i11, metadata !7994, metadata !1741), !dbg !7995
  call void @llvm.dbg.declare(metadata i32* %oy1, metadata !7996, metadata !1741), !dbg !7997
  %17 = load i32, i32* %oy.addr, align 4, !dbg !7998
  %18 = load i32, i32* %p, align 4, !dbg !7999
  %mul11 = mul nsw i32 %17, %18, !dbg !8000
  store i32 %mul11, i32* %oy1, align 4, !dbg !7997
  call void @llvm.dbg.declare(metadata i32* %oy2, metadata !8001, metadata !1741), !dbg !8002
  %19 = load i32, i32* %oy.addr, align 4, !dbg !8003
  %20 = load i32, i32* %p2, align 4, !dbg !8004
  %mul12 = mul nsw i32 %19, %20, !dbg !8005
  store i32 %mul12, i32* %oy2, align 4, !dbg !8002
  call void @llvm.dbg.declare(metadata i32* %ox1, metadata !8006, metadata !1741), !dbg !8007
  %21 = load i32, i32* %ox.addr, align 4, !dbg !8008
  %22 = load i32, i32* %p, align 4, !dbg !8009
  %mul13 = mul nsw i32 %21, %22, !dbg !8010
  store i32 %mul13, i32* %ox1, align 4, !dbg !8007
  call void @llvm.dbg.declare(metadata i32* %ox2, metadata !8011, metadata !1741), !dbg !8012
  %23 = load i32, i32* %ox.addr, align 4, !dbg !8013
  %24 = load i32, i32* %p2, align 4, !dbg !8014
  %mul14 = mul nsw i32 %23, %24, !dbg !8015
  store i32 %mul14, i32* %ox2, align 4, !dbg !8012
  br label %for.cond, !dbg !8016

for.cond:                                         ; preds = %for.inc43, %while.body10
  %25 = load i16*, i16** %py, align 8, !dbg !8017
  %26 = load i16*, i16** %ey, align 8, !dbg !8021
  %cmp15 = icmp ule i16* %25, %26, !dbg !8022
  br i1 %cmp15, label %for.body, label %for.end46, !dbg !8023

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %px, metadata !8024, metadata !1741), !dbg !8026
  %27 = load i16*, i16** %py, align 8, !dbg !8027
  store i16* %27, i16** %px, align 8, !dbg !8026
  call void @llvm.dbg.declare(metadata i16** %ex, metadata !8028, metadata !1741), !dbg !8029
  %28 = load i16*, i16** %py, align 8, !dbg !8030
  %29 = load i32, i32* %ox.addr, align 4, !dbg !8031
  %30 = load i32, i32* %nx.addr, align 4, !dbg !8032
  %31 = load i32, i32* %p2, align 4, !dbg !8033
  %sub17 = sub nsw i32 %30, %31, !dbg !8034
  %mul18 = mul nsw i32 %29, %sub17, !dbg !8035
  %idx.ext19 = sext i32 %mul18 to i64, !dbg !8036
  %add.ptr20 = getelementptr inbounds i16, i16* %28, i64 %idx.ext19, !dbg !8036
  store i16* %add.ptr20, i16** %ex, align 8, !dbg !8029
  br label %for.cond21, !dbg !8037

for.cond21:                                       ; preds = %for.inc, %for.body
  %32 = load i16*, i16** %px, align 8, !dbg !8038
  %33 = load i16*, i16** %ex, align 8, !dbg !8042
  %cmp22 = icmp ule i16* %32, %33, !dbg !8043
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !8044

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata i16** %p01, metadata !8045, metadata !1741), !dbg !8047
  %34 = load i16*, i16** %px, align 8, !dbg !8048
  %35 = load i32, i32* %ox1, align 4, !dbg !8049
  %idx.ext25 = sext i32 %35 to i64, !dbg !8050
  %add.ptr26 = getelementptr inbounds i16, i16* %34, i64 %idx.ext25, !dbg !8050
  store i16* %add.ptr26, i16** %p01, align 8, !dbg !8047
  call void @llvm.dbg.declare(metadata i16** %p10, metadata !8051, metadata !1741), !dbg !8052
  %36 = load i16*, i16** %px, align 8, !dbg !8053
  %37 = load i32, i32* %oy1, align 4, !dbg !8054
  %idx.ext27 = sext i32 %37 to i64, !dbg !8055
  %add.ptr28 = getelementptr inbounds i16, i16* %36, i64 %idx.ext27, !dbg !8055
  store i16* %add.ptr28, i16** %p10, align 8, !dbg !8052
  call void @llvm.dbg.declare(metadata i16** %p11, metadata !8056, metadata !1741), !dbg !8057
  %38 = load i16*, i16** %p10, align 8, !dbg !8058
  %39 = load i32, i32* %ox1, align 4, !dbg !8059
  %idx.ext29 = sext i32 %39 to i64, !dbg !8060
  %add.ptr30 = getelementptr inbounds i16, i16* %38, i64 %idx.ext29, !dbg !8060
  store i16* %add.ptr30, i16** %p11, align 8, !dbg !8057
  %40 = load i32, i32* %w14, align 4, !dbg !8061
  %tobool = icmp ne i32 %40, 0, !dbg !8061
  br i1 %tobool, label %if.then, label %if.else, !dbg !8063

if.then:                                          ; preds = %for.body24
  %41 = load i16*, i16** %px, align 8, !dbg !8064
  %42 = load i16, i16* %41, align 2, !dbg !8066
  %43 = load i16*, i16** %p10, align 8, !dbg !8067
  %44 = load i16, i16* %43, align 2, !dbg !8068
  call void @wdec14(i16 zeroext %42, i16 zeroext %44, i16* %i00, i16* %i10), !dbg !8069
  %45 = load i16*, i16** %p01, align 8, !dbg !8070
  %46 = load i16, i16* %45, align 2, !dbg !8071
  %47 = load i16*, i16** %p11, align 8, !dbg !8072
  %48 = load i16, i16* %47, align 2, !dbg !8073
  call void @wdec14(i16 zeroext %46, i16 zeroext %48, i16* %i01, i16* %i11), !dbg !8074
  %49 = load i16, i16* %i00, align 2, !dbg !8075
  %50 = load i16, i16* %i01, align 2, !dbg !8076
  %51 = load i16*, i16** %px, align 8, !dbg !8077
  %52 = load i16*, i16** %p01, align 8, !dbg !8078
  call void @wdec14(i16 zeroext %49, i16 zeroext %50, i16* %51, i16* %52), !dbg !8079
  %53 = load i16, i16* %i10, align 2, !dbg !8080
  %54 = load i16, i16* %i11, align 2, !dbg !8081
  %55 = load i16*, i16** %p10, align 8, !dbg !8082
  %56 = load i16*, i16** %p11, align 8, !dbg !8083
  call void @wdec14(i16 zeroext %53, i16 zeroext %54, i16* %55, i16* %56), !dbg !8084
  br label %if.end, !dbg !8085

if.else:                                          ; preds = %for.body24
  %57 = load i16*, i16** %px, align 8, !dbg !8086
  %58 = load i16, i16* %57, align 2, !dbg !8088
  %59 = load i16*, i16** %p10, align 8, !dbg !8089
  %60 = load i16, i16* %59, align 2, !dbg !8090
  call void @wdec16(i16 zeroext %58, i16 zeroext %60, i16* %i00, i16* %i10), !dbg !8091
  %61 = load i16*, i16** %p01, align 8, !dbg !8092
  %62 = load i16, i16* %61, align 2, !dbg !8093
  %63 = load i16*, i16** %p11, align 8, !dbg !8094
  %64 = load i16, i16* %63, align 2, !dbg !8095
  call void @wdec16(i16 zeroext %62, i16 zeroext %64, i16* %i01, i16* %i11), !dbg !8096
  %65 = load i16, i16* %i00, align 2, !dbg !8097
  %66 = load i16, i16* %i01, align 2, !dbg !8098
  %67 = load i16*, i16** %px, align 8, !dbg !8099
  %68 = load i16*, i16** %p01, align 8, !dbg !8100
  call void @wdec16(i16 zeroext %65, i16 zeroext %66, i16* %67, i16* %68), !dbg !8101
  %69 = load i16, i16* %i10, align 2, !dbg !8102
  %70 = load i16, i16* %i11, align 2, !dbg !8103
  %71 = load i16*, i16** %p10, align 8, !dbg !8104
  %72 = load i16*, i16** %p11, align 8, !dbg !8105
  call void @wdec16(i16 zeroext %69, i16 zeroext %70, i16* %71, i16* %72), !dbg !8106
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !8107

for.inc:                                          ; preds = %if.end
  %73 = load i32, i32* %ox2, align 4, !dbg !8108
  %74 = load i16*, i16** %px, align 8, !dbg !8110
  %idx.ext31 = sext i32 %73 to i64, !dbg !8110
  %add.ptr32 = getelementptr inbounds i16, i16* %74, i64 %idx.ext31, !dbg !8110
  store i16* %add.ptr32, i16** %px, align 8, !dbg !8110
  br label %for.cond21, !dbg !8111, !llvm.loop !8112

for.end:                                          ; preds = %for.cond21
  %75 = load i32, i32* %nx.addr, align 4, !dbg !8113
  %76 = load i32, i32* %p, align 4, !dbg !8115
  %and = and i32 %75, %76, !dbg !8116
  %tobool33 = icmp ne i32 %and, 0, !dbg !8116
  br i1 %tobool33, label %if.then34, label %if.end42, !dbg !8117

if.then34:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i16** %p1035, metadata !8118, metadata !1741), !dbg !8120
  %77 = load i16*, i16** %px, align 8, !dbg !8121
  %78 = load i32, i32* %oy1, align 4, !dbg !8122
  %idx.ext36 = sext i32 %78 to i64, !dbg !8123
  %add.ptr37 = getelementptr inbounds i16, i16* %77, i64 %idx.ext36, !dbg !8123
  store i16* %add.ptr37, i16** %p1035, align 8, !dbg !8120
  %79 = load i32, i32* %w14, align 4, !dbg !8124
  %tobool38 = icmp ne i32 %79, 0, !dbg !8124
  br i1 %tobool38, label %if.then39, label %if.else40, !dbg !8126

if.then39:                                        ; preds = %if.then34
  %80 = load i16*, i16** %px, align 8, !dbg !8127
  %81 = load i16, i16* %80, align 2, !dbg !8128
  %82 = load i16*, i16** %p1035, align 8, !dbg !8129
  %83 = load i16, i16* %82, align 2, !dbg !8130
  %84 = load i16*, i16** %p1035, align 8, !dbg !8131
  call void @wdec14(i16 zeroext %81, i16 zeroext %83, i16* %i00, i16* %84), !dbg !8132
  br label %if.end41, !dbg !8132

if.else40:                                        ; preds = %if.then34
  %85 = load i16*, i16** %px, align 8, !dbg !8133
  %86 = load i16, i16* %85, align 2, !dbg !8134
  %87 = load i16*, i16** %p1035, align 8, !dbg !8135
  %88 = load i16, i16* %87, align 2, !dbg !8136
  %89 = load i16*, i16** %p1035, align 8, !dbg !8137
  call void @wdec16(i16 zeroext %86, i16 zeroext %88, i16* %i00, i16* %89), !dbg !8138
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then39
  %90 = load i16, i16* %i00, align 2, !dbg !8139
  %91 = load i16*, i16** %px, align 8, !dbg !8140
  store i16 %90, i16* %91, align 2, !dbg !8141
  br label %if.end42, !dbg !8142

if.end42:                                         ; preds = %if.end41, %for.end
  br label %for.inc43, !dbg !8143

for.inc43:                                        ; preds = %if.end42
  %92 = load i32, i32* %oy2, align 4, !dbg !8144
  %93 = load i16*, i16** %py, align 8, !dbg !8146
  %idx.ext44 = sext i32 %92 to i64, !dbg !8146
  %add.ptr45 = getelementptr inbounds i16, i16* %93, i64 %idx.ext44, !dbg !8146
  store i16* %add.ptr45, i16** %py, align 8, !dbg !8146
  br label %for.cond, !dbg !8147, !llvm.loop !8148

for.end46:                                        ; preds = %for.cond
  %94 = load i32, i32* %ny.addr, align 4, !dbg !8149
  %95 = load i32, i32* %p, align 4, !dbg !8151
  %and47 = and i32 %94, %95, !dbg !8152
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8152
  br i1 %tobool48, label %if.then49, label %if.end71, !dbg !8153

if.then49:                                        ; preds = %for.end46
  call void @llvm.dbg.declare(metadata i16** %px50, metadata !8154, metadata !1741), !dbg !8156
  %96 = load i16*, i16** %py, align 8, !dbg !8157
  store i16* %96, i16** %px50, align 8, !dbg !8156
  call void @llvm.dbg.declare(metadata i16** %ex51, metadata !8158, metadata !1741), !dbg !8159
  %97 = load i16*, i16** %py, align 8, !dbg !8160
  %98 = load i32, i32* %ox.addr, align 4, !dbg !8161
  %99 = load i32, i32* %nx.addr, align 4, !dbg !8162
  %100 = load i32, i32* %p2, align 4, !dbg !8163
  %sub52 = sub nsw i32 %99, %100, !dbg !8164
  %mul53 = mul nsw i32 %98, %sub52, !dbg !8165
  %idx.ext54 = sext i32 %mul53 to i64, !dbg !8166
  %add.ptr55 = getelementptr inbounds i16, i16* %97, i64 %idx.ext54, !dbg !8166
  store i16* %add.ptr55, i16** %ex51, align 8, !dbg !8159
  br label %for.cond56, !dbg !8167

for.cond56:                                       ; preds = %for.inc67, %if.then49
  %101 = load i16*, i16** %px50, align 8, !dbg !8168
  %102 = load i16*, i16** %ex51, align 8, !dbg !8172
  %cmp57 = icmp ule i16* %101, %102, !dbg !8173
  br i1 %cmp57, label %for.body59, label %for.end70, !dbg !8174

for.body59:                                       ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata i16** %p0160, metadata !8175, metadata !1741), !dbg !8177
  %103 = load i16*, i16** %px50, align 8, !dbg !8178
  %104 = load i32, i32* %ox1, align 4, !dbg !8179
  %idx.ext61 = sext i32 %104 to i64, !dbg !8180
  %add.ptr62 = getelementptr inbounds i16, i16* %103, i64 %idx.ext61, !dbg !8180
  store i16* %add.ptr62, i16** %p0160, align 8, !dbg !8177
  %105 = load i32, i32* %w14, align 4, !dbg !8181
  %tobool63 = icmp ne i32 %105, 0, !dbg !8181
  br i1 %tobool63, label %if.then64, label %if.else65, !dbg !8183

if.then64:                                        ; preds = %for.body59
  %106 = load i16*, i16** %px50, align 8, !dbg !8184
  %107 = load i16, i16* %106, align 2, !dbg !8185
  %108 = load i16*, i16** %p0160, align 8, !dbg !8186
  %109 = load i16, i16* %108, align 2, !dbg !8187
  %110 = load i16*, i16** %p0160, align 8, !dbg !8188
  call void @wdec14(i16 zeroext %107, i16 zeroext %109, i16* %i00, i16* %110), !dbg !8189
  br label %if.end66, !dbg !8189

if.else65:                                        ; preds = %for.body59
  %111 = load i16*, i16** %px50, align 8, !dbg !8190
  %112 = load i16, i16* %111, align 2, !dbg !8191
  %113 = load i16*, i16** %p0160, align 8, !dbg !8192
  %114 = load i16, i16* %113, align 2, !dbg !8193
  %115 = load i16*, i16** %p0160, align 8, !dbg !8194
  call void @wdec16(i16 zeroext %112, i16 zeroext %114, i16* %i00, i16* %115), !dbg !8195
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  %116 = load i16, i16* %i00, align 2, !dbg !8196
  %117 = load i16*, i16** %px50, align 8, !dbg !8197
  store i16 %116, i16* %117, align 2, !dbg !8198
  br label %for.inc67, !dbg !8199

for.inc67:                                        ; preds = %if.end66
  %118 = load i32, i32* %ox2, align 4, !dbg !8200
  %119 = load i16*, i16** %px50, align 8, !dbg !8202
  %idx.ext68 = sext i32 %118 to i64, !dbg !8202
  %add.ptr69 = getelementptr inbounds i16, i16* %119, i64 %idx.ext68, !dbg !8202
  store i16* %add.ptr69, i16** %px50, align 8, !dbg !8202
  br label %for.cond56, !dbg !8203, !llvm.loop !8204

for.end70:                                        ; preds = %for.cond56
  br label %if.end71, !dbg !8205

if.end71:                                         ; preds = %for.end70, %for.end46
  %120 = load i32, i32* %p, align 4, !dbg !8206
  store i32 %120, i32* %p2, align 4, !dbg !8207
  %121 = load i32, i32* %p, align 4, !dbg !8208
  %shr72 = ashr i32 %121, 1, !dbg !8208
  store i32 %shr72, i32* %p, align 4, !dbg !8208
  br label %while.cond7, !dbg !8209, !llvm.loop !8210

while.end73:                                      ; preds = %while.cond7
  ret void, !dbg !8211
}

; Function Attrs: nounwind uwtable
define internal void @apply_lut(i16* %lut, i16* %dst, i32 %dsize) #0 !dbg !8212 {
entry:
  %lut.addr = alloca i16*, align 8
  %dst.addr = alloca i16*, align 8
  %dsize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i16* %lut, i16** %lut.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lut.addr, metadata !8217, metadata !1741), !dbg !8218
  store i16* %dst, i16** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr, metadata !8219, metadata !1741), !dbg !8220
  store i32 %dsize, i32* %dsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.addr, metadata !8221, metadata !1741), !dbg !8222
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8223, metadata !1741), !dbg !8224
  store i32 0, i32* %i, align 4, !dbg !8225
  br label %for.cond, !dbg !8227

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8228
  %1 = load i32, i32* %dsize.addr, align 4, !dbg !8231
  %cmp = icmp slt i32 %0, %1, !dbg !8232
  br i1 %cmp, label %for.body, label %for.end, !dbg !8233

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !8234
  %idxprom = sext i32 %2 to i64, !dbg !8235
  %3 = load i16*, i16** %dst.addr, align 8, !dbg !8235
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !8235
  %4 = load i16, i16* %arrayidx, align 2, !dbg !8235
  %idxprom1 = zext i16 %4 to i64, !dbg !8236
  %5 = load i16*, i16** %lut.addr, align 8, !dbg !8236
  %arrayidx2 = getelementptr inbounds i16, i16* %5, i64 %idxprom1, !dbg !8236
  %6 = load i16, i16* %arrayidx2, align 2, !dbg !8236
  %7 = load i32, i32* %i, align 4, !dbg !8237
  %idxprom3 = sext i32 %7 to i64, !dbg !8238
  %8 = load i16*, i16** %dst.addr, align 8, !dbg !8238
  %arrayidx4 = getelementptr inbounds i16, i16* %8, i64 %idxprom3, !dbg !8238
  store i16 %6, i16* %arrayidx4, align 2, !dbg !8239
  br label %for.inc, !dbg !8238

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !8240
  %inc = add nsw i32 %9, 1, !dbg !8240
  store i32 %inc, i32* %i, align 4, !dbg !8240
  br label %for.cond, !dbg !8242, !llvm.loop !8243

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8245
}

; Function Attrs: nounwind uwtable
define internal i32 @huf_unpack_enc_table(%struct.GetByteContext* %gb, i32 %im, i32 %iM, i64* %hcode) #0 !dbg !8246 {
entry:
  %g.addr.i43 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i43, metadata !3143, metadata !1741), !dbg !8249
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3149, metadata !1741), !dbg !8252
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2147, metadata !1741), !dbg !8253
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetByteContext*, align 8
  %im.addr = alloca i32, align 4
  %iM.addr = alloca i32, align 4
  %hcode.addr = alloca i64*, align 8
  %gbit = alloca %struct.GetBitContext, align 8
  %ret = alloca i32, align 4
  %l = alloca i64, align 8
  %zerun = alloca i32, align 4
  %zerun20 = alloca i32, align 4
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %gb.addr, metadata !8255, metadata !1741), !dbg !8256
  store i32 %im, i32* %im.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %im.addr, metadata !8257, metadata !1741), !dbg !8258
  store i32 %iM, i32* %iM.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iM.addr, metadata !8259, metadata !1741), !dbg !8260
  store i64* %hcode, i64** %hcode.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %hcode.addr, metadata !8261, metadata !1741), !dbg !8262
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gbit, metadata !8263, metadata !1741), !dbg !8273
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8274, metadata !1741), !dbg !8275
  %0 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8276
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %0, i32 0, i32 0, !dbg !8277
  %1 = load i8*, i8** %buffer, align 8, !dbg !8277
  %2 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8278
  store %struct.GetByteContext* %2, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8279
  %3 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8280
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %3, i32 0, i32 1, !dbg !8281
  %4 = load i8*, i8** %buffer_end.i, align 8, !dbg !8281
  %5 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8282
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %5, i32 0, i32 0, !dbg !8283
  %6 = load i8*, i8** %buffer.i, align 8, !dbg !8283
  %sub.ptr.lhs.cast.i = ptrtoint i8* %4 to i64, !dbg !8284
  %sub.ptr.rhs.cast.i = ptrtoint i8* %6 to i64, !dbg !8284
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !8284
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !8280
  %call1 = call i32 @init_get_bits8(%struct.GetBitContext* %gbit, i8* %1, i32 %conv.i), !dbg !8285
  store i32 %call1, i32* %ret, align 4, !dbg !8275
  %7 = load i32, i32* %ret, align 4, !dbg !8286
  %cmp = icmp slt i32 %7, 0, !dbg !8288
  br i1 %cmp, label %if.then, label %if.end, !dbg !8289

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !8290
  store i32 %8, i32* %retval, align 4, !dbg !8291
  br label %return, !dbg !8291

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !8292

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %im.addr, align 4, !dbg !8293
  %10 = load i32, i32* %iM.addr, align 4, !dbg !8297
  %cmp2 = icmp sle i32 %9, %10, !dbg !8298
  br i1 %cmp2, label %for.body, label %for.end, !dbg !8299

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %l, metadata !8300, metadata !1741), !dbg !8302
  %call3 = call i32 @get_bits(%struct.GetBitContext* %gbit, i32 6), !dbg !8303
  %conv = zext i32 %call3 to i64, !dbg !8303
  %11 = load i32, i32* %im.addr, align 4, !dbg !8304
  %idxprom = sext i32 %11 to i64, !dbg !8305
  %12 = load i64*, i64** %hcode.addr, align 8, !dbg !8305
  %arrayidx = getelementptr inbounds i64, i64* %12, i64 %idxprom, !dbg !8305
  store i64 %conv, i64* %arrayidx, align 8, !dbg !8306
  store i64 %conv, i64* %l, align 8, !dbg !8302
  %13 = load i64, i64* %l, align 8, !dbg !8307
  %cmp4 = icmp eq i64 %13, 63, !dbg !8309
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !8310

if.then6:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %zerun, metadata !8311, metadata !1741), !dbg !8313
  %call7 = call i32 @get_bits(%struct.GetBitContext* %gbit, i32 8), !dbg !8314
  %add = add i32 %call7, 6, !dbg !8315
  store i32 %add, i32* %zerun, align 4, !dbg !8313
  %14 = load i32, i32* %im.addr, align 4, !dbg !8316
  %15 = load i32, i32* %zerun, align 4, !dbg !8318
  %add8 = add nsw i32 %14, %15, !dbg !8319
  %16 = load i32, i32* %iM.addr, align 4, !dbg !8320
  %add9 = add nsw i32 %16, 1, !dbg !8321
  %cmp10 = icmp sgt i32 %add8, %add9, !dbg !8322
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8323

if.then12:                                        ; preds = %if.then6
  store i32 -1094995529, i32* %retval, align 4, !dbg !8324
  br label %return, !dbg !8324

if.end13:                                         ; preds = %if.then6
  br label %while.cond, !dbg !8325

while.cond:                                       ; preds = %while.body, %if.end13
  %17 = load i32, i32* %zerun, align 4, !dbg !8326
  %dec = add nsw i32 %17, -1, !dbg !8326
  store i32 %dec, i32* %zerun, align 4, !dbg !8326
  %tobool = icmp ne i32 %17, 0, !dbg !8328
  br i1 %tobool, label %while.body, label %while.end, !dbg !8328

while.body:                                       ; preds = %while.cond
  %18 = load i32, i32* %im.addr, align 4, !dbg !8329
  %inc = add nsw i32 %18, 1, !dbg !8329
  store i32 %inc, i32* %im.addr, align 4, !dbg !8329
  %idxprom14 = sext i32 %18 to i64, !dbg !8330
  %19 = load i64*, i64** %hcode.addr, align 8, !dbg !8330
  %arrayidx15 = getelementptr inbounds i64, i64* %19, i64 %idxprom14, !dbg !8330
  store i64 0, i64* %arrayidx15, align 8, !dbg !8331
  br label %while.cond, !dbg !8332, !llvm.loop !8334

while.end:                                        ; preds = %while.cond
  %20 = load i32, i32* %im.addr, align 4, !dbg !8335
  %dec16 = add nsw i32 %20, -1, !dbg !8335
  store i32 %dec16, i32* %im.addr, align 4, !dbg !8335
  br label %if.end39, !dbg !8336

if.else:                                          ; preds = %for.body
  %21 = load i64, i64* %l, align 8, !dbg !8337
  %cmp17 = icmp uge i64 %21, 59, !dbg !8340
  br i1 %cmp17, label %if.then19, label %if.end38, !dbg !8337

if.then19:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %zerun20, metadata !8341, metadata !1741), !dbg !8343
  %22 = load i64, i64* %l, align 8, !dbg !8344
  %sub = sub i64 %22, 59, !dbg !8345
  %add21 = add i64 %sub, 2, !dbg !8346
  %conv22 = trunc i64 %add21 to i32, !dbg !8344
  store i32 %conv22, i32* %zerun20, align 4, !dbg !8343
  %23 = load i32, i32* %im.addr, align 4, !dbg !8347
  %24 = load i32, i32* %zerun20, align 4, !dbg !8349
  %add23 = add nsw i32 %23, %24, !dbg !8350
  %25 = load i32, i32* %iM.addr, align 4, !dbg !8351
  %add24 = add nsw i32 %25, 1, !dbg !8352
  %cmp25 = icmp sgt i32 %add23, %add24, !dbg !8353
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !8354

if.then27:                                        ; preds = %if.then19
  store i32 -1094995529, i32* %retval, align 4, !dbg !8355
  br label %return, !dbg !8355

if.end28:                                         ; preds = %if.then19
  br label %while.cond29, !dbg !8356

while.cond29:                                     ; preds = %while.body32, %if.end28
  %26 = load i32, i32* %zerun20, align 4, !dbg !8357
  %dec30 = add nsw i32 %26, -1, !dbg !8357
  store i32 %dec30, i32* %zerun20, align 4, !dbg !8357
  %tobool31 = icmp ne i32 %26, 0, !dbg !8359
  br i1 %tobool31, label %while.body32, label %while.end36, !dbg !8359

while.body32:                                     ; preds = %while.cond29
  %27 = load i32, i32* %im.addr, align 4, !dbg !8360
  %inc33 = add nsw i32 %27, 1, !dbg !8360
  store i32 %inc33, i32* %im.addr, align 4, !dbg !8360
  %idxprom34 = sext i32 %27 to i64, !dbg !8361
  %28 = load i64*, i64** %hcode.addr, align 8, !dbg !8361
  %arrayidx35 = getelementptr inbounds i64, i64* %28, i64 %idxprom34, !dbg !8361
  store i64 0, i64* %arrayidx35, align 8, !dbg !8362
  br label %while.cond29, !dbg !8363, !llvm.loop !8365

while.end36:                                      ; preds = %while.cond29
  %29 = load i32, i32* %im.addr, align 4, !dbg !8366
  %dec37 = add nsw i32 %29, -1, !dbg !8366
  store i32 %dec37, i32* %im.addr, align 4, !dbg !8366
  br label %if.end38, !dbg !8367

if.end38:                                         ; preds = %while.end36, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %while.end
  br label %for.inc, !dbg !8368

for.inc:                                          ; preds = %if.end39
  %30 = load i32, i32* %im.addr, align 4, !dbg !8369
  %inc40 = add nsw i32 %30, 1, !dbg !8369
  store i32 %inc40, i32* %im.addr, align 4, !dbg !8369
  br label %for.cond, !dbg !8371, !llvm.loop !8372

for.end:                                          ; preds = %for.cond
  %31 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8373
  %call41 = call i32 @get_bits_count(%struct.GetBitContext* %gbit), !dbg !8374
  %add42 = add nsw i32 %call41, 7, !dbg !8375
  %div = sdiv i32 %add42, 8, !dbg !8376
  store %struct.GetByteContext* %31, %struct.GetByteContext** %g.addr.i43, align 8, !dbg !8377
  store i32 %div, i32* %size.addr.i, align 4, !dbg !8377
  %32 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i43, align 8, !dbg !8378
  %buffer_end.i44 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %32, i32 0, i32 1, !dbg !8379
  %33 = load i8*, i8** %buffer_end.i44, align 8, !dbg !8379
  %34 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i43, align 8, !dbg !8380
  %buffer.i45 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %34, i32 0, i32 0, !dbg !8381
  %35 = load i8*, i8** %buffer.i45, align 8, !dbg !8381
  %sub.ptr.lhs.cast.i46 = ptrtoint i8* %33 to i64, !dbg !8382
  %sub.ptr.rhs.cast.i47 = ptrtoint i8* %35 to i64, !dbg !8382
  %sub.ptr.sub.i48 = sub i64 %sub.ptr.lhs.cast.i46, %sub.ptr.rhs.cast.i47, !dbg !8382
  %36 = load i32, i32* %size.addr.i, align 4, !dbg !8383
  %conv.i49 = zext i32 %36 to i64, !dbg !8384
  %cmp.i = icmp sgt i64 %sub.ptr.sub.i48, %conv.i49, !dbg !8385
  br i1 %cmp.i, label %cond.true.i, label %cond.false.i, !dbg !8386

cond.true.i:                                      ; preds = %for.end
  %37 = load i32, i32* %size.addr.i, align 4, !dbg !8387
  %conv2.i = zext i32 %37 to i64, !dbg !8388
  br label %bytestream2_skip.exit, !dbg !8389

cond.false.i:                                     ; preds = %for.end
  %38 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i43, align 8, !dbg !8390
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %38, i32 0, i32 1, !dbg !8391
  %39 = load i8*, i8** %buffer_end3.i, align 8, !dbg !8391
  %40 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i43, align 8, !dbg !8392
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %40, i32 0, i32 0, !dbg !8393
  %41 = load i8*, i8** %buffer4.i, align 8, !dbg !8393
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %39 to i64, !dbg !8394
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %41 to i64, !dbg !8394
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !8394
  br label %bytestream2_skip.exit, !dbg !8395

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !8396
  %42 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i43, align 8, !dbg !8397
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %42, i32 0, i32 0, !dbg !8398
  %43 = load i8*, i8** %buffer8.i, align 8, !dbg !8399
  %add.ptr.i = getelementptr inbounds i8, i8* %43, i64 %cond.i, !dbg !8399
  store i8* %add.ptr.i, i8** %buffer8.i, align 8, !dbg !8399
  %44 = load i64*, i64** %hcode.addr, align 8, !dbg !8400
  call void @huf_canonical_code_table(i64* %44), !dbg !8401
  store i32 0, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

return:                                           ; preds = %bytestream2_skip.exit, %if.then27, %if.then12, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !8403
  ret i32 %45, !dbg !8403
}

; Function Attrs: nounwind uwtable
define internal i32 @huf_build_dec_table(i64* %hcode, i32 %im, i32 %iM, %struct.HufDec* %hdecod) #0 !dbg !8404 {
entry:
  %retval = alloca i32, align 4
  %hcode.addr = alloca i64*, align 8
  %im.addr = alloca i32, align 4
  %iM.addr = alloca i32, align 4
  %hdecod.addr = alloca %struct.HufDec*, align 8
  %c = alloca i64, align 8
  %i = alloca i32, align 4
  %l = alloca i32, align 4
  %pl = alloca %struct.HufDec*, align 8
  %pl26 = alloca %struct.HufDec*, align 8
  store i64* %hcode, i64** %hcode.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %hcode.addr, metadata !8407, metadata !1741), !dbg !8408
  store i32 %im, i32* %im.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %im.addr, metadata !8409, metadata !1741), !dbg !8410
  store i32 %iM, i32* %iM.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iM.addr, metadata !8411, metadata !1741), !dbg !8412
  store %struct.HufDec* %hdecod, %struct.HufDec** %hdecod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HufDec** %hdecod.addr, metadata !8413, metadata !1741), !dbg !8414
  br label %for.cond, !dbg !8415

for.cond:                                         ; preds = %for.inc46, %entry
  %0 = load i32, i32* %im.addr, align 4, !dbg !8416
  %1 = load i32, i32* %iM.addr, align 4, !dbg !8420
  %cmp = icmp sle i32 %0, %1, !dbg !8421
  br i1 %cmp, label %for.body, label %for.end48, !dbg !8422

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %c, metadata !8423, metadata !1741), !dbg !8425
  %2 = load i32, i32* %im.addr, align 4, !dbg !8426
  %idxprom = sext i32 %2 to i64, !dbg !8427
  %3 = load i64*, i64** %hcode.addr, align 8, !dbg !8427
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %idxprom, !dbg !8427
  %4 = load i64, i64* %arrayidx, align 8, !dbg !8427
  %shr = lshr i64 %4, 6, !dbg !8428
  store i64 %shr, i64* %c, align 8, !dbg !8425
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8429, metadata !1741), !dbg !8430
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8431, metadata !1741), !dbg !8432
  %5 = load i32, i32* %im.addr, align 4, !dbg !8433
  %idxprom1 = sext i32 %5 to i64, !dbg !8434
  %6 = load i64*, i64** %hcode.addr, align 8, !dbg !8434
  %arrayidx2 = getelementptr inbounds i64, i64* %6, i64 %idxprom1, !dbg !8434
  %7 = load i64, i64* %arrayidx2, align 8, !dbg !8434
  %and = and i64 %7, 63, !dbg !8435
  %conv = trunc i64 %and to i32, !dbg !8434
  store i32 %conv, i32* %l, align 4, !dbg !8432
  %8 = load i64, i64* %c, align 8, !dbg !8436
  %9 = load i32, i32* %l, align 4, !dbg !8438
  %sh_prom = zext i32 %9 to i64, !dbg !8439
  %shr3 = lshr i64 %8, %sh_prom, !dbg !8439
  %tobool = icmp ne i64 %shr3, 0, !dbg !8439
  br i1 %tobool, label %if.then, label %if.end, !dbg !8440

if.then:                                          ; preds = %for.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !8441
  br label %return, !dbg !8441

if.end:                                           ; preds = %for.body
  %10 = load i32, i32* %l, align 4, !dbg !8442
  %cmp4 = icmp sgt i32 %10, 14, !dbg !8444
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !8445

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.HufDec** %pl, metadata !8446, metadata !1741), !dbg !8448
  %11 = load %struct.HufDec*, %struct.HufDec** %hdecod.addr, align 8, !dbg !8449
  %12 = load i64, i64* %c, align 8, !dbg !8450
  %13 = load i32, i32* %l, align 4, !dbg !8451
  %sub = sub nsw i32 %13, 14, !dbg !8452
  %sh_prom7 = zext i32 %sub to i64, !dbg !8453
  %shr8 = lshr i64 %12, %sh_prom7, !dbg !8453
  %add.ptr = getelementptr inbounds %struct.HufDec, %struct.HufDec* %11, i64 %shr8, !dbg !8454
  store %struct.HufDec* %add.ptr, %struct.HufDec** %pl, align 8, !dbg !8448
  %14 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8455
  %len = getelementptr inbounds %struct.HufDec, %struct.HufDec* %14, i32 0, i32 0, !dbg !8457
  %15 = load i32, i32* %len, align 8, !dbg !8457
  %tobool9 = icmp ne i32 %15, 0, !dbg !8455
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8458

if.then10:                                        ; preds = %if.then6
  store i32 -1094995529, i32* %retval, align 4, !dbg !8459
  br label %return, !dbg !8459

if.end11:                                         ; preds = %if.then6
  %16 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8460
  %lit = getelementptr inbounds %struct.HufDec, %struct.HufDec* %16, i32 0, i32 1, !dbg !8461
  %17 = load i32, i32* %lit, align 4, !dbg !8462
  %inc = add nsw i32 %17, 1, !dbg !8462
  store i32 %inc, i32* %lit, align 4, !dbg !8462
  %18 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8463
  %p = getelementptr inbounds %struct.HufDec, %struct.HufDec* %18, i32 0, i32 2, !dbg !8464
  %19 = load i32*, i32** %p, align 8, !dbg !8464
  %20 = bitcast i32* %19 to i8*, !dbg !8463
  %21 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8465
  %lit12 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %21, i32 0, i32 1, !dbg !8466
  %22 = load i32, i32* %lit12, align 4, !dbg !8466
  %conv13 = sext i32 %22 to i64, !dbg !8465
  %mul = mul i64 %conv13, 4, !dbg !8467
  %call = call i8* @av_realloc(i8* %20, i64 %mul), !dbg !8468
  %23 = bitcast i8* %call to i32*, !dbg !8468
  %24 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8469
  %p14 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %24, i32 0, i32 2, !dbg !8470
  store i32* %23, i32** %p14, align 8, !dbg !8471
  %25 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8472
  %p15 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %25, i32 0, i32 2, !dbg !8474
  %26 = load i32*, i32** %p15, align 8, !dbg !8474
  %tobool16 = icmp ne i32* %26, null, !dbg !8472
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !8475

if.then17:                                        ; preds = %if.end11
  store i32 -12, i32* %retval, align 4, !dbg !8476
  br label %return, !dbg !8476

if.end18:                                         ; preds = %if.end11
  %27 = load i32, i32* %im.addr, align 4, !dbg !8477
  %28 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8478
  %lit19 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %28, i32 0, i32 1, !dbg !8479
  %29 = load i32, i32* %lit19, align 4, !dbg !8479
  %sub20 = sub nsw i32 %29, 1, !dbg !8480
  %idxprom21 = sext i32 %sub20 to i64, !dbg !8481
  %30 = load %struct.HufDec*, %struct.HufDec** %pl, align 8, !dbg !8481
  %p22 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %30, i32 0, i32 2, !dbg !8482
  %31 = load i32*, i32** %p22, align 8, !dbg !8482
  %arrayidx23 = getelementptr inbounds i32, i32* %31, i64 %idxprom21, !dbg !8481
  store i32 %27, i32* %arrayidx23, align 4, !dbg !8483
  br label %if.end45, !dbg !8484

if.else:                                          ; preds = %if.end
  %32 = load i32, i32* %l, align 4, !dbg !8485
  %tobool24 = icmp ne i32 %32, 0, !dbg !8485
  br i1 %tobool24, label %if.then25, label %if.end44, !dbg !8485

if.then25:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.HufDec** %pl26, metadata !8488, metadata !1741), !dbg !8490
  %33 = load %struct.HufDec*, %struct.HufDec** %hdecod.addr, align 8, !dbg !8491
  %34 = load i64, i64* %c, align 8, !dbg !8492
  %35 = load i32, i32* %l, align 4, !dbg !8493
  %sub27 = sub nsw i32 14, %35, !dbg !8494
  %sh_prom28 = zext i32 %sub27 to i64, !dbg !8495
  %shl = shl i64 %34, %sh_prom28, !dbg !8495
  %add.ptr29 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %33, i64 %shl, !dbg !8496
  store %struct.HufDec* %add.ptr29, %struct.HufDec** %pl26, align 8, !dbg !8490
  %36 = load i32, i32* %l, align 4, !dbg !8497
  %sub30 = sub nsw i32 14, %36, !dbg !8499
  %shl31 = shl i32 1, %sub30, !dbg !8500
  store i32 %shl31, i32* %i, align 4, !dbg !8501
  br label %for.cond32, !dbg !8502

for.cond32:                                       ; preds = %for.inc, %if.then25
  %37 = load i32, i32* %i, align 4, !dbg !8503
  %cmp33 = icmp sgt i32 %37, 0, !dbg !8506
  br i1 %cmp33, label %for.body35, label %for.end, !dbg !8507

for.body35:                                       ; preds = %for.cond32
  %38 = load %struct.HufDec*, %struct.HufDec** %pl26, align 8, !dbg !8508
  %len36 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %38, i32 0, i32 0, !dbg !8511
  %39 = load i32, i32* %len36, align 8, !dbg !8511
  %tobool37 = icmp ne i32 %39, 0, !dbg !8508
  br i1 %tobool37, label %if.then40, label %lor.lhs.false, !dbg !8512

lor.lhs.false:                                    ; preds = %for.body35
  %40 = load %struct.HufDec*, %struct.HufDec** %pl26, align 8, !dbg !8513
  %p38 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %40, i32 0, i32 2, !dbg !8515
  %41 = load i32*, i32** %p38, align 8, !dbg !8515
  %tobool39 = icmp ne i32* %41, null, !dbg !8513
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !8516

if.then40:                                        ; preds = %lor.lhs.false, %for.body35
  store i32 -1094995529, i32* %retval, align 4, !dbg !8517
  br label %return, !dbg !8517

if.end41:                                         ; preds = %lor.lhs.false
  %42 = load i32, i32* %l, align 4, !dbg !8518
  %43 = load %struct.HufDec*, %struct.HufDec** %pl26, align 8, !dbg !8519
  %len42 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %43, i32 0, i32 0, !dbg !8520
  store i32 %42, i32* %len42, align 8, !dbg !8521
  %44 = load i32, i32* %im.addr, align 4, !dbg !8522
  %45 = load %struct.HufDec*, %struct.HufDec** %pl26, align 8, !dbg !8523
  %lit43 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %45, i32 0, i32 1, !dbg !8524
  store i32 %44, i32* %lit43, align 4, !dbg !8525
  br label %for.inc, !dbg !8526

for.inc:                                          ; preds = %if.end41
  %46 = load i32, i32* %i, align 4, !dbg !8527
  %dec = add nsw i32 %46, -1, !dbg !8527
  store i32 %dec, i32* %i, align 4, !dbg !8527
  %47 = load %struct.HufDec*, %struct.HufDec** %pl26, align 8, !dbg !8529
  %incdec.ptr = getelementptr inbounds %struct.HufDec, %struct.HufDec* %47, i32 1, !dbg !8529
  store %struct.HufDec* %incdec.ptr, %struct.HufDec** %pl26, align 8, !dbg !8529
  br label %for.cond32, !dbg !8530, !llvm.loop !8531

for.end:                                          ; preds = %for.cond32
  br label %if.end44, !dbg !8533

if.end44:                                         ; preds = %for.end, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end18
  br label %for.inc46, !dbg !8534

for.inc46:                                        ; preds = %if.end45
  %48 = load i32, i32* %im.addr, align 4, !dbg !8535
  %inc47 = add nsw i32 %48, 1, !dbg !8535
  store i32 %inc47, i32* %im.addr, align 4, !dbg !8535
  br label %for.cond, !dbg !8537, !llvm.loop !8538

for.end48:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8539
  br label %return, !dbg !8539

return:                                           ; preds = %for.end48, %if.then40, %if.then17, %if.then10, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !8540
  ret i32 %49, !dbg !8540
}

; Function Attrs: nounwind uwtable
define internal i32 @huf_decode(i64* %hcode, %struct.HufDec* %hdecod, %struct.GetByteContext* %gb, i32 %nbits, i32 %rlc, i32 %no, i16* %out) #0 !dbg !8541 {
entry:
  %b.addr.i.i.i296 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i296, metadata !3192, metadata !1741), !dbg !8546
  %g.addr.i.i297 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i297, metadata !3201, metadata !1741), !dbg !8560
  %retval.i298 = alloca i32, align 4
  %g.addr.i299 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i299, metadata !3203, metadata !1741), !dbg !8561
  %g.addr.i290 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i290, metadata !2147, metadata !1741), !dbg !8562
  %b.addr.i.i.i271 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i271, metadata !3192, metadata !1741), !dbg !8569
  %g.addr.i.i272 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i272, metadata !3201, metadata !1741), !dbg !8574
  %retval.i273 = alloca i32, align 4
  %g.addr.i274 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i274, metadata !3203, metadata !1741), !dbg !8575
  %b.addr.i.i.i252 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i252, metadata !3192, metadata !1741), !dbg !8576
  %g.addr.i.i253 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i253, metadata !3201, metadata !1741), !dbg !8590
  %retval.i254 = alloca i32, align 4
  %g.addr.i255 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i255, metadata !3203, metadata !1741), !dbg !8591
  %b.addr.i.i.i233 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i233, metadata !3192, metadata !1741), !dbg !8592
  %g.addr.i.i234 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i234, metadata !3201, metadata !1741), !dbg !8605
  %retval.i235 = alloca i32, align 4
  %g.addr.i236 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i236, metadata !3203, metadata !1741), !dbg !8606
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !3192, metadata !1741), !dbg !8607
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !3201, metadata !1741), !dbg !8612
  %retval.i = alloca i32, align 4
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !3203, metadata !1741), !dbg !8613
  %retval = alloca i32, align 4
  %hcode.addr = alloca i64*, align 8
  %hdecod.addr = alloca %struct.HufDec*, align 8
  %gb.addr = alloca %struct.GetByteContext*, align 8
  %nbits.addr = alloca i32, align 4
  %rlc.addr = alloca i32, align 4
  %no.addr = alloca i32, align 4
  %out.addr = alloca i16*, align 8
  %c = alloca i64, align 8
  %outb = alloca i16*, align 8
  %oe = alloca i16*, align 8
  %ie = alloca i8*, align 8
  %cs = alloca i8, align 1
  %s = alloca i16, align 2
  %i = alloca i32, align 4
  %lc = alloca i32, align 4
  %pl = alloca %struct.HufDec, align 8
  %j = alloca i32, align 4
  %l = alloca i32, align 4
  %pl165 = alloca %struct.HufDec, align 8
  store i64* %hcode, i64** %hcode.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %hcode.addr, metadata !8614, metadata !1741), !dbg !8615
  store %struct.HufDec* %hdecod, %struct.HufDec** %hdecod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HufDec** %hdecod.addr, metadata !8616, metadata !1741), !dbg !8617
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %gb.addr, metadata !8618, metadata !1741), !dbg !8619
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !8620, metadata !1741), !dbg !8621
  store i32 %rlc, i32* %rlc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rlc.addr, metadata !8622, metadata !1741), !dbg !8623
  store i32 %no, i32* %no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no.addr, metadata !8624, metadata !1741), !dbg !8625
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !8626, metadata !1741), !dbg !8627
  call void @llvm.dbg.declare(metadata i64* %c, metadata !8628, metadata !1741), !dbg !8629
  store i64 0, i64* %c, align 8, !dbg !8629
  call void @llvm.dbg.declare(metadata i16** %outb, metadata !8630, metadata !1741), !dbg !8631
  %0 = load i16*, i16** %out.addr, align 8, !dbg !8632
  store i16* %0, i16** %outb, align 8, !dbg !8631
  call void @llvm.dbg.declare(metadata i16** %oe, metadata !8633, metadata !1741), !dbg !8634
  %1 = load i16*, i16** %out.addr, align 8, !dbg !8635
  %2 = load i32, i32* %no.addr, align 4, !dbg !8636
  %idx.ext = sext i32 %2 to i64, !dbg !8637
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 %idx.ext, !dbg !8637
  store i16* %add.ptr, i16** %oe, align 8, !dbg !8634
  call void @llvm.dbg.declare(metadata i8** %ie, metadata !8638, metadata !1741), !dbg !8639
  %3 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8640
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %3, i32 0, i32 0, !dbg !8641
  %4 = load i8*, i8** %buffer, align 8, !dbg !8641
  %5 = load i32, i32* %nbits.addr, align 4, !dbg !8642
  %add = add nsw i32 %5, 7, !dbg !8643
  %div = sdiv i32 %add, 8, !dbg !8644
  %idx.ext1 = sext i32 %div to i64, !dbg !8645
  %add.ptr2 = getelementptr inbounds i8, i8* %4, i64 %idx.ext1, !dbg !8645
  store i8* %add.ptr2, i8** %ie, align 8, !dbg !8639
  call void @llvm.dbg.declare(metadata i8* %cs, metadata !8646, metadata !1741), !dbg !8647
  call void @llvm.dbg.declare(metadata i16* %s, metadata !8648, metadata !1741), !dbg !8649
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8650, metadata !1741), !dbg !8651
  call void @llvm.dbg.declare(metadata i32* %lc, metadata !8652, metadata !1741), !dbg !8653
  store i32 0, i32* %lc, align 4, !dbg !8653
  br label %while.cond, !dbg !8654

while.cond:                                       ; preds = %while.end154, %entry
  %6 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8655
  %buffer3 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %6, i32 0, i32 0, !dbg !8657
  %7 = load i8*, i8** %buffer3, align 8, !dbg !8657
  %8 = load i8*, i8** %ie, align 8, !dbg !8658
  %cmp = icmp ult i8* %7, %8, !dbg !8659
  br i1 %cmp, label %while.body, label %while.end155, !dbg !8660

while.body:                                       ; preds = %while.cond
  %9 = load i64, i64* %c, align 8, !dbg !8661
  %shl = shl i64 %9, 8, !dbg !8662
  %10 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8663
  store %struct.GetByteContext* %10, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8664
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8665
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 1, !dbg !8666
  %12 = load i8*, i8** %buffer_end.i, align 8, !dbg !8666
  %13 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8667
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %13, i32 0, i32 0, !dbg !8668
  %14 = load i8*, i8** %buffer.i, align 8, !dbg !8668
  %sub.ptr.lhs.cast.i = ptrtoint i8* %12 to i64, !dbg !8669
  %sub.ptr.rhs.cast.i = ptrtoint i8* %14 to i64, !dbg !8669
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !8669
  %cmp.i = icmp slt i64 %sub.ptr.sub.i, 1, !dbg !8670
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !8671

if.then.i:                                        ; preds = %while.body
  %15 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8672
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %15, i32 0, i32 1, !dbg !8673
  %16 = load i8*, i8** %buffer_end1.i, align 8, !dbg !8673
  %17 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8674
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %17, i32 0, i32 0, !dbg !8675
  store i8* %16, i8** %buffer2.i, align 8, !dbg !8676
  store i32 0, i32* %retval.i, align 4, !dbg !8677
  br label %bytestream2_get_byte.exit, !dbg !8677

if.end.i:                                         ; preds = %while.body
  %18 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8678
  store %struct.GetByteContext* %18, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !8679
  %19 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !8680
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %19, i32 0, i32 0, !dbg !8681
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !8682
  %20 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !8683
  %21 = load i8*, i8** %20, align 8, !dbg !8684
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %21, i64 1, !dbg !8684
  store i8* %add.ptr.i.i.i, i8** %20, align 8, !dbg !8684
  %22 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !8685
  %23 = load i8*, i8** %22, align 8, !dbg !8686
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %23, i64 -1, !dbg !8687
  %24 = load i8, i8* %add.ptr1.i.i.i, align 1, !dbg !8688
  %conv.i.i.i = zext i8 %24 to i32, !dbg !8689
  store i32 %conv.i.i.i, i32* %retval.i, align 4, !dbg !8690
  br label %bytestream2_get_byte.exit, !dbg !8690

bytestream2_get_byte.exit:                        ; preds = %if.then.i, %if.end.i
  %25 = load i32, i32* %retval.i, align 4, !dbg !8691
  %conv = zext i32 %25 to i64, !dbg !8664
  %or = or i64 %shl, %conv, !dbg !8692
  store i64 %or, i64* %c, align 8, !dbg !8693
  %26 = load i32, i32* %lc, align 4, !dbg !8694
  %add4 = add nsw i32 %26, 8, !dbg !8694
  store i32 %add4, i32* %lc, align 4, !dbg !8694
  br label %while.cond5, !dbg !8695

while.cond5:                                      ; preds = %if.end153, %bytestream2_get_byte.exit
  %27 = load i32, i32* %lc, align 4, !dbg !8696
  %cmp6 = icmp sge i32 %27, 14, !dbg !8698
  br i1 %cmp6, label %while.body8, label %while.end154, !dbg !8699

while.body8:                                      ; preds = %while.cond5
  call void @llvm.dbg.declare(metadata %struct.HufDec* %pl, metadata !8700, metadata !1741), !dbg !8701
  %28 = load i64, i64* %c, align 8, !dbg !8702
  %29 = load i32, i32* %lc, align 4, !dbg !8703
  %sub = sub nsw i32 %29, 14, !dbg !8704
  %sh_prom = zext i32 %sub to i64, !dbg !8705
  %shr = lshr i64 %28, %sh_prom, !dbg !8705
  %and = and i64 %shr, 16383, !dbg !8706
  %30 = load %struct.HufDec*, %struct.HufDec** %hdecod.addr, align 8, !dbg !8707
  %arrayidx = getelementptr inbounds %struct.HufDec, %struct.HufDec* %30, i64 %and, !dbg !8707
  %31 = bitcast %struct.HufDec* %pl to i8*, !dbg !8707
  %32 = bitcast %struct.HufDec* %arrayidx to i8*, !dbg !8707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 16, i32 8, i1 false), !dbg !8707
  %len = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 0, !dbg !8708
  %33 = load i32, i32* %len, align 8, !dbg !8708
  %tobool = icmp ne i32 %33, 0, !dbg !8709
  br i1 %tobool, label %if.then, label %if.else50, !dbg !8710

if.then:                                          ; preds = %while.body8
  %len9 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 0, !dbg !8711
  %34 = load i32, i32* %len9, align 8, !dbg !8711
  %35 = load i32, i32* %lc, align 4, !dbg !8712
  %sub10 = sub nsw i32 %35, %34, !dbg !8712
  store i32 %sub10, i32* %lc, align 4, !dbg !8712
  %lit = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 1, !dbg !8713
  %36 = load i32, i32* %lit, align 4, !dbg !8713
  %37 = load i32, i32* %rlc.addr, align 4, !dbg !8714
  %cmp11 = icmp eq i32 %36, %37, !dbg !8715
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !8716

if.then13:                                        ; preds = %if.then
  %38 = load i32, i32* %lc, align 4, !dbg !8717
  %cmp14 = icmp slt i32 %38, 8, !dbg !8719
  br i1 %cmp14, label %if.then16, label %if.end, !dbg !8717

if.then16:                                        ; preds = %if.then13
  %39 = load i64, i64* %c, align 8, !dbg !8720
  %shl17 = shl i64 %39, 8, !dbg !8721
  %40 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8722
  store %struct.GetByteContext* %40, %struct.GetByteContext** %g.addr.i299, align 8, !dbg !8723
  %41 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i299, align 8, !dbg !8724
  %buffer_end.i300 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %41, i32 0, i32 1, !dbg !8725
  %42 = load i8*, i8** %buffer_end.i300, align 8, !dbg !8725
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i299, align 8, !dbg !8726
  %buffer.i301 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 0, !dbg !8727
  %44 = load i8*, i8** %buffer.i301, align 8, !dbg !8727
  %sub.ptr.lhs.cast.i302 = ptrtoint i8* %42 to i64, !dbg !8728
  %sub.ptr.rhs.cast.i303 = ptrtoint i8* %44 to i64, !dbg !8728
  %sub.ptr.sub.i304 = sub i64 %sub.ptr.lhs.cast.i302, %sub.ptr.rhs.cast.i303, !dbg !8728
  %cmp.i305 = icmp slt i64 %sub.ptr.sub.i304, 1, !dbg !8729
  br i1 %cmp.i305, label %if.then.i308, label %if.end.i313, !dbg !8730

if.then.i308:                                     ; preds = %if.then16
  %45 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i299, align 8, !dbg !8731
  %buffer_end1.i306 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %45, i32 0, i32 1, !dbg !8732
  %46 = load i8*, i8** %buffer_end1.i306, align 8, !dbg !8732
  %47 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i299, align 8, !dbg !8733
  %buffer2.i307 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %47, i32 0, i32 0, !dbg !8734
  store i8* %46, i8** %buffer2.i307, align 8, !dbg !8735
  store i32 0, i32* %retval.i298, align 4, !dbg !8736
  br label %bytestream2_get_byte.exit314, !dbg !8736

if.end.i313:                                      ; preds = %if.then16
  %48 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i299, align 8, !dbg !8737
  store %struct.GetByteContext* %48, %struct.GetByteContext** %g.addr.i.i297, align 8, !dbg !8738
  %49 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i297, align 8, !dbg !8739
  %buffer.i.i309 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %49, i32 0, i32 0, !dbg !8740
  store i8** %buffer.i.i309, i8*** %b.addr.i.i.i296, align 8, !dbg !8741
  %50 = load i8**, i8*** %b.addr.i.i.i296, align 8, !dbg !8742
  %51 = load i8*, i8** %50, align 8, !dbg !8743
  %add.ptr.i.i.i310 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !8743
  store i8* %add.ptr.i.i.i310, i8** %50, align 8, !dbg !8743
  %52 = load i8**, i8*** %b.addr.i.i.i296, align 8, !dbg !8744
  %53 = load i8*, i8** %52, align 8, !dbg !8745
  %add.ptr1.i.i.i311 = getelementptr inbounds i8, i8* %53, i64 -1, !dbg !8746
  %54 = load i8, i8* %add.ptr1.i.i.i311, align 1, !dbg !8747
  %conv.i.i.i312 = zext i8 %54 to i32, !dbg !8748
  store i32 %conv.i.i.i312, i32* %retval.i298, align 4, !dbg !8749
  br label %bytestream2_get_byte.exit314, !dbg !8749

bytestream2_get_byte.exit314:                     ; preds = %if.then.i308, %if.end.i313
  %55 = load i32, i32* %retval.i298, align 4, !dbg !8750
  %conv19 = zext i32 %55 to i64, !dbg !8723
  %or20 = or i64 %shl17, %conv19, !dbg !8751
  store i64 %or20, i64* %c, align 8, !dbg !8752
  %56 = load i32, i32* %lc, align 4, !dbg !8753
  %add21 = add nsw i32 %56, 8, !dbg !8753
  store i32 %add21, i32* %lc, align 4, !dbg !8753
  br label %if.end, !dbg !8754

if.end:                                           ; preds = %bytestream2_get_byte.exit314, %if.then13
  %57 = load i32, i32* %lc, align 4, !dbg !8755
  %sub22 = sub nsw i32 %57, 8, !dbg !8755
  store i32 %sub22, i32* %lc, align 4, !dbg !8755
  %58 = load i64, i64* %c, align 8, !dbg !8757
  %59 = load i32, i32* %lc, align 4, !dbg !8758
  %sh_prom23 = zext i32 %59 to i64, !dbg !8759
  %shr24 = lshr i64 %58, %sh_prom23, !dbg !8759
  %conv25 = trunc i64 %shr24 to i8, !dbg !8757
  store i8 %conv25, i8* %cs, align 1, !dbg !8760
  %60 = load i16*, i16** %out.addr, align 8, !dbg !8761
  %61 = load i8, i8* %cs, align 1, !dbg !8762
  %conv26 = zext i8 %61 to i32, !dbg !8762
  %idx.ext27 = sext i32 %conv26 to i64, !dbg !8763
  %add.ptr28 = getelementptr inbounds i16, i16* %60, i64 %idx.ext27, !dbg !8763
  %62 = load i16*, i16** %oe, align 8, !dbg !8764
  %cmp29 = icmp ugt i16* %add.ptr28, %62, !dbg !8765
  br i1 %cmp29, label %if.then33, label %lor.lhs.false, !dbg !8766

lor.lhs.false:                                    ; preds = %if.end
  %63 = load i16*, i16** %out.addr, align 8, !dbg !8767
  %64 = load i16*, i16** %outb, align 8, !dbg !8770
  %cmp31 = icmp eq i16* %63, %64, !dbg !8771
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !8772

if.then33:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !8773
  br label %return, !dbg !8773

if.end34:                                         ; preds = %lor.lhs.false
  %65 = load i16*, i16** %out.addr, align 8, !dbg !8775
  %arrayidx35 = getelementptr inbounds i16, i16* %65, i64 -1, !dbg !8775
  %66 = load i16, i16* %arrayidx35, align 2, !dbg !8775
  store i16 %66, i16* %s, align 2, !dbg !8777
  br label %while.cond36, !dbg !8778

while.cond36:                                     ; preds = %while.body40, %if.end34
  %67 = load i8, i8* %cs, align 1, !dbg !8779
  %dec = add i8 %67, -1, !dbg !8779
  store i8 %dec, i8* %cs, align 1, !dbg !8779
  %conv37 = zext i8 %67 to i32, !dbg !8781
  %cmp38 = icmp sgt i32 %conv37, 0, !dbg !8782
  br i1 %cmp38, label %while.body40, label %while.end, !dbg !8783

while.body40:                                     ; preds = %while.cond36
  %68 = load i16, i16* %s, align 2, !dbg !8784
  %69 = load i16*, i16** %out.addr, align 8, !dbg !8786
  %incdec.ptr = getelementptr inbounds i16, i16* %69, i32 1, !dbg !8786
  store i16* %incdec.ptr, i16** %out.addr, align 8, !dbg !8786
  store i16 %68, i16* %69, align 2, !dbg !8787
  br label %while.cond36, !dbg !8788, !llvm.loop !8789

while.end:                                        ; preds = %while.cond36
  br label %if.end49, !dbg !8791

if.else:                                          ; preds = %if.then
  %70 = load i16*, i16** %out.addr, align 8, !dbg !8793
  %71 = load i16*, i16** %oe, align 8, !dbg !8796
  %cmp41 = icmp ult i16* %70, %71, !dbg !8797
  br i1 %cmp41, label %if.then43, label %if.else47, !dbg !8793

if.then43:                                        ; preds = %if.else
  %lit44 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 1, !dbg !8798
  %72 = load i32, i32* %lit44, align 4, !dbg !8798
  %conv45 = trunc i32 %72 to i16, !dbg !8801
  %73 = load i16*, i16** %out.addr, align 8, !dbg !8802
  %incdec.ptr46 = getelementptr inbounds i16, i16* %73, i32 1, !dbg !8802
  store i16* %incdec.ptr46, i16** %out.addr, align 8, !dbg !8802
  store i16 %conv45, i16* %73, align 2, !dbg !8803
  br label %if.end48, !dbg !8804

if.else47:                                        ; preds = %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !8805
  br label %return, !dbg !8805

if.end48:                                         ; preds = %if.then43
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %while.end
  br label %if.end153, !dbg !8808

if.else50:                                        ; preds = %while.body8
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8809, metadata !1741), !dbg !8810
  %p = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 2, !dbg !8811
  %74 = load i32*, i32** %p, align 8, !dbg !8811
  %tobool51 = icmp ne i32* %74, null, !dbg !8813
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !8814

if.then52:                                        ; preds = %if.else50
  store i32 -1094995529, i32* %retval, align 4, !dbg !8815
  br label %return, !dbg !8815

if.end53:                                         ; preds = %if.else50
  store i32 0, i32* %j, align 4, !dbg !8816
  br label %for.cond, !dbg !8817

for.cond:                                         ; preds = %for.inc, %if.end53
  %75 = load i32, i32* %j, align 4, !dbg !8818
  %lit54 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 1, !dbg !8820
  %76 = load i32, i32* %lit54, align 4, !dbg !8820
  %cmp55 = icmp slt i32 %75, %76, !dbg !8821
  br i1 %cmp55, label %for.body, label %for.end, !dbg !8822

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8823, metadata !1741), !dbg !8824
  %77 = load i32, i32* %j, align 4, !dbg !8825
  %idxprom = sext i32 %77 to i64, !dbg !8826
  %p57 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 2, !dbg !8827
  %78 = load i32*, i32** %p57, align 8, !dbg !8827
  %arrayidx58 = getelementptr inbounds i32, i32* %78, i64 %idxprom, !dbg !8826
  %79 = load i32, i32* %arrayidx58, align 4, !dbg !8826
  %idxprom59 = sext i32 %79 to i64, !dbg !8828
  %80 = load i64*, i64** %hcode.addr, align 8, !dbg !8828
  %arrayidx60 = getelementptr inbounds i64, i64* %80, i64 %idxprom59, !dbg !8828
  %81 = load i64, i64* %arrayidx60, align 8, !dbg !8828
  %and61 = and i64 %81, 63, !dbg !8829
  %conv62 = trunc i64 %and61 to i32, !dbg !8828
  store i32 %conv62, i32* %l, align 4, !dbg !8824
  br label %while.cond63, !dbg !8830

while.cond63:                                     ; preds = %bytestream2_get_byte.exit289, %for.body
  %82 = load i32, i32* %lc, align 4, !dbg !8831
  %83 = load i32, i32* %l, align 4, !dbg !8833
  %cmp64 = icmp slt i32 %82, %83, !dbg !8834
  br i1 %cmp64, label %land.rhs, label %land.end, !dbg !8835

land.rhs:                                         ; preds = %while.cond63
  %84 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8836
  store %struct.GetByteContext* %84, %struct.GetByteContext** %g.addr.i290, align 8, !dbg !8837
  %85 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i290, align 8, !dbg !8838
  %buffer_end.i291 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %85, i32 0, i32 1, !dbg !8839
  %86 = load i8*, i8** %buffer_end.i291, align 8, !dbg !8839
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i290, align 8, !dbg !8840
  %buffer.i292 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 0, !dbg !8841
  %88 = load i8*, i8** %buffer.i292, align 8, !dbg !8841
  %sub.ptr.lhs.cast.i293 = ptrtoint i8* %86 to i64, !dbg !8842
  %sub.ptr.rhs.cast.i294 = ptrtoint i8* %88 to i64, !dbg !8842
  %sub.ptr.sub.i295 = sub i64 %sub.ptr.lhs.cast.i293, %sub.ptr.rhs.cast.i294, !dbg !8842
  %conv.i = trunc i64 %sub.ptr.sub.i295 to i32, !dbg !8838
  %cmp67 = icmp ugt i32 %conv.i, 0, !dbg !8843
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond63
  %89 = phi i1 [ false, %while.cond63 ], [ %cmp67, %land.rhs ]
  br i1 %89, label %while.body69, label %while.end75, !dbg !8844

while.body69:                                     ; preds = %land.end
  %90 = load i64, i64* %c, align 8, !dbg !8846
  %shl70 = shl i64 %90, 8, !dbg !8847
  %91 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8848
  store %struct.GetByteContext* %91, %struct.GetByteContext** %g.addr.i274, align 8, !dbg !8849
  %92 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i274, align 8, !dbg !8850
  %buffer_end.i275 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %92, i32 0, i32 1, !dbg !8851
  %93 = load i8*, i8** %buffer_end.i275, align 8, !dbg !8851
  %94 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i274, align 8, !dbg !8852
  %buffer.i276 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %94, i32 0, i32 0, !dbg !8853
  %95 = load i8*, i8** %buffer.i276, align 8, !dbg !8853
  %sub.ptr.lhs.cast.i277 = ptrtoint i8* %93 to i64, !dbg !8854
  %sub.ptr.rhs.cast.i278 = ptrtoint i8* %95 to i64, !dbg !8854
  %sub.ptr.sub.i279 = sub i64 %sub.ptr.lhs.cast.i277, %sub.ptr.rhs.cast.i278, !dbg !8854
  %cmp.i280 = icmp slt i64 %sub.ptr.sub.i279, 1, !dbg !8855
  br i1 %cmp.i280, label %if.then.i283, label %if.end.i288, !dbg !8856

if.then.i283:                                     ; preds = %while.body69
  %96 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i274, align 8, !dbg !8857
  %buffer_end1.i281 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %96, i32 0, i32 1, !dbg !8858
  %97 = load i8*, i8** %buffer_end1.i281, align 8, !dbg !8858
  %98 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i274, align 8, !dbg !8859
  %buffer2.i282 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %98, i32 0, i32 0, !dbg !8860
  store i8* %97, i8** %buffer2.i282, align 8, !dbg !8861
  store i32 0, i32* %retval.i273, align 4, !dbg !8862
  br label %bytestream2_get_byte.exit289, !dbg !8862

if.end.i288:                                      ; preds = %while.body69
  %99 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i274, align 8, !dbg !8863
  store %struct.GetByteContext* %99, %struct.GetByteContext** %g.addr.i.i272, align 8, !dbg !8864
  %100 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i272, align 8, !dbg !8865
  %buffer.i.i284 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %100, i32 0, i32 0, !dbg !8866
  store i8** %buffer.i.i284, i8*** %b.addr.i.i.i271, align 8, !dbg !8867
  %101 = load i8**, i8*** %b.addr.i.i.i271, align 8, !dbg !8868
  %102 = load i8*, i8** %101, align 8, !dbg !8869
  %add.ptr.i.i.i285 = getelementptr inbounds i8, i8* %102, i64 1, !dbg !8869
  store i8* %add.ptr.i.i.i285, i8** %101, align 8, !dbg !8869
  %103 = load i8**, i8*** %b.addr.i.i.i271, align 8, !dbg !8870
  %104 = load i8*, i8** %103, align 8, !dbg !8871
  %add.ptr1.i.i.i286 = getelementptr inbounds i8, i8* %104, i64 -1, !dbg !8872
  %105 = load i8, i8* %add.ptr1.i.i.i286, align 1, !dbg !8873
  %conv.i.i.i287 = zext i8 %105 to i32, !dbg !8874
  store i32 %conv.i.i.i287, i32* %retval.i273, align 4, !dbg !8875
  br label %bytestream2_get_byte.exit289, !dbg !8875

bytestream2_get_byte.exit289:                     ; preds = %if.then.i283, %if.end.i288
  %106 = load i32, i32* %retval.i273, align 4, !dbg !8876
  %conv72 = zext i32 %106 to i64, !dbg !8849
  %or73 = or i64 %shl70, %conv72, !dbg !8877
  store i64 %or73, i64* %c, align 8, !dbg !8878
  %107 = load i32, i32* %lc, align 4, !dbg !8879
  %add74 = add nsw i32 %107, 8, !dbg !8879
  store i32 %add74, i32* %lc, align 4, !dbg !8879
  br label %while.cond63, !dbg !8880, !llvm.loop !8882

while.end75:                                      ; preds = %land.end
  %108 = load i32, i32* %lc, align 4, !dbg !8883
  %109 = load i32, i32* %l, align 4, !dbg !8884
  %cmp76 = icmp sge i32 %108, %109, !dbg !8885
  br i1 %cmp76, label %if.then78, label %if.end147, !dbg !8886

if.then78:                                        ; preds = %while.end75
  %110 = load i32, i32* %j, align 4, !dbg !8887
  %idxprom79 = sext i32 %110 to i64, !dbg !8888
  %p80 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 2, !dbg !8889
  %111 = load i32*, i32** %p80, align 8, !dbg !8889
  %arrayidx81 = getelementptr inbounds i32, i32* %111, i64 %idxprom79, !dbg !8888
  %112 = load i32, i32* %arrayidx81, align 4, !dbg !8888
  %idxprom82 = sext i32 %112 to i64, !dbg !8890
  %113 = load i64*, i64** %hcode.addr, align 8, !dbg !8890
  %arrayidx83 = getelementptr inbounds i64, i64* %113, i64 %idxprom82, !dbg !8890
  %114 = load i64, i64* %arrayidx83, align 8, !dbg !8890
  %shr84 = lshr i64 %114, 6, !dbg !8891
  %115 = load i64, i64* %c, align 8, !dbg !8892
  %116 = load i32, i32* %lc, align 4, !dbg !8893
  %117 = load i32, i32* %l, align 4, !dbg !8894
  %sub85 = sub nsw i32 %116, %117, !dbg !8895
  %sh_prom86 = zext i32 %sub85 to i64, !dbg !8896
  %shr87 = lshr i64 %115, %sh_prom86, !dbg !8896
  %118 = load i32, i32* %l, align 4, !dbg !8897
  %sh_prom88 = zext i32 %118 to i64, !dbg !8898
  %shl89 = shl i64 1, %sh_prom88, !dbg !8898
  %sub90 = sub nsw i64 %shl89, 1, !dbg !8899
  %and91 = and i64 %shr87, %sub90, !dbg !8900
  %cmp92 = icmp eq i64 %shr84, %and91, !dbg !8901
  br i1 %cmp92, label %if.then94, label %if.end146, !dbg !8902

if.then94:                                        ; preds = %if.then78
  %119 = load i32, i32* %l, align 4, !dbg !8903
  %120 = load i32, i32* %lc, align 4, !dbg !8904
  %sub95 = sub nsw i32 %120, %119, !dbg !8904
  store i32 %sub95, i32* %lc, align 4, !dbg !8904
  %121 = load i32, i32* %j, align 4, !dbg !8905
  %idxprom96 = sext i32 %121 to i64, !dbg !8906
  %p97 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 2, !dbg !8907
  %122 = load i32*, i32** %p97, align 8, !dbg !8907
  %arrayidx98 = getelementptr inbounds i32, i32* %122, i64 %idxprom96, !dbg !8906
  %123 = load i32, i32* %arrayidx98, align 4, !dbg !8906
  %124 = load i32, i32* %rlc.addr, align 4, !dbg !8908
  %cmp99 = icmp eq i32 %123, %124, !dbg !8909
  br i1 %cmp99, label %if.then101, label %if.else134, !dbg !8910

if.then101:                                       ; preds = %if.then94
  %125 = load i32, i32* %lc, align 4, !dbg !8911
  %cmp102 = icmp slt i32 %125, 8, !dbg !8913
  br i1 %cmp102, label %if.then104, label %if.end110, !dbg !8911

if.then104:                                       ; preds = %if.then101
  %126 = load i64, i64* %c, align 8, !dbg !8914
  %shl105 = shl i64 %126, 8, !dbg !8915
  %127 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !8916
  store %struct.GetByteContext* %127, %struct.GetByteContext** %g.addr.i255, align 8, !dbg !8917
  %128 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i255, align 8, !dbg !8918
  %buffer_end.i256 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %128, i32 0, i32 1, !dbg !8919
  %129 = load i8*, i8** %buffer_end.i256, align 8, !dbg !8919
  %130 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i255, align 8, !dbg !8920
  %buffer.i257 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %130, i32 0, i32 0, !dbg !8921
  %131 = load i8*, i8** %buffer.i257, align 8, !dbg !8921
  %sub.ptr.lhs.cast.i258 = ptrtoint i8* %129 to i64, !dbg !8922
  %sub.ptr.rhs.cast.i259 = ptrtoint i8* %131 to i64, !dbg !8922
  %sub.ptr.sub.i260 = sub i64 %sub.ptr.lhs.cast.i258, %sub.ptr.rhs.cast.i259, !dbg !8922
  %cmp.i261 = icmp slt i64 %sub.ptr.sub.i260, 1, !dbg !8923
  br i1 %cmp.i261, label %if.then.i264, label %if.end.i269, !dbg !8924

if.then.i264:                                     ; preds = %if.then104
  %132 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i255, align 8, !dbg !8925
  %buffer_end1.i262 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %132, i32 0, i32 1, !dbg !8926
  %133 = load i8*, i8** %buffer_end1.i262, align 8, !dbg !8926
  %134 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i255, align 8, !dbg !8927
  %buffer2.i263 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %134, i32 0, i32 0, !dbg !8928
  store i8* %133, i8** %buffer2.i263, align 8, !dbg !8929
  store i32 0, i32* %retval.i254, align 4, !dbg !8930
  br label %bytestream2_get_byte.exit270, !dbg !8930

if.end.i269:                                      ; preds = %if.then104
  %135 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i255, align 8, !dbg !8931
  store %struct.GetByteContext* %135, %struct.GetByteContext** %g.addr.i.i253, align 8, !dbg !8932
  %136 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i253, align 8, !dbg !8933
  %buffer.i.i265 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %136, i32 0, i32 0, !dbg !8934
  store i8** %buffer.i.i265, i8*** %b.addr.i.i.i252, align 8, !dbg !8935
  %137 = load i8**, i8*** %b.addr.i.i.i252, align 8, !dbg !8936
  %138 = load i8*, i8** %137, align 8, !dbg !8937
  %add.ptr.i.i.i266 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !8937
  store i8* %add.ptr.i.i.i266, i8** %137, align 8, !dbg !8937
  %139 = load i8**, i8*** %b.addr.i.i.i252, align 8, !dbg !8938
  %140 = load i8*, i8** %139, align 8, !dbg !8939
  %add.ptr1.i.i.i267 = getelementptr inbounds i8, i8* %140, i64 -1, !dbg !8940
  %141 = load i8, i8* %add.ptr1.i.i.i267, align 1, !dbg !8941
  %conv.i.i.i268 = zext i8 %141 to i32, !dbg !8942
  store i32 %conv.i.i.i268, i32* %retval.i254, align 4, !dbg !8943
  br label %bytestream2_get_byte.exit270, !dbg !8943

bytestream2_get_byte.exit270:                     ; preds = %if.then.i264, %if.end.i269
  %142 = load i32, i32* %retval.i254, align 4, !dbg !8944
  %conv107 = zext i32 %142 to i64, !dbg !8917
  %or108 = or i64 %shl105, %conv107, !dbg !8945
  store i64 %or108, i64* %c, align 8, !dbg !8946
  %143 = load i32, i32* %lc, align 4, !dbg !8947
  %add109 = add nsw i32 %143, 8, !dbg !8947
  store i32 %add109, i32* %lc, align 4, !dbg !8947
  br label %if.end110, !dbg !8948

if.end110:                                        ; preds = %bytestream2_get_byte.exit270, %if.then101
  %144 = load i32, i32* %lc, align 4, !dbg !8949
  %sub111 = sub nsw i32 %144, 8, !dbg !8949
  store i32 %sub111, i32* %lc, align 4, !dbg !8949
  %145 = load i64, i64* %c, align 8, !dbg !8951
  %146 = load i32, i32* %lc, align 4, !dbg !8952
  %sh_prom112 = zext i32 %146 to i64, !dbg !8953
  %shr113 = lshr i64 %145, %sh_prom112, !dbg !8953
  %conv114 = trunc i64 %shr113 to i8, !dbg !8951
  store i8 %conv114, i8* %cs, align 1, !dbg !8954
  %147 = load i16*, i16** %out.addr, align 8, !dbg !8955
  %148 = load i8, i8* %cs, align 1, !dbg !8956
  %conv115 = zext i8 %148 to i32, !dbg !8956
  %idx.ext116 = sext i32 %conv115 to i64, !dbg !8957
  %add.ptr117 = getelementptr inbounds i16, i16* %147, i64 %idx.ext116, !dbg !8957
  %149 = load i16*, i16** %oe, align 8, !dbg !8958
  %cmp118 = icmp ugt i16* %add.ptr117, %149, !dbg !8959
  br i1 %cmp118, label %if.then123, label %lor.lhs.false120, !dbg !8960

lor.lhs.false120:                                 ; preds = %if.end110
  %150 = load i16*, i16** %out.addr, align 8, !dbg !8961
  %151 = load i16*, i16** %outb, align 8, !dbg !8964
  %cmp121 = icmp eq i16* %150, %151, !dbg !8965
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !8966

if.then123:                                       ; preds = %lor.lhs.false120, %if.end110
  store i32 -1094995529, i32* %retval, align 4, !dbg !8967
  br label %return, !dbg !8967

if.end124:                                        ; preds = %lor.lhs.false120
  %152 = load i16*, i16** %out.addr, align 8, !dbg !8969
  %arrayidx125 = getelementptr inbounds i16, i16* %152, i64 -1, !dbg !8969
  %153 = load i16, i16* %arrayidx125, align 2, !dbg !8969
  store i16 %153, i16* %s, align 2, !dbg !8971
  br label %while.cond126, !dbg !8972

while.cond126:                                    ; preds = %while.body131, %if.end124
  %154 = load i8, i8* %cs, align 1, !dbg !8973
  %dec127 = add i8 %154, -1, !dbg !8973
  store i8 %dec127, i8* %cs, align 1, !dbg !8973
  %conv128 = zext i8 %154 to i32, !dbg !8975
  %cmp129 = icmp sgt i32 %conv128, 0, !dbg !8976
  br i1 %cmp129, label %while.body131, label %while.end133, !dbg !8977

while.body131:                                    ; preds = %while.cond126
  %155 = load i16, i16* %s, align 2, !dbg !8978
  %156 = load i16*, i16** %out.addr, align 8, !dbg !8980
  %incdec.ptr132 = getelementptr inbounds i16, i16* %156, i32 1, !dbg !8980
  store i16* %incdec.ptr132, i16** %out.addr, align 8, !dbg !8980
  store i16 %155, i16* %156, align 2, !dbg !8981
  br label %while.cond126, !dbg !8982, !llvm.loop !8983

while.end133:                                     ; preds = %while.cond126
  br label %if.end145, !dbg !8985

if.else134:                                       ; preds = %if.then94
  %157 = load i16*, i16** %out.addr, align 8, !dbg !8987
  %158 = load i16*, i16** %oe, align 8, !dbg !8990
  %cmp135 = icmp ult i16* %157, %158, !dbg !8991
  br i1 %cmp135, label %if.then137, label %if.else143, !dbg !8987

if.then137:                                       ; preds = %if.else134
  %159 = load i32, i32* %j, align 4, !dbg !8992
  %idxprom138 = sext i32 %159 to i64, !dbg !8995
  %p139 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 2, !dbg !8996
  %160 = load i32*, i32** %p139, align 8, !dbg !8996
  %arrayidx140 = getelementptr inbounds i32, i32* %160, i64 %idxprom138, !dbg !8995
  %161 = load i32, i32* %arrayidx140, align 4, !dbg !8995
  %conv141 = trunc i32 %161 to i16, !dbg !8995
  %162 = load i16*, i16** %out.addr, align 8, !dbg !8997
  %incdec.ptr142 = getelementptr inbounds i16, i16* %162, i32 1, !dbg !8997
  store i16* %incdec.ptr142, i16** %out.addr, align 8, !dbg !8997
  store i16 %conv141, i16* %162, align 2, !dbg !8998
  br label %if.end144, !dbg !8999

if.else143:                                       ; preds = %if.else134
  store i32 -1094995529, i32* %retval, align 4, !dbg !9000
  br label %return, !dbg !9000

if.end144:                                        ; preds = %if.then137
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %while.end133
  br label %for.end, !dbg !9003

if.end146:                                        ; preds = %if.then78
  br label %if.end147, !dbg !9004

if.end147:                                        ; preds = %if.end146, %while.end75
  br label %for.inc, !dbg !9005

for.inc:                                          ; preds = %if.end147
  %163 = load i32, i32* %j, align 4, !dbg !9006
  %inc = add nsw i32 %163, 1, !dbg !9006
  store i32 %inc, i32* %j, align 4, !dbg !9006
  br label %for.cond, !dbg !9008, !llvm.loop !9009

for.end:                                          ; preds = %if.end145, %for.cond
  %164 = load i32, i32* %j, align 4, !dbg !9011
  %lit148 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl, i32 0, i32 1, !dbg !9013
  %165 = load i32, i32* %lit148, align 4, !dbg !9013
  %cmp149 = icmp eq i32 %164, %165, !dbg !9014
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !9015

if.then151:                                       ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !9016
  br label %return, !dbg !9016

if.end152:                                        ; preds = %for.end
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end49
  br label %while.cond5, !dbg !9017, !llvm.loop !9019

while.end154:                                     ; preds = %while.cond5
  br label %while.cond, !dbg !9020, !llvm.loop !9022

while.end155:                                     ; preds = %while.cond
  %166 = load i32, i32* %nbits.addr, align 4, !dbg !9023
  %sub156 = sub nsw i32 8, %166, !dbg !9024
  %and157 = and i32 %sub156, 7, !dbg !9025
  store i32 %and157, i32* %i, align 4, !dbg !9026
  %167 = load i32, i32* %i, align 4, !dbg !9027
  %168 = load i64, i64* %c, align 8, !dbg !9028
  %sh_prom158 = zext i32 %167 to i64, !dbg !9028
  %shr159 = lshr i64 %168, %sh_prom158, !dbg !9028
  store i64 %shr159, i64* %c, align 8, !dbg !9028
  %169 = load i32, i32* %i, align 4, !dbg !9029
  %170 = load i32, i32* %lc, align 4, !dbg !9030
  %sub160 = sub nsw i32 %170, %169, !dbg !9030
  store i32 %sub160, i32* %lc, align 4, !dbg !9030
  br label %while.cond161, !dbg !9031

while.cond161:                                    ; preds = %if.end226, %while.end155
  %171 = load i32, i32* %lc, align 4, !dbg !9032
  %cmp162 = icmp sgt i32 %171, 0, !dbg !9033
  br i1 %cmp162, label %while.body164, label %while.end227, !dbg !9034

while.body164:                                    ; preds = %while.cond161
  call void @llvm.dbg.declare(metadata %struct.HufDec* %pl165, metadata !9035, metadata !1741), !dbg !9036
  %172 = load i64, i64* %c, align 8, !dbg !9037
  %173 = load i32, i32* %lc, align 4, !dbg !9038
  %sub166 = sub nsw i32 14, %173, !dbg !9039
  %sh_prom167 = zext i32 %sub166 to i64, !dbg !9040
  %shl168 = shl i64 %172, %sh_prom167, !dbg !9040
  %and169 = and i64 %shl168, 16383, !dbg !9041
  %174 = load %struct.HufDec*, %struct.HufDec** %hdecod.addr, align 8, !dbg !9042
  %arrayidx170 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %174, i64 %and169, !dbg !9042
  %175 = bitcast %struct.HufDec* %pl165 to i8*, !dbg !9042
  %176 = bitcast %struct.HufDec* %arrayidx170 to i8*, !dbg !9042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 16, i32 8, i1 false), !dbg !9042
  %len171 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl165, i32 0, i32 0, !dbg !9043
  %177 = load i32, i32* %len171, align 8, !dbg !9043
  %tobool172 = icmp ne i32 %177, 0, !dbg !9044
  br i1 %tobool172, label %land.lhs.true, label %if.else225, !dbg !9045

land.lhs.true:                                    ; preds = %while.body164
  %178 = load i32, i32* %lc, align 4, !dbg !9046
  %len173 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl165, i32 0, i32 0, !dbg !9048
  %179 = load i32, i32* %len173, align 8, !dbg !9048
  %cmp174 = icmp sge i32 %178, %179, !dbg !9049
  br i1 %cmp174, label %if.then176, label %if.else225, !dbg !9050

if.then176:                                       ; preds = %land.lhs.true
  %len177 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl165, i32 0, i32 0, !dbg !9051
  %180 = load i32, i32* %len177, align 8, !dbg !9051
  %181 = load i32, i32* %lc, align 4, !dbg !9052
  %sub178 = sub nsw i32 %181, %180, !dbg !9052
  store i32 %sub178, i32* %lc, align 4, !dbg !9052
  %lit179 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl165, i32 0, i32 1, !dbg !9053
  %182 = load i32, i32* %lit179, align 4, !dbg !9053
  %183 = load i32, i32* %rlc.addr, align 4, !dbg !9054
  %cmp180 = icmp eq i32 %182, %183, !dbg !9055
  br i1 %cmp180, label %if.then182, label %if.else215, !dbg !9056

if.then182:                                       ; preds = %if.then176
  %184 = load i32, i32* %lc, align 4, !dbg !9057
  %cmp183 = icmp slt i32 %184, 8, !dbg !9059
  br i1 %cmp183, label %if.then185, label %if.end191, !dbg !9057

if.then185:                                       ; preds = %if.then182
  %185 = load i64, i64* %c, align 8, !dbg !9060
  %shl186 = shl i64 %185, 8, !dbg !9061
  %186 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !9062
  store %struct.GetByteContext* %186, %struct.GetByteContext** %g.addr.i236, align 8, !dbg !9063
  %187 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i236, align 8, !dbg !9064
  %buffer_end.i237 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %187, i32 0, i32 1, !dbg !9065
  %188 = load i8*, i8** %buffer_end.i237, align 8, !dbg !9065
  %189 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i236, align 8, !dbg !9066
  %buffer.i238 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %189, i32 0, i32 0, !dbg !9067
  %190 = load i8*, i8** %buffer.i238, align 8, !dbg !9067
  %sub.ptr.lhs.cast.i239 = ptrtoint i8* %188 to i64, !dbg !9068
  %sub.ptr.rhs.cast.i240 = ptrtoint i8* %190 to i64, !dbg !9068
  %sub.ptr.sub.i241 = sub i64 %sub.ptr.lhs.cast.i239, %sub.ptr.rhs.cast.i240, !dbg !9068
  %cmp.i242 = icmp slt i64 %sub.ptr.sub.i241, 1, !dbg !9069
  br i1 %cmp.i242, label %if.then.i245, label %if.end.i250, !dbg !9070

if.then.i245:                                     ; preds = %if.then185
  %191 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i236, align 8, !dbg !9071
  %buffer_end1.i243 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %191, i32 0, i32 1, !dbg !9072
  %192 = load i8*, i8** %buffer_end1.i243, align 8, !dbg !9072
  %193 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i236, align 8, !dbg !9073
  %buffer2.i244 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %193, i32 0, i32 0, !dbg !9074
  store i8* %192, i8** %buffer2.i244, align 8, !dbg !9075
  store i32 0, i32* %retval.i235, align 4, !dbg !9076
  br label %bytestream2_get_byte.exit251, !dbg !9076

if.end.i250:                                      ; preds = %if.then185
  %194 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i236, align 8, !dbg !9077
  store %struct.GetByteContext* %194, %struct.GetByteContext** %g.addr.i.i234, align 8, !dbg !9078
  %195 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i234, align 8, !dbg !9079
  %buffer.i.i246 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %195, i32 0, i32 0, !dbg !9080
  store i8** %buffer.i.i246, i8*** %b.addr.i.i.i233, align 8, !dbg !9081
  %196 = load i8**, i8*** %b.addr.i.i.i233, align 8, !dbg !9082
  %197 = load i8*, i8** %196, align 8, !dbg !9083
  %add.ptr.i.i.i247 = getelementptr inbounds i8, i8* %197, i64 1, !dbg !9083
  store i8* %add.ptr.i.i.i247, i8** %196, align 8, !dbg !9083
  %198 = load i8**, i8*** %b.addr.i.i.i233, align 8, !dbg !9084
  %199 = load i8*, i8** %198, align 8, !dbg !9085
  %add.ptr1.i.i.i248 = getelementptr inbounds i8, i8* %199, i64 -1, !dbg !9086
  %200 = load i8, i8* %add.ptr1.i.i.i248, align 1, !dbg !9087
  %conv.i.i.i249 = zext i8 %200 to i32, !dbg !9088
  store i32 %conv.i.i.i249, i32* %retval.i235, align 4, !dbg !9089
  br label %bytestream2_get_byte.exit251, !dbg !9089

bytestream2_get_byte.exit251:                     ; preds = %if.then.i245, %if.end.i250
  %201 = load i32, i32* %retval.i235, align 4, !dbg !9090
  %conv188 = zext i32 %201 to i64, !dbg !9063
  %or189 = or i64 %shl186, %conv188, !dbg !9091
  store i64 %or189, i64* %c, align 8, !dbg !9092
  %202 = load i32, i32* %lc, align 4, !dbg !9093
  %add190 = add nsw i32 %202, 8, !dbg !9093
  store i32 %add190, i32* %lc, align 4, !dbg !9093
  br label %if.end191, !dbg !9094

if.end191:                                        ; preds = %bytestream2_get_byte.exit251, %if.then182
  %203 = load i32, i32* %lc, align 4, !dbg !9095
  %sub192 = sub nsw i32 %203, 8, !dbg !9095
  store i32 %sub192, i32* %lc, align 4, !dbg !9095
  %204 = load i64, i64* %c, align 8, !dbg !9097
  %205 = load i32, i32* %lc, align 4, !dbg !9098
  %sh_prom193 = zext i32 %205 to i64, !dbg !9099
  %shr194 = lshr i64 %204, %sh_prom193, !dbg !9099
  %conv195 = trunc i64 %shr194 to i8, !dbg !9097
  store i8 %conv195, i8* %cs, align 1, !dbg !9100
  %206 = load i16*, i16** %out.addr, align 8, !dbg !9101
  %207 = load i8, i8* %cs, align 1, !dbg !9102
  %conv196 = zext i8 %207 to i32, !dbg !9102
  %idx.ext197 = sext i32 %conv196 to i64, !dbg !9103
  %add.ptr198 = getelementptr inbounds i16, i16* %206, i64 %idx.ext197, !dbg !9103
  %208 = load i16*, i16** %oe, align 8, !dbg !9104
  %cmp199 = icmp ugt i16* %add.ptr198, %208, !dbg !9105
  br i1 %cmp199, label %if.then204, label %lor.lhs.false201, !dbg !9106

lor.lhs.false201:                                 ; preds = %if.end191
  %209 = load i16*, i16** %out.addr, align 8, !dbg !9107
  %210 = load i16*, i16** %outb, align 8, !dbg !9110
  %cmp202 = icmp eq i16* %209, %210, !dbg !9111
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !9112

if.then204:                                       ; preds = %lor.lhs.false201, %if.end191
  store i32 -1094995529, i32* %retval, align 4, !dbg !9113
  br label %return, !dbg !9113

if.end205:                                        ; preds = %lor.lhs.false201
  %211 = load i16*, i16** %out.addr, align 8, !dbg !9115
  %arrayidx206 = getelementptr inbounds i16, i16* %211, i64 -1, !dbg !9115
  %212 = load i16, i16* %arrayidx206, align 2, !dbg !9115
  store i16 %212, i16* %s, align 2, !dbg !9117
  br label %while.cond207, !dbg !9118

while.cond207:                                    ; preds = %while.body212, %if.end205
  %213 = load i8, i8* %cs, align 1, !dbg !9119
  %dec208 = add i8 %213, -1, !dbg !9119
  store i8 %dec208, i8* %cs, align 1, !dbg !9119
  %conv209 = zext i8 %213 to i32, !dbg !9121
  %cmp210 = icmp sgt i32 %conv209, 0, !dbg !9122
  br i1 %cmp210, label %while.body212, label %while.end214, !dbg !9123

while.body212:                                    ; preds = %while.cond207
  %214 = load i16, i16* %s, align 2, !dbg !9124
  %215 = load i16*, i16** %out.addr, align 8, !dbg !9126
  %incdec.ptr213 = getelementptr inbounds i16, i16* %215, i32 1, !dbg !9126
  store i16* %incdec.ptr213, i16** %out.addr, align 8, !dbg !9126
  store i16 %214, i16* %215, align 2, !dbg !9127
  br label %while.cond207, !dbg !9128, !llvm.loop !9129

while.end214:                                     ; preds = %while.cond207
  br label %if.end224, !dbg !9131

if.else215:                                       ; preds = %if.then176
  %216 = load i16*, i16** %out.addr, align 8, !dbg !9133
  %217 = load i16*, i16** %oe, align 8, !dbg !9136
  %cmp216 = icmp ult i16* %216, %217, !dbg !9137
  br i1 %cmp216, label %if.then218, label %if.else222, !dbg !9133

if.then218:                                       ; preds = %if.else215
  %lit219 = getelementptr inbounds %struct.HufDec, %struct.HufDec* %pl165, i32 0, i32 1, !dbg !9138
  %218 = load i32, i32* %lit219, align 4, !dbg !9138
  %conv220 = trunc i32 %218 to i16, !dbg !9141
  %219 = load i16*, i16** %out.addr, align 8, !dbg !9142
  %incdec.ptr221 = getelementptr inbounds i16, i16* %219, i32 1, !dbg !9142
  store i16* %incdec.ptr221, i16** %out.addr, align 8, !dbg !9142
  store i16 %conv220, i16* %219, align 2, !dbg !9143
  br label %if.end223, !dbg !9144

if.else222:                                       ; preds = %if.else215
  store i32 -1094995529, i32* %retval, align 4, !dbg !9145
  br label %return, !dbg !9145

if.end223:                                        ; preds = %if.then218
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %while.end214
  br label %if.end226, !dbg !9148

if.else225:                                       ; preds = %land.lhs.true, %while.body164
  store i32 -1094995529, i32* %retval, align 4, !dbg !9149
  br label %return, !dbg !9149

if.end226:                                        ; preds = %if.end224
  br label %while.cond161, !dbg !9151, !llvm.loop !9152

while.end227:                                     ; preds = %while.cond161
  %220 = load i16*, i16** %out.addr, align 8, !dbg !9153
  %221 = load i16*, i16** %outb, align 8, !dbg !9155
  %sub.ptr.lhs.cast = ptrtoint i16* %220 to i64, !dbg !9156
  %sub.ptr.rhs.cast = ptrtoint i16* %221 to i64, !dbg !9156
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9156
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !9156
  %222 = load i32, i32* %no.addr, align 4, !dbg !9157
  %conv228 = sext i32 %222 to i64, !dbg !9157
  %cmp229 = icmp ne i64 %sub.ptr.div, %conv228, !dbg !9158
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !9159

if.then231:                                       ; preds = %while.end227
  store i32 -1094995529, i32* %retval, align 4, !dbg !9160
  br label %return, !dbg !9160

if.end232:                                        ; preds = %while.end227
  store i32 0, i32* %retval, align 4, !dbg !9161
  br label %return, !dbg !9161

return:                                           ; preds = %if.end232, %if.then231, %if.else225, %if.else222, %if.then204, %if.then151, %if.else143, %if.then123, %if.then52, %if.else47, %if.then33
  %223 = load i32, i32* %retval, align 4, !dbg !9162
  ret i32 %223, !dbg !9162
}

declare void @av_free(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #5 !dbg !9163 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9167, metadata !1741), !dbg !9168
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9169, metadata !1741), !dbg !9170
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !9171, metadata !1741), !dbg !9172
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !9173
  %cmp = icmp sgt i32 %0, 268435455, !dbg !9175
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9176

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !9177
  %cmp1 = icmp slt i32 %1, 0, !dbg !9179
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9180

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !9181
  br label %if.end, !dbg !9182

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9183
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !9184
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !9185
  %mul = mul nsw i32 %4, 8, !dbg !9186
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !9187
  ret i32 %call, !dbg !9188
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !9189 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !9192, metadata !1741), !dbg !9197
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9199, metadata !1741), !dbg !9200
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9201, metadata !1741), !dbg !9202
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9203, metadata !1741), !dbg !9204
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !9205, metadata !1741), !dbg !9206
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9207
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9208
  %1 = load i32, i32* %index, align 8, !dbg !9208
  store i32 %1, i32* %re_index, align 4, !dbg !9206
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !9209, metadata !1741), !dbg !9210
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !9211, metadata !1741), !dbg !9212
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9213
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !9214
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !9214
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !9212
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9215
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !9216
  %5 = load i8*, i8** %buffer, align 8, !dbg !9216
  %6 = load i32, i32* %re_index, align 4, !dbg !9217
  %shr = lshr i32 %6, 3, !dbg !9218
  %idx.ext = zext i32 %shr to i64, !dbg !9219
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !9219
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !9220
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !9220
  %8 = load i32, i32* %l, align 1, !dbg !9220
  store i32 %8, i32* %x.addr.i, align 4, !dbg !9221
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !9222
  %shl.i = shl i32 %9, 8, !dbg !9223
  %and.i = and i32 %shl.i, 65280, !dbg !9224
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !9225
  %shr.i = lshr i32 %10, 8, !dbg !9226
  %and1.i = and i32 %shr.i, 255, !dbg !9227
  %or.i = or i32 %and.i, %and1.i, !dbg !9228
  %shl2.i = shl i32 %or.i, 16, !dbg !9229
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !9230
  %shr3.i = lshr i32 %11, 16, !dbg !9231
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9232
  %and5.i = and i32 %shl4.i, 65280, !dbg !9233
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !9234
  %shr6.i = lshr i32 %12, 16, !dbg !9235
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9236
  %and8.i = and i32 %shr7.i, 255, !dbg !9237
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9238
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9239
  %13 = load i32, i32* %re_index, align 4, !dbg !9240
  %and = and i32 %13, 7, !dbg !9241
  %shl = shl i32 %or10.i, %and, !dbg !9242
  store i32 %shl, i32* %re_cache, align 4, !dbg !9243
  %14 = load i32, i32* %re_cache, align 4, !dbg !9244
  %15 = load i32, i32* %n.addr, align 4, !dbg !9245
  %conv = trunc i32 %15 to i8, !dbg !9245
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !9246
  store i32 %call4, i32* %tmp, align 4, !dbg !9247
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !9248
  %17 = load i32, i32* %re_index, align 4, !dbg !9249
  %18 = load i32, i32* %n.addr, align 4, !dbg !9250
  %add = add i32 %17, %18, !dbg !9251
  %cmp = icmp ugt i32 %16, %add, !dbg !9252
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9253

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !9254
  %20 = load i32, i32* %n.addr, align 4, !dbg !9256
  %add6 = add i32 %19, %20, !dbg !9257
  br label %cond.end, !dbg !9258

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !9259
  br label %cond.end, !dbg !9261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !9262
  store i32 %cond, i32* %re_index, align 4, !dbg !9264
  %22 = load i32, i32* %re_index, align 4, !dbg !9265
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9266
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !9267
  store i32 %22, i32* %index7, align 8, !dbg !9268
  %24 = load i32, i32* %tmp, align 4, !dbg !9269
  ret i32 %24, !dbg !9270
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !9271 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9276, metadata !1741), !dbg !9277
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9278
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9279
  %1 = load i32, i32* %index, align 8, !dbg !9279
  ret i32 %1, !dbg !9280
}

; Function Attrs: nounwind uwtable
define internal void @huf_canonical_code_table(i64* %hcode) #0 !dbg !9281 {
entry:
  %hcode.addr = alloca i64*, align 8
  %c = alloca i64, align 8
  %n = alloca [59 x i64], align 16
  %i = alloca i32, align 4
  %nc = alloca i64, align 8
  %l = alloca i32, align 4
  store i64* %hcode, i64** %hcode.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %hcode.addr, metadata !9284, metadata !1741), !dbg !9285
  call void @llvm.dbg.declare(metadata i64* %c, metadata !9286, metadata !1741), !dbg !9287
  call void @llvm.dbg.declare(metadata [59 x i64]* %n, metadata !9288, metadata !1741), !dbg !9292
  %0 = bitcast [59 x i64]* %n to i8*, !dbg !9292
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 472, i32 16, i1 false), !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9293, metadata !1741), !dbg !9294
  store i32 0, i32* %i, align 4, !dbg !9295
  br label %for.cond, !dbg !9297

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9298
  %cmp = icmp slt i32 %1, 65537, !dbg !9301
  br i1 %cmp, label %for.body, label %for.end, !dbg !9302

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !9303
  %idxprom = sext i32 %2 to i64, !dbg !9304
  %3 = load i64*, i64** %hcode.addr, align 8, !dbg !9304
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %idxprom, !dbg !9304
  %4 = load i64, i64* %arrayidx, align 8, !dbg !9304
  %arrayidx1 = getelementptr inbounds [59 x i64], [59 x i64]* %n, i64 0, i64 %4, !dbg !9305
  %5 = load i64, i64* %arrayidx1, align 8, !dbg !9306
  %add = add i64 %5, 1, !dbg !9306
  store i64 %add, i64* %arrayidx1, align 8, !dbg !9306
  br label %for.inc, !dbg !9305

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !9307
  %inc = add nsw i32 %6, 1, !dbg !9307
  store i32 %inc, i32* %i, align 4, !dbg !9307
  br label %for.cond, !dbg !9309, !llvm.loop !9310

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %c, align 8, !dbg !9312
  store i32 58, i32* %i, align 4, !dbg !9313
  br label %for.cond2, !dbg !9315

for.cond2:                                        ; preds = %for.inc10, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !9316
  %cmp3 = icmp sgt i32 %7, 0, !dbg !9319
  br i1 %cmp3, label %for.body4, label %for.end11, !dbg !9320

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i64* %nc, metadata !9321, metadata !1741), !dbg !9323
  %8 = load i64, i64* %c, align 8, !dbg !9324
  %9 = load i32, i32* %i, align 4, !dbg !9325
  %idxprom5 = sext i32 %9 to i64, !dbg !9326
  %arrayidx6 = getelementptr inbounds [59 x i64], [59 x i64]* %n, i64 0, i64 %idxprom5, !dbg !9326
  %10 = load i64, i64* %arrayidx6, align 8, !dbg !9326
  %add7 = add i64 %8, %10, !dbg !9327
  %shr = lshr i64 %add7, 1, !dbg !9328
  store i64 %shr, i64* %nc, align 8, !dbg !9323
  %11 = load i64, i64* %c, align 8, !dbg !9329
  %12 = load i32, i32* %i, align 4, !dbg !9330
  %idxprom8 = sext i32 %12 to i64, !dbg !9331
  %arrayidx9 = getelementptr inbounds [59 x i64], [59 x i64]* %n, i64 0, i64 %idxprom8, !dbg !9331
  store i64 %11, i64* %arrayidx9, align 8, !dbg !9332
  %13 = load i64, i64* %nc, align 8, !dbg !9333
  store i64 %13, i64* %c, align 8, !dbg !9334
  br label %for.inc10, !dbg !9335

for.inc10:                                        ; preds = %for.body4
  %14 = load i32, i32* %i, align 4, !dbg !9336
  %dec = add nsw i32 %14, -1, !dbg !9336
  store i32 %dec, i32* %i, align 4, !dbg !9336
  br label %for.cond2, !dbg !9338, !llvm.loop !9339

for.end11:                                        ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !9341
  br label %for.cond12, !dbg !9343

for.cond12:                                       ; preds = %for.inc25, %for.end11
  %15 = load i32, i32* %i, align 4, !dbg !9344
  %cmp13 = icmp slt i32 %15, 65537, !dbg !9347
  br i1 %cmp13, label %for.body14, label %for.end27, !dbg !9348

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata i32* %l, metadata !9349, metadata !1741), !dbg !9351
  %16 = load i32, i32* %i, align 4, !dbg !9352
  %idxprom15 = sext i32 %16 to i64, !dbg !9353
  %17 = load i64*, i64** %hcode.addr, align 8, !dbg !9353
  %arrayidx16 = getelementptr inbounds i64, i64* %17, i64 %idxprom15, !dbg !9353
  %18 = load i64, i64* %arrayidx16, align 8, !dbg !9353
  %conv = trunc i64 %18 to i32, !dbg !9353
  store i32 %conv, i32* %l, align 4, !dbg !9351
  %19 = load i32, i32* %l, align 4, !dbg !9354
  %cmp17 = icmp sgt i32 %19, 0, !dbg !9356
  br i1 %cmp17, label %if.then, label %if.end, !dbg !9357

if.then:                                          ; preds = %for.body14
  %20 = load i32, i32* %l, align 4, !dbg !9358
  %conv19 = sext i32 %20 to i64, !dbg !9358
  %21 = load i32, i32* %l, align 4, !dbg !9359
  %idxprom20 = sext i32 %21 to i64, !dbg !9360
  %arrayidx21 = getelementptr inbounds [59 x i64], [59 x i64]* %n, i64 0, i64 %idxprom20, !dbg !9360
  %22 = load i64, i64* %arrayidx21, align 8, !dbg !9361
  %inc22 = add i64 %22, 1, !dbg !9361
  store i64 %inc22, i64* %arrayidx21, align 8, !dbg !9361
  %shl = shl i64 %22, 6, !dbg !9362
  %or = or i64 %conv19, %shl, !dbg !9363
  %23 = load i32, i32* %i, align 4, !dbg !9364
  %idxprom23 = sext i32 %23 to i64, !dbg !9365
  %24 = load i64*, i64** %hcode.addr, align 8, !dbg !9365
  %arrayidx24 = getelementptr inbounds i64, i64* %24, i64 %idxprom23, !dbg !9365
  store i64 %or, i64* %arrayidx24, align 8, !dbg !9366
  br label %if.end, !dbg !9365

if.end:                                           ; preds = %if.then, %for.body14
  br label %for.inc25, !dbg !9367

for.inc25:                                        ; preds = %if.end
  %25 = load i32, i32* %i, align 4, !dbg !9368
  %inc26 = add nsw i32 %25, 1, !dbg !9368
  store i32 %inc26, i32* %i, align 4, !dbg !9368
  br label %for.cond12, !dbg !9370, !llvm.loop !9371

for.end27:                                        ; preds = %for.cond12
  ret void, !dbg !9373
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #5 !dbg !9374 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9375, metadata !1741), !dbg !9376
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9377, metadata !1741), !dbg !9378
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !9379, metadata !1741), !dbg !9380
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !9381, metadata !1741), !dbg !9382
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9383, metadata !1741), !dbg !9384
  store i32 0, i32* %ret, align 4, !dbg !9384
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !9385
  %cmp = icmp sge i32 %0, 2147483135, !dbg !9387
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9388

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !9389
  %cmp1 = icmp slt i32 %1, 0, !dbg !9391
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !9392

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !9393
  %tobool = icmp ne i8* %2, null, !dbg !9393
  br i1 %tobool, label %if.end, label %if.then, !dbg !9395

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !9396
  store i8* null, i8** %buffer.addr, align 8, !dbg !9398
  store i32 -1094995529, i32* %ret, align 4, !dbg !9399
  br label %if.end, !dbg !9400

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !9401
  %add = add nsw i32 %3, 7, !dbg !9402
  %shr = ashr i32 %add, 3, !dbg !9403
  store i32 %shr, i32* %buffer_size, align 4, !dbg !9404
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !9405
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9406
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !9407
  store i8* %4, i8** %buffer3, align 8, !dbg !9408
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !9409
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9410
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !9411
  store i32 %6, i32* %size_in_bits, align 4, !dbg !9412
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !9413
  %add4 = add nsw i32 %8, 8, !dbg !9414
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9415
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !9416
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !9417
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !9418
  %11 = load i32, i32* %buffer_size, align 4, !dbg !9419
  %idx.ext = sext i32 %11 to i64, !dbg !9420
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !9420
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9421
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !9422
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !9423
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9424
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !9425
  store i32 0, i32* %index, align 8, !dbg !9426
  %14 = load i32, i32* %ret, align 4, !dbg !9427
  ret i32 %14, !dbg !9428
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !9429 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9433, metadata !1741), !dbg !9434
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !9435, metadata !1741), !dbg !9436
  %0 = load i32, i32* %a.addr, align 4, !dbg !9437
  %1 = load i8, i8* %s.addr, align 1, !dbg !9438
  %conv = sext i8 %1 to i32, !dbg !9438
  %sub = sub nsw i32 0, %conv, !dbg !9439
  %conv1 = trunc i32 %sub to i8, !dbg !9440
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !9437, !srcloc !9441
  store i32 %2, i32* %a.addr, align 4, !dbg !9437
  %3 = load i32, i32* %a.addr, align 4, !dbg !9442
  ret i32 %3, !dbg !9443
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @wdec14(i16 zeroext %l, i16 zeroext %h, i16* %a, i16* %b) #5 !dbg !9444 {
entry:
  %l.addr = alloca i16, align 2
  %h.addr = alloca i16, align 2
  %a.addr = alloca i16*, align 8
  %b.addr = alloca i16*, align 8
  %ls = alloca i16, align 2
  %hs = alloca i16, align 2
  %hi = alloca i32, align 4
  %ai = alloca i32, align 4
  %as = alloca i16, align 2
  %bs = alloca i16, align 2
  store i16 %l, i16* %l.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %l.addr, metadata !9447, metadata !1741), !dbg !9448
  store i16 %h, i16* %h.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %h.addr, metadata !9449, metadata !1741), !dbg !9450
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !9451, metadata !1741), !dbg !9452
  store i16* %b, i16** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %b.addr, metadata !9453, metadata !1741), !dbg !9454
  call void @llvm.dbg.declare(metadata i16* %ls, metadata !9455, metadata !1741), !dbg !9458
  %0 = load i16, i16* %l.addr, align 2, !dbg !9459
  store i16 %0, i16* %ls, align 2, !dbg !9458
  call void @llvm.dbg.declare(metadata i16* %hs, metadata !9460, metadata !1741), !dbg !9461
  %1 = load i16, i16* %h.addr, align 2, !dbg !9462
  store i16 %1, i16* %hs, align 2, !dbg !9461
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !9463, metadata !1741), !dbg !9464
  %2 = load i16, i16* %hs, align 2, !dbg !9465
  %conv = sext i16 %2 to i32, !dbg !9465
  store i32 %conv, i32* %hi, align 4, !dbg !9464
  call void @llvm.dbg.declare(metadata i32* %ai, metadata !9466, metadata !1741), !dbg !9467
  %3 = load i16, i16* %ls, align 2, !dbg !9468
  %conv1 = sext i16 %3 to i32, !dbg !9468
  %4 = load i32, i32* %hi, align 4, !dbg !9469
  %and = and i32 %4, 1, !dbg !9470
  %add = add nsw i32 %conv1, %and, !dbg !9471
  %5 = load i32, i32* %hi, align 4, !dbg !9472
  %shr = ashr i32 %5, 1, !dbg !9473
  %add2 = add nsw i32 %add, %shr, !dbg !9474
  store i32 %add2, i32* %ai, align 4, !dbg !9467
  call void @llvm.dbg.declare(metadata i16* %as, metadata !9475, metadata !1741), !dbg !9476
  %6 = load i32, i32* %ai, align 4, !dbg !9477
  %conv3 = trunc i32 %6 to i16, !dbg !9477
  store i16 %conv3, i16* %as, align 2, !dbg !9476
  call void @llvm.dbg.declare(metadata i16* %bs, metadata !9478, metadata !1741), !dbg !9479
  %7 = load i32, i32* %ai, align 4, !dbg !9480
  %8 = load i32, i32* %hi, align 4, !dbg !9481
  %sub = sub nsw i32 %7, %8, !dbg !9482
  %conv4 = trunc i32 %sub to i16, !dbg !9480
  store i16 %conv4, i16* %bs, align 2, !dbg !9479
  %9 = load i16, i16* %as, align 2, !dbg !9483
  %10 = load i16*, i16** %a.addr, align 8, !dbg !9484
  store i16 %9, i16* %10, align 2, !dbg !9485
  %11 = load i16, i16* %bs, align 2, !dbg !9486
  %12 = load i16*, i16** %b.addr, align 8, !dbg !9487
  store i16 %11, i16* %12, align 2, !dbg !9488
  ret void, !dbg !9489
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @wdec16(i16 zeroext %l, i16 zeroext %h, i16* %a, i16* %b) #5 !dbg !9490 {
entry:
  %l.addr = alloca i16, align 2
  %h.addr = alloca i16, align 2
  %a.addr = alloca i16*, align 8
  %b.addr = alloca i16*, align 8
  %m = alloca i32, align 4
  %d = alloca i32, align 4
  %bb = alloca i32, align 4
  %aa = alloca i32, align 4
  store i16 %l, i16* %l.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %l.addr, metadata !9491, metadata !1741), !dbg !9492
  store i16 %h, i16* %h.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %h.addr, metadata !9493, metadata !1741), !dbg !9494
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !9495, metadata !1741), !dbg !9496
  store i16* %b, i16** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %b.addr, metadata !9497, metadata !1741), !dbg !9498
  call void @llvm.dbg.declare(metadata i32* %m, metadata !9499, metadata !1741), !dbg !9500
  %0 = load i16, i16* %l.addr, align 2, !dbg !9501
  %conv = zext i16 %0 to i32, !dbg !9501
  store i32 %conv, i32* %m, align 4, !dbg !9500
  call void @llvm.dbg.declare(metadata i32* %d, metadata !9502, metadata !1741), !dbg !9503
  %1 = load i16, i16* %h.addr, align 2, !dbg !9504
  %conv1 = zext i16 %1 to i32, !dbg !9504
  store i32 %conv1, i32* %d, align 4, !dbg !9503
  call void @llvm.dbg.declare(metadata i32* %bb, metadata !9505, metadata !1741), !dbg !9506
  %2 = load i32, i32* %m, align 4, !dbg !9507
  %3 = load i32, i32* %d, align 4, !dbg !9508
  %shr = ashr i32 %3, 1, !dbg !9509
  %sub = sub nsw i32 %2, %shr, !dbg !9510
  %and = and i32 %sub, 65535, !dbg !9511
  store i32 %and, i32* %bb, align 4, !dbg !9506
  call void @llvm.dbg.declare(metadata i32* %aa, metadata !9512, metadata !1741), !dbg !9513
  %4 = load i32, i32* %d, align 4, !dbg !9514
  %5 = load i32, i32* %bb, align 4, !dbg !9515
  %add = add nsw i32 %4, %5, !dbg !9516
  %sub2 = sub nsw i32 %add, 32768, !dbg !9517
  %and3 = and i32 %sub2, 65535, !dbg !9518
  store i32 %and3, i32* %aa, align 4, !dbg !9513
  %6 = load i32, i32* %bb, align 4, !dbg !9519
  %conv4 = trunc i32 %6 to i16, !dbg !9519
  %7 = load i16*, i16** %b.addr, align 8, !dbg !9520
  store i16 %conv4, i16* %7, align 2, !dbg !9521
  %8 = load i32, i32* %aa, align 4, !dbg !9522
  %conv5 = trunc i32 %8 to i16, !dbg !9522
  %9 = load i16*, i16** %a.addr, align 8, !dbg !9523
  store i16 %conv5, i16* %9, align 2, !dbg !9524
  ret void, !dbg !9525
}

; Function Attrs: nounwind uwtable
define internal void @unpack_3(i8* %b, i16* %s) #0 !dbg !9526 {
entry:
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !9529, metadata !1741), !dbg !9530
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !9531, metadata !1741), !dbg !9532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9533, metadata !1741), !dbg !9534
  %0 = load i8*, i8** %b.addr, align 8, !dbg !9535
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !9535
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9535
  %conv = zext i8 %1 to i32, !dbg !9535
  %shl = shl i32 %conv, 8, !dbg !9536
  %2 = load i8*, i8** %b.addr, align 8, !dbg !9537
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !9537
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !9537
  %conv2 = zext i8 %3 to i32, !dbg !9537
  %or = or i32 %shl, %conv2, !dbg !9538
  %conv3 = trunc i32 %or to i16, !dbg !9539
  %4 = load i16*, i16** %s.addr, align 8, !dbg !9540
  %arrayidx4 = getelementptr inbounds i16, i16* %4, i64 0, !dbg !9540
  store i16 %conv3, i16* %arrayidx4, align 2, !dbg !9541
  %5 = load i16*, i16** %s.addr, align 8, !dbg !9542
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 0, !dbg !9542
  %6 = load i16, i16* %arrayidx5, align 2, !dbg !9542
  %conv6 = zext i16 %6 to i32, !dbg !9542
  %and = and i32 %conv6, 32768, !dbg !9544
  %tobool = icmp ne i32 %and, 0, !dbg !9544
  br i1 %tobool, label %if.then, label %if.else, !dbg !9545

if.then:                                          ; preds = %entry
  %7 = load i16*, i16** %s.addr, align 8, !dbg !9546
  %arrayidx7 = getelementptr inbounds i16, i16* %7, i64 0, !dbg !9546
  %8 = load i16, i16* %arrayidx7, align 2, !dbg !9547
  %conv8 = zext i16 %8 to i32, !dbg !9547
  %and9 = and i32 %conv8, 32767, !dbg !9547
  %conv10 = trunc i32 %and9 to i16, !dbg !9547
  store i16 %conv10, i16* %arrayidx7, align 2, !dbg !9547
  br label %if.end, !dbg !9546

if.else:                                          ; preds = %entry
  %9 = load i16*, i16** %s.addr, align 8, !dbg !9548
  %arrayidx11 = getelementptr inbounds i16, i16* %9, i64 0, !dbg !9548
  %10 = load i16, i16* %arrayidx11, align 2, !dbg !9548
  %conv12 = zext i16 %10 to i32, !dbg !9548
  %neg = xor i32 %conv12, -1, !dbg !9549
  %conv13 = trunc i32 %neg to i16, !dbg !9549
  %11 = load i16*, i16** %s.addr, align 8, !dbg !9550
  %arrayidx14 = getelementptr inbounds i16, i16* %11, i64 0, !dbg !9550
  store i16 %conv13, i16* %arrayidx14, align 2, !dbg !9551
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 1, i32* %i, align 4, !dbg !9552
  br label %for.cond, !dbg !9554

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !9555
  %cmp = icmp slt i32 %12, 16, !dbg !9558
  br i1 %cmp, label %for.body, label %for.end, !dbg !9559

for.body:                                         ; preds = %for.cond
  %13 = load i16*, i16** %s.addr, align 8, !dbg !9560
  %arrayidx16 = getelementptr inbounds i16, i16* %13, i64 0, !dbg !9560
  %14 = load i16, i16* %arrayidx16, align 2, !dbg !9560
  %15 = load i32, i32* %i, align 4, !dbg !9561
  %idxprom = sext i32 %15 to i64, !dbg !9562
  %16 = load i16*, i16** %s.addr, align 8, !dbg !9562
  %arrayidx17 = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9562
  store i16 %14, i16* %arrayidx17, align 2, !dbg !9563
  br label %for.inc, !dbg !9562

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9564
  %inc = add nsw i32 %17, 1, !dbg !9564
  store i32 %inc, i32* %i, align 4, !dbg !9564
  br label %for.cond, !dbg !9566, !llvm.loop !9567

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9569
}

; Function Attrs: nounwind uwtable
define internal void @unpack_14(i8* %b, i16* %s) #0 !dbg !9570 {
entry:
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i16*, align 8
  %shift = alloca i16, align 2
  %bias = alloca i16, align 2
  %i = alloca i32, align 4
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !9571, metadata !1741), !dbg !9572
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !9573, metadata !1741), !dbg !9574
  call void @llvm.dbg.declare(metadata i16* %shift, metadata !9575, metadata !1741), !dbg !9576
  %0 = load i8*, i8** %b.addr, align 8, !dbg !9577
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 2, !dbg !9577
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9577
  %conv = zext i8 %1 to i32, !dbg !9577
  %shr = ashr i32 %conv, 2, !dbg !9578
  %and = and i32 %shr, 15, !dbg !9579
  %conv1 = trunc i32 %and to i16, !dbg !9580
  store i16 %conv1, i16* %shift, align 2, !dbg !9576
  call void @llvm.dbg.declare(metadata i16* %bias, metadata !9581, metadata !1741), !dbg !9582
  %2 = load i16, i16* %shift, align 2, !dbg !9583
  %conv2 = zext i16 %2 to i32, !dbg !9583
  %shl = shl i32 32, %conv2, !dbg !9584
  %conv3 = trunc i32 %shl to i16, !dbg !9585
  store i16 %conv3, i16* %bias, align 2, !dbg !9582
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9586, metadata !1741), !dbg !9587
  %3 = load i8*, i8** %b.addr, align 8, !dbg !9588
  %arrayidx4 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !9588
  %4 = load i8, i8* %arrayidx4, align 1, !dbg !9588
  %conv5 = zext i8 %4 to i32, !dbg !9588
  %shl6 = shl i32 %conv5, 8, !dbg !9589
  %5 = load i8*, i8** %b.addr, align 8, !dbg !9590
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !9590
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !9590
  %conv8 = zext i8 %6 to i32, !dbg !9590
  %or = or i32 %shl6, %conv8, !dbg !9591
  %conv9 = trunc i32 %or to i16, !dbg !9592
  %7 = load i16*, i16** %s.addr, align 8, !dbg !9593
  %arrayidx10 = getelementptr inbounds i16, i16* %7, i64 0, !dbg !9593
  store i16 %conv9, i16* %arrayidx10, align 2, !dbg !9594
  %8 = load i16*, i16** %s.addr, align 8, !dbg !9595
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 0, !dbg !9595
  %9 = load i16, i16* %arrayidx11, align 2, !dbg !9595
  %conv12 = zext i16 %9 to i32, !dbg !9595
  %10 = load i8*, i8** %b.addr, align 8, !dbg !9596
  %arrayidx13 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !9596
  %11 = load i8, i8* %arrayidx13, align 1, !dbg !9596
  %conv14 = zext i8 %11 to i32, !dbg !9596
  %shl15 = shl i32 %conv14, 4, !dbg !9597
  %12 = load i8*, i8** %b.addr, align 8, !dbg !9598
  %arrayidx16 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !9598
  %13 = load i8, i8* %arrayidx16, align 1, !dbg !9598
  %conv17 = zext i8 %13 to i32, !dbg !9598
  %shr18 = ashr i32 %conv17, 4, !dbg !9599
  %or19 = or i32 %shl15, %shr18, !dbg !9600
  %and20 = and i32 %or19, 63, !dbg !9601
  %14 = load i16, i16* %shift, align 2, !dbg !9602
  %conv21 = zext i16 %14 to i32, !dbg !9602
  %shl22 = shl i32 %and20, %conv21, !dbg !9603
  %add = add nsw i32 %conv12, %shl22, !dbg !9604
  %15 = load i16, i16* %bias, align 2, !dbg !9605
  %conv23 = zext i16 %15 to i32, !dbg !9605
  %sub = sub nsw i32 %add, %conv23, !dbg !9606
  %conv24 = trunc i32 %sub to i16, !dbg !9595
  %16 = load i16*, i16** %s.addr, align 8, !dbg !9607
  %arrayidx25 = getelementptr inbounds i16, i16* %16, i64 4, !dbg !9607
  store i16 %conv24, i16* %arrayidx25, align 2, !dbg !9608
  %17 = load i16*, i16** %s.addr, align 8, !dbg !9609
  %arrayidx26 = getelementptr inbounds i16, i16* %17, i64 4, !dbg !9609
  %18 = load i16, i16* %arrayidx26, align 2, !dbg !9609
  %conv27 = zext i16 %18 to i32, !dbg !9609
  %19 = load i8*, i8** %b.addr, align 8, !dbg !9610
  %arrayidx28 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !9610
  %20 = load i8, i8* %arrayidx28, align 1, !dbg !9610
  %conv29 = zext i8 %20 to i32, !dbg !9610
  %shl30 = shl i32 %conv29, 2, !dbg !9611
  %21 = load i8*, i8** %b.addr, align 8, !dbg !9612
  %arrayidx31 = getelementptr inbounds i8, i8* %21, i64 4, !dbg !9612
  %22 = load i8, i8* %arrayidx31, align 1, !dbg !9612
  %conv32 = zext i8 %22 to i32, !dbg !9612
  %shr33 = ashr i32 %conv32, 6, !dbg !9613
  %or34 = or i32 %shl30, %shr33, !dbg !9614
  %and35 = and i32 %or34, 63, !dbg !9615
  %23 = load i16, i16* %shift, align 2, !dbg !9616
  %conv36 = zext i16 %23 to i32, !dbg !9616
  %shl37 = shl i32 %and35, %conv36, !dbg !9617
  %add38 = add nsw i32 %conv27, %shl37, !dbg !9618
  %24 = load i16, i16* %bias, align 2, !dbg !9619
  %conv39 = zext i16 %24 to i32, !dbg !9619
  %sub40 = sub nsw i32 %add38, %conv39, !dbg !9620
  %conv41 = trunc i32 %sub40 to i16, !dbg !9609
  %25 = load i16*, i16** %s.addr, align 8, !dbg !9621
  %arrayidx42 = getelementptr inbounds i16, i16* %25, i64 8, !dbg !9621
  store i16 %conv41, i16* %arrayidx42, align 2, !dbg !9622
  %26 = load i16*, i16** %s.addr, align 8, !dbg !9623
  %arrayidx43 = getelementptr inbounds i16, i16* %26, i64 8, !dbg !9623
  %27 = load i16, i16* %arrayidx43, align 2, !dbg !9623
  %conv44 = zext i16 %27 to i32, !dbg !9623
  %28 = load i8*, i8** %b.addr, align 8, !dbg !9624
  %arrayidx45 = getelementptr inbounds i8, i8* %28, i64 4, !dbg !9624
  %29 = load i8, i8* %arrayidx45, align 1, !dbg !9624
  %conv46 = zext i8 %29 to i32, !dbg !9624
  %and47 = and i32 %conv46, 63, !dbg !9625
  %30 = load i16, i16* %shift, align 2, !dbg !9626
  %conv48 = zext i16 %30 to i32, !dbg !9626
  %shl49 = shl i32 %and47, %conv48, !dbg !9627
  %add50 = add nsw i32 %conv44, %shl49, !dbg !9628
  %31 = load i16, i16* %bias, align 2, !dbg !9629
  %conv51 = zext i16 %31 to i32, !dbg !9629
  %sub52 = sub nsw i32 %add50, %conv51, !dbg !9630
  %conv53 = trunc i32 %sub52 to i16, !dbg !9623
  %32 = load i16*, i16** %s.addr, align 8, !dbg !9631
  %arrayidx54 = getelementptr inbounds i16, i16* %32, i64 12, !dbg !9631
  store i16 %conv53, i16* %arrayidx54, align 2, !dbg !9632
  %33 = load i16*, i16** %s.addr, align 8, !dbg !9633
  %arrayidx55 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !9633
  %34 = load i16, i16* %arrayidx55, align 2, !dbg !9633
  %conv56 = zext i16 %34 to i32, !dbg !9633
  %35 = load i8*, i8** %b.addr, align 8, !dbg !9634
  %arrayidx57 = getelementptr inbounds i8, i8* %35, i64 5, !dbg !9634
  %36 = load i8, i8* %arrayidx57, align 1, !dbg !9634
  %conv58 = zext i8 %36 to i32, !dbg !9634
  %shr59 = ashr i32 %conv58, 2, !dbg !9635
  %37 = load i16, i16* %shift, align 2, !dbg !9636
  %conv60 = zext i16 %37 to i32, !dbg !9636
  %shl61 = shl i32 %shr59, %conv60, !dbg !9637
  %add62 = add nsw i32 %conv56, %shl61, !dbg !9638
  %38 = load i16, i16* %bias, align 2, !dbg !9639
  %conv63 = zext i16 %38 to i32, !dbg !9639
  %sub64 = sub nsw i32 %add62, %conv63, !dbg !9640
  %conv65 = trunc i32 %sub64 to i16, !dbg !9633
  %39 = load i16*, i16** %s.addr, align 8, !dbg !9641
  %arrayidx66 = getelementptr inbounds i16, i16* %39, i64 1, !dbg !9641
  store i16 %conv65, i16* %arrayidx66, align 2, !dbg !9642
  %40 = load i16*, i16** %s.addr, align 8, !dbg !9643
  %arrayidx67 = getelementptr inbounds i16, i16* %40, i64 4, !dbg !9643
  %41 = load i16, i16* %arrayidx67, align 2, !dbg !9643
  %conv68 = zext i16 %41 to i32, !dbg !9643
  %42 = load i8*, i8** %b.addr, align 8, !dbg !9644
  %arrayidx69 = getelementptr inbounds i8, i8* %42, i64 5, !dbg !9644
  %43 = load i8, i8* %arrayidx69, align 1, !dbg !9644
  %conv70 = zext i8 %43 to i32, !dbg !9644
  %shl71 = shl i32 %conv70, 4, !dbg !9645
  %44 = load i8*, i8** %b.addr, align 8, !dbg !9646
  %arrayidx72 = getelementptr inbounds i8, i8* %44, i64 6, !dbg !9646
  %45 = load i8, i8* %arrayidx72, align 1, !dbg !9646
  %conv73 = zext i8 %45 to i32, !dbg !9646
  %shr74 = ashr i32 %conv73, 4, !dbg !9647
  %or75 = or i32 %shl71, %shr74, !dbg !9648
  %and76 = and i32 %or75, 63, !dbg !9649
  %46 = load i16, i16* %shift, align 2, !dbg !9650
  %conv77 = zext i16 %46 to i32, !dbg !9650
  %shl78 = shl i32 %and76, %conv77, !dbg !9651
  %add79 = add nsw i32 %conv68, %shl78, !dbg !9652
  %47 = load i16, i16* %bias, align 2, !dbg !9653
  %conv80 = zext i16 %47 to i32, !dbg !9653
  %sub81 = sub nsw i32 %add79, %conv80, !dbg !9654
  %conv82 = trunc i32 %sub81 to i16, !dbg !9643
  %48 = load i16*, i16** %s.addr, align 8, !dbg !9655
  %arrayidx83 = getelementptr inbounds i16, i16* %48, i64 5, !dbg !9655
  store i16 %conv82, i16* %arrayidx83, align 2, !dbg !9656
  %49 = load i16*, i16** %s.addr, align 8, !dbg !9657
  %arrayidx84 = getelementptr inbounds i16, i16* %49, i64 8, !dbg !9657
  %50 = load i16, i16* %arrayidx84, align 2, !dbg !9657
  %conv85 = zext i16 %50 to i32, !dbg !9657
  %51 = load i8*, i8** %b.addr, align 8, !dbg !9658
  %arrayidx86 = getelementptr inbounds i8, i8* %51, i64 6, !dbg !9658
  %52 = load i8, i8* %arrayidx86, align 1, !dbg !9658
  %conv87 = zext i8 %52 to i32, !dbg !9658
  %shl88 = shl i32 %conv87, 2, !dbg !9659
  %53 = load i8*, i8** %b.addr, align 8, !dbg !9660
  %arrayidx89 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !9660
  %54 = load i8, i8* %arrayidx89, align 1, !dbg !9660
  %conv90 = zext i8 %54 to i32, !dbg !9660
  %shr91 = ashr i32 %conv90, 6, !dbg !9661
  %or92 = or i32 %shl88, %shr91, !dbg !9662
  %and93 = and i32 %or92, 63, !dbg !9663
  %55 = load i16, i16* %shift, align 2, !dbg !9664
  %conv94 = zext i16 %55 to i32, !dbg !9664
  %shl95 = shl i32 %and93, %conv94, !dbg !9665
  %add96 = add nsw i32 %conv85, %shl95, !dbg !9666
  %56 = load i16, i16* %bias, align 2, !dbg !9667
  %conv97 = zext i16 %56 to i32, !dbg !9667
  %sub98 = sub nsw i32 %add96, %conv97, !dbg !9668
  %conv99 = trunc i32 %sub98 to i16, !dbg !9657
  %57 = load i16*, i16** %s.addr, align 8, !dbg !9669
  %arrayidx100 = getelementptr inbounds i16, i16* %57, i64 9, !dbg !9669
  store i16 %conv99, i16* %arrayidx100, align 2, !dbg !9670
  %58 = load i16*, i16** %s.addr, align 8, !dbg !9671
  %arrayidx101 = getelementptr inbounds i16, i16* %58, i64 12, !dbg !9671
  %59 = load i16, i16* %arrayidx101, align 2, !dbg !9671
  %conv102 = zext i16 %59 to i32, !dbg !9671
  %60 = load i8*, i8** %b.addr, align 8, !dbg !9672
  %arrayidx103 = getelementptr inbounds i8, i8* %60, i64 7, !dbg !9672
  %61 = load i8, i8* %arrayidx103, align 1, !dbg !9672
  %conv104 = zext i8 %61 to i32, !dbg !9672
  %and105 = and i32 %conv104, 63, !dbg !9673
  %62 = load i16, i16* %shift, align 2, !dbg !9674
  %conv106 = zext i16 %62 to i32, !dbg !9674
  %shl107 = shl i32 %and105, %conv106, !dbg !9675
  %add108 = add nsw i32 %conv102, %shl107, !dbg !9676
  %63 = load i16, i16* %bias, align 2, !dbg !9677
  %conv109 = zext i16 %63 to i32, !dbg !9677
  %sub110 = sub nsw i32 %add108, %conv109, !dbg !9678
  %conv111 = trunc i32 %sub110 to i16, !dbg !9671
  %64 = load i16*, i16** %s.addr, align 8, !dbg !9679
  %arrayidx112 = getelementptr inbounds i16, i16* %64, i64 13, !dbg !9679
  store i16 %conv111, i16* %arrayidx112, align 2, !dbg !9680
  %65 = load i16*, i16** %s.addr, align 8, !dbg !9681
  %arrayidx113 = getelementptr inbounds i16, i16* %65, i64 1, !dbg !9681
  %66 = load i16, i16* %arrayidx113, align 2, !dbg !9681
  %conv114 = zext i16 %66 to i32, !dbg !9681
  %67 = load i8*, i8** %b.addr, align 8, !dbg !9682
  %arrayidx115 = getelementptr inbounds i8, i8* %67, i64 8, !dbg !9682
  %68 = load i8, i8* %arrayidx115, align 1, !dbg !9682
  %conv116 = zext i8 %68 to i32, !dbg !9682
  %shr117 = ashr i32 %conv116, 2, !dbg !9683
  %69 = load i16, i16* %shift, align 2, !dbg !9684
  %conv118 = zext i16 %69 to i32, !dbg !9684
  %shl119 = shl i32 %shr117, %conv118, !dbg !9685
  %add120 = add nsw i32 %conv114, %shl119, !dbg !9686
  %70 = load i16, i16* %bias, align 2, !dbg !9687
  %conv121 = zext i16 %70 to i32, !dbg !9687
  %sub122 = sub nsw i32 %add120, %conv121, !dbg !9688
  %conv123 = trunc i32 %sub122 to i16, !dbg !9681
  %71 = load i16*, i16** %s.addr, align 8, !dbg !9689
  %arrayidx124 = getelementptr inbounds i16, i16* %71, i64 2, !dbg !9689
  store i16 %conv123, i16* %arrayidx124, align 2, !dbg !9690
  %72 = load i16*, i16** %s.addr, align 8, !dbg !9691
  %arrayidx125 = getelementptr inbounds i16, i16* %72, i64 5, !dbg !9691
  %73 = load i16, i16* %arrayidx125, align 2, !dbg !9691
  %conv126 = zext i16 %73 to i32, !dbg !9691
  %74 = load i8*, i8** %b.addr, align 8, !dbg !9692
  %arrayidx127 = getelementptr inbounds i8, i8* %74, i64 8, !dbg !9692
  %75 = load i8, i8* %arrayidx127, align 1, !dbg !9692
  %conv128 = zext i8 %75 to i32, !dbg !9692
  %shl129 = shl i32 %conv128, 4, !dbg !9693
  %76 = load i8*, i8** %b.addr, align 8, !dbg !9694
  %arrayidx130 = getelementptr inbounds i8, i8* %76, i64 9, !dbg !9694
  %77 = load i8, i8* %arrayidx130, align 1, !dbg !9694
  %conv131 = zext i8 %77 to i32, !dbg !9694
  %shr132 = ashr i32 %conv131, 4, !dbg !9695
  %or133 = or i32 %shl129, %shr132, !dbg !9696
  %and134 = and i32 %or133, 63, !dbg !9697
  %78 = load i16, i16* %shift, align 2, !dbg !9698
  %conv135 = zext i16 %78 to i32, !dbg !9698
  %shl136 = shl i32 %and134, %conv135, !dbg !9699
  %add137 = add nsw i32 %conv126, %shl136, !dbg !9700
  %79 = load i16, i16* %bias, align 2, !dbg !9701
  %conv138 = zext i16 %79 to i32, !dbg !9701
  %sub139 = sub nsw i32 %add137, %conv138, !dbg !9702
  %conv140 = trunc i32 %sub139 to i16, !dbg !9691
  %80 = load i16*, i16** %s.addr, align 8, !dbg !9703
  %arrayidx141 = getelementptr inbounds i16, i16* %80, i64 6, !dbg !9703
  store i16 %conv140, i16* %arrayidx141, align 2, !dbg !9704
  %81 = load i16*, i16** %s.addr, align 8, !dbg !9705
  %arrayidx142 = getelementptr inbounds i16, i16* %81, i64 9, !dbg !9705
  %82 = load i16, i16* %arrayidx142, align 2, !dbg !9705
  %conv143 = zext i16 %82 to i32, !dbg !9705
  %83 = load i8*, i8** %b.addr, align 8, !dbg !9706
  %arrayidx144 = getelementptr inbounds i8, i8* %83, i64 9, !dbg !9706
  %84 = load i8, i8* %arrayidx144, align 1, !dbg !9706
  %conv145 = zext i8 %84 to i32, !dbg !9706
  %shl146 = shl i32 %conv145, 2, !dbg !9707
  %85 = load i8*, i8** %b.addr, align 8, !dbg !9708
  %arrayidx147 = getelementptr inbounds i8, i8* %85, i64 10, !dbg !9708
  %86 = load i8, i8* %arrayidx147, align 1, !dbg !9708
  %conv148 = zext i8 %86 to i32, !dbg !9708
  %shr149 = ashr i32 %conv148, 6, !dbg !9709
  %or150 = or i32 %shl146, %shr149, !dbg !9710
  %and151 = and i32 %or150, 63, !dbg !9711
  %87 = load i16, i16* %shift, align 2, !dbg !9712
  %conv152 = zext i16 %87 to i32, !dbg !9712
  %shl153 = shl i32 %and151, %conv152, !dbg !9713
  %add154 = add nsw i32 %conv143, %shl153, !dbg !9714
  %88 = load i16, i16* %bias, align 2, !dbg !9715
  %conv155 = zext i16 %88 to i32, !dbg !9715
  %sub156 = sub nsw i32 %add154, %conv155, !dbg !9716
  %conv157 = trunc i32 %sub156 to i16, !dbg !9705
  %89 = load i16*, i16** %s.addr, align 8, !dbg !9717
  %arrayidx158 = getelementptr inbounds i16, i16* %89, i64 10, !dbg !9717
  store i16 %conv157, i16* %arrayidx158, align 2, !dbg !9718
  %90 = load i16*, i16** %s.addr, align 8, !dbg !9719
  %arrayidx159 = getelementptr inbounds i16, i16* %90, i64 13, !dbg !9719
  %91 = load i16, i16* %arrayidx159, align 2, !dbg !9719
  %conv160 = zext i16 %91 to i32, !dbg !9719
  %92 = load i8*, i8** %b.addr, align 8, !dbg !9720
  %arrayidx161 = getelementptr inbounds i8, i8* %92, i64 10, !dbg !9720
  %93 = load i8, i8* %arrayidx161, align 1, !dbg !9720
  %conv162 = zext i8 %93 to i32, !dbg !9720
  %and163 = and i32 %conv162, 63, !dbg !9721
  %94 = load i16, i16* %shift, align 2, !dbg !9722
  %conv164 = zext i16 %94 to i32, !dbg !9722
  %shl165 = shl i32 %and163, %conv164, !dbg !9723
  %add166 = add nsw i32 %conv160, %shl165, !dbg !9724
  %95 = load i16, i16* %bias, align 2, !dbg !9725
  %conv167 = zext i16 %95 to i32, !dbg !9725
  %sub168 = sub nsw i32 %add166, %conv167, !dbg !9726
  %conv169 = trunc i32 %sub168 to i16, !dbg !9719
  %96 = load i16*, i16** %s.addr, align 8, !dbg !9727
  %arrayidx170 = getelementptr inbounds i16, i16* %96, i64 14, !dbg !9727
  store i16 %conv169, i16* %arrayidx170, align 2, !dbg !9728
  %97 = load i16*, i16** %s.addr, align 8, !dbg !9729
  %arrayidx171 = getelementptr inbounds i16, i16* %97, i64 2, !dbg !9729
  %98 = load i16, i16* %arrayidx171, align 2, !dbg !9729
  %conv172 = zext i16 %98 to i32, !dbg !9729
  %99 = load i8*, i8** %b.addr, align 8, !dbg !9730
  %arrayidx173 = getelementptr inbounds i8, i8* %99, i64 11, !dbg !9730
  %100 = load i8, i8* %arrayidx173, align 1, !dbg !9730
  %conv174 = zext i8 %100 to i32, !dbg !9730
  %shr175 = ashr i32 %conv174, 2, !dbg !9731
  %101 = load i16, i16* %shift, align 2, !dbg !9732
  %conv176 = zext i16 %101 to i32, !dbg !9732
  %shl177 = shl i32 %shr175, %conv176, !dbg !9733
  %add178 = add nsw i32 %conv172, %shl177, !dbg !9734
  %102 = load i16, i16* %bias, align 2, !dbg !9735
  %conv179 = zext i16 %102 to i32, !dbg !9735
  %sub180 = sub nsw i32 %add178, %conv179, !dbg !9736
  %conv181 = trunc i32 %sub180 to i16, !dbg !9729
  %103 = load i16*, i16** %s.addr, align 8, !dbg !9737
  %arrayidx182 = getelementptr inbounds i16, i16* %103, i64 3, !dbg !9737
  store i16 %conv181, i16* %arrayidx182, align 2, !dbg !9738
  %104 = load i16*, i16** %s.addr, align 8, !dbg !9739
  %arrayidx183 = getelementptr inbounds i16, i16* %104, i64 6, !dbg !9739
  %105 = load i16, i16* %arrayidx183, align 2, !dbg !9739
  %conv184 = zext i16 %105 to i32, !dbg !9739
  %106 = load i8*, i8** %b.addr, align 8, !dbg !9740
  %arrayidx185 = getelementptr inbounds i8, i8* %106, i64 11, !dbg !9740
  %107 = load i8, i8* %arrayidx185, align 1, !dbg !9740
  %conv186 = zext i8 %107 to i32, !dbg !9740
  %shl187 = shl i32 %conv186, 4, !dbg !9741
  %108 = load i8*, i8** %b.addr, align 8, !dbg !9742
  %arrayidx188 = getelementptr inbounds i8, i8* %108, i64 12, !dbg !9742
  %109 = load i8, i8* %arrayidx188, align 1, !dbg !9742
  %conv189 = zext i8 %109 to i32, !dbg !9742
  %shr190 = ashr i32 %conv189, 4, !dbg !9743
  %or191 = or i32 %shl187, %shr190, !dbg !9744
  %and192 = and i32 %or191, 63, !dbg !9745
  %110 = load i16, i16* %shift, align 2, !dbg !9746
  %conv193 = zext i16 %110 to i32, !dbg !9746
  %shl194 = shl i32 %and192, %conv193, !dbg !9747
  %add195 = add nsw i32 %conv184, %shl194, !dbg !9748
  %111 = load i16, i16* %bias, align 2, !dbg !9749
  %conv196 = zext i16 %111 to i32, !dbg !9749
  %sub197 = sub nsw i32 %add195, %conv196, !dbg !9750
  %conv198 = trunc i32 %sub197 to i16, !dbg !9739
  %112 = load i16*, i16** %s.addr, align 8, !dbg !9751
  %arrayidx199 = getelementptr inbounds i16, i16* %112, i64 7, !dbg !9751
  store i16 %conv198, i16* %arrayidx199, align 2, !dbg !9752
  %113 = load i16*, i16** %s.addr, align 8, !dbg !9753
  %arrayidx200 = getelementptr inbounds i16, i16* %113, i64 10, !dbg !9753
  %114 = load i16, i16* %arrayidx200, align 2, !dbg !9753
  %conv201 = zext i16 %114 to i32, !dbg !9753
  %115 = load i8*, i8** %b.addr, align 8, !dbg !9754
  %arrayidx202 = getelementptr inbounds i8, i8* %115, i64 12, !dbg !9754
  %116 = load i8, i8* %arrayidx202, align 1, !dbg !9754
  %conv203 = zext i8 %116 to i32, !dbg !9754
  %shl204 = shl i32 %conv203, 2, !dbg !9755
  %117 = load i8*, i8** %b.addr, align 8, !dbg !9756
  %arrayidx205 = getelementptr inbounds i8, i8* %117, i64 13, !dbg !9756
  %118 = load i8, i8* %arrayidx205, align 1, !dbg !9756
  %conv206 = zext i8 %118 to i32, !dbg !9756
  %shr207 = ashr i32 %conv206, 6, !dbg !9757
  %or208 = or i32 %shl204, %shr207, !dbg !9758
  %and209 = and i32 %or208, 63, !dbg !9759
  %119 = load i16, i16* %shift, align 2, !dbg !9760
  %conv210 = zext i16 %119 to i32, !dbg !9760
  %shl211 = shl i32 %and209, %conv210, !dbg !9761
  %add212 = add nsw i32 %conv201, %shl211, !dbg !9762
  %120 = load i16, i16* %bias, align 2, !dbg !9763
  %conv213 = zext i16 %120 to i32, !dbg !9763
  %sub214 = sub nsw i32 %add212, %conv213, !dbg !9764
  %conv215 = trunc i32 %sub214 to i16, !dbg !9753
  %121 = load i16*, i16** %s.addr, align 8, !dbg !9765
  %arrayidx216 = getelementptr inbounds i16, i16* %121, i64 11, !dbg !9765
  store i16 %conv215, i16* %arrayidx216, align 2, !dbg !9766
  %122 = load i16*, i16** %s.addr, align 8, !dbg !9767
  %arrayidx217 = getelementptr inbounds i16, i16* %122, i64 14, !dbg !9767
  %123 = load i16, i16* %arrayidx217, align 2, !dbg !9767
  %conv218 = zext i16 %123 to i32, !dbg !9767
  %124 = load i8*, i8** %b.addr, align 8, !dbg !9768
  %arrayidx219 = getelementptr inbounds i8, i8* %124, i64 13, !dbg !9768
  %125 = load i8, i8* %arrayidx219, align 1, !dbg !9768
  %conv220 = zext i8 %125 to i32, !dbg !9768
  %and221 = and i32 %conv220, 63, !dbg !9769
  %126 = load i16, i16* %shift, align 2, !dbg !9770
  %conv222 = zext i16 %126 to i32, !dbg !9770
  %shl223 = shl i32 %and221, %conv222, !dbg !9771
  %add224 = add nsw i32 %conv218, %shl223, !dbg !9772
  %127 = load i16, i16* %bias, align 2, !dbg !9773
  %conv225 = zext i16 %127 to i32, !dbg !9773
  %sub226 = sub nsw i32 %add224, %conv225, !dbg !9774
  %conv227 = trunc i32 %sub226 to i16, !dbg !9767
  %128 = load i16*, i16** %s.addr, align 8, !dbg !9775
  %arrayidx228 = getelementptr inbounds i16, i16* %128, i64 15, !dbg !9775
  store i16 %conv227, i16* %arrayidx228, align 2, !dbg !9776
  store i32 0, i32* %i, align 4, !dbg !9777
  br label %for.cond, !dbg !9779

for.cond:                                         ; preds = %for.inc, %entry
  %129 = load i32, i32* %i, align 4, !dbg !9780
  %cmp = icmp slt i32 %129, 16, !dbg !9783
  br i1 %cmp, label %for.body, label %for.end, !dbg !9784

for.body:                                         ; preds = %for.cond
  %130 = load i32, i32* %i, align 4, !dbg !9785
  %idxprom = sext i32 %130 to i64, !dbg !9788
  %131 = load i16*, i16** %s.addr, align 8, !dbg !9788
  %arrayidx230 = getelementptr inbounds i16, i16* %131, i64 %idxprom, !dbg !9788
  %132 = load i16, i16* %arrayidx230, align 2, !dbg !9788
  %conv231 = zext i16 %132 to i32, !dbg !9788
  %and232 = and i32 %conv231, 32768, !dbg !9789
  %tobool = icmp ne i32 %and232, 0, !dbg !9789
  br i1 %tobool, label %if.then, label %if.else, !dbg !9790

if.then:                                          ; preds = %for.body
  %133 = load i32, i32* %i, align 4, !dbg !9791
  %idxprom233 = sext i32 %133 to i64, !dbg !9792
  %134 = load i16*, i16** %s.addr, align 8, !dbg !9792
  %arrayidx234 = getelementptr inbounds i16, i16* %134, i64 %idxprom233, !dbg !9792
  %135 = load i16, i16* %arrayidx234, align 2, !dbg !9793
  %conv235 = zext i16 %135 to i32, !dbg !9793
  %and236 = and i32 %conv235, 32767, !dbg !9793
  %conv237 = trunc i32 %and236 to i16, !dbg !9793
  store i16 %conv237, i16* %arrayidx234, align 2, !dbg !9793
  br label %if.end, !dbg !9792

if.else:                                          ; preds = %for.body
  %136 = load i32, i32* %i, align 4, !dbg !9794
  %idxprom238 = sext i32 %136 to i64, !dbg !9795
  %137 = load i16*, i16** %s.addr, align 8, !dbg !9795
  %arrayidx239 = getelementptr inbounds i16, i16* %137, i64 %idxprom238, !dbg !9795
  %138 = load i16, i16* %arrayidx239, align 2, !dbg !9795
  %conv240 = zext i16 %138 to i32, !dbg !9795
  %neg = xor i32 %conv240, -1, !dbg !9796
  %conv241 = trunc i32 %neg to i16, !dbg !9796
  %139 = load i32, i32* %i, align 4, !dbg !9797
  %idxprom242 = sext i32 %139 to i64, !dbg !9798
  %140 = load i16*, i16** %s.addr, align 8, !dbg !9798
  %arrayidx243 = getelementptr inbounds i16, i16* %140, i64 %idxprom242, !dbg !9798
  store i16 %conv241, i16* %arrayidx243, align 2, !dbg !9799
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9800

for.inc:                                          ; preds = %if.end
  %141 = load i32, i32* %i, align 4, !dbg !9801
  %inc = add nsw i32 %141, 1, !dbg !9801
  store i32 %inc, i32* %i, align 4, !dbg !9801
  br label %for.cond, !dbg !9803, !llvm.loop !9804

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9806
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1735, !1736}
!llvm.ident = !{!1737}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !940, globals: !974)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--exr.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !923, !929, !935}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ExrCompr", file: !910, line: 60, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/exr.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!911 = !{!912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922}
!912 = !DIEnumerator(name: "EXR_RAW", value: 0)
!913 = !DIEnumerator(name: "EXR_RLE", value: 1)
!914 = !DIEnumerator(name: "EXR_ZIP1", value: 2)
!915 = !DIEnumerator(name: "EXR_ZIP16", value: 3)
!916 = !DIEnumerator(name: "EXR_PIZ", value: 4)
!917 = !DIEnumerator(name: "EXR_PXR24", value: 5)
!918 = !DIEnumerator(name: "EXR_B44", value: 6)
!919 = !DIEnumerator(name: "EXR_B44A", value: 7)
!920 = !DIEnumerator(name: "EXR_DWA", value: 8)
!921 = !DIEnumerator(name: "EXR_DWB", value: 9)
!922 = !DIEnumerator(name: "EXR_UNKN", value: 10)
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ExrPixelType", file: !910, line: 74, size: 32, align: 32, elements: !924)
!924 = !{!925, !926, !927, !928}
!925 = !DIEnumerator(name: "EXR_UINT", value: 0)
!926 = !DIEnumerator(name: "EXR_HALF", value: 1)
!927 = !DIEnumerator(name: "EXR_FLOAT", value: 2)
!928 = !DIEnumerator(name: "EXR_UNKNOWN", value: 3)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ExrTileLevelMode", file: !910, line: 81, size: 32, align: 32, elements: !930)
!930 = !{!931, !932, !933, !934}
!931 = !DIEnumerator(name: "EXR_TILE_LEVEL_ONE", value: 0)
!932 = !DIEnumerator(name: "EXR_TILE_LEVEL_MIPMAP", value: 1)
!933 = !DIEnumerator(name: "EXR_TILE_LEVEL_RIPMAP", value: 2)
!934 = !DIEnumerator(name: "EXR_TILE_LEVEL_UNKNOWN", value: 3)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ExrTileLevelRound", file: !910, line: 88, size: 32, align: 32, elements: !936)
!936 = !{!937, !938, !939}
!937 = !DIEnumerator(name: "EXR_TILE_ROUND_UP", value: 0)
!938 = !DIEnumerator(name: "EXR_TILE_ROUND_DOWN", value: 1)
!939 = !DIEnumerator(name: "EXR_TILE_ROUND_UNKNOWN", value: 2)
!940 = !{!941, !942, !943, !944, !949, !957, !958, !955, !964, !946, !967, !968, !972}
!941 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!942 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !947, line: 48, baseType: !948)
!947 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!948 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!951 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !952, line: 220, size: 64, align: 8, elements: !953)
!952 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!953 = !{!954}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !951, file: !952, line: 220, baseType: !955, size: 64, align: 64)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !947, line: 55, baseType: !956)
!956 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64, align: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !952, line: 221, size: 32, align: 8, elements: !961)
!961 = !{!962}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !960, file: !952, line: 221, baseType: !963, size: 32, align: 32)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !947, line: 51, baseType: !942)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !947, line: 49, baseType: !966)
!966 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !952, line: 222, size: 16, align: 8, elements: !970)
!970 = !{!971}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !969, file: !952, line: 222, baseType: !965, size: 16, align: 16)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!974 = !{!975, !1728, !1729}
!975 = distinct !DIGlobalVariable(name: "ff_exr_decoder", scope: !0, file: !910, line: 1947, type: !976, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_exr_decoder)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !978)
!978 = !{!979, !983, !984, !985, !986, !987, !996, !999, !1002, !1005, !1008, !1009, !1085, !1093, !1094, !1095, !1097, !1643, !1649, !1657, !1661, !1662, !1699, !1703, !1707, !1708, !1712, !1716, !1717, !1721, !1722, !1723}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !977, file: !14, line: 3475, baseType: !980, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !977, file: !14, line: 3480, baseType: !980, size: 64, align: 64, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !977, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !977, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !977, file: !14, line: 3487, baseType: !941, size: 32, align: 32, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !977, file: !14, line: 3488, baseType: !988, size: 64, align: 64, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !991, line: 61, baseType: !992)
!991 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !991, line: 58, size: 64, align: 32, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !992, file: !991, line: 59, baseType: !941, size: 32, align: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !992, file: !991, line: 60, baseType: !941, size: 32, align: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !977, file: !14, line: 3489, baseType: !997, size: 64, align: 64, offset: 320)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !977, file: !14, line: 3490, baseType: !1000, size: 64, align: 64, offset: 384)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64, align: 64)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !977, file: !14, line: 3491, baseType: !1003, size: 64, align: 64, offset: 448)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !977, file: !14, line: 3492, baseType: !1006, size: 64, align: 64, offset: 512)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !977, file: !14, line: 3493, baseType: !946, size: 8, align: 8, offset: 576)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !977, file: !14, line: 3494, baseType: !1010, size: 64, align: 64, offset: 640)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1014)
!1014 = !{!1015, !1016, !1020, !1044, !1045, !1046, !1047, !1051, !1057, !1059, !1063}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1013, file: !713, line: 72, baseType: !980, size: 64, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1013, file: !713, line: 78, baseType: !1017, size: 64, align: 64, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!980, !943}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1013, file: !713, line: 85, baseType: !1021, size: 64, align: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1040, !1041, !1042, !1043}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !691, line: 247, baseType: !980, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1023, file: !691, line: 253, baseType: !980, size: 64, align: 64, offset: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1023, file: !691, line: 259, baseType: !941, size: 32, align: 32, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1023, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1023, file: !691, line: 271, baseType: !1030, size: 64, align: 64, offset: 192)
!1030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1023, file: !691, line: 265, size: 64, align: 64, elements: !1031)
!1031 = !{!1032, !1036, !1038, !1039}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1030, file: !691, line: 266, baseType: !1033, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1034, line: 197, baseType: !1035)
!1034 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1035 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1030, file: !691, line: 267, baseType: !1037, size: 64, align: 64)
!1037 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1030, file: !691, line: 268, baseType: !980, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1030, file: !691, line: 270, baseType: !990, size: 64, align: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1023, file: !691, line: 272, baseType: !1037, size: 64, align: 64, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1023, file: !691, line: 273, baseType: !1037, size: 64, align: 64, offset: 320)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1023, file: !691, line: 275, baseType: !941, size: 32, align: 32, offset: 384)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1023, file: !691, line: 300, baseType: !980, size: 64, align: 64, offset: 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1013, file: !713, line: 93, baseType: !941, size: 32, align: 32, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1013, file: !713, line: 99, baseType: !941, size: 32, align: 32, offset: 224)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1013, file: !713, line: 108, baseType: !941, size: 32, align: 32, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1013, file: !713, line: 113, baseType: !1048, size: 64, align: 64, offset: 320)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!943, !943, !943}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1013, file: !713, line: 123, baseType: !1052, size: 64, align: 64, offset: 384)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!1055, !1055}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1013, file: !713, line: 130, baseType: !1058, size: 32, align: 32, offset: 448)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1013, file: !713, line: 136, baseType: !1060, size: 64, align: 64, offset: 512)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!1058, !943}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1013, file: !713, line: 142, baseType: !1064, size: 64, align: 64, offset: 576)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!941, !1067, !943, !980, !941}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64, align: 64)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1070)
!1070 = !{!1071, !1083, !1084}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1069, file: !691, line: 360, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1075, file: !691, line: 307, baseType: !980, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1075, file: !691, line: 313, baseType: !1037, size: 64, align: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1075, file: !691, line: 313, baseType: !1037, size: 64, align: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1075, file: !691, line: 318, baseType: !1037, size: 64, align: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1075, file: !691, line: 318, baseType: !1037, size: 64, align: 64, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1075, file: !691, line: 323, baseType: !941, size: 32, align: 32, offset: 320)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1069, file: !691, line: 364, baseType: !941, size: 32, align: 32, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1069, file: !691, line: 368, baseType: !941, size: 32, align: 32, offset: 96)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !977, file: !14, line: 3495, baseType: !1086, size: 64, align: 64, offset: 704)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1089, file: !14, line: 3402, baseType: !941, size: 32, align: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1089, file: !14, line: 3403, baseType: !980, size: 64, align: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !977, file: !14, line: 3507, baseType: !980, size: 64, align: 64, offset: 768)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !977, file: !14, line: 3516, baseType: !941, size: 32, align: 32, offset: 832)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !977, file: !14, line: 3517, baseType: !1096, size: 64, align: 64, offset: 896)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !977, file: !14, line: 3527, baseType: !1098, size: 64, align: 64, offset: 960)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64, align: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!941, !1101}
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1103)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1111, !1112, !1113, !1114, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1394, !1398, !1399, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1581, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1103, file: !14, line: 1561, baseType: !1010, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1103, file: !14, line: 1562, baseType: !941, size: 32, align: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1103, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1103, file: !14, line: 1565, baseType: !1109, size: 64, align: 64, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1103, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1103, file: !14, line: 1581, baseType: !942, size: 32, align: 32, offset: 224)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1103, file: !14, line: 1583, baseType: !943, size: 64, align: 64, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1103, file: !14, line: 1591, baseType: !1115, size: 64, align: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1117, line: 129, size: 1664, align: 64, elements: !1118)
!1117 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1118 = !{!1119, !1120, !1121, !1122, !1220, !1241, !1242, !1271, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1116, file: !1117, line: 136, baseType: !941, size: 32, align: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1116, file: !1117, line: 151, baseType: !941, size: 32, align: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1116, file: !1117, line: 157, baseType: !941, size: 32, align: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1116, file: !1117, line: 159, baseType: !1123, size: 64, align: 64, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1125)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1126)
!1126 = !{!1127, !1132, !1134, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1172, !1174, !1175, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1208, !1209, !1210, !1211, !1212, !1213, !1216, !1217, !1218, !1219}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1125, file: !744, line: 282, baseType: !1128, size: 512, align: 64)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 512, align: 64, elements: !1130)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!1130 = !{!1131}
!1131 = !DISubrange(count: 8)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1125, file: !744, line: 299, baseType: !1133, size: 256, align: 32, offset: 512)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 256, align: 32, elements: !1130)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1125, file: !744, line: 315, baseType: !1135, size: 64, align: 64, offset: 768)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1125, file: !744, line: 326, baseType: !941, size: 32, align: 32, offset: 832)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1125, file: !744, line: 326, baseType: !941, size: 32, align: 32, offset: 864)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1125, file: !744, line: 334, baseType: !941, size: 32, align: 32, offset: 896)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1125, file: !744, line: 341, baseType: !941, size: 32, align: 32, offset: 928)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1125, file: !744, line: 346, baseType: !941, size: 32, align: 32, offset: 960)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1125, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1125, file: !744, line: 356, baseType: !990, size: 64, align: 32, offset: 1024)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1125, file: !744, line: 361, baseType: !1033, size: 64, align: 64, offset: 1088)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1125, file: !744, line: 369, baseType: !1033, size: 64, align: 64, offset: 1152)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1125, file: !744, line: 377, baseType: !1033, size: 64, align: 64, offset: 1216)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1125, file: !744, line: 382, baseType: !941, size: 32, align: 32, offset: 1280)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1125, file: !744, line: 386, baseType: !941, size: 32, align: 32, offset: 1312)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1125, file: !744, line: 391, baseType: !941, size: 32, align: 32, offset: 1344)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1125, file: !744, line: 396, baseType: !943, size: 64, align: 64, offset: 1408)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1125, file: !744, line: 403, baseType: !1151, size: 512, align: 64, offset: 1472)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 512, align: 64, elements: !1130)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1125, file: !744, line: 410, baseType: !941, size: 32, align: 32, offset: 1984)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1125, file: !744, line: 415, baseType: !941, size: 32, align: 32, offset: 2016)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1125, file: !744, line: 420, baseType: !941, size: 32, align: 32, offset: 2048)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1125, file: !744, line: 425, baseType: !941, size: 32, align: 32, offset: 2080)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1125, file: !744, line: 435, baseType: !1033, size: 64, align: 64, offset: 2112)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1125, file: !744, line: 440, baseType: !941, size: 32, align: 32, offset: 2176)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1125, file: !744, line: 445, baseType: !955, size: 64, align: 64, offset: 2240)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1125, file: !744, line: 459, baseType: !1160, size: 512, align: 64, offset: 2304)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 512, align: 64, elements: !1130)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1163, line: 94, baseType: !1164)
!1163 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1163, line: 81, size: 192, align: 64, elements: !1165)
!1165 = !{!1166, !1170, !1171}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1164, file: !1163, line: 82, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1163, line: 73, baseType: !1169)
!1169 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1163, line: 73, flags: DIFlagFwdDecl)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1164, file: !1163, line: 89, baseType: !1129, size: 64, align: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1164, file: !1163, line: 93, baseType: !941, size: 32, align: 32, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1125, file: !744, line: 473, baseType: !1173, size: 64, align: 64, offset: 2816)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1125, file: !744, line: 477, baseType: !941, size: 32, align: 32, offset: 2880)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1125, file: !744, line: 479, baseType: !1176, size: 64, align: 64, offset: 2944)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1189}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1179, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1179, file: !744, line: 203, baseType: !1129, size: 64, align: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1179, file: !744, line: 204, baseType: !941, size: 32, align: 32, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1179, file: !744, line: 205, baseType: !1185, size: 64, align: 64, offset: 192)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1187, line: 86, baseType: !1188)
!1187 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1188 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1187, line: 86, flags: DIFlagFwdDecl)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1179, file: !744, line: 206, baseType: !1161, size: 64, align: 64, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1125, file: !744, line: 480, baseType: !941, size: 32, align: 32, offset: 3008)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1125, file: !744, line: 505, baseType: !941, size: 32, align: 32, offset: 3040)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1125, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1125, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1125, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1125, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1125, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1125, file: !744, line: 532, baseType: !1033, size: 64, align: 64, offset: 3264)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1125, file: !744, line: 539, baseType: !1033, size: 64, align: 64, offset: 3328)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1125, file: !744, line: 547, baseType: !1033, size: 64, align: 64, offset: 3392)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1125, file: !744, line: 554, baseType: !1185, size: 64, align: 64, offset: 3456)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1125, file: !744, line: 563, baseType: !941, size: 32, align: 32, offset: 3520)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1125, file: !744, line: 572, baseType: !941, size: 32, align: 32, offset: 3552)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1125, file: !744, line: 581, baseType: !941, size: 32, align: 32, offset: 3584)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1125, file: !744, line: 588, baseType: !1205, size: 64, align: 64, offset: 3648)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1034, line: 194, baseType: !1207)
!1207 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1125, file: !744, line: 593, baseType: !941, size: 32, align: 32, offset: 3712)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1125, file: !744, line: 596, baseType: !941, size: 32, align: 32, offset: 3744)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1125, file: !744, line: 599, baseType: !1161, size: 64, align: 64, offset: 3776)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1125, file: !744, line: 605, baseType: !1161, size: 64, align: 64, offset: 3840)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1125, file: !744, line: 616, baseType: !1161, size: 64, align: 64, offset: 3904)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1125, file: !744, line: 626, baseType: !1214, size: 64, align: 64, offset: 3968)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1215, line: 216, baseType: !956)
!1215 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1125, file: !744, line: 627, baseType: !1214, size: 64, align: 64, offset: 4032)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1125, file: !744, line: 628, baseType: !1214, size: 64, align: 64, offset: 4096)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1125, file: !744, line: 629, baseType: !1214, size: 64, align: 64, offset: 4160)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1125, file: !744, line: 645, baseType: !1161, size: 64, align: 64, offset: 4224)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1116, file: !1117, line: 161, baseType: !1221, size: 64, align: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1117, line: 117, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1117, line: 100, size: 832, align: 64, elements: !1224)
!1224 = !{!1225, !1232, !1233, !1234, !1235, !1236, !1238, !1239, !1240}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1223, file: !1117, line: 105, baseType: !1226, size: 256, align: 64)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 256, align: 64, elements: !1230)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1163, line: 238, baseType: !1229)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1163, line: 238, flags: DIFlagFwdDecl)
!1230 = !{!1231}
!1231 = !DISubrange(count: 4)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1223, file: !1117, line: 110, baseType: !941, size: 32, align: 32, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1223, file: !1117, line: 111, baseType: !941, size: 32, align: 32, offset: 288)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1223, file: !1117, line: 111, baseType: !941, size: 32, align: 32, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1223, file: !1117, line: 112, baseType: !1133, size: 256, align: 32, offset: 352)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1223, file: !1117, line: 113, baseType: !1237, size: 128, align: 32, offset: 608)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 128, align: 32, elements: !1230)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1223, file: !1117, line: 114, baseType: !941, size: 32, align: 32, offset: 736)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1223, file: !1117, line: 115, baseType: !941, size: 32, align: 32, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1223, file: !1117, line: 116, baseType: !941, size: 32, align: 32, offset: 800)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1116, file: !1117, line: 163, baseType: !943, size: 64, align: 64, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1116, file: !1117, line: 165, baseType: !1243, size: 128, align: 64, offset: 320)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1117, line: 122, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1117, line: 119, size: 128, align: 64, elements: !1245)
!1245 = !{!1246, !1270}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1244, file: !1117, line: 120, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1266, !1267, !1268, !1269}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !14, line: 1451, baseType: !1161, size: 64, align: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1249, file: !14, line: 1461, baseType: !1033, size: 64, align: 64, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1249, file: !14, line: 1467, baseType: !1033, size: 64, align: 64, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1249, file: !14, line: 1468, baseType: !1129, size: 64, align: 64, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1249, file: !14, line: 1469, baseType: !941, size: 32, align: 32, offset: 256)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1249, file: !14, line: 1470, baseType: !941, size: 32, align: 32, offset: 288)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !14, line: 1474, baseType: !941, size: 32, align: 32, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1249, file: !14, line: 1479, baseType: !1259, size: 64, align: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1262)
!1262 = !{!1263, !1264, !1265}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1261, file: !14, line: 1412, baseType: !1129, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1261, file: !14, line: 1413, baseType: !941, size: 32, align: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1261, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1249, file: !14, line: 1480, baseType: !941, size: 32, align: 32, offset: 448)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1249, file: !14, line: 1486, baseType: !1033, size: 64, align: 64, offset: 512)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1249, file: !14, line: 1488, baseType: !1033, size: 64, align: 64, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1249, file: !14, line: 1497, baseType: !1033, size: 64, align: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1244, file: !1117, line: 121, baseType: !1123, size: 64, align: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1116, file: !1117, line: 166, baseType: !1272, size: 128, align: 64, offset: 448)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1117, line: 127, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1117, line: 124, size: 128, align: 64, elements: !1274)
!1274 = !{!1275, !1348}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1273, file: !1117, line: 125, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64, align: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1280)
!1280 = !{!1281, !1282, !1306, !1310, !1311, !1345, !1346, !1347}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1279, file: !14, line: 5751, baseType: !1010, size: 64, align: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1279, file: !14, line: 5756, baseType: !1283, size: 64, align: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64, align: 64)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1286)
!1286 = !{!1287, !1288, !1291, !1292, !1293, !1297, !1301, !1305}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1285, file: !14, line: 5797, baseType: !980, size: 64, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1285, file: !14, line: 5804, baseType: !1289, size: 64, align: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1285, file: !14, line: 5815, baseType: !1010, size: 64, align: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1285, file: !14, line: 5825, baseType: !941, size: 32, align: 32, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1285, file: !14, line: 5826, baseType: !1294, size: 64, align: 64, offset: 256)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64, align: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!941, !1277}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1285, file: !14, line: 5827, baseType: !1298, size: 64, align: 64, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!941, !1277, !1247}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1285, file: !14, line: 5828, baseType: !1302, size: 64, align: 64, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64, align: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{null, !1277}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1285, file: !14, line: 5829, baseType: !1302, size: 64, align: 64, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1279, file: !14, line: 5762, baseType: !1307, size: 64, align: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1309)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1279, file: !14, line: 5768, baseType: !943, size: 64, align: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1279, file: !14, line: 5775, baseType: !1312, size: 64, align: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1314, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1314, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1314, file: !14, line: 3948, baseType: !963, size: 32, align: 32, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1314, file: !14, line: 3958, baseType: !1129, size: 64, align: 64, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1314, file: !14, line: 3962, baseType: !941, size: 32, align: 32, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1314, file: !14, line: 3968, baseType: !941, size: 32, align: 32, offset: 224)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1314, file: !14, line: 3973, baseType: !1033, size: 64, align: 64, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1314, file: !14, line: 3986, baseType: !941, size: 32, align: 32, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1314, file: !14, line: 3999, baseType: !941, size: 32, align: 32, offset: 352)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1314, file: !14, line: 4004, baseType: !941, size: 32, align: 32, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1314, file: !14, line: 4005, baseType: !941, size: 32, align: 32, offset: 416)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1314, file: !14, line: 4010, baseType: !941, size: 32, align: 32, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1314, file: !14, line: 4011, baseType: !941, size: 32, align: 32, offset: 480)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1314, file: !14, line: 4020, baseType: !990, size: 64, align: 32, offset: 512)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1314, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1314, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1314, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1314, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1314, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1314, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1314, file: !14, line: 4039, baseType: !941, size: 32, align: 32, offset: 768)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1314, file: !14, line: 4046, baseType: !955, size: 64, align: 64, offset: 832)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1314, file: !14, line: 4050, baseType: !941, size: 32, align: 32, offset: 896)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1314, file: !14, line: 4054, baseType: !941, size: 32, align: 32, offset: 928)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1314, file: !14, line: 4061, baseType: !941, size: 32, align: 32, offset: 960)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1314, file: !14, line: 4065, baseType: !941, size: 32, align: 32, offset: 992)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1314, file: !14, line: 4073, baseType: !941, size: 32, align: 32, offset: 1024)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1314, file: !14, line: 4080, baseType: !941, size: 32, align: 32, offset: 1056)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1314, file: !14, line: 4084, baseType: !941, size: 32, align: 32, offset: 1088)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1279, file: !14, line: 5781, baseType: !1312, size: 64, align: 64, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1279, file: !14, line: 5787, baseType: !990, size: 64, align: 32, offset: 384)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1279, file: !14, line: 5793, baseType: !990, size: 64, align: 32, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1273, file: !1117, line: 126, baseType: !941, size: 32, align: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1116, file: !1117, line: 172, baseType: !1247, size: 64, align: 64, offset: 576)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1116, file: !1117, line: 177, baseType: !1129, size: 64, align: 64, offset: 640)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1116, file: !1117, line: 178, baseType: !942, size: 32, align: 32, offset: 704)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1116, file: !1117, line: 180, baseType: !943, size: 64, align: 64, offset: 768)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1116, file: !1117, line: 185, baseType: !941, size: 32, align: 32, offset: 832)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1116, file: !1117, line: 190, baseType: !943, size: 64, align: 64, offset: 896)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1116, file: !1117, line: 195, baseType: !941, size: 32, align: 32, offset: 960)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1116, file: !1117, line: 200, baseType: !1247, size: 64, align: 64, offset: 1024)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1116, file: !1117, line: 201, baseType: !941, size: 32, align: 32, offset: 1088)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1116, file: !1117, line: 202, baseType: !1123, size: 64, align: 64, offset: 1152)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1116, file: !1117, line: 203, baseType: !941, size: 32, align: 32, offset: 1216)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1116, file: !1117, line: 205, baseType: !941, size: 32, align: 32, offset: 1248)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1116, file: !1117, line: 206, baseType: !941, size: 32, align: 32, offset: 1280)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1116, file: !1117, line: 209, baseType: !1214, size: 64, align: 64, offset: 1344)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1116, file: !1117, line: 212, baseType: !1214, size: 64, align: 64, offset: 1408)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1116, file: !1117, line: 213, baseType: !1123, size: 64, align: 64, offset: 1472)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1116, file: !1117, line: 215, baseType: !941, size: 32, align: 32, offset: 1536)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1116, file: !1117, line: 217, baseType: !941, size: 32, align: 32, offset: 1568)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1116, file: !1117, line: 220, baseType: !941, size: 32, align: 32, offset: 1600)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1103, file: !14, line: 1598, baseType: !943, size: 64, align: 64, offset: 384)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1103, file: !14, line: 1606, baseType: !1033, size: 64, align: 64, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1103, file: !14, line: 1614, baseType: !941, size: 32, align: 32, offset: 512)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1103, file: !14, line: 1622, baseType: !941, size: 32, align: 32, offset: 544)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1103, file: !14, line: 1628, baseType: !941, size: 32, align: 32, offset: 576)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1103, file: !14, line: 1636, baseType: !941, size: 32, align: 32, offset: 608)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1103, file: !14, line: 1643, baseType: !941, size: 32, align: 32, offset: 640)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1103, file: !14, line: 1657, baseType: !1129, size: 64, align: 64, offset: 704)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1103, file: !14, line: 1658, baseType: !941, size: 32, align: 32, offset: 768)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1103, file: !14, line: 1679, baseType: !990, size: 64, align: 32, offset: 800)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1103, file: !14, line: 1688, baseType: !941, size: 32, align: 32, offset: 864)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1103, file: !14, line: 1712, baseType: !941, size: 32, align: 32, offset: 896)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1103, file: !14, line: 1729, baseType: !941, size: 32, align: 32, offset: 928)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1103, file: !14, line: 1729, baseType: !941, size: 32, align: 32, offset: 960)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1103, file: !14, line: 1744, baseType: !941, size: 32, align: 32, offset: 992)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1103, file: !14, line: 1744, baseType: !941, size: 32, align: 32, offset: 1024)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1103, file: !14, line: 1751, baseType: !941, size: 32, align: 32, offset: 1056)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1103, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1103, file: !14, line: 1791, baseType: !1387, size: 64, align: 64, offset: 1152)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64, align: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{null, !1390, !1391, !1393, !941, !941, !941}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1103, file: !14, line: 1808, baseType: !1395, size: 64, align: 64, offset: 1216)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64, align: 64)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!473, !1390, !997}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1103, file: !14, line: 1816, baseType: !941, size: 32, align: 32, offset: 1280)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1103, file: !14, line: 1825, baseType: !1400, size: 32, align: 32, offset: 1312)
!1400 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1103, file: !14, line: 1830, baseType: !941, size: 32, align: 32, offset: 1344)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1103, file: !14, line: 1838, baseType: !1400, size: 32, align: 32, offset: 1376)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1103, file: !14, line: 1846, baseType: !941, size: 32, align: 32, offset: 1408)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1103, file: !14, line: 1851, baseType: !941, size: 32, align: 32, offset: 1440)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1103, file: !14, line: 1861, baseType: !1400, size: 32, align: 32, offset: 1472)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1103, file: !14, line: 1868, baseType: !1400, size: 32, align: 32, offset: 1504)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1103, file: !14, line: 1875, baseType: !1400, size: 32, align: 32, offset: 1536)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1103, file: !14, line: 1882, baseType: !1400, size: 32, align: 32, offset: 1568)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1103, file: !14, line: 1889, baseType: !1400, size: 32, align: 32, offset: 1600)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1103, file: !14, line: 1896, baseType: !1400, size: 32, align: 32, offset: 1632)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1103, file: !14, line: 1903, baseType: !1400, size: 32, align: 32, offset: 1664)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1103, file: !14, line: 1910, baseType: !941, size: 32, align: 32, offset: 1696)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1103, file: !14, line: 1915, baseType: !941, size: 32, align: 32, offset: 1728)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1103, file: !14, line: 1926, baseType: !1393, size: 64, align: 64, offset: 1792)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1103, file: !14, line: 1935, baseType: !990, size: 64, align: 32, offset: 1856)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1103, file: !14, line: 1942, baseType: !941, size: 32, align: 32, offset: 1920)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1103, file: !14, line: 1948, baseType: !941, size: 32, align: 32, offset: 1952)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1103, file: !14, line: 1954, baseType: !941, size: 32, align: 32, offset: 1984)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1103, file: !14, line: 1960, baseType: !941, size: 32, align: 32, offset: 2016)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1103, file: !14, line: 1984, baseType: !941, size: 32, align: 32, offset: 2048)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1103, file: !14, line: 1991, baseType: !941, size: 32, align: 32, offset: 2080)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1103, file: !14, line: 1996, baseType: !941, size: 32, align: 32, offset: 2112)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1103, file: !14, line: 2004, baseType: !941, size: 32, align: 32, offset: 2144)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1103, file: !14, line: 2011, baseType: !941, size: 32, align: 32, offset: 2176)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1103, file: !14, line: 2018, baseType: !941, size: 32, align: 32, offset: 2208)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1103, file: !14, line: 2027, baseType: !941, size: 32, align: 32, offset: 2240)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1103, file: !14, line: 2034, baseType: !941, size: 32, align: 32, offset: 2272)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1103, file: !14, line: 2044, baseType: !941, size: 32, align: 32, offset: 2304)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1103, file: !14, line: 2054, baseType: !964, size: 64, align: 64, offset: 2368)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1103, file: !14, line: 2061, baseType: !964, size: 64, align: 64, offset: 2432)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1103, file: !14, line: 2066, baseType: !941, size: 32, align: 32, offset: 2496)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1103, file: !14, line: 2070, baseType: !941, size: 32, align: 32, offset: 2528)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1103, file: !14, line: 2078, baseType: !941, size: 32, align: 32, offset: 2560)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1103, file: !14, line: 2085, baseType: !941, size: 32, align: 32, offset: 2592)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1103, file: !14, line: 2092, baseType: !941, size: 32, align: 32, offset: 2624)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1103, file: !14, line: 2099, baseType: !941, size: 32, align: 32, offset: 2656)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1103, file: !14, line: 2106, baseType: !941, size: 32, align: 32, offset: 2688)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1103, file: !14, line: 2113, baseType: !941, size: 32, align: 32, offset: 2720)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1103, file: !14, line: 2120, baseType: !941, size: 32, align: 32, offset: 2752)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1103, file: !14, line: 2125, baseType: !941, size: 32, align: 32, offset: 2784)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1103, file: !14, line: 2133, baseType: !941, size: 32, align: 32, offset: 2816)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1103, file: !14, line: 2140, baseType: !941, size: 32, align: 32, offset: 2848)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1103, file: !14, line: 2145, baseType: !941, size: 32, align: 32, offset: 2880)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1103, file: !14, line: 2153, baseType: !941, size: 32, align: 32, offset: 2912)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1103, file: !14, line: 2158, baseType: !941, size: 32, align: 32, offset: 2944)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1103, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1103, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1103, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1103, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1103, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1103, file: !14, line: 2203, baseType: !941, size: 32, align: 32, offset: 3136)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1103, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1103, file: !14, line: 2212, baseType: !941, size: 32, align: 32, offset: 3200)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1103, file: !14, line: 2213, baseType: !941, size: 32, align: 32, offset: 3232)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1103, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1103, file: !14, line: 2232, baseType: !941, size: 32, align: 32, offset: 3296)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1103, file: !14, line: 2243, baseType: !941, size: 32, align: 32, offset: 3328)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1103, file: !14, line: 2249, baseType: !941, size: 32, align: 32, offset: 3360)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1103, file: !14, line: 2256, baseType: !941, size: 32, align: 32, offset: 3392)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1103, file: !14, line: 2263, baseType: !955, size: 64, align: 64, offset: 3456)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1103, file: !14, line: 2270, baseType: !955, size: 64, align: 64, offset: 3520)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1103, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1103, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1103, file: !14, line: 2367, baseType: !1465, size: 64, align: 64, offset: 3648)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!941, !1390, !1123, !941}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1103, file: !14, line: 2383, baseType: !941, size: 32, align: 32, offset: 3712)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1103, file: !14, line: 2386, baseType: !1400, size: 32, align: 32, offset: 3744)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1103, file: !14, line: 2387, baseType: !1400, size: 32, align: 32, offset: 3776)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1103, file: !14, line: 2394, baseType: !941, size: 32, align: 32, offset: 3808)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1103, file: !14, line: 2401, baseType: !941, size: 32, align: 32, offset: 3840)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1103, file: !14, line: 2408, baseType: !941, size: 32, align: 32, offset: 3872)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1103, file: !14, line: 2415, baseType: !941, size: 32, align: 32, offset: 3904)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1103, file: !14, line: 2422, baseType: !941, size: 32, align: 32, offset: 3936)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1103, file: !14, line: 2423, baseType: !1477, size: 64, align: 64, offset: 3968)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1479, file: !14, line: 827, baseType: !941, size: 32, align: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1479, file: !14, line: 828, baseType: !941, size: 32, align: 32, offset: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1479, file: !14, line: 829, baseType: !941, size: 32, align: 32, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1479, file: !14, line: 830, baseType: !1400, size: 32, align: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1103, file: !14, line: 2430, baseType: !1033, size: 64, align: 64, offset: 4032)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1103, file: !14, line: 2437, baseType: !1033, size: 64, align: 64, offset: 4096)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1103, file: !14, line: 2444, baseType: !1400, size: 32, align: 32, offset: 4160)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1103, file: !14, line: 2451, baseType: !1400, size: 32, align: 32, offset: 4192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1103, file: !14, line: 2458, baseType: !941, size: 32, align: 32, offset: 4224)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1103, file: !14, line: 2469, baseType: !941, size: 32, align: 32, offset: 4256)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1103, file: !14, line: 2475, baseType: !941, size: 32, align: 32, offset: 4288)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1103, file: !14, line: 2481, baseType: !941, size: 32, align: 32, offset: 4320)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1103, file: !14, line: 2485, baseType: !941, size: 32, align: 32, offset: 4352)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1103, file: !14, line: 2489, baseType: !941, size: 32, align: 32, offset: 4384)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1103, file: !14, line: 2493, baseType: !941, size: 32, align: 32, offset: 4416)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1103, file: !14, line: 2501, baseType: !941, size: 32, align: 32, offset: 4448)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1103, file: !14, line: 2506, baseType: !941, size: 32, align: 32, offset: 4480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1103, file: !14, line: 2510, baseType: !941, size: 32, align: 32, offset: 4512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1103, file: !14, line: 2514, baseType: !1033, size: 64, align: 64, offset: 4544)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1103, file: !14, line: 2528, baseType: !1501, size: 64, align: 64, offset: 4608)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !1390, !943, !941, !941}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1103, file: !14, line: 2534, baseType: !941, size: 32, align: 32, offset: 4672)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1103, file: !14, line: 2545, baseType: !941, size: 32, align: 32, offset: 4704)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1103, file: !14, line: 2547, baseType: !941, size: 32, align: 32, offset: 4736)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1103, file: !14, line: 2549, baseType: !941, size: 32, align: 32, offset: 4768)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1103, file: !14, line: 2551, baseType: !941, size: 32, align: 32, offset: 4800)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1103, file: !14, line: 2553, baseType: !941, size: 32, align: 32, offset: 4832)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1103, file: !14, line: 2555, baseType: !941, size: 32, align: 32, offset: 4864)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1103, file: !14, line: 2557, baseType: !941, size: 32, align: 32, offset: 4896)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1103, file: !14, line: 2559, baseType: !941, size: 32, align: 32, offset: 4928)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1103, file: !14, line: 2563, baseType: !941, size: 32, align: 32, offset: 4960)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1103, file: !14, line: 2571, baseType: !1515, size: 64, align: 64, offset: 4992)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1103, file: !14, line: 2579, baseType: !1515, size: 64, align: 64, offset: 5056)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1103, file: !14, line: 2586, baseType: !941, size: 32, align: 32, offset: 5120)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1103, file: !14, line: 2615, baseType: !941, size: 32, align: 32, offset: 5152)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1103, file: !14, line: 2627, baseType: !941, size: 32, align: 32, offset: 5184)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1103, file: !14, line: 2637, baseType: !941, size: 32, align: 32, offset: 5216)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1103, file: !14, line: 2681, baseType: !941, size: 32, align: 32, offset: 5248)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1103, file: !14, line: 2709, baseType: !1033, size: 64, align: 64, offset: 5312)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1103, file: !14, line: 2716, baseType: !1524, size: 64, align: 64, offset: 5376)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64, align: 64)
!1525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1527)
!1527 = !{!1528, !1529, !1530, !1531, !1532, !1533, !1537, !1541, !1545, !1546, !1547, !1548, !1554, !1555, !1556, !1557, !1558}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1526, file: !14, line: 3642, baseType: !980, size: 64, align: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1526, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1526, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1526, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1526, file: !14, line: 3669, baseType: !941, size: 32, align: 32, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1526, file: !14, line: 3682, baseType: !1534, size: 64, align: 64, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!941, !1101, !1123}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1526, file: !14, line: 3698, baseType: !1538, size: 64, align: 64, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!941, !1101, !944, !963}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1526, file: !14, line: 3712, baseType: !1542, size: 64, align: 64, offset: 320)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64, align: 64)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!941, !1101, !941, !944, !963}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1526, file: !14, line: 3726, baseType: !1538, size: 64, align: 64, offset: 384)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1526, file: !14, line: 3737, baseType: !1098, size: 64, align: 64, offset: 448)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1526, file: !14, line: 3746, baseType: !941, size: 32, align: 32, offset: 512)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1526, file: !14, line: 3757, baseType: !1549, size: 64, align: 64, offset: 576)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64, align: 64)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{null, !1552}
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64, align: 64)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1526, file: !14, line: 3766, baseType: !1098, size: 64, align: 64, offset: 640)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1526, file: !14, line: 3774, baseType: !1098, size: 64, align: 64, offset: 704)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1526, file: !14, line: 3780, baseType: !941, size: 32, align: 32, offset: 768)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1526, file: !14, line: 3785, baseType: !941, size: 32, align: 32, offset: 800)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1526, file: !14, line: 3795, baseType: !1559, size: 64, align: 64, offset: 832)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!941, !1101, !1161}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1103, file: !14, line: 2728, baseType: !943, size: 64, align: 64, offset: 5440)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1103, file: !14, line: 2735, baseType: !1151, size: 512, align: 64, offset: 5504)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1103, file: !14, line: 2742, baseType: !941, size: 32, align: 32, offset: 6016)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1103, file: !14, line: 2755, baseType: !941, size: 32, align: 32, offset: 6048)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1103, file: !14, line: 2776, baseType: !941, size: 32, align: 32, offset: 6080)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1103, file: !14, line: 2783, baseType: !941, size: 32, align: 32, offset: 6112)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1103, file: !14, line: 2791, baseType: !941, size: 32, align: 32, offset: 6144)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1103, file: !14, line: 2802, baseType: !1123, size: 64, align: 64, offset: 6208)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1103, file: !14, line: 2811, baseType: !941, size: 32, align: 32, offset: 6272)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1103, file: !14, line: 2821, baseType: !941, size: 32, align: 32, offset: 6304)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1103, file: !14, line: 2830, baseType: !941, size: 32, align: 32, offset: 6336)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1103, file: !14, line: 2840, baseType: !941, size: 32, align: 32, offset: 6368)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1103, file: !14, line: 2851, baseType: !1575, size: 64, align: 64, offset: 6400)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64, align: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!941, !1390, !1578, !943, !1393, !941, !941}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!941, !1390, !943}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1103, file: !14, line: 2871, baseType: !1582, size: 64, align: 64, offset: 6464)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64, align: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!941, !1390, !1585, !943, !1393, !941}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64, align: 64)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!941, !1390, !943, !941, !941}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1103, file: !14, line: 2878, baseType: !941, size: 32, align: 32, offset: 6528)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1103, file: !14, line: 2885, baseType: !941, size: 32, align: 32, offset: 6560)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1103, file: !14, line: 3005, baseType: !941, size: 32, align: 32, offset: 6592)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1103, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1103, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1103, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1103, file: !14, line: 3037, baseType: !1129, size: 64, align: 64, offset: 6720)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1103, file: !14, line: 3038, baseType: !941, size: 32, align: 32, offset: 6784)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1103, file: !14, line: 3050, baseType: !955, size: 64, align: 64, offset: 6848)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1103, file: !14, line: 3065, baseType: !941, size: 32, align: 32, offset: 6912)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1103, file: !14, line: 3083, baseType: !941, size: 32, align: 32, offset: 6944)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1103, file: !14, line: 3092, baseType: !990, size: 64, align: 32, offset: 6976)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1103, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1103, file: !14, line: 3106, baseType: !990, size: 64, align: 32, offset: 7072)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1103, file: !14, line: 3113, baseType: !1603, size: 64, align: 64, offset: 7168)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611, !1612, !1613, !1616}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1606, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1606, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1606, file: !14, line: 720, baseType: !980, size: 64, align: 64, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1606, file: !14, line: 724, baseType: !980, size: 64, align: 64, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1606, file: !14, line: 728, baseType: !941, size: 32, align: 32, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1606, file: !14, line: 734, baseType: !1614, size: 64, align: 64, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64, align: 64)
!1615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1606, file: !14, line: 739, baseType: !1617, size: 64, align: 64, offset: 320)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1103, file: !14, line: 3129, baseType: !1033, size: 64, align: 64, offset: 7232)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1103, file: !14, line: 3130, baseType: !1033, size: 64, align: 64, offset: 7296)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1103, file: !14, line: 3131, baseType: !1033, size: 64, align: 64, offset: 7360)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1103, file: !14, line: 3132, baseType: !1033, size: 64, align: 64, offset: 7424)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1103, file: !14, line: 3139, baseType: !1515, size: 64, align: 64, offset: 7488)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1103, file: !14, line: 3147, baseType: !941, size: 32, align: 32, offset: 7552)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1103, file: !14, line: 3165, baseType: !941, size: 32, align: 32, offset: 7584)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1103, file: !14, line: 3172, baseType: !941, size: 32, align: 32, offset: 7616)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1103, file: !14, line: 3180, baseType: !941, size: 32, align: 32, offset: 7648)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1103, file: !14, line: 3191, baseType: !964, size: 64, align: 64, offset: 7680)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1103, file: !14, line: 3199, baseType: !1129, size: 64, align: 64, offset: 7744)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1103, file: !14, line: 3207, baseType: !1515, size: 64, align: 64, offset: 7808)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1103, file: !14, line: 3214, baseType: !942, size: 32, align: 32, offset: 7872)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1103, file: !14, line: 3224, baseType: !1259, size: 64, align: 64, offset: 7936)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1103, file: !14, line: 3225, baseType: !941, size: 32, align: 32, offset: 8000)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1103, file: !14, line: 3249, baseType: !1161, size: 64, align: 64, offset: 8064)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1103, file: !14, line: 3256, baseType: !941, size: 32, align: 32, offset: 8128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1103, file: !14, line: 3271, baseType: !941, size: 32, align: 32, offset: 8160)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1103, file: !14, line: 3279, baseType: !1033, size: 64, align: 64, offset: 8192)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1103, file: !14, line: 3301, baseType: !1161, size: 64, align: 64, offset: 8256)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1103, file: !14, line: 3310, baseType: !941, size: 32, align: 32, offset: 8320)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1103, file: !14, line: 3337, baseType: !941, size: 32, align: 32, offset: 8352)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1103, file: !14, line: 3351, baseType: !941, size: 32, align: 32, offset: 8384)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1103, file: !14, line: 3359, baseType: !941, size: 32, align: 32, offset: 8416)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !977, file: !14, line: 3535, baseType: !1644, size: 64, align: 64, offset: 1024)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!941, !1101, !1647}
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1102)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !977, file: !14, line: 3541, baseType: !1650, size: 64, align: 64, offset: 1088)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1117, line: 223, size: 128, align: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1653, file: !1117, line: 224, baseType: !944, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1653, file: !1117, line: 225, baseType: !944, size: 64, align: 64, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !977, file: !14, line: 3549, baseType: !1658, size: 64, align: 64, offset: 1152)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64, align: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{null, !1096}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !977, file: !14, line: 3551, baseType: !1098, size: 64, align: 64, offset: 1216)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !977, file: !14, line: 3552, baseType: !1663, size: 64, align: 64, offset: 1280)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64, align: 64)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!941, !1101, !1129, !941, !1666}
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1698}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1668, file: !14, line: 3921, baseType: !965, size: 16, align: 16)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1668, file: !14, line: 3922, baseType: !963, size: 32, align: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1668, file: !14, line: 3923, baseType: !963, size: 32, align: 32, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1668, file: !14, line: 3924, baseType: !942, size: 32, align: 32, offset: 96)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1668, file: !14, line: 3925, baseType: !1675, size: 64, align: 64, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1691, !1693, !1694, !1695, !1696, !1697}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1678, file: !14, line: 3886, baseType: !941, size: 32, align: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1678, file: !14, line: 3887, baseType: !941, size: 32, align: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1678, file: !14, line: 3888, baseType: !941, size: 32, align: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1678, file: !14, line: 3889, baseType: !941, size: 32, align: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1678, file: !14, line: 3890, baseType: !941, size: 32, align: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1678, file: !14, line: 3897, baseType: !1686, size: 768, align: 64, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1688)
!1688 = !{!1689, !1690}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1687, file: !14, line: 3855, baseType: !1128, size: 512, align: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1687, file: !14, line: 3857, baseType: !1133, size: 256, align: 32, offset: 512)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1678, file: !14, line: 3903, baseType: !1692, size: 256, align: 64, offset: 960)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 256, align: 64, elements: !1230)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1678, file: !14, line: 3904, baseType: !1237, size: 128, align: 32, offset: 1216)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1678, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1678, file: !14, line: 3908, baseType: !1515, size: 64, align: 64, offset: 1408)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1678, file: !14, line: 3915, baseType: !1515, size: 64, align: 64, offset: 1472)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1678, file: !14, line: 3917, baseType: !941, size: 32, align: 32, offset: 1536)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1668, file: !14, line: 3926, baseType: !1033, size: 64, align: 64, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !977, file: !14, line: 3564, baseType: !1700, size: 64, align: 64, offset: 1344)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!941, !1101, !1247, !1391, !1393}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !977, file: !14, line: 3566, baseType: !1704, size: 64, align: 64, offset: 1408)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64, align: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!941, !1101, !943, !1393, !1247}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !977, file: !14, line: 3567, baseType: !1098, size: 64, align: 64, offset: 1472)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !977, file: !14, line: 3576, baseType: !1709, size: 64, align: 64, offset: 1536)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!941, !1101, !1391}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !977, file: !14, line: 3577, baseType: !1713, size: 64, align: 64, offset: 1600)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64, align: 64)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!941, !1101, !1247}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !977, file: !14, line: 3584, baseType: !1534, size: 64, align: 64, offset: 1664)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !977, file: !14, line: 3589, baseType: !1718, size: 64, align: 64, offset: 1728)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{null, !1101}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !977, file: !14, line: 3594, baseType: !941, size: 32, align: 32, offset: 1792)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !977, file: !14, line: 3600, baseType: !980, size: 64, align: 64, offset: 1856)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !977, file: !14, line: 3609, baseType: !1724, size: 64, align: 64, offset: 1920)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64, align: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64, align: 64)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1728 = distinct !DIGlobalVariable(name: "exr_class", scope: !0, file: !910, line: 1940, type: !1011, isLocal: true, isDefinition: true, variable: %struct.AVClass* @exr_class)
!1729 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !910, line: 1895, type: !1730, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @options)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1731, size: 10240, align: 64, elements: !1733)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1023)
!1733 = !{!1734}
!1734 = !DISubrange(count: 20)
!1735 = !{i32 2, !"Dwarf Version", i32 4}
!1736 = !{i32 2, !"Debug Info Version", i32 3}
!1737 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1738 = distinct !DISubprogram(name: "decode_init_thread_copy", scope: !910, file: !910, line: 1863, type: !1099, isLocal: true, isDefinition: true, scopeLine: 1864, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!1739 = !{}
!1740 = !DILocalVariable(name: "avctx", arg: 1, scope: !1738, file: !910, line: 1863, type: !1101)
!1741 = !DIExpression()
!1742 = !DILocation(line: 1863, column: 52, scope: !1738)
!1743 = !DILocalVariable(name: "s", scope: !1738, file: !910, line: 1864, type: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64, align: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXRContext", file: !910, line: 163, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EXRContext", file: !910, line: 121, size: 1050304, align: 64, elements: !1747)
!1747 = !{!1748, !1750, !1751, !1752, !1766, !1767, !1768, !1769, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1813, !1814, !1815, !1823, !1824, !1825, !1833, !1834, !1835, !1849, !1850, !1851, !1852}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1746, file: !910, line: 122, baseType: !1749, size: 64, align: 64)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !1746, file: !910, line: 123, baseType: !1123, size: 64, align: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1746, file: !910, line: 124, baseType: !1101, size: 64, align: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1746, file: !910, line: 125, baseType: !1753, size: 128, align: 64, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExrDSPContext", file: !1754, line: 28, baseType: !1755)
!1754 = !DIFile(filename: "libavcodec/exrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExrDSPContext", file: !1754, line: 25, size: 128, align: 64, elements: !1756)
!1756 = !{!1757, !1762}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_pixels", scope: !1755, file: !1754, line: 26, baseType: !1758, size: 64, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64, align: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null, !1129, !944, !1761}
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1215, line: 149, baseType: !1035)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "predictor", scope: !1755, file: !1754, line: 27, baseType: !1763, size: 64, align: 64, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64, align: 64)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !1129, !1761}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1746, file: !910, line: 131, baseType: !909, size: 32, align: 32, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_type", scope: !1746, file: !910, line: 132, baseType: !923, size: 32, align: 32, offset: 352)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "channel_offsets", scope: !1746, file: !910, line: 133, baseType: !1237, size: 128, align: 32, offset: 384)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1746, file: !910, line: 134, baseType: !1770, size: 64, align: 64, offset: 512)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !1773, line: 123, baseType: !1774)
!1773 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !1773, line: 81, size: 1280, align: 64, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1794}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1774, file: !1773, line: 82, baseType: !980, size: 64, align: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1774, file: !1773, line: 83, baseType: !946, size: 8, align: 8, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !1774, file: !1773, line: 92, baseType: !946, size: 8, align: 8, offset: 72)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !1774, file: !1773, line: 101, baseType: !946, size: 8, align: 8, offset: 80)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1774, file: !1773, line: 106, baseType: !955, size: 64, align: 64, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1774, file: !1773, line: 117, baseType: !1782, size: 1024, align: 32, offset: 192)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1783, size: 1024, align: 32, elements: !1230)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !1773, line: 70, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !1773, line: 31, size: 256, align: 32, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1784, file: !1773, line: 35, baseType: !941, size: 32, align: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1784, file: !1773, line: 41, baseType: !941, size: 32, align: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1784, file: !1773, line: 47, baseType: !941, size: 32, align: 32, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1784, file: !1773, line: 53, baseType: !941, size: 32, align: 32, offset: 96)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1784, file: !1773, line: 58, baseType: !941, size: 32, align: 32, offset: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !1784, file: !1773, line: 62, baseType: !941, size: 32, align: 32, offset: 160)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !1784, file: !1773, line: 65, baseType: !941, size: 32, align: 32, offset: 192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !1784, file: !1773, line: 68, baseType: !941, size: 32, align: 32, offset: 224)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1774, file: !1773, line: 122, baseType: !980, size: 64, align: 64, offset: 1216)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1746, file: !910, line: 136, baseType: !941, size: 32, align: 32, offset: 576)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1746, file: !910, line: 136, baseType: !941, size: 32, align: 32, offset: 608)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1746, file: !910, line: 137, baseType: !963, size: 32, align: 32, offset: 640)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1746, file: !910, line: 137, baseType: !963, size: 32, align: 32, offset: 672)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1746, file: !910, line: 138, baseType: !963, size: 32, align: 32, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1746, file: !910, line: 138, baseType: !963, size: 32, align: 32, offset: 736)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "xdelta", scope: !1746, file: !910, line: 139, baseType: !963, size: 32, align: 32, offset: 768)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ydelta", scope: !1746, file: !910, line: 139, baseType: !963, size: 32, align: 32, offset: 800)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "scan_lines_per_block", scope: !1746, file: !910, line: 141, baseType: !941, size: 32, align: 32, offset: 832)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "tile_attr", scope: !1746, file: !910, line: 143, baseType: !1805, size: 128, align: 32, offset: 864)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXRTileAttribute", file: !910, line: 104, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EXRTileAttribute", file: !910, line: 99, size: 128, align: 32, elements: !1807)
!1807 = !{!1808, !1810, !1811, !1812}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "xSize", scope: !1806, file: !910, line: 100, baseType: !1809, size: 32, align: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1034, line: 196, baseType: !941)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ySize", scope: !1806, file: !910, line: 101, baseType: !1809, size: 32, align: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "level_mode", scope: !1806, file: !910, line: 102, baseType: !929, size: 32, align: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "level_round", scope: !1806, file: !910, line: 103, baseType: !935, size: 32, align: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "is_tile", scope: !1746, file: !910, line: 144, baseType: !941, size: 32, align: 32, offset: 992)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "is_luma", scope: !1746, file: !910, line: 146, baseType: !941, size: 32, align: 32, offset: 1024)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1746, file: !910, line: 148, baseType: !1816, size: 192, align: 64, offset: 1088)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !1817, line: 35, baseType: !1818)
!1817 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !1817, line: 33, size: 192, align: 64, elements: !1819)
!1819 = !{!1820, !1821, !1822}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1818, file: !1817, line: 34, baseType: !944, size: 64, align: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1818, file: !1817, line: 34, baseType: !944, size: 64, align: 64, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1818, file: !1817, line: 34, baseType: !944, size: 64, align: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1746, file: !910, line: 149, baseType: !944, size: 64, align: 64, offset: 1280)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1746, file: !910, line: 150, baseType: !941, size: 32, align: 32, offset: 1344)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1746, file: !910, line: 152, baseType: !1826, size: 64, align: 64, offset: 1408)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64, align: 64)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXRChannel", file: !910, line: 97, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EXRChannel", file: !910, line: 94, size: 96, align: 32, elements: !1829)
!1829 = !{!1830, !1831, !1832}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "xsub", scope: !1828, file: !910, line: 95, baseType: !941, size: 32, align: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ysub", scope: !1828, file: !910, line: 95, baseType: !941, size: 32, align: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_type", scope: !1828, file: !910, line: 96, baseType: !923, size: 32, align: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !1746, file: !910, line: 153, baseType: !941, size: 32, align: 32, offset: 1472)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "current_channel_offset", scope: !1746, file: !910, line: 154, baseType: !941, size: 32, align: 32, offset: 1504)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "thread_data", scope: !1746, file: !910, line: 156, baseType: !1836, size: 64, align: 64, offset: 1536)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64, align: 64)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXRThreadData", file: !910, line: 119, baseType: !1838)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EXRThreadData", file: !910, line: 106, size: 512, align: 64, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_data", scope: !1838, file: !910, line: 107, baseType: !1129, size: 64, align: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_size", scope: !1838, file: !910, line: 108, baseType: !941, size: 32, align: 32, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1838, file: !910, line: 110, baseType: !1129, size: 64, align: 64, offset: 128)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_size", scope: !1838, file: !910, line: 111, baseType: !941, size: 32, align: 32, offset: 192)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap", scope: !1838, file: !910, line: 113, baseType: !1129, size: 64, align: 64, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "lut", scope: !1838, file: !910, line: 114, baseType: !964, size: 64, align: 64, offset: 320)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ysize", scope: !1838, file: !910, line: 116, baseType: !941, size: 32, align: 32, offset: 384)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "xsize", scope: !1838, file: !910, line: 116, baseType: !941, size: 32, align: 32, offset: 416)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "channel_line_size", scope: !1838, file: !910, line: 118, baseType: !941, size: 32, align: 32, offset: 448)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1746, file: !910, line: 158, baseType: !980, size: 64, align: 64, offset: 1600)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "apply_trc_type", scope: !1746, file: !910, line: 160, baseType: !791, size: 32, align: 32, offset: 1664)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1746, file: !910, line: 161, baseType: !1400, size: 32, align: 32, offset: 1696)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_table", scope: !1746, file: !910, line: 162, baseType: !1853, size: 1048576, align: 16, offset: 1728)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 1048576, align: 16, elements: !1854)
!1854 = !{!1855}
!1855 = !DISubrange(count: 65536)
!1856 = !DILocation(line: 1864, column: 15, scope: !1738)
!1857 = !DILocation(line: 1864, column: 19, scope: !1738)
!1858 = !DILocation(line: 1864, column: 26, scope: !1738)
!1859 = !DILocation(line: 1867, column: 39, scope: !1738)
!1860 = !DILocation(line: 1867, column: 46, scope: !1738)
!1861 = !DILocation(line: 1867, column: 22, scope: !1738)
!1862 = !DILocation(line: 1867, column: 5, scope: !1738)
!1863 = !DILocation(line: 1867, column: 8, scope: !1738)
!1864 = !DILocation(line: 1867, column: 20, scope: !1738)
!1865 = !DILocation(line: 1868, column: 10, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1738, file: !910, line: 1868, column: 9)
!1867 = !DILocation(line: 1868, column: 13, scope: !1866)
!1868 = !DILocation(line: 1868, column: 9, scope: !1738)
!1869 = !DILocation(line: 1869, column: 9, scope: !1866)
!1870 = !DILocation(line: 1871, column: 5, scope: !1738)
!1871 = !DILocation(line: 1872, column: 1, scope: !1738)
!1872 = distinct !DISubprogram(name: "decode_init", scope: !910, file: !910, line: 1813, type: !1099, isLocal: true, isDefinition: true, scopeLine: 1814, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!1873 = !DILocalVariable(name: "avctx", arg: 1, scope: !1872, file: !910, line: 1813, type: !1101)
!1874 = !DILocation(line: 1813, column: 62, scope: !1872)
!1875 = !DILocalVariable(name: "s", scope: !1872, file: !910, line: 1815, type: !1744)
!1876 = !DILocation(line: 1815, column: 17, scope: !1872)
!1877 = !DILocation(line: 1815, column: 21, scope: !1872)
!1878 = !DILocation(line: 1815, column: 28, scope: !1872)
!1879 = !DILocalVariable(name: "i", scope: !1872, file: !910, line: 1816, type: !963)
!1880 = !DILocation(line: 1816, column: 14, scope: !1872)
!1881 = !DILocalVariable(name: "t", scope: !1872, file: !910, line: 1817, type: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat32", file: !1883, line: 27, size: 32, align: 32, elements: !1884)
!1883 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1882, file: !1883, line: 28, baseType: !963, size: 32, align: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1882, file: !1883, line: 29, baseType: !1400, size: 32, align: 32)
!1887 = !DILocation(line: 1817, column: 25, scope: !1872)
!1888 = !DILocalVariable(name: "one_gamma", scope: !1872, file: !910, line: 1818, type: !1400)
!1889 = !DILocation(line: 1818, column: 11, scope: !1872)
!1890 = !DILocation(line: 1818, column: 30, scope: !1872)
!1891 = !DILocation(line: 1818, column: 33, scope: !1872)
!1892 = !DILocation(line: 1818, column: 28, scope: !1872)
!1893 = !DILocalVariable(name: "trc_func", scope: !1872, file: !910, line: 1819, type: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "avpriv_trc_function", file: !1895, line: 40, baseType: !1896)
!1895 = !DIFile(filename: "./libavutil/color_utils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64, align: 64)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!1037, !1037}
!1899 = !DILocation(line: 1819, column: 25, scope: !1872)
!1900 = !DILocation(line: 1821, column: 16, scope: !1872)
!1901 = !DILocation(line: 1821, column: 5, scope: !1872)
!1902 = !DILocation(line: 1821, column: 8, scope: !1872)
!1903 = !DILocation(line: 1821, column: 14, scope: !1872)
!1904 = !DILocation(line: 1823, column: 21, scope: !1872)
!1905 = !DILocation(line: 1823, column: 24, scope: !1872)
!1906 = !DILocation(line: 1823, column: 5, scope: !1872)
!1907 = !DILocation(line: 1829, column: 49, scope: !1872)
!1908 = !DILocation(line: 1829, column: 52, scope: !1872)
!1909 = !DILocation(line: 1829, column: 16, scope: !1872)
!1910 = !DILocation(line: 1829, column: 14, scope: !1872)
!1911 = !DILocation(line: 1830, column: 9, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1872, file: !910, line: 1830, column: 9)
!1913 = !DILocation(line: 1830, column: 9, scope: !1872)
!1914 = !DILocation(line: 1831, column: 16, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1916, file: !910, line: 1831, column: 9)
!1916 = distinct !DILexicalBlock(scope: !1912, file: !910, line: 1830, column: 19)
!1917 = !DILocation(line: 1831, column: 14, scope: !1915)
!1918 = !DILocation(line: 1831, column: 21, scope: !1919)
!1919 = !DILexicalBlockFile(scope: !1920, file: !910, discriminator: 1)
!1920 = distinct !DILexicalBlock(scope: !1915, file: !910, line: 1831, column: 9)
!1921 = !DILocation(line: 1831, column: 23, scope: !1919)
!1922 = !DILocation(line: 1831, column: 9, scope: !1919)
!1923 = !DILocation(line: 1832, column: 32, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1920, file: !910, line: 1831, column: 37)
!1925 = !DILocation(line: 1832, column: 17, scope: !1924)
!1926 = !DILocation(line: 1832, column: 17, scope: !1927)
!1927 = !DILexicalBlockFile(scope: !1924, file: !910, discriminator: 1)
!1928 = !DILocation(line: 1833, column: 19, scope: !1924)
!1929 = !DILocation(line: 1833, column: 30, scope: !1924)
!1930 = !DILocation(line: 1833, column: 28, scope: !1924)
!1931 = !DILocation(line: 1833, column: 15, scope: !1924)
!1932 = !DILocation(line: 1833, column: 17, scope: !1924)
!1933 = !DILocation(line: 1834, column: 48, scope: !1924)
!1934 = !DILocation(line: 1834, column: 33, scope: !1924)
!1935 = !DILocation(line: 1834, column: 28, scope: !1924)
!1936 = !DILocation(line: 1834, column: 13, scope: !1924)
!1937 = !DILocation(line: 1834, column: 16, scope: !1924)
!1938 = !DILocation(line: 1834, column: 31, scope: !1924)
!1939 = !DILocation(line: 1835, column: 9, scope: !1924)
!1940 = !DILocation(line: 1831, column: 32, scope: !1941)
!1941 = !DILexicalBlockFile(scope: !1920, file: !910, discriminator: 2)
!1942 = !DILocation(line: 1831, column: 9, scope: !1941)
!1943 = distinct !{!1943, !1944}
!1944 = !DILocation(line: 1831, column: 9, scope: !1916)
!1945 = !DILocation(line: 1836, column: 5, scope: !1916)
!1946 = !DILocation(line: 1837, column: 13, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1948, file: !910, line: 1837, column: 13)
!1948 = distinct !DILexicalBlock(scope: !1912, file: !910, line: 1836, column: 12)
!1949 = !DILocation(line: 1837, column: 23, scope: !1947)
!1950 = !DILocation(line: 1837, column: 33, scope: !1947)
!1951 = !DILocation(line: 1837, column: 36, scope: !1952)
!1952 = !DILexicalBlockFile(scope: !1947, file: !910, discriminator: 1)
!1953 = !DILocation(line: 1837, column: 46, scope: !1952)
!1954 = !DILocation(line: 1837, column: 13, scope: !1952)
!1955 = !DILocation(line: 1838, column: 20, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !910, line: 1838, column: 13)
!1957 = distinct !DILexicalBlock(scope: !1947, file: !910, line: 1837, column: 57)
!1958 = !DILocation(line: 1838, column: 18, scope: !1956)
!1959 = !DILocation(line: 1838, column: 25, scope: !1960)
!1960 = !DILexicalBlockFile(scope: !1961, file: !910, discriminator: 1)
!1961 = distinct !DILexicalBlock(scope: !1956, file: !910, line: 1838, column: 13)
!1962 = !DILocation(line: 1838, column: 27, scope: !1960)
!1963 = !DILocation(line: 1838, column: 13, scope: !1960)
!1964 = !DILocation(line: 1839, column: 53, scope: !1961)
!1965 = !DILocation(line: 1839, column: 37, scope: !1961)
!1966 = !DILocation(line: 1839, column: 32, scope: !1961)
!1967 = !DILocation(line: 1839, column: 17, scope: !1961)
!1968 = !DILocation(line: 1839, column: 20, scope: !1961)
!1969 = !DILocation(line: 1839, column: 35, scope: !1961)
!1970 = !DILocation(line: 1838, column: 36, scope: !1971)
!1971 = !DILexicalBlockFile(scope: !1961, file: !910, discriminator: 2)
!1972 = !DILocation(line: 1838, column: 13, scope: !1971)
!1973 = distinct !{!1973, !1974}
!1974 = !DILocation(line: 1838, column: 13, scope: !1957)
!1975 = !DILocation(line: 1840, column: 9, scope: !1957)
!1976 = !DILocation(line: 1841, column: 20, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1978, file: !910, line: 1841, column: 13)
!1978 = distinct !DILexicalBlock(scope: !1947, file: !910, line: 1840, column: 16)
!1979 = !DILocation(line: 1841, column: 18, scope: !1977)
!1980 = !DILocation(line: 1841, column: 25, scope: !1981)
!1981 = !DILexicalBlockFile(scope: !1982, file: !910, discriminator: 1)
!1982 = distinct !DILexicalBlock(scope: !1977, file: !910, line: 1841, column: 13)
!1983 = !DILocation(line: 1841, column: 27, scope: !1981)
!1984 = !DILocation(line: 1841, column: 13, scope: !1981)
!1985 = !DILocation(line: 1842, column: 36, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1982, file: !910, line: 1841, column: 41)
!1987 = !DILocation(line: 1842, column: 21, scope: !1986)
!1988 = !DILocation(line: 1842, column: 21, scope: !1989)
!1989 = !DILexicalBlockFile(scope: !1986, file: !910, discriminator: 1)
!1990 = !DILocation(line: 1844, column: 23, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1986, file: !910, line: 1844, column: 21)
!1992 = !DILocation(line: 1844, column: 25, scope: !1991)
!1993 = !DILocation(line: 1844, column: 21, scope: !1986)
!1994 = !DILocation(line: 1845, column: 57, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1991, file: !910, line: 1844, column: 34)
!1996 = !DILocation(line: 1845, column: 41, scope: !1995)
!1997 = !DILocation(line: 1845, column: 36, scope: !1995)
!1998 = !DILocation(line: 1845, column: 21, scope: !1995)
!1999 = !DILocation(line: 1845, column: 24, scope: !1995)
!2000 = !DILocation(line: 1845, column: 39, scope: !1995)
!2001 = !DILocation(line: 1846, column: 17, scope: !1995)
!2002 = !DILocation(line: 1847, column: 34, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1991, file: !910, line: 1846, column: 24)
!2004 = !DILocation(line: 1847, column: 37, scope: !2003)
!2005 = !DILocation(line: 1847, column: 27, scope: !2003)
!2006 = !DILocation(line: 1847, column: 23, scope: !2003)
!2007 = !DILocation(line: 1847, column: 25, scope: !2003)
!2008 = !DILocation(line: 1848, column: 56, scope: !2003)
!2009 = !DILocation(line: 1848, column: 41, scope: !2003)
!2010 = !DILocation(line: 1848, column: 36, scope: !2003)
!2011 = !DILocation(line: 1848, column: 21, scope: !2003)
!2012 = !DILocation(line: 1848, column: 24, scope: !2003)
!2013 = !DILocation(line: 1848, column: 39, scope: !2003)
!2014 = !DILocation(line: 1850, column: 13, scope: !1986)
!2015 = !DILocation(line: 1841, column: 36, scope: !2016)
!2016 = !DILexicalBlockFile(scope: !1982, file: !910, discriminator: 2)
!2017 = !DILocation(line: 1841, column: 13, scope: !2016)
!2018 = distinct !{!2018, !2019}
!2019 = !DILocation(line: 1841, column: 13, scope: !1978)
!2020 = !DILocation(line: 1855, column: 39, scope: !1872)
!2021 = !DILocation(line: 1855, column: 46, scope: !1872)
!2022 = !DILocation(line: 1855, column: 22, scope: !1872)
!2023 = !DILocation(line: 1855, column: 5, scope: !1872)
!2024 = !DILocation(line: 1855, column: 8, scope: !1872)
!2025 = !DILocation(line: 1855, column: 20, scope: !1872)
!2026 = !DILocation(line: 1856, column: 10, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !1872, file: !910, line: 1856, column: 9)
!2028 = !DILocation(line: 1856, column: 13, scope: !2027)
!2029 = !DILocation(line: 1856, column: 9, scope: !1872)
!2030 = !DILocation(line: 1857, column: 9, scope: !2027)
!2031 = !DILocation(line: 1859, column: 5, scope: !1872)
!2032 = !DILocation(line: 1860, column: 1, scope: !1872)
!2033 = distinct !DISubprogram(name: "decode_frame", scope: !910, file: !910, line: 1667, type: !1705, isLocal: true, isDefinition: true, scopeLine: 1669, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2034 = !DILocalVariable(name: "p", arg: 1, scope: !2035, file: !1817, line: 143, type: !2038)
!2035 = distinct !DISubprogram(name: "bytestream2_init_writer", scope: !1817, file: !1817, line: 143, type: !2036, isLocal: true, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{null, !2038, !1129, !941}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64, align: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutByteContext", file: !1817, line: 40, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutByteContext", file: !1817, line: 37, size: 256, align: 64, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2040, file: !1817, line: 38, baseType: !1129, size: 64, align: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2040, file: !1817, line: 38, baseType: !1129, size: 64, align: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !2040, file: !1817, line: 38, baseType: !1129, size: 64, align: 64, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !2040, file: !1817, line: 39, baseType: !941, size: 32, align: 32, offset: 192)
!2046 = !DILocation(line: 143, column: 91, scope: !2035, inlinedAt: !2047)
!2047 = distinct !DILocation(line: 1772, column: 9, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2049, file: !910, line: 1767, column: 60)
!2049 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1767, column: 9)
!2050 = !DILocalVariable(name: "buf", arg: 2, scope: !2035, file: !1817, line: 144, type: !1129)
!2051 = !DILocation(line: 144, column: 63, scope: !2035, inlinedAt: !2047)
!2052 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2035, file: !1817, line: 145, type: !941)
!2053 = !DILocation(line: 145, column: 58, scope: !2035, inlinedAt: !2047)
!2054 = !DILocalVariable(name: "p", arg: 1, scope: !2055, file: !1817, line: 87, type: !2038)
!2055 = distinct !DISubprogram(name: "bytestream2_put_le64", scope: !1817, file: !1817, line: 87, type: !2056, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{null, !2038, !1007}
!2058 = !DILocation(line: 87, column: 574, scope: !2055, inlinedAt: !2059)
!2059 = distinct !DILocation(line: 1776, column: 13, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2061, file: !910, line: 1774, column: 41)
!2061 = distinct !DILexicalBlock(scope: !2062, file: !910, line: 1774, column: 9)
!2062 = distinct !DILexicalBlock(scope: !2048, file: !910, line: 1774, column: 9)
!2063 = !DILocalVariable(name: "value", arg: 2, scope: !2055, file: !1817, line: 87, type: !1007)
!2064 = !DILocation(line: 87, column: 592, scope: !2055, inlinedAt: !2059)
!2065 = !DILocalVariable(name: "a", arg: 1, scope: !2066, file: !2067, line: 127, type: !941)
!2066 = distinct !DISubprogram(name: "av_clip_c", scope: !2067, file: !2067, line: 127, type: !2068, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2067 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!941, !941, !941, !941}
!2070 = !DILocation(line: 127, column: 87, scope: !2066, inlinedAt: !2071)
!2071 = distinct !DILocation(line: 219, column: 18, scope: !2072, inlinedAt: !2077)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !1817, line: 212, column: 21)
!2073 = distinct !DISubprogram(name: "bytestream2_seek", scope: !1817, file: !1817, line: 208, type: !2074, isLocal: true, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!941, !2076, !941, !941}
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!2077 = distinct !DILocation(line: 1779, column: 13, scope: !2060)
!2078 = !DILocalVariable(name: "amin", arg: 2, scope: !2066, file: !2067, line: 127, type: !941)
!2079 = !DILocation(line: 127, column: 94, scope: !2066, inlinedAt: !2071)
!2080 = !DILocalVariable(name: "amax", arg: 3, scope: !2066, file: !2067, line: 127, type: !941)
!2081 = !DILocation(line: 127, column: 104, scope: !2066, inlinedAt: !2071)
!2082 = !DILocation(line: 127, column: 87, scope: !2066, inlinedAt: !2083)
!2083 = distinct !DILocation(line: 223, column: 18, scope: !2072, inlinedAt: !2077)
!2084 = !DILocation(line: 127, column: 94, scope: !2066, inlinedAt: !2083)
!2085 = !DILocation(line: 127, column: 104, scope: !2066, inlinedAt: !2083)
!2086 = !DILocalVariable(name: "g", arg: 1, scope: !2087, file: !1817, line: 188, type: !2076)
!2087 = distinct !DISubprogram(name: "bytestream2_tell", scope: !1817, file: !1817, line: 188, type: !2088, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!941, !2076}
!2090 = !DILocation(line: 188, column: 83, scope: !2087, inlinedAt: !2091)
!2091 = distinct !DILocation(line: 229, column: 12, scope: !2073, inlinedAt: !2077)
!2092 = !DILocation(line: 127, column: 87, scope: !2066, inlinedAt: !2093)
!2093 = distinct !DILocation(line: 214, column: 18, scope: !2072, inlinedAt: !2077)
!2094 = !DILocation(line: 127, column: 94, scope: !2066, inlinedAt: !2093)
!2095 = !DILocation(line: 127, column: 104, scope: !2066, inlinedAt: !2093)
!2096 = !DILocalVariable(name: "g", arg: 1, scope: !2073, file: !1817, line: 208, type: !2076)
!2097 = !DILocation(line: 208, column: 83, scope: !2073, inlinedAt: !2077)
!2098 = !DILocalVariable(name: "offset", arg: 2, scope: !2073, file: !1817, line: 209, type: !941)
!2099 = !DILocation(line: 209, column: 50, scope: !2073, inlinedAt: !2077)
!2100 = !DILocalVariable(name: "whence", arg: 3, scope: !2073, file: !1817, line: 210, type: !941)
!2101 = !DILocation(line: 210, column: 50, scope: !2073, inlinedAt: !2077)
!2102 = !DILocalVariable(name: "b", arg: 1, scope: !2103, file: !1817, line: 88, type: !2106)
!2103 = distinct !DISubprogram(name: "bytestream_get_le32", scope: !1817, file: !1817, line: 88, type: !2104, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!942, !2106}
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!2107 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !2108)
!2108 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !2112)
!2109 = distinct !DISubprogram(name: "bytestream2_get_le32u", scope: !1817, file: !1817, line: 88, type: !2110, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!942, !2076}
!2112 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !2115)
!2113 = !DILexicalBlockFile(scope: !2114, file: !1817, discriminator: 2)
!2114 = distinct !DISubprogram(name: "bytestream2_get_le32", scope: !1817, file: !1817, line: 88, type: !2110, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2115 = distinct !DILocation(line: 1780, column: 37, scope: !2060)
!2116 = !DILocalVariable(name: "g", arg: 1, scope: !2109, file: !1817, line: 88, type: !2076)
!2117 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !2112)
!2118 = !DILocalVariable(name: "g", arg: 1, scope: !2114, file: !1817, line: 88, type: !2076)
!2119 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !2115)
!2120 = !DILocation(line: 127, column: 87, scope: !2066, inlinedAt: !2121)
!2121 = distinct !DILocation(line: 219, column: 18, scope: !2072, inlinedAt: !2122)
!2122 = distinct !DILocation(line: 1782, column: 9, scope: !2048)
!2123 = !DILocation(line: 127, column: 94, scope: !2066, inlinedAt: !2121)
!2124 = !DILocation(line: 127, column: 104, scope: !2066, inlinedAt: !2121)
!2125 = !DILocation(line: 127, column: 87, scope: !2066, inlinedAt: !2126)
!2126 = distinct !DILocation(line: 223, column: 18, scope: !2072, inlinedAt: !2122)
!2127 = !DILocation(line: 127, column: 94, scope: !2066, inlinedAt: !2126)
!2128 = !DILocation(line: 127, column: 104, scope: !2066, inlinedAt: !2126)
!2129 = !DILocation(line: 188, column: 83, scope: !2087, inlinedAt: !2130)
!2130 = distinct !DILocation(line: 229, column: 12, scope: !2073, inlinedAt: !2122)
!2131 = !DILocation(line: 127, column: 87, scope: !2066, inlinedAt: !2132)
!2132 = distinct !DILocation(line: 214, column: 18, scope: !2072, inlinedAt: !2122)
!2133 = !DILocation(line: 127, column: 94, scope: !2066, inlinedAt: !2132)
!2134 = !DILocation(line: 127, column: 104, scope: !2066, inlinedAt: !2132)
!2135 = !DILocation(line: 208, column: 83, scope: !2073, inlinedAt: !2122)
!2136 = !DILocation(line: 209, column: 50, scope: !2073, inlinedAt: !2122)
!2137 = !DILocation(line: 210, column: 50, scope: !2073, inlinedAt: !2122)
!2138 = !DILocation(line: 188, column: 83, scope: !2087, inlinedAt: !2139)
!2139 = distinct !DILocation(line: 1770, column: 30, scope: !2048)
!2140 = !DILocalVariable(name: "g", arg: 1, scope: !2141, file: !1817, line: 87, type: !2076)
!2141 = distinct !DISubprogram(name: "bytestream2_peek_le64", scope: !1817, file: !1817, line: 87, type: !2142, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!955, !2076}
!2144 = !DILocation(line: 87, column: 1182, scope: !2141, inlinedAt: !2145)
!2145 = distinct !DILocation(line: 1767, column: 24, scope: !2146)
!2146 = !DILexicalBlockFile(scope: !2049, file: !910, discriminator: 1)
!2147 = !DILocalVariable(name: "g", arg: 1, scope: !2148, file: !1817, line: 154, type: !2076)
!2148 = distinct !DISubprogram(name: "bytestream2_get_bytes_left", scope: !1817, file: !1817, line: 154, type: !2110, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2149 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !2150)
!2150 = distinct !DILocation(line: 1763, column: 9, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1763, column: 9)
!2152 = !DILocalVariable(name: "g", arg: 1, scope: !2153, file: !1817, line: 133, type: !2076)
!2153 = distinct !DISubprogram(name: "bytestream2_init", scope: !1817, file: !1817, line: 133, type: !2154, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{null, !2076, !944, !941}
!2156 = !DILocation(line: 133, column: 84, scope: !2153, inlinedAt: !2157)
!2157 = distinct !DILocation(line: 1682, column: 5, scope: !2033)
!2158 = !DILocalVariable(name: "buf", arg: 2, scope: !2153, file: !1817, line: 134, type: !944)
!2159 = !DILocation(line: 134, column: 62, scope: !2153, inlinedAt: !2157)
!2160 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2153, file: !1817, line: 135, type: !941)
!2161 = !DILocation(line: 135, column: 51, scope: !2153, inlinedAt: !2157)
!2162 = !DILocalVariable(name: "avctx", arg: 1, scope: !2033, file: !910, line: 1667, type: !1101)
!2163 = !DILocation(line: 1667, column: 41, scope: !2033)
!2164 = !DILocalVariable(name: "data", arg: 2, scope: !2033, file: !910, line: 1667, type: !943)
!2165 = !DILocation(line: 1667, column: 54, scope: !2033)
!2166 = !DILocalVariable(name: "got_frame", arg: 3, scope: !2033, file: !910, line: 1668, type: !1393)
!2167 = !DILocation(line: 1668, column: 30, scope: !2033)
!2168 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2033, file: !910, line: 1668, type: !1247)
!2169 = !DILocation(line: 1668, column: 51, scope: !2033)
!2170 = !DILocalVariable(name: "s", scope: !2033, file: !910, line: 1670, type: !1744)
!2171 = !DILocation(line: 1670, column: 17, scope: !2033)
!2172 = !DILocation(line: 1670, column: 21, scope: !2033)
!2173 = !DILocation(line: 1670, column: 28, scope: !2033)
!2174 = !DILocalVariable(name: "frame", scope: !2033, file: !910, line: 1671, type: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !2176, line: 40, baseType: !2177)
!2176 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !2176, line: 34, size: 256, align: 64, elements: !2178)
!2178 = !{!2179, !2180, !2184}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2177, file: !2176, line: 35, baseType: !1123, size: 64, align: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2177, file: !2176, line: 36, baseType: !2181, size: 128, align: 64, offset: 64)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 128, align: 64, elements: !2182)
!2182 = !{!2183}
!2183 = !DISubrange(count: 2)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2177, file: !2176, line: 39, baseType: !1161, size: 64, align: 64, offset: 192)
!2185 = !DILocation(line: 1671, column: 17, scope: !2033)
!2186 = !DILocation(line: 1671, column: 25, scope: !2033)
!2187 = !DILocation(line: 1671, column: 32, scope: !2033)
!2188 = !DILocalVariable(name: "picture", scope: !2033, file: !910, line: 1672, type: !1123)
!2189 = !DILocation(line: 1672, column: 14, scope: !2033)
!2190 = !DILocation(line: 1672, column: 24, scope: !2033)
!2191 = !DILocalVariable(name: "ptr", scope: !2033, file: !910, line: 1673, type: !1129)
!2192 = !DILocation(line: 1673, column: 14, scope: !2033)
!2193 = !DILocalVariable(name: "y", scope: !2033, file: !910, line: 1675, type: !941)
!2194 = !DILocation(line: 1675, column: 9, scope: !2033)
!2195 = !DILocalVariable(name: "ret", scope: !2033, file: !910, line: 1675, type: !941)
!2196 = !DILocation(line: 1675, column: 12, scope: !2033)
!2197 = !DILocalVariable(name: "out_line_size", scope: !2033, file: !910, line: 1676, type: !941)
!2198 = !DILocation(line: 1676, column: 9, scope: !2033)
!2199 = !DILocalVariable(name: "nb_blocks", scope: !2033, file: !910, line: 1677, type: !941)
!2200 = !DILocation(line: 1677, column: 9, scope: !2033)
!2201 = !DILocalVariable(name: "start_offset_table", scope: !2033, file: !910, line: 1678, type: !955)
!2202 = !DILocation(line: 1678, column: 14, scope: !2033)
!2203 = !DILocalVariable(name: "start_next_scanline", scope: !2033, file: !910, line: 1679, type: !955)
!2204 = !DILocation(line: 1679, column: 14, scope: !2033)
!2205 = !DILocalVariable(name: "offset_table_writer", scope: !2033, file: !910, line: 1680, type: !2039)
!2206 = !DILocation(line: 1680, column: 20, scope: !2033)
!2207 = !DILocation(line: 1682, column: 23, scope: !2033)
!2208 = !DILocation(line: 1682, column: 26, scope: !2033)
!2209 = !DILocation(line: 1682, column: 30, scope: !2033)
!2210 = !DILocation(line: 1682, column: 37, scope: !2033)
!2211 = !DILocation(line: 1682, column: 43, scope: !2033)
!2212 = !DILocation(line: 1682, column: 50, scope: !2033)
!2213 = !DILocation(line: 1682, column: 5, scope: !2033)
!2214 = !DILocation(line: 137, column: 16, scope: !2215, inlinedAt: !2157)
!2215 = !DILexicalBlockFile(scope: !2216, file: !1817, discriminator: 1)
!2216 = distinct !DILexicalBlock(scope: !2217, file: !1817, line: 137, column: 14)
!2217 = distinct !DILexicalBlock(scope: !2153, file: !1817, line: 137, column: 8)
!2218 = !DILocation(line: 137, column: 25, scope: !2215, inlinedAt: !2157)
!2219 = !DILocation(line: 137, column: 14, scope: !2215, inlinedAt: !2157)
!2220 = !DILocation(line: 137, column: 34, scope: !2221, inlinedAt: !2157)
!2221 = !DILexicalBlockFile(scope: !2222, file: !1817, discriminator: 2)
!2222 = distinct !DILexicalBlock(scope: !2216, file: !1817, line: 137, column: 32)
!2223 = !DILocation(line: 137, column: 93, scope: !2224, inlinedAt: !2157)
!2224 = !DILexicalBlockFile(scope: !2221, file: !1817, discriminator: 4)
!2225 = !DILocation(line: 137, column: 93, scope: !2221, inlinedAt: !2157)
!2226 = !DILocation(line: 138, column: 17, scope: !2153, inlinedAt: !2157)
!2227 = !DILocation(line: 138, column: 5, scope: !2153, inlinedAt: !2157)
!2228 = !DILocation(line: 138, column: 8, scope: !2153, inlinedAt: !2157)
!2229 = !DILocation(line: 138, column: 15, scope: !2153, inlinedAt: !2157)
!2230 = !DILocation(line: 139, column: 23, scope: !2153, inlinedAt: !2157)
!2231 = !DILocation(line: 139, column: 5, scope: !2153, inlinedAt: !2157)
!2232 = !DILocation(line: 139, column: 8, scope: !2153, inlinedAt: !2157)
!2233 = !DILocation(line: 139, column: 21, scope: !2153, inlinedAt: !2157)
!2234 = !DILocation(line: 140, column: 21, scope: !2153, inlinedAt: !2157)
!2235 = !DILocation(line: 140, column: 27, scope: !2153, inlinedAt: !2157)
!2236 = !DILocation(line: 140, column: 25, scope: !2153, inlinedAt: !2157)
!2237 = !DILocation(line: 140, column: 5, scope: !2153, inlinedAt: !2157)
!2238 = !DILocation(line: 140, column: 8, scope: !2153, inlinedAt: !2157)
!2239 = !DILocation(line: 140, column: 19, scope: !2153, inlinedAt: !2157)
!2240 = !DILocation(line: 1684, column: 30, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1684, column: 9)
!2242 = !DILocation(line: 1684, column: 33, scope: !2241)
!2243 = !DILocation(line: 1684, column: 16, scope: !2241)
!2244 = !DILocation(line: 1684, column: 14, scope: !2241)
!2245 = !DILocation(line: 1684, column: 43, scope: !2241)
!2246 = !DILocation(line: 1684, column: 9, scope: !2033)
!2247 = !DILocation(line: 1685, column: 16, scope: !2241)
!2248 = !DILocation(line: 1685, column: 9, scope: !2241)
!2249 = !DILocation(line: 1687, column: 13, scope: !2033)
!2250 = !DILocation(line: 1687, column: 16, scope: !2033)
!2251 = !DILocation(line: 1687, column: 5, scope: !2033)
!2252 = !DILocation(line: 1691, column: 13, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2254, file: !910, line: 1691, column: 13)
!2254 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1687, column: 28)
!2255 = !DILocation(line: 1691, column: 16, scope: !2253)
!2256 = !DILocation(line: 1691, column: 35, scope: !2253)
!2257 = !DILocation(line: 1691, column: 13, scope: !2254)
!2258 = !DILocation(line: 1692, column: 18, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !910, line: 1692, column: 17)
!2260 = distinct !DILexicalBlock(scope: !2253, file: !910, line: 1691, column: 41)
!2261 = !DILocation(line: 1692, column: 21, scope: !2259)
!2262 = !DILocation(line: 1692, column: 17, scope: !2260)
!2263 = !DILocation(line: 1693, column: 17, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2259, file: !910, line: 1692, column: 30)
!2265 = !DILocation(line: 1693, column: 24, scope: !2264)
!2266 = !DILocation(line: 1693, column: 32, scope: !2264)
!2267 = !DILocation(line: 1694, column: 13, scope: !2264)
!2268 = !DILocation(line: 1695, column: 17, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2259, file: !910, line: 1694, column: 20)
!2270 = !DILocation(line: 1695, column: 24, scope: !2269)
!2271 = !DILocation(line: 1695, column: 32, scope: !2269)
!2272 = !DILocation(line: 1697, column: 9, scope: !2260)
!2273 = !DILocation(line: 1698, column: 18, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2275, file: !910, line: 1698, column: 17)
!2275 = distinct !DILexicalBlock(scope: !2253, file: !910, line: 1697, column: 16)
!2276 = !DILocation(line: 1698, column: 21, scope: !2274)
!2277 = !DILocation(line: 1698, column: 17, scope: !2275)
!2278 = !DILocation(line: 1699, column: 17, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2274, file: !910, line: 1698, column: 30)
!2280 = !DILocation(line: 1699, column: 24, scope: !2279)
!2281 = !DILocation(line: 1699, column: 32, scope: !2279)
!2282 = !DILocation(line: 1700, column: 13, scope: !2279)
!2283 = !DILocation(line: 1701, column: 17, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2274, file: !910, line: 1700, column: 20)
!2285 = !DILocation(line: 1701, column: 24, scope: !2284)
!2286 = !DILocation(line: 1701, column: 32, scope: !2284)
!2287 = !DILocation(line: 1704, column: 9, scope: !2254)
!2288 = !DILocation(line: 1706, column: 16, scope: !2254)
!2289 = !DILocation(line: 1706, column: 9, scope: !2254)
!2290 = !DILocation(line: 1707, column: 9, scope: !2254)
!2291 = !DILocation(line: 1710, column: 9, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1710, column: 9)
!2293 = !DILocation(line: 1710, column: 12, scope: !2292)
!2294 = !DILocation(line: 1710, column: 27, scope: !2292)
!2295 = !DILocation(line: 1710, column: 9, scope: !2033)
!2296 = !DILocation(line: 1711, column: 28, scope: !2292)
!2297 = !DILocation(line: 1711, column: 31, scope: !2292)
!2298 = !DILocation(line: 1711, column: 9, scope: !2292)
!2299 = !DILocation(line: 1711, column: 16, scope: !2292)
!2300 = !DILocation(line: 1711, column: 26, scope: !2292)
!2301 = !DILocation(line: 1713, column: 13, scope: !2033)
!2302 = !DILocation(line: 1713, column: 16, scope: !2033)
!2303 = !DILocation(line: 1713, column: 5, scope: !2033)
!2304 = !DILocation(line: 1717, column: 9, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1713, column: 29)
!2306 = !DILocation(line: 1717, column: 12, scope: !2305)
!2307 = !DILocation(line: 1717, column: 33, scope: !2305)
!2308 = !DILocation(line: 1718, column: 9, scope: !2305)
!2309 = !DILocation(line: 1721, column: 9, scope: !2305)
!2310 = !DILocation(line: 1721, column: 12, scope: !2305)
!2311 = !DILocation(line: 1721, column: 33, scope: !2305)
!2312 = !DILocation(line: 1722, column: 9, scope: !2305)
!2313 = !DILocation(line: 1726, column: 9, scope: !2305)
!2314 = !DILocation(line: 1726, column: 12, scope: !2305)
!2315 = !DILocation(line: 1726, column: 33, scope: !2305)
!2316 = !DILocation(line: 1727, column: 9, scope: !2305)
!2317 = !DILocation(line: 1729, column: 39, scope: !2305)
!2318 = !DILocation(line: 1729, column: 64, scope: !2305)
!2319 = !DILocation(line: 1729, column: 67, scope: !2305)
!2320 = !DILocation(line: 1729, column: 9, scope: !2305)
!2321 = !DILocation(line: 1730, column: 9, scope: !2305)
!2322 = !DILocation(line: 1735, column: 9, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1735, column: 9)
!2324 = !DILocation(line: 1735, column: 12, scope: !2323)
!2325 = !DILocation(line: 1735, column: 19, scope: !2323)
!2326 = !DILocation(line: 1735, column: 22, scope: !2323)
!2327 = !DILocation(line: 1735, column: 17, scope: !2323)
!2328 = !DILocation(line: 1735, column: 27, scope: !2323)
!2329 = !DILocation(line: 1736, column: 9, scope: !2323)
!2330 = !DILocation(line: 1736, column: 12, scope: !2323)
!2331 = !DILocation(line: 1736, column: 19, scope: !2323)
!2332 = !DILocation(line: 1736, column: 22, scope: !2323)
!2333 = !DILocation(line: 1736, column: 17, scope: !2323)
!2334 = !DILocation(line: 1736, column: 27, scope: !2323)
!2335 = !DILocation(line: 1737, column: 9, scope: !2323)
!2336 = !DILocation(line: 1737, column: 12, scope: !2323)
!2337 = !DILocation(line: 1737, column: 22, scope: !2323)
!2338 = !DILocation(line: 1737, column: 25, scope: !2323)
!2339 = !DILocation(line: 1737, column: 32, scope: !2323)
!2340 = !DILocation(line: 1737, column: 35, scope: !2323)
!2341 = !DILocation(line: 1737, column: 30, scope: !2323)
!2342 = !DILocation(line: 1737, column: 40, scope: !2323)
!2343 = !DILocation(line: 1737, column: 19, scope: !2323)
!2344 = !DILocation(line: 1737, column: 44, scope: !2323)
!2345 = !DILocation(line: 1738, column: 9, scope: !2323)
!2346 = !DILocation(line: 1738, column: 12, scope: !2323)
!2347 = !DILocation(line: 1738, column: 20, scope: !2323)
!2348 = !DILocation(line: 1738, column: 23, scope: !2323)
!2349 = !DILocation(line: 1738, column: 17, scope: !2323)
!2350 = !DILocation(line: 1738, column: 25, scope: !2323)
!2351 = !DILocation(line: 1739, column: 9, scope: !2323)
!2352 = !DILocation(line: 1739, column: 12, scope: !2323)
!2353 = !DILocation(line: 1739, column: 20, scope: !2323)
!2354 = !DILocation(line: 1739, column: 23, scope: !2323)
!2355 = !DILocation(line: 1739, column: 17, scope: !2323)
!2356 = !DILocation(line: 1735, column: 9, scope: !2357)
!2357 = !DILexicalBlockFile(scope: !2033, file: !910, discriminator: 1)
!2358 = !DILocation(line: 1740, column: 16, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2323, file: !910, line: 1739, column: 26)
!2360 = !DILocation(line: 1740, column: 9, scope: !2359)
!2361 = !DILocation(line: 1741, column: 9, scope: !2359)
!2362 = !DILocation(line: 1744, column: 34, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1744, column: 9)
!2364 = !DILocation(line: 1744, column: 41, scope: !2363)
!2365 = !DILocation(line: 1744, column: 44, scope: !2363)
!2366 = !DILocation(line: 1744, column: 47, scope: !2363)
!2367 = !DILocation(line: 1744, column: 50, scope: !2363)
!2368 = !DILocation(line: 1744, column: 16, scope: !2363)
!2369 = !DILocation(line: 1744, column: 14, scope: !2363)
!2370 = !DILocation(line: 1744, column: 54, scope: !2363)
!2371 = !DILocation(line: 1744, column: 9, scope: !2033)
!2372 = !DILocation(line: 1745, column: 16, scope: !2363)
!2373 = !DILocation(line: 1745, column: 9, scope: !2363)
!2374 = !DILocation(line: 1747, column: 35, scope: !2033)
!2375 = !DILocation(line: 1747, column: 42, scope: !2033)
!2376 = !DILocation(line: 1747, column: 15, scope: !2033)
!2377 = !DILocation(line: 1747, column: 5, scope: !2033)
!2378 = !DILocation(line: 1747, column: 8, scope: !2033)
!2379 = !DILocation(line: 1747, column: 13, scope: !2033)
!2380 = !DILocation(line: 1748, column: 10, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1748, column: 9)
!2382 = !DILocation(line: 1748, column: 13, scope: !2381)
!2383 = !DILocation(line: 1748, column: 9, scope: !2033)
!2384 = !DILocation(line: 1749, column: 9, scope: !2381)
!2385 = !DILocation(line: 1750, column: 21, scope: !2033)
!2386 = !DILocation(line: 1750, column: 28, scope: !2033)
!2387 = !DILocation(line: 1750, column: 34, scope: !2033)
!2388 = !DILocation(line: 1750, column: 40, scope: !2033)
!2389 = !DILocation(line: 1750, column: 43, scope: !2033)
!2390 = !DILocation(line: 1750, column: 49, scope: !2033)
!2391 = !DILocation(line: 1750, column: 38, scope: !2033)
!2392 = !DILocation(line: 1750, column: 19, scope: !2033)
!2393 = !DILocation(line: 1752, column: 9, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1752, column: 9)
!2395 = !DILocation(line: 1752, column: 12, scope: !2394)
!2396 = !DILocation(line: 1752, column: 9, scope: !2033)
!2397 = !DILocation(line: 1753, column: 23, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2394, file: !910, line: 1752, column: 21)
!2399 = !DILocation(line: 1753, column: 26, scope: !2398)
!2400 = !DILocation(line: 1753, column: 35, scope: !2398)
!2401 = !DILocation(line: 1753, column: 38, scope: !2398)
!2402 = !DILocation(line: 1753, column: 48, scope: !2398)
!2403 = !DILocation(line: 1753, column: 33, scope: !2398)
!2404 = !DILocation(line: 1753, column: 54, scope: !2398)
!2405 = !DILocation(line: 1753, column: 61, scope: !2398)
!2406 = !DILocation(line: 1753, column: 64, scope: !2398)
!2407 = !DILocation(line: 1753, column: 74, scope: !2398)
!2408 = !DILocation(line: 1753, column: 59, scope: !2398)
!2409 = !DILocation(line: 1754, column: 11, scope: !2398)
!2410 = !DILocation(line: 1754, column: 14, scope: !2398)
!2411 = !DILocation(line: 1754, column: 23, scope: !2398)
!2412 = !DILocation(line: 1754, column: 26, scope: !2398)
!2413 = !DILocation(line: 1754, column: 36, scope: !2398)
!2414 = !DILocation(line: 1754, column: 21, scope: !2398)
!2415 = !DILocation(line: 1754, column: 42, scope: !2398)
!2416 = !DILocation(line: 1754, column: 49, scope: !2398)
!2417 = !DILocation(line: 1754, column: 52, scope: !2398)
!2418 = !DILocation(line: 1754, column: 62, scope: !2398)
!2419 = !DILocation(line: 1754, column: 47, scope: !2398)
!2420 = !DILocation(line: 1753, column: 81, scope: !2398)
!2421 = !DILocation(line: 1753, column: 19, scope: !2398)
!2422 = !DILocation(line: 1755, column: 5, scope: !2398)
!2423 = !DILocation(line: 1756, column: 22, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2394, file: !910, line: 1755, column: 12)
!2425 = !DILocation(line: 1756, column: 25, scope: !2424)
!2426 = !DILocation(line: 1756, column: 34, scope: !2424)
!2427 = !DILocation(line: 1756, column: 37, scope: !2424)
!2428 = !DILocation(line: 1756, column: 32, scope: !2424)
!2429 = !DILocation(line: 1756, column: 58, scope: !2424)
!2430 = !DILocation(line: 1757, column: 9, scope: !2424)
!2431 = !DILocation(line: 1757, column: 12, scope: !2424)
!2432 = !DILocation(line: 1756, column: 63, scope: !2424)
!2433 = !DILocation(line: 1756, column: 19, scope: !2424)
!2434 = !DILocation(line: 1760, column: 37, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1760, column: 9)
!2436 = !DILocation(line: 1760, column: 16, scope: !2435)
!2437 = !DILocation(line: 1760, column: 14, scope: !2435)
!2438 = !DILocation(line: 1760, column: 56, scope: !2435)
!2439 = !DILocation(line: 1760, column: 9, scope: !2033)
!2440 = !DILocation(line: 1761, column: 16, scope: !2435)
!2441 = !DILocation(line: 1761, column: 9, scope: !2435)
!2442 = !DILocation(line: 1763, column: 37, scope: !2151)
!2443 = !DILocation(line: 1763, column: 40, scope: !2151)
!2444 = !DILocation(line: 1763, column: 9, scope: !2151)
!2445 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !2150)
!2446 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !2150)
!2447 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !2150)
!2448 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !2150)
!2449 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !2150)
!2450 = !DILocation(line: 1763, column: 46, scope: !2151)
!2451 = !DILocation(line: 1763, column: 56, scope: !2151)
!2452 = !DILocation(line: 1763, column: 44, scope: !2151)
!2453 = !DILocation(line: 1763, column: 9, scope: !2033)
!2454 = !DILocation(line: 1764, column: 9, scope: !2151)
!2455 = !DILocation(line: 1767, column: 10, scope: !2049)
!2456 = !DILocation(line: 1767, column: 13, scope: !2049)
!2457 = !DILocation(line: 1767, column: 21, scope: !2049)
!2458 = !DILocation(line: 1767, column: 47, scope: !2146)
!2459 = !DILocation(line: 1767, column: 50, scope: !2146)
!2460 = !DILocation(line: 1767, column: 24, scope: !2146)
!2461 = !DILocation(line: 87, column: 1191, scope: !2462, inlinedAt: !2145)
!2462 = distinct !DILexicalBlock(scope: !2141, file: !1817, line: 87, column: 1191)
!2463 = !DILocation(line: 87, column: 1194, scope: !2462, inlinedAt: !2145)
!2464 = !DILocation(line: 87, column: 1207, scope: !2462, inlinedAt: !2145)
!2465 = !DILocation(line: 87, column: 1210, scope: !2462, inlinedAt: !2145)
!2466 = !DILocation(line: 87, column: 1205, scope: !2462, inlinedAt: !2145)
!2467 = !DILocation(line: 87, column: 1217, scope: !2462, inlinedAt: !2145)
!2468 = !DILocation(line: 87, column: 1191, scope: !2141, inlinedAt: !2145)
!2469 = !DILocation(line: 87, column: 1222, scope: !2470, inlinedAt: !2145)
!2470 = !DILexicalBlockFile(scope: !2462, file: !1817, discriminator: 1)
!2471 = !DILocation(line: 87, column: 1271, scope: !2472, inlinedAt: !2145)
!2472 = !DILexicalBlockFile(scope: !2141, file: !1817, discriminator: 2)
!2473 = !DILocation(line: 87, column: 1274, scope: !2472, inlinedAt: !2145)
!2474 = !DILocation(line: 87, column: 1284, scope: !2472, inlinedAt: !2145)
!2475 = !DILocation(line: 87, column: 1232, scope: !2472, inlinedAt: !2145)
!2476 = !DILocation(line: 87, column: 1288, scope: !2477, inlinedAt: !2145)
!2477 = !DILexicalBlockFile(scope: !2141, file: !1817, discriminator: 3)
!2478 = !DILocation(line: 1767, column: 54, scope: !2146)
!2479 = !DILocation(line: 1767, column: 9, scope: !2146)
!2480 = !DILocation(line: 1768, column: 16, scope: !2048)
!2481 = !DILocation(line: 1768, column: 19, scope: !2048)
!2482 = !DILocation(line: 1768, column: 9, scope: !2048)
!2483 = !DILocation(line: 1770, column: 48, scope: !2048)
!2484 = !DILocation(line: 1770, column: 51, scope: !2048)
!2485 = !DILocation(line: 1770, column: 30, scope: !2048)
!2486 = !DILocation(line: 190, column: 18, scope: !2087, inlinedAt: !2139)
!2487 = !DILocation(line: 190, column: 21, scope: !2087, inlinedAt: !2139)
!2488 = !DILocation(line: 190, column: 30, scope: !2087, inlinedAt: !2139)
!2489 = !DILocation(line: 190, column: 33, scope: !2087, inlinedAt: !2139)
!2490 = !DILocation(line: 190, column: 28, scope: !2087, inlinedAt: !2139)
!2491 = !DILocation(line: 190, column: 12, scope: !2087, inlinedAt: !2139)
!2492 = !DILocation(line: 1770, column: 28, scope: !2048)
!2493 = !DILocation(line: 1771, column: 31, scope: !2048)
!2494 = !DILocation(line: 1771, column: 52, scope: !2048)
!2495 = !DILocation(line: 1771, column: 62, scope: !2048)
!2496 = !DILocation(line: 1771, column: 50, scope: !2048)
!2497 = !DILocation(line: 1771, column: 29, scope: !2048)
!2498 = !DILocation(line: 1772, column: 68, scope: !2048)
!2499 = !DILocation(line: 1772, column: 56, scope: !2048)
!2500 = !DILocation(line: 1772, column: 63, scope: !2048)
!2501 = !DILocation(line: 1772, column: 89, scope: !2048)
!2502 = !DILocation(line: 1772, column: 99, scope: !2048)
!2503 = !DILocation(line: 1772, column: 9, scope: !2048)
!2504 = !DILocation(line: 147, column: 16, scope: !2505, inlinedAt: !2047)
!2505 = !DILexicalBlockFile(scope: !2506, file: !1817, discriminator: 1)
!2506 = distinct !DILexicalBlock(scope: !2507, file: !1817, line: 147, column: 14)
!2507 = distinct !DILexicalBlock(scope: !2035, file: !1817, line: 147, column: 8)
!2508 = !DILocation(line: 147, column: 25, scope: !2505, inlinedAt: !2047)
!2509 = !DILocation(line: 147, column: 14, scope: !2505, inlinedAt: !2047)
!2510 = !DILocation(line: 147, column: 34, scope: !2511, inlinedAt: !2047)
!2511 = !DILexicalBlockFile(scope: !2512, file: !1817, discriminator: 2)
!2512 = distinct !DILexicalBlock(scope: !2506, file: !1817, line: 147, column: 32)
!2513 = !DILocation(line: 147, column: 93, scope: !2514, inlinedAt: !2047)
!2514 = !DILexicalBlockFile(scope: !2511, file: !1817, discriminator: 4)
!2515 = !DILocation(line: 147, column: 93, scope: !2511, inlinedAt: !2047)
!2516 = !DILocation(line: 148, column: 17, scope: !2035, inlinedAt: !2047)
!2517 = !DILocation(line: 148, column: 5, scope: !2035, inlinedAt: !2047)
!2518 = !DILocation(line: 148, column: 8, scope: !2035, inlinedAt: !2047)
!2519 = !DILocation(line: 148, column: 15, scope: !2035, inlinedAt: !2047)
!2520 = !DILocation(line: 149, column: 23, scope: !2035, inlinedAt: !2047)
!2521 = !DILocation(line: 149, column: 5, scope: !2035, inlinedAt: !2047)
!2522 = !DILocation(line: 149, column: 8, scope: !2035, inlinedAt: !2047)
!2523 = !DILocation(line: 149, column: 21, scope: !2035, inlinedAt: !2047)
!2524 = !DILocation(line: 150, column: 21, scope: !2035, inlinedAt: !2047)
!2525 = !DILocation(line: 150, column: 27, scope: !2035, inlinedAt: !2047)
!2526 = !DILocation(line: 150, column: 25, scope: !2035, inlinedAt: !2047)
!2527 = !DILocation(line: 150, column: 5, scope: !2035, inlinedAt: !2047)
!2528 = !DILocation(line: 150, column: 8, scope: !2035, inlinedAt: !2047)
!2529 = !DILocation(line: 150, column: 19, scope: !2035, inlinedAt: !2047)
!2530 = !DILocation(line: 151, column: 5, scope: !2035, inlinedAt: !2047)
!2531 = !DILocation(line: 151, column: 8, scope: !2035, inlinedAt: !2047)
!2532 = !DILocation(line: 151, column: 12, scope: !2035, inlinedAt: !2047)
!2533 = !DILocation(line: 1774, column: 16, scope: !2062)
!2534 = !DILocation(line: 1774, column: 14, scope: !2062)
!2535 = !DILocation(line: 1774, column: 21, scope: !2536)
!2536 = !DILexicalBlockFile(scope: !2061, file: !910, discriminator: 1)
!2537 = !DILocation(line: 1774, column: 25, scope: !2536)
!2538 = !DILocation(line: 1774, column: 23, scope: !2536)
!2539 = !DILocation(line: 1774, column: 9, scope: !2536)
!2540 = !DILocation(line: 1776, column: 56, scope: !2060)
!2541 = !DILocation(line: 1776, column: 13, scope: !2060)
!2542 = !DILocation(line: 87, column: 606, scope: !2543, inlinedAt: !2059)
!2543 = distinct !DILexicalBlock(scope: !2055, file: !1817, line: 87, column: 605)
!2544 = !DILocation(line: 87, column: 609, scope: !2543, inlinedAt: !2059)
!2545 = !DILocation(line: 87, column: 613, scope: !2543, inlinedAt: !2059)
!2546 = !DILocation(line: 87, column: 617, scope: !2547, inlinedAt: !2059)
!2547 = !DILexicalBlockFile(scope: !2543, file: !1817, discriminator: 1)
!2548 = !DILocation(line: 87, column: 620, scope: !2547, inlinedAt: !2059)
!2549 = !DILocation(line: 87, column: 633, scope: !2547, inlinedAt: !2059)
!2550 = !DILocation(line: 87, column: 636, scope: !2547, inlinedAt: !2059)
!2551 = !DILocation(line: 87, column: 631, scope: !2547, inlinedAt: !2059)
!2552 = !DILocation(line: 87, column: 643, scope: !2547, inlinedAt: !2059)
!2553 = !DILocation(line: 87, column: 605, scope: !2547, inlinedAt: !2059)
!2554 = !DILocation(line: 87, column: 698, scope: !2555, inlinedAt: !2059)
!2555 = !DILexicalBlockFile(scope: !2556, file: !1817, discriminator: 2)
!2556 = distinct !DILexicalBlock(scope: !2543, file: !1817, line: 87, column: 650)
!2557 = !DILocation(line: 87, column: 679, scope: !2555, inlinedAt: !2059)
!2558 = !DILocation(line: 87, column: 682, scope: !2555, inlinedAt: !2059)
!2559 = !DILocation(line: 87, column: 692, scope: !2555, inlinedAt: !2059)
!2560 = !DILocation(line: 87, column: 695, scope: !2555, inlinedAt: !2059)
!2561 = !DILocation(line: 87, column: 707, scope: !2555, inlinedAt: !2059)
!2562 = !DILocation(line: 87, column: 710, scope: !2555, inlinedAt: !2059)
!2563 = !DILocation(line: 87, column: 717, scope: !2555, inlinedAt: !2059)
!2564 = !DILocation(line: 87, column: 723, scope: !2555, inlinedAt: !2059)
!2565 = !DILocation(line: 87, column: 730, scope: !2566, inlinedAt: !2059)
!2566 = !DILexicalBlockFile(scope: !2543, file: !1817, discriminator: 3)
!2567 = !DILocation(line: 87, column: 733, scope: !2566, inlinedAt: !2059)
!2568 = !DILocation(line: 87, column: 737, scope: !2566, inlinedAt: !2059)
!2569 = !DILocation(line: 1779, column: 31, scope: !2060)
!2570 = !DILocation(line: 1779, column: 34, scope: !2060)
!2571 = !DILocation(line: 1779, column: 38, scope: !2060)
!2572 = !DILocation(line: 1779, column: 58, scope: !2060)
!2573 = !DILocation(line: 1779, column: 13, scope: !2060)
!2574 = !DILocation(line: 212, column: 13, scope: !2073, inlinedAt: !2077)
!2575 = !DILocation(line: 212, column: 5, scope: !2073, inlinedAt: !2077)
!2576 = !DILocation(line: 214, column: 28, scope: !2072, inlinedAt: !2077)
!2577 = !DILocation(line: 214, column: 38, scope: !2072, inlinedAt: !2077)
!2578 = !DILocation(line: 214, column: 41, scope: !2072, inlinedAt: !2077)
!2579 = !DILocation(line: 214, column: 50, scope: !2072, inlinedAt: !2077)
!2580 = !DILocation(line: 214, column: 53, scope: !2072, inlinedAt: !2077)
!2581 = !DILocation(line: 214, column: 48, scope: !2072, inlinedAt: !2077)
!2582 = !DILocation(line: 214, column: 36, scope: !2072, inlinedAt: !2077)
!2583 = !DILocation(line: 215, column: 30, scope: !2072, inlinedAt: !2077)
!2584 = !DILocation(line: 215, column: 33, scope: !2072, inlinedAt: !2077)
!2585 = !DILocation(line: 215, column: 46, scope: !2072, inlinedAt: !2077)
!2586 = !DILocation(line: 215, column: 49, scope: !2072, inlinedAt: !2077)
!2587 = !DILocation(line: 215, column: 44, scope: !2072, inlinedAt: !2077)
!2588 = !DILocation(line: 214, column: 18, scope: !2072, inlinedAt: !2077)
!2589 = !DILocation(line: 132, column: 9, scope: !2590, inlinedAt: !2093)
!2590 = distinct !DILexicalBlock(scope: !2066, file: !2067, line: 132, column: 9)
!2591 = !DILocation(line: 132, column: 13, scope: !2590, inlinedAt: !2093)
!2592 = !DILocation(line: 132, column: 11, scope: !2590, inlinedAt: !2093)
!2593 = !DILocation(line: 132, column: 9, scope: !2066, inlinedAt: !2093)
!2594 = !DILocation(line: 132, column: 26, scope: !2595, inlinedAt: !2093)
!2595 = !DILexicalBlockFile(scope: !2590, file: !2067, discriminator: 1)
!2596 = !DILocation(line: 132, column: 19, scope: !2595, inlinedAt: !2093)
!2597 = !DILocation(line: 133, column: 14, scope: !2598, inlinedAt: !2093)
!2598 = distinct !DILexicalBlock(scope: !2590, file: !2067, line: 133, column: 14)
!2599 = !DILocation(line: 133, column: 18, scope: !2598, inlinedAt: !2093)
!2600 = !DILocation(line: 133, column: 16, scope: !2598, inlinedAt: !2093)
!2601 = !DILocation(line: 133, column: 14, scope: !2590, inlinedAt: !2093)
!2602 = !DILocation(line: 133, column: 31, scope: !2603, inlinedAt: !2093)
!2603 = !DILexicalBlockFile(scope: !2598, file: !2067, discriminator: 1)
!2604 = !DILocation(line: 133, column: 24, scope: !2603, inlinedAt: !2093)
!2605 = !DILocation(line: 134, column: 17, scope: !2598, inlinedAt: !2093)
!2606 = !DILocation(line: 134, column: 10, scope: !2598, inlinedAt: !2093)
!2607 = !DILocation(line: 135, column: 1, scope: !2066, inlinedAt: !2093)
!2608 = !DILocation(line: 214, column: 16, scope: !2072, inlinedAt: !2077)
!2609 = !DILocation(line: 216, column: 22, scope: !2072, inlinedAt: !2077)
!2610 = !DILocation(line: 216, column: 9, scope: !2072, inlinedAt: !2077)
!2611 = !DILocation(line: 216, column: 12, scope: !2072, inlinedAt: !2077)
!2612 = !DILocation(line: 216, column: 19, scope: !2072, inlinedAt: !2077)
!2613 = !DILocation(line: 217, column: 9, scope: !2072, inlinedAt: !2077)
!2614 = !DILocation(line: 219, column: 28, scope: !2072, inlinedAt: !2077)
!2615 = !DILocation(line: 219, column: 38, scope: !2072, inlinedAt: !2077)
!2616 = !DILocation(line: 219, column: 41, scope: !2072, inlinedAt: !2077)
!2617 = !DILocation(line: 219, column: 54, scope: !2072, inlinedAt: !2077)
!2618 = !DILocation(line: 219, column: 57, scope: !2072, inlinedAt: !2077)
!2619 = !DILocation(line: 219, column: 52, scope: !2072, inlinedAt: !2077)
!2620 = !DILocation(line: 219, column: 36, scope: !2072, inlinedAt: !2077)
!2621 = !DILocation(line: 219, column: 18, scope: !2072, inlinedAt: !2077)
!2622 = !DILocation(line: 132, column: 9, scope: !2590, inlinedAt: !2071)
!2623 = !DILocation(line: 132, column: 13, scope: !2590, inlinedAt: !2071)
!2624 = !DILocation(line: 132, column: 11, scope: !2590, inlinedAt: !2071)
!2625 = !DILocation(line: 132, column: 9, scope: !2066, inlinedAt: !2071)
!2626 = !DILocation(line: 132, column: 26, scope: !2595, inlinedAt: !2071)
!2627 = !DILocation(line: 132, column: 19, scope: !2595, inlinedAt: !2071)
!2628 = !DILocation(line: 133, column: 14, scope: !2598, inlinedAt: !2071)
!2629 = !DILocation(line: 133, column: 18, scope: !2598, inlinedAt: !2071)
!2630 = !DILocation(line: 133, column: 16, scope: !2598, inlinedAt: !2071)
!2631 = !DILocation(line: 133, column: 14, scope: !2590, inlinedAt: !2071)
!2632 = !DILocation(line: 133, column: 31, scope: !2603, inlinedAt: !2071)
!2633 = !DILocation(line: 133, column: 24, scope: !2603, inlinedAt: !2071)
!2634 = !DILocation(line: 134, column: 17, scope: !2598, inlinedAt: !2071)
!2635 = !DILocation(line: 134, column: 10, scope: !2598, inlinedAt: !2071)
!2636 = !DILocation(line: 135, column: 1, scope: !2066, inlinedAt: !2071)
!2637 = !DILocation(line: 219, column: 16, scope: !2072, inlinedAt: !2077)
!2638 = !DILocation(line: 220, column: 21, scope: !2072, inlinedAt: !2077)
!2639 = !DILocation(line: 220, column: 24, scope: !2072, inlinedAt: !2077)
!2640 = !DILocation(line: 220, column: 37, scope: !2072, inlinedAt: !2077)
!2641 = !DILocation(line: 220, column: 35, scope: !2072, inlinedAt: !2077)
!2642 = !DILocation(line: 220, column: 9, scope: !2072, inlinedAt: !2077)
!2643 = !DILocation(line: 220, column: 12, scope: !2072, inlinedAt: !2077)
!2644 = !DILocation(line: 220, column: 19, scope: !2072, inlinedAt: !2077)
!2645 = !DILocation(line: 221, column: 9, scope: !2072, inlinedAt: !2077)
!2646 = !DILocation(line: 223, column: 28, scope: !2072, inlinedAt: !2077)
!2647 = !DILocation(line: 223, column: 39, scope: !2072, inlinedAt: !2077)
!2648 = !DILocation(line: 223, column: 42, scope: !2072, inlinedAt: !2077)
!2649 = !DILocation(line: 223, column: 55, scope: !2072, inlinedAt: !2077)
!2650 = !DILocation(line: 223, column: 58, scope: !2072, inlinedAt: !2077)
!2651 = !DILocation(line: 223, column: 53, scope: !2072, inlinedAt: !2077)
!2652 = !DILocation(line: 223, column: 18, scope: !2072, inlinedAt: !2077)
!2653 = !DILocation(line: 132, column: 9, scope: !2590, inlinedAt: !2083)
!2654 = !DILocation(line: 132, column: 13, scope: !2590, inlinedAt: !2083)
!2655 = !DILocation(line: 132, column: 11, scope: !2590, inlinedAt: !2083)
!2656 = !DILocation(line: 132, column: 9, scope: !2066, inlinedAt: !2083)
!2657 = !DILocation(line: 132, column: 26, scope: !2595, inlinedAt: !2083)
!2658 = !DILocation(line: 132, column: 19, scope: !2595, inlinedAt: !2083)
!2659 = !DILocation(line: 133, column: 14, scope: !2598, inlinedAt: !2083)
!2660 = !DILocation(line: 133, column: 18, scope: !2598, inlinedAt: !2083)
!2661 = !DILocation(line: 133, column: 16, scope: !2598, inlinedAt: !2083)
!2662 = !DILocation(line: 133, column: 14, scope: !2590, inlinedAt: !2083)
!2663 = !DILocation(line: 133, column: 31, scope: !2603, inlinedAt: !2083)
!2664 = !DILocation(line: 133, column: 24, scope: !2603, inlinedAt: !2083)
!2665 = !DILocation(line: 134, column: 17, scope: !2598, inlinedAt: !2083)
!2666 = !DILocation(line: 134, column: 10, scope: !2598, inlinedAt: !2083)
!2667 = !DILocation(line: 135, column: 1, scope: !2066, inlinedAt: !2083)
!2668 = !DILocation(line: 223, column: 16, scope: !2072, inlinedAt: !2077)
!2669 = !DILocation(line: 224, column: 21, scope: !2072, inlinedAt: !2077)
!2670 = !DILocation(line: 224, column: 24, scope: !2072, inlinedAt: !2077)
!2671 = !DILocation(line: 224, column: 39, scope: !2072, inlinedAt: !2077)
!2672 = !DILocation(line: 224, column: 37, scope: !2072, inlinedAt: !2077)
!2673 = !DILocation(line: 224, column: 9, scope: !2072, inlinedAt: !2077)
!2674 = !DILocation(line: 224, column: 12, scope: !2072, inlinedAt: !2077)
!2675 = !DILocation(line: 224, column: 19, scope: !2072, inlinedAt: !2077)
!2676 = !DILocation(line: 225, column: 9, scope: !2072, inlinedAt: !2077)
!2677 = !DILocation(line: 227, column: 9, scope: !2072, inlinedAt: !2077)
!2678 = !DILocation(line: 229, column: 29, scope: !2073, inlinedAt: !2077)
!2679 = !DILocation(line: 229, column: 12, scope: !2073, inlinedAt: !2077)
!2680 = !DILocation(line: 190, column: 18, scope: !2087, inlinedAt: !2091)
!2681 = !DILocation(line: 190, column: 21, scope: !2087, inlinedAt: !2091)
!2682 = !DILocation(line: 190, column: 30, scope: !2087, inlinedAt: !2091)
!2683 = !DILocation(line: 190, column: 33, scope: !2087, inlinedAt: !2091)
!2684 = !DILocation(line: 190, column: 28, scope: !2087, inlinedAt: !2091)
!2685 = !DILocation(line: 190, column: 12, scope: !2087, inlinedAt: !2091)
!2686 = !DILocation(line: 229, column: 5, scope: !2073, inlinedAt: !2077)
!2687 = !DILocation(line: 230, column: 1, scope: !2073, inlinedAt: !2077)
!2688 = !DILocation(line: 1780, column: 59, scope: !2060)
!2689 = !DILocation(line: 1780, column: 62, scope: !2060)
!2690 = !DILocation(line: 1780, column: 37, scope: !2060)
!2691 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !2115)
!2692 = distinct !DILexicalBlock(scope: !2114, file: !1817, line: 88, column: 1007)
!2693 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !2115)
!2694 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !2115)
!2695 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !2115)
!2696 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !2115)
!2697 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !2115)
!2698 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !2115)
!2699 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !2115)
!2700 = !DILexicalBlockFile(scope: !2701, file: !1817, discriminator: 1)
!2701 = distinct !DILexicalBlock(scope: !2692, file: !1817, line: 88, column: 1038)
!2702 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !2115)
!2703 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !2115)
!2704 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !2115)
!2705 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !2115)
!2706 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !2115)
!2707 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !2115)
!2708 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !2115)
!2709 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !2112)
!2710 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !2112)
!2711 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !2112)
!2712 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !2108)
!2713 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !2108)
!2714 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !2108)
!2715 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !2108)
!2716 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !2108)
!2717 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !2108)
!2718 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !2115)
!2719 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !2115)
!2720 = !DILexicalBlockFile(scope: !2114, file: !1817, discriminator: 3)
!2721 = !DILocation(line: 1780, column: 66, scope: !2060)
!2722 = !DILocation(line: 1780, column: 36, scope: !2060)
!2723 = !DILocation(line: 1780, column: 33, scope: !2060)
!2724 = !DILocation(line: 1781, column: 9, scope: !2060)
!2725 = !DILocation(line: 1774, column: 37, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !2061, file: !910, discriminator: 2)
!2727 = !DILocation(line: 1774, column: 9, scope: !2726)
!2728 = distinct !{!2728, !2729}
!2729 = !DILocation(line: 1774, column: 9, scope: !2048)
!2730 = !DILocation(line: 1782, column: 27, scope: !2048)
!2731 = !DILocation(line: 1782, column: 30, scope: !2048)
!2732 = !DILocation(line: 1782, column: 34, scope: !2048)
!2733 = !DILocation(line: 1782, column: 9, scope: !2048)
!2734 = !DILocation(line: 212, column: 13, scope: !2073, inlinedAt: !2122)
!2735 = !DILocation(line: 212, column: 5, scope: !2073, inlinedAt: !2122)
!2736 = !DILocation(line: 214, column: 28, scope: !2072, inlinedAt: !2122)
!2737 = !DILocation(line: 214, column: 38, scope: !2072, inlinedAt: !2122)
!2738 = !DILocation(line: 214, column: 41, scope: !2072, inlinedAt: !2122)
!2739 = !DILocation(line: 214, column: 50, scope: !2072, inlinedAt: !2122)
!2740 = !DILocation(line: 214, column: 53, scope: !2072, inlinedAt: !2122)
!2741 = !DILocation(line: 214, column: 48, scope: !2072, inlinedAt: !2122)
!2742 = !DILocation(line: 214, column: 36, scope: !2072, inlinedAt: !2122)
!2743 = !DILocation(line: 215, column: 30, scope: !2072, inlinedAt: !2122)
!2744 = !DILocation(line: 215, column: 33, scope: !2072, inlinedAt: !2122)
!2745 = !DILocation(line: 215, column: 46, scope: !2072, inlinedAt: !2122)
!2746 = !DILocation(line: 215, column: 49, scope: !2072, inlinedAt: !2122)
!2747 = !DILocation(line: 215, column: 44, scope: !2072, inlinedAt: !2122)
!2748 = !DILocation(line: 214, column: 18, scope: !2072, inlinedAt: !2122)
!2749 = !DILocation(line: 132, column: 9, scope: !2590, inlinedAt: !2132)
!2750 = !DILocation(line: 132, column: 13, scope: !2590, inlinedAt: !2132)
!2751 = !DILocation(line: 132, column: 11, scope: !2590, inlinedAt: !2132)
!2752 = !DILocation(line: 132, column: 9, scope: !2066, inlinedAt: !2132)
!2753 = !DILocation(line: 132, column: 26, scope: !2595, inlinedAt: !2132)
!2754 = !DILocation(line: 132, column: 19, scope: !2595, inlinedAt: !2132)
!2755 = !DILocation(line: 133, column: 14, scope: !2598, inlinedAt: !2132)
!2756 = !DILocation(line: 133, column: 18, scope: !2598, inlinedAt: !2132)
!2757 = !DILocation(line: 133, column: 16, scope: !2598, inlinedAt: !2132)
!2758 = !DILocation(line: 133, column: 14, scope: !2590, inlinedAt: !2132)
!2759 = !DILocation(line: 133, column: 31, scope: !2603, inlinedAt: !2132)
!2760 = !DILocation(line: 133, column: 24, scope: !2603, inlinedAt: !2132)
!2761 = !DILocation(line: 134, column: 17, scope: !2598, inlinedAt: !2132)
!2762 = !DILocation(line: 134, column: 10, scope: !2598, inlinedAt: !2132)
!2763 = !DILocation(line: 135, column: 1, scope: !2066, inlinedAt: !2132)
!2764 = !DILocation(line: 214, column: 16, scope: !2072, inlinedAt: !2122)
!2765 = !DILocation(line: 216, column: 22, scope: !2072, inlinedAt: !2122)
!2766 = !DILocation(line: 216, column: 9, scope: !2072, inlinedAt: !2122)
!2767 = !DILocation(line: 216, column: 12, scope: !2072, inlinedAt: !2122)
!2768 = !DILocation(line: 216, column: 19, scope: !2072, inlinedAt: !2122)
!2769 = !DILocation(line: 217, column: 9, scope: !2072, inlinedAt: !2122)
!2770 = !DILocation(line: 219, column: 28, scope: !2072, inlinedAt: !2122)
!2771 = !DILocation(line: 219, column: 38, scope: !2072, inlinedAt: !2122)
!2772 = !DILocation(line: 219, column: 41, scope: !2072, inlinedAt: !2122)
!2773 = !DILocation(line: 219, column: 54, scope: !2072, inlinedAt: !2122)
!2774 = !DILocation(line: 219, column: 57, scope: !2072, inlinedAt: !2122)
!2775 = !DILocation(line: 219, column: 52, scope: !2072, inlinedAt: !2122)
!2776 = !DILocation(line: 219, column: 36, scope: !2072, inlinedAt: !2122)
!2777 = !DILocation(line: 219, column: 18, scope: !2072, inlinedAt: !2122)
!2778 = !DILocation(line: 132, column: 9, scope: !2590, inlinedAt: !2121)
!2779 = !DILocation(line: 132, column: 13, scope: !2590, inlinedAt: !2121)
!2780 = !DILocation(line: 132, column: 11, scope: !2590, inlinedAt: !2121)
!2781 = !DILocation(line: 132, column: 9, scope: !2066, inlinedAt: !2121)
!2782 = !DILocation(line: 132, column: 26, scope: !2595, inlinedAt: !2121)
!2783 = !DILocation(line: 132, column: 19, scope: !2595, inlinedAt: !2121)
!2784 = !DILocation(line: 133, column: 14, scope: !2598, inlinedAt: !2121)
!2785 = !DILocation(line: 133, column: 18, scope: !2598, inlinedAt: !2121)
!2786 = !DILocation(line: 133, column: 16, scope: !2598, inlinedAt: !2121)
!2787 = !DILocation(line: 133, column: 14, scope: !2590, inlinedAt: !2121)
!2788 = !DILocation(line: 133, column: 31, scope: !2603, inlinedAt: !2121)
!2789 = !DILocation(line: 133, column: 24, scope: !2603, inlinedAt: !2121)
!2790 = !DILocation(line: 134, column: 17, scope: !2598, inlinedAt: !2121)
!2791 = !DILocation(line: 134, column: 10, scope: !2598, inlinedAt: !2121)
!2792 = !DILocation(line: 135, column: 1, scope: !2066, inlinedAt: !2121)
!2793 = !DILocation(line: 219, column: 16, scope: !2072, inlinedAt: !2122)
!2794 = !DILocation(line: 220, column: 21, scope: !2072, inlinedAt: !2122)
!2795 = !DILocation(line: 220, column: 24, scope: !2072, inlinedAt: !2122)
!2796 = !DILocation(line: 220, column: 37, scope: !2072, inlinedAt: !2122)
!2797 = !DILocation(line: 220, column: 35, scope: !2072, inlinedAt: !2122)
!2798 = !DILocation(line: 220, column: 9, scope: !2072, inlinedAt: !2122)
!2799 = !DILocation(line: 220, column: 12, scope: !2072, inlinedAt: !2122)
!2800 = !DILocation(line: 220, column: 19, scope: !2072, inlinedAt: !2122)
!2801 = !DILocation(line: 221, column: 9, scope: !2072, inlinedAt: !2122)
!2802 = !DILocation(line: 223, column: 28, scope: !2072, inlinedAt: !2122)
!2803 = !DILocation(line: 223, column: 39, scope: !2072, inlinedAt: !2122)
!2804 = !DILocation(line: 223, column: 42, scope: !2072, inlinedAt: !2122)
!2805 = !DILocation(line: 223, column: 55, scope: !2072, inlinedAt: !2122)
!2806 = !DILocation(line: 223, column: 58, scope: !2072, inlinedAt: !2122)
!2807 = !DILocation(line: 223, column: 53, scope: !2072, inlinedAt: !2122)
!2808 = !DILocation(line: 223, column: 18, scope: !2072, inlinedAt: !2122)
!2809 = !DILocation(line: 132, column: 9, scope: !2590, inlinedAt: !2126)
!2810 = !DILocation(line: 132, column: 13, scope: !2590, inlinedAt: !2126)
!2811 = !DILocation(line: 132, column: 11, scope: !2590, inlinedAt: !2126)
!2812 = !DILocation(line: 132, column: 9, scope: !2066, inlinedAt: !2126)
!2813 = !DILocation(line: 132, column: 26, scope: !2595, inlinedAt: !2126)
!2814 = !DILocation(line: 132, column: 19, scope: !2595, inlinedAt: !2126)
!2815 = !DILocation(line: 133, column: 14, scope: !2598, inlinedAt: !2126)
!2816 = !DILocation(line: 133, column: 18, scope: !2598, inlinedAt: !2126)
!2817 = !DILocation(line: 133, column: 16, scope: !2598, inlinedAt: !2126)
!2818 = !DILocation(line: 133, column: 14, scope: !2590, inlinedAt: !2126)
!2819 = !DILocation(line: 133, column: 31, scope: !2603, inlinedAt: !2126)
!2820 = !DILocation(line: 133, column: 24, scope: !2603, inlinedAt: !2126)
!2821 = !DILocation(line: 134, column: 17, scope: !2598, inlinedAt: !2126)
!2822 = !DILocation(line: 134, column: 10, scope: !2598, inlinedAt: !2126)
!2823 = !DILocation(line: 135, column: 1, scope: !2066, inlinedAt: !2126)
!2824 = !DILocation(line: 223, column: 16, scope: !2072, inlinedAt: !2122)
!2825 = !DILocation(line: 224, column: 21, scope: !2072, inlinedAt: !2122)
!2826 = !DILocation(line: 224, column: 24, scope: !2072, inlinedAt: !2122)
!2827 = !DILocation(line: 224, column: 39, scope: !2072, inlinedAt: !2122)
!2828 = !DILocation(line: 224, column: 37, scope: !2072, inlinedAt: !2122)
!2829 = !DILocation(line: 224, column: 9, scope: !2072, inlinedAt: !2122)
!2830 = !DILocation(line: 224, column: 12, scope: !2072, inlinedAt: !2122)
!2831 = !DILocation(line: 224, column: 19, scope: !2072, inlinedAt: !2122)
!2832 = !DILocation(line: 225, column: 9, scope: !2072, inlinedAt: !2122)
!2833 = !DILocation(line: 227, column: 9, scope: !2072, inlinedAt: !2122)
!2834 = !DILocation(line: 229, column: 29, scope: !2073, inlinedAt: !2122)
!2835 = !DILocation(line: 229, column: 12, scope: !2073, inlinedAt: !2122)
!2836 = !DILocation(line: 190, column: 18, scope: !2087, inlinedAt: !2130)
!2837 = !DILocation(line: 190, column: 21, scope: !2087, inlinedAt: !2130)
!2838 = !DILocation(line: 190, column: 30, scope: !2087, inlinedAt: !2130)
!2839 = !DILocation(line: 190, column: 33, scope: !2087, inlinedAt: !2130)
!2840 = !DILocation(line: 190, column: 28, scope: !2087, inlinedAt: !2130)
!2841 = !DILocation(line: 190, column: 12, scope: !2087, inlinedAt: !2130)
!2842 = !DILocation(line: 229, column: 5, scope: !2073, inlinedAt: !2122)
!2843 = !DILocation(line: 230, column: 1, scope: !2073, inlinedAt: !2122)
!2844 = !DILocation(line: 1783, column: 5, scope: !2048)
!2845 = !DILocation(line: 1786, column: 14, scope: !2033)
!2846 = !DILocation(line: 1786, column: 21, scope: !2033)
!2847 = !DILocation(line: 1786, column: 5, scope: !2033)
!2848 = !DILocation(line: 1786, column: 8, scope: !2033)
!2849 = !DILocation(line: 1786, column: 12, scope: !2033)
!2850 = !DILocation(line: 1787, column: 19, scope: !2033)
!2851 = !DILocation(line: 1787, column: 26, scope: !2033)
!2852 = !DILocation(line: 1787, column: 5, scope: !2033)
!2853 = !DILocation(line: 1787, column: 8, scope: !2033)
!2854 = !DILocation(line: 1787, column: 17, scope: !2033)
!2855 = !DILocation(line: 1788, column: 11, scope: !2033)
!2856 = !DILocation(line: 1788, column: 20, scope: !2033)
!2857 = !DILocation(line: 1788, column: 9, scope: !2033)
!2858 = !DILocation(line: 1791, column: 12, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1791, column: 5)
!2860 = !DILocation(line: 1791, column: 10, scope: !2859)
!2861 = !DILocation(line: 1791, column: 17, scope: !2862)
!2862 = !DILexicalBlockFile(scope: !2863, file: !910, discriminator: 1)
!2863 = distinct !DILexicalBlock(scope: !2859, file: !910, line: 1791, column: 5)
!2864 = !DILocation(line: 1791, column: 21, scope: !2862)
!2865 = !DILocation(line: 1791, column: 24, scope: !2862)
!2866 = !DILocation(line: 1791, column: 19, scope: !2862)
!2867 = !DILocation(line: 1791, column: 5, scope: !2862)
!2868 = !DILocation(line: 1792, column: 16, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2863, file: !910, line: 1791, column: 35)
!2870 = !DILocation(line: 1792, column: 24, scope: !2869)
!2871 = !DILocation(line: 1792, column: 9, scope: !2869)
!2872 = !DILocation(line: 1793, column: 16, scope: !2869)
!2873 = !DILocation(line: 1793, column: 25, scope: !2869)
!2874 = !DILocation(line: 1793, column: 13, scope: !2869)
!2875 = !DILocation(line: 1794, column: 5, scope: !2869)
!2876 = !DILocation(line: 1791, column: 31, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2863, file: !910, discriminator: 2)
!2878 = !DILocation(line: 1791, column: 5, scope: !2877)
!2879 = distinct !{!2879, !2880}
!2880 = !DILocation(line: 1791, column: 5, scope: !2033)
!2881 = !DILocation(line: 1796, column: 18, scope: !2033)
!2882 = !DILocation(line: 1796, column: 5, scope: !2033)
!2883 = !DILocation(line: 1796, column: 8, scope: !2033)
!2884 = !DILocation(line: 1796, column: 16, scope: !2033)
!2885 = !DILocation(line: 1798, column: 5, scope: !2033)
!2886 = !DILocation(line: 1798, column: 12, scope: !2033)
!2887 = !DILocation(line: 1798, column: 21, scope: !2033)
!2888 = !DILocation(line: 1798, column: 42, scope: !2033)
!2889 = !DILocation(line: 1798, column: 45, scope: !2033)
!2890 = !DILocation(line: 1798, column: 63, scope: !2033)
!2891 = !DILocation(line: 1801, column: 11, scope: !2033)
!2892 = !DILocation(line: 1801, column: 20, scope: !2033)
!2893 = !DILocation(line: 1801, column: 32, scope: !2033)
!2894 = !DILocation(line: 1801, column: 35, scope: !2033)
!2895 = !DILocation(line: 1801, column: 39, scope: !2033)
!2896 = !DILocation(line: 1801, column: 45, scope: !2033)
!2897 = !DILocation(line: 1801, column: 54, scope: !2033)
!2898 = !DILocation(line: 1801, column: 43, scope: !2033)
!2899 = !DILocation(line: 1801, column: 28, scope: !2033)
!2900 = !DILocation(line: 1801, column: 9, scope: !2033)
!2901 = !DILocation(line: 1802, column: 14, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2033, file: !910, line: 1802, column: 5)
!2903 = !DILocation(line: 1802, column: 17, scope: !2902)
!2904 = !DILocation(line: 1802, column: 22, scope: !2902)
!2905 = !DILocation(line: 1802, column: 12, scope: !2902)
!2906 = !DILocation(line: 1802, column: 10, scope: !2902)
!2907 = !DILocation(line: 1802, column: 27, scope: !2908)
!2908 = !DILexicalBlockFile(scope: !2909, file: !910, discriminator: 1)
!2909 = distinct !DILexicalBlock(scope: !2902, file: !910, line: 1802, column: 5)
!2910 = !DILocation(line: 1802, column: 31, scope: !2908)
!2911 = !DILocation(line: 1802, column: 38, scope: !2908)
!2912 = !DILocation(line: 1802, column: 29, scope: !2908)
!2913 = !DILocation(line: 1802, column: 5, scope: !2908)
!2914 = !DILocation(line: 1803, column: 16, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2909, file: !910, line: 1802, column: 51)
!2916 = !DILocation(line: 1803, column: 24, scope: !2915)
!2917 = !DILocation(line: 1803, column: 9, scope: !2915)
!2918 = !DILocation(line: 1804, column: 16, scope: !2915)
!2919 = !DILocation(line: 1804, column: 25, scope: !2915)
!2920 = !DILocation(line: 1804, column: 13, scope: !2915)
!2921 = !DILocation(line: 1805, column: 5, scope: !2915)
!2922 = !DILocation(line: 1802, column: 47, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2909, file: !910, discriminator: 2)
!2924 = !DILocation(line: 1802, column: 5, scope: !2923)
!2925 = distinct !{!2925, !2926}
!2926 = !DILocation(line: 1802, column: 5, scope: !2033)
!2927 = !DILocation(line: 1807, column: 5, scope: !2033)
!2928 = !DILocation(line: 1807, column: 14, scope: !2033)
!2929 = !DILocation(line: 1807, column: 24, scope: !2033)
!2930 = !DILocation(line: 1808, column: 6, scope: !2033)
!2931 = !DILocation(line: 1808, column: 16, scope: !2033)
!2932 = !DILocation(line: 1810, column: 12, scope: !2033)
!2933 = !DILocation(line: 1810, column: 19, scope: !2033)
!2934 = !DILocation(line: 1810, column: 5, scope: !2033)
!2935 = !DILocation(line: 1811, column: 1, scope: !2033)
!2936 = distinct !DISubprogram(name: "decode_end", scope: !910, file: !910, line: 1875, type: !1099, isLocal: true, isDefinition: true, scopeLine: 1876, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2937 = !DILocalVariable(name: "avctx", arg: 1, scope: !2936, file: !910, line: 1875, type: !1101)
!2938 = !DILocation(line: 1875, column: 61, scope: !2936)
!2939 = !DILocalVariable(name: "s", scope: !2936, file: !910, line: 1877, type: !1744)
!2940 = !DILocation(line: 1877, column: 17, scope: !2936)
!2941 = !DILocation(line: 1877, column: 21, scope: !2936)
!2942 = !DILocation(line: 1877, column: 28, scope: !2936)
!2943 = !DILocalVariable(name: "i", scope: !2936, file: !910, line: 1878, type: !941)
!2944 = !DILocation(line: 1878, column: 9, scope: !2936)
!2945 = !DILocation(line: 1879, column: 12, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2936, file: !910, line: 1879, column: 5)
!2947 = !DILocation(line: 1879, column: 10, scope: !2946)
!2948 = !DILocation(line: 1879, column: 17, scope: !2949)
!2949 = !DILexicalBlockFile(scope: !2950, file: !910, discriminator: 1)
!2950 = distinct !DILexicalBlock(scope: !2946, file: !910, line: 1879, column: 5)
!2951 = !DILocation(line: 1879, column: 21, scope: !2949)
!2952 = !DILocation(line: 1879, column: 28, scope: !2949)
!2953 = !DILocation(line: 1879, column: 19, scope: !2949)
!2954 = !DILocation(line: 1879, column: 5, scope: !2949)
!2955 = !DILocalVariable(name: "td", scope: !2956, file: !910, line: 1880, type: !1836)
!2956 = distinct !DILexicalBlock(scope: !2950, file: !910, line: 1879, column: 47)
!2957 = !DILocation(line: 1880, column: 24, scope: !2956)
!2958 = !DILocation(line: 1880, column: 45, scope: !2956)
!2959 = !DILocation(line: 1880, column: 30, scope: !2956)
!2960 = !DILocation(line: 1880, column: 33, scope: !2956)
!2961 = !DILocation(line: 1881, column: 19, scope: !2956)
!2962 = !DILocation(line: 1881, column: 23, scope: !2956)
!2963 = !DILocation(line: 1881, column: 18, scope: !2956)
!2964 = !DILocation(line: 1881, column: 9, scope: !2956)
!2965 = !DILocation(line: 1882, column: 19, scope: !2956)
!2966 = !DILocation(line: 1882, column: 23, scope: !2956)
!2967 = !DILocation(line: 1882, column: 18, scope: !2956)
!2968 = !DILocation(line: 1882, column: 9, scope: !2956)
!2969 = !DILocation(line: 1883, column: 19, scope: !2956)
!2970 = !DILocation(line: 1883, column: 23, scope: !2956)
!2971 = !DILocation(line: 1883, column: 18, scope: !2956)
!2972 = !DILocation(line: 1883, column: 9, scope: !2956)
!2973 = !DILocation(line: 1884, column: 19, scope: !2956)
!2974 = !DILocation(line: 1884, column: 23, scope: !2956)
!2975 = !DILocation(line: 1884, column: 18, scope: !2956)
!2976 = !DILocation(line: 1884, column: 9, scope: !2956)
!2977 = !DILocation(line: 1885, column: 5, scope: !2956)
!2978 = !DILocation(line: 1879, column: 43, scope: !2979)
!2979 = !DILexicalBlockFile(scope: !2950, file: !910, discriminator: 2)
!2980 = !DILocation(line: 1879, column: 5, scope: !2979)
!2981 = distinct !{!2981, !2982}
!2982 = !DILocation(line: 1879, column: 5, scope: !2936)
!2983 = !DILocation(line: 1887, column: 15, scope: !2936)
!2984 = !DILocation(line: 1887, column: 18, scope: !2936)
!2985 = !DILocation(line: 1887, column: 14, scope: !2936)
!2986 = !DILocation(line: 1887, column: 5, scope: !2936)
!2987 = !DILocation(line: 1888, column: 15, scope: !2936)
!2988 = !DILocation(line: 1888, column: 18, scope: !2936)
!2989 = !DILocation(line: 1888, column: 14, scope: !2936)
!2990 = !DILocation(line: 1888, column: 5, scope: !2936)
!2991 = !DILocation(line: 1890, column: 5, scope: !2936)
!2992 = distinct !DISubprogram(name: "exr_half2float", scope: !910, file: !910, line: 184, type: !2993, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!1882, !965}
!2995 = !DILocalVariable(name: "hf", arg: 1, scope: !2992, file: !910, line: 184, type: !965)
!2996 = !DILocation(line: 184, column: 52, scope: !2992)
!2997 = !DILocalVariable(name: "sign", scope: !2992, file: !910, line: 186, type: !942)
!2998 = !DILocation(line: 186, column: 18, scope: !2992)
!2999 = !DILocation(line: 186, column: 41, scope: !2992)
!3000 = !DILocation(line: 186, column: 44, scope: !2992)
!3001 = !DILocalVariable(name: "mantissa", scope: !2992, file: !910, line: 187, type: !942)
!3002 = !DILocation(line: 187, column: 18, scope: !2992)
!3003 = !DILocation(line: 187, column: 45, scope: !2992)
!3004 = !DILocation(line: 187, column: 48, scope: !2992)
!3005 = !DILocalVariable(name: "exp", scope: !2992, file: !910, line: 188, type: !942)
!3006 = !DILocation(line: 188, column: 18, scope: !2992)
!3007 = !DILocation(line: 188, column: 40, scope: !2992)
!3008 = !DILocation(line: 188, column: 43, scope: !2992)
!3009 = !DILocalVariable(name: "f", scope: !2992, file: !910, line: 189, type: !1882)
!3010 = !DILocation(line: 189, column: 25, scope: !2992)
!3011 = !DILocation(line: 191, column: 9, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2992, file: !910, line: 191, column: 9)
!3013 = !DILocation(line: 191, column: 13, scope: !3012)
!3014 = !DILocation(line: 191, column: 9, scope: !2992)
!3015 = !DILocation(line: 195, column: 13, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3012, file: !910, line: 191, column: 30)
!3017 = !DILocation(line: 196, column: 13, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3016, file: !910, line: 196, column: 13)
!3019 = !DILocation(line: 196, column: 13, scope: !3016)
!3020 = !DILocation(line: 197, column: 22, scope: !3018)
!3021 = !DILocation(line: 197, column: 13, scope: !3018)
!3022 = !DILocation(line: 198, column: 5, scope: !3016)
!3023 = !DILocation(line: 198, column: 16, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3025, file: !910, discriminator: 1)
!3025 = distinct !DILexicalBlock(scope: !3012, file: !910, line: 198, column: 16)
!3026 = !DILocation(line: 198, column: 20, scope: !3024)
!3027 = !DILocation(line: 200, column: 13, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !910, line: 200, column: 13)
!3029 = distinct !DILexicalBlock(scope: !3025, file: !910, line: 198, column: 28)
!3030 = !DILocation(line: 200, column: 13, scope: !3029)
!3031 = !DILocation(line: 201, column: 22, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3028, file: !910, line: 200, column: 23)
!3033 = !DILocation(line: 202, column: 17, scope: !3032)
!3034 = !DILocation(line: 204, column: 13, scope: !3032)
!3035 = !DILocation(line: 204, column: 21, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !3032, file: !910, discriminator: 1)
!3037 = !DILocation(line: 204, column: 30, scope: !3036)
!3038 = !DILocation(line: 204, column: 13, scope: !3036)
!3039 = !DILocation(line: 207, column: 26, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3032, file: !910, line: 204, column: 44)
!3041 = !DILocation(line: 208, column: 21, scope: !3040)
!3042 = !DILocation(line: 204, column: 13, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !3032, file: !910, discriminator: 2)
!3044 = distinct !{!3044, !3034}
!3045 = !DILocation(line: 211, column: 22, scope: !3032)
!3046 = !DILocation(line: 213, column: 22, scope: !3032)
!3047 = !DILocation(line: 214, column: 9, scope: !3032)
!3048 = !DILocation(line: 215, column: 5, scope: !3029)
!3049 = !DILocation(line: 217, column: 18, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3025, file: !910, line: 215, column: 12)
!3051 = !DILocation(line: 219, column: 16, scope: !3050)
!3052 = !DILocation(line: 219, column: 20, scope: !3050)
!3053 = !DILocation(line: 219, column: 27, scope: !3050)
!3054 = !DILocation(line: 219, column: 13, scope: !3050)
!3055 = !DILocation(line: 222, column: 12, scope: !2992)
!3056 = !DILocation(line: 222, column: 17, scope: !2992)
!3057 = !DILocation(line: 222, column: 26, scope: !2992)
!3058 = !DILocation(line: 222, column: 24, scope: !2992)
!3059 = !DILocation(line: 222, column: 32, scope: !2992)
!3060 = !DILocation(line: 222, column: 30, scope: !2992)
!3061 = !DILocation(line: 222, column: 7, scope: !2992)
!3062 = !DILocation(line: 222, column: 9, scope: !2992)
!3063 = !DILocation(line: 224, column: 12, scope: !2992)
!3064 = !DILocation(line: 224, column: 5, scope: !2992)
!3065 = distinct !DISubprogram(name: "exr_flt2uint", scope: !910, file: !910, line: 235, type: !3066, isLocal: true, isDefinition: true, scopeLine: 236, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!965, !1809}
!3068 = !DILocalVariable(name: "v", arg: 1, scope: !3065, file: !910, line: 235, type: !1809)
!3069 = !DILocation(line: 235, column: 45, scope: !3065)
!3070 = !DILocalVariable(name: "exp", scope: !3065, file: !910, line: 237, type: !1809)
!3071 = !DILocation(line: 237, column: 13, scope: !3065)
!3072 = !DILocation(line: 237, column: 19, scope: !3065)
!3073 = !DILocation(line: 237, column: 21, scope: !3065)
!3074 = !DILocation(line: 240, column: 9, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3065, file: !910, line: 240, column: 9)
!3076 = !DILocation(line: 240, column: 13, scope: !3075)
!3077 = !DILocation(line: 240, column: 9, scope: !3065)
!3078 = !DILocation(line: 241, column: 9, scope: !3075)
!3079 = !DILocation(line: 242, column: 9, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3065, file: !910, line: 242, column: 9)
!3081 = !DILocation(line: 242, column: 13, scope: !3080)
!3082 = !DILocation(line: 242, column: 9, scope: !3065)
!3083 = !DILocation(line: 243, column: 9, scope: !3080)
!3084 = !DILocation(line: 244, column: 7, scope: !3065)
!3085 = !DILocation(line: 245, column: 13, scope: !3065)
!3086 = !DILocation(line: 245, column: 15, scope: !3065)
!3087 = !DILocation(line: 245, column: 42, scope: !3065)
!3088 = !DILocation(line: 245, column: 40, scope: !3065)
!3089 = !DILocation(line: 245, column: 28, scope: !3065)
!3090 = !DILocation(line: 245, column: 12, scope: !3065)
!3091 = !DILocation(line: 245, column: 5, scope: !3065)
!3092 = !DILocation(line: 246, column: 1, scope: !3065)
!3093 = distinct !DISubprogram(name: "exr_halflt2uint", scope: !910, file: !910, line: 255, type: !3094, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!965, !965}
!3096 = !DILocalVariable(name: "v", arg: 1, scope: !3093, file: !910, line: 255, type: !965)
!3097 = !DILocation(line: 255, column: 49, scope: !3093)
!3098 = !DILocalVariable(name: "exp", scope: !3093, file: !910, line: 257, type: !942)
!3099 = !DILocation(line: 257, column: 14, scope: !3093)
!3100 = !DILocation(line: 257, column: 26, scope: !3093)
!3101 = !DILocation(line: 257, column: 28, scope: !3093)
!3102 = !DILocation(line: 257, column: 23, scope: !3093)
!3103 = !DILocation(line: 258, column: 9, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3093, file: !910, line: 258, column: 9)
!3105 = !DILocation(line: 258, column: 13, scope: !3104)
!3106 = !DILocation(line: 258, column: 9, scope: !3093)
!3107 = !DILocation(line: 259, column: 13, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !910, line: 259, column: 13)
!3109 = distinct !DILexicalBlock(scope: !3104, file: !910, line: 258, column: 20)
!3110 = !DILocation(line: 259, column: 17, scope: !3108)
!3111 = !DILocation(line: 259, column: 13, scope: !3109)
!3112 = !DILocation(line: 260, column: 21, scope: !3108)
!3113 = !DILocation(line: 260, column: 23, scope: !3108)
!3114 = !DILocation(line: 260, column: 29, scope: !3108)
!3115 = !DILocation(line: 260, column: 20, scope: !3108)
!3116 = !DILocation(line: 260, column: 13, scope: !3108)
!3117 = !DILocation(line: 262, column: 21, scope: !3108)
!3118 = !DILocation(line: 262, column: 23, scope: !3108)
!3119 = !DILocation(line: 262, column: 20, scope: !3108)
!3120 = !DILocation(line: 262, column: 13, scope: !3108)
!3121 = !DILocation(line: 264, column: 7, scope: !3093)
!3122 = !DILocation(line: 265, column: 13, scope: !3093)
!3123 = !DILocation(line: 265, column: 15, scope: !3093)
!3124 = !DILocation(line: 265, column: 32, scope: !3093)
!3125 = !DILocation(line: 265, column: 36, scope: !3093)
!3126 = !DILocation(line: 265, column: 28, scope: !3093)
!3127 = !DILocation(line: 265, column: 12, scope: !3093)
!3128 = !DILocation(line: 265, column: 5, scope: !3093)
!3129 = !DILocation(line: 266, column: 1, scope: !3093)
!3130 = distinct !DISubprogram(name: "decode_header", scope: !910, file: !910, line: 1304, type: !3131, isLocal: true, isDefinition: true, scopeLine: 1305, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!941, !1744, !1123}
!3133 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3134)
!3134 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3135)
!3135 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3136)
!3136 = distinct !DILocation(line: 1437, column: 38, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !910, line: 1377, column: 62)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !910, line: 1368, column: 68)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !910, line: 1367, column: 13)
!3140 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1365, column: 69)
!3141 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3135)
!3142 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3136)
!3143 = !DILocalVariable(name: "g", arg: 1, scope: !3144, file: !1817, line: 164, type: !2076)
!3144 = distinct !DISubprogram(name: "bytestream2_skip", scope: !1817, file: !1817, line: 164, type: !3145, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{null, !2076, !942}
!3147 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !3148)
!3148 = distinct !DILocation(line: 1445, column: 17, scope: !3137)
!3149 = !DILocalVariable(name: "size", arg: 2, scope: !3144, file: !1817, line: 165, type: !942)
!3150 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !3148)
!3151 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3152)
!3152 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3153)
!3153 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3154)
!3154 = distinct !DILocation(line: 1446, column: 24, scope: !3137)
!3155 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3153)
!3156 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3154)
!3157 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3158)
!3158 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3159)
!3159 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3160)
!3160 = distinct !DILocation(line: 1447, column: 24, scope: !3137)
!3161 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3159)
!3162 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3160)
!3163 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3164)
!3164 = distinct !DILocation(line: 1431, column: 21, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1431, column: 21)
!3166 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3167)
!3167 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3168)
!3168 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3169)
!3169 = distinct !DILocation(line: 1519, column: 23, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3171, file: !910, line: 1513, column: 65)
!3171 = distinct !DILexicalBlock(scope: !3139, file: !910, line: 1512, column: 20)
!3172 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3168)
!3173 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3169)
!3174 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3175)
!3175 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3176)
!3176 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3177)
!3177 = distinct !DILocation(line: 1520, column: 23, scope: !3170)
!3178 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3176)
!3179 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3177)
!3180 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3181)
!3181 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3183)
!3183 = distinct !DILocation(line: 1521, column: 23, scope: !3170)
!3184 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3182)
!3185 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3183)
!3186 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3187)
!3187 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3188)
!3188 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3189)
!3189 = distinct !DILocation(line: 1522, column: 23, scope: !3170)
!3190 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3188)
!3191 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3189)
!3192 = !DILocalVariable(name: "b", arg: 1, scope: !3193, file: !1817, line: 95, type: !2106)
!3193 = distinct !DISubprogram(name: "bytestream_get_byte", scope: !1817, file: !1817, line: 95, type: !2104, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3194 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !3195)
!3195 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3197)
!3196 = distinct !DISubprogram(name: "bytestream2_get_byteu", scope: !1817, file: !1817, line: 95, type: !2110, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3197 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3200)
!3198 = !DILexicalBlockFile(scope: !3199, file: !1817, discriminator: 2)
!3199 = distinct !DISubprogram(name: "bytestream2_get_byte", scope: !1817, file: !1817, line: 95, type: !2110, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3200 = distinct !DILocation(line: 1428, column: 24, scope: !3137)
!3201 = !DILocalVariable(name: "g", arg: 1, scope: !3196, file: !1817, line: 95, type: !2076)
!3202 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !3197)
!3203 = !DILocalVariable(name: "g", arg: 1, scope: !3199, file: !1817, line: 95, type: !2076)
!3204 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !3200)
!3205 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !3206)
!3206 = distinct !DILocation(line: 1534, column: 13, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3208, file: !910, line: 1528, column: 74)
!3208 = distinct !DILexicalBlock(scope: !3171, file: !910, line: 1527, column: 20)
!3209 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !3206)
!3210 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3211)
!3211 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3212)
!3212 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3213)
!3213 = distinct !DILocation(line: 1535, column: 20, scope: !3207)
!3214 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3212)
!3215 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3213)
!3216 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3217)
!3217 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3218)
!3218 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3219)
!3219 = distinct !DILocation(line: 1536, column: 20, scope: !3207)
!3220 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3218)
!3221 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3219)
!3222 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3223)
!3223 = distinct !DILocation(line: 1427, column: 24, scope: !3224)
!3224 = !DILexicalBlockFile(scope: !3137, file: !910, discriminator: 1)
!3225 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3226)
!3226 = distinct !DILocation(line: 1377, column: 20, scope: !3227)
!3227 = !DILexicalBlockFile(scope: !3138, file: !910, discriminator: 1)
!3228 = !DILocation(line: 133, column: 84, scope: !2153, inlinedAt: !3229)
!3229 = distinct !DILocation(line: 1375, column: 13, scope: !3138)
!3230 = !DILocation(line: 134, column: 62, scope: !2153, inlinedAt: !3229)
!3231 = !DILocation(line: 135, column: 51, scope: !2153, inlinedAt: !3229)
!3232 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !3233)
!3233 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3234)
!3234 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3235)
!3235 = distinct !DILocation(line: 1547, column: 26, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !910, line: 1540, column: 78)
!3237 = distinct !DILexicalBlock(scope: !3208, file: !910, line: 1539, column: 20)
!3238 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !3234)
!3239 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !3235)
!3240 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3241)
!3241 = distinct !DILocation(line: 1365, column: 12, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3130, file: !910, discriminator: 1)
!3243 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3244)
!3244 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3246)
!3246 = distinct !DILocation(line: 1563, column: 19, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !910, line: 1557, column: 74)
!3248 = distinct !DILexicalBlock(scope: !3237, file: !910, line: 1556, column: 20)
!3249 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3245)
!3250 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3246)
!3251 = !DILocalVariable(name: "b", arg: 1, scope: !3252, file: !1817, line: 89, type: !2106)
!3252 = distinct !DISubprogram(name: "bytestream_get_le24", scope: !1817, file: !1817, line: 89, type: !2104, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3253 = !DILocation(line: 89, column: 95, scope: !3252, inlinedAt: !3254)
!3254 = distinct !DILocation(line: 89, column: 1086, scope: !3255, inlinedAt: !3256)
!3255 = distinct !DISubprogram(name: "bytestream2_get_le24u", scope: !1817, file: !1817, line: 89, type: !2110, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3256 = distinct !DILocation(line: 89, column: 1304, scope: !3257, inlinedAt: !3259)
!3257 = !DILexicalBlockFile(scope: !3258, file: !1817, discriminator: 2)
!3258 = distinct !DISubprogram(name: "bytestream2_get_le24", scope: !1817, file: !1817, line: 89, type: !2110, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3259 = distinct !DILocation(line: 1351, column: 13, scope: !3130)
!3260 = !DILocalVariable(name: "g", arg: 1, scope: !3255, file: !1817, line: 89, type: !2076)
!3261 = !DILocation(line: 89, column: 1074, scope: !3255, inlinedAt: !3256)
!3262 = !DILocalVariable(name: "g", arg: 1, scope: !3258, file: !1817, line: 89, type: !2076)
!3263 = !DILocation(line: 89, column: 1216, scope: !3258, inlinedAt: !3259)
!3264 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !3265)
!3265 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3266)
!3266 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3267)
!3267 = distinct !DILocation(line: 1574, column: 34, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !910, line: 1573, column: 17)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !910, line: 1567, column: 80)
!3270 = distinct !DILexicalBlock(scope: !3248, file: !910, line: 1566, column: 20)
!3271 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !3266)
!3272 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !3267)
!3273 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !3274)
!3274 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3275)
!3275 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3276)
!3276 = distinct !DILocation(line: 1345, column: 15, scope: !3130)
!3277 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !3275)
!3278 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !3276)
!3279 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3280)
!3280 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3281)
!3281 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3282)
!3282 = distinct !DILocation(line: 1588, column: 34, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !910, line: 1581, column: 77)
!3284 = distinct !DILexicalBlock(scope: !3270, file: !910, line: 1580, column: 20)
!3285 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3281)
!3286 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3282)
!3287 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3288)
!3288 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3289)
!3289 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3290)
!3290 = distinct !DILocation(line: 1589, column: 34, scope: !3283)
!3291 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3289)
!3292 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3290)
!3293 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !3294)
!3294 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3295)
!3295 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3296)
!3296 = distinct !DILocation(line: 1591, column: 25, scope: !3283)
!3297 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !3295)
!3298 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !3296)
!3299 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3300)
!3300 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3301)
!3301 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3302)
!3302 = distinct !DILocation(line: 1337, column: 20, scope: !3130)
!3303 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3301)
!3304 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3302)
!3305 = !DILocalVariable(name: "g", arg: 1, scope: !3306, file: !1817, line: 263, type: !2076)
!3306 = distinct !DISubprogram(name: "bytestream2_get_buffer", scope: !1817, file: !1817, line: 263, type: !3307, isLocal: true, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!942, !2076, !1129, !942}
!3309 = !DILocation(line: 263, column: 98, scope: !3306, inlinedAt: !3310)
!3310 = distinct !DILocation(line: 1614, column: 13, scope: !3311)
!3311 = !DILexicalBlockFile(scope: !3312, file: !910, discriminator: 3)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !910, line: 1611, column: 74)
!3313 = distinct !DILexicalBlock(scope: !3284, file: !910, line: 1610, column: 20)
!3314 = !DILocalVariable(name: "dst", arg: 2, scope: !3306, file: !1817, line: 264, type: !1129)
!3315 = !DILocation(line: 264, column: 70, scope: !3306, inlinedAt: !3310)
!3316 = !DILocalVariable(name: "size", arg: 3, scope: !3306, file: !1817, line: 265, type: !942)
!3317 = !DILocation(line: 265, column: 74, scope: !3306, inlinedAt: !3310)
!3318 = !DILocalVariable(name: "size2", scope: !3306, file: !1817, line: 267, type: !941)
!3319 = !DILocation(line: 267, column: 9, scope: !3306, inlinedAt: !3310)
!3320 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3321)
!3321 = distinct !DILocation(line: 1621, column: 13, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3140, file: !910, line: 1621, column: 13)
!3323 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !3324)
!3324 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3325)
!3325 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3326)
!3326 = distinct !DILocation(line: 1629, column: 20, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3328, file: !910, discriminator: 1)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !910, line: 1628, column: 9)
!3329 = distinct !DILexicalBlock(scope: !3140, file: !910, line: 1628, column: 9)
!3330 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !3325)
!3331 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !3326)
!3332 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !3333)
!3333 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3334)
!3334 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3335)
!3335 = distinct !DILocation(line: 1632, column: 34, scope: !3140)
!3336 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !3334)
!3337 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !3335)
!3338 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !3339)
!3339 = distinct !DILocation(line: 1632, column: 9, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !3140, file: !910, discriminator: 1)
!3341 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !3339)
!3342 = !DILocalVariable(name: "i", arg: 1, scope: !3343, file: !1883, line: 40, type: !963)
!3343 = distinct !DISubprogram(name: "av_int2float", scope: !1883, file: !1883, line: 40, type: !3344, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!1400, !963}
!3346 = !DILocation(line: 40, column: 74, scope: !3343, inlinedAt: !3347)
!3347 = distinct !DILocation(line: 1635, column: 33, scope: !3130)
!3348 = !DILocalVariable(name: "v", scope: !3343, file: !1883, line: 42, type: !1882)
!3349 = !DILocation(line: 42, column: 25, scope: !3343, inlinedAt: !3347)
!3350 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3351)
!3351 = distinct !DILocation(line: 1651, column: 9, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1651, column: 9)
!3353 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !3354)
!3354 = distinct !DILocation(line: 1660, column: 5, scope: !3130)
!3355 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !3354)
!3356 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !3357)
!3357 = distinct !DILocation(line: 1332, column: 9, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1332, column: 9)
!3359 = !DILocalVariable(name: "s", arg: 1, scope: !3130, file: !910, line: 1304, type: !1744)
!3360 = !DILocation(line: 1304, column: 38, scope: !3130)
!3361 = !DILocalVariable(name: "frame", arg: 2, scope: !3130, file: !910, line: 1304, type: !1123)
!3362 = !DILocation(line: 1304, column: 50, scope: !3130)
!3363 = !DILocalVariable(name: "metadata", scope: !3130, file: !910, line: 1306, type: !1185)
!3364 = !DILocation(line: 1306, column: 19, scope: !3130)
!3365 = !DILocalVariable(name: "magic_number", scope: !3130, file: !910, line: 1307, type: !941)
!3366 = !DILocation(line: 1307, column: 9, scope: !3130)
!3367 = !DILocalVariable(name: "version", scope: !3130, file: !910, line: 1307, type: !941)
!3368 = !DILocation(line: 1307, column: 23, scope: !3130)
!3369 = !DILocalVariable(name: "i", scope: !3130, file: !910, line: 1307, type: !941)
!3370 = !DILocation(line: 1307, column: 32, scope: !3130)
!3371 = !DILocalVariable(name: "flags", scope: !3130, file: !910, line: 1307, type: !941)
!3372 = !DILocation(line: 1307, column: 35, scope: !3130)
!3373 = !DILocalVariable(name: "sar", scope: !3130, file: !910, line: 1307, type: !941)
!3374 = !DILocation(line: 1307, column: 42, scope: !3130)
!3375 = !DILocalVariable(name: "layer_match", scope: !3130, file: !910, line: 1308, type: !941)
!3376 = !DILocation(line: 1308, column: 9, scope: !3130)
!3377 = !DILocalVariable(name: "ret", scope: !3130, file: !910, line: 1309, type: !941)
!3378 = !DILocation(line: 1309, column: 9, scope: !3130)
!3379 = !DILocation(line: 1311, column: 5, scope: !3130)
!3380 = !DILocation(line: 1311, column: 8, scope: !3130)
!3381 = !DILocation(line: 1311, column: 31, scope: !3130)
!3382 = !DILocation(line: 1312, column: 5, scope: !3130)
!3383 = !DILocation(line: 1312, column: 8, scope: !3130)
!3384 = !DILocation(line: 1312, column: 13, scope: !3130)
!3385 = !DILocation(line: 1313, column: 5, scope: !3130)
!3386 = !DILocation(line: 1313, column: 8, scope: !3130)
!3387 = !DILocation(line: 1313, column: 13, scope: !3130)
!3388 = !DILocation(line: 1314, column: 5, scope: !3130)
!3389 = !DILocation(line: 1314, column: 8, scope: !3130)
!3390 = !DILocation(line: 1314, column: 13, scope: !3130)
!3391 = !DILocation(line: 1315, column: 5, scope: !3130)
!3392 = !DILocation(line: 1315, column: 8, scope: !3130)
!3393 = !DILocation(line: 1315, column: 13, scope: !3130)
!3394 = !DILocation(line: 1316, column: 5, scope: !3130)
!3395 = !DILocation(line: 1316, column: 8, scope: !3130)
!3396 = !DILocation(line: 1316, column: 15, scope: !3130)
!3397 = !DILocation(line: 1317, column: 5, scope: !3130)
!3398 = !DILocation(line: 1317, column: 8, scope: !3130)
!3399 = !DILocation(line: 1317, column: 15, scope: !3130)
!3400 = !DILocation(line: 1318, column: 5, scope: !3130)
!3401 = !DILocation(line: 1318, column: 8, scope: !3130)
!3402 = !DILocation(line: 1318, column: 27, scope: !3130)
!3403 = !DILocation(line: 1319, column: 5, scope: !3130)
!3404 = !DILocation(line: 1319, column: 8, scope: !3130)
!3405 = !DILocation(line: 1319, column: 27, scope: !3130)
!3406 = !DILocation(line: 1320, column: 5, scope: !3130)
!3407 = !DILocation(line: 1320, column: 8, scope: !3130)
!3408 = !DILocation(line: 1320, column: 27, scope: !3130)
!3409 = !DILocation(line: 1321, column: 5, scope: !3130)
!3410 = !DILocation(line: 1321, column: 8, scope: !3130)
!3411 = !DILocation(line: 1321, column: 27, scope: !3130)
!3412 = !DILocation(line: 1322, column: 5, scope: !3130)
!3413 = !DILocation(line: 1322, column: 8, scope: !3130)
!3414 = !DILocation(line: 1322, column: 19, scope: !3130)
!3415 = !DILocation(line: 1323, column: 5, scope: !3130)
!3416 = !DILocation(line: 1323, column: 8, scope: !3130)
!3417 = !DILocation(line: 1323, column: 20, scope: !3130)
!3418 = !DILocation(line: 1324, column: 5, scope: !3130)
!3419 = !DILocation(line: 1324, column: 8, scope: !3130)
!3420 = !DILocation(line: 1324, column: 20, scope: !3130)
!3421 = !DILocation(line: 1325, column: 5, scope: !3130)
!3422 = !DILocation(line: 1325, column: 8, scope: !3130)
!3423 = !DILocation(line: 1325, column: 10, scope: !3130)
!3424 = !DILocation(line: 1326, column: 5, scope: !3130)
!3425 = !DILocation(line: 1326, column: 8, scope: !3130)
!3426 = !DILocation(line: 1326, column: 10, scope: !3130)
!3427 = !DILocation(line: 1327, column: 5, scope: !3130)
!3428 = !DILocation(line: 1327, column: 8, scope: !3130)
!3429 = !DILocation(line: 1327, column: 18, scope: !3130)
!3430 = !DILocation(line: 1327, column: 24, scope: !3130)
!3431 = !DILocation(line: 1328, column: 5, scope: !3130)
!3432 = !DILocation(line: 1328, column: 8, scope: !3130)
!3433 = !DILocation(line: 1328, column: 18, scope: !3130)
!3434 = !DILocation(line: 1328, column: 24, scope: !3130)
!3435 = !DILocation(line: 1329, column: 5, scope: !3130)
!3436 = !DILocation(line: 1329, column: 8, scope: !3130)
!3437 = !DILocation(line: 1329, column: 16, scope: !3130)
!3438 = !DILocation(line: 1330, column: 5, scope: !3130)
!3439 = !DILocation(line: 1330, column: 8, scope: !3130)
!3440 = !DILocation(line: 1330, column: 16, scope: !3130)
!3441 = !DILocation(line: 1332, column: 37, scope: !3358)
!3442 = !DILocation(line: 1332, column: 40, scope: !3358)
!3443 = !DILocation(line: 1332, column: 9, scope: !3358)
!3444 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3357)
!3445 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3357)
!3446 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3357)
!3447 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3357)
!3448 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3357)
!3449 = !DILocation(line: 1332, column: 44, scope: !3358)
!3450 = !DILocation(line: 1332, column: 9, scope: !3130)
!3451 = !DILocation(line: 1333, column: 16, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3358, file: !910, line: 1332, column: 50)
!3453 = !DILocation(line: 1333, column: 19, scope: !3452)
!3454 = !DILocation(line: 1333, column: 9, scope: !3452)
!3455 = !DILocation(line: 1334, column: 9, scope: !3452)
!3456 = !DILocation(line: 1337, column: 42, scope: !3130)
!3457 = !DILocation(line: 1337, column: 45, scope: !3130)
!3458 = !DILocation(line: 1337, column: 20, scope: !3130)
!3459 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3302)
!3460 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3302)
!3461 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3302)
!3462 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3302)
!3463 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3302)
!3464 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3302)
!3465 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3302)
!3466 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3302)
!3467 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3302)
!3468 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3302)
!3469 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3302)
!3470 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3302)
!3471 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3302)
!3472 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3302)
!3473 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3302)
!3474 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3301)
!3475 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3301)
!3476 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3301)
!3477 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3300)
!3478 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3300)
!3479 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3300)
!3480 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3300)
!3481 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3300)
!3482 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3300)
!3483 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3302)
!3484 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3302)
!3485 = !DILocation(line: 1337, column: 18, scope: !3130)
!3486 = !DILocation(line: 1338, column: 9, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1338, column: 9)
!3488 = !DILocation(line: 1338, column: 22, scope: !3487)
!3489 = !DILocation(line: 1338, column: 9, scope: !3130)
!3490 = !DILocation(line: 1341, column: 16, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3487, file: !910, line: 1338, column: 35)
!3492 = !DILocation(line: 1341, column: 19, scope: !3491)
!3493 = !DILocation(line: 1341, column: 58, scope: !3491)
!3494 = !DILocation(line: 1341, column: 9, scope: !3491)
!3495 = !DILocation(line: 1342, column: 9, scope: !3491)
!3496 = !DILocation(line: 1345, column: 37, scope: !3130)
!3497 = !DILocation(line: 1345, column: 40, scope: !3130)
!3498 = !DILocation(line: 1345, column: 15, scope: !3130)
!3499 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !3276)
!3500 = distinct !DILexicalBlock(scope: !3199, file: !1817, line: 95, column: 994)
!3501 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !3276)
!3502 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !3276)
!3503 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !3276)
!3504 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !3276)
!3505 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !3276)
!3506 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !3276)
!3507 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !3276)
!3508 = !DILexicalBlockFile(scope: !3509, file: !1817, discriminator: 1)
!3509 = distinct !DILexicalBlock(scope: !3500, file: !1817, line: 95, column: 1025)
!3510 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !3276)
!3511 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !3276)
!3512 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !3276)
!3513 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !3276)
!3514 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !3276)
!3515 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !3276)
!3516 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3276)
!3517 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !3275)
!3518 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !3275)
!3519 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3275)
!3520 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !3274)
!3521 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !3274)
!3522 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !3274)
!3523 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !3274)
!3524 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !3274)
!3525 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !3274)
!3526 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !3274)
!3527 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !3276)
!3528 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !3276)
!3529 = !DILexicalBlockFile(scope: !3199, file: !1817, discriminator: 3)
!3530 = !DILocation(line: 1345, column: 13, scope: !3130)
!3531 = !DILocation(line: 1346, column: 9, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1346, column: 9)
!3533 = !DILocation(line: 1346, column: 17, scope: !3532)
!3534 = !DILocation(line: 1346, column: 9, scope: !3130)
!3535 = !DILocation(line: 1347, column: 39, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3532, file: !910, line: 1346, column: 23)
!3537 = !DILocation(line: 1347, column: 42, scope: !3536)
!3538 = !DILocation(line: 1347, column: 63, scope: !3536)
!3539 = !DILocation(line: 1347, column: 9, scope: !3536)
!3540 = !DILocation(line: 1348, column: 9, scope: !3536)
!3541 = !DILocation(line: 1351, column: 35, scope: !3130)
!3542 = !DILocation(line: 1351, column: 38, scope: !3130)
!3543 = !DILocation(line: 1351, column: 13, scope: !3130)
!3544 = !DILocation(line: 89, column: 1225, scope: !3545, inlinedAt: !3259)
!3545 = distinct !DILexicalBlock(scope: !3258, file: !1817, line: 89, column: 1225)
!3546 = !DILocation(line: 89, column: 1228, scope: !3545, inlinedAt: !3259)
!3547 = !DILocation(line: 89, column: 1241, scope: !3545, inlinedAt: !3259)
!3548 = !DILocation(line: 89, column: 1244, scope: !3545, inlinedAt: !3259)
!3549 = !DILocation(line: 89, column: 1239, scope: !3545, inlinedAt: !3259)
!3550 = !DILocation(line: 89, column: 1251, scope: !3545, inlinedAt: !3259)
!3551 = !DILocation(line: 89, column: 1225, scope: !3258, inlinedAt: !3259)
!3552 = !DILocation(line: 89, column: 1270, scope: !3553, inlinedAt: !3259)
!3553 = !DILexicalBlockFile(scope: !3554, file: !1817, discriminator: 1)
!3554 = distinct !DILexicalBlock(scope: !3545, file: !1817, line: 89, column: 1256)
!3555 = !DILocation(line: 89, column: 1273, scope: !3553, inlinedAt: !3259)
!3556 = !DILocation(line: 89, column: 1258, scope: !3553, inlinedAt: !3259)
!3557 = !DILocation(line: 89, column: 1261, scope: !3553, inlinedAt: !3259)
!3558 = !DILocation(line: 89, column: 1268, scope: !3553, inlinedAt: !3259)
!3559 = !DILocation(line: 89, column: 1285, scope: !3553, inlinedAt: !3259)
!3560 = !DILocation(line: 89, column: 1326, scope: !3257, inlinedAt: !3259)
!3561 = !DILocation(line: 89, column: 1304, scope: !3257, inlinedAt: !3259)
!3562 = !DILocation(line: 89, column: 1107, scope: !3255, inlinedAt: !3256)
!3563 = !DILocation(line: 89, column: 1110, scope: !3255, inlinedAt: !3256)
!3564 = !DILocation(line: 89, column: 1086, scope: !3255, inlinedAt: !3256)
!3565 = !DILocation(line: 89, column: 102, scope: !3252, inlinedAt: !3254)
!3566 = !DILocation(line: 89, column: 105, scope: !3252, inlinedAt: !3254)
!3567 = !DILocation(line: 89, column: 139, scope: !3252, inlinedAt: !3254)
!3568 = !DILocation(line: 89, column: 138, scope: !3252, inlinedAt: !3254)
!3569 = !DILocation(line: 89, column: 141, scope: !3252, inlinedAt: !3254)
!3570 = !DILocation(line: 89, column: 120, scope: !3252, inlinedAt: !3254)
!3571 = !DILocation(line: 89, column: 150, scope: !3252, inlinedAt: !3254)
!3572 = !DILocation(line: 89, column: 179, scope: !3252, inlinedAt: !3254)
!3573 = !DILocation(line: 89, column: 178, scope: !3252, inlinedAt: !3254)
!3574 = !DILocation(line: 89, column: 181, scope: !3252, inlinedAt: !3254)
!3575 = !DILocation(line: 89, column: 160, scope: !3252, inlinedAt: !3254)
!3576 = !DILocation(line: 89, column: 190, scope: !3252, inlinedAt: !3254)
!3577 = !DILocation(line: 89, column: 157, scope: !3252, inlinedAt: !3254)
!3578 = !DILocation(line: 89, column: 217, scope: !3252, inlinedAt: !3254)
!3579 = !DILocation(line: 89, column: 216, scope: !3252, inlinedAt: !3254)
!3580 = !DILocation(line: 89, column: 219, scope: !3252, inlinedAt: !3254)
!3581 = !DILocation(line: 89, column: 198, scope: !3252, inlinedAt: !3254)
!3582 = !DILocation(line: 89, column: 196, scope: !3252, inlinedAt: !3254)
!3583 = !DILocation(line: 89, column: 1297, scope: !3257, inlinedAt: !3259)
!3584 = !DILocation(line: 89, column: 1330, scope: !3585, inlinedAt: !3259)
!3585 = !DILexicalBlockFile(scope: !3258, file: !1817, discriminator: 3)
!3586 = !DILocation(line: 1351, column: 11, scope: !3130)
!3587 = !DILocation(line: 1353, column: 9, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1353, column: 9)
!3589 = !DILocation(line: 1353, column: 15, scope: !3588)
!3590 = !DILocation(line: 1353, column: 9, scope: !3130)
!3591 = !DILocation(line: 1354, column: 9, scope: !3588)
!3592 = !DILocation(line: 1354, column: 12, scope: !3588)
!3593 = !DILocation(line: 1354, column: 20, scope: !3588)
!3594 = !DILocation(line: 1355, column: 9, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1355, column: 9)
!3596 = !DILocation(line: 1355, column: 15, scope: !3595)
!3597 = !DILocation(line: 1355, column: 9, scope: !3130)
!3598 = !DILocation(line: 1356, column: 39, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !910, line: 1355, column: 23)
!3600 = !DILocation(line: 1356, column: 42, scope: !3599)
!3601 = !DILocation(line: 1356, column: 9, scope: !3599)
!3602 = !DILocation(line: 1357, column: 9, scope: !3599)
!3603 = !DILocation(line: 1359, column: 9, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1359, column: 9)
!3605 = !DILocation(line: 1359, column: 15, scope: !3604)
!3606 = !DILocation(line: 1359, column: 9, scope: !3130)
!3607 = !DILocation(line: 1360, column: 39, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !910, line: 1359, column: 23)
!3609 = !DILocation(line: 1360, column: 42, scope: !3608)
!3610 = !DILocation(line: 1360, column: 9, scope: !3608)
!3611 = !DILocation(line: 1361, column: 9, scope: !3608)
!3612 = !DILocation(line: 1365, column: 5, scope: !3130)
!3613 = !DILocation(line: 1365, column: 40, scope: !3242)
!3614 = !DILocation(line: 1365, column: 43, scope: !3242)
!3615 = !DILocation(line: 1365, column: 12, scope: !3242)
!3616 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3241)
!3617 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3241)
!3618 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3241)
!3619 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3241)
!3620 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3241)
!3621 = !DILocation(line: 1365, column: 47, scope: !3242)
!3622 = !DILocation(line: 1365, column: 51, scope: !3242)
!3623 = !DILocation(line: 1365, column: 55, scope: !3624)
!3624 = !DILexicalBlockFile(scope: !3130, file: !910, discriminator: 2)
!3625 = !DILocation(line: 1365, column: 58, scope: !3624)
!3626 = !DILocation(line: 1365, column: 61, scope: !3624)
!3627 = !DILocation(line: 1365, column: 54, scope: !3624)
!3628 = !DILocation(line: 1365, column: 51, scope: !3624)
!3629 = !DILocation(line: 1365, column: 5, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3130, file: !910, discriminator: 3)
!3631 = !DILocalVariable(name: "var_size", scope: !3140, file: !910, line: 1366, type: !941)
!3632 = !DILocation(line: 1366, column: 13, scope: !3140)
!3633 = !DILocation(line: 1367, column: 47, scope: !3139)
!3634 = !DILocation(line: 1367, column: 25, scope: !3139)
!3635 = !DILocation(line: 1367, column: 23, scope: !3139)
!3636 = !DILocation(line: 1368, column: 62, scope: !3139)
!3637 = !DILocation(line: 1367, column: 13, scope: !3140)
!3638 = !DILocalVariable(name: "ch_gb", scope: !3138, file: !910, line: 1369, type: !1816)
!3639 = !DILocation(line: 1369, column: 28, scope: !3138)
!3640 = !DILocation(line: 1370, column: 18, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3138, file: !910, line: 1370, column: 17)
!3642 = !DILocation(line: 1370, column: 17, scope: !3138)
!3643 = !DILocation(line: 1371, column: 21, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3641, file: !910, line: 1370, column: 28)
!3645 = !DILocation(line: 1372, column: 17, scope: !3644)
!3646 = !DILocation(line: 1375, column: 38, scope: !3138)
!3647 = !DILocation(line: 1375, column: 41, scope: !3138)
!3648 = !DILocation(line: 1375, column: 44, scope: !3138)
!3649 = !DILocation(line: 1375, column: 52, scope: !3138)
!3650 = !DILocation(line: 1375, column: 13, scope: !3138)
!3651 = !DILocation(line: 137, column: 16, scope: !2215, inlinedAt: !3229)
!3652 = !DILocation(line: 137, column: 25, scope: !2215, inlinedAt: !3229)
!3653 = !DILocation(line: 137, column: 14, scope: !2215, inlinedAt: !3229)
!3654 = !DILocation(line: 137, column: 34, scope: !2221, inlinedAt: !3229)
!3655 = !DILocation(line: 137, column: 93, scope: !2224, inlinedAt: !3229)
!3656 = !DILocation(line: 137, column: 93, scope: !2221, inlinedAt: !3229)
!3657 = !DILocation(line: 138, column: 17, scope: !2153, inlinedAt: !3229)
!3658 = !DILocation(line: 138, column: 5, scope: !2153, inlinedAt: !3229)
!3659 = !DILocation(line: 138, column: 8, scope: !2153, inlinedAt: !3229)
!3660 = !DILocation(line: 138, column: 15, scope: !2153, inlinedAt: !3229)
!3661 = !DILocation(line: 139, column: 23, scope: !2153, inlinedAt: !3229)
!3662 = !DILocation(line: 139, column: 5, scope: !2153, inlinedAt: !3229)
!3663 = !DILocation(line: 139, column: 8, scope: !2153, inlinedAt: !3229)
!3664 = !DILocation(line: 139, column: 21, scope: !2153, inlinedAt: !3229)
!3665 = !DILocation(line: 140, column: 21, scope: !2153, inlinedAt: !3229)
!3666 = !DILocation(line: 140, column: 27, scope: !2153, inlinedAt: !3229)
!3667 = !DILocation(line: 140, column: 25, scope: !2153, inlinedAt: !3229)
!3668 = !DILocation(line: 140, column: 5, scope: !2153, inlinedAt: !3229)
!3669 = !DILocation(line: 140, column: 8, scope: !2153, inlinedAt: !3229)
!3670 = !DILocation(line: 140, column: 19, scope: !2153, inlinedAt: !3229)
!3671 = !DILocation(line: 1377, column: 13, scope: !3138)
!3672 = !DILocation(line: 1377, column: 20, scope: !3227)
!3673 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3226)
!3674 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3226)
!3675 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3226)
!3676 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3226)
!3677 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3226)
!3678 = !DILocation(line: 1377, column: 55, scope: !3227)
!3679 = !DILocation(line: 1377, column: 13, scope: !3227)
!3680 = !DILocalVariable(name: "channel", scope: !3137, file: !910, line: 1378, type: !1826)
!3681 = !DILocation(line: 1378, column: 29, scope: !3137)
!3682 = !DILocalVariable(name: "current_pixel_type", scope: !3137, file: !910, line: 1379, type: !923)
!3683 = !DILocation(line: 1379, column: 35, scope: !3137)
!3684 = !DILocalVariable(name: "channel_index", scope: !3137, file: !910, line: 1380, type: !941)
!3685 = !DILocation(line: 1380, column: 21, scope: !3137)
!3686 = !DILocalVariable(name: "xsub", scope: !3137, file: !910, line: 1381, type: !941)
!3687 = !DILocation(line: 1381, column: 21, scope: !3137)
!3688 = !DILocalVariable(name: "ysub", scope: !3137, file: !910, line: 1381, type: !941)
!3689 = !DILocation(line: 1381, column: 27, scope: !3137)
!3690 = !DILocation(line: 1383, column: 28, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1383, column: 21)
!3692 = !DILocation(line: 1383, column: 31, scope: !3691)
!3693 = !DILocation(line: 1383, column: 21, scope: !3691)
!3694 = !DILocation(line: 1383, column: 42, scope: !3691)
!3695 = !DILocation(line: 1383, column: 21, scope: !3137)
!3696 = !DILocation(line: 1384, column: 39, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !910, line: 1384, column: 25)
!3698 = distinct !DILexicalBlock(scope: !3691, file: !910, line: 1383, column: 48)
!3699 = !DILocation(line: 1384, column: 47, scope: !3697)
!3700 = !DILocation(line: 1384, column: 50, scope: !3697)
!3701 = !DILocation(line: 1384, column: 64, scope: !3697)
!3702 = !DILocation(line: 1384, column: 67, scope: !3697)
!3703 = !DILocation(line: 1384, column: 57, scope: !3697)
!3704 = !DILocation(line: 1384, column: 25, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3697, file: !910, discriminator: 1)
!3706 = !DILocation(line: 1384, column: 75, scope: !3697)
!3707 = !DILocation(line: 1384, column: 25, scope: !3698)
!3708 = !DILocation(line: 1385, column: 37, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3697, file: !910, line: 1384, column: 81)
!3710 = !DILocation(line: 1386, column: 32, scope: !3709)
!3711 = !DILocation(line: 1386, column: 35, scope: !3709)
!3712 = !DILocation(line: 1387, column: 69, scope: !3709)
!3713 = !DILocation(line: 1386, column: 25, scope: !3709)
!3714 = !DILocation(line: 1388, column: 48, scope: !3709)
!3715 = !DILocation(line: 1388, column: 51, scope: !3709)
!3716 = !DILocation(line: 1388, column: 41, scope: !3709)
!3717 = !DILocation(line: 1388, column: 31, scope: !3709)
!3718 = !DILocation(line: 1388, column: 38, scope: !3709)
!3719 = !DILocation(line: 1389, column: 36, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3709, file: !910, line: 1389, column: 29)
!3721 = !DILocation(line: 1389, column: 29, scope: !3720)
!3722 = !DILocation(line: 1389, column: 43, scope: !3720)
!3723 = !DILocation(line: 1389, column: 29, scope: !3709)
!3724 = !DILocation(line: 1390, column: 35, scope: !3720)
!3725 = !DILocation(line: 1390, column: 41, scope: !3720)
!3726 = !DILocation(line: 1390, column: 29, scope: !3720)
!3727 = !DILocation(line: 1391, column: 21, scope: !3709)
!3728 = !DILocation(line: 1392, column: 37, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3697, file: !910, line: 1391, column: 28)
!3730 = !DILocation(line: 1393, column: 32, scope: !3729)
!3731 = !DILocation(line: 1393, column: 35, scope: !3729)
!3732 = !DILocation(line: 1394, column: 77, scope: !3729)
!3733 = !DILocation(line: 1393, column: 25, scope: !3729)
!3734 = !DILocation(line: 1396, column: 17, scope: !3698)
!3735 = !DILocation(line: 1397, column: 33, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3691, file: !910, line: 1396, column: 24)
!3737 = !DILocation(line: 1400, column: 21, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1400, column: 21)
!3739 = !DILocation(line: 1400, column: 21, scope: !3137)
!3740 = !DILocation(line: 1401, column: 39, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !910, line: 1401, column: 25)
!3742 = distinct !DILexicalBlock(scope: !3738, file: !910, line: 1400, column: 34)
!3743 = !DILocation(line: 1401, column: 26, scope: !3741)
!3744 = !DILocation(line: 1401, column: 52, scope: !3741)
!3745 = !DILocation(line: 1402, column: 39, scope: !3741)
!3746 = !DILocation(line: 1402, column: 26, scope: !3741)
!3747 = !DILocation(line: 1402, column: 52, scope: !3741)
!3748 = !DILocation(line: 1403, column: 39, scope: !3741)
!3749 = !DILocation(line: 1403, column: 26, scope: !3741)
!3750 = !DILocation(line: 1401, column: 25, scope: !3751)
!3751 = !DILexicalBlockFile(scope: !3742, file: !910, discriminator: 1)
!3752 = !DILocation(line: 1404, column: 39, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3741, file: !910, line: 1403, column: 53)
!3754 = !DILocation(line: 1405, column: 25, scope: !3753)
!3755 = !DILocation(line: 1405, column: 28, scope: !3753)
!3756 = !DILocation(line: 1405, column: 36, scope: !3753)
!3757 = !DILocation(line: 1406, column: 21, scope: !3753)
!3758 = !DILocation(line: 1406, column: 46, scope: !3759)
!3759 = !DILexicalBlockFile(scope: !3760, file: !910, discriminator: 1)
!3760 = distinct !DILexicalBlock(scope: !3741, file: !910, line: 1406, column: 32)
!3761 = !DILocation(line: 1406, column: 33, scope: !3759)
!3762 = !DILocation(line: 1406, column: 59, scope: !3759)
!3763 = !DILocation(line: 1407, column: 46, scope: !3760)
!3764 = !DILocation(line: 1407, column: 33, scope: !3760)
!3765 = !DILocation(line: 1406, column: 32, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !3741, file: !910, discriminator: 2)
!3767 = !DILocation(line: 1408, column: 39, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3760, file: !910, line: 1407, column: 60)
!3769 = !DILocation(line: 1409, column: 25, scope: !3768)
!3770 = !DILocation(line: 1409, column: 28, scope: !3768)
!3771 = !DILocation(line: 1409, column: 36, scope: !3768)
!3772 = !DILocation(line: 1410, column: 21, scope: !3768)
!3773 = !DILocation(line: 1410, column: 46, scope: !3774)
!3774 = !DILexicalBlockFile(scope: !3775, file: !910, discriminator: 1)
!3775 = distinct !DILexicalBlock(scope: !3760, file: !910, line: 1410, column: 32)
!3776 = !DILocation(line: 1410, column: 33, scope: !3774)
!3777 = !DILocation(line: 1410, column: 32, scope: !3774)
!3778 = !DILocation(line: 1411, column: 39, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !910, line: 1410, column: 60)
!3780 = !DILocation(line: 1412, column: 25, scope: !3779)
!3781 = !DILocation(line: 1412, column: 28, scope: !3779)
!3782 = !DILocation(line: 1412, column: 36, scope: !3779)
!3783 = !DILocation(line: 1413, column: 21, scope: !3779)
!3784 = !DILocation(line: 1413, column: 46, scope: !3785)
!3785 = !DILexicalBlockFile(scope: !3786, file: !910, discriminator: 1)
!3786 = distinct !DILexicalBlock(scope: !3775, file: !910, line: 1413, column: 32)
!3787 = !DILocation(line: 1413, column: 33, scope: !3785)
!3788 = !DILocation(line: 1413, column: 59, scope: !3785)
!3789 = !DILocation(line: 1414, column: 46, scope: !3786)
!3790 = !DILocation(line: 1414, column: 33, scope: !3786)
!3791 = !DILocation(line: 1414, column: 59, scope: !3786)
!3792 = !DILocation(line: 1415, column: 46, scope: !3786)
!3793 = !DILocation(line: 1415, column: 33, scope: !3786)
!3794 = !DILocation(line: 1413, column: 32, scope: !3795)
!3795 = !DILexicalBlockFile(scope: !3775, file: !910, discriminator: 2)
!3796 = !DILocation(line: 1416, column: 46, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3786, file: !910, line: 1415, column: 59)
!3798 = !DILocation(line: 1417, column: 25, scope: !3797)
!3799 = !DILocation(line: 1417, column: 28, scope: !3797)
!3800 = !DILocation(line: 1417, column: 36, scope: !3797)
!3801 = !DILocation(line: 1418, column: 21, scope: !3797)
!3802 = !DILocation(line: 1418, column: 46, scope: !3803)
!3803 = !DILexicalBlockFile(scope: !3804, file: !910, discriminator: 1)
!3804 = distinct !DILexicalBlock(scope: !3786, file: !910, line: 1418, column: 32)
!3805 = !DILocation(line: 1418, column: 33, scope: !3803)
!3806 = !DILocation(line: 1418, column: 32, scope: !3803)
!3807 = !DILocation(line: 1419, column: 39, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3804, file: !910, line: 1418, column: 60)
!3809 = !DILocation(line: 1420, column: 21, scope: !3808)
!3810 = !DILocation(line: 1421, column: 32, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3804, file: !910, line: 1420, column: 28)
!3812 = !DILocation(line: 1421, column: 35, scope: !3811)
!3813 = !DILocation(line: 1422, column: 71, scope: !3811)
!3814 = !DILocation(line: 1421, column: 25, scope: !3811)
!3815 = !DILocation(line: 1424, column: 17, scope: !3742)
!3816 = !DILocation(line: 1427, column: 17, scope: !3137)
!3817 = !DILocation(line: 1427, column: 24, scope: !3224)
!3818 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3223)
!3819 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3223)
!3820 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3223)
!3821 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3223)
!3822 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3223)
!3823 = !DILocation(line: 1427, column: 59, scope: !3224)
!3824 = !DILocation(line: 1427, column: 63, scope: !3224)
!3825 = !DILocation(line: 1428, column: 24, scope: !3137)
!3826 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !3200)
!3827 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !3200)
!3828 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !3200)
!3829 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !3200)
!3830 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !3200)
!3831 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !3200)
!3832 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !3200)
!3833 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !3200)
!3834 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !3200)
!3835 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !3200)
!3836 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !3200)
!3837 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !3200)
!3838 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !3200)
!3839 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !3200)
!3840 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3200)
!3841 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !3197)
!3842 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !3197)
!3843 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3197)
!3844 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !3195)
!3845 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !3195)
!3846 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !3195)
!3847 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !3195)
!3848 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !3195)
!3849 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !3195)
!3850 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !3195)
!3851 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !3200)
!3852 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !3200)
!3853 = !DILocation(line: 1427, column: 63, scope: !3854)
!3854 = !DILexicalBlockFile(scope: !3137, file: !910, discriminator: 2)
!3855 = !DILocation(line: 1427, column: 17, scope: !3856)
!3856 = !DILexicalBlockFile(scope: !3137, file: !910, discriminator: 3)
!3857 = !DILocation(line: 1429, column: 21, scope: !3137)
!3858 = distinct !{!3858, !3816}
!3859 = !DILocation(line: 1431, column: 21, scope: !3165)
!3860 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3164)
!3861 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3164)
!3862 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3164)
!3863 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3164)
!3864 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3164)
!3865 = !DILocation(line: 1431, column: 56, scope: !3165)
!3866 = !DILocation(line: 1431, column: 21, scope: !3137)
!3867 = !DILocation(line: 1432, column: 28, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3165, file: !910, line: 1431, column: 61)
!3869 = !DILocation(line: 1432, column: 31, scope: !3868)
!3870 = !DILocation(line: 1432, column: 21, scope: !3868)
!3871 = !DILocation(line: 1433, column: 25, scope: !3868)
!3872 = !DILocation(line: 1434, column: 21, scope: !3868)
!3873 = !DILocation(line: 1437, column: 38, scope: !3137)
!3874 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3136)
!3875 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3136)
!3876 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3136)
!3877 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3136)
!3878 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3136)
!3879 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3136)
!3880 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3136)
!3881 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3136)
!3882 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3136)
!3883 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3136)
!3884 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3136)
!3885 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3136)
!3886 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3136)
!3887 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3136)
!3888 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3136)
!3889 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3135)
!3890 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3135)
!3891 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3135)
!3892 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3134)
!3893 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3134)
!3894 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3134)
!3895 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3134)
!3896 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3134)
!3897 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3134)
!3898 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3136)
!3899 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3136)
!3900 = !DILocation(line: 1437, column: 36, scope: !3137)
!3901 = !DILocation(line: 1438, column: 21, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1438, column: 21)
!3903 = !DILocation(line: 1438, column: 40, scope: !3902)
!3904 = !DILocation(line: 1438, column: 21, scope: !3137)
!3905 = !DILocation(line: 1439, column: 51, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3902, file: !910, line: 1438, column: 56)
!3907 = !DILocation(line: 1439, column: 54, scope: !3906)
!3908 = !DILocation(line: 1440, column: 51, scope: !3906)
!3909 = !DILocation(line: 1439, column: 21, scope: !3906)
!3910 = !DILocation(line: 1441, column: 25, scope: !3906)
!3911 = !DILocation(line: 1442, column: 21, scope: !3906)
!3912 = !DILocation(line: 1445, column: 17, scope: !3137)
!3913 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !3148)
!3914 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !3148)
!3915 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !3148)
!3916 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !3148)
!3917 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !3148)
!3918 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !3148)
!3919 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !3148)
!3920 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !3148)
!3921 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !3148)
!3922 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !3148)
!3923 = !DILexicalBlockFile(scope: !3144, file: !1817, discriminator: 1)
!3924 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !3148)
!3925 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !3148)
!3926 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !3148)
!3927 = !DILexicalBlockFile(scope: !3144, file: !1817, discriminator: 2)
!3928 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !3148)
!3929 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !3148)
!3930 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !3148)
!3931 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !3148)
!3932 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !3148)
!3933 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !3148)
!3934 = !DILexicalBlockFile(scope: !3144, file: !1817, discriminator: 3)
!3935 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !3148)
!3936 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !3148)
!3937 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !3148)
!3938 = !DILocation(line: 1446, column: 24, scope: !3137)
!3939 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3154)
!3940 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3154)
!3941 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3154)
!3942 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3154)
!3943 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3154)
!3944 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3154)
!3945 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3154)
!3946 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3154)
!3947 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3154)
!3948 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3154)
!3949 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3154)
!3950 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3154)
!3951 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3154)
!3952 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3154)
!3953 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3154)
!3954 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3153)
!3955 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3153)
!3956 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3153)
!3957 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3152)
!3958 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3152)
!3959 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3152)
!3960 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3152)
!3961 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3152)
!3962 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3152)
!3963 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3154)
!3964 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3154)
!3965 = !DILocation(line: 1446, column: 22, scope: !3137)
!3966 = !DILocation(line: 1447, column: 24, scope: !3137)
!3967 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3160)
!3968 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3160)
!3969 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3160)
!3970 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3160)
!3971 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3160)
!3972 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3160)
!3973 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3160)
!3974 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3160)
!3975 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3160)
!3976 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3160)
!3977 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3160)
!3978 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3160)
!3979 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3160)
!3980 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3160)
!3981 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3160)
!3982 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3159)
!3983 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3159)
!3984 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3159)
!3985 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3158)
!3986 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3158)
!3987 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3158)
!3988 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3158)
!3989 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3158)
!3990 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3158)
!3991 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3160)
!3992 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3160)
!3993 = !DILocation(line: 1447, column: 22, scope: !3137)
!3994 = !DILocation(line: 1449, column: 21, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1449, column: 21)
!3996 = !DILocation(line: 1449, column: 26, scope: !3995)
!3997 = !DILocation(line: 1449, column: 31, scope: !3995)
!3998 = !DILocation(line: 1449, column: 34, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !3995, file: !910, discriminator: 1)
!4000 = !DILocation(line: 1449, column: 39, scope: !3999)
!4001 = !DILocation(line: 1449, column: 21, scope: !3999)
!4002 = !DILocation(line: 1450, column: 51, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3995, file: !910, line: 1449, column: 45)
!4004 = !DILocation(line: 1450, column: 54, scope: !4003)
!4005 = !DILocation(line: 1452, column: 51, scope: !4003)
!4006 = !DILocation(line: 1452, column: 57, scope: !4003)
!4007 = !DILocation(line: 1450, column: 21, scope: !4003)
!4008 = !DILocation(line: 1453, column: 25, scope: !4003)
!4009 = !DILocation(line: 1454, column: 21, scope: !4003)
!4010 = !DILocation(line: 1457, column: 21, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1457, column: 21)
!4012 = !DILocation(line: 1457, column: 35, scope: !4011)
!4013 = !DILocation(line: 1457, column: 40, scope: !4011)
!4014 = !DILocation(line: 1457, column: 62, scope: !4015)
!4015 = !DILexicalBlockFile(scope: !4011, file: !910, discriminator: 1)
!4016 = !DILocation(line: 1457, column: 43, scope: !4015)
!4017 = !DILocation(line: 1457, column: 46, scope: !4015)
!4018 = !DILocation(line: 1457, column: 77, scope: !4015)
!4019 = !DILocation(line: 1457, column: 21, scope: !4015)
!4020 = !DILocation(line: 1458, column: 25, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !910, line: 1458, column: 25)
!4022 = distinct !DILexicalBlock(scope: !4011, file: !910, line: 1457, column: 84)
!4023 = !DILocation(line: 1458, column: 28, scope: !4021)
!4024 = !DILocation(line: 1458, column: 39, scope: !4021)
!4025 = !DILocation(line: 1458, column: 54, scope: !4021)
!4026 = !DILocation(line: 1459, column: 25, scope: !4021)
!4027 = !DILocation(line: 1459, column: 28, scope: !4021)
!4028 = !DILocation(line: 1459, column: 42, scope: !4021)
!4029 = !DILocation(line: 1459, column: 39, scope: !4021)
!4030 = !DILocation(line: 1458, column: 25, scope: !4031)
!4031 = !DILexicalBlockFile(scope: !4022, file: !910, discriminator: 1)
!4032 = !DILocation(line: 1460, column: 32, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4021, file: !910, line: 1459, column: 62)
!4034 = !DILocation(line: 1460, column: 35, scope: !4033)
!4035 = !DILocation(line: 1460, column: 25, scope: !4033)
!4036 = !DILocation(line: 1462, column: 29, scope: !4033)
!4037 = !DILocation(line: 1463, column: 25, scope: !4033)
!4038 = !DILocation(line: 1465, column: 37, scope: !4022)
!4039 = !DILocation(line: 1465, column: 21, scope: !4022)
!4040 = !DILocation(line: 1465, column: 24, scope: !4022)
!4041 = !DILocation(line: 1465, column: 35, scope: !4022)
!4042 = !DILocation(line: 1466, column: 57, scope: !4022)
!4043 = !DILocation(line: 1466, column: 60, scope: !4022)
!4044 = !DILocation(line: 1466, column: 40, scope: !4022)
!4045 = !DILocation(line: 1466, column: 21, scope: !4022)
!4046 = !DILocation(line: 1466, column: 24, scope: !4022)
!4047 = !DILocation(line: 1466, column: 55, scope: !4022)
!4048 = !DILocation(line: 1467, column: 17, scope: !4022)
!4049 = !DILocation(line: 1467, column: 28, scope: !4050)
!4050 = !DILexicalBlockFile(scope: !4051, file: !910, discriminator: 1)
!4051 = distinct !DILexicalBlock(scope: !4011, file: !910, line: 1467, column: 28)
!4052 = !DILocation(line: 1467, column: 42, scope: !4050)
!4053 = !DILocation(line: 1468, column: 28, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !910, line: 1467, column: 48)
!4055 = !DILocation(line: 1468, column: 31, scope: !4054)
!4056 = !DILocation(line: 1469, column: 67, scope: !4054)
!4057 = !DILocation(line: 1468, column: 21, scope: !4054)
!4058 = !DILocation(line: 1470, column: 25, scope: !4054)
!4059 = !DILocation(line: 1471, column: 21, scope: !4054)
!4060 = !DILocation(line: 1474, column: 42, scope: !3137)
!4061 = !DILocation(line: 1474, column: 45, scope: !3137)
!4062 = !DILocation(line: 1475, column: 44, scope: !3137)
!4063 = !DILocation(line: 1475, column: 47, scope: !3137)
!4064 = !DILocation(line: 1475, column: 42, scope: !3137)
!4065 = !DILocation(line: 1475, column: 59, scope: !3137)
!4066 = !DILocation(line: 1474, column: 31, scope: !3137)
!4067 = !DILocation(line: 1474, column: 17, scope: !3137)
!4068 = !DILocation(line: 1474, column: 20, scope: !3137)
!4069 = !DILocation(line: 1474, column: 29, scope: !3137)
!4070 = !DILocation(line: 1476, column: 22, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1476, column: 21)
!4072 = !DILocation(line: 1476, column: 25, scope: !4071)
!4073 = !DILocation(line: 1476, column: 21, scope: !3137)
!4074 = !DILocation(line: 1477, column: 25, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !910, line: 1476, column: 35)
!4076 = !DILocation(line: 1478, column: 21, scope: !4075)
!4077 = !DILocation(line: 1480, column: 40, scope: !3137)
!4078 = !DILocation(line: 1480, column: 43, scope: !3137)
!4079 = !DILocation(line: 1480, column: 55, scope: !3137)
!4080 = !DILocation(line: 1480, column: 28, scope: !3137)
!4081 = !DILocation(line: 1480, column: 31, scope: !3137)
!4082 = !DILocation(line: 1480, column: 25, scope: !3137)
!4083 = !DILocation(line: 1481, column: 39, scope: !3137)
!4084 = !DILocation(line: 1481, column: 17, scope: !3137)
!4085 = !DILocation(line: 1481, column: 26, scope: !3137)
!4086 = !DILocation(line: 1481, column: 37, scope: !3137)
!4087 = !DILocation(line: 1482, column: 33, scope: !3137)
!4088 = !DILocation(line: 1482, column: 17, scope: !3137)
!4089 = !DILocation(line: 1482, column: 26, scope: !3137)
!4090 = !DILocation(line: 1482, column: 31, scope: !3137)
!4091 = !DILocation(line: 1483, column: 33, scope: !3137)
!4092 = !DILocation(line: 1483, column: 17, scope: !3137)
!4093 = !DILocation(line: 1483, column: 26, scope: !3137)
!4094 = !DILocation(line: 1483, column: 31, scope: !3137)
!4095 = !DILocation(line: 1485, column: 21, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 1485, column: 21)
!4097 = !DILocation(line: 1485, column: 40, scope: !4096)
!4098 = !DILocation(line: 1485, column: 21, scope: !3137)
!4099 = !DILocation(line: 1486, column: 21, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4096, file: !910, line: 1485, column: 53)
!4101 = !DILocation(line: 1486, column: 24, scope: !4100)
!4102 = !DILocation(line: 1486, column: 47, scope: !4100)
!4103 = !DILocation(line: 1487, column: 17, scope: !4100)
!4104 = !DILocation(line: 1488, column: 21, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4096, file: !910, line: 1487, column: 24)
!4106 = !DILocation(line: 1488, column: 24, scope: !4105)
!4107 = !DILocation(line: 1488, column: 47, scope: !4105)
!4108 = !DILocation(line: 1377, column: 13, scope: !4109)
!4109 = !DILexicalBlockFile(scope: !3138, file: !910, discriminator: 2)
!4110 = distinct !{!4110, !3671}
!4111 = !DILocation(line: 1494, column: 18, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !3138, file: !910, line: 1494, column: 17)
!4113 = !DILocation(line: 1494, column: 21, scope: !4112)
!4114 = !DILocation(line: 1494, column: 17, scope: !3138)
!4115 = !DILocation(line: 1495, column: 25, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !910, line: 1495, column: 21)
!4117 = distinct !DILexicalBlock(scope: !4112, file: !910, line: 1494, column: 29)
!4118 = !DILocation(line: 1495, column: 28, scope: !4116)
!4119 = !DILocation(line: 1495, column: 51, scope: !4116)
!4120 = !DILocation(line: 1495, column: 54, scope: !4116)
!4121 = !DILocation(line: 1495, column: 48, scope: !4116)
!4122 = !DILocation(line: 1495, column: 24, scope: !4116)
!4123 = !DILocation(line: 1495, column: 77, scope: !4124)
!4124 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 1)
!4125 = !DILocation(line: 1495, column: 80, scope: !4124)
!4126 = !DILocation(line: 1495, column: 24, scope: !4124)
!4127 = !DILocation(line: 1495, column: 103, scope: !4128)
!4128 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 2)
!4129 = !DILocation(line: 1495, column: 106, scope: !4128)
!4130 = !DILocation(line: 1495, column: 24, scope: !4128)
!4131 = !DILocation(line: 1495, column: 24, scope: !4132)
!4132 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 3)
!4133 = !DILocation(line: 1495, column: 131, scope: !4132)
!4134 = !DILocation(line: 1495, column: 134, scope: !4132)
!4135 = !DILocation(line: 1495, column: 128, scope: !4132)
!4136 = !DILocation(line: 1495, column: 22, scope: !4132)
!4137 = !DILocation(line: 1495, column: 157, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 4)
!4139 = !DILocation(line: 1495, column: 160, scope: !4138)
!4140 = !DILocation(line: 1495, column: 22, scope: !4138)
!4141 = !DILocation(line: 1495, column: 185, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 5)
!4143 = !DILocation(line: 1495, column: 188, scope: !4142)
!4144 = !DILocation(line: 1495, column: 211, scope: !4142)
!4145 = !DILocation(line: 1495, column: 214, scope: !4142)
!4146 = !DILocation(line: 1495, column: 208, scope: !4142)
!4147 = !DILocation(line: 1495, column: 184, scope: !4142)
!4148 = !DILocation(line: 1495, column: 237, scope: !4149)
!4149 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 6)
!4150 = !DILocation(line: 1495, column: 240, scope: !4149)
!4151 = !DILocation(line: 1495, column: 184, scope: !4149)
!4152 = !DILocation(line: 1495, column: 263, scope: !4153)
!4153 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 7)
!4154 = !DILocation(line: 1495, column: 266, scope: !4153)
!4155 = !DILocation(line: 1495, column: 184, scope: !4153)
!4156 = !DILocation(line: 1495, column: 184, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 8)
!4158 = !DILocation(line: 1495, column: 22, scope: !4157)
!4159 = !DILocation(line: 1495, column: 22, scope: !4160)
!4160 = !DILexicalBlockFile(scope: !4116, file: !910, discriminator: 9)
!4161 = !DILocation(line: 1497, column: 51, scope: !4116)
!4162 = !DILocation(line: 1495, column: 21, scope: !4160)
!4163 = !DILocation(line: 1498, column: 25, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !910, line: 1498, column: 25)
!4165 = distinct !DILexicalBlock(scope: !4116, file: !910, line: 1497, column: 56)
!4166 = !DILocation(line: 1498, column: 28, scope: !4164)
!4167 = !DILocation(line: 1498, column: 47, scope: !4164)
!4168 = !DILocation(line: 1498, column: 25, scope: !4165)
!4169 = !DILocation(line: 1499, column: 32, scope: !4164)
!4170 = !DILocation(line: 1499, column: 35, scope: !4164)
!4171 = !DILocation(line: 1499, column: 25, scope: !4164)
!4172 = !DILocation(line: 1500, column: 25, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4165, file: !910, line: 1500, column: 25)
!4174 = !DILocation(line: 1500, column: 28, scope: !4173)
!4175 = !DILocation(line: 1500, column: 47, scope: !4173)
!4176 = !DILocation(line: 1500, column: 25, scope: !4165)
!4177 = !DILocation(line: 1501, column: 32, scope: !4173)
!4178 = !DILocation(line: 1501, column: 35, scope: !4173)
!4179 = !DILocation(line: 1501, column: 25, scope: !4173)
!4180 = !DILocation(line: 1502, column: 25, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4165, file: !910, line: 1502, column: 25)
!4182 = !DILocation(line: 1502, column: 28, scope: !4181)
!4183 = !DILocation(line: 1502, column: 47, scope: !4181)
!4184 = !DILocation(line: 1502, column: 25, scope: !4165)
!4185 = !DILocation(line: 1503, column: 32, scope: !4181)
!4186 = !DILocation(line: 1503, column: 35, scope: !4181)
!4187 = !DILocation(line: 1503, column: 25, scope: !4181)
!4188 = !DILocation(line: 1504, column: 25, scope: !4165)
!4189 = !DILocation(line: 1505, column: 21, scope: !4165)
!4190 = !DILocation(line: 1507, column: 13, scope: !4117)
!4191 = !DILocation(line: 1510, column: 34, scope: !3138)
!4192 = !DILocation(line: 1510, column: 41, scope: !3138)
!4193 = !DILocation(line: 1510, column: 13, scope: !3138)
!4194 = !DILocation(line: 1510, column: 16, scope: !3138)
!4195 = !DILocation(line: 1510, column: 19, scope: !3138)
!4196 = !DILocation(line: 1510, column: 26, scope: !3138)
!4197 = !DILocation(line: 1511, column: 13, scope: !3138)
!4198 = distinct !{!4198, !3612}
!4199 = !DILocation(line: 1512, column: 54, scope: !3171)
!4200 = !DILocation(line: 1512, column: 32, scope: !3171)
!4201 = !DILocation(line: 1512, column: 30, scope: !3171)
!4202 = !DILocation(line: 1513, column: 59, scope: !3171)
!4203 = !DILocation(line: 1512, column: 20, scope: !3139)
!4204 = !DILocation(line: 1514, column: 18, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !3170, file: !910, line: 1514, column: 17)
!4206 = !DILocation(line: 1514, column: 17, scope: !3170)
!4207 = !DILocation(line: 1515, column: 21, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4205, file: !910, line: 1514, column: 28)
!4209 = !DILocation(line: 1516, column: 17, scope: !4208)
!4210 = !DILocation(line: 1519, column: 45, scope: !3170)
!4211 = !DILocation(line: 1519, column: 48, scope: !3170)
!4212 = !DILocation(line: 1519, column: 23, scope: !3170)
!4213 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3169)
!4214 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3169)
!4215 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3169)
!4216 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3169)
!4217 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3169)
!4218 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3169)
!4219 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3169)
!4220 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3169)
!4221 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3169)
!4222 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3169)
!4223 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3169)
!4224 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3169)
!4225 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3169)
!4226 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3169)
!4227 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3169)
!4228 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3168)
!4229 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3168)
!4230 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3168)
!4231 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3167)
!4232 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3167)
!4233 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3167)
!4234 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3167)
!4235 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3167)
!4236 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3167)
!4237 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3169)
!4238 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3169)
!4239 = !DILocation(line: 1519, column: 13, scope: !3170)
!4240 = !DILocation(line: 1519, column: 16, scope: !3170)
!4241 = !DILocation(line: 1519, column: 21, scope: !3170)
!4242 = !DILocation(line: 1520, column: 45, scope: !3170)
!4243 = !DILocation(line: 1520, column: 48, scope: !3170)
!4244 = !DILocation(line: 1520, column: 23, scope: !3170)
!4245 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3177)
!4246 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3177)
!4247 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3177)
!4248 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3177)
!4249 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3177)
!4250 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3177)
!4251 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3177)
!4252 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3177)
!4253 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3177)
!4254 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3177)
!4255 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3177)
!4256 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3177)
!4257 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3177)
!4258 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3177)
!4259 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3177)
!4260 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3176)
!4261 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3176)
!4262 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3176)
!4263 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3175)
!4264 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3175)
!4265 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3175)
!4266 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3175)
!4267 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3175)
!4268 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3175)
!4269 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3177)
!4270 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3177)
!4271 = !DILocation(line: 1520, column: 13, scope: !3170)
!4272 = !DILocation(line: 1520, column: 16, scope: !3170)
!4273 = !DILocation(line: 1520, column: 21, scope: !3170)
!4274 = !DILocation(line: 1521, column: 45, scope: !3170)
!4275 = !DILocation(line: 1521, column: 48, scope: !3170)
!4276 = !DILocation(line: 1521, column: 23, scope: !3170)
!4277 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3183)
!4278 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3183)
!4279 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3183)
!4280 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3183)
!4281 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3183)
!4282 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3183)
!4283 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3183)
!4284 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3183)
!4285 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3183)
!4286 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3183)
!4287 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3183)
!4288 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3183)
!4289 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3183)
!4290 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3183)
!4291 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3183)
!4292 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3182)
!4293 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3182)
!4294 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3182)
!4295 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3181)
!4296 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3181)
!4297 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3181)
!4298 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3181)
!4299 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3181)
!4300 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3181)
!4301 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3183)
!4302 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3183)
!4303 = !DILocation(line: 1521, column: 13, scope: !3170)
!4304 = !DILocation(line: 1521, column: 16, scope: !3170)
!4305 = !DILocation(line: 1521, column: 21, scope: !3170)
!4306 = !DILocation(line: 1522, column: 45, scope: !3170)
!4307 = !DILocation(line: 1522, column: 48, scope: !3170)
!4308 = !DILocation(line: 1522, column: 23, scope: !3170)
!4309 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3189)
!4310 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3189)
!4311 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3189)
!4312 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3189)
!4313 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3189)
!4314 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3189)
!4315 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3189)
!4316 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3189)
!4317 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3189)
!4318 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3189)
!4319 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3189)
!4320 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3189)
!4321 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3189)
!4322 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3189)
!4323 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3189)
!4324 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3188)
!4325 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3188)
!4326 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3188)
!4327 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3187)
!4328 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3187)
!4329 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3187)
!4330 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3187)
!4331 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3187)
!4332 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3187)
!4333 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3189)
!4334 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3189)
!4335 = !DILocation(line: 1522, column: 13, scope: !3170)
!4336 = !DILocation(line: 1522, column: 16, scope: !3170)
!4337 = !DILocation(line: 1522, column: 21, scope: !3170)
!4338 = !DILocation(line: 1523, column: 26, scope: !3170)
!4339 = !DILocation(line: 1523, column: 29, scope: !3170)
!4340 = !DILocation(line: 1523, column: 36, scope: !3170)
!4341 = !DILocation(line: 1523, column: 39, scope: !3170)
!4342 = !DILocation(line: 1523, column: 34, scope: !3170)
!4343 = !DILocation(line: 1523, column: 45, scope: !3170)
!4344 = !DILocation(line: 1523, column: 13, scope: !3170)
!4345 = !DILocation(line: 1523, column: 16, scope: !3170)
!4346 = !DILocation(line: 1523, column: 23, scope: !3170)
!4347 = !DILocation(line: 1524, column: 26, scope: !3170)
!4348 = !DILocation(line: 1524, column: 29, scope: !3170)
!4349 = !DILocation(line: 1524, column: 36, scope: !3170)
!4350 = !DILocation(line: 1524, column: 39, scope: !3170)
!4351 = !DILocation(line: 1524, column: 34, scope: !3170)
!4352 = !DILocation(line: 1524, column: 45, scope: !3170)
!4353 = !DILocation(line: 1524, column: 13, scope: !3170)
!4354 = !DILocation(line: 1524, column: 16, scope: !3170)
!4355 = !DILocation(line: 1524, column: 23, scope: !3170)
!4356 = !DILocation(line: 1526, column: 13, scope: !3170)
!4357 = !DILocation(line: 1527, column: 54, scope: !3208)
!4358 = !DILocation(line: 1527, column: 32, scope: !3208)
!4359 = !DILocation(line: 1527, column: 30, scope: !3208)
!4360 = !DILocation(line: 1528, column: 68, scope: !3208)
!4361 = !DILocation(line: 1527, column: 20, scope: !3171)
!4362 = !DILocation(line: 1529, column: 18, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !3207, file: !910, line: 1529, column: 17)
!4364 = !DILocation(line: 1529, column: 17, scope: !3207)
!4365 = !DILocation(line: 1530, column: 21, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4363, file: !910, line: 1529, column: 28)
!4367 = !DILocation(line: 1531, column: 17, scope: !4366)
!4368 = !DILocation(line: 1534, column: 31, scope: !3207)
!4369 = !DILocation(line: 1534, column: 34, scope: !3207)
!4370 = !DILocation(line: 1534, column: 13, scope: !3207)
!4371 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !3206)
!4372 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !3206)
!4373 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !3206)
!4374 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !3206)
!4375 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !3206)
!4376 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !3206)
!4377 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !3206)
!4378 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !3206)
!4379 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !3206)
!4380 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !3206)
!4381 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !3206)
!4382 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !3206)
!4383 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !3206)
!4384 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !3206)
!4385 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !3206)
!4386 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !3206)
!4387 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !3206)
!4388 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !3206)
!4389 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !3206)
!4390 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !3206)
!4391 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !3206)
!4392 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !3206)
!4393 = !DILocation(line: 1535, column: 42, scope: !3207)
!4394 = !DILocation(line: 1535, column: 45, scope: !3207)
!4395 = !DILocation(line: 1535, column: 20, scope: !3207)
!4396 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3213)
!4397 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3213)
!4398 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3213)
!4399 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3213)
!4400 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3213)
!4401 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3213)
!4402 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3213)
!4403 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3213)
!4404 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3213)
!4405 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3213)
!4406 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3213)
!4407 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3213)
!4408 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3213)
!4409 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3213)
!4410 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3213)
!4411 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3212)
!4412 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3212)
!4413 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3212)
!4414 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3211)
!4415 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3211)
!4416 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3211)
!4417 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3211)
!4418 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3211)
!4419 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3211)
!4420 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3213)
!4421 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3213)
!4422 = !DILocation(line: 1535, column: 49, scope: !3207)
!4423 = !DILocation(line: 1535, column: 13, scope: !3207)
!4424 = !DILocation(line: 1535, column: 16, scope: !3207)
!4425 = !DILocation(line: 1535, column: 18, scope: !3207)
!4426 = !DILocation(line: 1536, column: 42, scope: !3207)
!4427 = !DILocation(line: 1536, column: 45, scope: !3207)
!4428 = !DILocation(line: 1536, column: 20, scope: !3207)
!4429 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3219)
!4430 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3219)
!4431 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3219)
!4432 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3219)
!4433 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3219)
!4434 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3219)
!4435 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3219)
!4436 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3219)
!4437 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3219)
!4438 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3219)
!4439 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3219)
!4440 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3219)
!4441 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3219)
!4442 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3219)
!4443 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3219)
!4444 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3218)
!4445 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3218)
!4446 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3218)
!4447 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3217)
!4448 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3217)
!4449 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3217)
!4450 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3217)
!4451 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3217)
!4452 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3217)
!4453 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3219)
!4454 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3219)
!4455 = !DILocation(line: 1536, column: 49, scope: !3207)
!4456 = !DILocation(line: 1536, column: 13, scope: !3207)
!4457 = !DILocation(line: 1536, column: 16, scope: !3207)
!4458 = !DILocation(line: 1536, column: 18, scope: !3207)
!4459 = !DILocation(line: 1538, column: 13, scope: !3207)
!4460 = !DILocation(line: 1539, column: 54, scope: !3237)
!4461 = !DILocation(line: 1539, column: 32, scope: !3237)
!4462 = !DILocation(line: 1539, column: 30, scope: !3237)
!4463 = !DILocation(line: 1540, column: 72, scope: !3237)
!4464 = !DILocation(line: 1539, column: 20, scope: !3208)
!4465 = !DILocalVariable(name: "line_order", scope: !3236, file: !910, line: 1541, type: !941)
!4466 = !DILocation(line: 1541, column: 17, scope: !3236)
!4467 = !DILocation(line: 1542, column: 18, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !3236, file: !910, line: 1542, column: 17)
!4469 = !DILocation(line: 1542, column: 17, scope: !3236)
!4470 = !DILocation(line: 1543, column: 21, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4468, file: !910, line: 1542, column: 28)
!4472 = !DILocation(line: 1544, column: 17, scope: !4471)
!4473 = !DILocation(line: 1547, column: 48, scope: !3236)
!4474 = !DILocation(line: 1547, column: 51, scope: !3236)
!4475 = !DILocation(line: 1547, column: 26, scope: !3236)
!4476 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !3235)
!4477 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !3235)
!4478 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !3235)
!4479 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !3235)
!4480 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !3235)
!4481 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !3235)
!4482 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !3235)
!4483 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !3235)
!4484 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !3235)
!4485 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !3235)
!4486 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !3235)
!4487 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !3235)
!4488 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !3235)
!4489 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !3235)
!4490 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3235)
!4491 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !3234)
!4492 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !3234)
!4493 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3234)
!4494 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !3233)
!4495 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !3233)
!4496 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !3233)
!4497 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !3233)
!4498 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !3233)
!4499 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !3233)
!4500 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !3233)
!4501 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !3235)
!4502 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !3235)
!4503 = !DILocation(line: 1547, column: 24, scope: !3236)
!4504 = !DILocation(line: 1548, column: 20, scope: !3236)
!4505 = !DILocation(line: 1548, column: 23, scope: !3236)
!4506 = !DILocation(line: 1548, column: 55, scope: !3236)
!4507 = !DILocation(line: 1548, column: 13, scope: !3236)
!4508 = !DILocation(line: 1549, column: 17, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !3236, file: !910, line: 1549, column: 17)
!4510 = !DILocation(line: 1549, column: 28, scope: !4509)
!4511 = !DILocation(line: 1549, column: 17, scope: !3236)
!4512 = !DILocation(line: 1550, column: 24, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !910, line: 1549, column: 33)
!4514 = !DILocation(line: 1550, column: 27, scope: !4513)
!4515 = !DILocation(line: 1550, column: 17, scope: !4513)
!4516 = !DILocation(line: 1551, column: 21, scope: !4513)
!4517 = !DILocation(line: 1552, column: 17, scope: !4513)
!4518 = !DILocation(line: 1555, column: 13, scope: !3236)
!4519 = !DILocation(line: 1556, column: 54, scope: !3248)
!4520 = !DILocation(line: 1556, column: 32, scope: !3248)
!4521 = !DILocation(line: 1556, column: 30, scope: !3248)
!4522 = !DILocation(line: 1557, column: 68, scope: !3248)
!4523 = !DILocation(line: 1556, column: 20, scope: !3237)
!4524 = !DILocation(line: 1558, column: 18, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !3247, file: !910, line: 1558, column: 17)
!4526 = !DILocation(line: 1558, column: 17, scope: !3247)
!4527 = !DILocation(line: 1559, column: 21, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4525, file: !910, line: 1558, column: 28)
!4529 = !DILocation(line: 1560, column: 17, scope: !4528)
!4530 = !DILocation(line: 1563, column: 41, scope: !3247)
!4531 = !DILocation(line: 1563, column: 44, scope: !3247)
!4532 = !DILocation(line: 1563, column: 19, scope: !3247)
!4533 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3246)
!4534 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3246)
!4535 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3246)
!4536 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3246)
!4537 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3246)
!4538 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3246)
!4539 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3246)
!4540 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3246)
!4541 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3246)
!4542 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3246)
!4543 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3246)
!4544 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3246)
!4545 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3246)
!4546 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3246)
!4547 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3246)
!4548 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3245)
!4549 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3245)
!4550 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3245)
!4551 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3244)
!4552 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3244)
!4553 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3244)
!4554 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3244)
!4555 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3244)
!4556 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3244)
!4557 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3246)
!4558 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3246)
!4559 = !DILocation(line: 1563, column: 17, scope: !3247)
!4560 = !DILocation(line: 1565, column: 13, scope: !3247)
!4561 = !DILocation(line: 1566, column: 54, scope: !3270)
!4562 = !DILocation(line: 1566, column: 32, scope: !3270)
!4563 = !DILocation(line: 1566, column: 30, scope: !3270)
!4564 = !DILocation(line: 1567, column: 74, scope: !3270)
!4565 = !DILocation(line: 1566, column: 20, scope: !3248)
!4566 = !DILocation(line: 1568, column: 18, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !3269, file: !910, line: 1568, column: 17)
!4568 = !DILocation(line: 1568, column: 17, scope: !3269)
!4569 = !DILocation(line: 1569, column: 21, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !910, line: 1568, column: 28)
!4571 = !DILocation(line: 1570, column: 17, scope: !4570)
!4572 = !DILocation(line: 1573, column: 17, scope: !3268)
!4573 = !DILocation(line: 1573, column: 20, scope: !3268)
!4574 = !DILocation(line: 1573, column: 32, scope: !3268)
!4575 = !DILocation(line: 1573, column: 17, scope: !3269)
!4576 = !DILocation(line: 1574, column: 56, scope: !3268)
!4577 = !DILocation(line: 1574, column: 59, scope: !3268)
!4578 = !DILocation(line: 1574, column: 34, scope: !3268)
!4579 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !3267)
!4580 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !3267)
!4581 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !3267)
!4582 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !3267)
!4583 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !3267)
!4584 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !3267)
!4585 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !3267)
!4586 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !3267)
!4587 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !3267)
!4588 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !3267)
!4589 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !3267)
!4590 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !3267)
!4591 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !3267)
!4592 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !3267)
!4593 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3267)
!4594 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !3266)
!4595 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !3266)
!4596 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3266)
!4597 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !3265)
!4598 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !3265)
!4599 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !3265)
!4600 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !3265)
!4601 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !3265)
!4602 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !3265)
!4603 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !3265)
!4604 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !3267)
!4605 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !3267)
!4606 = !DILocation(line: 1574, column: 17, scope: !3268)
!4607 = !DILocation(line: 1574, column: 20, scope: !3268)
!4608 = !DILocation(line: 1574, column: 32, scope: !3268)
!4609 = !DILocation(line: 1576, column: 24, scope: !3268)
!4610 = !DILocation(line: 1576, column: 27, scope: !3268)
!4611 = !DILocation(line: 1576, column: 17, scope: !3268)
!4612 = !DILocation(line: 1579, column: 13, scope: !3269)
!4613 = !DILocation(line: 1580, column: 54, scope: !3284)
!4614 = !DILocation(line: 1580, column: 32, scope: !3284)
!4615 = !DILocation(line: 1580, column: 30, scope: !3284)
!4616 = !DILocation(line: 1581, column: 71, scope: !3284)
!4617 = !DILocation(line: 1580, column: 20, scope: !3270)
!4618 = !DILocalVariable(name: "tileLevel", scope: !3283, file: !910, line: 1582, type: !982)
!4619 = !DILocation(line: 1582, column: 18, scope: !3283)
!4620 = !DILocation(line: 1584, column: 18, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !3283, file: !910, line: 1584, column: 17)
!4622 = !DILocation(line: 1584, column: 21, scope: !4621)
!4623 = !DILocation(line: 1584, column: 17, scope: !3283)
!4624 = !DILocation(line: 1585, column: 24, scope: !4621)
!4625 = !DILocation(line: 1585, column: 27, scope: !4621)
!4626 = !DILocation(line: 1585, column: 17, scope: !4621)
!4627 = !DILocation(line: 1588, column: 56, scope: !3283)
!4628 = !DILocation(line: 1588, column: 59, scope: !3283)
!4629 = !DILocation(line: 1588, column: 34, scope: !3283)
!4630 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3282)
!4631 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3282)
!4632 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3282)
!4633 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3282)
!4634 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3282)
!4635 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3282)
!4636 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3282)
!4637 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3282)
!4638 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3282)
!4639 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3282)
!4640 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3282)
!4641 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3282)
!4642 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3282)
!4643 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3282)
!4644 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3282)
!4645 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3281)
!4646 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3281)
!4647 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3281)
!4648 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3280)
!4649 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3280)
!4650 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3280)
!4651 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3280)
!4652 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3280)
!4653 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3280)
!4654 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3282)
!4655 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3282)
!4656 = !DILocation(line: 1588, column: 13, scope: !3283)
!4657 = !DILocation(line: 1588, column: 16, scope: !3283)
!4658 = !DILocation(line: 1588, column: 26, scope: !3283)
!4659 = !DILocation(line: 1588, column: 32, scope: !3283)
!4660 = !DILocation(line: 1589, column: 56, scope: !3283)
!4661 = !DILocation(line: 1589, column: 59, scope: !3283)
!4662 = !DILocation(line: 1589, column: 34, scope: !3283)
!4663 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3290)
!4664 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3290)
!4665 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3290)
!4666 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3290)
!4667 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3290)
!4668 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3290)
!4669 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3290)
!4670 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3290)
!4671 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3290)
!4672 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3290)
!4673 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3290)
!4674 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3290)
!4675 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3290)
!4676 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3290)
!4677 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3290)
!4678 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3289)
!4679 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3289)
!4680 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3289)
!4681 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3288)
!4682 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3288)
!4683 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3288)
!4684 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3288)
!4685 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3288)
!4686 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3288)
!4687 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3290)
!4688 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3290)
!4689 = !DILocation(line: 1589, column: 13, scope: !3283)
!4690 = !DILocation(line: 1589, column: 16, scope: !3283)
!4691 = !DILocation(line: 1589, column: 26, scope: !3283)
!4692 = !DILocation(line: 1589, column: 32, scope: !3283)
!4693 = !DILocation(line: 1591, column: 47, scope: !3283)
!4694 = !DILocation(line: 1591, column: 50, scope: !3283)
!4695 = !DILocation(line: 1591, column: 25, scope: !3283)
!4696 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !3296)
!4697 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !3296)
!4698 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !3296)
!4699 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !3296)
!4700 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !3296)
!4701 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !3296)
!4702 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !3296)
!4703 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !3296)
!4704 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !3296)
!4705 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !3296)
!4706 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !3296)
!4707 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !3296)
!4708 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !3296)
!4709 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !3296)
!4710 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3296)
!4711 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !3295)
!4712 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !3295)
!4713 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3295)
!4714 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !3294)
!4715 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !3294)
!4716 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !3294)
!4717 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !3294)
!4718 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !3294)
!4719 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !3294)
!4720 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !3294)
!4721 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !3296)
!4722 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !3296)
!4723 = !DILocation(line: 1591, column: 23, scope: !3283)
!4724 = !DILocation(line: 1592, column: 39, scope: !3283)
!4725 = !DILocation(line: 1592, column: 49, scope: !3283)
!4726 = !DILocation(line: 1592, column: 13, scope: !3283)
!4727 = !DILocation(line: 1592, column: 16, scope: !3283)
!4728 = !DILocation(line: 1592, column: 26, scope: !3283)
!4729 = !DILocation(line: 1592, column: 37, scope: !3283)
!4730 = !DILocation(line: 1593, column: 41, scope: !3283)
!4731 = !DILocation(line: 1593, column: 51, scope: !3283)
!4732 = !DILocation(line: 1593, column: 57, scope: !3283)
!4733 = !DILocation(line: 1593, column: 13, scope: !3283)
!4734 = !DILocation(line: 1593, column: 16, scope: !3283)
!4735 = !DILocation(line: 1593, column: 26, scope: !3283)
!4736 = !DILocation(line: 1593, column: 38, scope: !3283)
!4737 = !DILocation(line: 1595, column: 17, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !3283, file: !910, line: 1595, column: 17)
!4739 = !DILocation(line: 1595, column: 20, scope: !4738)
!4740 = !DILocation(line: 1595, column: 30, scope: !4738)
!4741 = !DILocation(line: 1595, column: 41, scope: !4738)
!4742 = !DILocation(line: 1595, column: 17, scope: !3283)
!4743 = !DILocation(line: 1596, column: 47, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4738, file: !910, line: 1595, column: 67)
!4745 = !DILocation(line: 1596, column: 50, scope: !4744)
!4746 = !DILocation(line: 1597, column: 47, scope: !4744)
!4747 = !DILocation(line: 1597, column: 50, scope: !4744)
!4748 = !DILocation(line: 1597, column: 60, scope: !4744)
!4749 = !DILocation(line: 1596, column: 17, scope: !4744)
!4750 = !DILocation(line: 1598, column: 21, scope: !4744)
!4751 = !DILocation(line: 1599, column: 17, scope: !4744)
!4752 = !DILocation(line: 1602, column: 17, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !3283, file: !910, line: 1602, column: 17)
!4754 = !DILocation(line: 1602, column: 20, scope: !4753)
!4755 = !DILocation(line: 1602, column: 30, scope: !4753)
!4756 = !DILocation(line: 1602, column: 42, scope: !4753)
!4757 = !DILocation(line: 1602, column: 17, scope: !3283)
!4758 = !DILocation(line: 1603, column: 47, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4753, file: !910, line: 1602, column: 69)
!4760 = !DILocation(line: 1603, column: 50, scope: !4759)
!4761 = !DILocation(line: 1604, column: 47, scope: !4759)
!4762 = !DILocation(line: 1604, column: 50, scope: !4759)
!4763 = !DILocation(line: 1604, column: 60, scope: !4759)
!4764 = !DILocation(line: 1603, column: 17, scope: !4759)
!4765 = !DILocation(line: 1605, column: 21, scope: !4759)
!4766 = !DILocation(line: 1606, column: 17, scope: !4759)
!4767 = !DILocation(line: 1609, column: 13, scope: !3283)
!4768 = !DILocation(line: 1610, column: 54, scope: !3313)
!4769 = !DILocation(line: 1610, column: 32, scope: !3313)
!4770 = !DILocation(line: 1610, column: 30, scope: !3313)
!4771 = !DILocation(line: 1611, column: 68, scope: !3313)
!4772 = !DILocation(line: 1610, column: 20, scope: !3284)
!4773 = !DILocalVariable(name: "key", scope: !3312, file: !910, line: 1612, type: !4774)
!4774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !946, size: 2048, align: 8, elements: !4775)
!4775 = !{!4776}
!4776 = !DISubrange(count: 256)
!4777 = !DILocation(line: 1612, column: 21, scope: !3312)
!4778 = !DILocation(line: 1614, column: 37, scope: !3312)
!4779 = !DILocation(line: 1614, column: 40, scope: !3312)
!4780 = !DILocation(line: 1614, column: 44, scope: !3312)
!4781 = !DILocation(line: 1614, column: 71, scope: !3312)
!4782 = !DILocation(line: 1614, column: 70, scope: !3312)
!4783 = !DILocation(line: 1614, column: 68, scope: !3312)
!4784 = !DILocation(line: 1614, column: 50, scope: !3312)
!4785 = !DILocation(line: 1614, column: 84, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !3312, file: !910, discriminator: 1)
!4787 = !DILocation(line: 1614, column: 83, scope: !4786)
!4788 = !DILocation(line: 1614, column: 50, scope: !4786)
!4789 = !DILocation(line: 1614, column: 50, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !3312, file: !910, discriminator: 2)
!4791 = !DILocation(line: 1614, column: 50, scope: !3311)
!4792 = !DILocation(line: 1614, column: 49, scope: !3311)
!4793 = !DILocation(line: 1614, column: 13, scope: !3311)
!4794 = !DILocation(line: 267, column: 19, scope: !3306, inlinedAt: !3310)
!4795 = !DILocation(line: 267, column: 22, scope: !3306, inlinedAt: !3310)
!4796 = !DILocation(line: 267, column: 35, scope: !3306, inlinedAt: !3310)
!4797 = !DILocation(line: 267, column: 38, scope: !3306, inlinedAt: !3310)
!4798 = !DILocation(line: 267, column: 33, scope: !3306, inlinedAt: !3310)
!4799 = !DILocation(line: 267, column: 49, scope: !3306, inlinedAt: !3310)
!4800 = !DILocation(line: 267, column: 48, scope: !3306, inlinedAt: !3310)
!4801 = !DILocation(line: 267, column: 46, scope: !3306, inlinedAt: !3310)
!4802 = !DILocation(line: 267, column: 18, scope: !3306, inlinedAt: !3310)
!4803 = !DILocation(line: 267, column: 58, scope: !4804, inlinedAt: !3310)
!4804 = !DILexicalBlockFile(scope: !3306, file: !1817, discriminator: 1)
!4805 = !DILocation(line: 267, column: 57, scope: !4804, inlinedAt: !3310)
!4806 = !DILocation(line: 267, column: 18, scope: !4804, inlinedAt: !3310)
!4807 = !DILocation(line: 267, column: 67, scope: !4808, inlinedAt: !3310)
!4808 = !DILexicalBlockFile(scope: !3306, file: !1817, discriminator: 2)
!4809 = !DILocation(line: 267, column: 70, scope: !4808, inlinedAt: !3310)
!4810 = !DILocation(line: 267, column: 83, scope: !4808, inlinedAt: !3310)
!4811 = !DILocation(line: 267, column: 86, scope: !4808, inlinedAt: !3310)
!4812 = !DILocation(line: 267, column: 81, scope: !4808, inlinedAt: !3310)
!4813 = !DILocation(line: 267, column: 18, scope: !4808, inlinedAt: !3310)
!4814 = !DILocation(line: 267, column: 18, scope: !4815, inlinedAt: !3310)
!4815 = !DILexicalBlockFile(scope: !3306, file: !1817, discriminator: 3)
!4816 = !DILocation(line: 267, column: 17, scope: !4815, inlinedAt: !3310)
!4817 = !DILocation(line: 267, column: 9, scope: !4815, inlinedAt: !3310)
!4818 = !DILocation(line: 268, column: 12, scope: !3306, inlinedAt: !3310)
!4819 = !DILocation(line: 268, column: 17, scope: !3306, inlinedAt: !3310)
!4820 = !DILocation(line: 268, column: 20, scope: !3306, inlinedAt: !3310)
!4821 = !DILocation(line: 268, column: 28, scope: !3306, inlinedAt: !3310)
!4822 = !DILocation(line: 268, column: 5, scope: !3306, inlinedAt: !3310)
!4823 = !DILocation(line: 269, column: 18, scope: !3306, inlinedAt: !3310)
!4824 = !DILocation(line: 269, column: 5, scope: !3306, inlinedAt: !3310)
!4825 = !DILocation(line: 269, column: 8, scope: !3306, inlinedAt: !3310)
!4826 = !DILocation(line: 269, column: 15, scope: !3306, inlinedAt: !3310)
!4827 = !DILocation(line: 270, column: 12, scope: !3306, inlinedAt: !3310)
!4828 = !DILocation(line: 1615, column: 46, scope: !3312)
!4829 = !DILocation(line: 1615, column: 13, scope: !3312)
!4830 = !DILocation(line: 1617, column: 13, scope: !3312)
!4831 = !DILocation(line: 1621, column: 41, scope: !3322)
!4832 = !DILocation(line: 1621, column: 44, scope: !3322)
!4833 = !DILocation(line: 1621, column: 13, scope: !3322)
!4834 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3321)
!4835 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3321)
!4836 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3321)
!4837 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3321)
!4838 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3321)
!4839 = !DILocation(line: 1621, column: 48, scope: !3322)
!4840 = !DILocation(line: 1621, column: 13, scope: !3140)
!4841 = !DILocation(line: 1622, column: 20, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !3322, file: !910, line: 1621, column: 54)
!4843 = !DILocation(line: 1622, column: 23, scope: !4842)
!4844 = !DILocation(line: 1622, column: 13, scope: !4842)
!4845 = !DILocation(line: 1623, column: 17, scope: !4842)
!4846 = !DILocation(line: 1624, column: 13, scope: !4842)
!4847 = !DILocation(line: 1628, column: 16, scope: !3329)
!4848 = !DILocation(line: 1628, column: 14, scope: !3329)
!4849 = !DILocation(line: 1628, column: 21, scope: !3327)
!4850 = !DILocation(line: 1628, column: 23, scope: !3327)
!4851 = !DILocation(line: 1628, column: 9, scope: !3327)
!4852 = !DILocation(line: 1629, column: 13, scope: !3328)
!4853 = !DILocation(line: 1629, column: 42, scope: !3327)
!4854 = !DILocation(line: 1629, column: 45, scope: !3327)
!4855 = !DILocation(line: 1629, column: 20, scope: !3327)
!4856 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !3326)
!4857 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !3326)
!4858 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !3326)
!4859 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !3326)
!4860 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !3326)
!4861 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !3326)
!4862 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !3326)
!4863 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !3326)
!4864 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !3326)
!4865 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !3326)
!4866 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !3326)
!4867 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !3326)
!4868 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !3326)
!4869 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !3326)
!4870 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !3326)
!4871 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !3325)
!4872 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !3325)
!4873 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !3325)
!4874 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !3324)
!4875 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !3324)
!4876 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !3324)
!4877 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !3324)
!4878 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !3324)
!4879 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !3324)
!4880 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !3324)
!4881 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !3326)
!4882 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !3326)
!4883 = !DILocation(line: 1629, column: 49, scope: !3327)
!4884 = !DILocation(line: 1629, column: 13, scope: !3327)
!4885 = !DILocation(line: 1629, column: 13, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !3328, file: !910, discriminator: 2)
!4887 = distinct !{!4887, !4852}
!4888 = !DILocation(line: 1629, column: 13, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !3328, file: !910, discriminator: 3)
!4890 = !DILocation(line: 1628, column: 29, scope: !4886)
!4891 = !DILocation(line: 1628, column: 9, scope: !4886)
!4892 = distinct !{!4892, !4893}
!4893 = !DILocation(line: 1628, column: 9, scope: !3140)
!4894 = !DILocation(line: 1632, column: 27, scope: !3140)
!4895 = !DILocation(line: 1632, column: 30, scope: !3140)
!4896 = !DILocation(line: 1632, column: 56, scope: !3140)
!4897 = !DILocation(line: 1632, column: 59, scope: !3140)
!4898 = !DILocation(line: 1632, column: 34, scope: !3140)
!4899 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !3335)
!4900 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !3335)
!4901 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !3335)
!4902 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !3335)
!4903 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !3335)
!4904 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !3335)
!4905 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !3335)
!4906 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !3335)
!4907 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !3335)
!4908 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !3335)
!4909 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !3335)
!4910 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !3335)
!4911 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !3335)
!4912 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !3335)
!4913 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !3335)
!4914 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !3334)
!4915 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !3334)
!4916 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !3334)
!4917 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !3333)
!4918 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !3333)
!4919 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !3333)
!4920 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !3333)
!4921 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !3333)
!4922 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !3333)
!4923 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !3335)
!4924 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !3335)
!4925 = !DILocation(line: 1632, column: 9, scope: !3340)
!4926 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !3339)
!4927 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !3339)
!4928 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !3339)
!4929 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !3339)
!4930 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !3339)
!4931 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !3339)
!4932 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !3339)
!4933 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !3339)
!4934 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !3339)
!4935 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !3339)
!4936 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !3339)
!4937 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !3339)
!4938 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !3339)
!4939 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !3339)
!4940 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !3339)
!4941 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !3339)
!4942 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !3339)
!4943 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !3339)
!4944 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !3339)
!4945 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !3339)
!4946 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !3339)
!4947 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !3339)
!4948 = !DILocation(line: 1365, column: 5, scope: !4949)
!4949 = !DILexicalBlockFile(scope: !3130, file: !910, discriminator: 4)
!4950 = !DILocation(line: 1635, column: 16, scope: !3130)
!4951 = !DILocation(line: 1635, column: 19, scope: !3130)
!4952 = !DILocation(line: 1635, column: 46, scope: !3130)
!4953 = !DILocation(line: 1635, column: 33, scope: !3130)
!4954 = !DILocation(line: 43, column: 11, scope: !3343, inlinedAt: !3347)
!4955 = !DILocation(line: 43, column: 7, scope: !3343, inlinedAt: !3347)
!4956 = !DILocation(line: 43, column: 9, scope: !3343, inlinedAt: !3347)
!4957 = !DILocation(line: 44, column: 14, scope: !3343, inlinedAt: !3347)
!4958 = !DILocation(line: 1635, column: 26, scope: !3242)
!4959 = !DILocation(line: 1635, column: 26, scope: !3130)
!4960 = !DILocation(line: 1635, column: 5, scope: !3130)
!4961 = !DILocation(line: 1635, column: 5, scope: !3624)
!4962 = !DILocation(line: 1637, column: 9, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1637, column: 9)
!4964 = !DILocation(line: 1637, column: 12, scope: !4963)
!4965 = !DILocation(line: 1637, column: 24, scope: !4963)
!4966 = !DILocation(line: 1637, column: 9, scope: !3130)
!4967 = !DILocation(line: 1638, column: 16, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !910, line: 1637, column: 37)
!4969 = !DILocation(line: 1638, column: 19, scope: !4968)
!4970 = !DILocation(line: 1638, column: 9, scope: !4968)
!4971 = !DILocation(line: 1639, column: 13, scope: !4968)
!4972 = !DILocation(line: 1640, column: 9, scope: !4968)
!4973 = !DILocation(line: 1643, column: 9, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !3130, file: !910, line: 1643, column: 9)
!4975 = !DILocation(line: 1643, column: 12, scope: !4974)
!4976 = !DILocation(line: 1643, column: 9, scope: !3130)
!4977 = !DILocation(line: 1644, column: 13, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !910, line: 1644, column: 13)
!4979 = distinct !DILexicalBlock(scope: !4974, file: !910, line: 1643, column: 21)
!4980 = !DILocation(line: 1644, column: 16, scope: !4978)
!4981 = !DILocation(line: 1644, column: 26, scope: !4978)
!4982 = !DILocation(line: 1644, column: 32, scope: !4978)
!4983 = !DILocation(line: 1644, column: 36, scope: !4978)
!4984 = !DILocation(line: 1644, column: 39, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4978, file: !910, discriminator: 1)
!4986 = !DILocation(line: 1644, column: 42, scope: !4985)
!4987 = !DILocation(line: 1644, column: 52, scope: !4985)
!4988 = !DILocation(line: 1644, column: 58, scope: !4985)
!4989 = !DILocation(line: 1644, column: 13, scope: !4985)
!4990 = !DILocation(line: 1645, column: 20, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4978, file: !910, line: 1644, column: 63)
!4992 = !DILocation(line: 1645, column: 23, scope: !4991)
!4993 = !DILocation(line: 1645, column: 13, scope: !4991)
!4994 = !DILocation(line: 1646, column: 17, scope: !4991)
!4995 = !DILocation(line: 1647, column: 13, scope: !4991)
!4996 = !DILocation(line: 1649, column: 5, scope: !4979)
!4997 = !DILocation(line: 1651, column: 37, scope: !3352)
!4998 = !DILocation(line: 1651, column: 40, scope: !3352)
!4999 = !DILocation(line: 1651, column: 9, scope: !3352)
!5000 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !3351)
!5001 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !3351)
!5002 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !3351)
!5003 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !3351)
!5004 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !3351)
!5005 = !DILocation(line: 1651, column: 44, scope: !3352)
!5006 = !DILocation(line: 1651, column: 9, scope: !3130)
!5007 = !DILocation(line: 1652, column: 16, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !3352, file: !910, line: 1651, column: 50)
!5009 = !DILocation(line: 1652, column: 19, scope: !5008)
!5010 = !DILocation(line: 1652, column: 9, scope: !5008)
!5011 = !DILocation(line: 1653, column: 13, scope: !5008)
!5012 = !DILocation(line: 1654, column: 9, scope: !5008)
!5013 = !DILocation(line: 1657, column: 23, scope: !3130)
!5014 = !DILocation(line: 1657, column: 5, scope: !3130)
!5015 = !DILocation(line: 1657, column: 12, scope: !3130)
!5016 = !DILocation(line: 1657, column: 21, scope: !3130)
!5017 = !DILocation(line: 1660, column: 23, scope: !3130)
!5018 = !DILocation(line: 1660, column: 26, scope: !3130)
!5019 = !DILocation(line: 1660, column: 5, scope: !3130)
!5020 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !3354)
!5021 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !3354)
!5022 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !3354)
!5023 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !3354)
!5024 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !3354)
!5025 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !3354)
!5026 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !3354)
!5027 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !3354)
!5028 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !3354)
!5029 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !3354)
!5030 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !3354)
!5031 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !3354)
!5032 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !3354)
!5033 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !3354)
!5034 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !3354)
!5035 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !3354)
!5036 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !3354)
!5037 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !3354)
!5038 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !3354)
!5039 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !3354)
!5040 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !3354)
!5041 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !3354)
!5042 = !DILocation(line: 1661, column: 5, scope: !3130)
!5043 = !DILocation(line: 1663, column: 5, scope: !3130)
!5044 = !DILocation(line: 1664, column: 12, scope: !3130)
!5045 = !DILocation(line: 1664, column: 5, scope: !3130)
!5046 = !DILocation(line: 1665, column: 1, scope: !3130)
!5047 = distinct !DISubprogram(name: "decode_block", scope: !910, file: !910, line: 1028, type: !5048, isLocal: true, isDefinition: true, scopeLine: 1030, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!941, !1101, !943, !941, !941}
!5050 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !5051)
!5051 = distinct !DILocation(line: 1225, column: 49, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !910, line: 1224, column: 25)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !910, line: 1213, column: 49)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !910, line: 1213, column: 17)
!5055 = distinct !DILexicalBlock(scope: !5056, file: !910, line: 1213, column: 17)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !910, line: 1212, column: 20)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !910, line: 1200, column: 17)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !910, line: 1198, column: 41)
!5059 = distinct !DILexicalBlock(scope: !5060, file: !910, line: 1198, column: 13)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !910, line: 1180, column: 53)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !910, line: 1179, column: 5)
!5062 = distinct !DILexicalBlock(scope: !5047, file: !910, line: 1179, column: 5)
!5063 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !5064)
!5064 = distinct !DILocation(line: 1218, column: 31, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5066, file: !910, line: 1217, column: 61)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !910, line: 1217, column: 21)
!5067 = distinct !DILexicalBlock(scope: !5053, file: !910, line: 1217, column: 21)
!5068 = !DILocalVariable(name: "b", arg: 1, scope: !5069, file: !1817, line: 90, type: !2106)
!5069 = distinct !DISubprogram(name: "bytestream_get_le16", scope: !1817, file: !1817, line: 90, type: !2104, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!5070 = !DILocation(line: 90, column: 95, scope: !5069, inlinedAt: !5071)
!5071 = distinct !DILocation(line: 1233, column: 47, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !910, line: 1232, column: 57)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !910, line: 1232, column: 17)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !910, line: 1232, column: 17)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !910, line: 1230, column: 45)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !910, line: 1230, column: 13)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !910, line: 1230, column: 13)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !910, line: 1228, column: 47)
!5079 = distinct !DILexicalBlock(scope: !5059, file: !910, line: 1228, column: 20)
!5080 = !DILocation(line: 90, column: 95, scope: !5069, inlinedAt: !5081)
!5081 = distinct !DILocation(line: 1237, column: 48, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5075, file: !910, line: 1236, column: 21)
!5083 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !5084)
!5084 = distinct !DILocation(line: 1210, column: 49, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5086, file: !910, line: 1209, column: 25)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !910, line: 1201, column: 49)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !910, line: 1201, column: 17)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !910, line: 1201, column: 17)
!5089 = distinct !DILexicalBlock(scope: !5057, file: !910, line: 1200, column: 27)
!5090 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !5091)
!5091 = distinct !DILocation(line: 1242, column: 32, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !910, line: 1241, column: 57)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !910, line: 1241, column: 17)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !910, line: 1241, column: 17)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !910, line: 1240, column: 45)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !910, line: 1240, column: 13)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !910, line: 1240, column: 13)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !910, line: 1239, column: 47)
!5099 = distinct !DILexicalBlock(scope: !5079, file: !910, line: 1239, column: 20)
!5100 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !5101)
!5101 = distinct !DILocation(line: 1246, column: 32, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5095, file: !910, line: 1245, column: 21)
!5103 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !5104)
!5104 = distinct !DILocation(line: 1205, column: 31, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !910, line: 1204, column: 61)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !910, line: 1204, column: 21)
!5107 = distinct !DILexicalBlock(scope: !5086, file: !910, line: 1204, column: 21)
!5108 = !DILocalVariable(name: "avctx", arg: 1, scope: !5047, file: !910, line: 1028, type: !1101)
!5109 = !DILocation(line: 1028, column: 41, scope: !5047)
!5110 = !DILocalVariable(name: "tdata", arg: 2, scope: !5047, file: !910, line: 1028, type: !943)
!5111 = !DILocation(line: 1028, column: 54, scope: !5047)
!5112 = !DILocalVariable(name: "jobnr", arg: 3, scope: !5047, file: !910, line: 1029, type: !941)
!5113 = !DILocation(line: 1029, column: 29, scope: !5047)
!5114 = !DILocalVariable(name: "threadnr", arg: 4, scope: !5047, file: !910, line: 1029, type: !941)
!5115 = !DILocation(line: 1029, column: 40, scope: !5047)
!5116 = !DILocalVariable(name: "s", scope: !5047, file: !910, line: 1031, type: !1744)
!5117 = !DILocation(line: 1031, column: 17, scope: !5047)
!5118 = !DILocation(line: 1031, column: 21, scope: !5047)
!5119 = !DILocation(line: 1031, column: 28, scope: !5047)
!5120 = !DILocalVariable(name: "p", scope: !5047, file: !910, line: 1032, type: !5121)
!5121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!5122 = !DILocation(line: 1032, column: 20, scope: !5047)
!5123 = !DILocation(line: 1032, column: 24, scope: !5047)
!5124 = !DILocation(line: 1032, column: 27, scope: !5047)
!5125 = !DILocalVariable(name: "td", scope: !5047, file: !910, line: 1033, type: !1836)
!5126 = !DILocation(line: 1033, column: 20, scope: !5047)
!5127 = !DILocation(line: 1033, column: 41, scope: !5047)
!5128 = !DILocation(line: 1033, column: 26, scope: !5047)
!5129 = !DILocation(line: 1033, column: 29, scope: !5047)
!5130 = !DILocalVariable(name: "channel_buffer", scope: !5047, file: !910, line: 1034, type: !5131)
!5131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 256, align: 64, elements: !1230)
!5132 = !DILocation(line: 1034, column: 20, scope: !5047)
!5133 = !DILocalVariable(name: "buf", scope: !5047, file: !910, line: 1035, type: !944)
!5134 = !DILocation(line: 1035, column: 20, scope: !5047)
!5135 = !DILocation(line: 1035, column: 26, scope: !5047)
!5136 = !DILocation(line: 1035, column: 29, scope: !5047)
!5137 = !DILocalVariable(name: "line_offset", scope: !5047, file: !910, line: 1036, type: !955)
!5138 = !DILocation(line: 1036, column: 14, scope: !5047)
!5139 = !DILocalVariable(name: "uncompressed_size", scope: !5047, file: !910, line: 1036, type: !955)
!5140 = !DILocation(line: 1036, column: 27, scope: !5047)
!5141 = !DILocalVariable(name: "ptr_x", scope: !5047, file: !910, line: 1037, type: !964)
!5142 = !DILocation(line: 1037, column: 15, scope: !5047)
!5143 = !DILocalVariable(name: "ptr", scope: !5047, file: !910, line: 1038, type: !1129)
!5144 = !DILocation(line: 1038, column: 14, scope: !5047)
!5145 = !DILocalVariable(name: "data_size", scope: !5047, file: !910, line: 1039, type: !963)
!5146 = !DILocation(line: 1039, column: 14, scope: !5047)
!5147 = !DILocalVariable(name: "line", scope: !5047, file: !910, line: 1040, type: !955)
!5148 = !DILocation(line: 1040, column: 14, scope: !5047)
!5149 = !DILocalVariable(name: "col", scope: !5047, file: !910, line: 1040, type: !955)
!5150 = !DILocation(line: 1040, column: 20, scope: !5047)
!5151 = !DILocalVariable(name: "tile_x", scope: !5047, file: !910, line: 1041, type: !955)
!5152 = !DILocation(line: 1041, column: 14, scope: !5047)
!5153 = !DILocalVariable(name: "tile_y", scope: !5047, file: !910, line: 1041, type: !955)
!5154 = !DILocation(line: 1041, column: 22, scope: !5047)
!5155 = !DILocalVariable(name: "tile_level_x", scope: !5047, file: !910, line: 1041, type: !955)
!5156 = !DILocation(line: 1041, column: 30, scope: !5047)
!5157 = !DILocalVariable(name: "tile_level_y", scope: !5047, file: !910, line: 1041, type: !955)
!5158 = !DILocation(line: 1041, column: 44, scope: !5047)
!5159 = !DILocalVariable(name: "src", scope: !5047, file: !910, line: 1042, type: !944)
!5160 = !DILocation(line: 1042, column: 20, scope: !5047)
!5161 = !DILocalVariable(name: "axmax", scope: !5047, file: !910, line: 1043, type: !941)
!5162 = !DILocation(line: 1043, column: 9, scope: !5047)
!5163 = !DILocation(line: 1043, column: 18, scope: !5047)
!5164 = !DILocation(line: 1043, column: 25, scope: !5047)
!5165 = !DILocation(line: 1043, column: 34, scope: !5047)
!5166 = !DILocation(line: 1043, column: 37, scope: !5047)
!5167 = !DILocation(line: 1043, column: 42, scope: !5047)
!5168 = !DILocation(line: 1043, column: 31, scope: !5047)
!5169 = !DILocation(line: 1043, column: 48, scope: !5047)
!5170 = !DILocation(line: 1043, column: 54, scope: !5047)
!5171 = !DILocation(line: 1043, column: 57, scope: !5047)
!5172 = !DILocation(line: 1043, column: 63, scope: !5047)
!5173 = !DILocation(line: 1043, column: 52, scope: !5047)
!5174 = !DILocalVariable(name: "bxmin", scope: !5047, file: !910, line: 1044, type: !941)
!5175 = !DILocation(line: 1044, column: 9, scope: !5047)
!5176 = !DILocation(line: 1044, column: 17, scope: !5047)
!5177 = !DILocation(line: 1044, column: 20, scope: !5047)
!5178 = !DILocation(line: 1044, column: 25, scope: !5047)
!5179 = !DILocation(line: 1044, column: 31, scope: !5047)
!5180 = !DILocation(line: 1044, column: 34, scope: !5047)
!5181 = !DILocation(line: 1044, column: 40, scope: !5047)
!5182 = !DILocation(line: 1044, column: 29, scope: !5047)
!5183 = !DILocalVariable(name: "i", scope: !5047, file: !910, line: 1045, type: !941)
!5184 = !DILocation(line: 1045, column: 9, scope: !5047)
!5185 = !DILocalVariable(name: "x", scope: !5047, file: !910, line: 1045, type: !941)
!5186 = !DILocation(line: 1045, column: 12, scope: !5047)
!5187 = !DILocalVariable(name: "buf_size", scope: !5047, file: !910, line: 1045, type: !941)
!5188 = !DILocation(line: 1045, column: 15, scope: !5047)
!5189 = !DILocation(line: 1045, column: 26, scope: !5047)
!5190 = !DILocation(line: 1045, column: 29, scope: !5047)
!5191 = !DILocalVariable(name: "c", scope: !5047, file: !910, line: 1046, type: !941)
!5192 = !DILocation(line: 1046, column: 9, scope: !5047)
!5193 = !DILocalVariable(name: "rgb_channel_count", scope: !5047, file: !910, line: 1046, type: !941)
!5194 = !DILocation(line: 1046, column: 12, scope: !5047)
!5195 = !DILocalVariable(name: "one_gamma", scope: !5047, file: !910, line: 1047, type: !1400)
!5196 = !DILocation(line: 1047, column: 11, scope: !5047)
!5197 = !DILocation(line: 1047, column: 30, scope: !5047)
!5198 = !DILocation(line: 1047, column: 33, scope: !5047)
!5199 = !DILocation(line: 1047, column: 28, scope: !5047)
!5200 = !DILocalVariable(name: "trc_func", scope: !5047, file: !910, line: 1048, type: !1894)
!5201 = !DILocation(line: 1048, column: 25, scope: !5047)
!5202 = !DILocation(line: 1048, column: 69, scope: !5047)
!5203 = !DILocation(line: 1048, column: 72, scope: !5047)
!5204 = !DILocation(line: 1048, column: 36, scope: !5047)
!5205 = !DILocalVariable(name: "ret", scope: !5047, file: !910, line: 1049, type: !941)
!5206 = !DILocation(line: 1049, column: 9, scope: !5047)
!5207 = !DILocation(line: 1051, column: 51, scope: !5047)
!5208 = !DILocation(line: 1051, column: 54, scope: !5047)
!5209 = !DILocation(line: 1051, column: 57, scope: !5047)
!5210 = !DILocation(line: 1051, column: 66, scope: !5047)
!5211 = !DILocation(line: 1051, column: 72, scope: !5047)
!5212 = !DILocation(line: 1051, column: 64, scope: !5047)
!5213 = !DILocation(line: 1051, column: 79, scope: !5047)
!5214 = !DILocation(line: 1051, column: 17, scope: !5047)
!5215 = !DILocation(line: 1053, column: 9, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5047, file: !910, line: 1053, column: 9)
!5217 = !DILocation(line: 1053, column: 12, scope: !5216)
!5218 = !DILocation(line: 1053, column: 9, scope: !5047)
!5219 = !DILocation(line: 1054, column: 13, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1054, column: 13)
!5221 = distinct !DILexicalBlock(scope: !5216, file: !910, line: 1053, column: 21)
!5222 = !DILocation(line: 1054, column: 22, scope: !5220)
!5223 = !DILocation(line: 1054, column: 27, scope: !5220)
!5224 = !DILocation(line: 1054, column: 30, scope: !5225)
!5225 = !DILexicalBlockFile(scope: !5220, file: !910, discriminator: 1)
!5226 = !DILocation(line: 1054, column: 44, scope: !5225)
!5227 = !DILocation(line: 1054, column: 53, scope: !5225)
!5228 = !DILocation(line: 1054, column: 42, scope: !5225)
!5229 = !DILocation(line: 1054, column: 13, scope: !5225)
!5230 = !DILocation(line: 1055, column: 13, scope: !5220)
!5231 = !DILocation(line: 1057, column: 15, scope: !5221)
!5232 = !DILocation(line: 1057, column: 21, scope: !5221)
!5233 = !DILocation(line: 1057, column: 19, scope: !5221)
!5234 = !DILocation(line: 1057, column: 33, scope: !5221)
!5235 = !DILocation(line: 1057, column: 13, scope: !5221)
!5236 = !DILocation(line: 1059, column: 50, scope: !5221)
!5237 = !DILocation(line: 1059, column: 54, scope: !5221)
!5238 = !DILocation(line: 1059, column: 62, scope: !5221)
!5239 = !DILocation(line: 1059, column: 18, scope: !5221)
!5240 = !DILocation(line: 1059, column: 16, scope: !5221)
!5241 = !DILocation(line: 1060, column: 50, scope: !5221)
!5242 = !DILocation(line: 1060, column: 54, scope: !5221)
!5243 = !DILocation(line: 1060, column: 62, scope: !5221)
!5244 = !DILocation(line: 1060, column: 18, scope: !5221)
!5245 = !DILocation(line: 1060, column: 16, scope: !5221)
!5246 = !DILocation(line: 1061, column: 56, scope: !5221)
!5247 = !DILocation(line: 1061, column: 60, scope: !5221)
!5248 = !DILocation(line: 1061, column: 68, scope: !5221)
!5249 = !DILocation(line: 1061, column: 24, scope: !5221)
!5250 = !DILocation(line: 1061, column: 22, scope: !5221)
!5251 = !DILocation(line: 1062, column: 56, scope: !5221)
!5252 = !DILocation(line: 1062, column: 60, scope: !5221)
!5253 = !DILocation(line: 1062, column: 67, scope: !5221)
!5254 = !DILocation(line: 1062, column: 24, scope: !5221)
!5255 = !DILocation(line: 1062, column: 22, scope: !5221)
!5256 = !DILocation(line: 1064, column: 53, scope: !5221)
!5257 = !DILocation(line: 1064, column: 57, scope: !5221)
!5258 = !DILocation(line: 1064, column: 64, scope: !5221)
!5259 = !DILocation(line: 1064, column: 19, scope: !5221)
!5260 = !DILocation(line: 1065, column: 13, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1065, column: 13)
!5262 = !DILocation(line: 1065, column: 23, scope: !5261)
!5263 = !DILocation(line: 1065, column: 28, scope: !5261)
!5264 = !DILocation(line: 1065, column: 31, scope: !5265)
!5265 = !DILexicalBlockFile(scope: !5261, file: !910, discriminator: 1)
!5266 = !DILocation(line: 1065, column: 43, scope: !5265)
!5267 = !DILocation(line: 1065, column: 54, scope: !5265)
!5268 = !DILocation(line: 1065, column: 52, scope: !5265)
!5269 = !DILocation(line: 1065, column: 66, scope: !5265)
!5270 = !DILocation(line: 1065, column: 41, scope: !5265)
!5271 = !DILocation(line: 1065, column: 13, scope: !5265)
!5272 = !DILocation(line: 1066, column: 13, scope: !5261)
!5273 = !DILocation(line: 1068, column: 13, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1068, column: 13)
!5275 = !DILocation(line: 1068, column: 26, scope: !5274)
!5276 = !DILocation(line: 1068, column: 29, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !5274, file: !910, discriminator: 1)
!5278 = !DILocation(line: 1068, column: 13, scope: !5277)
!5279 = !DILocation(line: 1069, column: 43, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5274, file: !910, line: 1068, column: 43)
!5281 = !DILocation(line: 1069, column: 46, scope: !5280)
!5282 = !DILocation(line: 1069, column: 13, scope: !5280)
!5283 = !DILocation(line: 1070, column: 13, scope: !5280)
!5284 = !DILocation(line: 1073, column: 13, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1073, column: 13)
!5286 = !DILocation(line: 1073, column: 16, scope: !5285)
!5287 = !DILocation(line: 1073, column: 21, scope: !5285)
!5288 = !DILocation(line: 1073, column: 24, scope: !5289)
!5289 = !DILexicalBlockFile(scope: !5285, file: !910, discriminator: 1)
!5290 = !DILocation(line: 1073, column: 27, scope: !5289)
!5291 = !DILocation(line: 1073, column: 13, scope: !5289)
!5292 = !DILocation(line: 1074, column: 43, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5285, file: !910, line: 1073, column: 33)
!5294 = !DILocation(line: 1074, column: 46, scope: !5293)
!5295 = !DILocation(line: 1074, column: 13, scope: !5293)
!5296 = !DILocation(line: 1075, column: 13, scope: !5293)
!5297 = !DILocation(line: 1078, column: 16, scope: !5221)
!5298 = !DILocation(line: 1078, column: 19, scope: !5221)
!5299 = !DILocation(line: 1078, column: 29, scope: !5221)
!5300 = !DILocation(line: 1078, column: 37, scope: !5221)
!5301 = !DILocation(line: 1078, column: 35, scope: !5221)
!5302 = !DILocation(line: 1078, column: 14, scope: !5221)
!5303 = !DILocation(line: 1079, column: 15, scope: !5221)
!5304 = !DILocation(line: 1079, column: 18, scope: !5221)
!5305 = !DILocation(line: 1079, column: 28, scope: !5221)
!5306 = !DILocation(line: 1079, column: 36, scope: !5221)
!5307 = !DILocation(line: 1079, column: 34, scope: !5221)
!5308 = !DILocation(line: 1079, column: 13, scope: !5221)
!5309 = !DILocation(line: 1081, column: 13, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1081, column: 13)
!5311 = !DILocation(line: 1081, column: 20, scope: !5310)
!5312 = !DILocation(line: 1081, column: 23, scope: !5310)
!5313 = !DILocation(line: 1081, column: 18, scope: !5310)
!5314 = !DILocation(line: 1081, column: 28, scope: !5310)
!5315 = !DILocation(line: 1081, column: 31, scope: !5316)
!5316 = !DILexicalBlockFile(scope: !5310, file: !910, discriminator: 1)
!5317 = !DILocation(line: 1081, column: 38, scope: !5316)
!5318 = !DILocation(line: 1081, column: 41, scope: !5316)
!5319 = !DILocation(line: 1081, column: 36, scope: !5316)
!5320 = !DILocation(line: 1081, column: 46, scope: !5316)
!5321 = !DILocation(line: 1082, column: 13, scope: !5310)
!5322 = !DILocation(line: 1082, column: 19, scope: !5310)
!5323 = !DILocation(line: 1082, column: 22, scope: !5310)
!5324 = !DILocation(line: 1082, column: 17, scope: !5310)
!5325 = !DILocation(line: 1082, column: 27, scope: !5310)
!5326 = !DILocation(line: 1082, column: 30, scope: !5316)
!5327 = !DILocation(line: 1082, column: 36, scope: !5316)
!5328 = !DILocation(line: 1082, column: 39, scope: !5316)
!5329 = !DILocation(line: 1082, column: 34, scope: !5316)
!5330 = !DILocation(line: 1081, column: 13, scope: !5331)
!5331 = !DILexicalBlockFile(scope: !5221, file: !910, discriminator: 2)
!5332 = !DILocation(line: 1083, column: 13, scope: !5310)
!5333 = !DILocation(line: 1085, column: 23, scope: !5221)
!5334 = !DILocation(line: 1085, column: 26, scope: !5221)
!5335 = !DILocation(line: 1085, column: 36, scope: !5221)
!5336 = !DILocation(line: 1085, column: 22, scope: !5221)
!5337 = !DILocation(line: 1085, column: 46, scope: !5221)
!5338 = !DILocation(line: 1085, column: 49, scope: !5221)
!5339 = !DILocation(line: 1085, column: 58, scope: !5221)
!5340 = !DILocation(line: 1085, column: 67, scope: !5221)
!5341 = !DILocation(line: 1085, column: 70, scope: !5221)
!5342 = !DILocation(line: 1085, column: 80, scope: !5221)
!5343 = !DILocation(line: 1085, column: 65, scope: !5221)
!5344 = !DILocation(line: 1085, column: 56, scope: !5221)
!5345 = !DILocation(line: 1085, column: 43, scope: !5221)
!5346 = !DILocation(line: 1085, column: 90, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5221, file: !910, discriminator: 1)
!5348 = !DILocation(line: 1085, column: 93, scope: !5347)
!5349 = !DILocation(line: 1085, column: 102, scope: !5347)
!5350 = !DILocation(line: 1085, column: 111, scope: !5347)
!5351 = !DILocation(line: 1085, column: 114, scope: !5347)
!5352 = !DILocation(line: 1085, column: 124, scope: !5347)
!5353 = !DILocation(line: 1085, column: 109, scope: !5347)
!5354 = !DILocation(line: 1085, column: 100, scope: !5347)
!5355 = !DILocation(line: 1085, column: 22, scope: !5347)
!5356 = !DILocation(line: 1085, column: 134, scope: !5331)
!5357 = !DILocation(line: 1085, column: 137, scope: !5331)
!5358 = !DILocation(line: 1085, column: 147, scope: !5331)
!5359 = !DILocation(line: 1085, column: 133, scope: !5331)
!5360 = !DILocation(line: 1085, column: 22, scope: !5331)
!5361 = !DILocation(line: 1085, column: 22, scope: !5362)
!5362 = !DILexicalBlockFile(scope: !5221, file: !910, discriminator: 3)
!5363 = !DILocation(line: 1085, column: 21, scope: !5362)
!5364 = !DILocation(line: 1085, column: 9, scope: !5362)
!5365 = !DILocation(line: 1085, column: 13, scope: !5362)
!5366 = !DILocation(line: 1085, column: 19, scope: !5362)
!5367 = !DILocation(line: 1086, column: 23, scope: !5221)
!5368 = !DILocation(line: 1086, column: 26, scope: !5221)
!5369 = !DILocation(line: 1086, column: 36, scope: !5221)
!5370 = !DILocation(line: 1086, column: 22, scope: !5221)
!5371 = !DILocation(line: 1086, column: 46, scope: !5221)
!5372 = !DILocation(line: 1086, column: 49, scope: !5221)
!5373 = !DILocation(line: 1086, column: 58, scope: !5221)
!5374 = !DILocation(line: 1086, column: 67, scope: !5221)
!5375 = !DILocation(line: 1086, column: 70, scope: !5221)
!5376 = !DILocation(line: 1086, column: 80, scope: !5221)
!5377 = !DILocation(line: 1086, column: 65, scope: !5221)
!5378 = !DILocation(line: 1086, column: 56, scope: !5221)
!5379 = !DILocation(line: 1086, column: 43, scope: !5221)
!5380 = !DILocation(line: 1086, column: 90, scope: !5347)
!5381 = !DILocation(line: 1086, column: 93, scope: !5347)
!5382 = !DILocation(line: 1086, column: 102, scope: !5347)
!5383 = !DILocation(line: 1086, column: 111, scope: !5347)
!5384 = !DILocation(line: 1086, column: 114, scope: !5347)
!5385 = !DILocation(line: 1086, column: 124, scope: !5347)
!5386 = !DILocation(line: 1086, column: 109, scope: !5347)
!5387 = !DILocation(line: 1086, column: 100, scope: !5347)
!5388 = !DILocation(line: 1086, column: 22, scope: !5347)
!5389 = !DILocation(line: 1086, column: 134, scope: !5331)
!5390 = !DILocation(line: 1086, column: 137, scope: !5331)
!5391 = !DILocation(line: 1086, column: 147, scope: !5331)
!5392 = !DILocation(line: 1086, column: 133, scope: !5331)
!5393 = !DILocation(line: 1086, column: 22, scope: !5331)
!5394 = !DILocation(line: 1086, column: 22, scope: !5362)
!5395 = !DILocation(line: 1086, column: 21, scope: !5362)
!5396 = !DILocation(line: 1086, column: 9, scope: !5362)
!5397 = !DILocation(line: 1086, column: 13, scope: !5362)
!5398 = !DILocation(line: 1086, column: 19, scope: !5362)
!5399 = !DILocation(line: 1088, column: 13, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1088, column: 13)
!5401 = !DILocation(line: 1088, column: 13, scope: !5221)
!5402 = !DILocation(line: 1089, column: 19, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5400, file: !910, line: 1088, column: 18)
!5404 = !DILocation(line: 1090, column: 9, scope: !5403)
!5405 = !DILocation(line: 1092, column: 14, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5221, file: !910, line: 1092, column: 13)
!5407 = !DILocation(line: 1092, column: 20, scope: !5406)
!5408 = !DILocation(line: 1092, column: 24, scope: !5406)
!5409 = !DILocation(line: 1092, column: 18, scope: !5406)
!5410 = !DILocation(line: 1092, column: 34, scope: !5406)
!5411 = !DILocation(line: 1092, column: 37, scope: !5406)
!5412 = !DILocation(line: 1092, column: 31, scope: !5406)
!5413 = !DILocation(line: 1092, column: 13, scope: !5221)
!5414 = !DILocation(line: 1093, column: 19, scope: !5406)
!5415 = !DILocation(line: 1093, column: 13, scope: !5406)
!5416 = !DILocation(line: 1095, column: 33, scope: !5221)
!5417 = !DILocation(line: 1095, column: 37, scope: !5221)
!5418 = !DILocation(line: 1095, column: 45, scope: !5221)
!5419 = !DILocation(line: 1095, column: 48, scope: !5221)
!5420 = !DILocation(line: 1095, column: 43, scope: !5221)
!5421 = !DILocation(line: 1095, column: 9, scope: !5221)
!5422 = !DILocation(line: 1095, column: 13, scope: !5221)
!5423 = !DILocation(line: 1095, column: 31, scope: !5221)
!5424 = !DILocation(line: 1096, column: 29, scope: !5221)
!5425 = !DILocation(line: 1096, column: 33, scope: !5221)
!5426 = !DILocation(line: 1096, column: 63, scope: !5221)
!5427 = !DILocation(line: 1096, column: 67, scope: !5221)
!5428 = !DILocation(line: 1096, column: 53, scope: !5221)
!5429 = !DILocation(line: 1096, column: 51, scope: !5221)
!5430 = !DILocation(line: 1096, column: 27, scope: !5221)
!5431 = !DILocation(line: 1097, column: 5, scope: !5221)
!5432 = !DILocation(line: 1098, column: 13, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5434, file: !910, line: 1098, column: 13)
!5434 = distinct !DILexicalBlock(scope: !5216, file: !910, line: 1097, column: 12)
!5435 = !DILocation(line: 1098, column: 22, scope: !5433)
!5436 = !DILocation(line: 1098, column: 26, scope: !5433)
!5437 = !DILocation(line: 1098, column: 29, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !5433, file: !910, discriminator: 1)
!5439 = !DILocation(line: 1098, column: 43, scope: !5438)
!5440 = !DILocation(line: 1098, column: 52, scope: !5438)
!5441 = !DILocation(line: 1098, column: 41, scope: !5438)
!5442 = !DILocation(line: 1098, column: 13, scope: !5438)
!5443 = !DILocation(line: 1099, column: 13, scope: !5433)
!5444 = !DILocation(line: 1101, column: 15, scope: !5434)
!5445 = !DILocation(line: 1101, column: 21, scope: !5434)
!5446 = !DILocation(line: 1101, column: 19, scope: !5434)
!5447 = !DILocation(line: 1101, column: 33, scope: !5434)
!5448 = !DILocation(line: 1101, column: 13, scope: !5434)
!5449 = !DILocation(line: 1102, column: 48, scope: !5434)
!5450 = !DILocation(line: 1102, column: 52, scope: !5434)
!5451 = !DILocation(line: 1102, column: 59, scope: !5434)
!5452 = !DILocation(line: 1102, column: 16, scope: !5434)
!5453 = !DILocation(line: 1102, column: 14, scope: !5434)
!5454 = !DILocation(line: 1104, column: 13, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5434, file: !910, line: 1104, column: 13)
!5456 = !DILocation(line: 1104, column: 20, scope: !5455)
!5457 = !DILocation(line: 1104, column: 23, scope: !5455)
!5458 = !DILocation(line: 1104, column: 18, scope: !5455)
!5459 = !DILocation(line: 1104, column: 28, scope: !5455)
!5460 = !DILocation(line: 1104, column: 31, scope: !5461)
!5461 = !DILexicalBlockFile(scope: !5455, file: !910, discriminator: 1)
!5462 = !DILocation(line: 1104, column: 38, scope: !5461)
!5463 = !DILocation(line: 1104, column: 41, scope: !5461)
!5464 = !DILocation(line: 1104, column: 36, scope: !5461)
!5465 = !DILocation(line: 1104, column: 13, scope: !5461)
!5466 = !DILocation(line: 1105, column: 13, scope: !5455)
!5467 = !DILocation(line: 1107, column: 53, scope: !5434)
!5468 = !DILocation(line: 1107, column: 57, scope: !5434)
!5469 = !DILocation(line: 1107, column: 64, scope: !5434)
!5470 = !DILocation(line: 1107, column: 19, scope: !5434)
!5471 = !DILocation(line: 1108, column: 13, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5434, file: !910, line: 1108, column: 13)
!5473 = !DILocation(line: 1108, column: 23, scope: !5472)
!5474 = !DILocation(line: 1108, column: 28, scope: !5472)
!5475 = !DILocation(line: 1108, column: 31, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !5472, file: !910, discriminator: 1)
!5477 = !DILocation(line: 1108, column: 43, scope: !5476)
!5478 = !DILocation(line: 1108, column: 54, scope: !5476)
!5479 = !DILocation(line: 1108, column: 52, scope: !5476)
!5480 = !DILocation(line: 1108, column: 66, scope: !5476)
!5481 = !DILocation(line: 1108, column: 41, scope: !5476)
!5482 = !DILocation(line: 1108, column: 13, scope: !5476)
!5483 = !DILocation(line: 1109, column: 13, scope: !5472)
!5484 = !DILocation(line: 1111, column: 23, scope: !5434)
!5485 = !DILocation(line: 1111, column: 26, scope: !5434)
!5486 = !DILocation(line: 1111, column: 22, scope: !5434)
!5487 = !DILocation(line: 1111, column: 51, scope: !5434)
!5488 = !DILocation(line: 1111, column: 54, scope: !5434)
!5489 = !DILocation(line: 1111, column: 61, scope: !5434)
!5490 = !DILocation(line: 1111, column: 59, scope: !5434)
!5491 = !DILocation(line: 1111, column: 66, scope: !5434)
!5492 = !DILocation(line: 1111, column: 48, scope: !5434)
!5493 = !DILocation(line: 1111, column: 74, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5434, file: !910, discriminator: 1)
!5495 = !DILocation(line: 1111, column: 77, scope: !5494)
!5496 = !DILocation(line: 1111, column: 84, scope: !5494)
!5497 = !DILocation(line: 1111, column: 82, scope: !5494)
!5498 = !DILocation(line: 1111, column: 89, scope: !5494)
!5499 = !DILocation(line: 1111, column: 22, scope: !5494)
!5500 = !DILocation(line: 1111, column: 97, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !5434, file: !910, discriminator: 2)
!5502 = !DILocation(line: 1111, column: 100, scope: !5501)
!5503 = !DILocation(line: 1111, column: 96, scope: !5501)
!5504 = !DILocation(line: 1111, column: 22, scope: !5501)
!5505 = !DILocation(line: 1111, column: 22, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5434, file: !910, discriminator: 3)
!5507 = !DILocation(line: 1111, column: 21, scope: !5506)
!5508 = !DILocation(line: 1111, column: 9, scope: !5506)
!5509 = !DILocation(line: 1111, column: 13, scope: !5506)
!5510 = !DILocation(line: 1111, column: 19, scope: !5506)
!5511 = !DILocation(line: 1112, column: 21, scope: !5434)
!5512 = !DILocation(line: 1112, column: 24, scope: !5434)
!5513 = !DILocation(line: 1112, column: 9, scope: !5434)
!5514 = !DILocation(line: 1112, column: 13, scope: !5434)
!5515 = !DILocation(line: 1112, column: 19, scope: !5434)
!5516 = !DILocation(line: 1114, column: 33, scope: !5434)
!5517 = !DILocation(line: 1114, column: 37, scope: !5434)
!5518 = !DILocation(line: 1114, column: 45, scope: !5434)
!5519 = !DILocation(line: 1114, column: 48, scope: !5434)
!5520 = !DILocation(line: 1114, column: 43, scope: !5434)
!5521 = !DILocation(line: 1114, column: 9, scope: !5434)
!5522 = !DILocation(line: 1114, column: 13, scope: !5434)
!5523 = !DILocation(line: 1114, column: 31, scope: !5434)
!5524 = !DILocation(line: 1115, column: 29, scope: !5434)
!5525 = !DILocation(line: 1115, column: 33, scope: !5434)
!5526 = !DILocation(line: 1115, column: 63, scope: !5434)
!5527 = !DILocation(line: 1115, column: 67, scope: !5434)
!5528 = !DILocation(line: 1115, column: 53, scope: !5434)
!5529 = !DILocation(line: 1115, column: 51, scope: !5434)
!5530 = !DILocation(line: 1115, column: 27, scope: !5434)
!5531 = !DILocation(line: 1117, column: 14, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5434, file: !910, line: 1117, column: 13)
!5533 = !DILocation(line: 1117, column: 17, scope: !5532)
!5534 = !DILocation(line: 1117, column: 29, scope: !5532)
!5535 = !DILocation(line: 1117, column: 40, scope: !5532)
!5536 = !DILocation(line: 1117, column: 44, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !5532, file: !910, discriminator: 1)
!5538 = !DILocation(line: 1117, column: 57, scope: !5537)
!5539 = !DILocation(line: 1117, column: 54, scope: !5537)
!5540 = !DILocation(line: 1117, column: 75, scope: !5537)
!5541 = !DILocation(line: 1118, column: 44, scope: !5532)
!5542 = !DILocation(line: 1118, column: 58, scope: !5532)
!5543 = !DILocation(line: 1118, column: 69, scope: !5532)
!5544 = !DILocation(line: 1118, column: 67, scope: !5532)
!5545 = !DILocation(line: 1118, column: 56, scope: !5532)
!5546 = !DILocation(line: 1118, column: 89, scope: !5532)
!5547 = !DILocation(line: 1119, column: 14, scope: !5532)
!5548 = !DILocation(line: 1119, column: 17, scope: !5532)
!5549 = !DILocation(line: 1119, column: 29, scope: !5532)
!5550 = !DILocation(line: 1119, column: 40, scope: !5532)
!5551 = !DILocation(line: 1119, column: 44, scope: !5537)
!5552 = !DILocation(line: 1119, column: 56, scope: !5537)
!5553 = !DILocation(line: 1119, column: 54, scope: !5537)
!5554 = !DILocation(line: 1119, column: 74, scope: !5537)
!5555 = !DILocation(line: 1120, column: 44, scope: !5532)
!5556 = !DILocation(line: 1120, column: 58, scope: !5532)
!5557 = !DILocation(line: 1120, column: 69, scope: !5532)
!5558 = !DILocation(line: 1120, column: 67, scope: !5532)
!5559 = !DILocation(line: 1120, column: 56, scope: !5532)
!5560 = !DILocation(line: 1117, column: 13, scope: !5501)
!5561 = !DILocation(line: 1121, column: 13, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5532, file: !910, line: 1120, column: 82)
!5563 = !DILocation(line: 1125, column: 9, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5047, file: !910, line: 1125, column: 9)
!5565 = !DILocation(line: 1125, column: 21, scope: !5564)
!5566 = !DILocation(line: 1125, column: 19, scope: !5564)
!5567 = !DILocation(line: 1125, column: 39, scope: !5564)
!5568 = !DILocation(line: 1125, column: 42, scope: !5569)
!5569 = !DILexicalBlockFile(scope: !5564, file: !910, discriminator: 1)
!5570 = !DILocation(line: 1125, column: 45, scope: !5569)
!5571 = !DILocation(line: 1125, column: 9, scope: !5569)
!5572 = !DILocation(line: 1126, column: 32, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5564, file: !910, line: 1125, column: 54)
!5574 = !DILocation(line: 1126, column: 36, scope: !5573)
!5575 = !DILocation(line: 1126, column: 31, scope: !5573)
!5576 = !DILocation(line: 1126, column: 42, scope: !5573)
!5577 = !DILocation(line: 1126, column: 46, scope: !5573)
!5578 = !DILocation(line: 1126, column: 56, scope: !5573)
!5579 = !DILocation(line: 1126, column: 9, scope: !5573)
!5580 = !DILocation(line: 1127, column: 14, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5573, file: !910, line: 1127, column: 13)
!5582 = !DILocation(line: 1127, column: 18, scope: !5581)
!5583 = !DILocation(line: 1127, column: 13, scope: !5573)
!5584 = !DILocation(line: 1128, column: 13, scope: !5581)
!5585 = !DILocation(line: 1129, column: 5, scope: !5573)
!5586 = !DILocation(line: 1131, column: 9, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5047, file: !910, line: 1131, column: 9)
!5588 = !DILocation(line: 1131, column: 21, scope: !5587)
!5589 = !DILocation(line: 1131, column: 19, scope: !5587)
!5590 = !DILocation(line: 1131, column: 9, scope: !5047)
!5591 = !DILocation(line: 1132, column: 32, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5587, file: !910, line: 1131, column: 40)
!5593 = !DILocation(line: 1132, column: 36, scope: !5592)
!5594 = !DILocation(line: 1132, column: 31, scope: !5592)
!5595 = !DILocation(line: 1133, column: 32, scope: !5592)
!5596 = !DILocation(line: 1133, column: 36, scope: !5592)
!5597 = !DILocation(line: 1133, column: 55, scope: !5592)
!5598 = !DILocation(line: 1133, column: 73, scope: !5592)
!5599 = !DILocation(line: 1132, column: 9, scope: !5592)
!5600 = !DILocation(line: 1135, column: 14, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5592, file: !910, line: 1135, column: 13)
!5602 = !DILocation(line: 1135, column: 18, scope: !5601)
!5603 = !DILocation(line: 1135, column: 13, scope: !5592)
!5604 = !DILocation(line: 1136, column: 13, scope: !5601)
!5605 = !DILocation(line: 1138, column: 13, scope: !5592)
!5606 = !DILocation(line: 1139, column: 17, scope: !5592)
!5607 = !DILocation(line: 1139, column: 20, scope: !5592)
!5608 = !DILocation(line: 1139, column: 9, scope: !5592)
!5609 = !DILocation(line: 1142, column: 34, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5592, file: !910, line: 1139, column: 33)
!5611 = !DILocation(line: 1142, column: 37, scope: !5610)
!5612 = !DILocation(line: 1142, column: 42, scope: !5610)
!5613 = !DILocation(line: 1142, column: 53, scope: !5610)
!5614 = !DILocation(line: 1142, column: 72, scope: !5610)
!5615 = !DILocation(line: 1142, column: 19, scope: !5610)
!5616 = !DILocation(line: 1142, column: 17, scope: !5610)
!5617 = !DILocation(line: 1143, column: 13, scope: !5610)
!5618 = !DILocation(line: 1145, column: 34, scope: !5610)
!5619 = !DILocation(line: 1145, column: 37, scope: !5610)
!5620 = !DILocation(line: 1145, column: 42, scope: !5610)
!5621 = !DILocation(line: 1145, column: 53, scope: !5610)
!5622 = !DILocation(line: 1145, column: 72, scope: !5610)
!5623 = !DILocation(line: 1145, column: 19, scope: !5610)
!5624 = !DILocation(line: 1145, column: 17, scope: !5610)
!5625 = !DILocation(line: 1146, column: 13, scope: !5610)
!5626 = !DILocation(line: 1148, column: 36, scope: !5610)
!5627 = !DILocation(line: 1148, column: 39, scope: !5610)
!5628 = !DILocation(line: 1148, column: 44, scope: !5610)
!5629 = !DILocation(line: 1148, column: 55, scope: !5610)
!5630 = !DILocation(line: 1148, column: 74, scope: !5610)
!5631 = !DILocation(line: 1148, column: 19, scope: !5610)
!5632 = !DILocation(line: 1148, column: 17, scope: !5610)
!5633 = !DILocation(line: 1149, column: 13, scope: !5610)
!5634 = !DILocation(line: 1151, column: 34, scope: !5610)
!5635 = !DILocation(line: 1151, column: 37, scope: !5610)
!5636 = !DILocation(line: 1151, column: 42, scope: !5610)
!5637 = !DILocation(line: 1151, column: 53, scope: !5610)
!5638 = !DILocation(line: 1151, column: 72, scope: !5610)
!5639 = !DILocation(line: 1151, column: 19, scope: !5610)
!5640 = !DILocation(line: 1151, column: 17, scope: !5610)
!5641 = !DILocation(line: 1152, column: 13, scope: !5610)
!5642 = !DILocation(line: 1155, column: 34, scope: !5610)
!5643 = !DILocation(line: 1155, column: 37, scope: !5610)
!5644 = !DILocation(line: 1155, column: 42, scope: !5610)
!5645 = !DILocation(line: 1155, column: 53, scope: !5610)
!5646 = !DILocation(line: 1155, column: 72, scope: !5610)
!5647 = !DILocation(line: 1155, column: 19, scope: !5610)
!5648 = !DILocation(line: 1155, column: 17, scope: !5610)
!5649 = !DILocation(line: 1156, column: 13, scope: !5610)
!5650 = !DILocation(line: 1158, column: 13, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5592, file: !910, line: 1158, column: 13)
!5652 = !DILocation(line: 1158, column: 17, scope: !5651)
!5653 = !DILocation(line: 1158, column: 13, scope: !5592)
!5654 = !DILocation(line: 1159, column: 20, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !910, line: 1158, column: 22)
!5656 = !DILocation(line: 1159, column: 13, scope: !5655)
!5657 = !DILocation(line: 1160, column: 20, scope: !5655)
!5658 = !DILocation(line: 1160, column: 13, scope: !5655)
!5659 = !DILocation(line: 1162, column: 15, scope: !5592)
!5660 = !DILocation(line: 1162, column: 19, scope: !5592)
!5661 = !DILocation(line: 1162, column: 13, scope: !5592)
!5662 = !DILocation(line: 1163, column: 5, scope: !5592)
!5663 = !DILocation(line: 1165, column: 10, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5047, file: !910, line: 1165, column: 9)
!5665 = !DILocation(line: 1165, column: 13, scope: !5664)
!5666 = !DILocation(line: 1165, column: 9, scope: !5047)
!5667 = !DILocation(line: 1166, column: 29, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5664, file: !910, line: 1165, column: 22)
!5669 = !DILocation(line: 1166, column: 35, scope: !5668)
!5670 = !DILocation(line: 1166, column: 39, scope: !5668)
!5671 = !DILocation(line: 1166, column: 47, scope: !5668)
!5672 = !DILocation(line: 1166, column: 50, scope: !5668)
!5673 = !DILocation(line: 1166, column: 45, scope: !5668)
!5674 = !DILocation(line: 1166, column: 33, scope: !5668)
!5675 = !DILocation(line: 1166, column: 9, scope: !5668)
!5676 = !DILocation(line: 1166, column: 27, scope: !5668)
!5677 = !DILocation(line: 1167, column: 29, scope: !5668)
!5678 = !DILocation(line: 1167, column: 35, scope: !5668)
!5679 = !DILocation(line: 1167, column: 39, scope: !5668)
!5680 = !DILocation(line: 1167, column: 47, scope: !5668)
!5681 = !DILocation(line: 1167, column: 50, scope: !5668)
!5682 = !DILocation(line: 1167, column: 45, scope: !5668)
!5683 = !DILocation(line: 1167, column: 33, scope: !5668)
!5684 = !DILocation(line: 1167, column: 9, scope: !5668)
!5685 = !DILocation(line: 1167, column: 27, scope: !5668)
!5686 = !DILocation(line: 1168, column: 29, scope: !5668)
!5687 = !DILocation(line: 1168, column: 35, scope: !5668)
!5688 = !DILocation(line: 1168, column: 39, scope: !5668)
!5689 = !DILocation(line: 1168, column: 47, scope: !5668)
!5690 = !DILocation(line: 1168, column: 50, scope: !5668)
!5691 = !DILocation(line: 1168, column: 45, scope: !5668)
!5692 = !DILocation(line: 1168, column: 33, scope: !5668)
!5693 = !DILocation(line: 1168, column: 9, scope: !5668)
!5694 = !DILocation(line: 1168, column: 27, scope: !5668)
!5695 = !DILocation(line: 1169, column: 27, scope: !5668)
!5696 = !DILocation(line: 1170, column: 5, scope: !5668)
!5697 = !DILocation(line: 1171, column: 29, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5664, file: !910, line: 1170, column: 12)
!5699 = !DILocation(line: 1171, column: 35, scope: !5698)
!5700 = !DILocation(line: 1171, column: 39, scope: !5698)
!5701 = !DILocation(line: 1171, column: 47, scope: !5698)
!5702 = !DILocation(line: 1171, column: 50, scope: !5698)
!5703 = !DILocation(line: 1171, column: 45, scope: !5698)
!5704 = !DILocation(line: 1171, column: 33, scope: !5698)
!5705 = !DILocation(line: 1171, column: 9, scope: !5698)
!5706 = !DILocation(line: 1171, column: 27, scope: !5698)
!5707 = !DILocation(line: 1172, column: 27, scope: !5698)
!5708 = !DILocation(line: 1174, column: 9, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5047, file: !910, line: 1174, column: 9)
!5710 = !DILocation(line: 1174, column: 12, scope: !5709)
!5711 = !DILocation(line: 1174, column: 31, scope: !5709)
!5712 = !DILocation(line: 1174, column: 9, scope: !5047)
!5713 = !DILocation(line: 1175, column: 29, scope: !5709)
!5714 = !DILocation(line: 1175, column: 35, scope: !5709)
!5715 = !DILocation(line: 1175, column: 39, scope: !5709)
!5716 = !DILocation(line: 1175, column: 47, scope: !5709)
!5717 = !DILocation(line: 1175, column: 50, scope: !5709)
!5718 = !DILocation(line: 1175, column: 45, scope: !5709)
!5719 = !DILocation(line: 1175, column: 33, scope: !5709)
!5720 = !DILocation(line: 1175, column: 9, scope: !5709)
!5721 = !DILocation(line: 1175, column: 27, scope: !5709)
!5722 = !DILocation(line: 1177, column: 11, scope: !5047)
!5723 = !DILocation(line: 1177, column: 14, scope: !5047)
!5724 = !DILocation(line: 1177, column: 24, scope: !5047)
!5725 = !DILocation(line: 1177, column: 31, scope: !5047)
!5726 = !DILocation(line: 1177, column: 34, scope: !5047)
!5727 = !DILocation(line: 1177, column: 29, scope: !5047)
!5728 = !DILocation(line: 1177, column: 22, scope: !5047)
!5729 = !DILocation(line: 1177, column: 49, scope: !5047)
!5730 = !DILocation(line: 1177, column: 55, scope: !5047)
!5731 = !DILocation(line: 1177, column: 58, scope: !5047)
!5732 = !DILocation(line: 1177, column: 64, scope: !5047)
!5733 = !DILocation(line: 1177, column: 53, scope: !5047)
!5734 = !DILocation(line: 1177, column: 78, scope: !5047)
!5735 = !DILocation(line: 1177, column: 46, scope: !5047)
!5736 = !DILocation(line: 1177, column: 9, scope: !5047)
!5737 = !DILocation(line: 1179, column: 12, scope: !5062)
!5738 = !DILocation(line: 1179, column: 10, scope: !5062)
!5739 = !DILocation(line: 1180, column: 10, scope: !5061)
!5740 = !DILocation(line: 1180, column: 14, scope: !5061)
!5741 = !DILocation(line: 1180, column: 18, scope: !5061)
!5742 = !DILocation(line: 1180, column: 12, scope: !5061)
!5743 = !DILocation(line: 1179, column: 5, scope: !5744)
!5744 = !DILexicalBlockFile(scope: !5062, file: !910, discriminator: 1)
!5745 = !DILocalVariable(name: "a", scope: !5060, file: !910, line: 1182, type: !944)
!5746 = !DILocation(line: 1182, column: 25, scope: !5060)
!5747 = !DILocalVariable(name: "rgb", scope: !5060, file: !910, line: 1183, type: !5748)
!5748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 192, align: 64, elements: !5749)
!5749 = !{!5750}
!5750 = !DISubrange(count: 3)
!5751 = !DILocation(line: 1183, column: 24, scope: !5060)
!5752 = !DILocation(line: 1185, column: 16, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5060, file: !910, line: 1185, column: 9)
!5754 = !DILocation(line: 1185, column: 14, scope: !5753)
!5755 = !DILocation(line: 1185, column: 21, scope: !5756)
!5756 = !DILexicalBlockFile(scope: !5757, file: !910, discriminator: 1)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !910, line: 1185, column: 9)
!5758 = !DILocation(line: 1185, column: 25, scope: !5756)
!5759 = !DILocation(line: 1185, column: 23, scope: !5756)
!5760 = !DILocation(line: 1185, column: 9, scope: !5756)
!5761 = !DILocation(line: 1186, column: 37, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5757, file: !910, line: 1185, column: 48)
!5763 = !DILocation(line: 1186, column: 22, scope: !5762)
!5764 = !DILocation(line: 1186, column: 17, scope: !5762)
!5765 = !DILocation(line: 1186, column: 13, scope: !5762)
!5766 = !DILocation(line: 1186, column: 20, scope: !5762)
!5767 = !DILocation(line: 1187, column: 9, scope: !5762)
!5768 = !DILocation(line: 1185, column: 45, scope: !5769)
!5769 = !DILexicalBlockFile(scope: !5757, file: !910, discriminator: 2)
!5770 = !DILocation(line: 1185, column: 9, scope: !5769)
!5771 = distinct !{!5771, !5772}
!5772 = !DILocation(line: 1185, column: 9, scope: !5060)
!5773 = !DILocation(line: 1189, column: 13, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5060, file: !910, line: 1189, column: 13)
!5775 = !DILocation(line: 1189, column: 13, scope: !5060)
!5776 = !DILocation(line: 1190, column: 17, scope: !5774)
!5777 = !DILocation(line: 1190, column: 15, scope: !5774)
!5778 = !DILocation(line: 1190, column: 13, scope: !5774)
!5779 = !DILocation(line: 1192, column: 30, scope: !5060)
!5780 = !DILocation(line: 1192, column: 17, scope: !5060)
!5781 = !DILocation(line: 1192, column: 15, scope: !5060)
!5782 = !DILocation(line: 1195, column: 16, scope: !5060)
!5783 = !DILocation(line: 1195, column: 9, scope: !5060)
!5784 = !DILocation(line: 1195, column: 26, scope: !5060)
!5785 = !DILocation(line: 1196, column: 18, scope: !5060)
!5786 = !DILocation(line: 1196, column: 21, scope: !5060)
!5787 = !DILocation(line: 1196, column: 28, scope: !5060)
!5788 = !DILocation(line: 1196, column: 31, scope: !5060)
!5789 = !DILocation(line: 1196, column: 37, scope: !5060)
!5790 = !DILocation(line: 1196, column: 26, scope: !5060)
!5791 = !DILocation(line: 1196, column: 15, scope: !5060)
!5792 = !DILocation(line: 1198, column: 13, scope: !5059)
!5793 = !DILocation(line: 1198, column: 16, scope: !5059)
!5794 = !DILocation(line: 1198, column: 27, scope: !5059)
!5795 = !DILocation(line: 1198, column: 13, scope: !5060)
!5796 = !DILocation(line: 1200, column: 17, scope: !5057)
!5797 = !DILocation(line: 1200, column: 17, scope: !5058)
!5798 = !DILocation(line: 1201, column: 24, scope: !5088)
!5799 = !DILocation(line: 1201, column: 22, scope: !5088)
!5800 = !DILocation(line: 1201, column: 29, scope: !5801)
!5801 = !DILexicalBlockFile(scope: !5087, file: !910, discriminator: 1)
!5802 = !DILocation(line: 1201, column: 33, scope: !5801)
!5803 = !DILocation(line: 1201, column: 37, scope: !5801)
!5804 = !DILocation(line: 1201, column: 31, scope: !5801)
!5805 = !DILocation(line: 1201, column: 17, scope: !5801)
!5806 = !DILocalVariable(name: "t", scope: !5086, file: !910, line: 1202, type: !1882)
!5807 = !DILocation(line: 1202, column: 41, scope: !5086)
!5808 = !DILocation(line: 1204, column: 28, scope: !5107)
!5809 = !DILocation(line: 1204, column: 26, scope: !5107)
!5810 = !DILocation(line: 1204, column: 33, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !5106, file: !910, discriminator: 1)
!5812 = !DILocation(line: 1204, column: 37, scope: !5811)
!5813 = !DILocation(line: 1204, column: 35, scope: !5811)
!5814 = !DILocation(line: 1204, column: 21, scope: !5811)
!5815 = !DILocation(line: 1205, column: 56, scope: !5105)
!5816 = !DILocation(line: 1205, column: 52, scope: !5105)
!5817 = !DILocation(line: 1205, column: 31, scope: !5105)
!5818 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !5104)
!5819 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !5104)
!5820 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !5104)
!5821 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !5104)
!5822 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !5104)
!5823 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !5104)
!5824 = !DILocation(line: 1205, column: 27, scope: !5105)
!5825 = !DILocation(line: 1205, column: 29, scope: !5105)
!5826 = !DILocation(line: 1206, column: 31, scope: !5105)
!5827 = !DILocation(line: 1206, column: 42, scope: !5105)
!5828 = !DILocation(line: 1206, column: 40, scope: !5105)
!5829 = !DILocation(line: 1206, column: 27, scope: !5105)
!5830 = !DILocation(line: 1206, column: 29, scope: !5105)
!5831 = !DILocation(line: 1207, column: 51, scope: !5105)
!5832 = !DILocation(line: 1207, column: 36, scope: !5105)
!5833 = !DILocation(line: 1207, column: 31, scope: !5105)
!5834 = !DILocation(line: 1207, column: 34, scope: !5105)
!5835 = !DILocation(line: 1208, column: 21, scope: !5105)
!5836 = !DILocation(line: 1204, column: 57, scope: !5837)
!5837 = !DILexicalBlockFile(scope: !5106, file: !910, discriminator: 2)
!5838 = !DILocation(line: 1204, column: 21, scope: !5837)
!5839 = distinct !{!5839, !5840}
!5840 = !DILocation(line: 1204, column: 21, scope: !5086)
!5841 = !DILocation(line: 1209, column: 25, scope: !5085)
!5842 = !DILocation(line: 1209, column: 25, scope: !5086)
!5843 = !DILocation(line: 1210, column: 49, scope: !5085)
!5844 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !5084)
!5845 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !5084)
!5846 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !5084)
!5847 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !5084)
!5848 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !5084)
!5849 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !5084)
!5850 = !DILocation(line: 1210, column: 36, scope: !5851)
!5851 = !DILexicalBlockFile(scope: !5085, file: !910, discriminator: 1)
!5852 = !DILocation(line: 1210, column: 31, scope: !5085)
!5853 = !DILocation(line: 1210, column: 34, scope: !5085)
!5854 = !DILocation(line: 1210, column: 25, scope: !5085)
!5855 = !DILocation(line: 1211, column: 17, scope: !5086)
!5856 = !DILocation(line: 1201, column: 45, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !5087, file: !910, discriminator: 2)
!5858 = !DILocation(line: 1201, column: 17, scope: !5857)
!5859 = distinct !{!5859, !5860}
!5860 = !DILocation(line: 1201, column: 17, scope: !5089)
!5861 = !DILocation(line: 1212, column: 13, scope: !5089)
!5862 = !DILocation(line: 1213, column: 24, scope: !5055)
!5863 = !DILocation(line: 1213, column: 22, scope: !5055)
!5864 = !DILocation(line: 1213, column: 29, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !5054, file: !910, discriminator: 1)
!5866 = !DILocation(line: 1213, column: 33, scope: !5865)
!5867 = !DILocation(line: 1213, column: 37, scope: !5865)
!5868 = !DILocation(line: 1213, column: 31, scope: !5865)
!5869 = !DILocation(line: 1213, column: 17, scope: !5865)
!5870 = !DILocalVariable(name: "t", scope: !5053, file: !910, line: 1214, type: !1882)
!5871 = !DILocation(line: 1214, column: 41, scope: !5053)
!5872 = !DILocalVariable(name: "c", scope: !5053, file: !910, line: 1215, type: !941)
!5873 = !DILocation(line: 1215, column: 25, scope: !5053)
!5874 = !DILocation(line: 1217, column: 28, scope: !5067)
!5875 = !DILocation(line: 1217, column: 26, scope: !5067)
!5876 = !DILocation(line: 1217, column: 33, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !5066, file: !910, discriminator: 1)
!5878 = !DILocation(line: 1217, column: 37, scope: !5877)
!5879 = !DILocation(line: 1217, column: 35, scope: !5877)
!5880 = !DILocation(line: 1217, column: 21, scope: !5877)
!5881 = !DILocation(line: 1218, column: 56, scope: !5065)
!5882 = !DILocation(line: 1218, column: 52, scope: !5065)
!5883 = !DILocation(line: 1218, column: 31, scope: !5065)
!5884 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !5064)
!5885 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !5064)
!5886 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !5064)
!5887 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !5064)
!5888 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !5064)
!5889 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !5064)
!5890 = !DILocation(line: 1218, column: 27, scope: !5065)
!5891 = !DILocation(line: 1218, column: 29, scope: !5065)
!5892 = !DILocation(line: 1219, column: 31, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5065, file: !910, line: 1219, column: 29)
!5894 = !DILocation(line: 1219, column: 33, scope: !5893)
!5895 = !DILocation(line: 1219, column: 29, scope: !5065)
!5896 = !DILocation(line: 1220, column: 42, scope: !5893)
!5897 = !DILocation(line: 1220, column: 45, scope: !5893)
!5898 = !DILocation(line: 1220, column: 35, scope: !5893)
!5899 = !DILocation(line: 1220, column: 31, scope: !5893)
!5900 = !DILocation(line: 1220, column: 33, scope: !5893)
!5901 = !DILocation(line: 1220, column: 29, scope: !5893)
!5902 = !DILocation(line: 1221, column: 51, scope: !5065)
!5903 = !DILocation(line: 1221, column: 36, scope: !5065)
!5904 = !DILocation(line: 1221, column: 31, scope: !5065)
!5905 = !DILocation(line: 1221, column: 34, scope: !5065)
!5906 = !DILocation(line: 1222, column: 21, scope: !5065)
!5907 = !DILocation(line: 1217, column: 57, scope: !5908)
!5908 = !DILexicalBlockFile(scope: !5066, file: !910, discriminator: 2)
!5909 = !DILocation(line: 1217, column: 21, scope: !5908)
!5910 = distinct !{!5910, !5911}
!5911 = !DILocation(line: 1217, column: 21, scope: !5053)
!5912 = !DILocation(line: 1224, column: 25, scope: !5052)
!5913 = !DILocation(line: 1224, column: 25, scope: !5053)
!5914 = !DILocation(line: 1225, column: 49, scope: !5052)
!5915 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !5051)
!5916 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !5051)
!5917 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !5051)
!5918 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !5051)
!5919 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !5051)
!5920 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !5051)
!5921 = !DILocation(line: 1225, column: 36, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !5052, file: !910, discriminator: 1)
!5923 = !DILocation(line: 1225, column: 31, scope: !5052)
!5924 = !DILocation(line: 1225, column: 34, scope: !5052)
!5925 = !DILocation(line: 1225, column: 25, scope: !5052)
!5926 = !DILocation(line: 1226, column: 17, scope: !5053)
!5927 = !DILocation(line: 1213, column: 45, scope: !5928)
!5928 = !DILexicalBlockFile(scope: !5054, file: !910, discriminator: 2)
!5929 = !DILocation(line: 1213, column: 17, scope: !5928)
!5930 = distinct !{!5930, !5931}
!5931 = !DILocation(line: 1213, column: 17, scope: !5056)
!5932 = !DILocation(line: 1228, column: 9, scope: !5058)
!5933 = !DILocation(line: 1228, column: 20, scope: !5934)
!5934 = !DILexicalBlockFile(scope: !5079, file: !910, discriminator: 1)
!5935 = !DILocation(line: 1228, column: 23, scope: !5934)
!5936 = !DILocation(line: 1228, column: 34, scope: !5934)
!5937 = !DILocation(line: 1230, column: 20, scope: !5077)
!5938 = !DILocation(line: 1230, column: 18, scope: !5077)
!5939 = !DILocation(line: 1230, column: 25, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5076, file: !910, discriminator: 1)
!5941 = !DILocation(line: 1230, column: 29, scope: !5940)
!5942 = !DILocation(line: 1230, column: 33, scope: !5940)
!5943 = !DILocation(line: 1230, column: 27, scope: !5940)
!5944 = !DILocation(line: 1230, column: 13, scope: !5940)
!5945 = !DILocalVariable(name: "c", scope: !5075, file: !910, line: 1231, type: !941)
!5946 = !DILocation(line: 1231, column: 21, scope: !5075)
!5947 = !DILocation(line: 1232, column: 24, scope: !5074)
!5948 = !DILocation(line: 1232, column: 22, scope: !5074)
!5949 = !DILocation(line: 1232, column: 29, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !5073, file: !910, discriminator: 1)
!5951 = !DILocation(line: 1232, column: 33, scope: !5950)
!5952 = !DILocation(line: 1232, column: 31, scope: !5950)
!5953 = !DILocation(line: 1232, column: 17, scope: !5950)
!5954 = !DILocation(line: 1233, column: 72, scope: !5072)
!5955 = !DILocation(line: 1233, column: 68, scope: !5072)
!5956 = !DILocation(line: 1233, column: 47, scope: !5072)
!5957 = !DILocation(line: 90, column: 102, scope: !5069, inlinedAt: !5071)
!5958 = !DILocation(line: 90, column: 105, scope: !5069, inlinedAt: !5071)
!5959 = !DILocation(line: 90, column: 151, scope: !5069, inlinedAt: !5071)
!5960 = !DILocation(line: 90, column: 150, scope: !5069, inlinedAt: !5071)
!5961 = !DILocation(line: 90, column: 153, scope: !5069, inlinedAt: !5071)
!5962 = !DILocation(line: 90, column: 160, scope: !5069, inlinedAt: !5071)
!5963 = !DILocation(line: 90, column: 118, scope: !5069, inlinedAt: !5071)
!5964 = !DILocation(line: 1233, column: 32, scope: !5072)
!5965 = !DILocation(line: 1233, column: 35, scope: !5072)
!5966 = !DILocation(line: 1233, column: 27, scope: !5072)
!5967 = !DILocation(line: 1233, column: 30, scope: !5072)
!5968 = !DILocation(line: 1234, column: 17, scope: !5072)
!5969 = !DILocation(line: 1232, column: 53, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !5073, file: !910, discriminator: 2)
!5971 = !DILocation(line: 1232, column: 17, scope: !5970)
!5972 = distinct !{!5972, !5973}
!5973 = !DILocation(line: 1232, column: 17, scope: !5075)
!5974 = !DILocation(line: 1236, column: 21, scope: !5082)
!5975 = !DILocation(line: 1236, column: 21, scope: !5075)
!5976 = !DILocation(line: 1237, column: 48, scope: !5082)
!5977 = !DILocation(line: 90, column: 102, scope: !5069, inlinedAt: !5081)
!5978 = !DILocation(line: 90, column: 105, scope: !5069, inlinedAt: !5081)
!5979 = !DILocation(line: 90, column: 151, scope: !5069, inlinedAt: !5081)
!5980 = !DILocation(line: 90, column: 150, scope: !5069, inlinedAt: !5081)
!5981 = !DILocation(line: 90, column: 153, scope: !5069, inlinedAt: !5081)
!5982 = !DILocation(line: 90, column: 160, scope: !5069, inlinedAt: !5081)
!5983 = !DILocation(line: 90, column: 118, scope: !5069, inlinedAt: !5081)
!5984 = !DILocation(line: 1237, column: 32, scope: !5985)
!5985 = !DILexicalBlockFile(scope: !5082, file: !910, discriminator: 1)
!5986 = !DILocation(line: 1237, column: 27, scope: !5082)
!5987 = !DILocation(line: 1237, column: 30, scope: !5082)
!5988 = !DILocation(line: 1237, column: 21, scope: !5082)
!5989 = !DILocation(line: 1238, column: 13, scope: !5075)
!5990 = !DILocation(line: 1230, column: 41, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !5076, file: !910, discriminator: 2)
!5992 = !DILocation(line: 1230, column: 13, scope: !5991)
!5993 = distinct !{!5993, !5994}
!5994 = !DILocation(line: 1230, column: 13, scope: !5078)
!5995 = !DILocation(line: 1239, column: 9, scope: !5078)
!5996 = !DILocation(line: 1239, column: 20, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !5099, file: !910, discriminator: 1)
!5998 = !DILocation(line: 1239, column: 23, scope: !5997)
!5999 = !DILocation(line: 1239, column: 34, scope: !5997)
!6000 = !DILocation(line: 1240, column: 20, scope: !5097)
!6001 = !DILocation(line: 1240, column: 18, scope: !5097)
!6002 = !DILocation(line: 1240, column: 25, scope: !6003)
!6003 = !DILexicalBlockFile(scope: !5096, file: !910, discriminator: 1)
!6004 = !DILocation(line: 1240, column: 29, scope: !6003)
!6005 = !DILocation(line: 1240, column: 33, scope: !6003)
!6006 = !DILocation(line: 1240, column: 27, scope: !6003)
!6007 = !DILocation(line: 1240, column: 13, scope: !6003)
!6008 = !DILocation(line: 1241, column: 24, scope: !5094)
!6009 = !DILocation(line: 1241, column: 22, scope: !5094)
!6010 = !DILocation(line: 1241, column: 29, scope: !6011)
!6011 = !DILexicalBlockFile(scope: !5093, file: !910, discriminator: 1)
!6012 = !DILocation(line: 1241, column: 33, scope: !6011)
!6013 = !DILocation(line: 1241, column: 31, scope: !6011)
!6014 = !DILocation(line: 1241, column: 17, scope: !6011)
!6015 = !DILocation(line: 1242, column: 57, scope: !5092)
!6016 = !DILocation(line: 1242, column: 53, scope: !5092)
!6017 = !DILocation(line: 1242, column: 32, scope: !5092)
!6018 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !5091)
!6019 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !5091)
!6020 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !5091)
!6021 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !5091)
!6022 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !5091)
!6023 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !5091)
!6024 = !DILocation(line: 1242, column: 61, scope: !5092)
!6025 = !DILocation(line: 1242, column: 27, scope: !5092)
!6026 = !DILocation(line: 1242, column: 30, scope: !5092)
!6027 = !DILocation(line: 1243, column: 17, scope: !5092)
!6028 = !DILocation(line: 1241, column: 53, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !5093, file: !910, discriminator: 2)
!6030 = !DILocation(line: 1241, column: 17, scope: !6029)
!6031 = distinct !{!6031, !6032}
!6032 = !DILocation(line: 1241, column: 17, scope: !5095)
!6033 = !DILocation(line: 1245, column: 21, scope: !5102)
!6034 = !DILocation(line: 1245, column: 21, scope: !5095)
!6035 = !DILocation(line: 1246, column: 32, scope: !5102)
!6036 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !5101)
!6037 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !5101)
!6038 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !5101)
!6039 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !5101)
!6040 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !5101)
!6041 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !5101)
!6042 = !DILocation(line: 1246, column: 56, scope: !5102)
!6043 = !DILocation(line: 1246, column: 27, scope: !5102)
!6044 = !DILocation(line: 1246, column: 30, scope: !5102)
!6045 = !DILocation(line: 1246, column: 21, scope: !5102)
!6046 = !DILocation(line: 1247, column: 13, scope: !5095)
!6047 = !DILocation(line: 1240, column: 41, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !5096, file: !910, discriminator: 2)
!6049 = !DILocation(line: 1240, column: 13, scope: !6048)
!6050 = distinct !{!6050, !6051}
!6051 = !DILocation(line: 1240, column: 13, scope: !5098)
!6052 = !DILocation(line: 1248, column: 9, scope: !5098)
!6053 = !DILocation(line: 1251, column: 16, scope: !5060)
!6054 = !DILocation(line: 1251, column: 9, scope: !5060)
!6055 = !DILocation(line: 1251, column: 26, scope: !5060)
!6056 = !DILocation(line: 1253, column: 30, scope: !5060)
!6057 = !DILocation(line: 1253, column: 34, scope: !5060)
!6058 = !DILocation(line: 1253, column: 9, scope: !5060)
!6059 = !DILocation(line: 1253, column: 27, scope: !5060)
!6060 = !DILocation(line: 1254, column: 30, scope: !5060)
!6061 = !DILocation(line: 1254, column: 34, scope: !5060)
!6062 = !DILocation(line: 1254, column: 9, scope: !5060)
!6063 = !DILocation(line: 1254, column: 27, scope: !5060)
!6064 = !DILocation(line: 1255, column: 30, scope: !5060)
!6065 = !DILocation(line: 1255, column: 34, scope: !5060)
!6066 = !DILocation(line: 1255, column: 9, scope: !5060)
!6067 = !DILocation(line: 1255, column: 27, scope: !5060)
!6068 = !DILocation(line: 1256, column: 13, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !5060, file: !910, line: 1256, column: 13)
!6070 = !DILocation(line: 1256, column: 13, scope: !5060)
!6071 = !DILocation(line: 1257, column: 34, scope: !6069)
!6072 = !DILocation(line: 1257, column: 38, scope: !6069)
!6073 = !DILocation(line: 1257, column: 13, scope: !6069)
!6074 = !DILocation(line: 1257, column: 31, scope: !6069)
!6075 = !DILocation(line: 1258, column: 5, scope: !5060)
!6076 = !DILocation(line: 1180, column: 26, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !5061, file: !910, discriminator: 1)
!6078 = !DILocation(line: 1180, column: 37, scope: !6077)
!6079 = !DILocation(line: 1180, column: 40, scope: !6077)
!6080 = !DILocation(line: 1180, column: 34, scope: !6077)
!6081 = !DILocation(line: 1179, column: 5, scope: !6082)
!6082 = !DILexicalBlockFile(scope: !5061, file: !910, discriminator: 2)
!6083 = distinct !{!6083, !6084}
!6084 = !DILocation(line: 1179, column: 5, scope: !5047)
!6085 = !DILocation(line: 1260, column: 5, scope: !5047)
!6086 = !DILocation(line: 1261, column: 1, scope: !5047)
!6087 = distinct !DISubprogram(name: "check_header_variable", scope: !910, file: !910, line: 1275, type: !6088, isLocal: true, isDefinition: true, scopeLine: 1279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!941, !1744, !980, !980, !942}
!6090 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !6091)
!6091 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !6092)
!6092 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !6093)
!6093 = distinct !DILocation(line: 1288, column: 24, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !910, line: 1286, column: 48)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !910, line: 1286, column: 13)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !910, line: 1283, column: 44)
!6097 = distinct !DILexicalBlock(scope: !6087, file: !910, line: 1282, column: 9)
!6098 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !6092)
!6099 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !6093)
!6100 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !6101)
!6101 = distinct !DILocation(line: 1290, column: 28, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6094, file: !910, line: 1290, column: 17)
!6103 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !6104)
!6104 = distinct !DILocation(line: 1282, column: 9, scope: !6097)
!6105 = !DILocalVariable(name: "s", arg: 1, scope: !6087, file: !910, line: 1275, type: !1744)
!6106 = !DILocation(line: 1275, column: 46, scope: !6087)
!6107 = !DILocalVariable(name: "value_name", arg: 2, scope: !6087, file: !910, line: 1276, type: !980)
!6108 = !DILocation(line: 1276, column: 46, scope: !6087)
!6109 = !DILocalVariable(name: "value_type", arg: 3, scope: !6087, file: !910, line: 1277, type: !980)
!6110 = !DILocation(line: 1277, column: 46, scope: !6087)
!6111 = !DILocalVariable(name: "minimum_length", arg: 4, scope: !6087, file: !910, line: 1278, type: !942)
!6112 = !DILocation(line: 1278, column: 47, scope: !6087)
!6113 = !DILocalVariable(name: "var_size", scope: !6087, file: !910, line: 1280, type: !941)
!6114 = !DILocation(line: 1280, column: 9, scope: !6087)
!6115 = !DILocation(line: 1282, column: 37, scope: !6097)
!6116 = !DILocation(line: 1282, column: 40, scope: !6097)
!6117 = !DILocation(line: 1282, column: 9, scope: !6097)
!6118 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !6104)
!6119 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !6104)
!6120 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !6104)
!6121 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !6104)
!6122 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !6104)
!6123 = !DILocation(line: 1282, column: 47, scope: !6097)
!6124 = !DILocation(line: 1282, column: 44, scope: !6097)
!6125 = !DILocation(line: 1282, column: 62, scope: !6097)
!6126 = !DILocation(line: 1283, column: 17, scope: !6097)
!6127 = !DILocation(line: 1283, column: 20, scope: !6097)
!6128 = !DILocation(line: 1283, column: 23, scope: !6097)
!6129 = !DILocation(line: 1283, column: 31, scope: !6097)
!6130 = !DILocation(line: 1283, column: 10, scope: !6097)
!6131 = !DILocation(line: 1282, column: 9, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !6087, file: !910, discriminator: 1)
!6133 = !DILocation(line: 1285, column: 32, scope: !6096)
!6134 = !DILocation(line: 1285, column: 25, scope: !6096)
!6135 = !DILocation(line: 1285, column: 44, scope: !6096)
!6136 = !DILocation(line: 1285, column: 9, scope: !6096)
!6137 = !DILocation(line: 1285, column: 12, scope: !6096)
!6138 = !DILocation(line: 1285, column: 15, scope: !6096)
!6139 = !DILocation(line: 1285, column: 22, scope: !6096)
!6140 = !DILocation(line: 1286, column: 21, scope: !6095)
!6141 = !DILocation(line: 1286, column: 24, scope: !6095)
!6142 = !DILocation(line: 1286, column: 27, scope: !6095)
!6143 = !DILocation(line: 1286, column: 35, scope: !6095)
!6144 = !DILocation(line: 1286, column: 14, scope: !6095)
!6145 = !DILocation(line: 1286, column: 13, scope: !6096)
!6146 = !DILocation(line: 1287, column: 36, scope: !6094)
!6147 = !DILocation(line: 1287, column: 29, scope: !6094)
!6148 = !DILocation(line: 1287, column: 48, scope: !6094)
!6149 = !DILocation(line: 1287, column: 13, scope: !6094)
!6150 = !DILocation(line: 1287, column: 16, scope: !6094)
!6151 = !DILocation(line: 1287, column: 19, scope: !6094)
!6152 = !DILocation(line: 1287, column: 26, scope: !6094)
!6153 = !DILocation(line: 1288, column: 46, scope: !6094)
!6154 = !DILocation(line: 1288, column: 49, scope: !6094)
!6155 = !DILocation(line: 1288, column: 24, scope: !6094)
!6156 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !6093)
!6157 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !6093)
!6158 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !6093)
!6159 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !6093)
!6160 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !6093)
!6161 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !6093)
!6162 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !6093)
!6163 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !6093)
!6164 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !6093)
!6165 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !6093)
!6166 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !6093)
!6167 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !6093)
!6168 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !6093)
!6169 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !6093)
!6170 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !6093)
!6171 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !6092)
!6172 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !6092)
!6173 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !6092)
!6174 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !6091)
!6175 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !6091)
!6176 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !6091)
!6177 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !6091)
!6178 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !6091)
!6179 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !6091)
!6180 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !6093)
!6181 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !6093)
!6182 = !DILocation(line: 1288, column: 22, scope: !6094)
!6183 = !DILocation(line: 1290, column: 17, scope: !6102)
!6184 = !DILocation(line: 1290, column: 56, scope: !6102)
!6185 = !DILocation(line: 1290, column: 59, scope: !6102)
!6186 = !DILocation(line: 1290, column: 28, scope: !6102)
!6187 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !6101)
!6188 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !6101)
!6189 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !6101)
!6190 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !6101)
!6191 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !6101)
!6192 = !DILocation(line: 1290, column: 26, scope: !6102)
!6193 = !DILocation(line: 1290, column: 17, scope: !6094)
!6194 = !DILocation(line: 1291, column: 26, scope: !6102)
!6195 = !DILocation(line: 1291, column: 17, scope: !6102)
!6196 = !DILocation(line: 1292, column: 9, scope: !6094)
!6197 = !DILocation(line: 1294, column: 36, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6095, file: !910, line: 1292, column: 16)
!6199 = !DILocation(line: 1294, column: 29, scope: !6198)
!6200 = !DILocation(line: 1294, column: 48, scope: !6198)
!6201 = !DILocation(line: 1294, column: 13, scope: !6198)
!6202 = !DILocation(line: 1294, column: 16, scope: !6198)
!6203 = !DILocation(line: 1294, column: 19, scope: !6198)
!6204 = !DILocation(line: 1294, column: 26, scope: !6198)
!6205 = !DILocation(line: 1295, column: 20, scope: !6198)
!6206 = !DILocation(line: 1295, column: 23, scope: !6198)
!6207 = !DILocation(line: 1297, column: 20, scope: !6198)
!6208 = !DILocation(line: 1297, column: 32, scope: !6198)
!6209 = !DILocation(line: 1295, column: 13, scope: !6198)
!6210 = !DILocation(line: 1299, column: 5, scope: !6096)
!6211 = !DILocation(line: 1301, column: 12, scope: !6087)
!6212 = !DILocation(line: 1301, column: 5, scope: !6087)
!6213 = distinct !DISubprogram(name: "zip_uncompress", scope: !910, file: !910, line: 268, type: !6214, isLocal: true, isDefinition: true, scopeLine: 270, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!941, !1744, !944, !941, !941, !1836}
!6216 = !DILocalVariable(name: "s", arg: 1, scope: !6213, file: !910, line: 268, type: !1744)
!6217 = !DILocation(line: 268, column: 39, scope: !6213)
!6218 = !DILocalVariable(name: "src", arg: 2, scope: !6213, file: !910, line: 268, type: !944)
!6219 = !DILocation(line: 268, column: 57, scope: !6213)
!6220 = !DILocalVariable(name: "compressed_size", arg: 3, scope: !6213, file: !910, line: 268, type: !941)
!6221 = !DILocation(line: 268, column: 66, scope: !6213)
!6222 = !DILocalVariable(name: "uncompressed_size", arg: 4, scope: !6213, file: !910, line: 269, type: !941)
!6223 = !DILocation(line: 269, column: 31, scope: !6213)
!6224 = !DILocalVariable(name: "td", arg: 5, scope: !6213, file: !910, line: 269, type: !1836)
!6225 = !DILocation(line: 269, column: 65, scope: !6213)
!6226 = !DILocalVariable(name: "dest_len", scope: !6213, file: !910, line: 271, type: !956)
!6227 = !DILocation(line: 271, column: 19, scope: !6213)
!6228 = !DILocation(line: 271, column: 30, scope: !6213)
!6229 = !DILocation(line: 273, column: 20, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6213, file: !910, line: 273, column: 9)
!6231 = !DILocation(line: 273, column: 24, scope: !6230)
!6232 = !DILocation(line: 273, column: 40, scope: !6230)
!6233 = !DILocation(line: 273, column: 45, scope: !6230)
!6234 = !DILocation(line: 273, column: 9, scope: !6230)
!6235 = !DILocation(line: 273, column: 62, scope: !6230)
!6236 = !DILocation(line: 273, column: 69, scope: !6230)
!6237 = !DILocation(line: 274, column: 9, scope: !6230)
!6238 = !DILocation(line: 274, column: 21, scope: !6230)
!6239 = !DILocation(line: 274, column: 18, scope: !6230)
!6240 = !DILocation(line: 273, column: 9, scope: !6241)
!6241 = !DILexicalBlockFile(scope: !6213, file: !910, discriminator: 1)
!6242 = !DILocation(line: 275, column: 9, scope: !6230)
!6243 = !DILocation(line: 279, column: 5, scope: !6213)
!6244 = !DILocation(line: 279, column: 8, scope: !6213)
!6245 = !DILocation(line: 279, column: 12, scope: !6213)
!6246 = !DILocation(line: 279, column: 22, scope: !6213)
!6247 = !DILocation(line: 279, column: 26, scope: !6213)
!6248 = !DILocation(line: 279, column: 31, scope: !6213)
!6249 = !DILocation(line: 280, column: 5, scope: !6213)
!6250 = !DILocation(line: 280, column: 8, scope: !6213)
!6251 = !DILocation(line: 280, column: 12, scope: !6213)
!6252 = !DILocation(line: 280, column: 27, scope: !6213)
!6253 = !DILocation(line: 280, column: 31, scope: !6213)
!6254 = !DILocation(line: 280, column: 50, scope: !6213)
!6255 = !DILocation(line: 280, column: 54, scope: !6213)
!6256 = !DILocation(line: 280, column: 59, scope: !6213)
!6257 = !DILocation(line: 282, column: 5, scope: !6213)
!6258 = !DILocation(line: 283, column: 1, scope: !6213)
!6259 = distinct !DISubprogram(name: "piz_uncompress", scope: !910, file: !910, line: 731, type: !6214, isLocal: true, isDefinition: true, scopeLine: 733, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6260 = !DILocation(line: 263, column: 98, scope: !3306, inlinedAt: !6261)
!6261 = distinct !DILocation(line: 764, column: 9, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 763, column: 9)
!6263 = !DILocation(line: 264, column: 70, scope: !3306, inlinedAt: !6261)
!6264 = !DILocation(line: 265, column: 74, scope: !3306, inlinedAt: !6261)
!6265 = !DILocation(line: 267, column: 9, scope: !3306, inlinedAt: !6261)
!6266 = !DILocation(line: 90, column: 95, scope: !5069, inlinedAt: !6267)
!6267 = distinct !DILocation(line: 90, column: 868, scope: !6268, inlinedAt: !6269)
!6268 = distinct !DISubprogram(name: "bytestream2_get_le16u", scope: !1817, file: !1817, line: 90, type: !2110, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6269 = distinct !DILocation(line: 90, column: 1086, scope: !6270, inlinedAt: !6272)
!6270 = !DILexicalBlockFile(scope: !6271, file: !1817, discriminator: 2)
!6271 = distinct !DISubprogram(name: "bytestream2_get_le16", scope: !1817, file: !1817, line: 90, type: !2110, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6272 = distinct !DILocation(line: 757, column: 20, scope: !6259)
!6273 = !DILocalVariable(name: "g", arg: 1, scope: !6268, file: !1817, line: 90, type: !2076)
!6274 = !DILocation(line: 90, column: 856, scope: !6268, inlinedAt: !6269)
!6275 = !DILocalVariable(name: "g", arg: 1, scope: !6271, file: !1817, line: 90, type: !2076)
!6276 = !DILocation(line: 90, column: 998, scope: !6271, inlinedAt: !6272)
!6277 = !DILocation(line: 90, column: 95, scope: !5069, inlinedAt: !6278)
!6278 = distinct !DILocation(line: 90, column: 868, scope: !6268, inlinedAt: !6279)
!6279 = distinct !DILocation(line: 90, column: 1086, scope: !6270, inlinedAt: !6280)
!6280 = distinct !DILocation(line: 756, column: 20, scope: !6259)
!6281 = !DILocation(line: 90, column: 856, scope: !6268, inlinedAt: !6279)
!6282 = !DILocation(line: 90, column: 998, scope: !6271, inlinedAt: !6280)
!6283 = !DILocation(line: 133, column: 84, scope: !2153, inlinedAt: !6284)
!6284 = distinct !DILocation(line: 755, column: 5, scope: !6259)
!6285 = !DILocation(line: 134, column: 62, scope: !2153, inlinedAt: !6284)
!6286 = !DILocation(line: 135, column: 51, scope: !2153, inlinedAt: !6284)
!6287 = !DILocalVariable(name: "s", arg: 1, scope: !6259, file: !910, line: 731, type: !1744)
!6288 = !DILocation(line: 731, column: 39, scope: !6259)
!6289 = !DILocalVariable(name: "src", arg: 2, scope: !6259, file: !910, line: 731, type: !944)
!6290 = !DILocation(line: 731, column: 57, scope: !6259)
!6291 = !DILocalVariable(name: "ssize", arg: 3, scope: !6259, file: !910, line: 731, type: !941)
!6292 = !DILocation(line: 731, column: 66, scope: !6259)
!6293 = !DILocalVariable(name: "dsize", arg: 4, scope: !6259, file: !910, line: 732, type: !941)
!6294 = !DILocation(line: 732, column: 31, scope: !6259)
!6295 = !DILocalVariable(name: "td", arg: 5, scope: !6259, file: !910, line: 732, type: !1836)
!6296 = !DILocation(line: 732, column: 53, scope: !6259)
!6297 = !DILocalVariable(name: "gb", scope: !6259, file: !910, line: 734, type: !1816)
!6298 = !DILocation(line: 734, column: 20, scope: !6259)
!6299 = !DILocalVariable(name: "maxval", scope: !6259, file: !910, line: 735, type: !965)
!6300 = !DILocation(line: 735, column: 14, scope: !6259)
!6301 = !DILocalVariable(name: "min_non_zero", scope: !6259, file: !910, line: 735, type: !965)
!6302 = !DILocation(line: 735, column: 22, scope: !6259)
!6303 = !DILocalVariable(name: "max_non_zero", scope: !6259, file: !910, line: 735, type: !965)
!6304 = !DILocation(line: 735, column: 36, scope: !6259)
!6305 = !DILocalVariable(name: "ptr", scope: !6259, file: !910, line: 736, type: !964)
!6306 = !DILocation(line: 736, column: 15, scope: !6259)
!6307 = !DILocalVariable(name: "tmp", scope: !6259, file: !910, line: 737, type: !964)
!6308 = !DILocation(line: 737, column: 15, scope: !6259)
!6309 = !DILocation(line: 737, column: 33, scope: !6259)
!6310 = !DILocation(line: 737, column: 37, scope: !6259)
!6311 = !DILocation(line: 737, column: 21, scope: !6259)
!6312 = !DILocalVariable(name: "out", scope: !6259, file: !910, line: 738, type: !964)
!6313 = !DILocation(line: 738, column: 15, scope: !6259)
!6314 = !DILocalVariable(name: "in", scope: !6259, file: !910, line: 739, type: !964)
!6315 = !DILocation(line: 739, column: 15, scope: !6259)
!6316 = !DILocalVariable(name: "ret", scope: !6259, file: !910, line: 740, type: !941)
!6317 = !DILocation(line: 740, column: 9, scope: !6259)
!6318 = !DILocalVariable(name: "i", scope: !6259, file: !910, line: 740, type: !941)
!6319 = !DILocation(line: 740, column: 14, scope: !6259)
!6320 = !DILocalVariable(name: "j", scope: !6259, file: !910, line: 740, type: !941)
!6321 = !DILocation(line: 740, column: 17, scope: !6259)
!6322 = !DILocalVariable(name: "pixel_half_size", scope: !6259, file: !910, line: 741, type: !941)
!6323 = !DILocation(line: 741, column: 9, scope: !6259)
!6324 = !DILocalVariable(name: "channel", scope: !6259, file: !910, line: 742, type: !1826)
!6325 = !DILocation(line: 742, column: 17, scope: !6259)
!6326 = !DILocalVariable(name: "tmp_offset", scope: !6259, file: !910, line: 743, type: !941)
!6327 = !DILocation(line: 743, column: 9, scope: !6259)
!6328 = !DILocation(line: 745, column: 10, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 745, column: 9)
!6330 = !DILocation(line: 745, column: 14, scope: !6329)
!6331 = !DILocation(line: 745, column: 9, scope: !6259)
!6332 = !DILocation(line: 746, column: 22, scope: !6329)
!6333 = !DILocation(line: 746, column: 9, scope: !6329)
!6334 = !DILocation(line: 746, column: 13, scope: !6329)
!6335 = !DILocation(line: 746, column: 20, scope: !6329)
!6336 = !DILocation(line: 747, column: 10, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 747, column: 9)
!6338 = !DILocation(line: 747, column: 14, scope: !6337)
!6339 = !DILocation(line: 747, column: 9, scope: !6259)
!6340 = !DILocation(line: 748, column: 19, scope: !6337)
!6341 = !DILocation(line: 748, column: 9, scope: !6337)
!6342 = !DILocation(line: 748, column: 13, scope: !6337)
!6343 = !DILocation(line: 748, column: 17, scope: !6337)
!6344 = !DILocation(line: 749, column: 10, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 749, column: 9)
!6346 = !DILocation(line: 749, column: 14, scope: !6345)
!6347 = !DILocation(line: 749, column: 21, scope: !6345)
!6348 = !DILocation(line: 749, column: 25, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !6345, file: !910, discriminator: 1)
!6350 = !DILocation(line: 749, column: 29, scope: !6349)
!6351 = !DILocation(line: 749, column: 9, scope: !6349)
!6352 = !DILocation(line: 750, column: 19, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6345, file: !910, line: 749, column: 34)
!6354 = !DILocation(line: 750, column: 23, scope: !6353)
!6355 = !DILocation(line: 750, column: 18, scope: !6353)
!6356 = !DILocation(line: 750, column: 9, scope: !6353)
!6357 = !DILocation(line: 751, column: 19, scope: !6353)
!6358 = !DILocation(line: 751, column: 23, scope: !6353)
!6359 = !DILocation(line: 751, column: 18, scope: !6353)
!6360 = !DILocation(line: 751, column: 9, scope: !6353)
!6361 = !DILocation(line: 752, column: 9, scope: !6353)
!6362 = !DILocation(line: 755, column: 27, scope: !6259)
!6363 = !DILocation(line: 755, column: 32, scope: !6259)
!6364 = !DILocation(line: 755, column: 5, scope: !6259)
!6365 = !DILocation(line: 137, column: 16, scope: !2215, inlinedAt: !6284)
!6366 = !DILocation(line: 137, column: 25, scope: !2215, inlinedAt: !6284)
!6367 = !DILocation(line: 137, column: 14, scope: !2215, inlinedAt: !6284)
!6368 = !DILocation(line: 137, column: 34, scope: !2221, inlinedAt: !6284)
!6369 = !DILocation(line: 137, column: 93, scope: !2224, inlinedAt: !6284)
!6370 = !DILocation(line: 137, column: 93, scope: !2221, inlinedAt: !6284)
!6371 = !DILocation(line: 138, column: 17, scope: !2153, inlinedAt: !6284)
!6372 = !DILocation(line: 138, column: 5, scope: !2153, inlinedAt: !6284)
!6373 = !DILocation(line: 138, column: 8, scope: !2153, inlinedAt: !6284)
!6374 = !DILocation(line: 138, column: 15, scope: !2153, inlinedAt: !6284)
!6375 = !DILocation(line: 139, column: 23, scope: !2153, inlinedAt: !6284)
!6376 = !DILocation(line: 139, column: 5, scope: !2153, inlinedAt: !6284)
!6377 = !DILocation(line: 139, column: 8, scope: !2153, inlinedAt: !6284)
!6378 = !DILocation(line: 139, column: 21, scope: !2153, inlinedAt: !6284)
!6379 = !DILocation(line: 140, column: 21, scope: !2153, inlinedAt: !6284)
!6380 = !DILocation(line: 140, column: 27, scope: !2153, inlinedAt: !6284)
!6381 = !DILocation(line: 140, column: 25, scope: !2153, inlinedAt: !6284)
!6382 = !DILocation(line: 140, column: 5, scope: !2153, inlinedAt: !6284)
!6383 = !DILocation(line: 140, column: 8, scope: !2153, inlinedAt: !6284)
!6384 = !DILocation(line: 140, column: 19, scope: !2153, inlinedAt: !6284)
!6385 = !DILocation(line: 756, column: 20, scope: !6259)
!6386 = !DILocation(line: 90, column: 1007, scope: !6387, inlinedAt: !6280)
!6387 = distinct !DILexicalBlock(scope: !6271, file: !1817, line: 90, column: 1007)
!6388 = !DILocation(line: 90, column: 1010, scope: !6387, inlinedAt: !6280)
!6389 = !DILocation(line: 90, column: 1023, scope: !6387, inlinedAt: !6280)
!6390 = !DILocation(line: 90, column: 1026, scope: !6387, inlinedAt: !6280)
!6391 = !DILocation(line: 90, column: 1021, scope: !6387, inlinedAt: !6280)
!6392 = !DILocation(line: 90, column: 1033, scope: !6387, inlinedAt: !6280)
!6393 = !DILocation(line: 90, column: 1007, scope: !6271, inlinedAt: !6280)
!6394 = !DILocation(line: 90, column: 1052, scope: !6395, inlinedAt: !6280)
!6395 = !DILexicalBlockFile(scope: !6396, file: !1817, discriminator: 1)
!6396 = distinct !DILexicalBlock(scope: !6387, file: !1817, line: 90, column: 1038)
!6397 = !DILocation(line: 90, column: 1055, scope: !6395, inlinedAt: !6280)
!6398 = !DILocation(line: 90, column: 1040, scope: !6395, inlinedAt: !6280)
!6399 = !DILocation(line: 90, column: 1043, scope: !6395, inlinedAt: !6280)
!6400 = !DILocation(line: 90, column: 1050, scope: !6395, inlinedAt: !6280)
!6401 = !DILocation(line: 90, column: 1067, scope: !6395, inlinedAt: !6280)
!6402 = !DILocation(line: 90, column: 1108, scope: !6270, inlinedAt: !6280)
!6403 = !DILocation(line: 90, column: 1086, scope: !6270, inlinedAt: !6280)
!6404 = !DILocation(line: 90, column: 889, scope: !6268, inlinedAt: !6279)
!6405 = !DILocation(line: 90, column: 892, scope: !6268, inlinedAt: !6279)
!6406 = !DILocation(line: 90, column: 868, scope: !6268, inlinedAt: !6279)
!6407 = !DILocation(line: 90, column: 102, scope: !5069, inlinedAt: !6278)
!6408 = !DILocation(line: 90, column: 105, scope: !5069, inlinedAt: !6278)
!6409 = !DILocation(line: 90, column: 151, scope: !5069, inlinedAt: !6278)
!6410 = !DILocation(line: 90, column: 150, scope: !5069, inlinedAt: !6278)
!6411 = !DILocation(line: 90, column: 153, scope: !5069, inlinedAt: !6278)
!6412 = !DILocation(line: 90, column: 160, scope: !5069, inlinedAt: !6278)
!6413 = !DILocation(line: 90, column: 118, scope: !5069, inlinedAt: !6278)
!6414 = !DILocation(line: 90, column: 1079, scope: !6270, inlinedAt: !6280)
!6415 = !DILocation(line: 90, column: 1112, scope: !6416, inlinedAt: !6280)
!6416 = !DILexicalBlockFile(scope: !6271, file: !1817, discriminator: 3)
!6417 = !DILocation(line: 756, column: 18, scope: !6259)
!6418 = !DILocation(line: 757, column: 20, scope: !6259)
!6419 = !DILocation(line: 90, column: 1007, scope: !6387, inlinedAt: !6272)
!6420 = !DILocation(line: 90, column: 1010, scope: !6387, inlinedAt: !6272)
!6421 = !DILocation(line: 90, column: 1023, scope: !6387, inlinedAt: !6272)
!6422 = !DILocation(line: 90, column: 1026, scope: !6387, inlinedAt: !6272)
!6423 = !DILocation(line: 90, column: 1021, scope: !6387, inlinedAt: !6272)
!6424 = !DILocation(line: 90, column: 1033, scope: !6387, inlinedAt: !6272)
!6425 = !DILocation(line: 90, column: 1007, scope: !6271, inlinedAt: !6272)
!6426 = !DILocation(line: 90, column: 1052, scope: !6395, inlinedAt: !6272)
!6427 = !DILocation(line: 90, column: 1055, scope: !6395, inlinedAt: !6272)
!6428 = !DILocation(line: 90, column: 1040, scope: !6395, inlinedAt: !6272)
!6429 = !DILocation(line: 90, column: 1043, scope: !6395, inlinedAt: !6272)
!6430 = !DILocation(line: 90, column: 1050, scope: !6395, inlinedAt: !6272)
!6431 = !DILocation(line: 90, column: 1067, scope: !6395, inlinedAt: !6272)
!6432 = !DILocation(line: 90, column: 1108, scope: !6270, inlinedAt: !6272)
!6433 = !DILocation(line: 90, column: 1086, scope: !6270, inlinedAt: !6272)
!6434 = !DILocation(line: 90, column: 889, scope: !6268, inlinedAt: !6269)
!6435 = !DILocation(line: 90, column: 892, scope: !6268, inlinedAt: !6269)
!6436 = !DILocation(line: 90, column: 868, scope: !6268, inlinedAt: !6269)
!6437 = !DILocation(line: 90, column: 102, scope: !5069, inlinedAt: !6267)
!6438 = !DILocation(line: 90, column: 105, scope: !5069, inlinedAt: !6267)
!6439 = !DILocation(line: 90, column: 151, scope: !5069, inlinedAt: !6267)
!6440 = !DILocation(line: 90, column: 150, scope: !5069, inlinedAt: !6267)
!6441 = !DILocation(line: 90, column: 153, scope: !5069, inlinedAt: !6267)
!6442 = !DILocation(line: 90, column: 160, scope: !5069, inlinedAt: !6267)
!6443 = !DILocation(line: 90, column: 118, scope: !5069, inlinedAt: !6267)
!6444 = !DILocation(line: 90, column: 1079, scope: !6270, inlinedAt: !6272)
!6445 = !DILocation(line: 90, column: 1112, scope: !6416, inlinedAt: !6272)
!6446 = !DILocation(line: 757, column: 18, scope: !6259)
!6447 = !DILocation(line: 759, column: 9, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 759, column: 9)
!6449 = !DILocation(line: 759, column: 22, scope: !6448)
!6450 = !DILocation(line: 759, column: 9, scope: !6259)
!6451 = !DILocation(line: 760, column: 9, scope: !6448)
!6452 = !DILocation(line: 762, column: 12, scope: !6259)
!6453 = !DILocation(line: 762, column: 16, scope: !6259)
!6454 = !DILocation(line: 762, column: 29, scope: !6259)
!6455 = !DILocation(line: 762, column: 28, scope: !6259)
!6456 = !DILocation(line: 762, column: 43, scope: !6259)
!6457 = !DILocation(line: 762, column: 28, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !6259, file: !910, discriminator: 1)
!6459 = !DILocation(line: 762, column: 74, scope: !6460)
!6460 = !DILexicalBlockFile(scope: !6259, file: !910, discriminator: 2)
!6461 = !DILocation(line: 762, column: 73, scope: !6460)
!6462 = !DILocation(line: 762, column: 28, scope: !6460)
!6463 = !DILocation(line: 762, column: 28, scope: !6464)
!6464 = !DILexicalBlockFile(scope: !6259, file: !910, discriminator: 3)
!6465 = !DILocation(line: 762, column: 27, scope: !6464)
!6466 = !DILocation(line: 762, column: 5, scope: !6464)
!6467 = !DILocation(line: 763, column: 9, scope: !6262)
!6468 = !DILocation(line: 763, column: 25, scope: !6262)
!6469 = !DILocation(line: 763, column: 22, scope: !6262)
!6470 = !DILocation(line: 763, column: 9, scope: !6259)
!6471 = !DILocation(line: 764, column: 37, scope: !6262)
!6472 = !DILocation(line: 764, column: 41, scope: !6262)
!6473 = !DILocation(line: 764, column: 50, scope: !6262)
!6474 = !DILocation(line: 764, column: 48, scope: !6262)
!6475 = !DILocation(line: 765, column: 32, scope: !6262)
!6476 = !DILocation(line: 765, column: 47, scope: !6262)
!6477 = !DILocation(line: 765, column: 45, scope: !6262)
!6478 = !DILocation(line: 765, column: 60, scope: !6262)
!6479 = !DILocation(line: 764, column: 9, scope: !6262)
!6480 = !DILocation(line: 267, column: 19, scope: !3306, inlinedAt: !6261)
!6481 = !DILocation(line: 267, column: 22, scope: !3306, inlinedAt: !6261)
!6482 = !DILocation(line: 267, column: 35, scope: !3306, inlinedAt: !6261)
!6483 = !DILocation(line: 267, column: 38, scope: !3306, inlinedAt: !6261)
!6484 = !DILocation(line: 267, column: 33, scope: !3306, inlinedAt: !6261)
!6485 = !DILocation(line: 267, column: 49, scope: !3306, inlinedAt: !6261)
!6486 = !DILocation(line: 267, column: 48, scope: !3306, inlinedAt: !6261)
!6487 = !DILocation(line: 267, column: 46, scope: !3306, inlinedAt: !6261)
!6488 = !DILocation(line: 267, column: 18, scope: !3306, inlinedAt: !6261)
!6489 = !DILocation(line: 267, column: 58, scope: !4804, inlinedAt: !6261)
!6490 = !DILocation(line: 267, column: 57, scope: !4804, inlinedAt: !6261)
!6491 = !DILocation(line: 267, column: 18, scope: !4804, inlinedAt: !6261)
!6492 = !DILocation(line: 267, column: 67, scope: !4808, inlinedAt: !6261)
!6493 = !DILocation(line: 267, column: 70, scope: !4808, inlinedAt: !6261)
!6494 = !DILocation(line: 267, column: 83, scope: !4808, inlinedAt: !6261)
!6495 = !DILocation(line: 267, column: 86, scope: !4808, inlinedAt: !6261)
!6496 = !DILocation(line: 267, column: 81, scope: !4808, inlinedAt: !6261)
!6497 = !DILocation(line: 267, column: 18, scope: !4808, inlinedAt: !6261)
!6498 = !DILocation(line: 267, column: 18, scope: !4815, inlinedAt: !6261)
!6499 = !DILocation(line: 267, column: 17, scope: !4815, inlinedAt: !6261)
!6500 = !DILocation(line: 267, column: 9, scope: !4815, inlinedAt: !6261)
!6501 = !DILocation(line: 268, column: 12, scope: !3306, inlinedAt: !6261)
!6502 = !DILocation(line: 268, column: 17, scope: !3306, inlinedAt: !6261)
!6503 = !DILocation(line: 268, column: 20, scope: !3306, inlinedAt: !6261)
!6504 = !DILocation(line: 268, column: 28, scope: !3306, inlinedAt: !6261)
!6505 = !DILocation(line: 268, column: 5, scope: !3306, inlinedAt: !6261)
!6506 = !DILocation(line: 269, column: 18, scope: !3306, inlinedAt: !6261)
!6507 = !DILocation(line: 269, column: 5, scope: !3306, inlinedAt: !6261)
!6508 = !DILocation(line: 269, column: 8, scope: !3306, inlinedAt: !6261)
!6509 = !DILocation(line: 269, column: 15, scope: !3306, inlinedAt: !6261)
!6510 = !DILocation(line: 270, column: 12, scope: !3306, inlinedAt: !6261)
!6511 = !DILocation(line: 766, column: 12, scope: !6259)
!6512 = !DILocation(line: 766, column: 16, scope: !6259)
!6513 = !DILocation(line: 766, column: 25, scope: !6259)
!6514 = !DILocation(line: 766, column: 23, scope: !6259)
!6515 = !DILocation(line: 766, column: 38, scope: !6259)
!6516 = !DILocation(line: 766, column: 58, scope: !6259)
!6517 = !DILocation(line: 766, column: 56, scope: !6259)
!6518 = !DILocation(line: 766, column: 71, scope: !6259)
!6519 = !DILocation(line: 766, column: 46, scope: !6259)
!6520 = !DILocation(line: 766, column: 5, scope: !6259)
!6521 = !DILocation(line: 768, column: 26, scope: !6259)
!6522 = !DILocation(line: 768, column: 30, scope: !6259)
!6523 = !DILocation(line: 768, column: 38, scope: !6259)
!6524 = !DILocation(line: 768, column: 42, scope: !6259)
!6525 = !DILocation(line: 768, column: 14, scope: !6259)
!6526 = !DILocation(line: 768, column: 12, scope: !6259)
!6527 = !DILocation(line: 770, column: 31, scope: !6259)
!6528 = !DILocation(line: 770, column: 36, scope: !6259)
!6529 = !DILocation(line: 770, column: 42, scope: !6259)
!6530 = !DILocation(line: 770, column: 11, scope: !6259)
!6531 = !DILocation(line: 770, column: 9, scope: !6259)
!6532 = !DILocation(line: 771, column: 9, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 771, column: 9)
!6534 = !DILocation(line: 771, column: 9, scope: !6259)
!6535 = !DILocation(line: 772, column: 16, scope: !6533)
!6536 = !DILocation(line: 772, column: 9, scope: !6533)
!6537 = !DILocation(line: 774, column: 11, scope: !6259)
!6538 = !DILocation(line: 774, column: 9, scope: !6259)
!6539 = !DILocation(line: 775, column: 12, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 775, column: 5)
!6541 = !DILocation(line: 775, column: 10, scope: !6540)
!6542 = !DILocation(line: 775, column: 17, scope: !6543)
!6543 = !DILexicalBlockFile(scope: !6544, file: !910, discriminator: 1)
!6544 = distinct !DILexicalBlock(scope: !6540, file: !910, line: 775, column: 5)
!6545 = !DILocation(line: 775, column: 21, scope: !6543)
!6546 = !DILocation(line: 775, column: 24, scope: !6543)
!6547 = !DILocation(line: 775, column: 19, scope: !6543)
!6548 = !DILocation(line: 775, column: 5, scope: !6543)
!6549 = !DILocation(line: 776, column: 32, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6544, file: !910, line: 775, column: 42)
!6551 = !DILocation(line: 776, column: 20, scope: !6550)
!6552 = !DILocation(line: 776, column: 23, scope: !6550)
!6553 = !DILocation(line: 776, column: 17, scope: !6550)
!6554 = !DILocation(line: 778, column: 13, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6550, file: !910, line: 778, column: 13)
!6556 = !DILocation(line: 778, column: 22, scope: !6555)
!6557 = !DILocation(line: 778, column: 33, scope: !6555)
!6558 = !DILocation(line: 778, column: 13, scope: !6550)
!6559 = !DILocation(line: 779, column: 29, scope: !6555)
!6560 = !DILocation(line: 779, column: 13, scope: !6555)
!6561 = !DILocation(line: 781, column: 29, scope: !6555)
!6562 = !DILocation(line: 783, column: 16, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6550, file: !910, line: 783, column: 9)
!6564 = !DILocation(line: 783, column: 14, scope: !6563)
!6565 = !DILocation(line: 783, column: 21, scope: !6566)
!6566 = !DILexicalBlockFile(scope: !6567, file: !910, discriminator: 1)
!6567 = distinct !DILexicalBlock(scope: !6563, file: !910, line: 783, column: 9)
!6568 = !DILocation(line: 783, column: 25, scope: !6566)
!6569 = !DILocation(line: 783, column: 23, scope: !6566)
!6570 = !DILocation(line: 783, column: 9, scope: !6566)
!6571 = !DILocation(line: 784, column: 24, scope: !6567)
!6572 = !DILocation(line: 784, column: 30, scope: !6567)
!6573 = !DILocation(line: 784, column: 28, scope: !6567)
!6574 = !DILocation(line: 784, column: 33, scope: !6567)
!6575 = !DILocation(line: 784, column: 37, scope: !6567)
!6576 = !DILocation(line: 784, column: 44, scope: !6567)
!6577 = !DILocation(line: 784, column: 61, scope: !6567)
!6578 = !DILocation(line: 784, column: 65, scope: !6567)
!6579 = !DILocation(line: 785, column: 24, scope: !6567)
!6580 = !DILocation(line: 785, column: 28, scope: !6567)
!6581 = !DILocation(line: 785, column: 36, scope: !6567)
!6582 = !DILocation(line: 785, column: 34, scope: !6567)
!6583 = !DILocation(line: 785, column: 53, scope: !6567)
!6584 = !DILocation(line: 784, column: 13, scope: !6567)
!6585 = !DILocation(line: 783, column: 43, scope: !6586)
!6586 = !DILexicalBlockFile(scope: !6567, file: !910, discriminator: 2)
!6587 = !DILocation(line: 783, column: 9, scope: !6586)
!6588 = distinct !{!6588, !6589}
!6589 = !DILocation(line: 783, column: 9, scope: !6550)
!6590 = !DILocation(line: 786, column: 16, scope: !6550)
!6591 = !DILocation(line: 786, column: 20, scope: !6550)
!6592 = !DILocation(line: 786, column: 28, scope: !6550)
!6593 = !DILocation(line: 786, column: 32, scope: !6550)
!6594 = !DILocation(line: 786, column: 26, scope: !6550)
!6595 = !DILocation(line: 786, column: 40, scope: !6550)
!6596 = !DILocation(line: 786, column: 38, scope: !6550)
!6597 = !DILocation(line: 786, column: 13, scope: !6550)
!6598 = !DILocation(line: 787, column: 5, scope: !6550)
!6599 = !DILocation(line: 775, column: 38, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6544, file: !910, discriminator: 2)
!6601 = !DILocation(line: 775, column: 5, scope: !6600)
!6602 = distinct !{!6602, !6603}
!6603 = !DILocation(line: 775, column: 5, scope: !6259)
!6604 = !DILocation(line: 789, column: 15, scope: !6259)
!6605 = !DILocation(line: 789, column: 19, scope: !6259)
!6606 = !DILocation(line: 789, column: 24, scope: !6259)
!6607 = !DILocation(line: 789, column: 29, scope: !6259)
!6608 = !DILocation(line: 789, column: 35, scope: !6259)
!6609 = !DILocation(line: 789, column: 5, scope: !6259)
!6610 = !DILocation(line: 791, column: 23, scope: !6259)
!6611 = !DILocation(line: 791, column: 27, scope: !6259)
!6612 = !DILocation(line: 791, column: 11, scope: !6259)
!6613 = !DILocation(line: 791, column: 9, scope: !6259)
!6614 = !DILocation(line: 792, column: 12, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6259, file: !910, line: 792, column: 5)
!6616 = !DILocation(line: 792, column: 10, scope: !6615)
!6617 = !DILocation(line: 792, column: 17, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6619, file: !910, discriminator: 1)
!6619 = distinct !DILexicalBlock(scope: !6615, file: !910, line: 792, column: 5)
!6620 = !DILocation(line: 792, column: 21, scope: !6618)
!6621 = !DILocation(line: 792, column: 25, scope: !6618)
!6622 = !DILocation(line: 792, column: 19, scope: !6618)
!6623 = !DILocation(line: 792, column: 5, scope: !6618)
!6624 = !DILocation(line: 793, column: 20, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6619, file: !910, line: 792, column: 37)
!6626 = !DILocation(line: 794, column: 16, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6625, file: !910, line: 794, column: 9)
!6628 = !DILocation(line: 794, column: 14, scope: !6627)
!6629 = !DILocation(line: 794, column: 21, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6631, file: !910, discriminator: 1)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !910, line: 794, column: 9)
!6632 = !DILocation(line: 794, column: 25, scope: !6630)
!6633 = !DILocation(line: 794, column: 28, scope: !6630)
!6634 = !DILocation(line: 794, column: 23, scope: !6630)
!6635 = !DILocation(line: 794, column: 9, scope: !6630)
!6636 = !DILocation(line: 795, column: 36, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6631, file: !910, line: 794, column: 46)
!6638 = !DILocation(line: 795, column: 24, scope: !6637)
!6639 = !DILocation(line: 795, column: 27, scope: !6637)
!6640 = !DILocation(line: 795, column: 21, scope: !6637)
!6641 = !DILocation(line: 796, column: 17, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6637, file: !910, line: 796, column: 17)
!6643 = !DILocation(line: 796, column: 26, scope: !6642)
!6644 = !DILocation(line: 796, column: 37, scope: !6642)
!6645 = !DILocation(line: 796, column: 17, scope: !6637)
!6646 = !DILocation(line: 797, column: 33, scope: !6642)
!6647 = !DILocation(line: 797, column: 17, scope: !6642)
!6648 = !DILocation(line: 799, column: 33, scope: !6642)
!6649 = !DILocation(line: 801, column: 18, scope: !6637)
!6650 = !DILocation(line: 801, column: 24, scope: !6637)
!6651 = !DILocation(line: 801, column: 37, scope: !6637)
!6652 = !DILocation(line: 801, column: 41, scope: !6637)
!6653 = !DILocation(line: 801, column: 35, scope: !6637)
!6654 = !DILocation(line: 801, column: 49, scope: !6637)
!6655 = !DILocation(line: 801, column: 53, scope: !6637)
!6656 = !DILocation(line: 801, column: 47, scope: !6637)
!6657 = !DILocation(line: 801, column: 22, scope: !6637)
!6658 = !DILocation(line: 801, column: 61, scope: !6637)
!6659 = !DILocation(line: 801, column: 65, scope: !6637)
!6660 = !DILocation(line: 801, column: 69, scope: !6637)
!6661 = !DILocation(line: 801, column: 63, scope: !6637)
!6662 = !DILocation(line: 801, column: 77, scope: !6637)
!6663 = !DILocation(line: 801, column: 75, scope: !6637)
!6664 = !DILocation(line: 801, column: 59, scope: !6637)
!6665 = !DILocation(line: 801, column: 16, scope: !6637)
!6666 = !DILocation(line: 802, column: 27, scope: !6637)
!6667 = !DILocation(line: 802, column: 24, scope: !6637)
!6668 = !DILocation(line: 807, column: 20, scope: !6637)
!6669 = !DILocation(line: 807, column: 13, scope: !6637)
!6670 = !DILocation(line: 807, column: 25, scope: !6637)
!6671 = !DILocation(line: 807, column: 29, scope: !6637)
!6672 = !DILocation(line: 807, column: 33, scope: !6637)
!6673 = !DILocation(line: 807, column: 39, scope: !6637)
!6674 = !DILocation(line: 807, column: 45, scope: !6637)
!6675 = !DILocation(line: 807, column: 43, scope: !6637)
!6676 = !DILocation(line: 809, column: 20, scope: !6637)
!6677 = !DILocation(line: 809, column: 24, scope: !6637)
!6678 = !DILocation(line: 809, column: 32, scope: !6637)
!6679 = !DILocation(line: 809, column: 30, scope: !6637)
!6680 = !DILocation(line: 809, column: 17, scope: !6637)
!6681 = !DILocation(line: 810, column: 9, scope: !6637)
!6682 = !DILocation(line: 794, column: 42, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6631, file: !910, discriminator: 2)
!6684 = !DILocation(line: 794, column: 9, scope: !6683)
!6685 = distinct !{!6685, !6686}
!6686 = !DILocation(line: 794, column: 9, scope: !6625)
!6687 = !DILocation(line: 811, column: 5, scope: !6625)
!6688 = !DILocation(line: 792, column: 33, scope: !6689)
!6689 = !DILexicalBlockFile(scope: !6619, file: !910, discriminator: 2)
!6690 = !DILocation(line: 792, column: 5, scope: !6689)
!6691 = distinct !{!6691, !6692}
!6692 = !DILocation(line: 792, column: 5, scope: !6259)
!6693 = !DILocation(line: 813, column: 5, scope: !6259)
!6694 = !DILocation(line: 814, column: 1, scope: !6259)
!6695 = distinct !DISubprogram(name: "pxr24_uncompress", scope: !910, file: !910, line: 816, type: !6214, isLocal: true, isDefinition: true, scopeLine: 819, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6696 = !DILocalVariable(name: "b", arg: 1, scope: !6697, file: !1817, line: 90, type: !1135)
!6697 = distinct !DISubprogram(name: "bytestream_put_le16", scope: !1817, file: !1817, line: 90, type: !6698, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{null, !1135, !6700}
!6700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!6701 = !DILocation(line: 90, column: 246, scope: !6697, inlinedAt: !6702)
!6702 = distinct !DILocation(line: 873, column: 21, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !910, line: 869, column: 49)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !910, line: 869, column: 17)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !910, line: 869, column: 17)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !910, line: 850, column: 42)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !910, line: 845, column: 46)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !910, line: 845, column: 9)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !910, line: 845, column: 9)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !910, line: 844, column: 5)
!6711 = distinct !DILexicalBlock(scope: !6695, file: !910, line: 844, column: 5)
!6712 = !DILocalVariable(name: "value", arg: 2, scope: !6697, file: !1817, line: 90, type: !6700)
!6713 = !DILocation(line: 90, column: 268, scope: !6697, inlinedAt: !6702)
!6714 = !DILocalVariable(name: "b", arg: 1, scope: !6715, file: !1817, line: 88, type: !1135)
!6715 = distinct !DISubprogram(name: "bytestream_put_le32", scope: !1817, file: !1817, line: 88, type: !6698, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!6716 = !DILocation(line: 88, column: 246, scope: !6715, inlinedAt: !6717)
!6717 = distinct !DILocation(line: 889, column: 21, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !910, line: 883, column: 49)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !910, line: 883, column: 17)
!6720 = distinct !DILexicalBlock(scope: !6706, file: !910, line: 883, column: 17)
!6721 = !DILocalVariable(name: "value", arg: 2, scope: !6715, file: !1817, line: 88, type: !6700)
!6722 = !DILocation(line: 88, column: 268, scope: !6715, inlinedAt: !6717)
!6723 = !DILocation(line: 88, column: 246, scope: !6715, inlinedAt: !6724)
!6724 = distinct !DILocation(line: 862, column: 21, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !910, line: 857, column: 49)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !910, line: 857, column: 17)
!6727 = distinct !DILexicalBlock(scope: !6706, file: !910, line: 857, column: 17)
!6728 = !DILocation(line: 88, column: 268, scope: !6715, inlinedAt: !6724)
!6729 = !DILocalVariable(name: "s", arg: 1, scope: !6695, file: !910, line: 816, type: !1744)
!6730 = !DILocation(line: 816, column: 41, scope: !6695)
!6731 = !DILocalVariable(name: "src", arg: 2, scope: !6695, file: !910, line: 816, type: !944)
!6732 = !DILocation(line: 816, column: 59, scope: !6695)
!6733 = !DILocalVariable(name: "compressed_size", arg: 3, scope: !6695, file: !910, line: 817, type: !941)
!6734 = !DILocation(line: 817, column: 33, scope: !6695)
!6735 = !DILocalVariable(name: "uncompressed_size", arg: 4, scope: !6695, file: !910, line: 817, type: !941)
!6736 = !DILocation(line: 817, column: 54, scope: !6695)
!6737 = !DILocalVariable(name: "td", arg: 5, scope: !6695, file: !910, line: 818, type: !1836)
!6738 = !DILocation(line: 818, column: 44, scope: !6695)
!6739 = !DILocalVariable(name: "dest_len", scope: !6695, file: !910, line: 820, type: !956)
!6740 = !DILocation(line: 820, column: 19, scope: !6695)
!6741 = !DILocalVariable(name: "expected_len", scope: !6695, file: !910, line: 820, type: !956)
!6742 = !DILocation(line: 820, column: 29, scope: !6695)
!6743 = !DILocalVariable(name: "in", scope: !6695, file: !910, line: 821, type: !944)
!6744 = !DILocation(line: 821, column: 20, scope: !6695)
!6745 = !DILocation(line: 821, column: 25, scope: !6695)
!6746 = !DILocation(line: 821, column: 29, scope: !6695)
!6747 = !DILocalVariable(name: "out", scope: !6695, file: !910, line: 822, type: !1129)
!6748 = !DILocation(line: 822, column: 14, scope: !6695)
!6749 = !DILocalVariable(name: "c", scope: !6695, file: !910, line: 823, type: !941)
!6750 = !DILocation(line: 823, column: 9, scope: !6695)
!6751 = !DILocalVariable(name: "i", scope: !6695, file: !910, line: 823, type: !941)
!6752 = !DILocation(line: 823, column: 12, scope: !6695)
!6753 = !DILocalVariable(name: "j", scope: !6695, file: !910, line: 823, type: !941)
!6754 = !DILocation(line: 823, column: 15, scope: !6695)
!6755 = !DILocation(line: 825, column: 12, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6695, file: !910, line: 825, column: 5)
!6757 = !DILocation(line: 825, column: 10, scope: !6756)
!6758 = !DILocation(line: 825, column: 17, scope: !6759)
!6759 = !DILexicalBlockFile(scope: !6760, file: !910, discriminator: 1)
!6760 = distinct !DILexicalBlock(scope: !6756, file: !910, line: 825, column: 5)
!6761 = !DILocation(line: 825, column: 21, scope: !6759)
!6762 = !DILocation(line: 825, column: 24, scope: !6759)
!6763 = !DILocation(line: 825, column: 19, scope: !6759)
!6764 = !DILocation(line: 825, column: 5, scope: !6759)
!6765 = !DILocation(line: 826, column: 25, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !910, line: 826, column: 13)
!6767 = distinct !DILexicalBlock(scope: !6760, file: !910, line: 825, column: 42)
!6768 = !DILocation(line: 826, column: 13, scope: !6766)
!6769 = !DILocation(line: 826, column: 16, scope: !6766)
!6770 = !DILocation(line: 826, column: 28, scope: !6766)
!6771 = !DILocation(line: 826, column: 39, scope: !6766)
!6772 = !DILocation(line: 826, column: 13, scope: !6767)
!6773 = !DILocation(line: 827, column: 30, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6766, file: !910, line: 826, column: 53)
!6775 = !DILocation(line: 827, column: 34, scope: !6774)
!6776 = !DILocation(line: 827, column: 42, scope: !6774)
!6777 = !DILocation(line: 827, column: 46, scope: !6774)
!6778 = !DILocation(line: 827, column: 40, scope: !6774)
!6779 = !DILocation(line: 827, column: 52, scope: !6774)
!6780 = !DILocation(line: 827, column: 29, scope: !6774)
!6781 = !DILocation(line: 827, column: 26, scope: !6774)
!6782 = !DILocation(line: 828, column: 9, scope: !6774)
!6783 = !DILocation(line: 828, column: 32, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !6785, file: !910, discriminator: 1)
!6785 = distinct !DILexicalBlock(scope: !6766, file: !910, line: 828, column: 20)
!6786 = !DILocation(line: 828, column: 20, scope: !6784)
!6787 = !DILocation(line: 828, column: 23, scope: !6784)
!6788 = !DILocation(line: 828, column: 35, scope: !6784)
!6789 = !DILocation(line: 828, column: 46, scope: !6784)
!6790 = !DILocation(line: 829, column: 30, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6785, file: !910, line: 828, column: 59)
!6792 = !DILocation(line: 829, column: 34, scope: !6791)
!6793 = !DILocation(line: 829, column: 42, scope: !6791)
!6794 = !DILocation(line: 829, column: 46, scope: !6791)
!6795 = !DILocation(line: 829, column: 40, scope: !6791)
!6796 = !DILocation(line: 829, column: 52, scope: !6791)
!6797 = !DILocation(line: 829, column: 29, scope: !6791)
!6798 = !DILocation(line: 829, column: 26, scope: !6791)
!6799 = !DILocation(line: 830, column: 9, scope: !6791)
!6800 = !DILocation(line: 831, column: 30, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6785, file: !910, line: 830, column: 16)
!6802 = !DILocation(line: 831, column: 34, scope: !6801)
!6803 = !DILocation(line: 831, column: 42, scope: !6801)
!6804 = !DILocation(line: 831, column: 46, scope: !6801)
!6805 = !DILocation(line: 831, column: 40, scope: !6801)
!6806 = !DILocation(line: 831, column: 52, scope: !6801)
!6807 = !DILocation(line: 831, column: 29, scope: !6801)
!6808 = !DILocation(line: 831, column: 26, scope: !6801)
!6809 = !DILocation(line: 833, column: 5, scope: !6767)
!6810 = !DILocation(line: 825, column: 38, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !6760, file: !910, discriminator: 2)
!6812 = !DILocation(line: 825, column: 5, scope: !6811)
!6813 = distinct !{!6813, !6814}
!6814 = !DILocation(line: 825, column: 5, scope: !6695)
!6815 = !DILocation(line: 835, column: 16, scope: !6695)
!6816 = !DILocation(line: 835, column: 14, scope: !6695)
!6817 = !DILocation(line: 837, column: 20, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6695, file: !910, line: 837, column: 9)
!6819 = !DILocation(line: 837, column: 24, scope: !6818)
!6820 = !DILocation(line: 837, column: 40, scope: !6818)
!6821 = !DILocation(line: 837, column: 45, scope: !6818)
!6822 = !DILocation(line: 837, column: 9, scope: !6818)
!6823 = !DILocation(line: 837, column: 62, scope: !6818)
!6824 = !DILocation(line: 837, column: 9, scope: !6695)
!6825 = !DILocation(line: 838, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6818, file: !910, line: 837, column: 70)
!6827 = !DILocation(line: 839, column: 16, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6818, file: !910, line: 839, column: 16)
!6829 = !DILocation(line: 839, column: 28, scope: !6828)
!6830 = !DILocation(line: 839, column: 25, scope: !6828)
!6831 = !DILocation(line: 839, column: 16, scope: !6818)
!6832 = !DILocation(line: 840, column: 9, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6828, file: !910, line: 839, column: 42)
!6834 = !DILocation(line: 843, column: 11, scope: !6695)
!6835 = !DILocation(line: 843, column: 15, scope: !6695)
!6836 = !DILocation(line: 843, column: 9, scope: !6695)
!6837 = !DILocation(line: 844, column: 12, scope: !6711)
!6838 = !DILocation(line: 844, column: 10, scope: !6711)
!6839 = !DILocation(line: 844, column: 17, scope: !6840)
!6840 = !DILexicalBlockFile(scope: !6710, file: !910, discriminator: 1)
!6841 = !DILocation(line: 844, column: 21, scope: !6840)
!6842 = !DILocation(line: 844, column: 25, scope: !6840)
!6843 = !DILocation(line: 844, column: 19, scope: !6840)
!6844 = !DILocation(line: 844, column: 5, scope: !6840)
!6845 = !DILocation(line: 845, column: 16, scope: !6709)
!6846 = !DILocation(line: 845, column: 14, scope: !6709)
!6847 = !DILocation(line: 845, column: 21, scope: !6848)
!6848 = !DILexicalBlockFile(scope: !6708, file: !910, discriminator: 1)
!6849 = !DILocation(line: 845, column: 25, scope: !6848)
!6850 = !DILocation(line: 845, column: 28, scope: !6848)
!6851 = !DILocation(line: 845, column: 23, scope: !6848)
!6852 = !DILocation(line: 845, column: 9, scope: !6848)
!6853 = !DILocalVariable(name: "channel", scope: !6707, file: !910, line: 846, type: !1826)
!6854 = !DILocation(line: 846, column: 25, scope: !6707)
!6855 = !DILocation(line: 846, column: 48, scope: !6707)
!6856 = !DILocation(line: 846, column: 36, scope: !6707)
!6857 = !DILocation(line: 846, column: 39, scope: !6707)
!6858 = !DILocalVariable(name: "ptr", scope: !6707, file: !910, line: 847, type: !5131)
!6859 = !DILocation(line: 847, column: 28, scope: !6707)
!6860 = !DILocalVariable(name: "pixel", scope: !6707, file: !910, line: 848, type: !963)
!6861 = !DILocation(line: 848, column: 22, scope: !6707)
!6862 = !DILocation(line: 850, column: 21, scope: !6707)
!6863 = !DILocation(line: 850, column: 30, scope: !6707)
!6864 = !DILocation(line: 850, column: 13, scope: !6707)
!6865 = !DILocation(line: 852, column: 26, scope: !6706)
!6866 = !DILocation(line: 852, column: 17, scope: !6706)
!6867 = !DILocation(line: 852, column: 24, scope: !6706)
!6868 = !DILocation(line: 853, column: 26, scope: !6706)
!6869 = !DILocation(line: 853, column: 35, scope: !6706)
!6870 = !DILocation(line: 853, column: 39, scope: !6706)
!6871 = !DILocation(line: 853, column: 33, scope: !6706)
!6872 = !DILocation(line: 853, column: 17, scope: !6706)
!6873 = !DILocation(line: 853, column: 24, scope: !6706)
!6874 = !DILocation(line: 854, column: 26, scope: !6706)
!6875 = !DILocation(line: 854, column: 35, scope: !6706)
!6876 = !DILocation(line: 854, column: 39, scope: !6706)
!6877 = !DILocation(line: 854, column: 33, scope: !6706)
!6878 = !DILocation(line: 854, column: 17, scope: !6706)
!6879 = !DILocation(line: 854, column: 24, scope: !6706)
!6880 = !DILocation(line: 855, column: 22, scope: !6706)
!6881 = !DILocation(line: 855, column: 31, scope: !6706)
!6882 = !DILocation(line: 855, column: 35, scope: !6706)
!6883 = !DILocation(line: 855, column: 29, scope: !6706)
!6884 = !DILocation(line: 855, column: 20, scope: !6706)
!6885 = !DILocation(line: 857, column: 24, scope: !6727)
!6886 = !DILocation(line: 857, column: 22, scope: !6727)
!6887 = !DILocation(line: 857, column: 29, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6726, file: !910, discriminator: 1)
!6889 = !DILocation(line: 857, column: 33, scope: !6888)
!6890 = !DILocation(line: 857, column: 37, scope: !6888)
!6891 = !DILocation(line: 857, column: 31, scope: !6888)
!6892 = !DILocation(line: 857, column: 17, scope: !6888)
!6893 = !DILocalVariable(name: "diff", scope: !6725, file: !910, line: 858, type: !963)
!6894 = !DILocation(line: 858, column: 30, scope: !6725)
!6895 = !DILocation(line: 858, column: 50, scope: !6725)
!6896 = !DILocation(line: 858, column: 56, scope: !6725)
!6897 = !DILocation(line: 858, column: 48, scope: !6725)
!6898 = !DILocation(line: 858, column: 38, scope: !6725)
!6899 = !DILocation(line: 858, column: 60, scope: !6725)
!6900 = !DILocation(line: 859, column: 40, scope: !6725)
!6901 = !DILocation(line: 859, column: 46, scope: !6725)
!6902 = !DILocation(line: 859, column: 38, scope: !6725)
!6903 = !DILocation(line: 859, column: 50, scope: !6725)
!6904 = !DILocation(line: 858, column: 67, scope: !6725)
!6905 = !DILocation(line: 860, column: 40, scope: !6725)
!6906 = !DILocation(line: 860, column: 46, scope: !6725)
!6907 = !DILocation(line: 860, column: 38, scope: !6725)
!6908 = !DILocation(line: 860, column: 50, scope: !6725)
!6909 = !DILocation(line: 859, column: 57, scope: !6725)
!6910 = !DILocation(line: 861, column: 30, scope: !6725)
!6911 = !DILocation(line: 861, column: 27, scope: !6725)
!6912 = !DILocation(line: 862, column: 47, scope: !6725)
!6913 = !DILocation(line: 862, column: 21, scope: !6725)
!6914 = !DILocation(line: 88, column: 316, scope: !6715, inlinedAt: !6724)
!6915 = !DILocation(line: 88, column: 305, scope: !6715, inlinedAt: !6724)
!6916 = !DILocation(line: 88, column: 304, scope: !6715, inlinedAt: !6724)
!6917 = !DILocation(line: 88, column: 310, scope: !6715, inlinedAt: !6724)
!6918 = !DILocation(line: 88, column: 313, scope: !6715, inlinedAt: !6724)
!6919 = !DILocation(line: 88, column: 327, scope: !6715, inlinedAt: !6724)
!6920 = !DILocation(line: 88, column: 330, scope: !6715, inlinedAt: !6724)
!6921 = !DILocation(line: 863, column: 17, scope: !6725)
!6922 = !DILocation(line: 857, column: 44, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !6726, file: !910, discriminator: 2)
!6924 = !DILocation(line: 857, column: 17, scope: !6923)
!6925 = distinct !{!6925, !6926}
!6926 = !DILocation(line: 857, column: 17, scope: !6706)
!6927 = !DILocation(line: 864, column: 17, scope: !6706)
!6928 = !DILocation(line: 866, column: 26, scope: !6706)
!6929 = !DILocation(line: 866, column: 17, scope: !6706)
!6930 = !DILocation(line: 866, column: 24, scope: !6706)
!6931 = !DILocation(line: 867, column: 26, scope: !6706)
!6932 = !DILocation(line: 867, column: 35, scope: !6706)
!6933 = !DILocation(line: 867, column: 39, scope: !6706)
!6934 = !DILocation(line: 867, column: 33, scope: !6706)
!6935 = !DILocation(line: 867, column: 17, scope: !6706)
!6936 = !DILocation(line: 867, column: 24, scope: !6706)
!6937 = !DILocation(line: 868, column: 22, scope: !6706)
!6938 = !DILocation(line: 868, column: 31, scope: !6706)
!6939 = !DILocation(line: 868, column: 35, scope: !6706)
!6940 = !DILocation(line: 868, column: 29, scope: !6706)
!6941 = !DILocation(line: 868, column: 20, scope: !6706)
!6942 = !DILocation(line: 869, column: 24, scope: !6705)
!6943 = !DILocation(line: 869, column: 22, scope: !6705)
!6944 = !DILocation(line: 869, column: 29, scope: !6945)
!6945 = !DILexicalBlockFile(scope: !6704, file: !910, discriminator: 1)
!6946 = !DILocation(line: 869, column: 33, scope: !6945)
!6947 = !DILocation(line: 869, column: 37, scope: !6945)
!6948 = !DILocation(line: 869, column: 31, scope: !6945)
!6949 = !DILocation(line: 869, column: 17, scope: !6945)
!6950 = !DILocalVariable(name: "diff", scope: !6703, file: !910, line: 870, type: !963)
!6951 = !DILocation(line: 870, column: 30, scope: !6703)
!6952 = !DILocation(line: 870, column: 40, scope: !6703)
!6953 = !DILocation(line: 870, column: 46, scope: !6703)
!6954 = !DILocation(line: 870, column: 38, scope: !6703)
!6955 = !DILocation(line: 870, column: 50, scope: !6703)
!6956 = !DILocation(line: 870, column: 60, scope: !6703)
!6957 = !DILocation(line: 870, column: 66, scope: !6703)
!6958 = !DILocation(line: 870, column: 58, scope: !6703)
!6959 = !DILocation(line: 870, column: 56, scope: !6703)
!6960 = !DILocation(line: 872, column: 30, scope: !6703)
!6961 = !DILocation(line: 872, column: 27, scope: !6703)
!6962 = !DILocation(line: 873, column: 47, scope: !6703)
!6963 = !DILocation(line: 873, column: 21, scope: !6703)
!6964 = !DILocation(line: 90, column: 316, scope: !6697, inlinedAt: !6702)
!6965 = !DILocation(line: 90, column: 315, scope: !6697, inlinedAt: !6702)
!6966 = !DILocation(line: 90, column: 305, scope: !6697, inlinedAt: !6702)
!6967 = !DILocation(line: 90, column: 304, scope: !6697, inlinedAt: !6702)
!6968 = !DILocation(line: 90, column: 310, scope: !6697, inlinedAt: !6702)
!6969 = !DILocation(line: 90, column: 313, scope: !6697, inlinedAt: !6702)
!6970 = !DILocation(line: 90, column: 327, scope: !6697, inlinedAt: !6702)
!6971 = !DILocation(line: 90, column: 330, scope: !6697, inlinedAt: !6702)
!6972 = !DILocation(line: 874, column: 17, scope: !6703)
!6973 = !DILocation(line: 869, column: 45, scope: !6974)
!6974 = !DILexicalBlockFile(scope: !6704, file: !910, discriminator: 2)
!6975 = !DILocation(line: 869, column: 17, scope: !6974)
!6976 = distinct !{!6976, !6977}
!6977 = !DILocation(line: 869, column: 17, scope: !6706)
!6978 = !DILocation(line: 875, column: 17, scope: !6706)
!6979 = !DILocation(line: 877, column: 26, scope: !6706)
!6980 = !DILocation(line: 877, column: 17, scope: !6706)
!6981 = !DILocation(line: 877, column: 24, scope: !6706)
!6982 = !DILocation(line: 878, column: 26, scope: !6706)
!6983 = !DILocation(line: 878, column: 35, scope: !6706)
!6984 = !DILocation(line: 878, column: 38, scope: !6706)
!6985 = !DILocation(line: 878, column: 33, scope: !6706)
!6986 = !DILocation(line: 878, column: 17, scope: !6706)
!6987 = !DILocation(line: 878, column: 24, scope: !6706)
!6988 = !DILocation(line: 879, column: 26, scope: !6706)
!6989 = !DILocation(line: 879, column: 35, scope: !6706)
!6990 = !DILocation(line: 879, column: 38, scope: !6706)
!6991 = !DILocation(line: 879, column: 33, scope: !6706)
!6992 = !DILocation(line: 879, column: 17, scope: !6706)
!6993 = !DILocation(line: 879, column: 24, scope: !6706)
!6994 = !DILocation(line: 880, column: 26, scope: !6706)
!6995 = !DILocation(line: 880, column: 35, scope: !6706)
!6996 = !DILocation(line: 880, column: 38, scope: !6706)
!6997 = !DILocation(line: 880, column: 33, scope: !6706)
!6998 = !DILocation(line: 880, column: 17, scope: !6706)
!6999 = !DILocation(line: 880, column: 24, scope: !6706)
!7000 = !DILocation(line: 881, column: 22, scope: !6706)
!7001 = !DILocation(line: 881, column: 31, scope: !6706)
!7002 = !DILocation(line: 881, column: 34, scope: !6706)
!7003 = !DILocation(line: 881, column: 29, scope: !6706)
!7004 = !DILocation(line: 881, column: 20, scope: !6706)
!7005 = !DILocation(line: 883, column: 24, scope: !6720)
!7006 = !DILocation(line: 883, column: 22, scope: !6720)
!7007 = !DILocation(line: 883, column: 29, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !6719, file: !910, discriminator: 1)
!7009 = !DILocation(line: 883, column: 33, scope: !7008)
!7010 = !DILocation(line: 883, column: 36, scope: !7008)
!7011 = !DILocation(line: 883, column: 31, scope: !7008)
!7012 = !DILocation(line: 883, column: 17, scope: !7008)
!7013 = !DILocalVariable(name: "diff", scope: !6718, file: !910, line: 884, type: !963)
!7014 = !DILocation(line: 884, column: 30, scope: !6718)
!7015 = !DILocation(line: 884, column: 40, scope: !6718)
!7016 = !DILocation(line: 884, column: 46, scope: !6718)
!7017 = !DILocation(line: 884, column: 38, scope: !6718)
!7018 = !DILocation(line: 884, column: 50, scope: !6718)
!7019 = !DILocation(line: 885, column: 24, scope: !6718)
!7020 = !DILocation(line: 885, column: 30, scope: !6718)
!7021 = !DILocation(line: 885, column: 22, scope: !6718)
!7022 = !DILocation(line: 885, column: 34, scope: !6718)
!7023 = !DILocation(line: 884, column: 57, scope: !6718)
!7024 = !DILocation(line: 886, column: 24, scope: !6718)
!7025 = !DILocation(line: 886, column: 30, scope: !6718)
!7026 = !DILocation(line: 886, column: 22, scope: !6718)
!7027 = !DILocation(line: 886, column: 34, scope: !6718)
!7028 = !DILocation(line: 885, column: 41, scope: !6718)
!7029 = !DILocation(line: 887, column: 24, scope: !6718)
!7030 = !DILocation(line: 887, column: 30, scope: !6718)
!7031 = !DILocation(line: 887, column: 22, scope: !6718)
!7032 = !DILocation(line: 887, column: 21, scope: !6718)
!7033 = !DILocation(line: 886, column: 41, scope: !6718)
!7034 = !DILocation(line: 888, column: 30, scope: !6718)
!7035 = !DILocation(line: 888, column: 27, scope: !6718)
!7036 = !DILocation(line: 889, column: 47, scope: !6718)
!7037 = !DILocation(line: 889, column: 21, scope: !6718)
!7038 = !DILocation(line: 88, column: 316, scope: !6715, inlinedAt: !6717)
!7039 = !DILocation(line: 88, column: 305, scope: !6715, inlinedAt: !6717)
!7040 = !DILocation(line: 88, column: 304, scope: !6715, inlinedAt: !6717)
!7041 = !DILocation(line: 88, column: 310, scope: !6715, inlinedAt: !6717)
!7042 = !DILocation(line: 88, column: 313, scope: !6715, inlinedAt: !6717)
!7043 = !DILocation(line: 88, column: 327, scope: !6715, inlinedAt: !6717)
!7044 = !DILocation(line: 88, column: 330, scope: !6715, inlinedAt: !6717)
!7045 = !DILocation(line: 890, column: 17, scope: !6718)
!7046 = !DILocation(line: 883, column: 44, scope: !7047)
!7047 = !DILexicalBlockFile(scope: !6719, file: !910, discriminator: 2)
!7048 = !DILocation(line: 883, column: 17, scope: !7047)
!7049 = distinct !{!7049, !7050}
!7050 = !DILocation(line: 883, column: 17, scope: !6706)
!7051 = !DILocation(line: 891, column: 17, scope: !6706)
!7052 = !DILocation(line: 893, column: 17, scope: !6706)
!7053 = !DILocation(line: 895, column: 9, scope: !6707)
!7054 = !DILocation(line: 845, column: 42, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !6708, file: !910, discriminator: 2)
!7056 = !DILocation(line: 845, column: 9, scope: !7055)
!7057 = distinct !{!7057, !7058}
!7058 = !DILocation(line: 845, column: 9, scope: !6710)
!7059 = !DILocation(line: 895, column: 9, scope: !7060)
!7060 = !DILexicalBlockFile(scope: !6709, file: !910, discriminator: 1)
!7061 = !DILocation(line: 844, column: 33, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !6710, file: !910, discriminator: 2)
!7063 = !DILocation(line: 844, column: 5, scope: !7062)
!7064 = distinct !{!7064, !7065}
!7065 = !DILocation(line: 844, column: 5, scope: !6695)
!7066 = !DILocation(line: 897, column: 5, scope: !6695)
!7067 = !DILocation(line: 898, column: 1, scope: !6695)
!7068 = distinct !DISubprogram(name: "rle_uncompress", scope: !910, file: !910, line: 285, type: !6214, isLocal: true, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!7069 = !DILocalVariable(name: "ctx", arg: 1, scope: !7068, file: !910, line: 285, type: !1744)
!7070 = !DILocation(line: 285, column: 39, scope: !7068)
!7071 = !DILocalVariable(name: "src", arg: 2, scope: !7068, file: !910, line: 285, type: !944)
!7072 = !DILocation(line: 285, column: 59, scope: !7068)
!7073 = !DILocalVariable(name: "compressed_size", arg: 3, scope: !7068, file: !910, line: 285, type: !941)
!7074 = !DILocation(line: 285, column: 68, scope: !7068)
!7075 = !DILocalVariable(name: "uncompressed_size", arg: 4, scope: !7068, file: !910, line: 286, type: !941)
!7076 = !DILocation(line: 286, column: 31, scope: !7068)
!7077 = !DILocalVariable(name: "td", arg: 5, scope: !7068, file: !910, line: 286, type: !1836)
!7078 = !DILocation(line: 286, column: 65, scope: !7068)
!7079 = !DILocalVariable(name: "d", scope: !7068, file: !910, line: 288, type: !1129)
!7080 = !DILocation(line: 288, column: 14, scope: !7068)
!7081 = !DILocation(line: 288, column: 18, scope: !7068)
!7082 = !DILocation(line: 288, column: 22, scope: !7068)
!7083 = !DILocalVariable(name: "s", scope: !7068, file: !910, line: 289, type: !7084)
!7084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7085, size: 64, align: 64)
!7085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!7086 = !DILocation(line: 289, column: 19, scope: !7068)
!7087 = !DILocation(line: 289, column: 23, scope: !7068)
!7088 = !DILocalVariable(name: "ssize", scope: !7068, file: !910, line: 290, type: !941)
!7089 = !DILocation(line: 290, column: 9, scope: !7068)
!7090 = !DILocation(line: 290, column: 17, scope: !7068)
!7091 = !DILocalVariable(name: "dsize", scope: !7068, file: !910, line: 291, type: !941)
!7092 = !DILocation(line: 291, column: 9, scope: !7068)
!7093 = !DILocation(line: 291, column: 17, scope: !7068)
!7094 = !DILocalVariable(name: "dend", scope: !7068, file: !910, line: 292, type: !1129)
!7095 = !DILocation(line: 292, column: 14, scope: !7068)
!7096 = !DILocation(line: 292, column: 21, scope: !7068)
!7097 = !DILocation(line: 292, column: 25, scope: !7068)
!7098 = !DILocation(line: 292, column: 23, scope: !7068)
!7099 = !DILocalVariable(name: "count", scope: !7068, file: !910, line: 293, type: !941)
!7100 = !DILocation(line: 293, column: 9, scope: !7068)
!7101 = !DILocation(line: 295, column: 5, scope: !7068)
!7102 = !DILocation(line: 295, column: 12, scope: !7103)
!7103 = !DILexicalBlockFile(scope: !7068, file: !910, discriminator: 1)
!7104 = !DILocation(line: 295, column: 18, scope: !7103)
!7105 = !DILocation(line: 295, column: 5, scope: !7103)
!7106 = !DILocation(line: 296, column: 19, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7068, file: !910, line: 295, column: 23)
!7108 = !DILocation(line: 296, column: 17, scope: !7107)
!7109 = !DILocation(line: 296, column: 15, scope: !7107)
!7110 = !DILocation(line: 298, column: 13, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !910, line: 298, column: 13)
!7112 = !DILocation(line: 298, column: 19, scope: !7111)
!7113 = !DILocation(line: 298, column: 13, scope: !7107)
!7114 = !DILocation(line: 299, column: 22, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7111, file: !910, line: 298, column: 24)
!7116 = !DILocation(line: 299, column: 21, scope: !7115)
!7117 = !DILocation(line: 299, column: 19, scope: !7115)
!7118 = !DILocation(line: 301, column: 27, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7115, file: !910, line: 301, column: 17)
!7120 = !DILocation(line: 301, column: 24, scope: !7119)
!7121 = !DILocation(line: 301, column: 34, scope: !7119)
!7122 = !DILocation(line: 301, column: 38, scope: !7119)
!7123 = !DILocation(line: 302, column: 27, scope: !7119)
!7124 = !DILocation(line: 302, column: 33, scope: !7119)
!7125 = !DILocation(line: 302, column: 24, scope: !7119)
!7126 = !DILocation(line: 302, column: 38, scope: !7119)
!7127 = !DILocation(line: 301, column: 17, scope: !7128)
!7128 = !DILexicalBlockFile(scope: !7115, file: !910, discriminator: 1)
!7129 = !DILocation(line: 303, column: 17, scope: !7119)
!7130 = !DILocation(line: 305, column: 13, scope: !7115)
!7131 = !DILocation(line: 305, column: 25, scope: !7128)
!7132 = !DILocation(line: 305, column: 13, scope: !7128)
!7133 = !DILocation(line: 306, column: 26, scope: !7115)
!7134 = !DILocation(line: 306, column: 24, scope: !7115)
!7135 = !DILocation(line: 306, column: 19, scope: !7115)
!7136 = !DILocation(line: 306, column: 22, scope: !7115)
!7137 = !DILocation(line: 305, column: 13, scope: !7138)
!7138 = !DILexicalBlockFile(scope: !7115, file: !910, discriminator: 2)
!7139 = distinct !{!7139, !7130}
!7140 = !DILocation(line: 307, column: 9, scope: !7115)
!7141 = !DILocation(line: 308, column: 18, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7111, file: !910, line: 307, column: 16)
!7143 = !DILocation(line: 310, column: 27, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7142, file: !910, line: 310, column: 17)
!7145 = !DILocation(line: 310, column: 24, scope: !7144)
!7146 = !DILocation(line: 310, column: 34, scope: !7144)
!7147 = !DILocation(line: 310, column: 38, scope: !7144)
!7148 = !DILocation(line: 311, column: 24, scope: !7144)
!7149 = !DILocation(line: 311, column: 30, scope: !7144)
!7150 = !DILocation(line: 310, column: 17, scope: !7151)
!7151 = !DILexicalBlockFile(scope: !7142, file: !910, discriminator: 1)
!7152 = !DILocation(line: 312, column: 17, scope: !7144)
!7153 = !DILocation(line: 314, column: 13, scope: !7142)
!7154 = !DILocation(line: 314, column: 25, scope: !7151)
!7155 = !DILocation(line: 314, column: 13, scope: !7151)
!7156 = !DILocation(line: 315, column: 25, scope: !7142)
!7157 = !DILocation(line: 315, column: 24, scope: !7142)
!7158 = !DILocation(line: 315, column: 19, scope: !7142)
!7159 = !DILocation(line: 315, column: 22, scope: !7142)
!7160 = !DILocation(line: 314, column: 13, scope: !7161)
!7161 = !DILexicalBlockFile(scope: !7142, file: !910, discriminator: 2)
!7162 = distinct !{!7162, !7153}
!7163 = !DILocation(line: 317, column: 14, scope: !7142)
!7164 = !DILocation(line: 295, column: 5, scope: !7165)
!7165 = !DILexicalBlockFile(scope: !7068, file: !910, discriminator: 2)
!7166 = distinct !{!7166, !7101}
!7167 = !DILocation(line: 321, column: 9, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7068, file: !910, line: 321, column: 9)
!7169 = !DILocation(line: 321, column: 17, scope: !7168)
!7170 = !DILocation(line: 321, column: 14, scope: !7168)
!7171 = !DILocation(line: 321, column: 9, scope: !7068)
!7172 = !DILocation(line: 322, column: 9, scope: !7168)
!7173 = !DILocation(line: 326, column: 5, scope: !7068)
!7174 = !DILocation(line: 326, column: 10, scope: !7068)
!7175 = !DILocation(line: 326, column: 14, scope: !7068)
!7176 = !DILocation(line: 326, column: 24, scope: !7068)
!7177 = !DILocation(line: 326, column: 28, scope: !7068)
!7178 = !DILocation(line: 326, column: 33, scope: !7068)
!7179 = !DILocation(line: 327, column: 5, scope: !7068)
!7180 = !DILocation(line: 327, column: 10, scope: !7068)
!7181 = !DILocation(line: 327, column: 14, scope: !7068)
!7182 = !DILocation(line: 327, column: 29, scope: !7068)
!7183 = !DILocation(line: 327, column: 33, scope: !7068)
!7184 = !DILocation(line: 327, column: 52, scope: !7068)
!7185 = !DILocation(line: 327, column: 56, scope: !7068)
!7186 = !DILocation(line: 327, column: 61, scope: !7068)
!7187 = !DILocation(line: 329, column: 5, scope: !7068)
!7188 = !DILocation(line: 330, column: 1, scope: !7068)
!7189 = distinct !DISubprogram(name: "b44_uncompress", scope: !910, file: !910, line: 951, type: !6214, isLocal: true, isDefinition: true, scopeLine: 952, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!7190 = !DILocalVariable(name: "s", arg: 1, scope: !7189, file: !910, line: 951, type: !1744)
!7191 = !DILocation(line: 951, column: 39, scope: !7189)
!7192 = !DILocalVariable(name: "src", arg: 2, scope: !7189, file: !910, line: 951, type: !944)
!7193 = !DILocation(line: 951, column: 57, scope: !7189)
!7194 = !DILocalVariable(name: "compressed_size", arg: 3, scope: !7189, file: !910, line: 951, type: !941)
!7195 = !DILocation(line: 951, column: 66, scope: !7189)
!7196 = !DILocalVariable(name: "uncompressed_size", arg: 4, scope: !7189, file: !910, line: 952, type: !941)
!7197 = !DILocation(line: 952, column: 31, scope: !7189)
!7198 = !DILocalVariable(name: "td", arg: 5, scope: !7189, file: !910, line: 952, type: !1836)
!7199 = !DILocation(line: 952, column: 65, scope: !7189)
!7200 = !DILocalVariable(name: "sr", scope: !7189, file: !910, line: 953, type: !7084)
!7201 = !DILocation(line: 953, column: 19, scope: !7189)
!7202 = !DILocation(line: 953, column: 24, scope: !7189)
!7203 = !DILocalVariable(name: "stay_to_uncompress", scope: !7189, file: !910, line: 954, type: !941)
!7204 = !DILocation(line: 954, column: 9, scope: !7189)
!7205 = !DILocation(line: 954, column: 30, scope: !7189)
!7206 = !DILocalVariable(name: "nb_b44_block_w", scope: !7189, file: !910, line: 955, type: !941)
!7207 = !DILocation(line: 955, column: 9, scope: !7189)
!7208 = !DILocalVariable(name: "nb_b44_block_h", scope: !7189, file: !910, line: 955, type: !941)
!7209 = !DILocation(line: 955, column: 25, scope: !7189)
!7210 = !DILocalVariable(name: "index_tl_x", scope: !7189, file: !910, line: 956, type: !941)
!7211 = !DILocation(line: 956, column: 9, scope: !7189)
!7212 = !DILocalVariable(name: "index_tl_y", scope: !7189, file: !910, line: 956, type: !941)
!7213 = !DILocation(line: 956, column: 21, scope: !7189)
!7214 = !DILocalVariable(name: "index_out", scope: !7189, file: !910, line: 956, type: !941)
!7215 = !DILocation(line: 956, column: 33, scope: !7189)
!7216 = !DILocalVariable(name: "index_tmp", scope: !7189, file: !910, line: 956, type: !941)
!7217 = !DILocation(line: 956, column: 44, scope: !7189)
!7218 = !DILocalVariable(name: "tmp_buffer", scope: !7189, file: !910, line: 957, type: !7219)
!7219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 256, align: 16, elements: !7220)
!7220 = !{!7221}
!7221 = !DISubrange(count: 16)
!7222 = !DILocation(line: 957, column: 14, scope: !7189)
!7223 = !DILocalVariable(name: "c", scope: !7189, file: !910, line: 958, type: !941)
!7224 = !DILocation(line: 958, column: 9, scope: !7189)
!7225 = !DILocalVariable(name: "iY", scope: !7189, file: !910, line: 958, type: !941)
!7226 = !DILocation(line: 958, column: 12, scope: !7189)
!7227 = !DILocalVariable(name: "iX", scope: !7189, file: !910, line: 958, type: !941)
!7228 = !DILocation(line: 958, column: 16, scope: !7189)
!7229 = !DILocalVariable(name: "y", scope: !7189, file: !910, line: 958, type: !941)
!7230 = !DILocation(line: 958, column: 20, scope: !7189)
!7231 = !DILocalVariable(name: "x", scope: !7189, file: !910, line: 958, type: !941)
!7232 = !DILocation(line: 958, column: 23, scope: !7189)
!7233 = !DILocalVariable(name: "target_channel_offset", scope: !7189, file: !910, line: 959, type: !941)
!7234 = !DILocation(line: 959, column: 9, scope: !7189)
!7235 = !DILocation(line: 962, column: 22, scope: !7189)
!7236 = !DILocation(line: 962, column: 26, scope: !7189)
!7237 = !DILocation(line: 962, column: 32, scope: !7189)
!7238 = !DILocation(line: 962, column: 20, scope: !7189)
!7239 = !DILocation(line: 963, column: 10, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7189, file: !910, line: 963, column: 9)
!7241 = !DILocation(line: 963, column: 14, scope: !7240)
!7242 = !DILocation(line: 963, column: 20, scope: !7240)
!7243 = !DILocation(line: 963, column: 25, scope: !7240)
!7244 = !DILocation(line: 963, column: 9, scope: !7189)
!7245 = !DILocation(line: 964, column: 23, scope: !7240)
!7246 = !DILocation(line: 964, column: 9, scope: !7240)
!7247 = !DILocation(line: 966, column: 22, scope: !7189)
!7248 = !DILocation(line: 966, column: 26, scope: !7189)
!7249 = !DILocation(line: 966, column: 32, scope: !7189)
!7250 = !DILocation(line: 966, column: 20, scope: !7189)
!7251 = !DILocation(line: 967, column: 10, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7189, file: !910, line: 967, column: 9)
!7253 = !DILocation(line: 967, column: 14, scope: !7252)
!7254 = !DILocation(line: 967, column: 20, scope: !7252)
!7255 = !DILocation(line: 967, column: 25, scope: !7252)
!7256 = !DILocation(line: 967, column: 9, scope: !7189)
!7257 = !DILocation(line: 968, column: 23, scope: !7252)
!7258 = !DILocation(line: 968, column: 9, scope: !7252)
!7259 = !DILocation(line: 970, column: 12, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7189, file: !910, line: 970, column: 5)
!7261 = !DILocation(line: 970, column: 10, scope: !7260)
!7262 = !DILocation(line: 970, column: 17, scope: !7263)
!7263 = !DILexicalBlockFile(scope: !7264, file: !910, discriminator: 1)
!7264 = distinct !DILexicalBlock(scope: !7260, file: !910, line: 970, column: 5)
!7265 = !DILocation(line: 970, column: 21, scope: !7263)
!7266 = !DILocation(line: 970, column: 24, scope: !7263)
!7267 = !DILocation(line: 970, column: 19, scope: !7263)
!7268 = !DILocation(line: 970, column: 5, scope: !7263)
!7269 = !DILocation(line: 971, column: 25, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7271, file: !910, line: 971, column: 13)
!7271 = distinct !DILexicalBlock(scope: !7264, file: !910, line: 970, column: 42)
!7272 = !DILocation(line: 971, column: 13, scope: !7270)
!7273 = !DILocation(line: 971, column: 16, scope: !7270)
!7274 = !DILocation(line: 971, column: 28, scope: !7270)
!7275 = !DILocation(line: 971, column: 39, scope: !7270)
!7276 = !DILocation(line: 971, column: 13, scope: !7271)
!7277 = !DILocation(line: 972, column: 21, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !910, line: 972, column: 13)
!7279 = distinct !DILexicalBlock(scope: !7270, file: !910, line: 971, column: 52)
!7280 = !DILocation(line: 972, column: 18, scope: !7278)
!7281 = !DILocation(line: 972, column: 26, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !7283, file: !910, discriminator: 1)
!7283 = distinct !DILexicalBlock(scope: !7278, file: !910, line: 972, column: 13)
!7284 = !DILocation(line: 972, column: 31, scope: !7282)
!7285 = !DILocation(line: 972, column: 29, scope: !7282)
!7286 = !DILocation(line: 972, column: 13, scope: !7282)
!7287 = !DILocation(line: 973, column: 25, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !910, line: 973, column: 17)
!7289 = distinct !DILexicalBlock(scope: !7283, file: !910, line: 972, column: 53)
!7290 = !DILocation(line: 973, column: 22, scope: !7288)
!7291 = !DILocation(line: 973, column: 30, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7293, file: !910, discriminator: 1)
!7293 = distinct !DILexicalBlock(scope: !7288, file: !910, line: 973, column: 17)
!7294 = !DILocation(line: 973, column: 35, scope: !7292)
!7295 = !DILocation(line: 973, column: 33, scope: !7292)
!7296 = !DILocation(line: 973, column: 17, scope: !7292)
!7297 = !DILocation(line: 974, column: 25, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !910, line: 974, column: 25)
!7299 = distinct !DILexicalBlock(scope: !7293, file: !910, line: 973, column: 57)
!7300 = !DILocation(line: 974, column: 44, scope: !7298)
!7301 = !DILocation(line: 974, column: 25, scope: !7299)
!7302 = !DILocation(line: 975, column: 32, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7298, file: !910, line: 974, column: 49)
!7304 = !DILocation(line: 975, column: 77, scope: !7303)
!7305 = !DILocation(line: 975, column: 25, scope: !7303)
!7306 = !DILocation(line: 976, column: 25, scope: !7303)
!7307 = !DILocation(line: 979, column: 29, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7299, file: !910, line: 979, column: 25)
!7309 = !DILocation(line: 979, column: 47, scope: !7308)
!7310 = !DILocation(line: 979, column: 45, scope: !7308)
!7311 = !DILocation(line: 979, column: 66, scope: !7308)
!7312 = !DILocation(line: 979, column: 25, scope: !7308)
!7313 = !DILocation(line: 979, column: 71, scope: !7308)
!7314 = !DILocation(line: 979, column: 25, scope: !7299)
!7315 = !DILocation(line: 980, column: 34, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7308, file: !910, line: 979, column: 80)
!7317 = !DILocation(line: 980, column: 38, scope: !7316)
!7318 = !DILocation(line: 980, column: 25, scope: !7316)
!7319 = !DILocation(line: 981, column: 28, scope: !7316)
!7320 = !DILocation(line: 982, column: 44, scope: !7316)
!7321 = !DILocation(line: 983, column: 21, scope: !7316)
!7322 = !DILocation(line: 984, column: 29, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !910, line: 984, column: 29)
!7324 = distinct !DILexicalBlock(scope: !7308, file: !910, line: 983, column: 28)
!7325 = !DILocation(line: 984, column: 48, scope: !7323)
!7326 = !DILocation(line: 984, column: 29, scope: !7324)
!7327 = !DILocation(line: 985, column: 36, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7323, file: !910, line: 984, column: 54)
!7329 = !DILocation(line: 985, column: 80, scope: !7328)
!7330 = !DILocation(line: 985, column: 29, scope: !7328)
!7331 = !DILocation(line: 986, column: 29, scope: !7328)
!7332 = !DILocation(line: 988, column: 35, scope: !7324)
!7333 = !DILocation(line: 988, column: 39, scope: !7324)
!7334 = !DILocation(line: 988, column: 25, scope: !7324)
!7335 = !DILocation(line: 989, column: 28, scope: !7324)
!7336 = !DILocation(line: 990, column: 44, scope: !7324)
!7337 = !DILocation(line: 994, column: 34, scope: !7299)
!7338 = !DILocation(line: 994, column: 37, scope: !7299)
!7339 = !DILocation(line: 994, column: 32, scope: !7299)
!7340 = !DILocation(line: 995, column: 34, scope: !7299)
!7341 = !DILocation(line: 995, column: 37, scope: !7299)
!7342 = !DILocation(line: 995, column: 32, scope: !7299)
!7343 = !DILocation(line: 997, column: 30, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7299, file: !910, line: 997, column: 21)
!7345 = !DILocation(line: 997, column: 28, scope: !7344)
!7346 = !DILocation(line: 997, column: 26, scope: !7344)
!7347 = !DILocation(line: 997, column: 42, scope: !7348)
!7348 = !DILexicalBlockFile(scope: !7349, file: !910, discriminator: 1)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !910, line: 997, column: 21)
!7350 = !DILocation(line: 997, column: 48, scope: !7348)
!7351 = !DILocation(line: 997, column: 59, scope: !7348)
!7352 = !DILocation(line: 997, column: 67, scope: !7348)
!7353 = !DILocation(line: 997, column: 71, scope: !7348)
!7354 = !DILocation(line: 997, column: 64, scope: !7348)
!7355 = !DILocation(line: 997, column: 47, scope: !7348)
!7356 = !DILocation(line: 997, column: 81, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !7349, file: !910, discriminator: 2)
!7358 = !DILocation(line: 997, column: 85, scope: !7357)
!7359 = !DILocation(line: 997, column: 47, scope: !7357)
!7360 = !DILocation(line: 997, column: 95, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7349, file: !910, discriminator: 3)
!7362 = !DILocation(line: 997, column: 106, scope: !7361)
!7363 = !DILocation(line: 997, column: 47, scope: !7361)
!7364 = !DILocation(line: 997, column: 47, scope: !7365)
!7365 = !DILexicalBlockFile(scope: !7349, file: !910, discriminator: 4)
!7366 = !DILocation(line: 997, column: 44, scope: !7365)
!7367 = !DILocation(line: 997, column: 21, scope: !7365)
!7368 = !DILocation(line: 998, column: 34, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7370, file: !910, line: 998, column: 25)
!7370 = distinct !DILexicalBlock(scope: !7349, file: !910, line: 997, column: 118)
!7371 = !DILocation(line: 998, column: 32, scope: !7369)
!7372 = !DILocation(line: 998, column: 30, scope: !7369)
!7373 = !DILocation(line: 998, column: 46, scope: !7374)
!7374 = !DILexicalBlockFile(scope: !7375, file: !910, discriminator: 1)
!7375 = distinct !DILexicalBlock(scope: !7369, file: !910, line: 998, column: 25)
!7376 = !DILocation(line: 998, column: 52, scope: !7374)
!7377 = !DILocation(line: 998, column: 63, scope: !7374)
!7378 = !DILocation(line: 998, column: 71, scope: !7374)
!7379 = !DILocation(line: 998, column: 75, scope: !7374)
!7380 = !DILocation(line: 998, column: 68, scope: !7374)
!7381 = !DILocation(line: 998, column: 51, scope: !7374)
!7382 = !DILocation(line: 998, column: 85, scope: !7383)
!7383 = !DILexicalBlockFile(scope: !7375, file: !910, discriminator: 2)
!7384 = !DILocation(line: 998, column: 89, scope: !7383)
!7385 = !DILocation(line: 998, column: 51, scope: !7383)
!7386 = !DILocation(line: 998, column: 99, scope: !7387)
!7387 = !DILexicalBlockFile(scope: !7375, file: !910, discriminator: 3)
!7388 = !DILocation(line: 998, column: 110, scope: !7387)
!7389 = !DILocation(line: 998, column: 51, scope: !7387)
!7390 = !DILocation(line: 998, column: 51, scope: !7391)
!7391 = !DILexicalBlockFile(scope: !7375, file: !910, discriminator: 4)
!7392 = !DILocation(line: 998, column: 48, scope: !7391)
!7393 = !DILocation(line: 998, column: 25, scope: !7391)
!7394 = !DILocation(line: 999, column: 41, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7375, file: !910, line: 998, column: 122)
!7396 = !DILocation(line: 999, column: 65, scope: !7395)
!7397 = !DILocation(line: 999, column: 69, scope: !7395)
!7398 = !DILocation(line: 999, column: 63, scope: !7395)
!7399 = !DILocation(line: 999, column: 77, scope: !7395)
!7400 = !DILocation(line: 999, column: 81, scope: !7395)
!7401 = !DILocation(line: 999, column: 85, scope: !7395)
!7402 = !DILocation(line: 999, column: 79, scope: !7395)
!7403 = !DILocation(line: 999, column: 75, scope: !7395)
!7404 = !DILocation(line: 999, column: 109, scope: !7395)
!7405 = !DILocation(line: 999, column: 107, scope: !7395)
!7406 = !DILocation(line: 999, column: 103, scope: !7395)
!7407 = !DILocation(line: 999, column: 39, scope: !7395)
!7408 = !DILocation(line: 1000, column: 42, scope: !7395)
!7409 = !DILocation(line: 1000, column: 44, scope: !7395)
!7410 = !DILocation(line: 1000, column: 43, scope: !7395)
!7411 = !DILocation(line: 1000, column: 56, scope: !7395)
!7412 = !DILocation(line: 1000, column: 63, scope: !7395)
!7413 = !DILocation(line: 1000, column: 65, scope: !7395)
!7414 = !DILocation(line: 1000, column: 64, scope: !7395)
!7415 = !DILocation(line: 1000, column: 60, scope: !7395)
!7416 = !DILocation(line: 1000, column: 39, scope: !7395)
!7417 = !DILocation(line: 1001, column: 75, scope: !7395)
!7418 = !DILocation(line: 1001, column: 64, scope: !7395)
!7419 = !DILocation(line: 1001, column: 86, scope: !7395)
!7420 = !DILocation(line: 1001, column: 51, scope: !7395)
!7421 = !DILocation(line: 1001, column: 29, scope: !7395)
!7422 = !DILocation(line: 1001, column: 33, scope: !7395)
!7423 = !DILocation(line: 1001, column: 62, scope: !7395)
!7424 = !DILocation(line: 1002, column: 79, scope: !7395)
!7425 = !DILocation(line: 1002, column: 68, scope: !7395)
!7426 = !DILocation(line: 1002, column: 90, scope: !7395)
!7427 = !DILocation(line: 1002, column: 51, scope: !7395)
!7428 = !DILocation(line: 1002, column: 61, scope: !7395)
!7429 = !DILocation(line: 1002, column: 29, scope: !7395)
!7430 = !DILocation(line: 1002, column: 33, scope: !7395)
!7431 = !DILocation(line: 1002, column: 66, scope: !7395)
!7432 = !DILocation(line: 1003, column: 25, scope: !7395)
!7433 = !DILocation(line: 998, column: 118, scope: !7434)
!7434 = !DILexicalBlockFile(scope: !7375, file: !910, discriminator: 5)
!7435 = !DILocation(line: 998, column: 25, scope: !7434)
!7436 = distinct !{!7436, !7437}
!7437 = !DILocation(line: 998, column: 25, scope: !7370)
!7438 = !DILocation(line: 1004, column: 21, scope: !7370)
!7439 = !DILocation(line: 997, column: 114, scope: !7440)
!7440 = !DILexicalBlockFile(scope: !7349, file: !910, discriminator: 5)
!7441 = !DILocation(line: 997, column: 21, scope: !7440)
!7442 = distinct !{!7442, !7443}
!7443 = !DILocation(line: 997, column: 21, scope: !7299)
!7444 = !DILocation(line: 1005, column: 17, scope: !7299)
!7445 = !DILocation(line: 973, column: 53, scope: !7446)
!7446 = !DILexicalBlockFile(scope: !7293, file: !910, discriminator: 2)
!7447 = !DILocation(line: 973, column: 17, scope: !7446)
!7448 = distinct !{!7448, !7449}
!7449 = !DILocation(line: 973, column: 17, scope: !7289)
!7450 = !DILocation(line: 1006, column: 13, scope: !7289)
!7451 = !DILocation(line: 972, column: 49, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !7283, file: !910, discriminator: 2)
!7453 = !DILocation(line: 972, column: 13, scope: !7452)
!7454 = distinct !{!7454, !7455}
!7455 = !DILocation(line: 972, column: 13, scope: !7279)
!7456 = !DILocation(line: 1007, column: 35, scope: !7279)
!7457 = !DILocation(line: 1008, column: 9, scope: !7279)
!7458 = !DILocation(line: 1009, column: 17, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !910, line: 1009, column: 17)
!7460 = distinct !DILexicalBlock(scope: !7270, file: !910, line: 1008, column: 16)
!7461 = !DILocation(line: 1009, column: 38, scope: !7459)
!7462 = !DILocation(line: 1009, column: 42, scope: !7459)
!7463 = !DILocation(line: 1009, column: 50, scope: !7459)
!7464 = !DILocation(line: 1009, column: 54, scope: !7459)
!7465 = !DILocation(line: 1009, column: 48, scope: !7459)
!7466 = !DILocation(line: 1009, column: 60, scope: !7459)
!7467 = !DILocation(line: 1009, column: 36, scope: !7459)
!7468 = !DILocation(line: 1009, column: 17, scope: !7460)
!7469 = !DILocation(line: 1010, column: 24, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7459, file: !910, line: 1009, column: 65)
!7471 = !DILocation(line: 1010, column: 77, scope: !7470)
!7472 = !DILocation(line: 1010, column: 17, scope: !7470)
!7473 = !DILocation(line: 1011, column: 17, scope: !7470)
!7474 = !DILocation(line: 1014, column: 20, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7460, file: !910, line: 1014, column: 13)
!7476 = !DILocation(line: 1014, column: 18, scope: !7475)
!7477 = !DILocation(line: 1014, column: 25, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !7479, file: !910, discriminator: 1)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !910, line: 1014, column: 13)
!7480 = !DILocation(line: 1014, column: 29, scope: !7478)
!7481 = !DILocation(line: 1014, column: 33, scope: !7478)
!7482 = !DILocation(line: 1014, column: 27, scope: !7478)
!7483 = !DILocation(line: 1014, column: 13, scope: !7478)
!7484 = !DILocation(line: 1015, column: 29, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7479, file: !910, line: 1014, column: 45)
!7486 = !DILocation(line: 1015, column: 53, scope: !7485)
!7487 = !DILocation(line: 1015, column: 57, scope: !7485)
!7488 = !DILocation(line: 1015, column: 51, scope: !7485)
!7489 = !DILocation(line: 1015, column: 65, scope: !7485)
!7490 = !DILocation(line: 1015, column: 69, scope: !7485)
!7491 = !DILocation(line: 1015, column: 73, scope: !7485)
!7492 = !DILocation(line: 1015, column: 67, scope: !7485)
!7493 = !DILocation(line: 1015, column: 63, scope: !7485)
!7494 = !DILocation(line: 1015, column: 27, scope: !7485)
!7495 = !DILocation(line: 1016, column: 47, scope: !7485)
!7496 = !DILocation(line: 1016, column: 25, scope: !7485)
!7497 = !DILocation(line: 1016, column: 29, scope: !7485)
!7498 = !DILocation(line: 1016, column: 59, scope: !7485)
!7499 = !DILocation(line: 1016, column: 63, scope: !7485)
!7500 = !DILocation(line: 1016, column: 67, scope: !7485)
!7501 = !DILocation(line: 1016, column: 73, scope: !7485)
!7502 = !DILocation(line: 1016, column: 17, scope: !7485)
!7503 = !DILocation(line: 1017, column: 23, scope: !7485)
!7504 = !DILocation(line: 1017, column: 27, scope: !7485)
!7505 = !DILocation(line: 1017, column: 33, scope: !7485)
!7506 = !DILocation(line: 1017, column: 20, scope: !7485)
!7507 = !DILocation(line: 1018, column: 13, scope: !7485)
!7508 = !DILocation(line: 1014, column: 41, scope: !7509)
!7509 = !DILexicalBlockFile(scope: !7479, file: !910, discriminator: 2)
!7510 = !DILocation(line: 1014, column: 13, scope: !7509)
!7511 = distinct !{!7511, !7512}
!7512 = !DILocation(line: 1014, column: 13, scope: !7460)
!7513 = !DILocation(line: 1019, column: 35, scope: !7460)
!7514 = !DILocation(line: 1021, column: 35, scope: !7460)
!7515 = !DILocation(line: 1021, column: 39, scope: !7460)
!7516 = !DILocation(line: 1021, column: 47, scope: !7460)
!7517 = !DILocation(line: 1021, column: 51, scope: !7460)
!7518 = !DILocation(line: 1021, column: 45, scope: !7460)
!7519 = !DILocation(line: 1021, column: 57, scope: !7460)
!7520 = !DILocation(line: 1021, column: 32, scope: !7460)
!7521 = !DILocation(line: 1023, column: 5, scope: !7271)
!7522 = !DILocation(line: 970, column: 38, scope: !7523)
!7523 = !DILexicalBlockFile(scope: !7264, file: !910, discriminator: 2)
!7524 = !DILocation(line: 970, column: 5, scope: !7523)
!7525 = distinct !{!7525, !7526}
!7526 = !DILocation(line: 970, column: 5, scope: !7189)
!7527 = !DILocation(line: 1025, column: 5, scope: !7189)
!7528 = !DILocation(line: 1026, column: 1, scope: !7189)
!7529 = distinct !DISubprogram(name: "reverse_lut", scope: !910, file: !910, line: 335, type: !7530, isLocal: true, isDefinition: true, scopeLine: 336, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!7530 = !DISubroutineType(types: !7531)
!7531 = !{!965, !944, !964}
!7532 = !DILocalVariable(name: "bitmap", arg: 1, scope: !7529, file: !910, line: 335, type: !944)
!7533 = !DILocation(line: 335, column: 44, scope: !7529)
!7534 = !DILocalVariable(name: "lut", arg: 2, scope: !7529, file: !910, line: 335, type: !964)
!7535 = !DILocation(line: 335, column: 62, scope: !7529)
!7536 = !DILocalVariable(name: "i", scope: !7529, file: !910, line: 337, type: !941)
!7537 = !DILocation(line: 337, column: 9, scope: !7529)
!7538 = !DILocalVariable(name: "k", scope: !7529, file: !910, line: 337, type: !941)
!7539 = !DILocation(line: 337, column: 12, scope: !7529)
!7540 = !DILocation(line: 339, column: 12, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7529, file: !910, line: 339, column: 5)
!7542 = !DILocation(line: 339, column: 10, scope: !7541)
!7543 = !DILocation(line: 339, column: 17, scope: !7544)
!7544 = !DILexicalBlockFile(scope: !7545, file: !910, discriminator: 1)
!7545 = distinct !DILexicalBlock(scope: !7541, file: !910, line: 339, column: 5)
!7546 = !DILocation(line: 339, column: 19, scope: !7544)
!7547 = !DILocation(line: 339, column: 5, scope: !7544)
!7548 = !DILocation(line: 340, column: 14, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7545, file: !910, line: 340, column: 13)
!7550 = !DILocation(line: 340, column: 16, scope: !7549)
!7551 = !DILocation(line: 340, column: 22, scope: !7549)
!7552 = !DILocation(line: 340, column: 33, scope: !7553)
!7553 = !DILexicalBlockFile(scope: !7549, file: !910, discriminator: 1)
!7554 = !DILocation(line: 340, column: 35, scope: !7553)
!7555 = !DILocation(line: 340, column: 26, scope: !7553)
!7556 = !DILocation(line: 340, column: 50, scope: !7553)
!7557 = !DILocation(line: 340, column: 52, scope: !7553)
!7558 = !DILocation(line: 340, column: 46, scope: !7553)
!7559 = !DILocation(line: 340, column: 41, scope: !7553)
!7560 = !DILocation(line: 340, column: 13, scope: !7553)
!7561 = !DILocation(line: 341, column: 24, scope: !7549)
!7562 = !DILocation(line: 341, column: 18, scope: !7549)
!7563 = !DILocation(line: 341, column: 13, scope: !7549)
!7564 = !DILocation(line: 341, column: 22, scope: !7549)
!7565 = !DILocation(line: 340, column: 57, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !7549, file: !910, discriminator: 2)
!7567 = !DILocation(line: 339, column: 33, scope: !7568)
!7568 = !DILexicalBlockFile(scope: !7545, file: !910, discriminator: 2)
!7569 = !DILocation(line: 339, column: 5, scope: !7568)
!7570 = distinct !{!7570, !7571}
!7571 = !DILocation(line: 339, column: 5, scope: !7529)
!7572 = !DILocation(line: 343, column: 9, scope: !7529)
!7573 = !DILocation(line: 343, column: 11, scope: !7529)
!7574 = !DILocation(line: 343, column: 7, scope: !7529)
!7575 = !DILocation(line: 345, column: 12, scope: !7529)
!7576 = !DILocation(line: 345, column: 18, scope: !7529)
!7577 = !DILocation(line: 345, column: 16, scope: !7529)
!7578 = !DILocation(line: 345, column: 5, scope: !7529)
!7579 = !DILocation(line: 345, column: 37, scope: !7529)
!7580 = !DILocation(line: 345, column: 35, scope: !7529)
!7581 = !DILocation(line: 345, column: 40, scope: !7529)
!7582 = !DILocation(line: 345, column: 24, scope: !7529)
!7583 = !DILocation(line: 347, column: 12, scope: !7529)
!7584 = !DILocation(line: 347, column: 5, scope: !7529)
!7585 = distinct !DISubprogram(name: "huf_uncompress", scope: !910, file: !910, line: 574, type: !7586, isLocal: true, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!941, !2076, !964, !941}
!7588 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !7589)
!7589 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7590)
!7590 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7591)
!7591 = distinct !DILocation(line: 587, column: 13, scope: !7585)
!7592 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !7590)
!7593 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !7591)
!7594 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !7595)
!7595 = distinct !DILocation(line: 593, column: 5, scope: !7585)
!7596 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !7595)
!7597 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !7598)
!7598 = distinct !DILocation(line: 586, column: 5, scope: !7585)
!7599 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !7598)
!7600 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !7601)
!7601 = distinct !DILocation(line: 605, column: 21, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7585, file: !910, line: 605, column: 9)
!7603 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !7604)
!7604 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7605)
!7605 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7606)
!7606 = distinct !DILocation(line: 585, column: 10, scope: !7585)
!7607 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !7605)
!7608 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !7606)
!7609 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !7610)
!7610 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7611)
!7611 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7612)
!7612 = distinct !DILocation(line: 584, column: 10, scope: !7585)
!7613 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !7611)
!7614 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !7612)
!7615 = !DILocation(line: 88, column: 95, scope: !2103, inlinedAt: !7616)
!7616 = distinct !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7617)
!7617 = distinct !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7618)
!7618 = distinct !DILocation(line: 583, column: 16, scope: !7585)
!7619 = !DILocation(line: 88, column: 856, scope: !2109, inlinedAt: !7617)
!7620 = !DILocation(line: 88, column: 998, scope: !2114, inlinedAt: !7618)
!7621 = !DILocalVariable(name: "gb", arg: 1, scope: !7585, file: !910, line: 574, type: !2076)
!7622 = !DILocation(line: 574, column: 43, scope: !7585)
!7623 = !DILocalVariable(name: "dst", arg: 2, scope: !7585, file: !910, line: 575, type: !964)
!7624 = !DILocation(line: 575, column: 37, scope: !7585)
!7625 = !DILocalVariable(name: "dst_size", arg: 3, scope: !7585, file: !910, line: 575, type: !941)
!7626 = !DILocation(line: 575, column: 46, scope: !7585)
!7627 = !DILocalVariable(name: "src_size", scope: !7585, file: !910, line: 577, type: !1809)
!7628 = !DILocation(line: 577, column: 13, scope: !7585)
!7629 = !DILocalVariable(name: "im", scope: !7585, file: !910, line: 577, type: !1809)
!7630 = !DILocation(line: 577, column: 23, scope: !7585)
!7631 = !DILocalVariable(name: "iM", scope: !7585, file: !910, line: 577, type: !1809)
!7632 = !DILocation(line: 577, column: 27, scope: !7585)
!7633 = !DILocalVariable(name: "nBits", scope: !7585, file: !910, line: 578, type: !963)
!7634 = !DILocation(line: 578, column: 14, scope: !7585)
!7635 = !DILocalVariable(name: "freq", scope: !7585, file: !910, line: 579, type: !7636)
!7636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64, align: 64)
!7637 = !DILocation(line: 579, column: 15, scope: !7585)
!7638 = !DILocalVariable(name: "hdec", scope: !7585, file: !910, line: 580, type: !7639)
!7639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7640, size: 64, align: 64)
!7640 = !DIDerivedType(tag: DW_TAG_typedef, name: "HufDec", file: !910, line: 369, baseType: !7641)
!7641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HufDec", file: !910, line: 365, size: 128, align: 64, elements: !7642)
!7642 = !{!7643, !7644, !7645}
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7641, file: !910, line: 366, baseType: !941, size: 32, align: 32)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "lit", scope: !7641, file: !910, line: 367, baseType: !941, size: 32, align: 32, offset: 32)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7641, file: !910, line: 368, baseType: !1393, size: 64, align: 64, offset: 64)
!7646 = !DILocation(line: 580, column: 13, scope: !7585)
!7647 = !DILocalVariable(name: "ret", scope: !7585, file: !910, line: 581, type: !941)
!7648 = !DILocation(line: 581, column: 9, scope: !7585)
!7649 = !DILocalVariable(name: "i", scope: !7585, file: !910, line: 581, type: !941)
!7650 = !DILocation(line: 581, column: 14, scope: !7585)
!7651 = !DILocation(line: 583, column: 37, scope: !7585)
!7652 = !DILocation(line: 583, column: 16, scope: !7585)
!7653 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !7618)
!7654 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !7618)
!7655 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !7618)
!7656 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !7618)
!7657 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !7618)
!7658 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !7618)
!7659 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !7618)
!7660 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !7618)
!7661 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !7618)
!7662 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !7618)
!7663 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !7618)
!7664 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !7618)
!7665 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !7618)
!7666 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !7618)
!7667 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7618)
!7668 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !7617)
!7669 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !7617)
!7670 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7617)
!7671 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !7616)
!7672 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !7616)
!7673 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !7616)
!7674 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !7616)
!7675 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !7616)
!7676 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !7616)
!7677 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !7618)
!7678 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !7618)
!7679 = !DILocation(line: 583, column: 14, scope: !7585)
!7680 = !DILocation(line: 584, column: 31, scope: !7585)
!7681 = !DILocation(line: 584, column: 10, scope: !7585)
!7682 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !7612)
!7683 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !7612)
!7684 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !7612)
!7685 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !7612)
!7686 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !7612)
!7687 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !7612)
!7688 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !7612)
!7689 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !7612)
!7690 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !7612)
!7691 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !7612)
!7692 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !7612)
!7693 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !7612)
!7694 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !7612)
!7695 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !7612)
!7696 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7612)
!7697 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !7611)
!7698 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !7611)
!7699 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7611)
!7700 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !7610)
!7701 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !7610)
!7702 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !7610)
!7703 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !7610)
!7704 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !7610)
!7705 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !7610)
!7706 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !7612)
!7707 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !7612)
!7708 = !DILocation(line: 584, column: 8, scope: !7585)
!7709 = !DILocation(line: 585, column: 31, scope: !7585)
!7710 = !DILocation(line: 585, column: 10, scope: !7585)
!7711 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !7606)
!7712 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !7606)
!7713 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !7606)
!7714 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !7606)
!7715 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !7606)
!7716 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !7606)
!7717 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !7606)
!7718 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !7606)
!7719 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !7606)
!7720 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !7606)
!7721 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !7606)
!7722 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !7606)
!7723 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !7606)
!7724 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !7606)
!7725 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7606)
!7726 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !7605)
!7727 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !7605)
!7728 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7605)
!7729 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !7604)
!7730 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !7604)
!7731 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !7604)
!7732 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !7604)
!7733 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !7604)
!7734 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !7604)
!7735 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !7606)
!7736 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !7606)
!7737 = !DILocation(line: 585, column: 8, scope: !7585)
!7738 = !DILocation(line: 586, column: 22, scope: !7585)
!7739 = !DILocation(line: 586, column: 5, scope: !7585)
!7740 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !7598)
!7741 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !7598)
!7742 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !7598)
!7743 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !7598)
!7744 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !7598)
!7745 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !7598)
!7746 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !7598)
!7747 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !7598)
!7748 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !7598)
!7749 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !7598)
!7750 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !7598)
!7751 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !7598)
!7752 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !7598)
!7753 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !7598)
!7754 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !7598)
!7755 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !7598)
!7756 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !7598)
!7757 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !7598)
!7758 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !7598)
!7759 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !7598)
!7760 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !7598)
!7761 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !7598)
!7762 = !DILocation(line: 587, column: 34, scope: !7585)
!7763 = !DILocation(line: 587, column: 13, scope: !7585)
!7764 = !DILocation(line: 88, column: 1007, scope: !2692, inlinedAt: !7591)
!7765 = !DILocation(line: 88, column: 1010, scope: !2692, inlinedAt: !7591)
!7766 = !DILocation(line: 88, column: 1023, scope: !2692, inlinedAt: !7591)
!7767 = !DILocation(line: 88, column: 1026, scope: !2692, inlinedAt: !7591)
!7768 = !DILocation(line: 88, column: 1021, scope: !2692, inlinedAt: !7591)
!7769 = !DILocation(line: 88, column: 1033, scope: !2692, inlinedAt: !7591)
!7770 = !DILocation(line: 88, column: 1007, scope: !2114, inlinedAt: !7591)
!7771 = !DILocation(line: 88, column: 1052, scope: !2700, inlinedAt: !7591)
!7772 = !DILocation(line: 88, column: 1055, scope: !2700, inlinedAt: !7591)
!7773 = !DILocation(line: 88, column: 1040, scope: !2700, inlinedAt: !7591)
!7774 = !DILocation(line: 88, column: 1043, scope: !2700, inlinedAt: !7591)
!7775 = !DILocation(line: 88, column: 1050, scope: !2700, inlinedAt: !7591)
!7776 = !DILocation(line: 88, column: 1067, scope: !2700, inlinedAt: !7591)
!7777 = !DILocation(line: 88, column: 1108, scope: !2113, inlinedAt: !7591)
!7778 = !DILocation(line: 88, column: 1086, scope: !2113, inlinedAt: !7591)
!7779 = !DILocation(line: 88, column: 889, scope: !2109, inlinedAt: !7590)
!7780 = !DILocation(line: 88, column: 892, scope: !2109, inlinedAt: !7590)
!7781 = !DILocation(line: 88, column: 868, scope: !2109, inlinedAt: !7590)
!7782 = !DILocation(line: 88, column: 102, scope: !2103, inlinedAt: !7589)
!7783 = !DILocation(line: 88, column: 105, scope: !2103, inlinedAt: !7589)
!7784 = !DILocation(line: 88, column: 151, scope: !2103, inlinedAt: !7589)
!7785 = !DILocation(line: 88, column: 150, scope: !2103, inlinedAt: !7589)
!7786 = !DILocation(line: 88, column: 153, scope: !2103, inlinedAt: !7589)
!7787 = !DILocation(line: 88, column: 160, scope: !2103, inlinedAt: !7589)
!7788 = !DILocation(line: 88, column: 1079, scope: !2113, inlinedAt: !7591)
!7789 = !DILocation(line: 88, column: 1112, scope: !2720, inlinedAt: !7591)
!7790 = !DILocation(line: 587, column: 11, scope: !7585)
!7791 = !DILocation(line: 588, column: 9, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7585, file: !910, line: 588, column: 9)
!7793 = !DILocation(line: 588, column: 12, scope: !7792)
!7794 = !DILocation(line: 588, column: 16, scope: !7792)
!7795 = !DILocation(line: 588, column: 19, scope: !7796)
!7796 = !DILexicalBlockFile(scope: !7792, file: !910, discriminator: 1)
!7797 = !DILocation(line: 588, column: 22, scope: !7796)
!7798 = !DILocation(line: 588, column: 41, scope: !7796)
!7799 = !DILocation(line: 589, column: 9, scope: !7792)
!7800 = !DILocation(line: 589, column: 12, scope: !7792)
!7801 = !DILocation(line: 589, column: 16, scope: !7792)
!7802 = !DILocation(line: 589, column: 19, scope: !7796)
!7803 = !DILocation(line: 589, column: 22, scope: !7796)
!7804 = !DILocation(line: 589, column: 41, scope: !7796)
!7805 = !DILocation(line: 590, column: 9, scope: !7792)
!7806 = !DILocation(line: 590, column: 18, scope: !7792)
!7807 = !DILocation(line: 588, column: 9, scope: !7808)
!7808 = !DILexicalBlockFile(scope: !7585, file: !910, discriminator: 2)
!7809 = !DILocation(line: 591, column: 9, scope: !7792)
!7810 = !DILocation(line: 593, column: 22, scope: !7585)
!7811 = !DILocation(line: 593, column: 5, scope: !7585)
!7812 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !7595)
!7813 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !7595)
!7814 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !7595)
!7815 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !7595)
!7816 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !7595)
!7817 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !7595)
!7818 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !7595)
!7819 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !7595)
!7820 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !7595)
!7821 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !7595)
!7822 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !7595)
!7823 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !7595)
!7824 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !7595)
!7825 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !7595)
!7826 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !7595)
!7827 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !7595)
!7828 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !7595)
!7829 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !7595)
!7830 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !7595)
!7831 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !7595)
!7832 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !7595)
!7833 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !7595)
!7834 = !DILocation(line: 595, column: 12, scope: !7585)
!7835 = !DILocation(line: 595, column: 10, scope: !7585)
!7836 = !DILocation(line: 596, column: 12, scope: !7585)
!7837 = !DILocation(line: 596, column: 10, scope: !7585)
!7838 = !DILocation(line: 597, column: 10, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7585, file: !910, line: 597, column: 9)
!7840 = !DILocation(line: 597, column: 15, scope: !7839)
!7841 = !DILocation(line: 597, column: 19, scope: !7842)
!7842 = !DILexicalBlockFile(scope: !7839, file: !910, discriminator: 1)
!7843 = !DILocation(line: 597, column: 9, scope: !7842)
!7844 = !DILocation(line: 598, column: 13, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7839, file: !910, line: 597, column: 25)
!7846 = !DILocation(line: 599, column: 9, scope: !7845)
!7847 = !DILocation(line: 602, column: 37, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7585, file: !910, line: 602, column: 9)
!7849 = !DILocation(line: 602, column: 41, scope: !7848)
!7850 = !DILocation(line: 602, column: 45, scope: !7848)
!7851 = !DILocation(line: 602, column: 49, scope: !7848)
!7852 = !DILocation(line: 602, column: 16, scope: !7848)
!7853 = !DILocation(line: 602, column: 14, scope: !7848)
!7854 = !DILocation(line: 602, column: 56, scope: !7848)
!7855 = !DILocation(line: 602, column: 9, scope: !7585)
!7856 = !DILocation(line: 603, column: 9, scope: !7848)
!7857 = !DILocation(line: 605, column: 9, scope: !7602)
!7858 = !DILocation(line: 605, column: 48, scope: !7602)
!7859 = !DILocation(line: 605, column: 21, scope: !7602)
!7860 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !7601)
!7861 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !7601)
!7862 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !7601)
!7863 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !7601)
!7864 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !7601)
!7865 = !DILocation(line: 605, column: 19, scope: !7602)
!7866 = !DILocation(line: 605, column: 15, scope: !7602)
!7867 = !DILocation(line: 605, column: 9, scope: !7585)
!7868 = !DILocation(line: 606, column: 13, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7602, file: !910, line: 605, column: 53)
!7870 = !DILocation(line: 607, column: 9, scope: !7869)
!7871 = !DILocation(line: 610, column: 36, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7585, file: !910, line: 610, column: 9)
!7873 = !DILocation(line: 610, column: 42, scope: !7872)
!7874 = !DILocation(line: 610, column: 46, scope: !7872)
!7875 = !DILocation(line: 610, column: 50, scope: !7872)
!7876 = !DILocation(line: 610, column: 16, scope: !7872)
!7877 = !DILocation(line: 610, column: 14, scope: !7872)
!7878 = !DILocation(line: 610, column: 57, scope: !7872)
!7879 = !DILocation(line: 610, column: 9, scope: !7585)
!7880 = !DILocation(line: 611, column: 9, scope: !7872)
!7881 = !DILocation(line: 612, column: 22, scope: !7585)
!7882 = !DILocation(line: 612, column: 28, scope: !7585)
!7883 = !DILocation(line: 612, column: 34, scope: !7585)
!7884 = !DILocation(line: 612, column: 38, scope: !7585)
!7885 = !DILocation(line: 612, column: 45, scope: !7585)
!7886 = !DILocation(line: 612, column: 49, scope: !7585)
!7887 = !DILocation(line: 612, column: 59, scope: !7585)
!7888 = !DILocation(line: 612, column: 11, scope: !7585)
!7889 = !DILocation(line: 612, column: 9, scope: !7585)
!7890 = !DILocation(line: 612, column: 5, scope: !7585)
!7891 = !DILocation(line: 615, column: 12, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7585, file: !910, line: 615, column: 5)
!7893 = !DILocation(line: 615, column: 10, scope: !7892)
!7894 = !DILocation(line: 615, column: 17, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !7896, file: !910, discriminator: 1)
!7896 = distinct !DILexicalBlock(scope: !7892, file: !910, line: 615, column: 5)
!7897 = !DILocation(line: 615, column: 19, scope: !7895)
!7898 = !DILocation(line: 615, column: 5, scope: !7895)
!7899 = !DILocation(line: 616, column: 13, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7896, file: !910, line: 616, column: 13)
!7901 = !DILocation(line: 616, column: 13, scope: !7896)
!7902 = !DILocation(line: 617, column: 28, scope: !7900)
!7903 = !DILocation(line: 617, column: 23, scope: !7900)
!7904 = !DILocation(line: 617, column: 31, scope: !7900)
!7905 = !DILocation(line: 617, column: 22, scope: !7900)
!7906 = !DILocation(line: 617, column: 13, scope: !7900)
!7907 = !DILocation(line: 616, column: 13, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !7900, file: !910, discriminator: 1)
!7909 = !DILocation(line: 615, column: 33, scope: !7910)
!7910 = !DILexicalBlockFile(scope: !7896, file: !910, discriminator: 2)
!7911 = !DILocation(line: 615, column: 5, scope: !7910)
!7912 = distinct !{!7912, !7913}
!7913 = !DILocation(line: 615, column: 5, scope: !7585)
!7914 = !DILocation(line: 619, column: 13, scope: !7585)
!7915 = !DILocation(line: 619, column: 5, scope: !7585)
!7916 = !DILocation(line: 620, column: 13, scope: !7585)
!7917 = !DILocation(line: 620, column: 5, scope: !7585)
!7918 = !DILocation(line: 622, column: 12, scope: !7585)
!7919 = !DILocation(line: 622, column: 5, scope: !7585)
!7920 = !DILocation(line: 623, column: 1, scope: !7585)
!7921 = distinct !DISubprogram(name: "wav_decode", scope: !910, file: !910, line: 652, type: !7922, isLocal: true, isDefinition: true, scopeLine: 654, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{null, !964, !941, !941, !941, !941, !965}
!7924 = !DILocalVariable(name: "in", arg: 1, scope: !7921, file: !910, line: 652, type: !964)
!7925 = !DILocation(line: 652, column: 34, scope: !7921)
!7926 = !DILocalVariable(name: "nx", arg: 2, scope: !7921, file: !910, line: 652, type: !941)
!7927 = !DILocation(line: 652, column: 42, scope: !7921)
!7928 = !DILocalVariable(name: "ox", arg: 3, scope: !7921, file: !910, line: 652, type: !941)
!7929 = !DILocation(line: 652, column: 50, scope: !7921)
!7930 = !DILocalVariable(name: "ny", arg: 4, scope: !7921, file: !910, line: 653, type: !941)
!7931 = !DILocation(line: 653, column: 28, scope: !7921)
!7932 = !DILocalVariable(name: "oy", arg: 5, scope: !7921, file: !910, line: 653, type: !941)
!7933 = !DILocation(line: 653, column: 36, scope: !7921)
!7934 = !DILocalVariable(name: "mx", arg: 6, scope: !7921, file: !910, line: 653, type: !965)
!7935 = !DILocation(line: 653, column: 49, scope: !7921)
!7936 = !DILocalVariable(name: "w14", scope: !7921, file: !910, line: 655, type: !941)
!7937 = !DILocation(line: 655, column: 9, scope: !7921)
!7938 = !DILocation(line: 655, column: 16, scope: !7921)
!7939 = !DILocation(line: 655, column: 19, scope: !7921)
!7940 = !DILocalVariable(name: "n", scope: !7921, file: !910, line: 656, type: !941)
!7941 = !DILocation(line: 656, column: 9, scope: !7921)
!7942 = !DILocation(line: 656, column: 14, scope: !7921)
!7943 = !DILocation(line: 656, column: 19, scope: !7921)
!7944 = !DILocation(line: 656, column: 17, scope: !7921)
!7945 = !DILocation(line: 656, column: 13, scope: !7921)
!7946 = !DILocation(line: 656, column: 25, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !7921, file: !910, discriminator: 1)
!7948 = !DILocation(line: 656, column: 13, scope: !7947)
!7949 = !DILocation(line: 656, column: 30, scope: !7950)
!7950 = !DILexicalBlockFile(scope: !7921, file: !910, discriminator: 2)
!7951 = !DILocation(line: 656, column: 13, scope: !7950)
!7952 = !DILocation(line: 656, column: 13, scope: !7953)
!7953 = !DILexicalBlockFile(scope: !7921, file: !910, discriminator: 3)
!7954 = !DILocation(line: 656, column: 9, scope: !7953)
!7955 = !DILocalVariable(name: "p", scope: !7921, file: !910, line: 657, type: !941)
!7956 = !DILocation(line: 657, column: 9, scope: !7921)
!7957 = !DILocalVariable(name: "p2", scope: !7921, file: !910, line: 658, type: !941)
!7958 = !DILocation(line: 658, column: 9, scope: !7921)
!7959 = !DILocation(line: 660, column: 5, scope: !7921)
!7960 = !DILocation(line: 660, column: 12, scope: !7947)
!7961 = !DILocation(line: 660, column: 17, scope: !7947)
!7962 = !DILocation(line: 660, column: 14, scope: !7947)
!7963 = !DILocation(line: 660, column: 5, scope: !7947)
!7964 = !DILocation(line: 661, column: 11, scope: !7921)
!7965 = !DILocation(line: 660, column: 5, scope: !7950)
!7966 = distinct !{!7966, !7959}
!7967 = !DILocation(line: 663, column: 7, scope: !7921)
!7968 = !DILocation(line: 664, column: 10, scope: !7921)
!7969 = !DILocation(line: 664, column: 8, scope: !7921)
!7970 = !DILocation(line: 665, column: 7, scope: !7921)
!7971 = !DILocation(line: 667, column: 5, scope: !7921)
!7972 = !DILocation(line: 667, column: 12, scope: !7947)
!7973 = !DILocation(line: 667, column: 14, scope: !7947)
!7974 = !DILocation(line: 667, column: 5, scope: !7947)
!7975 = !DILocalVariable(name: "py", scope: !7976, file: !910, line: 668, type: !964)
!7976 = distinct !DILexicalBlock(scope: !7921, file: !910, line: 667, column: 20)
!7977 = !DILocation(line: 668, column: 19, scope: !7976)
!7978 = !DILocation(line: 668, column: 24, scope: !7976)
!7979 = !DILocalVariable(name: "ey", scope: !7976, file: !910, line: 669, type: !964)
!7980 = !DILocation(line: 669, column: 19, scope: !7976)
!7981 = !DILocation(line: 669, column: 24, scope: !7976)
!7982 = !DILocation(line: 669, column: 29, scope: !7976)
!7983 = !DILocation(line: 669, column: 35, scope: !7976)
!7984 = !DILocation(line: 669, column: 40, scope: !7976)
!7985 = !DILocation(line: 669, column: 38, scope: !7976)
!7986 = !DILocation(line: 669, column: 32, scope: !7976)
!7987 = !DILocation(line: 669, column: 27, scope: !7976)
!7988 = !DILocalVariable(name: "i00", scope: !7976, file: !910, line: 670, type: !965)
!7989 = !DILocation(line: 670, column: 18, scope: !7976)
!7990 = !DILocalVariable(name: "i01", scope: !7976, file: !910, line: 670, type: !965)
!7991 = !DILocation(line: 670, column: 23, scope: !7976)
!7992 = !DILocalVariable(name: "i10", scope: !7976, file: !910, line: 670, type: !965)
!7993 = !DILocation(line: 670, column: 28, scope: !7976)
!7994 = !DILocalVariable(name: "i11", scope: !7976, file: !910, line: 670, type: !965)
!7995 = !DILocation(line: 670, column: 33, scope: !7976)
!7996 = !DILocalVariable(name: "oy1", scope: !7976, file: !910, line: 671, type: !941)
!7997 = !DILocation(line: 671, column: 13, scope: !7976)
!7998 = !DILocation(line: 671, column: 19, scope: !7976)
!7999 = !DILocation(line: 671, column: 24, scope: !7976)
!8000 = !DILocation(line: 671, column: 22, scope: !7976)
!8001 = !DILocalVariable(name: "oy2", scope: !7976, file: !910, line: 672, type: !941)
!8002 = !DILocation(line: 672, column: 13, scope: !7976)
!8003 = !DILocation(line: 672, column: 19, scope: !7976)
!8004 = !DILocation(line: 672, column: 24, scope: !7976)
!8005 = !DILocation(line: 672, column: 22, scope: !7976)
!8006 = !DILocalVariable(name: "ox1", scope: !7976, file: !910, line: 673, type: !941)
!8007 = !DILocation(line: 673, column: 13, scope: !7976)
!8008 = !DILocation(line: 673, column: 19, scope: !7976)
!8009 = !DILocation(line: 673, column: 24, scope: !7976)
!8010 = !DILocation(line: 673, column: 22, scope: !7976)
!8011 = !DILocalVariable(name: "ox2", scope: !7976, file: !910, line: 674, type: !941)
!8012 = !DILocation(line: 674, column: 13, scope: !7976)
!8013 = !DILocation(line: 674, column: 19, scope: !7976)
!8014 = !DILocation(line: 674, column: 24, scope: !7976)
!8015 = !DILocation(line: 674, column: 22, scope: !7976)
!8016 = !DILocation(line: 676, column: 9, scope: !7976)
!8017 = !DILocation(line: 676, column: 16, scope: !8018)
!8018 = !DILexicalBlockFile(scope: !8019, file: !910, discriminator: 1)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !910, line: 676, column: 9)
!8020 = distinct !DILexicalBlock(scope: !7976, file: !910, line: 676, column: 9)
!8021 = !DILocation(line: 676, column: 22, scope: !8018)
!8022 = !DILocation(line: 676, column: 19, scope: !8018)
!8023 = !DILocation(line: 676, column: 9, scope: !8018)
!8024 = !DILocalVariable(name: "px", scope: !8025, file: !910, line: 677, type: !964)
!8025 = distinct !DILexicalBlock(scope: !8019, file: !910, line: 676, column: 37)
!8026 = !DILocation(line: 677, column: 23, scope: !8025)
!8027 = !DILocation(line: 677, column: 28, scope: !8025)
!8028 = !DILocalVariable(name: "ex", scope: !8025, file: !910, line: 678, type: !964)
!8029 = !DILocation(line: 678, column: 23, scope: !8025)
!8030 = !DILocation(line: 678, column: 28, scope: !8025)
!8031 = !DILocation(line: 678, column: 33, scope: !8025)
!8032 = !DILocation(line: 678, column: 39, scope: !8025)
!8033 = !DILocation(line: 678, column: 44, scope: !8025)
!8034 = !DILocation(line: 678, column: 42, scope: !8025)
!8035 = !DILocation(line: 678, column: 36, scope: !8025)
!8036 = !DILocation(line: 678, column: 31, scope: !8025)
!8037 = !DILocation(line: 680, column: 13, scope: !8025)
!8038 = !DILocation(line: 680, column: 20, scope: !8039)
!8039 = !DILexicalBlockFile(scope: !8040, file: !910, discriminator: 1)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !910, line: 680, column: 13)
!8041 = distinct !DILexicalBlock(scope: !8025, file: !910, line: 680, column: 13)
!8042 = !DILocation(line: 680, column: 26, scope: !8039)
!8043 = !DILocation(line: 680, column: 23, scope: !8039)
!8044 = !DILocation(line: 680, column: 13, scope: !8039)
!8045 = !DILocalVariable(name: "p01", scope: !8046, file: !910, line: 681, type: !964)
!8046 = distinct !DILexicalBlock(scope: !8040, file: !910, line: 680, column: 41)
!8047 = !DILocation(line: 681, column: 27, scope: !8046)
!8048 = !DILocation(line: 681, column: 33, scope: !8046)
!8049 = !DILocation(line: 681, column: 38, scope: !8046)
!8050 = !DILocation(line: 681, column: 36, scope: !8046)
!8051 = !DILocalVariable(name: "p10", scope: !8046, file: !910, line: 682, type: !964)
!8052 = !DILocation(line: 682, column: 27, scope: !8046)
!8053 = !DILocation(line: 682, column: 33, scope: !8046)
!8054 = !DILocation(line: 682, column: 38, scope: !8046)
!8055 = !DILocation(line: 682, column: 36, scope: !8046)
!8056 = !DILocalVariable(name: "p11", scope: !8046, file: !910, line: 683, type: !964)
!8057 = !DILocation(line: 683, column: 27, scope: !8046)
!8058 = !DILocation(line: 683, column: 33, scope: !8046)
!8059 = !DILocation(line: 683, column: 39, scope: !8046)
!8060 = !DILocation(line: 683, column: 37, scope: !8046)
!8061 = !DILocation(line: 685, column: 21, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8046, file: !910, line: 685, column: 21)
!8063 = !DILocation(line: 685, column: 21, scope: !8046)
!8064 = !DILocation(line: 686, column: 29, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8062, file: !910, line: 685, column: 26)
!8066 = !DILocation(line: 686, column: 28, scope: !8065)
!8067 = !DILocation(line: 686, column: 34, scope: !8065)
!8068 = !DILocation(line: 686, column: 33, scope: !8065)
!8069 = !DILocation(line: 686, column: 21, scope: !8065)
!8070 = !DILocation(line: 687, column: 29, scope: !8065)
!8071 = !DILocation(line: 687, column: 28, scope: !8065)
!8072 = !DILocation(line: 687, column: 35, scope: !8065)
!8073 = !DILocation(line: 687, column: 34, scope: !8065)
!8074 = !DILocation(line: 687, column: 21, scope: !8065)
!8075 = !DILocation(line: 688, column: 28, scope: !8065)
!8076 = !DILocation(line: 688, column: 33, scope: !8065)
!8077 = !DILocation(line: 688, column: 38, scope: !8065)
!8078 = !DILocation(line: 688, column: 42, scope: !8065)
!8079 = !DILocation(line: 688, column: 21, scope: !8065)
!8080 = !DILocation(line: 689, column: 28, scope: !8065)
!8081 = !DILocation(line: 689, column: 33, scope: !8065)
!8082 = !DILocation(line: 689, column: 38, scope: !8065)
!8083 = !DILocation(line: 689, column: 43, scope: !8065)
!8084 = !DILocation(line: 689, column: 21, scope: !8065)
!8085 = !DILocation(line: 690, column: 17, scope: !8065)
!8086 = !DILocation(line: 691, column: 29, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8062, file: !910, line: 690, column: 24)
!8088 = !DILocation(line: 691, column: 28, scope: !8087)
!8089 = !DILocation(line: 691, column: 34, scope: !8087)
!8090 = !DILocation(line: 691, column: 33, scope: !8087)
!8091 = !DILocation(line: 691, column: 21, scope: !8087)
!8092 = !DILocation(line: 692, column: 29, scope: !8087)
!8093 = !DILocation(line: 692, column: 28, scope: !8087)
!8094 = !DILocation(line: 692, column: 35, scope: !8087)
!8095 = !DILocation(line: 692, column: 34, scope: !8087)
!8096 = !DILocation(line: 692, column: 21, scope: !8087)
!8097 = !DILocation(line: 693, column: 28, scope: !8087)
!8098 = !DILocation(line: 693, column: 33, scope: !8087)
!8099 = !DILocation(line: 693, column: 38, scope: !8087)
!8100 = !DILocation(line: 693, column: 42, scope: !8087)
!8101 = !DILocation(line: 693, column: 21, scope: !8087)
!8102 = !DILocation(line: 694, column: 28, scope: !8087)
!8103 = !DILocation(line: 694, column: 33, scope: !8087)
!8104 = !DILocation(line: 694, column: 38, scope: !8087)
!8105 = !DILocation(line: 694, column: 43, scope: !8087)
!8106 = !DILocation(line: 694, column: 21, scope: !8087)
!8107 = !DILocation(line: 696, column: 13, scope: !8046)
!8108 = !DILocation(line: 680, column: 36, scope: !8109)
!8109 = !DILexicalBlockFile(scope: !8040, file: !910, discriminator: 2)
!8110 = !DILocation(line: 680, column: 33, scope: !8109)
!8111 = !DILocation(line: 680, column: 13, scope: !8109)
!8112 = distinct !{!8112, !8037}
!8113 = !DILocation(line: 698, column: 17, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8025, file: !910, line: 698, column: 17)
!8115 = !DILocation(line: 698, column: 22, scope: !8114)
!8116 = !DILocation(line: 698, column: 20, scope: !8114)
!8117 = !DILocation(line: 698, column: 17, scope: !8025)
!8118 = !DILocalVariable(name: "p10", scope: !8119, file: !910, line: 699, type: !964)
!8119 = distinct !DILexicalBlock(scope: !8114, file: !910, line: 698, column: 25)
!8120 = !DILocation(line: 699, column: 27, scope: !8119)
!8121 = !DILocation(line: 699, column: 33, scope: !8119)
!8122 = !DILocation(line: 699, column: 38, scope: !8119)
!8123 = !DILocation(line: 699, column: 36, scope: !8119)
!8124 = !DILocation(line: 701, column: 21, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8119, file: !910, line: 701, column: 21)
!8126 = !DILocation(line: 701, column: 21, scope: !8119)
!8127 = !DILocation(line: 702, column: 29, scope: !8125)
!8128 = !DILocation(line: 702, column: 28, scope: !8125)
!8129 = !DILocation(line: 702, column: 34, scope: !8125)
!8130 = !DILocation(line: 702, column: 33, scope: !8125)
!8131 = !DILocation(line: 702, column: 45, scope: !8125)
!8132 = !DILocation(line: 702, column: 21, scope: !8125)
!8133 = !DILocation(line: 704, column: 29, scope: !8125)
!8134 = !DILocation(line: 704, column: 28, scope: !8125)
!8135 = !DILocation(line: 704, column: 34, scope: !8125)
!8136 = !DILocation(line: 704, column: 33, scope: !8125)
!8137 = !DILocation(line: 704, column: 45, scope: !8125)
!8138 = !DILocation(line: 704, column: 21, scope: !8125)
!8139 = !DILocation(line: 706, column: 23, scope: !8119)
!8140 = !DILocation(line: 706, column: 18, scope: !8119)
!8141 = !DILocation(line: 706, column: 21, scope: !8119)
!8142 = !DILocation(line: 707, column: 13, scope: !8119)
!8143 = !DILocation(line: 708, column: 9, scope: !8025)
!8144 = !DILocation(line: 676, column: 32, scope: !8145)
!8145 = !DILexicalBlockFile(scope: !8019, file: !910, discriminator: 2)
!8146 = !DILocation(line: 676, column: 29, scope: !8145)
!8147 = !DILocation(line: 676, column: 9, scope: !8145)
!8148 = distinct !{!8148, !8016}
!8149 = !DILocation(line: 710, column: 13, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !7976, file: !910, line: 710, column: 13)
!8151 = !DILocation(line: 710, column: 18, scope: !8150)
!8152 = !DILocation(line: 710, column: 16, scope: !8150)
!8153 = !DILocation(line: 710, column: 13, scope: !7976)
!8154 = !DILocalVariable(name: "px", scope: !8155, file: !910, line: 711, type: !964)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !910, line: 710, column: 21)
!8156 = !DILocation(line: 711, column: 23, scope: !8155)
!8157 = !DILocation(line: 711, column: 28, scope: !8155)
!8158 = !DILocalVariable(name: "ex", scope: !8155, file: !910, line: 712, type: !964)
!8159 = !DILocation(line: 712, column: 23, scope: !8155)
!8160 = !DILocation(line: 712, column: 28, scope: !8155)
!8161 = !DILocation(line: 712, column: 33, scope: !8155)
!8162 = !DILocation(line: 712, column: 39, scope: !8155)
!8163 = !DILocation(line: 712, column: 44, scope: !8155)
!8164 = !DILocation(line: 712, column: 42, scope: !8155)
!8165 = !DILocation(line: 712, column: 36, scope: !8155)
!8166 = !DILocation(line: 712, column: 31, scope: !8155)
!8167 = !DILocation(line: 714, column: 13, scope: !8155)
!8168 = !DILocation(line: 714, column: 20, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !8170, file: !910, discriminator: 1)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !910, line: 714, column: 13)
!8171 = distinct !DILexicalBlock(scope: !8155, file: !910, line: 714, column: 13)
!8172 = !DILocation(line: 714, column: 26, scope: !8169)
!8173 = !DILocation(line: 714, column: 23, scope: !8169)
!8174 = !DILocation(line: 714, column: 13, scope: !8169)
!8175 = !DILocalVariable(name: "p01", scope: !8176, file: !910, line: 715, type: !964)
!8176 = distinct !DILexicalBlock(scope: !8170, file: !910, line: 714, column: 41)
!8177 = !DILocation(line: 715, column: 27, scope: !8176)
!8178 = !DILocation(line: 715, column: 33, scope: !8176)
!8179 = !DILocation(line: 715, column: 38, scope: !8176)
!8180 = !DILocation(line: 715, column: 36, scope: !8176)
!8181 = !DILocation(line: 717, column: 21, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8176, file: !910, line: 717, column: 21)
!8183 = !DILocation(line: 717, column: 21, scope: !8176)
!8184 = !DILocation(line: 718, column: 29, scope: !8182)
!8185 = !DILocation(line: 718, column: 28, scope: !8182)
!8186 = !DILocation(line: 718, column: 34, scope: !8182)
!8187 = !DILocation(line: 718, column: 33, scope: !8182)
!8188 = !DILocation(line: 718, column: 45, scope: !8182)
!8189 = !DILocation(line: 718, column: 21, scope: !8182)
!8190 = !DILocation(line: 720, column: 29, scope: !8182)
!8191 = !DILocation(line: 720, column: 28, scope: !8182)
!8192 = !DILocation(line: 720, column: 34, scope: !8182)
!8193 = !DILocation(line: 720, column: 33, scope: !8182)
!8194 = !DILocation(line: 720, column: 45, scope: !8182)
!8195 = !DILocation(line: 720, column: 21, scope: !8182)
!8196 = !DILocation(line: 722, column: 23, scope: !8176)
!8197 = !DILocation(line: 722, column: 18, scope: !8176)
!8198 = !DILocation(line: 722, column: 21, scope: !8176)
!8199 = !DILocation(line: 723, column: 13, scope: !8176)
!8200 = !DILocation(line: 714, column: 36, scope: !8201)
!8201 = !DILexicalBlockFile(scope: !8170, file: !910, discriminator: 2)
!8202 = !DILocation(line: 714, column: 33, scope: !8201)
!8203 = !DILocation(line: 714, column: 13, scope: !8201)
!8204 = distinct !{!8204, !8167}
!8205 = !DILocation(line: 724, column: 9, scope: !8155)
!8206 = !DILocation(line: 726, column: 14, scope: !7976)
!8207 = !DILocation(line: 726, column: 12, scope: !7976)
!8208 = !DILocation(line: 727, column: 11, scope: !7976)
!8209 = !DILocation(line: 667, column: 5, scope: !7950)
!8210 = distinct !{!8210, !7971}
!8211 = !DILocation(line: 729, column: 1, scope: !7921)
!8212 = distinct !DISubprogram(name: "apply_lut", scope: !910, file: !910, line: 350, type: !8213, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{null, !8215, !964, !941}
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8216, size: 64, align: 64)
!8216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!8217 = !DILocalVariable(name: "lut", arg: 1, scope: !8212, file: !910, line: 350, type: !8215)
!8218 = !DILocation(line: 350, column: 39, scope: !8212)
!8219 = !DILocalVariable(name: "dst", arg: 2, scope: !8212, file: !910, line: 350, type: !964)
!8220 = !DILocation(line: 350, column: 54, scope: !8212)
!8221 = !DILocalVariable(name: "dsize", arg: 3, scope: !8212, file: !910, line: 350, type: !941)
!8222 = !DILocation(line: 350, column: 63, scope: !8212)
!8223 = !DILocalVariable(name: "i", scope: !8212, file: !910, line: 352, type: !941)
!8224 = !DILocation(line: 352, column: 9, scope: !8212)
!8225 = !DILocation(line: 354, column: 12, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8212, file: !910, line: 354, column: 5)
!8227 = !DILocation(line: 354, column: 10, scope: !8226)
!8228 = !DILocation(line: 354, column: 17, scope: !8229)
!8229 = !DILexicalBlockFile(scope: !8230, file: !910, discriminator: 1)
!8230 = distinct !DILexicalBlock(scope: !8226, file: !910, line: 354, column: 5)
!8231 = !DILocation(line: 354, column: 21, scope: !8229)
!8232 = !DILocation(line: 354, column: 19, scope: !8229)
!8233 = !DILocation(line: 354, column: 5, scope: !8229)
!8234 = !DILocation(line: 355, column: 26, scope: !8230)
!8235 = !DILocation(line: 355, column: 22, scope: !8230)
!8236 = !DILocation(line: 355, column: 18, scope: !8230)
!8237 = !DILocation(line: 355, column: 13, scope: !8230)
!8238 = !DILocation(line: 355, column: 9, scope: !8230)
!8239 = !DILocation(line: 355, column: 16, scope: !8230)
!8240 = !DILocation(line: 354, column: 28, scope: !8241)
!8241 = !DILexicalBlockFile(scope: !8230, file: !910, discriminator: 2)
!8242 = !DILocation(line: 354, column: 5, scope: !8241)
!8243 = distinct !{!8243, !8244}
!8244 = !DILocation(line: 354, column: 5, scope: !8212)
!8245 = !DILocation(line: 356, column: 1, scope: !8212)
!8246 = distinct !DISubprogram(name: "huf_unpack_enc_table", scope: !910, file: !910, line: 399, type: !8247, isLocal: true, isDefinition: true, scopeLine: 401, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!941, !2076, !1809, !1809, !7636}
!8249 = !DILocation(line: 164, column: 84, scope: !3144, inlinedAt: !8250)
!8250 = distinct !DILocation(line: 433, column: 5, scope: !8251)
!8251 = !DILexicalBlockFile(scope: !8246, file: !910, discriminator: 1)
!8252 = !DILocation(line: 165, column: 60, scope: !3144, inlinedAt: !8250)
!8253 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !8254)
!8254 = distinct !DILocation(line: 403, column: 49, scope: !8246)
!8255 = !DILocalVariable(name: "gb", arg: 1, scope: !8246, file: !910, line: 399, type: !2076)
!8256 = !DILocation(line: 399, column: 49, scope: !8246)
!8257 = !DILocalVariable(name: "im", arg: 2, scope: !8246, file: !910, line: 400, type: !1809)
!8258 = !DILocation(line: 400, column: 41, scope: !8246)
!8259 = !DILocalVariable(name: "iM", arg: 3, scope: !8246, file: !910, line: 400, type: !1809)
!8260 = !DILocation(line: 400, column: 53, scope: !8246)
!8261 = !DILocalVariable(name: "hcode", arg: 4, scope: !8246, file: !910, line: 400, type: !7636)
!8262 = !DILocation(line: 400, column: 67, scope: !8246)
!8263 = !DILocalVariable(name: "gbit", scope: !8246, file: !910, line: 402, type: !8264)
!8264 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !8265, line: 70, baseType: !8266)
!8265 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !8265, line: 61, size: 256, align: 64, elements: !8267)
!8267 = !{!8268, !8269, !8270, !8271, !8272}
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8266, file: !8265, line: 62, baseType: !944, size: 64, align: 64)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !8266, file: !8265, line: 62, baseType: !944, size: 64, align: 64, offset: 64)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8266, file: !8265, line: 67, baseType: !941, size: 32, align: 32, offset: 128)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !8266, file: !8265, line: 68, baseType: !941, size: 32, align: 32, offset: 160)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !8266, file: !8265, line: 69, baseType: !941, size: 32, align: 32, offset: 192)
!8273 = !DILocation(line: 402, column: 19, scope: !8246)
!8274 = !DILocalVariable(name: "ret", scope: !8246, file: !910, line: 403, type: !941)
!8275 = !DILocation(line: 403, column: 9, scope: !8246)
!8276 = !DILocation(line: 403, column: 37, scope: !8246)
!8277 = !DILocation(line: 403, column: 41, scope: !8246)
!8278 = !DILocation(line: 403, column: 76, scope: !8246)
!8279 = !DILocation(line: 403, column: 49, scope: !8246)
!8280 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !8254)
!8281 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !8254)
!8282 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !8254)
!8283 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !8254)
!8284 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !8254)
!8285 = !DILocation(line: 403, column: 15, scope: !8251)
!8286 = !DILocation(line: 404, column: 9, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8246, file: !910, line: 404, column: 9)
!8288 = !DILocation(line: 404, column: 13, scope: !8287)
!8289 = !DILocation(line: 404, column: 9, scope: !8246)
!8290 = !DILocation(line: 405, column: 16, scope: !8287)
!8291 = !DILocation(line: 405, column: 9, scope: !8287)
!8292 = !DILocation(line: 407, column: 5, scope: !8246)
!8293 = !DILocation(line: 407, column: 12, scope: !8294)
!8294 = !DILexicalBlockFile(scope: !8295, file: !910, discriminator: 1)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !910, line: 407, column: 5)
!8296 = distinct !DILexicalBlock(scope: !8246, file: !910, line: 407, column: 5)
!8297 = !DILocation(line: 407, column: 18, scope: !8294)
!8298 = !DILocation(line: 407, column: 15, scope: !8294)
!8299 = !DILocation(line: 407, column: 5, scope: !8294)
!8300 = !DILocalVariable(name: "l", scope: !8301, file: !910, line: 408, type: !955)
!8301 = distinct !DILexicalBlock(scope: !8295, file: !910, line: 407, column: 28)
!8302 = !DILocation(line: 408, column: 18, scope: !8301)
!8303 = !DILocation(line: 408, column: 34, scope: !8301)
!8304 = !DILocation(line: 408, column: 28, scope: !8301)
!8305 = !DILocation(line: 408, column: 22, scope: !8301)
!8306 = !DILocation(line: 408, column: 32, scope: !8301)
!8307 = !DILocation(line: 410, column: 13, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8301, file: !910, line: 410, column: 13)
!8309 = !DILocation(line: 410, column: 15, scope: !8308)
!8310 = !DILocation(line: 410, column: 13, scope: !8301)
!8311 = !DILocalVariable(name: "zerun", scope: !8312, file: !910, line: 411, type: !941)
!8312 = distinct !DILexicalBlock(scope: !8308, file: !910, line: 410, column: 22)
!8313 = !DILocation(line: 411, column: 17, scope: !8312)
!8314 = !DILocation(line: 411, column: 25, scope: !8312)
!8315 = !DILocation(line: 411, column: 44, scope: !8312)
!8316 = !DILocation(line: 413, column: 17, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8312, file: !910, line: 413, column: 17)
!8318 = !DILocation(line: 413, column: 22, scope: !8317)
!8319 = !DILocation(line: 413, column: 20, scope: !8317)
!8320 = !DILocation(line: 413, column: 30, scope: !8317)
!8321 = !DILocation(line: 413, column: 33, scope: !8317)
!8322 = !DILocation(line: 413, column: 28, scope: !8317)
!8323 = !DILocation(line: 413, column: 17, scope: !8312)
!8324 = !DILocation(line: 414, column: 17, scope: !8317)
!8325 = !DILocation(line: 416, column: 13, scope: !8312)
!8326 = !DILocation(line: 416, column: 25, scope: !8327)
!8327 = !DILexicalBlockFile(scope: !8312, file: !910, discriminator: 1)
!8328 = !DILocation(line: 416, column: 13, scope: !8327)
!8329 = !DILocation(line: 417, column: 25, scope: !8312)
!8330 = !DILocation(line: 417, column: 17, scope: !8312)
!8331 = !DILocation(line: 417, column: 29, scope: !8312)
!8332 = !DILocation(line: 416, column: 13, scope: !8333)
!8333 = !DILexicalBlockFile(scope: !8312, file: !910, discriminator: 2)
!8334 = distinct !{!8334, !8325}
!8335 = !DILocation(line: 419, column: 15, scope: !8312)
!8336 = !DILocation(line: 420, column: 9, scope: !8312)
!8337 = !DILocation(line: 420, column: 20, scope: !8338)
!8338 = !DILexicalBlockFile(scope: !8339, file: !910, discriminator: 1)
!8339 = distinct !DILexicalBlock(scope: !8308, file: !910, line: 420, column: 20)
!8340 = !DILocation(line: 420, column: 22, scope: !8338)
!8341 = !DILocalVariable(name: "zerun", scope: !8342, file: !910, line: 421, type: !941)
!8342 = distinct !DILexicalBlock(scope: !8339, file: !910, line: 420, column: 29)
!8343 = !DILocation(line: 421, column: 17, scope: !8342)
!8344 = !DILocation(line: 421, column: 25, scope: !8342)
!8345 = !DILocation(line: 421, column: 27, scope: !8342)
!8346 = !DILocation(line: 421, column: 32, scope: !8342)
!8347 = !DILocation(line: 423, column: 17, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8342, file: !910, line: 423, column: 17)
!8349 = !DILocation(line: 423, column: 22, scope: !8348)
!8350 = !DILocation(line: 423, column: 20, scope: !8348)
!8351 = !DILocation(line: 423, column: 30, scope: !8348)
!8352 = !DILocation(line: 423, column: 33, scope: !8348)
!8353 = !DILocation(line: 423, column: 28, scope: !8348)
!8354 = !DILocation(line: 423, column: 17, scope: !8342)
!8355 = !DILocation(line: 424, column: 17, scope: !8348)
!8356 = !DILocation(line: 426, column: 13, scope: !8342)
!8357 = !DILocation(line: 426, column: 25, scope: !8358)
!8358 = !DILexicalBlockFile(scope: !8342, file: !910, discriminator: 1)
!8359 = !DILocation(line: 426, column: 13, scope: !8358)
!8360 = !DILocation(line: 427, column: 25, scope: !8342)
!8361 = !DILocation(line: 427, column: 17, scope: !8342)
!8362 = !DILocation(line: 427, column: 29, scope: !8342)
!8363 = !DILocation(line: 426, column: 13, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !8342, file: !910, discriminator: 2)
!8365 = distinct !{!8365, !8356}
!8366 = !DILocation(line: 429, column: 15, scope: !8342)
!8367 = !DILocation(line: 430, column: 9, scope: !8342)
!8368 = !DILocation(line: 431, column: 5, scope: !8301)
!8369 = !DILocation(line: 407, column: 24, scope: !8370)
!8370 = !DILexicalBlockFile(scope: !8295, file: !910, discriminator: 2)
!8371 = !DILocation(line: 407, column: 5, scope: !8370)
!8372 = distinct !{!8372, !8292}
!8373 = !DILocation(line: 433, column: 22, scope: !8246)
!8374 = !DILocation(line: 433, column: 27, scope: !8246)
!8375 = !DILocation(line: 433, column: 49, scope: !8246)
!8376 = !DILocation(line: 433, column: 54, scope: !8246)
!8377 = !DILocation(line: 433, column: 5, scope: !8251)
!8378 = !DILocation(line: 167, column: 20, scope: !3144, inlinedAt: !8250)
!8379 = !DILocation(line: 167, column: 23, scope: !3144, inlinedAt: !8250)
!8380 = !DILocation(line: 167, column: 36, scope: !3144, inlinedAt: !8250)
!8381 = !DILocation(line: 167, column: 39, scope: !3144, inlinedAt: !8250)
!8382 = !DILocation(line: 167, column: 34, scope: !3144, inlinedAt: !8250)
!8383 = !DILocation(line: 167, column: 50, scope: !3144, inlinedAt: !8250)
!8384 = !DILocation(line: 167, column: 49, scope: !3144, inlinedAt: !8250)
!8385 = !DILocation(line: 167, column: 47, scope: !3144, inlinedAt: !8250)
!8386 = !DILocation(line: 167, column: 19, scope: !3144, inlinedAt: !8250)
!8387 = !DILocation(line: 167, column: 59, scope: !3923, inlinedAt: !8250)
!8388 = !DILocation(line: 167, column: 58, scope: !3923, inlinedAt: !8250)
!8389 = !DILocation(line: 167, column: 19, scope: !3923, inlinedAt: !8250)
!8390 = !DILocation(line: 167, column: 68, scope: !3927, inlinedAt: !8250)
!8391 = !DILocation(line: 167, column: 71, scope: !3927, inlinedAt: !8250)
!8392 = !DILocation(line: 167, column: 84, scope: !3927, inlinedAt: !8250)
!8393 = !DILocation(line: 167, column: 87, scope: !3927, inlinedAt: !8250)
!8394 = !DILocation(line: 167, column: 82, scope: !3927, inlinedAt: !8250)
!8395 = !DILocation(line: 167, column: 19, scope: !3927, inlinedAt: !8250)
!8396 = !DILocation(line: 167, column: 19, scope: !3934, inlinedAt: !8250)
!8397 = !DILocation(line: 167, column: 5, scope: !3934, inlinedAt: !8250)
!8398 = !DILocation(line: 167, column: 8, scope: !3934, inlinedAt: !8250)
!8399 = !DILocation(line: 167, column: 15, scope: !3934, inlinedAt: !8250)
!8400 = !DILocation(line: 434, column: 30, scope: !8246)
!8401 = !DILocation(line: 434, column: 5, scope: !8246)
!8402 = !DILocation(line: 436, column: 5, scope: !8246)
!8403 = !DILocation(line: 437, column: 1, scope: !8246)
!8404 = distinct !DISubprogram(name: "huf_build_dec_table", scope: !910, file: !910, line: 439, type: !8405, isLocal: true, isDefinition: true, scopeLine: 441, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!941, !1006, !941, !941, !7639}
!8407 = !DILocalVariable(name: "hcode", arg: 1, scope: !8404, file: !910, line: 439, type: !1006)
!8408 = !DILocation(line: 439, column: 48, scope: !8404)
!8409 = !DILocalVariable(name: "im", arg: 2, scope: !8404, file: !910, line: 439, type: !941)
!8410 = !DILocation(line: 439, column: 59, scope: !8404)
!8411 = !DILocalVariable(name: "iM", arg: 3, scope: !8404, file: !910, line: 440, type: !941)
!8412 = !DILocation(line: 440, column: 36, scope: !8404)
!8413 = !DILocalVariable(name: "hdecod", arg: 4, scope: !8404, file: !910, line: 440, type: !7639)
!8414 = !DILocation(line: 440, column: 48, scope: !8404)
!8415 = !DILocation(line: 442, column: 5, scope: !8404)
!8416 = !DILocation(line: 442, column: 12, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8418, file: !910, discriminator: 1)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !910, line: 442, column: 5)
!8419 = distinct !DILexicalBlock(scope: !8404, file: !910, line: 442, column: 5)
!8420 = !DILocation(line: 442, column: 18, scope: !8417)
!8421 = !DILocation(line: 442, column: 15, scope: !8417)
!8422 = !DILocation(line: 442, column: 5, scope: !8417)
!8423 = !DILocalVariable(name: "c", scope: !8424, file: !910, line: 443, type: !955)
!8424 = distinct !DILexicalBlock(scope: !8418, file: !910, line: 442, column: 28)
!8425 = !DILocation(line: 443, column: 18, scope: !8424)
!8426 = !DILocation(line: 443, column: 28, scope: !8424)
!8427 = !DILocation(line: 443, column: 22, scope: !8424)
!8428 = !DILocation(line: 443, column: 32, scope: !8424)
!8429 = !DILocalVariable(name: "i", scope: !8424, file: !910, line: 444, type: !941)
!8430 = !DILocation(line: 444, column: 13, scope: !8424)
!8431 = !DILocalVariable(name: "l", scope: !8424, file: !910, line: 444, type: !941)
!8432 = !DILocation(line: 444, column: 16, scope: !8424)
!8433 = !DILocation(line: 444, column: 26, scope: !8424)
!8434 = !DILocation(line: 444, column: 20, scope: !8424)
!8435 = !DILocation(line: 444, column: 30, scope: !8424)
!8436 = !DILocation(line: 446, column: 13, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8424, file: !910, line: 446, column: 13)
!8438 = !DILocation(line: 446, column: 18, scope: !8437)
!8439 = !DILocation(line: 446, column: 15, scope: !8437)
!8440 = !DILocation(line: 446, column: 13, scope: !8424)
!8441 = !DILocation(line: 447, column: 13, scope: !8437)
!8442 = !DILocation(line: 449, column: 13, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8424, file: !910, line: 449, column: 13)
!8444 = !DILocation(line: 449, column: 15, scope: !8443)
!8445 = !DILocation(line: 449, column: 13, scope: !8424)
!8446 = !DILocalVariable(name: "pl", scope: !8447, file: !910, line: 450, type: !7639)
!8447 = distinct !DILexicalBlock(scope: !8443, file: !910, line: 449, column: 21)
!8448 = !DILocation(line: 450, column: 21, scope: !8447)
!8449 = !DILocation(line: 450, column: 26, scope: !8447)
!8450 = !DILocation(line: 450, column: 36, scope: !8447)
!8451 = !DILocation(line: 450, column: 42, scope: !8447)
!8452 = !DILocation(line: 450, column: 44, scope: !8447)
!8453 = !DILocation(line: 450, column: 38, scope: !8447)
!8454 = !DILocation(line: 450, column: 33, scope: !8447)
!8455 = !DILocation(line: 451, column: 17, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8447, file: !910, line: 451, column: 17)
!8457 = !DILocation(line: 451, column: 21, scope: !8456)
!8458 = !DILocation(line: 451, column: 17, scope: !8447)
!8459 = !DILocation(line: 452, column: 17, scope: !8456)
!8460 = !DILocation(line: 454, column: 13, scope: !8447)
!8461 = !DILocation(line: 454, column: 17, scope: !8447)
!8462 = !DILocation(line: 454, column: 20, scope: !8447)
!8463 = !DILocation(line: 456, column: 32, scope: !8447)
!8464 = !DILocation(line: 456, column: 36, scope: !8447)
!8465 = !DILocation(line: 456, column: 39, scope: !8447)
!8466 = !DILocation(line: 456, column: 43, scope: !8447)
!8467 = !DILocation(line: 456, column: 47, scope: !8447)
!8468 = !DILocation(line: 456, column: 21, scope: !8447)
!8469 = !DILocation(line: 456, column: 13, scope: !8447)
!8470 = !DILocation(line: 456, column: 17, scope: !8447)
!8471 = !DILocation(line: 456, column: 19, scope: !8447)
!8472 = !DILocation(line: 457, column: 18, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8447, file: !910, line: 457, column: 17)
!8474 = !DILocation(line: 457, column: 22, scope: !8473)
!8475 = !DILocation(line: 457, column: 17, scope: !8447)
!8476 = !DILocation(line: 458, column: 17, scope: !8473)
!8477 = !DILocation(line: 460, column: 34, scope: !8447)
!8478 = !DILocation(line: 460, column: 19, scope: !8447)
!8479 = !DILocation(line: 460, column: 23, scope: !8447)
!8480 = !DILocation(line: 460, column: 27, scope: !8447)
!8481 = !DILocation(line: 460, column: 13, scope: !8447)
!8482 = !DILocation(line: 460, column: 17, scope: !8447)
!8483 = !DILocation(line: 460, column: 32, scope: !8447)
!8484 = !DILocation(line: 461, column: 9, scope: !8447)
!8485 = !DILocation(line: 461, column: 20, scope: !8486)
!8486 = !DILexicalBlockFile(scope: !8487, file: !910, discriminator: 1)
!8487 = distinct !DILexicalBlock(scope: !8443, file: !910, line: 461, column: 20)
!8488 = !DILocalVariable(name: "pl", scope: !8489, file: !910, line: 462, type: !7639)
!8489 = distinct !DILexicalBlock(scope: !8487, file: !910, line: 461, column: 23)
!8490 = !DILocation(line: 462, column: 21, scope: !8489)
!8491 = !DILocation(line: 462, column: 26, scope: !8489)
!8492 = !DILocation(line: 462, column: 36, scope: !8489)
!8493 = !DILocation(line: 462, column: 47, scope: !8489)
!8494 = !DILocation(line: 462, column: 45, scope: !8489)
!8495 = !DILocation(line: 462, column: 38, scope: !8489)
!8496 = !DILocation(line: 462, column: 33, scope: !8489)
!8497 = !DILocation(line: 464, column: 33, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8489, file: !910, line: 464, column: 13)
!8499 = !DILocation(line: 464, column: 31, scope: !8498)
!8500 = !DILocation(line: 464, column: 24, scope: !8498)
!8501 = !DILocation(line: 464, column: 20, scope: !8498)
!8502 = !DILocation(line: 464, column: 18, scope: !8498)
!8503 = !DILocation(line: 464, column: 37, scope: !8504)
!8504 = !DILexicalBlockFile(scope: !8505, file: !910, discriminator: 1)
!8505 = distinct !DILexicalBlock(scope: !8498, file: !910, line: 464, column: 13)
!8506 = !DILocation(line: 464, column: 39, scope: !8504)
!8507 = !DILocation(line: 464, column: 13, scope: !8504)
!8508 = !DILocation(line: 465, column: 21, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !910, line: 465, column: 21)
!8510 = distinct !DILexicalBlock(scope: !8505, file: !910, line: 464, column: 55)
!8511 = !DILocation(line: 465, column: 25, scope: !8509)
!8512 = !DILocation(line: 465, column: 29, scope: !8509)
!8513 = !DILocation(line: 465, column: 32, scope: !8514)
!8514 = !DILexicalBlockFile(scope: !8509, file: !910, discriminator: 1)
!8515 = !DILocation(line: 465, column: 36, scope: !8514)
!8516 = !DILocation(line: 465, column: 21, scope: !8514)
!8517 = !DILocation(line: 466, column: 21, scope: !8509)
!8518 = !DILocation(line: 467, column: 27, scope: !8510)
!8519 = !DILocation(line: 467, column: 17, scope: !8510)
!8520 = !DILocation(line: 467, column: 21, scope: !8510)
!8521 = !DILocation(line: 467, column: 25, scope: !8510)
!8522 = !DILocation(line: 468, column: 27, scope: !8510)
!8523 = !DILocation(line: 468, column: 17, scope: !8510)
!8524 = !DILocation(line: 468, column: 21, scope: !8510)
!8525 = !DILocation(line: 468, column: 25, scope: !8510)
!8526 = !DILocation(line: 469, column: 13, scope: !8510)
!8527 = !DILocation(line: 464, column: 45, scope: !8528)
!8528 = !DILexicalBlockFile(scope: !8505, file: !910, discriminator: 2)
!8529 = !DILocation(line: 464, column: 51, scope: !8528)
!8530 = !DILocation(line: 464, column: 13, scope: !8528)
!8531 = distinct !{!8531, !8532}
!8532 = !DILocation(line: 464, column: 13, scope: !8489)
!8533 = !DILocation(line: 470, column: 9, scope: !8489)
!8534 = !DILocation(line: 471, column: 5, scope: !8424)
!8535 = !DILocation(line: 442, column: 24, scope: !8536)
!8536 = !DILexicalBlockFile(scope: !8418, file: !910, discriminator: 2)
!8537 = !DILocation(line: 442, column: 5, scope: !8536)
!8538 = distinct !{!8538, !8415}
!8539 = !DILocation(line: 473, column: 5, scope: !8404)
!8540 = !DILocation(line: 474, column: 1, scope: !8404)
!8541 = distinct !DISubprogram(name: "huf_decode", scope: !910, file: !910, line: 505, type: !8542, isLocal: true, isDefinition: true, scopeLine: 508, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!8542 = !DISubroutineType(types: !8543)
!8543 = !{!941, !1006, !8544, !2076, !941, !941, !941, !964}
!8544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8545, size: 64, align: 64)
!8545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7640)
!8546 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !8547)
!8547 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8548)
!8548 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8549)
!8549 = distinct !DILocation(line: 525, column: 69, scope: !8550)
!8550 = !DILexicalBlockFile(scope: !8551, file: !910, discriminator: 2)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !910, line: 525, column: 52)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !910, line: 525, column: 44)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !910, line: 525, column: 38)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !910, line: 525, column: 23)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !910, line: 525, column: 17)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !910, line: 523, column: 25)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !910, line: 523, column: 17)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !910, line: 520, column: 26)
!8559 = distinct !DILexicalBlock(scope: !8541, file: !910, line: 517, column: 29)
!8560 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !8548)
!8561 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !8549)
!8562 = !DILocation(line: 154, column: 102, scope: !2148, inlinedAt: !8563)
!8563 = distinct !DILocation(line: 535, column: 38, scope: !8564)
!8564 = !DILexicalBlockFile(scope: !8565, file: !910, discriminator: 2)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !910, line: 532, column: 46)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !910, line: 532, column: 17)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !910, line: 532, column: 17)
!8568 = distinct !DILexicalBlock(scope: !8557, file: !910, line: 526, column: 20)
!8569 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !8570)
!8570 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8571)
!8571 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8572)
!8572 = distinct !DILocation(line: 536, column: 42, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8565, file: !910, line: 536, column: 25)
!8574 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !8571)
!8575 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !8572)
!8576 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !8577)
!8577 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8578)
!8578 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8579)
!8579 = distinct !DILocation(line: 542, column: 82, scope: !8580)
!8580 = !DILexicalBlockFile(scope: !8581, file: !910, discriminator: 2)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !910, line: 542, column: 65)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !910, line: 542, column: 57)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !910, line: 542, column: 51)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !910, line: 542, column: 35)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !910, line: 542, column: 29)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !910, line: 540, column: 67)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !910, line: 539, column: 29)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !910, line: 538, column: 34)
!8589 = distinct !DILexicalBlock(scope: !8565, file: !910, line: 538, column: 25)
!8590 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !8578)
!8591 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !8579)
!8592 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !8593)
!8593 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8594)
!8594 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8595)
!8595 = distinct !DILocation(line: 563, column: 65, scope: !8596)
!8596 = !DILexicalBlockFile(scope: !8597, file: !910, discriminator: 2)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !910, line: 563, column: 48)
!8598 = distinct !DILexicalBlock(scope: !8599, file: !910, line: 563, column: 40)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !910, line: 563, column: 34)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !910, line: 563, column: 19)
!8601 = distinct !DILexicalBlock(scope: !8602, file: !910, line: 563, column: 13)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !910, line: 561, column: 37)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !910, line: 561, column: 13)
!8604 = distinct !DILexicalBlock(scope: !8541, file: !910, line: 558, column: 20)
!8605 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !8594)
!8606 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !8595)
!8607 = !DILocation(line: 95, column: 95, scope: !3193, inlinedAt: !8608)
!8608 = distinct !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8609)
!8609 = distinct !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8610)
!8610 = distinct !DILocation(line: 518, column: 26, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8559, file: !910, line: 518, column: 9)
!8612 = !DILocation(line: 95, column: 843, scope: !3196, inlinedAt: !8609)
!8613 = !DILocation(line: 95, column: 985, scope: !3199, inlinedAt: !8610)
!8614 = !DILocalVariable(name: "hcode", arg: 1, scope: !8541, file: !910, line: 505, type: !1006)
!8615 = !DILocation(line: 505, column: 39, scope: !8541)
!8616 = !DILocalVariable(name: "hdecod", arg: 2, scope: !8541, file: !910, line: 505, type: !8544)
!8617 = !DILocation(line: 505, column: 60, scope: !8541)
!8618 = !DILocalVariable(name: "gb", arg: 3, scope: !8541, file: !910, line: 506, type: !2076)
!8619 = !DILocation(line: 506, column: 39, scope: !8541)
!8620 = !DILocalVariable(name: "nbits", arg: 4, scope: !8541, file: !910, line: 506, type: !941)
!8621 = !DILocation(line: 506, column: 47, scope: !8541)
!8622 = !DILocalVariable(name: "rlc", arg: 5, scope: !8541, file: !910, line: 507, type: !941)
!8623 = !DILocation(line: 507, column: 27, scope: !8541)
!8624 = !DILocalVariable(name: "no", arg: 6, scope: !8541, file: !910, line: 507, type: !941)
!8625 = !DILocation(line: 507, column: 36, scope: !8541)
!8626 = !DILocalVariable(name: "out", arg: 7, scope: !8541, file: !910, line: 507, type: !964)
!8627 = !DILocation(line: 507, column: 50, scope: !8541)
!8628 = !DILocalVariable(name: "c", scope: !8541, file: !910, line: 509, type: !955)
!8629 = !DILocation(line: 509, column: 14, scope: !8541)
!8630 = !DILocalVariable(name: "outb", scope: !8541, file: !910, line: 510, type: !964)
!8631 = !DILocation(line: 510, column: 15, scope: !8541)
!8632 = !DILocation(line: 510, column: 22, scope: !8541)
!8633 = !DILocalVariable(name: "oe", scope: !8541, file: !910, line: 511, type: !964)
!8634 = !DILocation(line: 511, column: 15, scope: !8541)
!8635 = !DILocation(line: 511, column: 20, scope: !8541)
!8636 = !DILocation(line: 511, column: 26, scope: !8541)
!8637 = !DILocation(line: 511, column: 24, scope: !8541)
!8638 = !DILocalVariable(name: "ie", scope: !8541, file: !910, line: 512, type: !944)
!8639 = !DILocation(line: 512, column: 20, scope: !8541)
!8640 = !DILocation(line: 512, column: 25, scope: !8541)
!8641 = !DILocation(line: 512, column: 29, scope: !8541)
!8642 = !DILocation(line: 512, column: 39, scope: !8541)
!8643 = !DILocation(line: 512, column: 45, scope: !8541)
!8644 = !DILocation(line: 512, column: 50, scope: !8541)
!8645 = !DILocation(line: 512, column: 36, scope: !8541)
!8646 = !DILocalVariable(name: "cs", scope: !8541, file: !910, line: 513, type: !946)
!8647 = !DILocation(line: 513, column: 13, scope: !8541)
!8648 = !DILocalVariable(name: "s", scope: !8541, file: !910, line: 514, type: !965)
!8649 = !DILocation(line: 514, column: 14, scope: !8541)
!8650 = !DILocalVariable(name: "i", scope: !8541, file: !910, line: 515, type: !941)
!8651 = !DILocation(line: 515, column: 9, scope: !8541)
!8652 = !DILocalVariable(name: "lc", scope: !8541, file: !910, line: 515, type: !941)
!8653 = !DILocation(line: 515, column: 12, scope: !8541)
!8654 = !DILocation(line: 517, column: 5, scope: !8541)
!8655 = !DILocation(line: 517, column: 12, scope: !8656)
!8656 = !DILexicalBlockFile(scope: !8541, file: !910, discriminator: 1)
!8657 = !DILocation(line: 517, column: 16, scope: !8656)
!8658 = !DILocation(line: 517, column: 25, scope: !8656)
!8659 = !DILocation(line: 517, column: 23, scope: !8656)
!8660 = !DILocation(line: 517, column: 5, scope: !8656)
!8661 = !DILocation(line: 518, column: 16, scope: !8611)
!8662 = !DILocation(line: 518, column: 18, scope: !8611)
!8663 = !DILocation(line: 518, column: 47, scope: !8611)
!8664 = !DILocation(line: 518, column: 26, scope: !8611)
!8665 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !8610)
!8666 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !8610)
!8667 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !8610)
!8668 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !8610)
!8669 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !8610)
!8670 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !8610)
!8671 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !8610)
!8672 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !8610)
!8673 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !8610)
!8674 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !8610)
!8675 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !8610)
!8676 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !8610)
!8677 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !8610)
!8678 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !8610)
!8679 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8610)
!8680 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !8609)
!8681 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !8609)
!8682 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8609)
!8683 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !8608)
!8684 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !8608)
!8685 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !8608)
!8686 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !8608)
!8687 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !8608)
!8688 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !8608)
!8689 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !8608)
!8690 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !8610)
!8691 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !8610)
!8692 = !DILocation(line: 518, column: 24, scope: !8611)
!8693 = !DILocation(line: 518, column: 13, scope: !8611)
!8694 = !DILocation(line: 518, column: 55, scope: !8611)
!8695 = !DILocation(line: 520, column: 9, scope: !8559)
!8696 = !DILocation(line: 520, column: 16, scope: !8697)
!8697 = !DILexicalBlockFile(scope: !8559, file: !910, discriminator: 1)
!8698 = !DILocation(line: 520, column: 19, scope: !8697)
!8699 = !DILocation(line: 520, column: 9, scope: !8697)
!8700 = !DILocalVariable(name: "pl", scope: !8558, file: !910, line: 521, type: !8545)
!8701 = !DILocation(line: 521, column: 26, scope: !8558)
!8702 = !DILocation(line: 521, column: 39, scope: !8558)
!8703 = !DILocation(line: 521, column: 45, scope: !8558)
!8704 = !DILocation(line: 521, column: 48, scope: !8558)
!8705 = !DILocation(line: 521, column: 41, scope: !8558)
!8706 = !DILocation(line: 521, column: 55, scope: !8558)
!8707 = !DILocation(line: 521, column: 31, scope: !8558)
!8708 = !DILocation(line: 523, column: 20, scope: !8557)
!8709 = !DILocation(line: 523, column: 17, scope: !8557)
!8710 = !DILocation(line: 523, column: 17, scope: !8558)
!8711 = !DILocation(line: 524, column: 26, scope: !8556)
!8712 = !DILocation(line: 524, column: 20, scope: !8556)
!8713 = !DILocation(line: 525, column: 26, scope: !8554)
!8714 = !DILocation(line: 525, column: 33, scope: !8554)
!8715 = !DILocation(line: 525, column: 30, scope: !8554)
!8716 = !DILocation(line: 525, column: 23, scope: !8555)
!8717 = !DILocation(line: 525, column: 44, scope: !8718)
!8718 = !DILexicalBlockFile(scope: !8552, file: !910, discriminator: 1)
!8719 = !DILocation(line: 525, column: 47, scope: !8718)
!8720 = !DILocation(line: 525, column: 59, scope: !8550)
!8721 = !DILocation(line: 525, column: 61, scope: !8550)
!8722 = !DILocation(line: 525, column: 90, scope: !8550)
!8723 = !DILocation(line: 525, column: 69, scope: !8550)
!8724 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !8549)
!8725 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !8549)
!8726 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !8549)
!8727 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !8549)
!8728 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !8549)
!8729 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !8549)
!8730 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !8549)
!8731 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !8549)
!8732 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !8549)
!8733 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !8549)
!8734 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !8549)
!8735 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !8549)
!8736 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !8549)
!8737 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !8549)
!8738 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8549)
!8739 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !8548)
!8740 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !8548)
!8741 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8548)
!8742 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !8547)
!8743 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !8547)
!8744 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !8547)
!8745 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !8547)
!8746 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !8547)
!8747 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !8547)
!8748 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !8547)
!8749 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !8549)
!8750 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !8549)
!8751 = !DILocation(line: 525, column: 67, scope: !8550)
!8752 = !DILocation(line: 525, column: 56, scope: !8550)
!8753 = !DILocation(line: 525, column: 98, scope: !8550)
!8754 = !DILocation(line: 525, column: 104, scope: !8550)
!8755 = !DILocation(line: 525, column: 110, scope: !8756)
!8756 = !DILexicalBlockFile(scope: !8553, file: !910, discriminator: 3)
!8757 = !DILocation(line: 525, column: 121, scope: !8756)
!8758 = !DILocation(line: 525, column: 126, scope: !8756)
!8759 = !DILocation(line: 525, column: 123, scope: !8756)
!8760 = !DILocation(line: 525, column: 119, scope: !8756)
!8761 = !DILocation(line: 525, column: 134, scope: !8756)
!8762 = !DILocation(line: 525, column: 140, scope: !8756)
!8763 = !DILocation(line: 525, column: 138, scope: !8756)
!8764 = !DILocation(line: 525, column: 145, scope: !8756)
!8765 = !DILocation(line: 525, column: 143, scope: !8756)
!8766 = !DILocation(line: 525, column: 148, scope: !8756)
!8767 = !DILocation(line: 525, column: 151, scope: !8768)
!8768 = !DILexicalBlockFile(scope: !8769, file: !910, discriminator: 4)
!8769 = distinct !DILexicalBlock(scope: !8553, file: !910, line: 525, column: 134)
!8770 = !DILocation(line: 525, column: 158, scope: !8768)
!8771 = !DILocation(line: 525, column: 155, scope: !8768)
!8772 = !DILocation(line: 525, column: 134, scope: !8768)
!8773 = !DILocation(line: 525, column: 164, scope: !8774)
!8774 = !DILexicalBlockFile(scope: !8769, file: !910, discriminator: 5)
!8775 = !DILocation(line: 525, column: 249, scope: !8776)
!8776 = !DILexicalBlockFile(scope: !8553, file: !910, discriminator: 6)
!8777 = !DILocation(line: 525, column: 247, scope: !8776)
!8778 = !DILocation(line: 525, column: 258, scope: !8776)
!8779 = !DILocation(line: 525, column: 267, scope: !8780)
!8780 = !DILexicalBlockFile(scope: !8553, file: !910, discriminator: 7)
!8781 = !DILocation(line: 525, column: 265, scope: !8780)
!8782 = !DILocation(line: 525, column: 270, scope: !8780)
!8783 = !DILocation(line: 525, column: 258, scope: !8780)
!8784 = !DILocation(line: 525, column: 284, scope: !8785)
!8785 = !DILexicalBlockFile(scope: !8553, file: !910, discriminator: 8)
!8786 = !DILocation(line: 525, column: 279, scope: !8785)
!8787 = !DILocation(line: 525, column: 282, scope: !8785)
!8788 = !DILocation(line: 525, column: 258, scope: !8785)
!8789 = distinct !{!8789, !8790}
!8790 = !DILocation(line: 525, column: 258, scope: !8553)
!8791 = !DILocation(line: 525, column: 287, scope: !8792)
!8792 = !DILexicalBlockFile(scope: !8553, file: !910, discriminator: 9)
!8793 = !DILocation(line: 525, column: 298, scope: !8794)
!8794 = !DILexicalBlockFile(scope: !8795, file: !910, discriminator: 10)
!8795 = distinct !DILexicalBlock(scope: !8554, file: !910, line: 525, column: 298)
!8796 = !DILocation(line: 525, column: 304, scope: !8794)
!8797 = !DILocation(line: 525, column: 302, scope: !8794)
!8798 = !DILocation(line: 525, column: 322, scope: !8799)
!8799 = !DILexicalBlockFile(scope: !8800, file: !910, discriminator: 11)
!8800 = distinct !DILexicalBlock(scope: !8795, file: !910, line: 525, column: 308)
!8801 = !DILocation(line: 525, column: 319, scope: !8799)
!8802 = !DILocation(line: 525, column: 314, scope: !8799)
!8803 = !DILocation(line: 525, column: 317, scope: !8799)
!8804 = !DILocation(line: 525, column: 327, scope: !8799)
!8805 = !DILocation(line: 525, column: 336, scope: !8806)
!8806 = !DILexicalBlockFile(scope: !8807, file: !910, discriminator: 12)
!8807 = distinct !DILexicalBlock(scope: !8795, file: !910, line: 525, column: 334)
!8808 = !DILocation(line: 526, column: 13, scope: !8556)
!8809 = !DILocalVariable(name: "j", scope: !8568, file: !910, line: 527, type: !941)
!8810 = !DILocation(line: 527, column: 21, scope: !8568)
!8811 = !DILocation(line: 529, column: 25, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8568, file: !910, line: 529, column: 21)
!8813 = !DILocation(line: 529, column: 22, scope: !8812)
!8814 = !DILocation(line: 529, column: 21, scope: !8568)
!8815 = !DILocation(line: 530, column: 21, scope: !8812)
!8816 = !DILocation(line: 532, column: 24, scope: !8567)
!8817 = !DILocation(line: 532, column: 22, scope: !8567)
!8818 = !DILocation(line: 532, column: 29, scope: !8819)
!8819 = !DILexicalBlockFile(scope: !8566, file: !910, discriminator: 1)
!8820 = !DILocation(line: 532, column: 36, scope: !8819)
!8821 = !DILocation(line: 532, column: 31, scope: !8819)
!8822 = !DILocation(line: 532, column: 17, scope: !8819)
!8823 = !DILocalVariable(name: "l", scope: !8565, file: !910, line: 533, type: !941)
!8824 = !DILocation(line: 533, column: 25, scope: !8565)
!8825 = !DILocation(line: 533, column: 40, scope: !8565)
!8826 = !DILocation(line: 533, column: 35, scope: !8565)
!8827 = !DILocation(line: 533, column: 38, scope: !8565)
!8828 = !DILocation(line: 533, column: 29, scope: !8565)
!8829 = !DILocation(line: 533, column: 44, scope: !8565)
!8830 = !DILocation(line: 535, column: 21, scope: !8565)
!8831 = !DILocation(line: 535, column: 28, scope: !8832)
!8832 = !DILexicalBlockFile(scope: !8565, file: !910, discriminator: 1)
!8833 = !DILocation(line: 535, column: 33, scope: !8832)
!8834 = !DILocation(line: 535, column: 31, scope: !8832)
!8835 = !DILocation(line: 535, column: 35, scope: !8832)
!8836 = !DILocation(line: 535, column: 65, scope: !8564)
!8837 = !DILocation(line: 535, column: 38, scope: !8564)
!8838 = !DILocation(line: 156, column: 12, scope: !2148, inlinedAt: !8563)
!8839 = !DILocation(line: 156, column: 15, scope: !2148, inlinedAt: !8563)
!8840 = !DILocation(line: 156, column: 28, scope: !2148, inlinedAt: !8563)
!8841 = !DILocation(line: 156, column: 31, scope: !2148, inlinedAt: !8563)
!8842 = !DILocation(line: 156, column: 26, scope: !2148, inlinedAt: !8563)
!8843 = !DILocation(line: 535, column: 69, scope: !8564)
!8844 = !DILocation(line: 535, column: 21, scope: !8845)
!8845 = !DILexicalBlockFile(scope: !8565, file: !910, discriminator: 3)
!8846 = !DILocation(line: 536, column: 32, scope: !8573)
!8847 = !DILocation(line: 536, column: 34, scope: !8573)
!8848 = !DILocation(line: 536, column: 63, scope: !8573)
!8849 = !DILocation(line: 536, column: 42, scope: !8573)
!8850 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !8572)
!8851 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !8572)
!8852 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !8572)
!8853 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !8572)
!8854 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !8572)
!8855 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !8572)
!8856 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !8572)
!8857 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !8572)
!8858 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !8572)
!8859 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !8572)
!8860 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !8572)
!8861 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !8572)
!8862 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !8572)
!8863 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !8572)
!8864 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8572)
!8865 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !8571)
!8866 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !8571)
!8867 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8571)
!8868 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !8570)
!8869 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !8570)
!8870 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !8570)
!8871 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !8570)
!8872 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !8570)
!8873 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !8570)
!8874 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !8570)
!8875 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !8572)
!8876 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !8572)
!8877 = !DILocation(line: 536, column: 40, scope: !8573)
!8878 = !DILocation(line: 536, column: 29, scope: !8573)
!8879 = !DILocation(line: 536, column: 71, scope: !8573)
!8880 = !DILocation(line: 535, column: 21, scope: !8881)
!8881 = !DILexicalBlockFile(scope: !8565, file: !910, discriminator: 4)
!8882 = distinct !{!8882, !8830}
!8883 = !DILocation(line: 538, column: 25, scope: !8589)
!8884 = !DILocation(line: 538, column: 31, scope: !8589)
!8885 = !DILocation(line: 538, column: 28, scope: !8589)
!8886 = !DILocation(line: 538, column: 25, scope: !8565)
!8887 = !DILocation(line: 539, column: 41, scope: !8587)
!8888 = !DILocation(line: 539, column: 36, scope: !8587)
!8889 = !DILocation(line: 539, column: 39, scope: !8587)
!8890 = !DILocation(line: 539, column: 30, scope: !8587)
!8891 = !DILocation(line: 539, column: 45, scope: !8587)
!8892 = !DILocation(line: 540, column: 31, scope: !8587)
!8893 = !DILocation(line: 540, column: 37, scope: !8587)
!8894 = !DILocation(line: 540, column: 42, scope: !8587)
!8895 = !DILocation(line: 540, column: 40, scope: !8587)
!8896 = !DILocation(line: 540, column: 33, scope: !8587)
!8897 = !DILocation(line: 540, column: 57, scope: !8587)
!8898 = !DILocation(line: 540, column: 54, scope: !8587)
!8899 = !DILocation(line: 540, column: 60, scope: !8587)
!8900 = !DILocation(line: 540, column: 46, scope: !8587)
!8901 = !DILocation(line: 539, column: 51, scope: !8587)
!8902 = !DILocation(line: 539, column: 29, scope: !8588)
!8903 = !DILocation(line: 541, column: 35, scope: !8586)
!8904 = !DILocation(line: 541, column: 32, scope: !8586)
!8905 = !DILocation(line: 542, column: 40, scope: !8584)
!8906 = !DILocation(line: 542, column: 35, scope: !8584)
!8907 = !DILocation(line: 542, column: 38, scope: !8584)
!8908 = !DILocation(line: 542, column: 46, scope: !8584)
!8909 = !DILocation(line: 542, column: 43, scope: !8584)
!8910 = !DILocation(line: 542, column: 35, scope: !8585)
!8911 = !DILocation(line: 542, column: 57, scope: !8912)
!8912 = !DILexicalBlockFile(scope: !8582, file: !910, discriminator: 1)
!8913 = !DILocation(line: 542, column: 60, scope: !8912)
!8914 = !DILocation(line: 542, column: 72, scope: !8580)
!8915 = !DILocation(line: 542, column: 74, scope: !8580)
!8916 = !DILocation(line: 542, column: 103, scope: !8580)
!8917 = !DILocation(line: 542, column: 82, scope: !8580)
!8918 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !8579)
!8919 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !8579)
!8920 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !8579)
!8921 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !8579)
!8922 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !8579)
!8923 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !8579)
!8924 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !8579)
!8925 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !8579)
!8926 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !8579)
!8927 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !8579)
!8928 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !8579)
!8929 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !8579)
!8930 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !8579)
!8931 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !8579)
!8932 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8579)
!8933 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !8578)
!8934 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !8578)
!8935 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8578)
!8936 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !8577)
!8937 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !8577)
!8938 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !8577)
!8939 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !8577)
!8940 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !8577)
!8941 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !8577)
!8942 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !8577)
!8943 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !8579)
!8944 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !8579)
!8945 = !DILocation(line: 542, column: 80, scope: !8580)
!8946 = !DILocation(line: 542, column: 69, scope: !8580)
!8947 = !DILocation(line: 542, column: 111, scope: !8580)
!8948 = !DILocation(line: 542, column: 117, scope: !8580)
!8949 = !DILocation(line: 542, column: 123, scope: !8950)
!8950 = !DILexicalBlockFile(scope: !8583, file: !910, discriminator: 3)
!8951 = !DILocation(line: 542, column: 134, scope: !8950)
!8952 = !DILocation(line: 542, column: 139, scope: !8950)
!8953 = !DILocation(line: 542, column: 136, scope: !8950)
!8954 = !DILocation(line: 542, column: 132, scope: !8950)
!8955 = !DILocation(line: 542, column: 147, scope: !8950)
!8956 = !DILocation(line: 542, column: 153, scope: !8950)
!8957 = !DILocation(line: 542, column: 151, scope: !8950)
!8958 = !DILocation(line: 542, column: 158, scope: !8950)
!8959 = !DILocation(line: 542, column: 156, scope: !8950)
!8960 = !DILocation(line: 542, column: 161, scope: !8950)
!8961 = !DILocation(line: 542, column: 164, scope: !8962)
!8962 = !DILexicalBlockFile(scope: !8963, file: !910, discriminator: 4)
!8963 = distinct !DILexicalBlock(scope: !8583, file: !910, line: 542, column: 147)
!8964 = !DILocation(line: 542, column: 171, scope: !8962)
!8965 = !DILocation(line: 542, column: 168, scope: !8962)
!8966 = !DILocation(line: 542, column: 147, scope: !8962)
!8967 = !DILocation(line: 542, column: 177, scope: !8968)
!8968 = !DILexicalBlockFile(scope: !8963, file: !910, discriminator: 5)
!8969 = !DILocation(line: 542, column: 262, scope: !8970)
!8970 = !DILexicalBlockFile(scope: !8583, file: !910, discriminator: 6)
!8971 = !DILocation(line: 542, column: 260, scope: !8970)
!8972 = !DILocation(line: 542, column: 271, scope: !8970)
!8973 = !DILocation(line: 542, column: 280, scope: !8974)
!8974 = !DILexicalBlockFile(scope: !8583, file: !910, discriminator: 7)
!8975 = !DILocation(line: 542, column: 278, scope: !8974)
!8976 = !DILocation(line: 542, column: 283, scope: !8974)
!8977 = !DILocation(line: 542, column: 271, scope: !8974)
!8978 = !DILocation(line: 542, column: 297, scope: !8979)
!8979 = !DILexicalBlockFile(scope: !8583, file: !910, discriminator: 8)
!8980 = !DILocation(line: 542, column: 292, scope: !8979)
!8981 = !DILocation(line: 542, column: 295, scope: !8979)
!8982 = !DILocation(line: 542, column: 271, scope: !8979)
!8983 = distinct !{!8983, !8984}
!8984 = !DILocation(line: 542, column: 271, scope: !8583)
!8985 = !DILocation(line: 542, column: 300, scope: !8986)
!8986 = !DILexicalBlockFile(scope: !8583, file: !910, discriminator: 9)
!8987 = !DILocation(line: 542, column: 311, scope: !8988)
!8988 = !DILexicalBlockFile(scope: !8989, file: !910, discriminator: 10)
!8989 = distinct !DILexicalBlock(scope: !8584, file: !910, line: 542, column: 311)
!8990 = !DILocation(line: 542, column: 317, scope: !8988)
!8991 = !DILocation(line: 542, column: 315, scope: !8988)
!8992 = !DILocation(line: 542, column: 337, scope: !8993)
!8993 = !DILexicalBlockFile(scope: !8994, file: !910, discriminator: 11)
!8994 = distinct !DILexicalBlock(scope: !8989, file: !910, line: 542, column: 321)
!8995 = !DILocation(line: 542, column: 332, scope: !8993)
!8996 = !DILocation(line: 542, column: 335, scope: !8993)
!8997 = !DILocation(line: 542, column: 327, scope: !8993)
!8998 = !DILocation(line: 542, column: 330, scope: !8993)
!8999 = !DILocation(line: 542, column: 341, scope: !8993)
!9000 = !DILocation(line: 542, column: 350, scope: !9001)
!9001 = !DILexicalBlockFile(scope: !9002, file: !910, discriminator: 12)
!9002 = distinct !DILexicalBlock(scope: !8989, file: !910, line: 542, column: 348)
!9003 = !DILocation(line: 543, column: 29, scope: !8586)
!9004 = !DILocation(line: 545, column: 21, scope: !8588)
!9005 = !DILocation(line: 546, column: 17, scope: !8565)
!9006 = !DILocation(line: 532, column: 42, scope: !9007)
!9007 = !DILexicalBlockFile(scope: !8566, file: !910, discriminator: 2)
!9008 = !DILocation(line: 532, column: 17, scope: !9007)
!9009 = distinct !{!9009, !9010}
!9010 = !DILocation(line: 532, column: 17, scope: !8568)
!9011 = !DILocation(line: 548, column: 21, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8568, file: !910, line: 548, column: 21)
!9013 = !DILocation(line: 548, column: 29, scope: !9012)
!9014 = !DILocation(line: 548, column: 23, scope: !9012)
!9015 = !DILocation(line: 548, column: 21, scope: !8568)
!9016 = !DILocation(line: 549, column: 21, scope: !9012)
!9017 = !DILocation(line: 520, column: 9, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !8559, file: !910, discriminator: 2)
!9019 = distinct !{!9019, !8695}
!9020 = !DILocation(line: 517, column: 5, scope: !9021)
!9021 = !DILexicalBlockFile(scope: !8541, file: !910, discriminator: 2)
!9022 = distinct !{!9022, !8654}
!9023 = !DILocation(line: 554, column: 14, scope: !8541)
!9024 = !DILocation(line: 554, column: 12, scope: !8541)
!9025 = !DILocation(line: 554, column: 21, scope: !8541)
!9026 = !DILocation(line: 554, column: 7, scope: !8541)
!9027 = !DILocation(line: 555, column: 11, scope: !8541)
!9028 = !DILocation(line: 555, column: 7, scope: !8541)
!9029 = !DILocation(line: 556, column: 11, scope: !8541)
!9030 = !DILocation(line: 556, column: 8, scope: !8541)
!9031 = !DILocation(line: 558, column: 5, scope: !8541)
!9032 = !DILocation(line: 558, column: 12, scope: !8656)
!9033 = !DILocation(line: 558, column: 15, scope: !8656)
!9034 = !DILocation(line: 558, column: 5, scope: !8656)
!9035 = !DILocalVariable(name: "pl", scope: !8604, file: !910, line: 559, type: !8545)
!9036 = !DILocation(line: 559, column: 22, scope: !8604)
!9037 = !DILocation(line: 559, column: 35, scope: !8604)
!9038 = !DILocation(line: 559, column: 46, scope: !8604)
!9039 = !DILocation(line: 559, column: 44, scope: !8604)
!9040 = !DILocation(line: 559, column: 37, scope: !8604)
!9041 = !DILocation(line: 559, column: 51, scope: !8604)
!9042 = !DILocation(line: 559, column: 27, scope: !8604)
!9043 = !DILocation(line: 561, column: 16, scope: !8603)
!9044 = !DILocation(line: 561, column: 13, scope: !8603)
!9045 = !DILocation(line: 561, column: 20, scope: !8603)
!9046 = !DILocation(line: 561, column: 23, scope: !9047)
!9047 = !DILexicalBlockFile(scope: !8603, file: !910, discriminator: 1)
!9048 = !DILocation(line: 561, column: 32, scope: !9047)
!9049 = !DILocation(line: 561, column: 26, scope: !9047)
!9050 = !DILocation(line: 561, column: 13, scope: !9047)
!9051 = !DILocation(line: 562, column: 22, scope: !8602)
!9052 = !DILocation(line: 562, column: 16, scope: !8602)
!9053 = !DILocation(line: 563, column: 22, scope: !8600)
!9054 = !DILocation(line: 563, column: 29, scope: !8600)
!9055 = !DILocation(line: 563, column: 26, scope: !8600)
!9056 = !DILocation(line: 563, column: 19, scope: !8601)
!9057 = !DILocation(line: 563, column: 40, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !8598, file: !910, discriminator: 1)
!9059 = !DILocation(line: 563, column: 43, scope: !9058)
!9060 = !DILocation(line: 563, column: 55, scope: !8596)
!9061 = !DILocation(line: 563, column: 57, scope: !8596)
!9062 = !DILocation(line: 563, column: 86, scope: !8596)
!9063 = !DILocation(line: 563, column: 65, scope: !8596)
!9064 = !DILocation(line: 95, column: 994, scope: !3500, inlinedAt: !8595)
!9065 = !DILocation(line: 95, column: 997, scope: !3500, inlinedAt: !8595)
!9066 = !DILocation(line: 95, column: 1010, scope: !3500, inlinedAt: !8595)
!9067 = !DILocation(line: 95, column: 1013, scope: !3500, inlinedAt: !8595)
!9068 = !DILocation(line: 95, column: 1008, scope: !3500, inlinedAt: !8595)
!9069 = !DILocation(line: 95, column: 1020, scope: !3500, inlinedAt: !8595)
!9070 = !DILocation(line: 95, column: 994, scope: !3199, inlinedAt: !8595)
!9071 = !DILocation(line: 95, column: 1039, scope: !3508, inlinedAt: !8595)
!9072 = !DILocation(line: 95, column: 1042, scope: !3508, inlinedAt: !8595)
!9073 = !DILocation(line: 95, column: 1027, scope: !3508, inlinedAt: !8595)
!9074 = !DILocation(line: 95, column: 1030, scope: !3508, inlinedAt: !8595)
!9075 = !DILocation(line: 95, column: 1037, scope: !3508, inlinedAt: !8595)
!9076 = !DILocation(line: 95, column: 1054, scope: !3508, inlinedAt: !8595)
!9077 = !DILocation(line: 95, column: 1095, scope: !3198, inlinedAt: !8595)
!9078 = !DILocation(line: 95, column: 1073, scope: !3198, inlinedAt: !8595)
!9079 = !DILocation(line: 95, column: 876, scope: !3196, inlinedAt: !8594)
!9080 = !DILocation(line: 95, column: 879, scope: !3196, inlinedAt: !8594)
!9081 = !DILocation(line: 95, column: 855, scope: !3196, inlinedAt: !8594)
!9082 = !DILocation(line: 95, column: 102, scope: !3193, inlinedAt: !8593)
!9083 = !DILocation(line: 95, column: 105, scope: !3193, inlinedAt: !8593)
!9084 = !DILocation(line: 95, column: 138, scope: !3193, inlinedAt: !8593)
!9085 = !DILocation(line: 95, column: 137, scope: !3193, inlinedAt: !8593)
!9086 = !DILocation(line: 95, column: 140, scope: !3193, inlinedAt: !8593)
!9087 = !DILocation(line: 95, column: 119, scope: !3193, inlinedAt: !8593)
!9088 = !DILocation(line: 95, column: 118, scope: !3193, inlinedAt: !8593)
!9089 = !DILocation(line: 95, column: 1066, scope: !3198, inlinedAt: !8595)
!9090 = !DILocation(line: 95, column: 1099, scope: !3529, inlinedAt: !8595)
!9091 = !DILocation(line: 563, column: 63, scope: !8596)
!9092 = !DILocation(line: 563, column: 52, scope: !8596)
!9093 = !DILocation(line: 563, column: 94, scope: !8596)
!9094 = !DILocation(line: 563, column: 100, scope: !8596)
!9095 = !DILocation(line: 563, column: 106, scope: !9096)
!9096 = !DILexicalBlockFile(scope: !8599, file: !910, discriminator: 3)
!9097 = !DILocation(line: 563, column: 117, scope: !9096)
!9098 = !DILocation(line: 563, column: 122, scope: !9096)
!9099 = !DILocation(line: 563, column: 119, scope: !9096)
!9100 = !DILocation(line: 563, column: 115, scope: !9096)
!9101 = !DILocation(line: 563, column: 130, scope: !9096)
!9102 = !DILocation(line: 563, column: 136, scope: !9096)
!9103 = !DILocation(line: 563, column: 134, scope: !9096)
!9104 = !DILocation(line: 563, column: 141, scope: !9096)
!9105 = !DILocation(line: 563, column: 139, scope: !9096)
!9106 = !DILocation(line: 563, column: 144, scope: !9096)
!9107 = !DILocation(line: 563, column: 147, scope: !9108)
!9108 = !DILexicalBlockFile(scope: !9109, file: !910, discriminator: 4)
!9109 = distinct !DILexicalBlock(scope: !8599, file: !910, line: 563, column: 130)
!9110 = !DILocation(line: 563, column: 154, scope: !9108)
!9111 = !DILocation(line: 563, column: 151, scope: !9108)
!9112 = !DILocation(line: 563, column: 130, scope: !9108)
!9113 = !DILocation(line: 563, column: 160, scope: !9114)
!9114 = !DILexicalBlockFile(scope: !9109, file: !910, discriminator: 5)
!9115 = !DILocation(line: 563, column: 245, scope: !9116)
!9116 = !DILexicalBlockFile(scope: !8599, file: !910, discriminator: 6)
!9117 = !DILocation(line: 563, column: 243, scope: !9116)
!9118 = !DILocation(line: 563, column: 254, scope: !9116)
!9119 = !DILocation(line: 563, column: 263, scope: !9120)
!9120 = !DILexicalBlockFile(scope: !8599, file: !910, discriminator: 7)
!9121 = !DILocation(line: 563, column: 261, scope: !9120)
!9122 = !DILocation(line: 563, column: 266, scope: !9120)
!9123 = !DILocation(line: 563, column: 254, scope: !9120)
!9124 = !DILocation(line: 563, column: 280, scope: !9125)
!9125 = !DILexicalBlockFile(scope: !8599, file: !910, discriminator: 8)
!9126 = !DILocation(line: 563, column: 275, scope: !9125)
!9127 = !DILocation(line: 563, column: 278, scope: !9125)
!9128 = !DILocation(line: 563, column: 254, scope: !9125)
!9129 = distinct !{!9129, !9130}
!9130 = !DILocation(line: 563, column: 254, scope: !8599)
!9131 = !DILocation(line: 563, column: 283, scope: !9132)
!9132 = !DILexicalBlockFile(scope: !8599, file: !910, discriminator: 9)
!9133 = !DILocation(line: 563, column: 294, scope: !9134)
!9134 = !DILexicalBlockFile(scope: !9135, file: !910, discriminator: 10)
!9135 = distinct !DILexicalBlock(scope: !8600, file: !910, line: 563, column: 294)
!9136 = !DILocation(line: 563, column: 300, scope: !9134)
!9137 = !DILocation(line: 563, column: 298, scope: !9134)
!9138 = !DILocation(line: 563, column: 318, scope: !9139)
!9139 = !DILexicalBlockFile(scope: !9140, file: !910, discriminator: 11)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !910, line: 563, column: 304)
!9141 = !DILocation(line: 563, column: 315, scope: !9139)
!9142 = !DILocation(line: 563, column: 310, scope: !9139)
!9143 = !DILocation(line: 563, column: 313, scope: !9139)
!9144 = !DILocation(line: 563, column: 323, scope: !9139)
!9145 = !DILocation(line: 563, column: 332, scope: !9146)
!9146 = !DILexicalBlockFile(scope: !9147, file: !910, discriminator: 12)
!9147 = distinct !DILexicalBlock(scope: !9135, file: !910, line: 563, column: 330)
!9148 = !DILocation(line: 564, column: 9, scope: !8602)
!9149 = !DILocation(line: 565, column: 13, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !8603, file: !910, line: 564, column: 16)
!9151 = !DILocation(line: 558, column: 5, scope: !9021)
!9152 = distinct !{!9152, !9031}
!9153 = !DILocation(line: 569, column: 9, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !8541, file: !910, line: 569, column: 9)
!9155 = !DILocation(line: 569, column: 15, scope: !9154)
!9156 = !DILocation(line: 569, column: 13, scope: !9154)
!9157 = !DILocation(line: 569, column: 23, scope: !9154)
!9158 = !DILocation(line: 569, column: 20, scope: !9154)
!9159 = !DILocation(line: 569, column: 9, scope: !8541)
!9160 = !DILocation(line: 570, column: 9, scope: !9154)
!9161 = !DILocation(line: 571, column: 5, scope: !8541)
!9162 = !DILocation(line: 572, column: 1, scope: !8541)
!9163 = distinct !DISubprogram(name: "init_get_bits8", scope: !8265, file: !8265, line: 650, type: !9164, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9164 = !DISubroutineType(types: !9165)
!9165 = !{!941, !9166, !944, !941}
!9166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8264, size: 64, align: 64)
!9167 = !DILocalVariable(name: "s", arg: 1, scope: !9163, file: !8265, line: 650, type: !9166)
!9168 = !DILocation(line: 650, column: 49, scope: !9163)
!9169 = !DILocalVariable(name: "buffer", arg: 2, scope: !9163, file: !8265, line: 650, type: !944)
!9170 = !DILocation(line: 650, column: 67, scope: !9163)
!9171 = !DILocalVariable(name: "byte_size", arg: 3, scope: !9163, file: !8265, line: 651, type: !941)
!9172 = !DILocation(line: 651, column: 38, scope: !9163)
!9173 = !DILocation(line: 653, column: 9, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9163, file: !8265, line: 653, column: 9)
!9175 = !DILocation(line: 653, column: 19, scope: !9174)
!9176 = !DILocation(line: 653, column: 36, scope: !9174)
!9177 = !DILocation(line: 653, column: 39, scope: !9178)
!9178 = !DILexicalBlockFile(scope: !9174, file: !8265, discriminator: 1)
!9179 = !DILocation(line: 653, column: 49, scope: !9178)
!9180 = !DILocation(line: 653, column: 9, scope: !9178)
!9181 = !DILocation(line: 654, column: 19, scope: !9174)
!9182 = !DILocation(line: 654, column: 9, scope: !9174)
!9183 = !DILocation(line: 655, column: 26, scope: !9163)
!9184 = !DILocation(line: 655, column: 29, scope: !9163)
!9185 = !DILocation(line: 655, column: 37, scope: !9163)
!9186 = !DILocation(line: 655, column: 47, scope: !9163)
!9187 = !DILocation(line: 655, column: 12, scope: !9163)
!9188 = !DILocation(line: 655, column: 5, scope: !9163)
!9189 = distinct !DISubprogram(name: "get_bits", scope: !8265, file: !8265, line: 381, type: !9190, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{!942, !9166, !941}
!9192 = !DILocalVariable(name: "x", arg: 1, scope: !9193, file: !9194, line: 66, type: !963)
!9193 = distinct !DISubprogram(name: "av_bswap32", scope: !9194, file: !9194, line: 66, type: !9195, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9194 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9195 = !DISubroutineType(types: !9196)
!9196 = !{!963, !963}
!9197 = !DILocation(line: 66, column: 98, scope: !9193, inlinedAt: !9198)
!9198 = distinct !DILocation(line: 401, column: 16, scope: !9189)
!9199 = !DILocalVariable(name: "s", arg: 1, scope: !9189, file: !8265, line: 381, type: !9166)
!9200 = !DILocation(line: 381, column: 52, scope: !9189)
!9201 = !DILocalVariable(name: "n", arg: 2, scope: !9189, file: !8265, line: 381, type: !941)
!9202 = !DILocation(line: 381, column: 59, scope: !9189)
!9203 = !DILocalVariable(name: "tmp", scope: !9189, file: !8265, line: 383, type: !941)
!9204 = !DILocation(line: 383, column: 18, scope: !9189)
!9205 = !DILocalVariable(name: "re_index", scope: !9189, file: !8265, line: 399, type: !942)
!9206 = !DILocation(line: 399, column: 18, scope: !9189)
!9207 = !DILocation(line: 399, column: 30, scope: !9189)
!9208 = !DILocation(line: 399, column: 34, scope: !9189)
!9209 = !DILocalVariable(name: "re_cache", scope: !9189, file: !8265, line: 399, type: !942)
!9210 = !DILocation(line: 399, column: 78, scope: !9189)
!9211 = !DILocalVariable(name: "re_size_plus8", scope: !9189, file: !8265, line: 399, type: !942)
!9212 = !DILocation(line: 399, column: 101, scope: !9189)
!9213 = !DILocation(line: 399, column: 118, scope: !9189)
!9214 = !DILocation(line: 399, column: 122, scope: !9189)
!9215 = !DILocation(line: 401, column: 60, scope: !9189)
!9216 = !DILocation(line: 401, column: 64, scope: !9189)
!9217 = !DILocation(line: 401, column: 74, scope: !9189)
!9218 = !DILocation(line: 401, column: 83, scope: !9189)
!9219 = !DILocation(line: 401, column: 71, scope: !9189)
!9220 = !DILocation(line: 401, column: 92, scope: !9189)
!9221 = !DILocation(line: 401, column: 16, scope: !9189)
!9222 = !DILocation(line: 68, column: 16, scope: !9193, inlinedAt: !9198)
!9223 = !DILocation(line: 68, column: 19, scope: !9193, inlinedAt: !9198)
!9224 = !DILocation(line: 68, column: 24, scope: !9193, inlinedAt: !9198)
!9225 = !DILocation(line: 68, column: 38, scope: !9193, inlinedAt: !9198)
!9226 = !DILocation(line: 68, column: 41, scope: !9193, inlinedAt: !9198)
!9227 = !DILocation(line: 68, column: 46, scope: !9193, inlinedAt: !9198)
!9228 = !DILocation(line: 68, column: 34, scope: !9193, inlinedAt: !9198)
!9229 = !DILocation(line: 68, column: 57, scope: !9193, inlinedAt: !9198)
!9230 = !DILocation(line: 68, column: 69, scope: !9193, inlinedAt: !9198)
!9231 = !DILocation(line: 68, column: 72, scope: !9193, inlinedAt: !9198)
!9232 = !DILocation(line: 68, column: 79, scope: !9193, inlinedAt: !9198)
!9233 = !DILocation(line: 68, column: 84, scope: !9193, inlinedAt: !9198)
!9234 = !DILocation(line: 68, column: 99, scope: !9193, inlinedAt: !9198)
!9235 = !DILocation(line: 68, column: 102, scope: !9193, inlinedAt: !9198)
!9236 = !DILocation(line: 68, column: 109, scope: !9193, inlinedAt: !9198)
!9237 = !DILocation(line: 68, column: 114, scope: !9193, inlinedAt: !9198)
!9238 = !DILocation(line: 68, column: 94, scope: !9193, inlinedAt: !9198)
!9239 = !DILocation(line: 68, column: 63, scope: !9193, inlinedAt: !9198)
!9240 = !DILocation(line: 401, column: 100, scope: !9189)
!9241 = !DILocation(line: 401, column: 109, scope: !9189)
!9242 = !DILocation(line: 401, column: 96, scope: !9189)
!9243 = !DILocation(line: 401, column: 14, scope: !9189)
!9244 = !DILocation(line: 402, column: 21, scope: !9189)
!9245 = !DILocation(line: 402, column: 31, scope: !9189)
!9246 = !DILocation(line: 402, column: 11, scope: !9189)
!9247 = !DILocation(line: 402, column: 9, scope: !9189)
!9248 = !DILocation(line: 403, column: 18, scope: !9189)
!9249 = !DILocation(line: 403, column: 36, scope: !9189)
!9250 = !DILocation(line: 403, column: 48, scope: !9189)
!9251 = !DILocation(line: 403, column: 45, scope: !9189)
!9252 = !DILocation(line: 403, column: 33, scope: !9189)
!9253 = !DILocation(line: 403, column: 17, scope: !9189)
!9254 = !DILocation(line: 403, column: 55, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !9189, file: !8265, discriminator: 1)
!9256 = !DILocation(line: 403, column: 67, scope: !9255)
!9257 = !DILocation(line: 403, column: 64, scope: !9255)
!9258 = !DILocation(line: 403, column: 17, scope: !9255)
!9259 = !DILocation(line: 403, column: 74, scope: !9260)
!9260 = !DILexicalBlockFile(scope: !9189, file: !8265, discriminator: 2)
!9261 = !DILocation(line: 403, column: 17, scope: !9260)
!9262 = !DILocation(line: 403, column: 17, scope: !9263)
!9263 = !DILexicalBlockFile(scope: !9189, file: !8265, discriminator: 3)
!9264 = !DILocation(line: 403, column: 14, scope: !9263)
!9265 = !DILocation(line: 404, column: 18, scope: !9189)
!9266 = !DILocation(line: 404, column: 6, scope: !9189)
!9267 = !DILocation(line: 404, column: 10, scope: !9189)
!9268 = !DILocation(line: 404, column: 16, scope: !9189)
!9269 = !DILocation(line: 406, column: 12, scope: !9189)
!9270 = !DILocation(line: 406, column: 5, scope: !9189)
!9271 = distinct !DISubprogram(name: "get_bits_count", scope: !8265, file: !8265, line: 219, type: !9272, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{!941, !9274}
!9274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9275, size: 64, align: 64)
!9275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8264)
!9276 = !DILocalVariable(name: "s", arg: 1, scope: !9271, file: !8265, line: 219, type: !9274)
!9277 = !DILocation(line: 219, column: 55, scope: !9271)
!9278 = !DILocation(line: 224, column: 12, scope: !9271)
!9279 = !DILocation(line: 224, column: 15, scope: !9271)
!9280 = !DILocation(line: 224, column: 5, scope: !9271)
!9281 = distinct !DISubprogram(name: "huf_canonical_code_table", scope: !910, file: !910, line: 371, type: !9282, isLocal: true, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9282 = !DISubroutineType(types: !9283)
!9283 = !{null, !7636}
!9284 = !DILocalVariable(name: "hcode", arg: 1, scope: !9281, file: !910, line: 371, type: !7636)
!9285 = !DILocation(line: 371, column: 48, scope: !9281)
!9286 = !DILocalVariable(name: "c", scope: !9281, file: !910, line: 373, type: !955)
!9287 = !DILocation(line: 373, column: 14, scope: !9281)
!9288 = !DILocalVariable(name: "n", scope: !9281, file: !910, line: 373, type: !9289)
!9289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 3776, align: 64, elements: !9290)
!9290 = !{!9291}
!9291 = !DISubrange(count: 59)
!9292 = !DILocation(line: 373, column: 17, scope: !9281)
!9293 = !DILocalVariable(name: "i", scope: !9281, file: !910, line: 374, type: !941)
!9294 = !DILocation(line: 374, column: 9, scope: !9281)
!9295 = !DILocation(line: 376, column: 12, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9281, file: !910, line: 376, column: 5)
!9297 = !DILocation(line: 376, column: 10, scope: !9296)
!9298 = !DILocation(line: 376, column: 17, scope: !9299)
!9299 = !DILexicalBlockFile(scope: !9300, file: !910, discriminator: 1)
!9300 = distinct !DILexicalBlock(scope: !9296, file: !910, line: 376, column: 5)
!9301 = !DILocation(line: 376, column: 19, scope: !9299)
!9302 = !DILocation(line: 376, column: 5, scope: !9299)
!9303 = !DILocation(line: 377, column: 17, scope: !9300)
!9304 = !DILocation(line: 377, column: 11, scope: !9300)
!9305 = !DILocation(line: 377, column: 9, scope: !9300)
!9306 = !DILocation(line: 377, column: 21, scope: !9300)
!9307 = !DILocation(line: 376, column: 38, scope: !9308)
!9308 = !DILexicalBlockFile(scope: !9300, file: !910, discriminator: 2)
!9309 = !DILocation(line: 376, column: 5, scope: !9308)
!9310 = distinct !{!9310, !9311}
!9311 = !DILocation(line: 376, column: 5, scope: !9281)
!9312 = !DILocation(line: 379, column: 7, scope: !9281)
!9313 = !DILocation(line: 380, column: 12, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9281, file: !910, line: 380, column: 5)
!9315 = !DILocation(line: 380, column: 10, scope: !9314)
!9316 = !DILocation(line: 380, column: 18, scope: !9317)
!9317 = !DILexicalBlockFile(scope: !9318, file: !910, discriminator: 1)
!9318 = distinct !DILexicalBlock(scope: !9314, file: !910, line: 380, column: 5)
!9319 = !DILocation(line: 380, column: 20, scope: !9317)
!9320 = !DILocation(line: 380, column: 5, scope: !9317)
!9321 = !DILocalVariable(name: "nc", scope: !9322, file: !910, line: 381, type: !955)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !910, line: 380, column: 30)
!9323 = !DILocation(line: 381, column: 18, scope: !9322)
!9324 = !DILocation(line: 381, column: 25, scope: !9322)
!9325 = !DILocation(line: 381, column: 31, scope: !9322)
!9326 = !DILocation(line: 381, column: 29, scope: !9322)
!9327 = !DILocation(line: 381, column: 27, scope: !9322)
!9328 = !DILocation(line: 381, column: 35, scope: !9322)
!9329 = !DILocation(line: 382, column: 16, scope: !9322)
!9330 = !DILocation(line: 382, column: 11, scope: !9322)
!9331 = !DILocation(line: 382, column: 9, scope: !9322)
!9332 = !DILocation(line: 382, column: 14, scope: !9322)
!9333 = !DILocation(line: 383, column: 13, scope: !9322)
!9334 = !DILocation(line: 383, column: 11, scope: !9322)
!9335 = !DILocation(line: 384, column: 5, scope: !9322)
!9336 = !DILocation(line: 380, column: 25, scope: !9337)
!9337 = !DILexicalBlockFile(scope: !9318, file: !910, discriminator: 2)
!9338 = !DILocation(line: 380, column: 5, scope: !9337)
!9339 = distinct !{!9339, !9340}
!9340 = !DILocation(line: 380, column: 5, scope: !9281)
!9341 = !DILocation(line: 386, column: 12, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9281, file: !910, line: 386, column: 5)
!9343 = !DILocation(line: 386, column: 10, scope: !9342)
!9344 = !DILocation(line: 386, column: 17, scope: !9345)
!9345 = !DILexicalBlockFile(scope: !9346, file: !910, discriminator: 1)
!9346 = distinct !DILexicalBlock(scope: !9342, file: !910, line: 386, column: 5)
!9347 = !DILocation(line: 386, column: 19, scope: !9345)
!9348 = !DILocation(line: 386, column: 5, scope: !9345)
!9349 = !DILocalVariable(name: "l", scope: !9350, file: !910, line: 387, type: !941)
!9350 = distinct !DILexicalBlock(scope: !9346, file: !910, line: 386, column: 43)
!9351 = !DILocation(line: 387, column: 13, scope: !9350)
!9352 = !DILocation(line: 387, column: 23, scope: !9350)
!9353 = !DILocation(line: 387, column: 17, scope: !9350)
!9354 = !DILocation(line: 389, column: 13, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9350, file: !910, line: 389, column: 13)
!9356 = !DILocation(line: 389, column: 15, scope: !9355)
!9357 = !DILocation(line: 389, column: 13, scope: !9350)
!9358 = !DILocation(line: 390, column: 24, scope: !9355)
!9359 = !DILocation(line: 390, column: 31, scope: !9355)
!9360 = !DILocation(line: 390, column: 29, scope: !9355)
!9361 = !DILocation(line: 390, column: 33, scope: !9355)
!9362 = !DILocation(line: 390, column: 36, scope: !9355)
!9363 = !DILocation(line: 390, column: 26, scope: !9355)
!9364 = !DILocation(line: 390, column: 19, scope: !9355)
!9365 = !DILocation(line: 390, column: 13, scope: !9355)
!9366 = !DILocation(line: 390, column: 22, scope: !9355)
!9367 = !DILocation(line: 391, column: 5, scope: !9350)
!9368 = !DILocation(line: 386, column: 38, scope: !9369)
!9369 = !DILexicalBlockFile(scope: !9346, file: !910, discriminator: 2)
!9370 = !DILocation(line: 386, column: 5, scope: !9369)
!9371 = distinct !{!9371, !9372}
!9372 = !DILocation(line: 386, column: 5, scope: !9281)
!9373 = !DILocation(line: 392, column: 1, scope: !9281)
!9374 = distinct !DISubprogram(name: "init_get_bits", scope: !8265, file: !8265, line: 615, type: !9164, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9375 = !DILocalVariable(name: "s", arg: 1, scope: !9374, file: !8265, line: 615, type: !9166)
!9376 = !DILocation(line: 615, column: 48, scope: !9374)
!9377 = !DILocalVariable(name: "buffer", arg: 2, scope: !9374, file: !8265, line: 615, type: !944)
!9378 = !DILocation(line: 615, column: 66, scope: !9374)
!9379 = !DILocalVariable(name: "bit_size", arg: 3, scope: !9374, file: !8265, line: 616, type: !941)
!9380 = !DILocation(line: 616, column: 37, scope: !9374)
!9381 = !DILocalVariable(name: "buffer_size", scope: !9374, file: !8265, line: 618, type: !941)
!9382 = !DILocation(line: 618, column: 9, scope: !9374)
!9383 = !DILocalVariable(name: "ret", scope: !9374, file: !8265, line: 619, type: !941)
!9384 = !DILocation(line: 619, column: 9, scope: !9374)
!9385 = !DILocation(line: 621, column: 9, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9374, file: !8265, line: 621, column: 9)
!9387 = !DILocation(line: 621, column: 18, scope: !9386)
!9388 = !DILocation(line: 621, column: 64, scope: !9386)
!9389 = !DILocation(line: 621, column: 67, scope: !9390)
!9390 = !DILexicalBlockFile(scope: !9386, file: !8265, discriminator: 1)
!9391 = !DILocation(line: 621, column: 76, scope: !9390)
!9392 = !DILocation(line: 621, column: 80, scope: !9390)
!9393 = !DILocation(line: 621, column: 84, scope: !9394)
!9394 = !DILexicalBlockFile(scope: !9386, file: !8265, discriminator: 2)
!9395 = !DILocation(line: 621, column: 9, scope: !9394)
!9396 = !DILocation(line: 622, column: 18, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9386, file: !8265, line: 621, column: 92)
!9398 = !DILocation(line: 623, column: 16, scope: !9397)
!9399 = !DILocation(line: 624, column: 13, scope: !9397)
!9400 = !DILocation(line: 625, column: 5, scope: !9397)
!9401 = !DILocation(line: 627, column: 20, scope: !9374)
!9402 = !DILocation(line: 627, column: 29, scope: !9374)
!9403 = !DILocation(line: 627, column: 34, scope: !9374)
!9404 = !DILocation(line: 627, column: 17, scope: !9374)
!9405 = !DILocation(line: 629, column: 17, scope: !9374)
!9406 = !DILocation(line: 629, column: 5, scope: !9374)
!9407 = !DILocation(line: 629, column: 8, scope: !9374)
!9408 = !DILocation(line: 629, column: 15, scope: !9374)
!9409 = !DILocation(line: 630, column: 23, scope: !9374)
!9410 = !DILocation(line: 630, column: 5, scope: !9374)
!9411 = !DILocation(line: 630, column: 8, scope: !9374)
!9412 = !DILocation(line: 630, column: 21, scope: !9374)
!9413 = !DILocation(line: 631, column: 29, scope: !9374)
!9414 = !DILocation(line: 631, column: 38, scope: !9374)
!9415 = !DILocation(line: 631, column: 5, scope: !9374)
!9416 = !DILocation(line: 631, column: 8, scope: !9374)
!9417 = !DILocation(line: 631, column: 27, scope: !9374)
!9418 = !DILocation(line: 632, column: 21, scope: !9374)
!9419 = !DILocation(line: 632, column: 30, scope: !9374)
!9420 = !DILocation(line: 632, column: 28, scope: !9374)
!9421 = !DILocation(line: 632, column: 5, scope: !9374)
!9422 = !DILocation(line: 632, column: 8, scope: !9374)
!9423 = !DILocation(line: 632, column: 19, scope: !9374)
!9424 = !DILocation(line: 633, column: 5, scope: !9374)
!9425 = !DILocation(line: 633, column: 8, scope: !9374)
!9426 = !DILocation(line: 633, column: 14, scope: !9374)
!9427 = !DILocation(line: 639, column: 12, scope: !9374)
!9428 = !DILocation(line: 639, column: 5, scope: !9374)
!9429 = distinct !DISubprogram(name: "NEG_USR32", scope: !9430, file: !9430, line: 124, type: !9431, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9430 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9431 = !DISubroutineType(types: !9432)
!9432 = !{!963, !963, !1206}
!9433 = !DILocalVariable(name: "a", arg: 1, scope: !9429, file: !9430, line: 124, type: !963)
!9434 = !DILocation(line: 124, column: 43, scope: !9429)
!9435 = !DILocalVariable(name: "s", arg: 2, scope: !9429, file: !9430, line: 124, type: !1206)
!9436 = !DILocation(line: 124, column: 53, scope: !9429)
!9437 = !DILocation(line: 125, column: 5, scope: !9429)
!9438 = !DILocation(line: 127, column: 29, scope: !9429)
!9439 = !DILocation(line: 127, column: 28, scope: !9429)
!9440 = !DILocation(line: 127, column: 18, scope: !9429)
!9441 = !{i32 244036, i32 244050}
!9442 = !DILocation(line: 129, column: 12, scope: !9429)
!9443 = !DILocation(line: 129, column: 5, scope: !9429)
!9444 = distinct !DISubprogram(name: "wdec14", scope: !910, file: !910, line: 625, type: !9445, isLocal: true, isDefinition: true, scopeLine: 626, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9445 = !DISubroutineType(types: !9446)
!9446 = !{null, !965, !965, !964, !964}
!9447 = !DILocalVariable(name: "l", arg: 1, scope: !9444, file: !910, line: 625, type: !965)
!9448 = !DILocation(line: 625, column: 36, scope: !9444)
!9449 = !DILocalVariable(name: "h", arg: 2, scope: !9444, file: !910, line: 625, type: !965)
!9450 = !DILocation(line: 625, column: 48, scope: !9444)
!9451 = !DILocalVariable(name: "a", arg: 3, scope: !9444, file: !910, line: 625, type: !964)
!9452 = !DILocation(line: 625, column: 61, scope: !9444)
!9453 = !DILocalVariable(name: "b", arg: 4, scope: !9444, file: !910, line: 625, type: !964)
!9454 = !DILocation(line: 625, column: 74, scope: !9444)
!9455 = !DILocalVariable(name: "ls", scope: !9444, file: !910, line: 627, type: !9456)
!9456 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1034, line: 195, baseType: !9457)
!9457 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!9458 = !DILocation(line: 627, column: 13, scope: !9444)
!9459 = !DILocation(line: 627, column: 18, scope: !9444)
!9460 = !DILocalVariable(name: "hs", scope: !9444, file: !910, line: 628, type: !9456)
!9461 = !DILocation(line: 628, column: 13, scope: !9444)
!9462 = !DILocation(line: 628, column: 18, scope: !9444)
!9463 = !DILocalVariable(name: "hi", scope: !9444, file: !910, line: 629, type: !941)
!9464 = !DILocation(line: 629, column: 9, scope: !9444)
!9465 = !DILocation(line: 629, column: 14, scope: !9444)
!9466 = !DILocalVariable(name: "ai", scope: !9444, file: !910, line: 630, type: !941)
!9467 = !DILocation(line: 630, column: 9, scope: !9444)
!9468 = !DILocation(line: 630, column: 14, scope: !9444)
!9469 = !DILocation(line: 630, column: 20, scope: !9444)
!9470 = !DILocation(line: 630, column: 23, scope: !9444)
!9471 = !DILocation(line: 630, column: 17, scope: !9444)
!9472 = !DILocation(line: 630, column: 31, scope: !9444)
!9473 = !DILocation(line: 630, column: 34, scope: !9444)
!9474 = !DILocation(line: 630, column: 28, scope: !9444)
!9475 = !DILocalVariable(name: "as", scope: !9444, file: !910, line: 631, type: !9456)
!9476 = !DILocation(line: 631, column: 13, scope: !9444)
!9477 = !DILocation(line: 631, column: 18, scope: !9444)
!9478 = !DILocalVariable(name: "bs", scope: !9444, file: !910, line: 632, type: !9456)
!9479 = !DILocation(line: 632, column: 13, scope: !9444)
!9480 = !DILocation(line: 632, column: 18, scope: !9444)
!9481 = !DILocation(line: 632, column: 23, scope: !9444)
!9482 = !DILocation(line: 632, column: 21, scope: !9444)
!9483 = !DILocation(line: 634, column: 10, scope: !9444)
!9484 = !DILocation(line: 634, column: 6, scope: !9444)
!9485 = !DILocation(line: 634, column: 8, scope: !9444)
!9486 = !DILocation(line: 635, column: 10, scope: !9444)
!9487 = !DILocation(line: 635, column: 6, scope: !9444)
!9488 = !DILocation(line: 635, column: 8, scope: !9444)
!9489 = !DILocation(line: 636, column: 1, scope: !9444)
!9490 = distinct !DISubprogram(name: "wdec16", scope: !910, file: !910, line: 642, type: !9445, isLocal: true, isDefinition: true, scopeLine: 643, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9491 = !DILocalVariable(name: "l", arg: 1, scope: !9490, file: !910, line: 642, type: !965)
!9492 = !DILocation(line: 642, column: 36, scope: !9490)
!9493 = !DILocalVariable(name: "h", arg: 2, scope: !9490, file: !910, line: 642, type: !965)
!9494 = !DILocation(line: 642, column: 48, scope: !9490)
!9495 = !DILocalVariable(name: "a", arg: 3, scope: !9490, file: !910, line: 642, type: !964)
!9496 = !DILocation(line: 642, column: 61, scope: !9490)
!9497 = !DILocalVariable(name: "b", arg: 4, scope: !9490, file: !910, line: 642, type: !964)
!9498 = !DILocation(line: 642, column: 74, scope: !9490)
!9499 = !DILocalVariable(name: "m", scope: !9490, file: !910, line: 644, type: !941)
!9500 = !DILocation(line: 644, column: 9, scope: !9490)
!9501 = !DILocation(line: 644, column: 13, scope: !9490)
!9502 = !DILocalVariable(name: "d", scope: !9490, file: !910, line: 645, type: !941)
!9503 = !DILocation(line: 645, column: 9, scope: !9490)
!9504 = !DILocation(line: 645, column: 13, scope: !9490)
!9505 = !DILocalVariable(name: "bb", scope: !9490, file: !910, line: 646, type: !941)
!9506 = !DILocation(line: 646, column: 9, scope: !9490)
!9507 = !DILocation(line: 646, column: 15, scope: !9490)
!9508 = !DILocation(line: 646, column: 20, scope: !9490)
!9509 = !DILocation(line: 646, column: 22, scope: !9490)
!9510 = !DILocation(line: 646, column: 17, scope: !9490)
!9511 = !DILocation(line: 646, column: 29, scope: !9490)
!9512 = !DILocalVariable(name: "aa", scope: !9490, file: !910, line: 647, type: !941)
!9513 = !DILocation(line: 647, column: 9, scope: !9490)
!9514 = !DILocation(line: 647, column: 15, scope: !9490)
!9515 = !DILocation(line: 647, column: 19, scope: !9490)
!9516 = !DILocation(line: 647, column: 17, scope: !9490)
!9517 = !DILocation(line: 647, column: 22, scope: !9490)
!9518 = !DILocation(line: 647, column: 41, scope: !9490)
!9519 = !DILocation(line: 648, column: 10, scope: !9490)
!9520 = !DILocation(line: 648, column: 6, scope: !9490)
!9521 = !DILocation(line: 648, column: 8, scope: !9490)
!9522 = !DILocation(line: 649, column: 10, scope: !9490)
!9523 = !DILocation(line: 649, column: 6, scope: !9490)
!9524 = !DILocation(line: 649, column: 8, scope: !9490)
!9525 = !DILocation(line: 650, column: 1, scope: !9490)
!9526 = distinct !DISubprogram(name: "unpack_3", scope: !910, file: !910, line: 935, type: !9527, isLocal: true, isDefinition: true, scopeLine: 936, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9527 = !DISubroutineType(types: !9528)
!9528 = !{null, !944, !964}
!9529 = !DILocalVariable(name: "b", arg: 1, scope: !9526, file: !910, line: 935, type: !944)
!9530 = !DILocation(line: 935, column: 36, scope: !9526)
!9531 = !DILocalVariable(name: "s", arg: 2, scope: !9526, file: !910, line: 935, type: !964)
!9532 = !DILocation(line: 935, column: 51, scope: !9526)
!9533 = !DILocalVariable(name: "i", scope: !9526, file: !910, line: 937, type: !941)
!9534 = !DILocation(line: 937, column: 9, scope: !9526)
!9535 = !DILocation(line: 939, column: 13, scope: !9526)
!9536 = !DILocation(line: 939, column: 18, scope: !9526)
!9537 = !DILocation(line: 939, column: 26, scope: !9526)
!9538 = !DILocation(line: 939, column: 24, scope: !9526)
!9539 = !DILocation(line: 939, column: 12, scope: !9526)
!9540 = !DILocation(line: 939, column: 5, scope: !9526)
!9541 = !DILocation(line: 939, column: 10, scope: !9526)
!9542 = !DILocation(line: 941, column: 9, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9526, file: !910, line: 941, column: 9)
!9544 = !DILocation(line: 941, column: 14, scope: !9543)
!9545 = !DILocation(line: 941, column: 9, scope: !9526)
!9546 = !DILocation(line: 942, column: 9, scope: !9543)
!9547 = !DILocation(line: 942, column: 14, scope: !9543)
!9548 = !DILocation(line: 944, column: 17, scope: !9543)
!9549 = !DILocation(line: 944, column: 16, scope: !9543)
!9550 = !DILocation(line: 944, column: 9, scope: !9543)
!9551 = !DILocation(line: 944, column: 14, scope: !9543)
!9552 = !DILocation(line: 946, column: 12, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9526, file: !910, line: 946, column: 5)
!9554 = !DILocation(line: 946, column: 10, scope: !9553)
!9555 = !DILocation(line: 946, column: 17, scope: !9556)
!9556 = !DILexicalBlockFile(scope: !9557, file: !910, discriminator: 1)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !910, line: 946, column: 5)
!9558 = !DILocation(line: 946, column: 19, scope: !9556)
!9559 = !DILocation(line: 946, column: 5, scope: !9556)
!9560 = !DILocation(line: 947, column: 16, scope: !9557)
!9561 = !DILocation(line: 947, column: 11, scope: !9557)
!9562 = !DILocation(line: 947, column: 9, scope: !9557)
!9563 = !DILocation(line: 947, column: 14, scope: !9557)
!9564 = !DILocation(line: 946, column: 26, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9557, file: !910, discriminator: 2)
!9566 = !DILocation(line: 946, column: 5, scope: !9565)
!9567 = distinct !{!9567, !9568}
!9568 = !DILocation(line: 946, column: 5, scope: !9526)
!9569 = !DILocation(line: 948, column: 1, scope: !9526)
!9570 = distinct !DISubprogram(name: "unpack_14", scope: !910, file: !910, line: 900, type: !9527, isLocal: true, isDefinition: true, scopeLine: 901, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1739)
!9571 = !DILocalVariable(name: "b", arg: 1, scope: !9570, file: !910, line: 900, type: !944)
!9572 = !DILocation(line: 900, column: 37, scope: !9570)
!9573 = !DILocalVariable(name: "s", arg: 2, scope: !9570, file: !910, line: 900, type: !964)
!9574 = !DILocation(line: 900, column: 53, scope: !9570)
!9575 = !DILocalVariable(name: "shift", scope: !9570, file: !910, line: 902, type: !966)
!9576 = !DILocation(line: 902, column: 20, scope: !9570)
!9577 = !DILocation(line: 902, column: 29, scope: !9570)
!9578 = !DILocation(line: 902, column: 35, scope: !9570)
!9579 = !DILocation(line: 902, column: 41, scope: !9570)
!9580 = !DILocation(line: 902, column: 28, scope: !9570)
!9581 = !DILocalVariable(name: "bias", scope: !9570, file: !910, line: 903, type: !966)
!9582 = !DILocation(line: 903, column: 20, scope: !9570)
!9583 = !DILocation(line: 903, column: 36, scope: !9570)
!9584 = !DILocation(line: 903, column: 33, scope: !9570)
!9585 = !DILocation(line: 903, column: 27, scope: !9570)
!9586 = !DILocalVariable(name: "i", scope: !9570, file: !910, line: 904, type: !941)
!9587 = !DILocation(line: 904, column: 9, scope: !9570)
!9588 = !DILocation(line: 906, column: 14, scope: !9570)
!9589 = !DILocation(line: 906, column: 19, scope: !9570)
!9590 = !DILocation(line: 906, column: 27, scope: !9570)
!9591 = !DILocation(line: 906, column: 25, scope: !9570)
!9592 = !DILocation(line: 906, column: 13, scope: !9570)
!9593 = !DILocation(line: 906, column: 5, scope: !9570)
!9594 = !DILocation(line: 906, column: 11, scope: !9570)
!9595 = !DILocation(line: 908, column: 13, scope: !9570)
!9596 = !DILocation(line: 908, column: 25, scope: !9570)
!9597 = !DILocation(line: 908, column: 31, scope: !9570)
!9598 = !DILocation(line: 908, column: 40, scope: !9570)
!9599 = !DILocation(line: 908, column: 46, scope: !9570)
!9600 = !DILocation(line: 908, column: 37, scope: !9570)
!9601 = !DILocation(line: 908, column: 53, scope: !9570)
!9602 = !DILocation(line: 908, column: 64, scope: !9570)
!9603 = !DILocation(line: 908, column: 61, scope: !9570)
!9604 = !DILocation(line: 908, column: 19, scope: !9570)
!9605 = !DILocation(line: 908, column: 73, scope: !9570)
!9606 = !DILocation(line: 908, column: 71, scope: !9570)
!9607 = !DILocation(line: 908, column: 5, scope: !9570)
!9608 = !DILocation(line: 908, column: 11, scope: !9570)
!9609 = !DILocation(line: 909, column: 13, scope: !9570)
!9610 = !DILocation(line: 909, column: 25, scope: !9570)
!9611 = !DILocation(line: 909, column: 31, scope: !9570)
!9612 = !DILocation(line: 909, column: 40, scope: !9570)
!9613 = !DILocation(line: 909, column: 46, scope: !9570)
!9614 = !DILocation(line: 909, column: 37, scope: !9570)
!9615 = !DILocation(line: 909, column: 53, scope: !9570)
!9616 = !DILocation(line: 909, column: 64, scope: !9570)
!9617 = !DILocation(line: 909, column: 61, scope: !9570)
!9618 = !DILocation(line: 909, column: 19, scope: !9570)
!9619 = !DILocation(line: 909, column: 73, scope: !9570)
!9620 = !DILocation(line: 909, column: 71, scope: !9570)
!9621 = !DILocation(line: 909, column: 5, scope: !9570)
!9622 = !DILocation(line: 909, column: 11, scope: !9570)
!9623 = !DILocation(line: 910, column: 13, scope: !9570)
!9624 = !DILocation(line: 910, column: 23, scope: !9570)
!9625 = !DILocation(line: 910, column: 29, scope: !9570)
!9626 = !DILocation(line: 910, column: 40, scope: !9570)
!9627 = !DILocation(line: 910, column: 37, scope: !9570)
!9628 = !DILocation(line: 910, column: 19, scope: !9570)
!9629 = !DILocation(line: 910, column: 49, scope: !9570)
!9630 = !DILocation(line: 910, column: 47, scope: !9570)
!9631 = !DILocation(line: 910, column: 5, scope: !9570)
!9632 = !DILocation(line: 910, column: 11, scope: !9570)
!9633 = !DILocation(line: 912, column: 13, scope: !9570)
!9634 = !DILocation(line: 912, column: 23, scope: !9570)
!9635 = !DILocation(line: 912, column: 29, scope: !9570)
!9636 = !DILocation(line: 912, column: 38, scope: !9570)
!9637 = !DILocation(line: 912, column: 35, scope: !9570)
!9638 = !DILocation(line: 912, column: 19, scope: !9570)
!9639 = !DILocation(line: 912, column: 47, scope: !9570)
!9640 = !DILocation(line: 912, column: 45, scope: !9570)
!9641 = !DILocation(line: 912, column: 5, scope: !9570)
!9642 = !DILocation(line: 912, column: 11, scope: !9570)
!9643 = !DILocation(line: 913, column: 13, scope: !9570)
!9644 = !DILocation(line: 913, column: 25, scope: !9570)
!9645 = !DILocation(line: 913, column: 31, scope: !9570)
!9646 = !DILocation(line: 913, column: 40, scope: !9570)
!9647 = !DILocation(line: 913, column: 46, scope: !9570)
!9648 = !DILocation(line: 913, column: 37, scope: !9570)
!9649 = !DILocation(line: 913, column: 53, scope: !9570)
!9650 = !DILocation(line: 913, column: 64, scope: !9570)
!9651 = !DILocation(line: 913, column: 61, scope: !9570)
!9652 = !DILocation(line: 913, column: 19, scope: !9570)
!9653 = !DILocation(line: 913, column: 73, scope: !9570)
!9654 = !DILocation(line: 913, column: 71, scope: !9570)
!9655 = !DILocation(line: 913, column: 5, scope: !9570)
!9656 = !DILocation(line: 913, column: 11, scope: !9570)
!9657 = !DILocation(line: 914, column: 13, scope: !9570)
!9658 = !DILocation(line: 914, column: 25, scope: !9570)
!9659 = !DILocation(line: 914, column: 31, scope: !9570)
!9660 = !DILocation(line: 914, column: 40, scope: !9570)
!9661 = !DILocation(line: 914, column: 46, scope: !9570)
!9662 = !DILocation(line: 914, column: 37, scope: !9570)
!9663 = !DILocation(line: 914, column: 53, scope: !9570)
!9664 = !DILocation(line: 914, column: 64, scope: !9570)
!9665 = !DILocation(line: 914, column: 61, scope: !9570)
!9666 = !DILocation(line: 914, column: 19, scope: !9570)
!9667 = !DILocation(line: 914, column: 73, scope: !9570)
!9668 = !DILocation(line: 914, column: 71, scope: !9570)
!9669 = !DILocation(line: 914, column: 5, scope: !9570)
!9670 = !DILocation(line: 914, column: 11, scope: !9570)
!9671 = !DILocation(line: 915, column: 13, scope: !9570)
!9672 = !DILocation(line: 915, column: 23, scope: !9570)
!9673 = !DILocation(line: 915, column: 29, scope: !9570)
!9674 = !DILocation(line: 915, column: 40, scope: !9570)
!9675 = !DILocation(line: 915, column: 37, scope: !9570)
!9676 = !DILocation(line: 915, column: 19, scope: !9570)
!9677 = !DILocation(line: 915, column: 49, scope: !9570)
!9678 = !DILocation(line: 915, column: 47, scope: !9570)
!9679 = !DILocation(line: 915, column: 5, scope: !9570)
!9680 = !DILocation(line: 915, column: 11, scope: !9570)
!9681 = !DILocation(line: 917, column: 13, scope: !9570)
!9682 = !DILocation(line: 917, column: 23, scope: !9570)
!9683 = !DILocation(line: 917, column: 29, scope: !9570)
!9684 = !DILocation(line: 917, column: 38, scope: !9570)
!9685 = !DILocation(line: 917, column: 35, scope: !9570)
!9686 = !DILocation(line: 917, column: 19, scope: !9570)
!9687 = !DILocation(line: 917, column: 47, scope: !9570)
!9688 = !DILocation(line: 917, column: 45, scope: !9570)
!9689 = !DILocation(line: 917, column: 5, scope: !9570)
!9690 = !DILocation(line: 917, column: 11, scope: !9570)
!9691 = !DILocation(line: 918, column: 13, scope: !9570)
!9692 = !DILocation(line: 918, column: 25, scope: !9570)
!9693 = !DILocation(line: 918, column: 31, scope: !9570)
!9694 = !DILocation(line: 918, column: 40, scope: !9570)
!9695 = !DILocation(line: 918, column: 46, scope: !9570)
!9696 = !DILocation(line: 918, column: 37, scope: !9570)
!9697 = !DILocation(line: 918, column: 53, scope: !9570)
!9698 = !DILocation(line: 918, column: 64, scope: !9570)
!9699 = !DILocation(line: 918, column: 61, scope: !9570)
!9700 = !DILocation(line: 918, column: 19, scope: !9570)
!9701 = !DILocation(line: 918, column: 73, scope: !9570)
!9702 = !DILocation(line: 918, column: 71, scope: !9570)
!9703 = !DILocation(line: 918, column: 5, scope: !9570)
!9704 = !DILocation(line: 918, column: 11, scope: !9570)
!9705 = !DILocation(line: 919, column: 13, scope: !9570)
!9706 = !DILocation(line: 919, column: 25, scope: !9570)
!9707 = !DILocation(line: 919, column: 31, scope: !9570)
!9708 = !DILocation(line: 919, column: 40, scope: !9570)
!9709 = !DILocation(line: 919, column: 46, scope: !9570)
!9710 = !DILocation(line: 919, column: 37, scope: !9570)
!9711 = !DILocation(line: 919, column: 53, scope: !9570)
!9712 = !DILocation(line: 919, column: 64, scope: !9570)
!9713 = !DILocation(line: 919, column: 61, scope: !9570)
!9714 = !DILocation(line: 919, column: 19, scope: !9570)
!9715 = !DILocation(line: 919, column: 73, scope: !9570)
!9716 = !DILocation(line: 919, column: 71, scope: !9570)
!9717 = !DILocation(line: 919, column: 5, scope: !9570)
!9718 = !DILocation(line: 919, column: 11, scope: !9570)
!9719 = !DILocation(line: 920, column: 13, scope: !9570)
!9720 = !DILocation(line: 920, column: 23, scope: !9570)
!9721 = !DILocation(line: 920, column: 29, scope: !9570)
!9722 = !DILocation(line: 920, column: 40, scope: !9570)
!9723 = !DILocation(line: 920, column: 37, scope: !9570)
!9724 = !DILocation(line: 920, column: 19, scope: !9570)
!9725 = !DILocation(line: 920, column: 49, scope: !9570)
!9726 = !DILocation(line: 920, column: 47, scope: !9570)
!9727 = !DILocation(line: 920, column: 5, scope: !9570)
!9728 = !DILocation(line: 920, column: 11, scope: !9570)
!9729 = !DILocation(line: 922, column: 13, scope: !9570)
!9730 = !DILocation(line: 922, column: 23, scope: !9570)
!9731 = !DILocation(line: 922, column: 29, scope: !9570)
!9732 = !DILocation(line: 922, column: 38, scope: !9570)
!9733 = !DILocation(line: 922, column: 35, scope: !9570)
!9734 = !DILocation(line: 922, column: 19, scope: !9570)
!9735 = !DILocation(line: 922, column: 47, scope: !9570)
!9736 = !DILocation(line: 922, column: 45, scope: !9570)
!9737 = !DILocation(line: 922, column: 5, scope: !9570)
!9738 = !DILocation(line: 922, column: 11, scope: !9570)
!9739 = !DILocation(line: 923, column: 13, scope: !9570)
!9740 = !DILocation(line: 923, column: 25, scope: !9570)
!9741 = !DILocation(line: 923, column: 31, scope: !9570)
!9742 = !DILocation(line: 923, column: 40, scope: !9570)
!9743 = !DILocation(line: 923, column: 46, scope: !9570)
!9744 = !DILocation(line: 923, column: 37, scope: !9570)
!9745 = !DILocation(line: 923, column: 53, scope: !9570)
!9746 = !DILocation(line: 923, column: 64, scope: !9570)
!9747 = !DILocation(line: 923, column: 61, scope: !9570)
!9748 = !DILocation(line: 923, column: 19, scope: !9570)
!9749 = !DILocation(line: 923, column: 73, scope: !9570)
!9750 = !DILocation(line: 923, column: 71, scope: !9570)
!9751 = !DILocation(line: 923, column: 5, scope: !9570)
!9752 = !DILocation(line: 923, column: 11, scope: !9570)
!9753 = !DILocation(line: 924, column: 13, scope: !9570)
!9754 = !DILocation(line: 924, column: 25, scope: !9570)
!9755 = !DILocation(line: 924, column: 31, scope: !9570)
!9756 = !DILocation(line: 924, column: 40, scope: !9570)
!9757 = !DILocation(line: 924, column: 46, scope: !9570)
!9758 = !DILocation(line: 924, column: 37, scope: !9570)
!9759 = !DILocation(line: 924, column: 53, scope: !9570)
!9760 = !DILocation(line: 924, column: 64, scope: !9570)
!9761 = !DILocation(line: 924, column: 61, scope: !9570)
!9762 = !DILocation(line: 924, column: 19, scope: !9570)
!9763 = !DILocation(line: 924, column: 73, scope: !9570)
!9764 = !DILocation(line: 924, column: 71, scope: !9570)
!9765 = !DILocation(line: 924, column: 5, scope: !9570)
!9766 = !DILocation(line: 924, column: 11, scope: !9570)
!9767 = !DILocation(line: 925, column: 13, scope: !9570)
!9768 = !DILocation(line: 925, column: 23, scope: !9570)
!9769 = !DILocation(line: 925, column: 29, scope: !9570)
!9770 = !DILocation(line: 925, column: 40, scope: !9570)
!9771 = !DILocation(line: 925, column: 37, scope: !9570)
!9772 = !DILocation(line: 925, column: 19, scope: !9570)
!9773 = !DILocation(line: 925, column: 49, scope: !9570)
!9774 = !DILocation(line: 925, column: 47, scope: !9570)
!9775 = !DILocation(line: 925, column: 5, scope: !9570)
!9776 = !DILocation(line: 925, column: 11, scope: !9570)
!9777 = !DILocation(line: 927, column: 12, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9570, file: !910, line: 927, column: 5)
!9779 = !DILocation(line: 927, column: 10, scope: !9778)
!9780 = !DILocation(line: 927, column: 17, scope: !9781)
!9781 = !DILexicalBlockFile(scope: !9782, file: !910, discriminator: 1)
!9782 = distinct !DILexicalBlock(scope: !9778, file: !910, line: 927, column: 5)
!9783 = !DILocation(line: 927, column: 19, scope: !9781)
!9784 = !DILocation(line: 927, column: 5, scope: !9781)
!9785 = !DILocation(line: 928, column: 15, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9787, file: !910, line: 928, column: 13)
!9787 = distinct !DILexicalBlock(scope: !9782, file: !910, line: 927, column: 30)
!9788 = !DILocation(line: 928, column: 13, scope: !9786)
!9789 = !DILocation(line: 928, column: 18, scope: !9786)
!9790 = !DILocation(line: 928, column: 13, scope: !9787)
!9791 = !DILocation(line: 929, column: 15, scope: !9786)
!9792 = !DILocation(line: 929, column: 13, scope: !9786)
!9793 = !DILocation(line: 929, column: 18, scope: !9786)
!9794 = !DILocation(line: 931, column: 23, scope: !9786)
!9795 = !DILocation(line: 931, column: 21, scope: !9786)
!9796 = !DILocation(line: 931, column: 20, scope: !9786)
!9797 = !DILocation(line: 931, column: 15, scope: !9786)
!9798 = !DILocation(line: 931, column: 13, scope: !9786)
!9799 = !DILocation(line: 931, column: 18, scope: !9786)
!9800 = !DILocation(line: 932, column: 5, scope: !9787)
!9801 = !DILocation(line: 927, column: 25, scope: !9802)
!9802 = !DILexicalBlockFile(scope: !9782, file: !910, discriminator: 2)
!9803 = !DILocation(line: 927, column: 5, scope: !9802)
!9804 = distinct !{!9804, !9805}
!9805 = !DILocation(line: 927, column: 5, scope: !9570)
!9806 = !DILocation(line: 933, column: 1, scope: !9570)
