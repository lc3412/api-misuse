; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--vorbisenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--vorbisenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.anon = type { i32, i32, i32, i8*, i32, float, float, i8* }
%struct.anon.0 = type { i32, i32, i32, [4 x i32] }
%struct.vorbis_enc_context = type { i32, i32, [2 x i32], [2 x %struct.FFTContext], [2 x float*], i32, float*, float*, float*, float*, float*, float, %struct.AudioFrameQueue, %struct.FFBufQueue, i32, %struct.vorbis_enc_codebook*, i32, %struct.vorbis_enc_floor*, i32, %struct.vorbis_enc_residue*, i32, %struct.vorbis_enc_mapping*, i32, %struct.vorbis_enc_mode*, i64, %struct.AVFloatDSPContext* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AudioFrameQueue = type { %struct.AVCodecContext*, i32, i32, %struct.AudioFrame*, i32, i32 }
%struct.AudioFrame = type { i64, i32 }
%struct.FFBufQueue = type { [64 x %struct.AVFrame*], i16, i16 }
%struct.vorbis_enc_codebook = type { i32, i8*, i32*, i32, float, float, i32, i32, i32*, float*, float* }
%struct.vorbis_enc_floor = type { i32, i32*, i32, %struct.vorbis_enc_floor_class*, i32, i32, i32, %struct.vorbis_floor1_entry* }
%struct.vorbis_enc_floor_class = type { i32, i32, i32, i32* }
%struct.vorbis_floor1_entry = type { i16, i16, i16, i16 }
%struct.vorbis_enc_residue = type { i32, i32, i32, i32, i32, i32, [8 x i8]*, [2 x float]* }
%struct.vorbis_enc_mapping = type { i32, i32*, i32*, i32*, i32, i32*, i32* }
%struct.vorbis_enc_mode = type { i32, i32 }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"vorbis\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Vorbis\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_vorbis_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86021, i32 544, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 960, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vorbis_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @vorbis_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* @vorbis_encode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [57 x i8] c"Current FFmpeg Vorbis encoder only supports 2 channels.\0A\00", align 1
@cvectors = internal constant [29 x %struct.anon] [%struct.anon { i32 2, i32 16, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @codebook0, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 8, i32 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @codebook1, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 256, i32 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @codebook2, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 64, i32 64, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @codebook3, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 128, i32 128, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @codebook4, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 32, i32 32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @codebook5, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 96, i32 96, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @codebook6, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 32, i32 32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @codebook7, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 96, i32 96, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @codebook8, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 17, i32 17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @codebook9, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 32, i32 32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @codebook10, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 78, i32 78, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @codebook11, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 17, i32 17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @codebook12, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 32, i32 32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @codebook13, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 78, i32 78, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @codebook14, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 2, i32 100, i32 100, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @codebook15, i32 0, i32 0), i32 0, float 0.000000e+00, float 0.000000e+00, i8* null }, %struct.anon { i32 8, i32 1641, i32 6561, i8* getelementptr inbounds ([1641 x i8], [1641 x i8]* @codebook16, i32 0, i32 0), i32 1, float -1.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.compoundliteral.5, i32 0, i32 0) }, %struct.anon { i32 4, i32 443, i32 625, i8* getelementptr inbounds ([443 x i8], [443 x i8]* @codebook17, i32 0, i32 0), i32 1, float -2.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.compoundliteral.6, i32 0, i32 0) }, %struct.anon { i32 4, i32 105, i32 625, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @codebook18, i32 0, i32 0), i32 1, float -2.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.compoundliteral.7, i32 0, i32 0) }, %struct.anon { i32 2, i32 68, i32 81, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @codebook19, i32 0, i32 0), i32 1, float -4.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.compoundliteral.8, i32 0, i32 0) }, %struct.anon { i32 2, i32 81, i32 81, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @codebook20, i32 0, i32 0), i32 1, float -4.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.compoundliteral.9, i32 0, i32 0) }, %struct.anon { i32 2, i32 289, i32 289, i8* getelementptr inbounds ([289 x i8], [289 x i8]* @codebook21, i32 0, i32 0), i32 1, float -8.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.compoundliteral.10, i32 0, i32 0) }, %struct.anon { i32 4, i32 81, i32 81, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @codebook22, i32 0, i32 0), i32 1, float -1.100000e+01, float 1.100000e+01, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.compoundliteral.11, i32 0, i32 0) }, %struct.anon { i32 2, i32 121, i32 121, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @codebook23, i32 0, i32 0), i32 1, float -5.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.compoundliteral.12, i32 0, i32 0) }, %struct.anon { i32 2, i32 169, i32 169, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @codebook24, i32 0, i32 0), i32 1, float -3.000000e+01, float 5.000000e+00, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.compoundliteral.13, i32 0, i32 0) }, %struct.anon { i32 2, i32 25, i32 25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @codebook25, i32 0, i32 0), i32 1, float -2.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.compoundliteral.14, i32 0, i32 0) }, %struct.anon { i32 2, i32 169, i32 169, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @codebook26, i32 0, i32 0), i32 1, float -1.530000e+03, float 2.550000e+02, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.compoundliteral.15, i32 0, i32 0) }, %struct.anon { i32 2, i32 225, i32 225, i8* getelementptr inbounds ([225 x i8], [225 x i8]* @codebook27, i32 0, i32 0), i32 1, float -1.190000e+02, float 1.700000e+01, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.compoundliteral.16, i32 0, i32 0) }, %struct.anon { i32 2, i32 289, i32 289, i8* getelementptr inbounds ([289 x i8], [289 x i8]* @codebook28, i32 0, i32 0), i32 1, float -8.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.compoundliteral.17, i32 0, i32 0) }], align 16
@create_vorbis_context.a = internal constant [8 x i32] [i32 0, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4], align 16
@floor_classes = internal constant [5 x %struct.anon.0] [%struct.anon.0 { i32 3, i32 0, i32 0, [4 x i32] [i32 4, i32 0, i32 0, i32 0] }, %struct.anon.0 { i32 4, i32 1, i32 0, [4 x i32] [i32 5, i32 6, i32 0, i32 0] }, %struct.anon.0 { i32 3, i32 1, i32 1, [4 x i32] [i32 7, i32 8, i32 0, i32 0] }, %struct.anon.0 { i32 4, i32 2, i32 2, [4 x i32] [i32 -1, i32 9, i32 10, i32 11] }, %struct.anon.0 { i32 3, i32 2, i32 3, [4 x i32] [i32 -1, i32 12, i32 13, i32 14] }], align 16
@create_vorbis_context.a.3 = internal constant [27 x i32] [i32 93, i32 23, i32 372, i32 6, i32 46, i32 186, i32 750, i32 14, i32 33, i32 65, i32 130, i32 260, i32 556, i32 3, i32 10, i32 18, i32 28, i32 39, i32 55, i32 79, i32 111, i32 158, i32 220, i32 312, i32 464, i32 650, i32 850], align 16
@create_vorbis_context.a.4 = internal constant [10 x [8 x i8]] [[8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF", [8 x i8] c"\FF\FF\10\FF\FF\FF\FF\FF", [8 x i8] c"\FF\FF\11\FF\FF\FF\FF\FF", [8 x i8] c"\FF\FF\12\FF\FF\FF\FF\FF", [8 x i8] c"\FF\FF\13\FF\FF\FF\FF\FF", [8 x i8] c"\FF\FF\14\FF\FF\FF\FF\FF", [8 x i8] c"\FF\FF\15\FF\FF\FF\FF\FF", [8 x i8] c"\16\17\FF\FF\FF\FF\FF\FF", [8 x i8] c"\18\19\FF\FF\FF\FF\FF\FF", [8 x i8] c"\1A\1B\1C\FF\FF\FF\FF\FF"], align 16
@codebook0 = internal constant [16 x i8] c"\02\0A\08\0E\07\0C\0B\0E\01\05\03\07\04\09\07\0D", align 16
@codebook1 = internal constant [8 x i8] c"\01\04\02\06\03\07\05\07", align 1
@codebook2 = internal constant [256 x i8] calign 16
@codebook3 = internal constant [64 x i8] c"\02\03\07\0D\04\04\07\0F\08\06\09\11\15\10\0F\15\02\05\07\0B\05\05\07\0E\09\07\0A\10\11\0F\10\15\04\07\0A\11\07\07\09\0F\0B\09\0B\10\15\12\0F\15\12\15\15\15\0F\11\11\13\15\13\12\14\15\15\15\14", align 16
@codebook4 = internal constant [128 x i8] c"\05\05\05\05\06\05\06\05\06\05\06\05\06\05\06\05\06\05\06\05\06\05\06\05\07\05\07\05\07\05\07\05\08\06\08\06\08\06\09\06\09\06\0A\06\0A\06\0B\06\0B\07\0B\07\0C\07\0C\07\0C\07\0C\07\0C\07\0C\07\0C\07\0C\08\0D\08\0C\08\0C\08\0D\08\0D\09\0D\09\0D\09\0D\09\0C\0A\0C\0A\0D\0A\0E\0B\0E\0C\0E\0D\0E\0D\0E\0E\0F\10\0F\0F\0F\0E\0F\11\15\16\16\15\16\16\16\16\16\16\15\15\15\15\15\15\15\15\15\15", align 16
@codebook5 = internal constant [32 x i8] c"\02\05\05\04\05\04\05\04\05\04\06\05\06\05\06\05\06\05\07\05\07\06\08\06\08\06\08\06\09\06\09\06", align 16
@codebook6 = internal constant [96 x i8] c"\08\05\08\04\09\04\09\04\09\04\09\04\09\04\09\04\09\04\09\04\09\04\08\04\08\04\09\05\09\05\09\05\09\05\09\06\0A\06\0A\07\0A\08\0B\09\0B\0B\0C\0D\0C\0E\0D\0F\0D\0F\0E\10\0E\11\0F\11\0F\0F\10\10\0F\10\10\10\0F\12\10\0F\11\11\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13", align 16
@codebook7 = internal constant [32 x i8] c"\01\05\05\05\05\05\05\05\06\05\06\05\06\05\06\05\06\06\07\07\07\07\08\07\08\08\09\08\0A\09\0A\09", align 16
@codebook8 = internal constant [96 x i8] c"\04\03\04\03\04\04\05\04\05\04\05\05\06\05\06\05\07\05\07\06\07\06\08\07\08\07\08\07\09\08\09\09\09\09\0A\0A\0A\0B\09\0C\09\0C\09\0F\0A\0E\09\0D\0A\0D\0A\0C\0A\0C\0A\0D\0A\0C\0B\0D\0B\0E\0C\0D\0D\0E\0E\0D\0E\0F\0E\10\0D\0D\0E\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\0F\0F", align 16
@codebook9 = internal constant [17 x i8] c"\04\05\04\05\03\05\03\05\03\05\04\04\04\04\05\05\05", align 16
@codebook10 = internal constant [32 x i8] c"\03\03\04\03\04\04\04\04\05\05\05\05\05\06\05\07\05\08\06\08\06\09\07\0A\07\0A\08\0A\08\0B\09\0B", align 16
@codebook11 = internal constant [78 x i8] c"\03\07\03\08\03\0A\03\08\03\09\03\08\04\09\04\09\05\09\06\0A\06\09\07\0B\07\0C\09\0D\0A\0D\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C", align 16
@codebook12 = internal constant [17 x i8] c"\04\05\04\05\04\05\04\05\03\05\03\05\03\05\04\05\04", align 16
@codebook13 = internal constant [32 x i8] c"\04\02\04\02\05\03\05\04\06\06\06\07\07\08\07\08\07\08\07\09\08\09\08\09\08\0A\08\0B\09\0C\09\0C", align 16
@codebook14 = internal constant [78 x i8] c"\02\05\02\06\03\06\04\07\04\07\05\09\05\0B\06\0B\06\0B\07\0B\06\0B\06\0B\09\0B\08\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0A\0A\0A\0A\0A\0A", align 16
@codebook15 = internal constant [100 x i8] c"\05\06\0B\0B\0B\0B\0A\0A\0C\0B\05\02\0B\05\06\06\07\09\0B\0D\0D\0A\07\0B\06\07\08\09\0A\0C\0B\05\0B\06\08\07\09\0B\0E\0F\0B\06\06\08\04\05\07\08\0A\0D\0A\05\07\07\05\05\06\08\0A\0B\0A\07\07\08\06\05\05\07\09\09\0B\08\08\0B\08\07\06\06\07\09\0C\0B\0A\0D\09\09\07\07\07\09\0B\0D\0C\0F\0C\0B\09\08\08\08", align 16
@codebook16 = internal constant [1641 x i8] calign 16
@.compoundliteral.5 = internal constant [3 x i8] c"\01\00\02", align 1
@codebook17 = internal constant [443 x i8] calign 16
@.compoundliteral.6 = internal constant [5 x i8] c"\02\01\03\00\04", align 1
@codebook18 = internal constant [105 x i8] c"\02\04\03\06\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\04\04\06\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\04\04\06\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\06\06\09\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\06\07\09\09", align 16
@.compoundliteral.7 = internal constant [5 x i8] c"\02\01\03\00\04", align 1
@codebook19 = internal constant [68 x i8] c"\02\03\03\06\06\00\00\00\00\00\04\04\06\06\00\00\00\00\00\04\04\06\06\00\00\00\00\00\05\05\06\06\00\00\00\00\00\00\00\06\06\00\00\00\00\00\00\00\07\08\00\00\00\00\00\00\00\07\07\00\00\00\00\00\00\00\09\09", align 16
@.compoundliteral.8 = internal constant [9 x i8] c"\04\03\05\02\06\01\07\00\08", align 1
@codebook20 = internal constant [81 x i8] c"\01\03\04\06\06\07\07\09\09\00\05\05\07\07\07\08\09\09\00\05\05\07\07\08\08\09\09\00\07\07\08\08\08\08\0A\0A\00\00\00\08\08\08\08\0A\0A\00\00\00\09\09\09\09\0A\0A\00\00\00\09\09\09\09\0A\0A\00\00\00\0A\0A\0A\0A\0B\0B\00\00\00\00\00\0A\0A\0B\0B", align 16
@.compoundliteral.9 = internal constant [9 x i8] c"\04\03\05\02\06\01\07\00\08", align 1
@codebook21 = internal constant [289 x i8] calign 16
@.compoundliteral.10 = internal constant [17 x i8] c"\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F\00\10", align 1
@codebook22 = internal constant [81 x i8] c"\01\04\04\07\06\06\07\06\06\04\07\07\0A\09\09\0B\09\09\04\07\07\0A\09\09\0B\09\09\07\0A\0A\0B\0B\0A\0C\0B\0B\06\09\09\0B\0A\0A\0B\0A\0A\06\09\09\0B\0A\0A\0B\0A\0A\07\0B\0B\0B\0B\0B\0C\0B\0B\06\09\09\0B\0A\0A\0B\0A\0A\06\09\09\0B\0A\0A\0B\0A\0A", align 16
@.compoundliteral.11 = internal constant [3 x i8] c"\01\00\02", align 1
@codebook23 = internal constant [121 x i8] c"\02\04\04\06\06\07\07\07\07\08\08\0A\05\05\06\06\07\07\08\08\08\08\0A\05\05\06\06\07\07\08\08\08\08\0A\06\06\07\07\08\08\08\08\08\08\0A\0A\0A\07\07\08\07\08\08\08\08\0A\0A\0A\08\08\08\08\08\08\08\08\0A\0A\0A\07\08\08\08\08\08\08\08\0A\0A\0A\08\08\08\08\08\08\08\08\0A\0A\0A\0A\0A\08\08\08\08\08\08\0A\0A\0A\0A\0A\09\09\08\08\09\08\0A\0A\0A\0A\0A\08\08\08\08\08\08", align 16
@.compoundliteral.12 = internal constant [11 x i8] c"\05\04\06\03\07\02\08\01\09\00\0A", align 1
@codebook24 = internal constant [169 x i8] calign 16
@.compoundliteral.13 = internal constant [13 x i8] c"\06\05\07\04\08\03\09\02\0A\01\0B\00\0C", align 1
@codebook25 = internal constant [25 x i8] c"\02\04\04\05\05\06\05\05\05\05\06\04\05\05\05\06\05\05\05\05\06\06\06\05\05", align 16
@.compoundliteral.14 = internal constant [5 x i8] c"\02\01\03\00\04", align 1
@codebook26 = internal constant [169 x i8] calign 16
@.compoundliteral.15 = internal constant [13 x i8] c"\06\05\07\04\08\03\09\02\0A\01\0B\00\0C", align 1
@codebook27 = internal constant [225 x i8] c"\01\04\04\06\06\07\07\08\07\09\09\0A\0A\0A\0A\06\05\05\07\07\08\08\0A\08\0B\0A\0C\0C\0D\0D\06\05\05\07\07\08\08\0A\09\0B\0B\0C\0C\0D\0C\12\08\08\08\08\09\09\0A\09\0B\0A\0C\0C\0D\0D\12\08\08\08\08\09\09\0A\0A\0B\0B\0D\0C\0E\0D\12\0B\0B\09\09\0A\0A\0B\0B\0B\0C\0D\0C\0D\0E\12\0B\0B\09\08\0B\0A\0B\0B\0B\0B\0C\0C\0E\0D\12\12\12\0A\0B\0A\0B\0C\0C\0C\0C\0D\0C\0E\0D\12\12\12\0A\0B\0B\09\0C\0B\0C\0C\0C\0D\0D\0D\12\12\11\0E\0E\0B\0B\0C\0C\0D\0C\0E\0C\0E\0D\12\12\12\0E\0E\0B\0A\0C\09\0C\0D\0D\0D\0D\0D\12\12\11\10\12\0D\0D\0C\0C\0D\0B\0E\0C\0E\0E\11\12\12\11\12\0D\0C\0D\0A\0C\0B\0E\0E\0E\0E\11\12\12\12\12\0F\10\0C\0C\0D\0A\0E\0C\0E\0F\12\12\12\10\11\10\0E\0C\0B\0D\0A\0D\0D\0E\0F", align 16
@.compoundliteral.16 = internal constant [15 x i8] c"\07\06\08\05\09\04\0A\03\0B\02\0C\01\0D\00\0E", align 1
@codebook28 = internal constant [289 x i8] calign 16
@.compoundliteral.17 = internal constant [17 x i8] c"\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F\00\10", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"rc->type == 2\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"libavcodec/vorbisenc.c\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"cb->ndimensions >= 2\00", align 1
@__PRETTY_FUNCTION__.ready_residue = private unnamed_addr constant [62 x i8] c"int ready_residue(vorbis_enc_residue *, vorbis_enc_context *)\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"cb->lookup\00", align 1
@ff_vorbis_vwin = external constant [8 x float*], align 16
@.str.23 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"output buffer is too small\0A\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"Buffer queue overflow, dropping.\0A\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"queue->available\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"./libavfilter/bufferqueue.h\00", align 1
@ff_vorbis_floor1_inverse_db_table = external constant [256 x float], align 16
@.str.30 = private unnamed_addr constant [10 x i8] c"l != csub\00", align 1
@__PRETTY_FUNCTION__.floor_encode = private unnamed_addr constant [102 x i8] c"int floor_encode(vorbis_enc_context *, vorbis_enc_floor *, PutBitContext *, uint16_t *, float *, int)\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"real_ch == 2\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"rc->type == 0 || rc->type == 2\00", align 1
@__PRETTY_FUNCTION__.residue_encode = private unnamed_addr constant [99 x i8] c"int residue_encode(vorbis_enc_context *, vorbis_enc_residue *, PutBitContext *, float *, int, int)\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"!(psize % book->ndimensions)\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"book->dimensions\00", align 1
@__PRETTY_FUNCTION__.put_vector = private unnamed_addr constant [67 x i8] c"float *put_vector(vorbis_enc_codebook *, PutBitContext *, float *)\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vorbis_encode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1996 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %venc = alloca %struct.vorbis_enc_context*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1997, metadata !1998), !dbg !1999
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc, metadata !2000, metadata !1998), !dbg !2001
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2002
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2003
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2003
  %2 = bitcast i8* %1 to %struct.vorbis_enc_context*, !dbg !2002
  store %struct.vorbis_enc_context* %2, %struct.vorbis_enc_context** %venc, align 8, !dbg !2001
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2004, metadata !1998), !dbg !2005
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2006
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 83, !dbg !2008
  %4 = load i32, i32* %channels, align 4, !dbg !2008
  %cmp = icmp ne i32 %4, 2, !dbg !2009
  br i1 %cmp, label %if.then, label %if.end, !dbg !2010

if.then:                                          ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2011
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !2011
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i32 0, i32 0)), !dbg !2013
  store i32 -1, i32* %retval, align 4, !dbg !2014
  br label %return, !dbg !2014

if.end:                                           ; preds = %entry
  %7 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2015
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2017
  %call = call i32 @create_vorbis_context(%struct.vorbis_enc_context* %7, %struct.AVCodecContext* %8), !dbg !2018
  store i32 %call, i32* %ret, align 4, !dbg !2019
  %cmp1 = icmp slt i32 %call, 0, !dbg !2020
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2021

if.then2:                                         ; preds = %if.end
  br label %error, !dbg !2022

if.end3:                                          ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2023
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 9, !dbg !2024
  store i64 0, i64* %bit_rate, align 8, !dbg !2025
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2026
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 13, !dbg !2028
  %11 = load i32, i32* %flags, align 4, !dbg !2028
  %and = and i32 %11, 2, !dbg !2029
  %tobool = icmp ne i32 %and, 0, !dbg !2029
  br i1 %tobool, label %if.then4, label %if.else, !dbg !2030

if.then4:                                         ; preds = %if.end3
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2031
  %global_quality = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 11, !dbg !2032
  %13 = load i32, i32* %global_quality, align 4, !dbg !2032
  %conv = sitofp i32 %13 to float, !dbg !2031
  %div = fdiv float %conv, 1.180000e+02, !dbg !2033
  %14 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2034
  %quality = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %14, i32 0, i32 11, !dbg !2035
  store float %div, float* %quality, align 8, !dbg !2036
  br label %if.end6, !dbg !2034

if.else:                                          ; preds = %if.end3
  %15 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2037
  %quality5 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %15, i32 0, i32 11, !dbg !2038
  store float 8.000000e+00, float* %quality5, align 8, !dbg !2039
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  %16 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2040
  %quality7 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %16, i32 0, i32 11, !dbg !2041
  %17 = load float, float* %quality7, align 8, !dbg !2041
  %18 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2042
  %quality8 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %18, i32 0, i32 11, !dbg !2043
  %19 = load float, float* %quality8, align 8, !dbg !2044
  %mul = fmul float %19, %17, !dbg !2044
  store float %mul, float* %quality8, align 8, !dbg !2044
  %20 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2045
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2047
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 15, !dbg !2048
  %call9 = call i32 @put_main_header(%struct.vorbis_enc_context* %20, i8** %extradata), !dbg !2049
  store i32 %call9, i32* %ret, align 4, !dbg !2050
  %cmp10 = icmp slt i32 %call9, 0, !dbg !2051
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2052

if.then12:                                        ; preds = %if.end6
  br label %error, !dbg !2053

if.end13:                                         ; preds = %if.end6
  %22 = load i32, i32* %ret, align 4, !dbg !2054
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2055
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 16, !dbg !2056
  store i32 %22, i32* %extradata_size, align 8, !dbg !2057
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2058
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 85, !dbg !2059
  store i32 64, i32* %frame_size, align 4, !dbg !2060
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2061
  %26 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2062
  %afq = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %26, i32 0, i32 12, !dbg !2063
  call void @ff_af_queue_init(%struct.AVCodecContext* %25, %struct.AudioFrameQueue* %afq), !dbg !2064
  store i32 0, i32* %retval, align 4, !dbg !2065
  br label %return, !dbg !2065

error:                                            ; preds = %if.then12, %if.then2
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2066
  %call14 = call i32 @vorbis_encode_close(%struct.AVCodecContext* %27), !dbg !2067
  %28 = load i32, i32* %ret, align 4, !dbg !2068
  store i32 %28, i32* %retval, align 4, !dbg !2069
  br label %return, !dbg !2069

return:                                           ; preds = %error, %if.end13, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !2070
  ret i32 %29, !dbg !2070
}

; Function Attrs: nounwind uwtable
define internal i32 @vorbis_encode_frame(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i32* %got_packet_ptr) #1 !dbg !2071 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_packet_ptr.addr = alloca i32*, align 8
  %venc = alloca %struct.vorbis_enc_context*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %need_more = alloca i32, align 4
  %frame_size = alloca i32, align 4
  %mode = alloca %struct.vorbis_enc_mode*, align 8
  %mapping = alloca %struct.vorbis_enc_mapping*, align 8
  %pb = alloca %struct.PutBitContext, align 8
  %clone = alloca %struct.AVFrame*, align 8
  %frames_needed = alloca i32, align 4
  %i35 = alloca i32, align 4
  %empty = alloca %struct.AVFrame*, align 8
  %fc = alloca %struct.vorbis_enc_floor*, align 8
  %posts = alloca [34 x i16], align 16
  %mag = alloca float*, align 8
  %ang = alloca float*, align 8
  %j = alloca i32, align 4
  %a = alloca float, align 4
  %side = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2072, metadata !1998), !dbg !2073
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2074, metadata !1998), !dbg !2075
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2076, metadata !1998), !dbg !2077
  store i32* %got_packet_ptr, i32** %got_packet_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_packet_ptr.addr, metadata !2078, metadata !1998), !dbg !2079
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc, metadata !2080, metadata !1998), !dbg !2081
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2082
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2083
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2083
  %2 = bitcast i8* %1 to %struct.vorbis_enc_context*, !dbg !2082
  store %struct.vorbis_enc_context* %2, %struct.vorbis_enc_context** %venc, align 8, !dbg !2081
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2084, metadata !1998), !dbg !2085
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2086, metadata !1998), !dbg !2087
  call void @llvm.dbg.declare(metadata i32* %need_more, metadata !2088, metadata !1998), !dbg !2089
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !2090, metadata !1998), !dbg !2091
  %3 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2092
  %log2_blocksize = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %3, i32 0, i32 2, !dbg !2093
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize, i64 0, i64 1, !dbg !2092
  %4 = load i32, i32* %arrayidx, align 4, !dbg !2092
  %sub = sub nsw i32 %4, 1, !dbg !2094
  %shl = shl i32 1, %sub, !dbg !2095
  store i32 %shl, i32* %frame_size, align 4, !dbg !2091
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_mode** %mode, metadata !2096, metadata !1998), !dbg !2097
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_mapping** %mapping, metadata !2098, metadata !1998), !dbg !2099
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !2100, metadata !1998), !dbg !2111
  %5 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2112
  %tobool = icmp ne %struct.AVFrame* %5, null, !dbg !2112
  br i1 %tobool, label %if.then, label %if.else, !dbg !2114

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %clone, metadata !2115, metadata !1998), !dbg !2117
  %6 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2118
  %afq = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %6, i32 0, i32 12, !dbg !2120
  %7 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2121
  %call = call i32 @ff_af_queue_add(%struct.AudioFrameQueue* %afq, %struct.AVFrame* %7), !dbg !2122
  store i32 %call, i32* %ret, align 4, !dbg !2123
  %cmp = icmp slt i32 %call, 0, !dbg !2124
  br i1 %cmp, label %if.then1, label %if.end, !dbg !2125

if.then1:                                         ; preds = %if.then
  %8 = load i32, i32* %ret, align 4, !dbg !2126
  store i32 %8, i32* %retval, align 4, !dbg !2127
  br label %return, !dbg !2127

if.end:                                           ; preds = %if.then
  %9 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2128
  %call2 = call %struct.AVFrame* @av_frame_clone(%struct.AVFrame* %9), !dbg !2129
  store %struct.AVFrame* %call2, %struct.AVFrame** %clone, align 8, !dbg !2130
  %10 = load %struct.AVFrame*, %struct.AVFrame** %clone, align 8, !dbg !2131
  %tobool3 = icmp ne %struct.AVFrame* %10, null, !dbg !2131
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !2133

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !2134
  br label %return, !dbg !2134

if.end5:                                          ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2135
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !2135
  %13 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2136
  %bufqueue = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %13, i32 0, i32 13, !dbg !2137
  %14 = load %struct.AVFrame*, %struct.AVFrame** %clone, align 8, !dbg !2138
  call void @ff_bufqueue_add(i8* %12, %struct.FFBufQueue* %bufqueue, %struct.AVFrame* %14), !dbg !2139
  br label %if.end10, !dbg !2140

if.else:                                          ; preds = %entry
  %15 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2141
  %afq6 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %15, i32 0, i32 12, !dbg !2143
  %remaining_samples = getelementptr inbounds %struct.AudioFrameQueue, %struct.AudioFrameQueue* %afq6, i32 0, i32 2, !dbg !2144
  %16 = load i32, i32* %remaining_samples, align 4, !dbg !2144
  %tobool7 = icmp ne i32 %16, 0, !dbg !2141
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !2145

if.then8:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !2146
  br label %return, !dbg !2146

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end5
  %17 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2147
  %bufqueue11 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %17, i32 0, i32 13, !dbg !2148
  %available = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %bufqueue11, i32 0, i32 2, !dbg !2149
  %18 = load i16, i16* %available, align 2, !dbg !2149
  %conv = zext i16 %18 to i32, !dbg !2147
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2150
  %frame_size12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 85, !dbg !2151
  %20 = load i32, i32* %frame_size12, align 4, !dbg !2151
  %mul = mul nsw i32 %conv, %20, !dbg !2152
  %21 = load i32, i32* %frame_size, align 4, !dbg !2153
  %cmp13 = icmp slt i32 %mul, %21, !dbg !2154
  %conv14 = zext i1 %cmp13 to i32, !dbg !2154
  store i32 %conv14, i32* %need_more, align 4, !dbg !2155
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2156
  %tobool15 = icmp ne %struct.AVFrame* %22, null, !dbg !2156
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !2157

land.rhs:                                         ; preds = %if.end10
  %23 = load i32, i32* %need_more, align 4, !dbg !2158
  %tobool16 = icmp ne i32 %23, 0, !dbg !2160
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end10
  %24 = phi i1 [ false, %if.end10 ], [ %tobool16, %land.rhs ]
  %land.ext = zext i1 %24 to i32, !dbg !2161
  store i32 %land.ext, i32* %need_more, align 4, !dbg !2163
  %25 = load i32, i32* %need_more, align 4, !dbg !2164
  %tobool17 = icmp ne i32 %25, 0, !dbg !2164
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !2166

if.then18:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !2167
  br label %return, !dbg !2167

if.end19:                                         ; preds = %land.end
  %26 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2168
  %tobool20 = icmp ne %struct.AVFrame* %26, null, !dbg !2168
  br i1 %tobool20, label %if.end44, label %if.then21, !dbg !2170

if.then21:                                        ; preds = %if.end19
  %27 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2171
  %bufqueue22 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %27, i32 0, i32 13, !dbg !2174
  %available23 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %bufqueue22, i32 0, i32 2, !dbg !2175
  %28 = load i16, i16* %available23, align 2, !dbg !2175
  %conv24 = zext i16 %28 to i32, !dbg !2171
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2176
  %frame_size25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 85, !dbg !2177
  %30 = load i32, i32* %frame_size25, align 4, !dbg !2177
  %mul26 = mul nsw i32 %conv24, %30, !dbg !2178
  %31 = load i32, i32* %frame_size, align 4, !dbg !2179
  %cmp27 = icmp slt i32 %mul26, %31, !dbg !2180
  br i1 %cmp27, label %if.then29, label %if.end43, !dbg !2181

if.then29:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata i32* %frames_needed, metadata !2182, metadata !1998), !dbg !2184
  %32 = load i32, i32* %frame_size, align 4, !dbg !2185
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2186
  %frame_size30 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 85, !dbg !2187
  %34 = load i32, i32* %frame_size30, align 4, !dbg !2187
  %div = sdiv i32 %32, %34, !dbg !2188
  %35 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2189
  %bufqueue31 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %35, i32 0, i32 13, !dbg !2190
  %available32 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %bufqueue31, i32 0, i32 2, !dbg !2191
  %36 = load i16, i16* %available32, align 2, !dbg !2191
  %conv33 = zext i16 %36 to i32, !dbg !2189
  %sub34 = sub nsw i32 %div, %conv33, !dbg !2192
  store i32 %sub34, i32* %frames_needed, align 4, !dbg !2184
  call void @llvm.dbg.declare(metadata i32* %i35, metadata !2193, metadata !1998), !dbg !2194
  store i32 0, i32* %i35, align 4, !dbg !2195
  br label %for.cond, !dbg !2197

for.cond:                                         ; preds = %for.inc, %if.then29
  %37 = load i32, i32* %i35, align 4, !dbg !2198
  %38 = load i32, i32* %frames_needed, align 4, !dbg !2201
  %cmp36 = icmp slt i32 %37, %38, !dbg !2202
  br i1 %cmp36, label %for.body, label %for.end, !dbg !2203

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %empty, metadata !2204, metadata !1998), !dbg !2206
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2207
  %40 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2208
  %channels = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %40, i32 0, i32 0, !dbg !2209
  %41 = load i32, i32* %channels, align 8, !dbg !2209
  %call38 = call %struct.AVFrame* @spawn_empty_frame(%struct.AVCodecContext* %39, i32 %41), !dbg !2210
  store %struct.AVFrame* %call38, %struct.AVFrame** %empty, align 8, !dbg !2206
  %42 = load %struct.AVFrame*, %struct.AVFrame** %empty, align 8, !dbg !2211
  %tobool39 = icmp ne %struct.AVFrame* %42, null, !dbg !2211
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !2213

if.then40:                                        ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !2214
  br label %return, !dbg !2214

if.end41:                                         ; preds = %for.body
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2215
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !2215
  %45 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2216
  %bufqueue42 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %45, i32 0, i32 13, !dbg !2217
  %46 = load %struct.AVFrame*, %struct.AVFrame** %empty, align 8, !dbg !2218
  call void @ff_bufqueue_add(i8* %44, %struct.FFBufQueue* %bufqueue42, %struct.AVFrame* %46), !dbg !2219
  br label %for.inc, !dbg !2220

for.inc:                                          ; preds = %if.end41
  %47 = load i32, i32* %i35, align 4, !dbg !2221
  %inc = add nsw i32 %47, 1, !dbg !2221
  store i32 %inc, i32* %i35, align 4, !dbg !2221
  br label %for.cond, !dbg !2223, !llvm.loop !2224

for.end:                                          ; preds = %for.cond
  br label %if.end43, !dbg !2226

if.end43:                                         ; preds = %for.end, %if.then21
  br label %if.end44, !dbg !2227

if.end44:                                         ; preds = %if.end43, %if.end19
  %48 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2228
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2229
  %frame_size45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 85, !dbg !2230
  %50 = load i32, i32* %frame_size45, align 4, !dbg !2230
  call void @move_audio(%struct.vorbis_enc_context* %48, i32 %50), !dbg !2231
  %51 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2232
  %call46 = call i32 @apply_window_and_mdct(%struct.vorbis_enc_context* %51), !dbg !2234
  %tobool47 = icmp ne i32 %call46, 0, !dbg !2234
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !2235

if.then48:                                        ; preds = %if.end44
  store i32 0, i32* %retval, align 4, !dbg !2236
  br label %return, !dbg !2236

if.end49:                                         ; preds = %if.end44
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2237
  %53 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2239
  %call50 = call i32 @ff_alloc_packet2(%struct.AVCodecContext* %52, %struct.AVPacket* %53, i64 8192, i64 0), !dbg !2240
  store i32 %call50, i32* %ret, align 4, !dbg !2241
  %cmp51 = icmp slt i32 %call50, 0, !dbg !2242
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !2243

if.then53:                                        ; preds = %if.end49
  %54 = load i32, i32* %ret, align 4, !dbg !2244
  store i32 %54, i32* %retval, align 4, !dbg !2245
  br label %return, !dbg !2245

if.end54:                                         ; preds = %if.end49
  %55 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2246
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %55, i32 0, i32 3, !dbg !2247
  %56 = load i8*, i8** %data, align 8, !dbg !2247
  %57 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2248
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %57, i32 0, i32 4, !dbg !2249
  %58 = load i32, i32* %size, align 8, !dbg !2249
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %56, i32 %58), !dbg !2250
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %pb, i32 0, i32 5, !dbg !2251
  %59 = load i32, i32* %size_in_bits, align 8, !dbg !2251
  %call55 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !2253
  %sub56 = sub nsw i32 %59, %call55, !dbg !2254
  %60 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2255
  %nmodes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %60, i32 0, i32 22, !dbg !2256
  %61 = load i32, i32* %nmodes, align 8, !dbg !2256
  %sub57 = sub nsw i32 %61, 1, !dbg !2257
  %mul58 = mul nsw i32 2, %sub57, !dbg !2258
  %or = or i32 %mul58, 1, !dbg !2259
  %62 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !2260
  %sub59 = sub nsw i32 31, %62, !dbg !2262
  %add = add nsw i32 1, %sub59, !dbg !2263
  %cmp60 = icmp slt i32 %sub56, %add, !dbg !2264
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2265

if.then62:                                        ; preds = %if.end54
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2266
  %64 = bitcast %struct.AVCodecContext* %63 to i8*, !dbg !2266
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i32 0, i32 0)), !dbg !2268
  store i32 -22, i32* %retval, align 4, !dbg !2269
  br label %return, !dbg !2269

if.end63:                                         ; preds = %if.end54
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !2270
  %65 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2271
  %nmodes64 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %65, i32 0, i32 22, !dbg !2272
  %66 = load i32, i32* %nmodes64, align 8, !dbg !2272
  %sub65 = sub nsw i32 %66, 1, !dbg !2273
  %mul66 = mul nsw i32 2, %sub65, !dbg !2274
  %or67 = or i32 %mul66, 1, !dbg !2275
  %67 = call i32 @llvm.ctlz.i32(i32 %or67, i1 true), !dbg !2276
  %sub68 = sub nsw i32 31, %67, !dbg !2277
  call void @put_bits(%struct.PutBitContext* %pb, i32 %sub68, i32 1), !dbg !2278
  %68 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2279
  %modes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %68, i32 0, i32 23, !dbg !2280
  %69 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes, align 8, !dbg !2280
  %arrayidx69 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %69, i64 1, !dbg !2279
  store %struct.vorbis_enc_mode* %arrayidx69, %struct.vorbis_enc_mode** %mode, align 8, !dbg !2281
  %70 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %mode, align 8, !dbg !2282
  %mapping70 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %70, i32 0, i32 1, !dbg !2283
  %71 = load i32, i32* %mapping70, align 4, !dbg !2283
  %idxprom = sext i32 %71 to i64, !dbg !2284
  %72 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2284
  %mappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %72, i32 0, i32 21, !dbg !2285
  %73 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings, align 8, !dbg !2285
  %arrayidx71 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %73, i64 %idxprom, !dbg !2284
  store %struct.vorbis_enc_mapping* %arrayidx71, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2286
  %74 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %mode, align 8, !dbg !2287
  %blockflag = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %74, i32 0, i32 0, !dbg !2289
  %75 = load i32, i32* %blockflag, align 4, !dbg !2289
  %tobool72 = icmp ne i32 %75, 0, !dbg !2287
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !2290

if.then73:                                        ; preds = %if.end63
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !2291
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !2293
  br label %if.end74, !dbg !2294

if.end74:                                         ; preds = %if.then73, %if.end63
  store i32 0, i32* %i, align 4, !dbg !2295
  br label %for.cond75, !dbg !2297

for.cond75:                                       ; preds = %for.inc98, %if.end74
  %76 = load i32, i32* %i, align 4, !dbg !2298
  %77 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2301
  %channels76 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %77, i32 0, i32 0, !dbg !2302
  %78 = load i32, i32* %channels76, align 8, !dbg !2302
  %cmp77 = icmp slt i32 %76, %78, !dbg !2303
  br i1 %cmp77, label %for.body79, label %for.end100, !dbg !2304

for.body79:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor** %fc, metadata !2305, metadata !1998), !dbg !2307
  %79 = load i32, i32* %i, align 4, !dbg !2308
  %idxprom80 = sext i32 %79 to i64, !dbg !2309
  %80 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2309
  %mux = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %80, i32 0, i32 1, !dbg !2310
  %81 = load i32*, i32** %mux, align 8, !dbg !2310
  %arrayidx81 = getelementptr inbounds i32, i32* %81, i64 %idxprom80, !dbg !2309
  %82 = load i32, i32* %arrayidx81, align 4, !dbg !2309
  %idxprom82 = sext i32 %82 to i64, !dbg !2311
  %83 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2311
  %floor = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %83, i32 0, i32 2, !dbg !2312
  %84 = load i32*, i32** %floor, align 8, !dbg !2312
  %arrayidx83 = getelementptr inbounds i32, i32* %84, i64 %idxprom82, !dbg !2311
  %85 = load i32, i32* %arrayidx83, align 4, !dbg !2311
  %idxprom84 = sext i32 %85 to i64, !dbg !2313
  %86 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2313
  %floors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %86, i32 0, i32 17, !dbg !2314
  %87 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors, align 8, !dbg !2314
  %arrayidx85 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %87, i64 %idxprom84, !dbg !2313
  store %struct.vorbis_enc_floor* %arrayidx85, %struct.vorbis_enc_floor** %fc, align 8, !dbg !2307
  call void @llvm.dbg.declare(metadata [34 x i16]* %posts, metadata !2315, metadata !1998), !dbg !2319
  %88 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2320
  %89 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !2321
  %90 = load i32, i32* %i, align 4, !dbg !2322
  %91 = load i32, i32* %frame_size, align 4, !dbg !2323
  %mul86 = mul nsw i32 %90, %91, !dbg !2324
  %idxprom87 = sext i32 %mul86 to i64, !dbg !2325
  %92 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2325
  %coeffs = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %92, i32 0, i32 9, !dbg !2326
  %93 = load float*, float** %coeffs, align 8, !dbg !2326
  %arrayidx88 = getelementptr inbounds float, float* %93, i64 %idxprom87, !dbg !2325
  %arraydecay = getelementptr inbounds [34 x i16], [34 x i16]* %posts, i32 0, i32 0, !dbg !2327
  %94 = load i32, i32* %frame_size, align 4, !dbg !2328
  call void @floor_fit(%struct.vorbis_enc_context* %88, %struct.vorbis_enc_floor* %89, float* %arrayidx88, i16* %arraydecay, i32 %94), !dbg !2329
  %95 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2330
  %96 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !2332
  %arraydecay89 = getelementptr inbounds [34 x i16], [34 x i16]* %posts, i32 0, i32 0, !dbg !2333
  %97 = load i32, i32* %i, align 4, !dbg !2334
  %98 = load i32, i32* %frame_size, align 4, !dbg !2335
  %mul90 = mul nsw i32 %97, %98, !dbg !2336
  %idxprom91 = sext i32 %mul90 to i64, !dbg !2337
  %99 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2337
  %floor92 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %99, i32 0, i32 8, !dbg !2338
  %100 = load float*, float** %floor92, align 8, !dbg !2338
  %arrayidx93 = getelementptr inbounds float, float* %100, i64 %idxprom91, !dbg !2337
  %101 = load i32, i32* %frame_size, align 4, !dbg !2339
  %call94 = call i32 @floor_encode(%struct.vorbis_enc_context* %95, %struct.vorbis_enc_floor* %96, %struct.PutBitContext* %pb, i16* %arraydecay89, float* %arrayidx93, i32 %101), !dbg !2340
  %tobool95 = icmp ne i32 %call94, 0, !dbg !2340
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !2341

if.then96:                                        ; preds = %for.body79
  %102 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2342
  %103 = bitcast %struct.AVCodecContext* %102 to i8*, !dbg !2342
  call void (i8*, i32, i8*, ...) @av_log(i8* %103, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i32 0, i32 0)), !dbg !2344
  store i32 -22, i32* %retval, align 4, !dbg !2345
  br label %return, !dbg !2345

if.end97:                                         ; preds = %for.body79
  br label %for.inc98, !dbg !2346

for.inc98:                                        ; preds = %if.end97
  %104 = load i32, i32* %i, align 4, !dbg !2347
  %inc99 = add nsw i32 %104, 1, !dbg !2347
  store i32 %inc99, i32* %i, align 4, !dbg !2347
  br label %for.cond75, !dbg !2349, !llvm.loop !2350

for.end100:                                       ; preds = %for.cond75
  store i32 0, i32* %i, align 4, !dbg !2352
  br label %for.cond101, !dbg !2354

for.cond101:                                      ; preds = %for.inc114, %for.end100
  %105 = load i32, i32* %i, align 4, !dbg !2355
  %106 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2358
  %channels102 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %106, i32 0, i32 0, !dbg !2359
  %107 = load i32, i32* %channels102, align 8, !dbg !2359
  %108 = load i32, i32* %frame_size, align 4, !dbg !2360
  %mul103 = mul nsw i32 %107, %108, !dbg !2361
  %cmp104 = icmp slt i32 %105, %mul103, !dbg !2362
  br i1 %cmp104, label %for.body106, label %for.end116, !dbg !2363

for.body106:                                      ; preds = %for.cond101
  %109 = load i32, i32* %i, align 4, !dbg !2364
  %idxprom107 = sext i32 %109 to i64, !dbg !2365
  %110 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2365
  %floor108 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %110, i32 0, i32 8, !dbg !2366
  %111 = load float*, float** %floor108, align 8, !dbg !2366
  %arrayidx109 = getelementptr inbounds float, float* %111, i64 %idxprom107, !dbg !2365
  %112 = load float, float* %arrayidx109, align 4, !dbg !2365
  %113 = load i32, i32* %i, align 4, !dbg !2367
  %idxprom110 = sext i32 %113 to i64, !dbg !2368
  %114 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2368
  %coeffs111 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %114, i32 0, i32 9, !dbg !2369
  %115 = load float*, float** %coeffs111, align 8, !dbg !2369
  %arrayidx112 = getelementptr inbounds float, float* %115, i64 %idxprom110, !dbg !2368
  %116 = load float, float* %arrayidx112, align 4, !dbg !2370
  %div113 = fdiv float %116, %112, !dbg !2370
  store float %div113, float* %arrayidx112, align 4, !dbg !2370
  br label %for.inc114, !dbg !2368

for.inc114:                                       ; preds = %for.body106
  %117 = load i32, i32* %i, align 4, !dbg !2371
  %inc115 = add nsw i32 %117, 1, !dbg !2371
  store i32 %inc115, i32* %i, align 4, !dbg !2371
  br label %for.cond101, !dbg !2373, !llvm.loop !2374

for.end116:                                       ; preds = %for.cond101
  store i32 0, i32* %i, align 4, !dbg !2376
  br label %for.cond117, !dbg !2378

for.cond117:                                      ; preds = %for.inc164, %for.end116
  %118 = load i32, i32* %i, align 4, !dbg !2379
  %119 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2382
  %coupling_steps = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %119, i32 0, i32 4, !dbg !2383
  %120 = load i32, i32* %coupling_steps, align 8, !dbg !2383
  %cmp118 = icmp slt i32 %118, %120, !dbg !2384
  br i1 %cmp118, label %for.body120, label %for.end166, !dbg !2385

for.body120:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata float** %mag, metadata !2386, metadata !1998), !dbg !2388
  %121 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2389
  %coeffs121 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %121, i32 0, i32 9, !dbg !2390
  %122 = load float*, float** %coeffs121, align 8, !dbg !2390
  %123 = load i32, i32* %i, align 4, !dbg !2391
  %idxprom122 = sext i32 %123 to i64, !dbg !2392
  %124 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2392
  %magnitude = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %124, i32 0, i32 5, !dbg !2393
  %125 = load i32*, i32** %magnitude, align 8, !dbg !2393
  %arrayidx123 = getelementptr inbounds i32, i32* %125, i64 %idxprom122, !dbg !2392
  %126 = load i32, i32* %arrayidx123, align 4, !dbg !2392
  %127 = load i32, i32* %frame_size, align 4, !dbg !2394
  %mul124 = mul nsw i32 %126, %127, !dbg !2395
  %idx.ext = sext i32 %mul124 to i64, !dbg !2396
  %add.ptr = getelementptr inbounds float, float* %122, i64 %idx.ext, !dbg !2396
  store float* %add.ptr, float** %mag, align 8, !dbg !2388
  call void @llvm.dbg.declare(metadata float** %ang, metadata !2397, metadata !1998), !dbg !2398
  %128 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2399
  %coeffs125 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %128, i32 0, i32 9, !dbg !2400
  %129 = load float*, float** %coeffs125, align 8, !dbg !2400
  %130 = load i32, i32* %i, align 4, !dbg !2401
  %idxprom126 = sext i32 %130 to i64, !dbg !2402
  %131 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2402
  %angle = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %131, i32 0, i32 6, !dbg !2403
  %132 = load i32*, i32** %angle, align 8, !dbg !2403
  %arrayidx127 = getelementptr inbounds i32, i32* %132, i64 %idxprom126, !dbg !2402
  %133 = load i32, i32* %arrayidx127, align 4, !dbg !2402
  %134 = load i32, i32* %frame_size, align 4, !dbg !2404
  %mul128 = mul nsw i32 %133, %134, !dbg !2405
  %idx.ext129 = sext i32 %mul128 to i64, !dbg !2406
  %add.ptr130 = getelementptr inbounds float, float* %129, i64 %idx.ext129, !dbg !2406
  store float* %add.ptr130, float** %ang, align 8, !dbg !2398
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2407, metadata !1998), !dbg !2408
  store i32 0, i32* %j, align 4, !dbg !2409
  br label %for.cond131, !dbg !2411

for.cond131:                                      ; preds = %for.inc161, %for.body120
  %135 = load i32, i32* %j, align 4, !dbg !2412
  %136 = load i32, i32* %frame_size, align 4, !dbg !2415
  %cmp132 = icmp slt i32 %135, %136, !dbg !2416
  br i1 %cmp132, label %for.body134, label %for.end163, !dbg !2417

for.body134:                                      ; preds = %for.cond131
  call void @llvm.dbg.declare(metadata float* %a, metadata !2418, metadata !1998), !dbg !2420
  %137 = load i32, i32* %j, align 4, !dbg !2421
  %idxprom135 = sext i32 %137 to i64, !dbg !2422
  %138 = load float*, float** %ang, align 8, !dbg !2422
  %arrayidx136 = getelementptr inbounds float, float* %138, i64 %idxprom135, !dbg !2422
  %139 = load float, float* %arrayidx136, align 4, !dbg !2422
  store float %139, float* %a, align 4, !dbg !2420
  %140 = load i32, i32* %j, align 4, !dbg !2423
  %idxprom137 = sext i32 %140 to i64, !dbg !2424
  %141 = load float*, float** %mag, align 8, !dbg !2424
  %arrayidx138 = getelementptr inbounds float, float* %141, i64 %idxprom137, !dbg !2424
  %142 = load float, float* %arrayidx138, align 4, !dbg !2424
  %143 = load i32, i32* %j, align 4, !dbg !2425
  %idxprom139 = sext i32 %143 to i64, !dbg !2426
  %144 = load float*, float** %ang, align 8, !dbg !2426
  %arrayidx140 = getelementptr inbounds float, float* %144, i64 %idxprom139, !dbg !2426
  %145 = load float, float* %arrayidx140, align 4, !dbg !2427
  %sub141 = fsub float %145, %142, !dbg !2427
  store float %sub141, float* %arrayidx140, align 4, !dbg !2427
  %146 = load i32, i32* %j, align 4, !dbg !2428
  %idxprom142 = sext i32 %146 to i64, !dbg !2430
  %147 = load float*, float** %mag, align 8, !dbg !2430
  %arrayidx143 = getelementptr inbounds float, float* %147, i64 %idxprom142, !dbg !2430
  %148 = load float, float* %arrayidx143, align 4, !dbg !2430
  %cmp144 = fcmp ogt float %148, 0.000000e+00, !dbg !2431
  br i1 %cmp144, label %if.then146, label %if.end152, !dbg !2432

if.then146:                                       ; preds = %for.body134
  %149 = load i32, i32* %j, align 4, !dbg !2433
  %idxprom147 = sext i32 %149 to i64, !dbg !2434
  %150 = load float*, float** %ang, align 8, !dbg !2434
  %arrayidx148 = getelementptr inbounds float, float* %150, i64 %idxprom147, !dbg !2434
  %151 = load float, float* %arrayidx148, align 4, !dbg !2434
  %sub149 = fsub float -0.000000e+00, %151, !dbg !2435
  %152 = load i32, i32* %j, align 4, !dbg !2436
  %idxprom150 = sext i32 %152 to i64, !dbg !2437
  %153 = load float*, float** %ang, align 8, !dbg !2437
  %arrayidx151 = getelementptr inbounds float, float* %153, i64 %idxprom150, !dbg !2437
  store float %sub149, float* %arrayidx151, align 4, !dbg !2438
  br label %if.end152, !dbg !2437

if.end152:                                        ; preds = %if.then146, %for.body134
  %154 = load i32, i32* %j, align 4, !dbg !2439
  %idxprom153 = sext i32 %154 to i64, !dbg !2441
  %155 = load float*, float** %ang, align 8, !dbg !2441
  %arrayidx154 = getelementptr inbounds float, float* %155, i64 %idxprom153, !dbg !2441
  %156 = load float, float* %arrayidx154, align 4, !dbg !2441
  %cmp155 = fcmp olt float %156, 0.000000e+00, !dbg !2442
  br i1 %cmp155, label %if.then157, label %if.end160, !dbg !2443

if.then157:                                       ; preds = %if.end152
  %157 = load float, float* %a, align 4, !dbg !2444
  %158 = load i32, i32* %j, align 4, !dbg !2445
  %idxprom158 = sext i32 %158 to i64, !dbg !2446
  %159 = load float*, float** %mag, align 8, !dbg !2446
  %arrayidx159 = getelementptr inbounds float, float* %159, i64 %idxprom158, !dbg !2446
  store float %157, float* %arrayidx159, align 4, !dbg !2447
  br label %if.end160, !dbg !2446

if.end160:                                        ; preds = %if.then157, %if.end152
  br label %for.inc161, !dbg !2448

for.inc161:                                       ; preds = %if.end160
  %160 = load i32, i32* %j, align 4, !dbg !2449
  %inc162 = add nsw i32 %160, 1, !dbg !2449
  store i32 %inc162, i32* %j, align 4, !dbg !2449
  br label %for.cond131, !dbg !2451, !llvm.loop !2452

for.end163:                                       ; preds = %for.cond131
  br label %for.inc164, !dbg !2454

for.inc164:                                       ; preds = %for.end163
  %161 = load i32, i32* %i, align 4, !dbg !2455
  %inc165 = add nsw i32 %161, 1, !dbg !2455
  store i32 %inc165, i32* %i, align 4, !dbg !2455
  br label %for.cond117, !dbg !2457, !llvm.loop !2458

for.end166:                                       ; preds = %for.cond117
  %162 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2460
  %163 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2462
  %mux167 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %163, i32 0, i32 1, !dbg !2463
  %164 = load i32*, i32** %mux167, align 8, !dbg !2463
  %arrayidx168 = getelementptr inbounds i32, i32* %164, i64 0, !dbg !2462
  %165 = load i32, i32* %arrayidx168, align 4, !dbg !2462
  %idxprom169 = sext i32 %165 to i64, !dbg !2464
  %166 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mapping, align 8, !dbg !2464
  %residue = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %166, i32 0, i32 3, !dbg !2465
  %167 = load i32*, i32** %residue, align 8, !dbg !2465
  %arrayidx170 = getelementptr inbounds i32, i32* %167, i64 %idxprom169, !dbg !2464
  %168 = load i32, i32* %arrayidx170, align 4, !dbg !2464
  %idxprom171 = sext i32 %168 to i64, !dbg !2466
  %169 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2466
  %residues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %169, i32 0, i32 19, !dbg !2467
  %170 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues, align 8, !dbg !2467
  %arrayidx172 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %170, i64 %idxprom171, !dbg !2466
  %171 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2468
  %coeffs173 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %171, i32 0, i32 9, !dbg !2469
  %172 = load float*, float** %coeffs173, align 8, !dbg !2469
  %173 = load i32, i32* %frame_size, align 4, !dbg !2470
  %174 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2471
  %channels174 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %174, i32 0, i32 0, !dbg !2472
  %175 = load i32, i32* %channels174, align 8, !dbg !2472
  %call175 = call i32 @residue_encode(%struct.vorbis_enc_context* %162, %struct.vorbis_enc_residue* %arrayidx172, %struct.PutBitContext* %pb, float* %172, i32 %173, i32 %175), !dbg !2473
  %tobool176 = icmp ne i32 %call175, 0, !dbg !2473
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !2474

if.then177:                                       ; preds = %for.end166
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2475
  %177 = bitcast %struct.AVCodecContext* %176 to i8*, !dbg !2475
  call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i32 0, i32 0)), !dbg !2477
  store i32 -22, i32* %retval, align 4, !dbg !2478
  br label %return, !dbg !2478

if.end178:                                        ; preds = %for.end166
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !2479
  %call179 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !2480
  %shr = ashr i32 %call179, 3, !dbg !2481
  %178 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2482
  %size180 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %178, i32 0, i32 4, !dbg !2483
  store i32 %shr, i32* %size180, align 8, !dbg !2484
  %179 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2485
  %afq181 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %179, i32 0, i32 12, !dbg !2486
  %180 = load i32, i32* %frame_size, align 4, !dbg !2487
  %181 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2488
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %181, i32 0, i32 1, !dbg !2489
  %182 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2490
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %182, i32 0, i32 9, !dbg !2491
  call void @ff_af_queue_remove(%struct.AudioFrameQueue* %afq181, i32 %180, i64* %pts, i64* %duration), !dbg !2492
  %183 = load i32, i32* %frame_size, align 4, !dbg !2493
  %conv182 = sext i32 %183 to i64, !dbg !2493
  %184 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2495
  %duration183 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %184, i32 0, i32 9, !dbg !2496
  %185 = load i64, i64* %duration183, align 8, !dbg !2496
  %cmp184 = icmp sgt i64 %conv182, %185, !dbg !2497
  br i1 %cmp184, label %if.then186, label %if.end196, !dbg !2498

if.then186:                                       ; preds = %if.end178
  call void @llvm.dbg.declare(metadata i8** %side, metadata !2499, metadata !1998), !dbg !2501
  %186 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2502
  %call187 = call i8* @av_packet_new_side_data(%struct.AVPacket* %186, i32 11, i32 10), !dbg !2503
  store i8* %call187, i8** %side, align 8, !dbg !2501
  %187 = load i8*, i8** %side, align 8, !dbg !2504
  %tobool188 = icmp ne i8* %187, null, !dbg !2504
  br i1 %tobool188, label %if.end190, label %if.then189, !dbg !2506

if.then189:                                       ; preds = %if.then186
  store i32 -12, i32* %retval, align 4, !dbg !2507
  br label %return, !dbg !2507

if.end190:                                        ; preds = %if.then186
  %188 = load i32, i32* %frame_size, align 4, !dbg !2508
  %conv191 = sext i32 %188 to i64, !dbg !2508
  %189 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2509
  %duration192 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %189, i32 0, i32 9, !dbg !2510
  %190 = load i64, i64* %duration192, align 8, !dbg !2510
  %sub193 = sub nsw i64 %conv191, %190, !dbg !2511
  %conv194 = trunc i64 %sub193 to i32, !dbg !2512
  %191 = load i8*, i8** %side, align 8, !dbg !2513
  %arrayidx195 = getelementptr inbounds i8, i8* %191, i64 4, !dbg !2513
  %192 = bitcast i8* %arrayidx195 to %union.unaligned_32*, !dbg !2514
  %l = bitcast %union.unaligned_32* %192 to i32*, !dbg !2514
  store i32 %conv194, i32* %l, align 1, !dbg !2515
  br label %if.end196, !dbg !2516

if.end196:                                        ; preds = %if.end190, %if.end178
  %193 = load i32*, i32** %got_packet_ptr.addr, align 8, !dbg !2517
  store i32 1, i32* %193, align 4, !dbg !2518
  store i32 0, i32* %retval, align 4, !dbg !2519
  br label %return, !dbg !2519

return:                                           ; preds = %if.end196, %if.then189, %if.then177, %if.then96, %if.then62, %if.then53, %if.then48, %if.then40, %if.then18, %if.then8, %if.then4, %if.then1
  %194 = load i32, i32* %retval, align 4, !dbg !2520
  ret i32 %194, !dbg !2520
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vorbis_encode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2521 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %venc = alloca %struct.vorbis_enc_context*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2522, metadata !1998), !dbg !2523
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc, metadata !2524, metadata !1998), !dbg !2525
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2526
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2527
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2527
  %2 = bitcast i8* %1 to %struct.vorbis_enc_context*, !dbg !2526
  store %struct.vorbis_enc_context* %2, %struct.vorbis_enc_context** %venc, align 8, !dbg !2525
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2528, metadata !1998), !dbg !2529
  %3 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2530
  %codebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %3, i32 0, i32 15, !dbg !2532
  %4 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks, align 8, !dbg !2532
  %tobool = icmp ne %struct.vorbis_enc_codebook* %4, null, !dbg !2530
  br i1 %tobool, label %if.then, label %if.end, !dbg !2533

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2534
  br label %for.cond, !dbg !2536

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !2537
  %6 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2540
  %ncodebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %6, i32 0, i32 14, !dbg !2541
  %7 = load i32, i32* %ncodebooks, align 8, !dbg !2541
  %cmp = icmp slt i32 %5, %7, !dbg !2542
  br i1 %cmp, label %for.body, label %for.end, !dbg !2543

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !2544
  %idxprom = sext i32 %8 to i64, !dbg !2546
  %9 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2546
  %codebooks1 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %9, i32 0, i32 15, !dbg !2547
  %10 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks1, align 8, !dbg !2547
  %arrayidx = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %10, i64 %idxprom, !dbg !2546
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx, i32 0, i32 1, !dbg !2548
  %11 = bitcast i8** %lens to i8*, !dbg !2549
  call void @av_freep(i8* %11), !dbg !2550
  %12 = load i32, i32* %i, align 4, !dbg !2551
  %idxprom2 = sext i32 %12 to i64, !dbg !2552
  %13 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2552
  %codebooks3 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %13, i32 0, i32 15, !dbg !2553
  %14 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks3, align 8, !dbg !2553
  %arrayidx4 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %14, i64 %idxprom2, !dbg !2552
  %codewords = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx4, i32 0, i32 2, !dbg !2554
  %15 = bitcast i32** %codewords to i8*, !dbg !2555
  call void @av_freep(i8* %15), !dbg !2556
  %16 = load i32, i32* %i, align 4, !dbg !2557
  %idxprom5 = sext i32 %16 to i64, !dbg !2558
  %17 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2558
  %codebooks6 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %17, i32 0, i32 15, !dbg !2559
  %18 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks6, align 8, !dbg !2559
  %arrayidx7 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %18, i64 %idxprom5, !dbg !2558
  %quantlist = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx7, i32 0, i32 8, !dbg !2560
  %19 = bitcast i32** %quantlist to i8*, !dbg !2561
  call void @av_freep(i8* %19), !dbg !2562
  %20 = load i32, i32* %i, align 4, !dbg !2563
  %idxprom8 = sext i32 %20 to i64, !dbg !2564
  %21 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2564
  %codebooks9 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %21, i32 0, i32 15, !dbg !2565
  %22 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks9, align 8, !dbg !2565
  %arrayidx10 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %22, i64 %idxprom8, !dbg !2564
  %dimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx10, i32 0, i32 9, !dbg !2566
  %23 = bitcast float** %dimensions to i8*, !dbg !2567
  call void @av_freep(i8* %23), !dbg !2568
  %24 = load i32, i32* %i, align 4, !dbg !2569
  %idxprom11 = sext i32 %24 to i64, !dbg !2570
  %25 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2570
  %codebooks12 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %25, i32 0, i32 15, !dbg !2571
  %26 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks12, align 8, !dbg !2571
  %arrayidx13 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %26, i64 %idxprom11, !dbg !2570
  %pow2 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx13, i32 0, i32 10, !dbg !2572
  %27 = bitcast float** %pow2 to i8*, !dbg !2573
  call void @av_freep(i8* %27), !dbg !2574
  br label %for.inc, !dbg !2575

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !2576
  %inc = add nsw i32 %28, 1, !dbg !2576
  store i32 %inc, i32* %i, align 4, !dbg !2576
  br label %for.cond, !dbg !2578, !llvm.loop !2579

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2581

if.end:                                           ; preds = %for.end, %entry
  %29 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2583
  %codebooks14 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %29, i32 0, i32 15, !dbg !2584
  %30 = bitcast %struct.vorbis_enc_codebook** %codebooks14 to i8*, !dbg !2585
  call void @av_freep(i8* %30), !dbg !2586
  %31 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2587
  %floors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %31, i32 0, i32 17, !dbg !2589
  %32 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors, align 8, !dbg !2589
  %tobool15 = icmp ne %struct.vorbis_enc_floor* %32, null, !dbg !2587
  br i1 %tobool15, label %if.then16, label %if.end54, !dbg !2590

if.then16:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !2591
  br label %for.cond17, !dbg !2593

for.cond17:                                       ; preds = %for.inc51, %if.then16
  %33 = load i32, i32* %i, align 4, !dbg !2594
  %34 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2597
  %nfloors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %34, i32 0, i32 16, !dbg !2598
  %35 = load i32, i32* %nfloors, align 8, !dbg !2598
  %cmp18 = icmp slt i32 %33, %35, !dbg !2599
  br i1 %cmp18, label %for.body19, label %for.end53, !dbg !2600

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2601, metadata !1998), !dbg !2603
  %36 = load i32, i32* %i, align 4, !dbg !2604
  %idxprom20 = sext i32 %36 to i64, !dbg !2606
  %37 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2606
  %floors21 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %37, i32 0, i32 17, !dbg !2607
  %38 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors21, align 8, !dbg !2607
  %arrayidx22 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %38, i64 %idxprom20, !dbg !2606
  %classes = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %arrayidx22, i32 0, i32 3, !dbg !2608
  %39 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes, align 8, !dbg !2608
  %tobool23 = icmp ne %struct.vorbis_enc_floor_class* %39, null, !dbg !2606
  br i1 %tobool23, label %if.then24, label %if.end40, !dbg !2609

if.then24:                                        ; preds = %for.body19
  store i32 0, i32* %j, align 4, !dbg !2610
  br label %for.cond25, !dbg !2612

for.cond25:                                       ; preds = %for.inc37, %if.then24
  %40 = load i32, i32* %j, align 4, !dbg !2613
  %41 = load i32, i32* %i, align 4, !dbg !2616
  %idxprom26 = sext i32 %41 to i64, !dbg !2617
  %42 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2617
  %floors27 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %42, i32 0, i32 17, !dbg !2618
  %43 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors27, align 8, !dbg !2618
  %arrayidx28 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %43, i64 %idxprom26, !dbg !2617
  %nclasses = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %arrayidx28, i32 0, i32 2, !dbg !2619
  %44 = load i32, i32* %nclasses, align 8, !dbg !2619
  %cmp29 = icmp slt i32 %40, %44, !dbg !2620
  br i1 %cmp29, label %for.body30, label %for.end39, !dbg !2621

for.body30:                                       ; preds = %for.cond25
  %45 = load i32, i32* %j, align 4, !dbg !2622
  %idxprom31 = sext i32 %45 to i64, !dbg !2623
  %46 = load i32, i32* %i, align 4, !dbg !2624
  %idxprom32 = sext i32 %46 to i64, !dbg !2623
  %47 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2623
  %floors33 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %47, i32 0, i32 17, !dbg !2625
  %48 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors33, align 8, !dbg !2625
  %arrayidx34 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %48, i64 %idxprom32, !dbg !2623
  %classes35 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %arrayidx34, i32 0, i32 3, !dbg !2626
  %49 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes35, align 8, !dbg !2626
  %arrayidx36 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %49, i64 %idxprom31, !dbg !2623
  %books = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx36, i32 0, i32 3, !dbg !2627
  %50 = bitcast i32** %books to i8*, !dbg !2628
  call void @av_freep(i8* %50), !dbg !2629
  br label %for.inc37, !dbg !2629

for.inc37:                                        ; preds = %for.body30
  %51 = load i32, i32* %j, align 4, !dbg !2630
  %inc38 = add nsw i32 %51, 1, !dbg !2630
  store i32 %inc38, i32* %j, align 4, !dbg !2630
  br label %for.cond25, !dbg !2632, !llvm.loop !2633

for.end39:                                        ; preds = %for.cond25
  br label %if.end40, !dbg !2635

if.end40:                                         ; preds = %for.end39, %for.body19
  %52 = load i32, i32* %i, align 4, !dbg !2637
  %idxprom41 = sext i32 %52 to i64, !dbg !2638
  %53 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2638
  %floors42 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %53, i32 0, i32 17, !dbg !2639
  %54 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors42, align 8, !dbg !2639
  %arrayidx43 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %54, i64 %idxprom41, !dbg !2638
  %classes44 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %arrayidx43, i32 0, i32 3, !dbg !2640
  %55 = bitcast %struct.vorbis_enc_floor_class** %classes44 to i8*, !dbg !2641
  call void @av_freep(i8* %55), !dbg !2642
  %56 = load i32, i32* %i, align 4, !dbg !2643
  %idxprom45 = sext i32 %56 to i64, !dbg !2644
  %57 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2644
  %floors46 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %57, i32 0, i32 17, !dbg !2645
  %58 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors46, align 8, !dbg !2645
  %arrayidx47 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %58, i64 %idxprom45, !dbg !2644
  %partition_to_class = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %arrayidx47, i32 0, i32 1, !dbg !2646
  %59 = bitcast i32** %partition_to_class to i8*, !dbg !2647
  call void @av_freep(i8* %59), !dbg !2648
  %60 = load i32, i32* %i, align 4, !dbg !2649
  %idxprom48 = sext i32 %60 to i64, !dbg !2650
  %61 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2650
  %floors49 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %61, i32 0, i32 17, !dbg !2651
  %62 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors49, align 8, !dbg !2651
  %arrayidx50 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %62, i64 %idxprom48, !dbg !2650
  %list = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %arrayidx50, i32 0, i32 7, !dbg !2652
  %63 = bitcast %struct.vorbis_floor1_entry** %list to i8*, !dbg !2653
  call void @av_freep(i8* %63), !dbg !2654
  br label %for.inc51, !dbg !2655

for.inc51:                                        ; preds = %if.end40
  %64 = load i32, i32* %i, align 4, !dbg !2656
  %inc52 = add nsw i32 %64, 1, !dbg !2656
  store i32 %inc52, i32* %i, align 4, !dbg !2656
  br label %for.cond17, !dbg !2658, !llvm.loop !2659

for.end53:                                        ; preds = %for.cond17
  br label %if.end54, !dbg !2661

if.end54:                                         ; preds = %for.end53, %if.end
  %65 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2663
  %floors55 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %65, i32 0, i32 17, !dbg !2664
  %66 = bitcast %struct.vorbis_enc_floor** %floors55 to i8*, !dbg !2665
  call void @av_freep(i8* %66), !dbg !2666
  %67 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2667
  %residues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %67, i32 0, i32 19, !dbg !2669
  %68 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues, align 8, !dbg !2669
  %tobool56 = icmp ne %struct.vorbis_enc_residue* %68, null, !dbg !2667
  br i1 %tobool56, label %if.then57, label %if.end71, !dbg !2670

if.then57:                                        ; preds = %if.end54
  store i32 0, i32* %i, align 4, !dbg !2671
  br label %for.cond58, !dbg !2673

for.cond58:                                       ; preds = %for.inc68, %if.then57
  %69 = load i32, i32* %i, align 4, !dbg !2674
  %70 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2677
  %nresidues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %70, i32 0, i32 18, !dbg !2678
  %71 = load i32, i32* %nresidues, align 8, !dbg !2678
  %cmp59 = icmp slt i32 %69, %71, !dbg !2679
  br i1 %cmp59, label %for.body60, label %for.end70, !dbg !2680

for.body60:                                       ; preds = %for.cond58
  %72 = load i32, i32* %i, align 4, !dbg !2681
  %idxprom61 = sext i32 %72 to i64, !dbg !2683
  %73 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2683
  %residues62 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %73, i32 0, i32 19, !dbg !2684
  %74 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues62, align 8, !dbg !2684
  %arrayidx63 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %74, i64 %idxprom61, !dbg !2683
  %books64 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %arrayidx63, i32 0, i32 6, !dbg !2685
  %75 = bitcast [8 x i8]** %books64 to i8*, !dbg !2686
  call void @av_freep(i8* %75), !dbg !2687
  %76 = load i32, i32* %i, align 4, !dbg !2688
  %idxprom65 = sext i32 %76 to i64, !dbg !2689
  %77 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2689
  %residues66 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %77, i32 0, i32 19, !dbg !2690
  %78 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues66, align 8, !dbg !2690
  %arrayidx67 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %78, i64 %idxprom65, !dbg !2689
  %maxes = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %arrayidx67, i32 0, i32 7, !dbg !2691
  %79 = bitcast [2 x float]** %maxes to i8*, !dbg !2692
  call void @av_freep(i8* %79), !dbg !2693
  br label %for.inc68, !dbg !2694

for.inc68:                                        ; preds = %for.body60
  %80 = load i32, i32* %i, align 4, !dbg !2695
  %inc69 = add nsw i32 %80, 1, !dbg !2695
  store i32 %inc69, i32* %i, align 4, !dbg !2695
  br label %for.cond58, !dbg !2697, !llvm.loop !2698

for.end70:                                        ; preds = %for.cond58
  br label %if.end71, !dbg !2700

if.end71:                                         ; preds = %for.end70, %if.end54
  %81 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2702
  %residues72 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %81, i32 0, i32 19, !dbg !2703
  %82 = bitcast %struct.vorbis_enc_residue** %residues72 to i8*, !dbg !2704
  call void @av_freep(i8* %82), !dbg !2705
  %83 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2706
  %mappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %83, i32 0, i32 21, !dbg !2708
  %84 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings, align 8, !dbg !2708
  %tobool73 = icmp ne %struct.vorbis_enc_mapping* %84, null, !dbg !2706
  br i1 %tobool73, label %if.then74, label %if.end96, !dbg !2709

if.then74:                                        ; preds = %if.end71
  store i32 0, i32* %i, align 4, !dbg !2710
  br label %for.cond75, !dbg !2712

for.cond75:                                       ; preds = %for.inc93, %if.then74
  %85 = load i32, i32* %i, align 4, !dbg !2713
  %86 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2716
  %nmappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %86, i32 0, i32 20, !dbg !2717
  %87 = load i32, i32* %nmappings, align 8, !dbg !2717
  %cmp76 = icmp slt i32 %85, %87, !dbg !2718
  br i1 %cmp76, label %for.body77, label %for.end95, !dbg !2719

for.body77:                                       ; preds = %for.cond75
  %88 = load i32, i32* %i, align 4, !dbg !2720
  %idxprom78 = sext i32 %88 to i64, !dbg !2722
  %89 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2722
  %mappings79 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %89, i32 0, i32 21, !dbg !2723
  %90 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings79, align 8, !dbg !2723
  %arrayidx80 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %90, i64 %idxprom78, !dbg !2722
  %mux = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %arrayidx80, i32 0, i32 1, !dbg !2724
  %91 = bitcast i32** %mux to i8*, !dbg !2725
  call void @av_freep(i8* %91), !dbg !2726
  %92 = load i32, i32* %i, align 4, !dbg !2727
  %idxprom81 = sext i32 %92 to i64, !dbg !2728
  %93 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2728
  %mappings82 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %93, i32 0, i32 21, !dbg !2729
  %94 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings82, align 8, !dbg !2729
  %arrayidx83 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %94, i64 %idxprom81, !dbg !2728
  %floor = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %arrayidx83, i32 0, i32 2, !dbg !2730
  %95 = bitcast i32** %floor to i8*, !dbg !2731
  call void @av_freep(i8* %95), !dbg !2732
  %96 = load i32, i32* %i, align 4, !dbg !2733
  %idxprom84 = sext i32 %96 to i64, !dbg !2734
  %97 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2734
  %mappings85 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %97, i32 0, i32 21, !dbg !2735
  %98 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings85, align 8, !dbg !2735
  %arrayidx86 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %98, i64 %idxprom84, !dbg !2734
  %residue = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %arrayidx86, i32 0, i32 3, !dbg !2736
  %99 = bitcast i32** %residue to i8*, !dbg !2737
  call void @av_freep(i8* %99), !dbg !2738
  %100 = load i32, i32* %i, align 4, !dbg !2739
  %idxprom87 = sext i32 %100 to i64, !dbg !2740
  %101 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2740
  %mappings88 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %101, i32 0, i32 21, !dbg !2741
  %102 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings88, align 8, !dbg !2741
  %arrayidx89 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %102, i64 %idxprom87, !dbg !2740
  %magnitude = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %arrayidx89, i32 0, i32 5, !dbg !2742
  %103 = bitcast i32** %magnitude to i8*, !dbg !2743
  call void @av_freep(i8* %103), !dbg !2744
  %104 = load i32, i32* %i, align 4, !dbg !2745
  %idxprom90 = sext i32 %104 to i64, !dbg !2746
  %105 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2746
  %mappings91 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %105, i32 0, i32 21, !dbg !2747
  %106 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings91, align 8, !dbg !2747
  %arrayidx92 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %106, i64 %idxprom90, !dbg !2746
  %angle = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %arrayidx92, i32 0, i32 6, !dbg !2748
  %107 = bitcast i32** %angle to i8*, !dbg !2749
  call void @av_freep(i8* %107), !dbg !2750
  br label %for.inc93, !dbg !2751

for.inc93:                                        ; preds = %for.body77
  %108 = load i32, i32* %i, align 4, !dbg !2752
  %inc94 = add nsw i32 %108, 1, !dbg !2752
  store i32 %inc94, i32* %i, align 4, !dbg !2752
  br label %for.cond75, !dbg !2754, !llvm.loop !2755

for.end95:                                        ; preds = %for.cond75
  br label %if.end96, !dbg !2757

if.end96:                                         ; preds = %for.end95, %if.end71
  %109 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2759
  %mappings97 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %109, i32 0, i32 21, !dbg !2760
  %110 = bitcast %struct.vorbis_enc_mapping** %mappings97 to i8*, !dbg !2761
  call void @av_freep(i8* %110), !dbg !2762
  %111 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2763
  %modes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %111, i32 0, i32 23, !dbg !2764
  %112 = bitcast %struct.vorbis_enc_mode** %modes to i8*, !dbg !2765
  call void @av_freep(i8* %112), !dbg !2766
  %113 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2767
  %saved = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %113, i32 0, i32 6, !dbg !2768
  %114 = bitcast float** %saved to i8*, !dbg !2769
  call void @av_freep(i8* %114), !dbg !2770
  %115 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2771
  %samples = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %115, i32 0, i32 7, !dbg !2772
  %116 = bitcast float** %samples to i8*, !dbg !2773
  call void @av_freep(i8* %116), !dbg !2774
  %117 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2775
  %floor98 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %117, i32 0, i32 8, !dbg !2776
  %118 = bitcast float** %floor98 to i8*, !dbg !2777
  call void @av_freep(i8* %118), !dbg !2778
  %119 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2779
  %coeffs = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %119, i32 0, i32 9, !dbg !2780
  %120 = bitcast float** %coeffs to i8*, !dbg !2781
  call void @av_freep(i8* %120), !dbg !2782
  %121 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2783
  %scratch = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %121, i32 0, i32 10, !dbg !2784
  %122 = bitcast float** %scratch to i8*, !dbg !2785
  call void @av_freep(i8* %122), !dbg !2786
  %123 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2787
  %fdsp = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %123, i32 0, i32 25, !dbg !2788
  %124 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !2789
  call void @av_freep(i8* %124), !dbg !2790
  %125 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2791
  %mdct = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %125, i32 0, i32 3, !dbg !2792
  %arrayidx99 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %mdct, i64 0, i64 0, !dbg !2791
  call void @ff_mdct_end(%struct.FFTContext* %arrayidx99), !dbg !2793
  %126 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2794
  %mdct100 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %126, i32 0, i32 3, !dbg !2795
  %arrayidx101 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %mdct100, i64 0, i64 1, !dbg !2794
  call void @ff_mdct_end(%struct.FFTContext* %arrayidx101), !dbg !2796
  %127 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2797
  %afq = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %127, i32 0, i32 12, !dbg !2798
  call void @ff_af_queue_close(%struct.AudioFrameQueue* %afq), !dbg !2799
  %128 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc, align 8, !dbg !2800
  %bufqueue = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %128, i32 0, i32 13, !dbg !2801
  call void @ff_bufqueue_discard_all(%struct.FFBufQueue* %bufqueue), !dbg !2802
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2803
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %129, i32 0, i32 15, !dbg !2804
  %130 = bitcast i8** %extradata to i8*, !dbg !2805
  call void @av_freep(i8* %130), !dbg !2806
  ret i32 0, !dbg !2807
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @create_vorbis_context(%struct.vorbis_enc_context* %venc, %struct.AVCodecContext* %avctx) #1 !dbg !1641 {
entry:
  %retval = alloca i32, align 4
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %fc = alloca %struct.vorbis_enc_floor*, align 8
  %rc = alloca %struct.vorbis_enc_residue*, align 8
  %mc = alloca %struct.vorbis_enc_mapping*, align 8
  %i = alloca i32, align 4
  %book = alloca i32, align 4
  %ret = alloca i32, align 4
  %cb = alloca %struct.vorbis_enc_codebook*, align 8
  %vals = alloca i32, align 4
  %c = alloca %struct.vorbis_enc_floor_class*, align 8
  %j = alloca i32, align 4
  %books = alloca i32, align 4
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !2808, metadata !1998), !dbg !2809
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2810, metadata !1998), !dbg !2811
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor** %fc, metadata !2812, metadata !1998), !dbg !2813
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_residue** %rc, metadata !2814, metadata !1998), !dbg !2815
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_mapping** %mc, metadata !2816, metadata !1998), !dbg !2817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2818, metadata !1998), !dbg !2819
  call void @llvm.dbg.declare(metadata i32* %book, metadata !2820, metadata !1998), !dbg !2821
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2822, metadata !1998), !dbg !2823
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2824
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 83, !dbg !2825
  %1 = load i32, i32* %channels, align 4, !dbg !2825
  %2 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2826
  %channels1 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %2, i32 0, i32 0, !dbg !2827
  store i32 %1, i32* %channels1, align 8, !dbg !2828
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2829
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 82, !dbg !2830
  %4 = load i32, i32* %sample_rate, align 8, !dbg !2830
  %5 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2831
  %sample_rate2 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %5, i32 0, i32 1, !dbg !2832
  store i32 %4, i32* %sample_rate2, align 4, !dbg !2833
  %6 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2834
  %log2_blocksize = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %6, i32 0, i32 2, !dbg !2835
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize, i64 0, i64 1, !dbg !2834
  store i32 11, i32* %arrayidx, align 4, !dbg !2836
  %7 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2837
  %log2_blocksize3 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %7, i32 0, i32 2, !dbg !2838
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize3, i64 0, i64 0, !dbg !2837
  store i32 11, i32* %arrayidx4, align 8, !dbg !2839
  %8 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2840
  %ncodebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %8, i32 0, i32 14, !dbg !2841
  store i32 29, i32* %ncodebooks, align 8, !dbg !2842
  %9 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2843
  %ncodebooks5 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %9, i32 0, i32 14, !dbg !2844
  %10 = load i32, i32* %ncodebooks5, align 8, !dbg !2844
  %conv = sext i32 %10 to i64, !dbg !2843
  %mul = mul i64 72, %conv, !dbg !2845
  %call = call noalias i8* @av_malloc(i64 %mul), !dbg !2846
  %11 = bitcast i8* %call to %struct.vorbis_enc_codebook*, !dbg !2846
  %12 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2847
  %codebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %12, i32 0, i32 15, !dbg !2848
  store %struct.vorbis_enc_codebook* %11, %struct.vorbis_enc_codebook** %codebooks, align 8, !dbg !2849
  %13 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2850
  %codebooks6 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %13, i32 0, i32 15, !dbg !2852
  %14 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks6, align 8, !dbg !2852
  %tobool = icmp ne %struct.vorbis_enc_codebook* %14, null, !dbg !2850
  br i1 %tobool, label %if.end, label %if.then, !dbg !2853

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !2854
  br label %return, !dbg !2854

if.end:                                           ; preds = %entry
  store i32 0, i32* %book, align 4, !dbg !2855
  br label %for.cond, !dbg !2857

for.cond:                                         ; preds = %for.inc83, %if.end
  %15 = load i32, i32* %book, align 4, !dbg !2858
  %16 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2861
  %ncodebooks7 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %16, i32 0, i32 14, !dbg !2862
  %17 = load i32, i32* %ncodebooks7, align 8, !dbg !2862
  %cmp = icmp slt i32 %15, %17, !dbg !2863
  br i1 %cmp, label %for.body, label %for.end85, !dbg !2864

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %cb, metadata !2865, metadata !1998), !dbg !2867
  %18 = load i32, i32* %book, align 4, !dbg !2868
  %idxprom = sext i32 %18 to i64, !dbg !2869
  %19 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !2869
  %codebooks9 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %19, i32 0, i32 15, !dbg !2870
  %20 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks9, align 8, !dbg !2870
  %arrayidx10 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %20, i64 %idxprom, !dbg !2869
  store %struct.vorbis_enc_codebook* %arrayidx10, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2867
  call void @llvm.dbg.declare(metadata i32* %vals, metadata !2871, metadata !1998), !dbg !2872
  %21 = load i32, i32* %book, align 4, !dbg !2873
  %idxprom11 = sext i32 %21 to i64, !dbg !2874
  %arrayidx12 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom11, !dbg !2874
  %dim = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx12, i32 0, i32 0, !dbg !2875
  %22 = load i32, i32* %dim, align 16, !dbg !2875
  %23 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2876
  %ndimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %23, i32 0, i32 3, !dbg !2877
  store i32 %22, i32* %ndimensions, align 8, !dbg !2878
  %24 = load i32, i32* %book, align 4, !dbg !2879
  %idxprom13 = sext i32 %24 to i64, !dbg !2880
  %arrayidx14 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom13, !dbg !2880
  %real_len = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx14, i32 0, i32 2, !dbg !2881
  %25 = load i32, i32* %real_len, align 8, !dbg !2881
  %26 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2882
  %nentries = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %26, i32 0, i32 0, !dbg !2883
  store i32 %25, i32* %nentries, align 8, !dbg !2884
  %27 = load i32, i32* %book, align 4, !dbg !2885
  %idxprom15 = sext i32 %27 to i64, !dbg !2886
  %arrayidx16 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom15, !dbg !2886
  %min = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx16, i32 0, i32 5, !dbg !2887
  %28 = load float, float* %min, align 4, !dbg !2887
  %29 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2888
  %min17 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %29, i32 0, i32 4, !dbg !2889
  store float %28, float* %min17, align 4, !dbg !2890
  %30 = load i32, i32* %book, align 4, !dbg !2891
  %idxprom18 = sext i32 %30 to i64, !dbg !2892
  %arrayidx19 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom18, !dbg !2892
  %delta = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx19, i32 0, i32 6, !dbg !2893
  %31 = load float, float* %delta, align 16, !dbg !2893
  %32 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2894
  %delta20 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %32, i32 0, i32 5, !dbg !2895
  store float %31, float* %delta20, align 8, !dbg !2896
  %33 = load i32, i32* %book, align 4, !dbg !2897
  %idxprom21 = sext i32 %33 to i64, !dbg !2898
  %arrayidx22 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom21, !dbg !2898
  %lookup = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx22, i32 0, i32 4, !dbg !2899
  %34 = load i32, i32* %lookup, align 8, !dbg !2899
  %35 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2900
  %lookup23 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %35, i32 0, i32 7, !dbg !2901
  store i32 %34, i32* %lookup23, align 8, !dbg !2902
  %36 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2903
  %seq_p = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %36, i32 0, i32 6, !dbg !2904
  store i32 0, i32* %seq_p, align 4, !dbg !2905
  %37 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2906
  %nentries24 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %37, i32 0, i32 0, !dbg !2907
  %38 = load i32, i32* %nentries24, align 8, !dbg !2907
  %conv25 = sext i32 %38 to i64, !dbg !2906
  %call26 = call i8* @av_malloc_array(i64 %conv25, i64 1), !dbg !2908
  %39 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2909
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %39, i32 0, i32 1, !dbg !2910
  store i8* %call26, i8** %lens, align 8, !dbg !2911
  %40 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2912
  %nentries27 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %40, i32 0, i32 0, !dbg !2913
  %41 = load i32, i32* %nentries27, align 8, !dbg !2913
  %conv28 = sext i32 %41 to i64, !dbg !2912
  %call29 = call i8* @av_malloc_array(i64 %conv28, i64 4), !dbg !2914
  %42 = bitcast i8* %call29 to i32*, !dbg !2914
  %43 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2915
  %codewords = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %43, i32 0, i32 2, !dbg !2916
  store i32* %42, i32** %codewords, align 8, !dbg !2917
  %44 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2918
  %lens30 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %44, i32 0, i32 1, !dbg !2920
  %45 = load i8*, i8** %lens30, align 8, !dbg !2920
  %tobool31 = icmp ne i8* %45, null, !dbg !2918
  br i1 %tobool31, label %lor.lhs.false, label %if.then34, !dbg !2921

lor.lhs.false:                                    ; preds = %for.body
  %46 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2922
  %codewords32 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %46, i32 0, i32 2, !dbg !2924
  %47 = load i32*, i32** %codewords32, align 8, !dbg !2924
  %tobool33 = icmp ne i32* %47, null, !dbg !2922
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !2925

if.then34:                                        ; preds = %lor.lhs.false, %for.body
  store i32 -12, i32* %retval, align 4, !dbg !2926
  br label %return, !dbg !2926

if.end35:                                         ; preds = %lor.lhs.false
  %48 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2927
  %lens36 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %48, i32 0, i32 1, !dbg !2928
  %49 = load i8*, i8** %lens36, align 8, !dbg !2928
  %50 = load i32, i32* %book, align 4, !dbg !2929
  %idxprom37 = sext i32 %50 to i64, !dbg !2930
  %arrayidx38 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom37, !dbg !2930
  %clens = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx38, i32 0, i32 3, !dbg !2931
  %51 = load i8*, i8** %clens, align 16, !dbg !2931
  %52 = load i32, i32* %book, align 4, !dbg !2932
  %idxprom39 = sext i32 %52 to i64, !dbg !2933
  %arrayidx40 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom39, !dbg !2933
  %len = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx40, i32 0, i32 1, !dbg !2934
  %53 = load i32, i32* %len, align 4, !dbg !2934
  %conv41 = sext i32 %53 to i64, !dbg !2933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %51, i64 %conv41, i32 1, i1 false), !dbg !2935
  %54 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2936
  %lens42 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %54, i32 0, i32 1, !dbg !2937
  %55 = load i8*, i8** %lens42, align 8, !dbg !2937
  %56 = load i32, i32* %book, align 4, !dbg !2938
  %idxprom43 = sext i32 %56 to i64, !dbg !2939
  %arrayidx44 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom43, !dbg !2939
  %len45 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx44, i32 0, i32 1, !dbg !2940
  %57 = load i32, i32* %len45, align 4, !dbg !2940
  %idx.ext = sext i32 %57 to i64, !dbg !2941
  %add.ptr = getelementptr inbounds i8, i8* %55, i64 %idx.ext, !dbg !2941
  %58 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2942
  %nentries46 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %58, i32 0, i32 0, !dbg !2943
  %59 = load i32, i32* %nentries46, align 8, !dbg !2943
  %60 = load i32, i32* %book, align 4, !dbg !2944
  %idxprom47 = sext i32 %60 to i64, !dbg !2945
  %arrayidx48 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom47, !dbg !2945
  %len49 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx48, i32 0, i32 1, !dbg !2946
  %61 = load i32, i32* %len49, align 4, !dbg !2946
  %sub = sub nsw i32 %59, %61, !dbg !2947
  %conv50 = sext i32 %sub to i64, !dbg !2942
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %conv50, i32 1, i1 false), !dbg !2948
  %62 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2949
  %lookup51 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %62, i32 0, i32 7, !dbg !2951
  %63 = load i32, i32* %lookup51, align 8, !dbg !2951
  %tobool52 = icmp ne i32 %63, 0, !dbg !2949
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !2952

if.then53:                                        ; preds = %if.end35
  %64 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2953
  %lookup54 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %64, i32 0, i32 7, !dbg !2955
  %65 = load i32, i32* %lookup54, align 8, !dbg !2955
  %66 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2956
  %ndimensions55 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %66, i32 0, i32 3, !dbg !2957
  %67 = load i32, i32* %ndimensions55, align 8, !dbg !2957
  %68 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2958
  %nentries56 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %68, i32 0, i32 0, !dbg !2959
  %69 = load i32, i32* %nentries56, align 8, !dbg !2959
  %call57 = call i32 @cb_lookup_vals(i32 %65, i32 %67, i32 %69), !dbg !2960
  store i32 %call57, i32* %vals, align 4, !dbg !2961
  %70 = load i32, i32* %vals, align 4, !dbg !2962
  %conv58 = sext i32 %70 to i64, !dbg !2962
  %call59 = call i8* @av_malloc_array(i64 %conv58, i64 4), !dbg !2963
  %71 = bitcast i8* %call59 to i32*, !dbg !2963
  %72 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2964
  %quantlist = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %72, i32 0, i32 8, !dbg !2965
  store i32* %71, i32** %quantlist, align 8, !dbg !2966
  %73 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2967
  %quantlist60 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %73, i32 0, i32 8, !dbg !2969
  %74 = load i32*, i32** %quantlist60, align 8, !dbg !2969
  %tobool61 = icmp ne i32* %74, null, !dbg !2967
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !2970

if.then62:                                        ; preds = %if.then53
  store i32 -12, i32* %retval, align 4, !dbg !2971
  br label %return, !dbg !2971

if.end63:                                         ; preds = %if.then53
  store i32 0, i32* %i, align 4, !dbg !2972
  br label %for.cond64, !dbg !2974

for.cond64:                                       ; preds = %for.inc, %if.end63
  %75 = load i32, i32* %i, align 4, !dbg !2975
  %76 = load i32, i32* %vals, align 4, !dbg !2978
  %cmp65 = icmp slt i32 %75, %76, !dbg !2979
  br i1 %cmp65, label %for.body67, label %for.end, !dbg !2980

for.body67:                                       ; preds = %for.cond64
  %77 = load i32, i32* %i, align 4, !dbg !2981
  %idxprom68 = sext i32 %77 to i64, !dbg !2982
  %78 = load i32, i32* %book, align 4, !dbg !2983
  %idxprom69 = sext i32 %78 to i64, !dbg !2982
  %arrayidx70 = getelementptr inbounds [29 x %struct.anon], [29 x %struct.anon]* @cvectors, i64 0, i64 %idxprom69, !dbg !2982
  %quant = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx70, i32 0, i32 7, !dbg !2984
  %79 = load i8*, i8** %quant, align 8, !dbg !2984
  %arrayidx71 = getelementptr inbounds i8, i8* %79, i64 %idxprom68, !dbg !2982
  %80 = load i8, i8* %arrayidx71, align 1, !dbg !2982
  %conv72 = zext i8 %80 to i32, !dbg !2982
  %81 = load i32, i32* %i, align 4, !dbg !2985
  %idxprom73 = sext i32 %81 to i64, !dbg !2986
  %82 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2986
  %quantlist74 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %82, i32 0, i32 8, !dbg !2987
  %83 = load i32*, i32** %quantlist74, align 8, !dbg !2987
  %arrayidx75 = getelementptr inbounds i32, i32* %83, i64 %idxprom73, !dbg !2986
  store i32 %conv72, i32* %arrayidx75, align 4, !dbg !2988
  br label %for.inc, !dbg !2986

for.inc:                                          ; preds = %for.body67
  %84 = load i32, i32* %i, align 4, !dbg !2989
  %inc = add nsw i32 %84, 1, !dbg !2989
  store i32 %inc, i32* %i, align 4, !dbg !2989
  br label %for.cond64, !dbg !2991, !llvm.loop !2992

for.end:                                          ; preds = %for.cond64
  br label %if.end77, !dbg !2994

if.else:                                          ; preds = %if.end35
  %85 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2995
  %quantlist76 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %85, i32 0, i32 8, !dbg !2997
  store i32* null, i32** %quantlist76, align 8, !dbg !2998
  br label %if.end77

if.end77:                                         ; preds = %if.else, %for.end
  %86 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !2999
  %call78 = call i32 @ready_codebook(%struct.vorbis_enc_codebook* %86), !dbg !3001
  store i32 %call78, i32* %ret, align 4, !dbg !3002
  %cmp79 = icmp slt i32 %call78, 0, !dbg !3003
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !3004

if.then81:                                        ; preds = %if.end77
  %87 = load i32, i32* %ret, align 4, !dbg !3005
  store i32 %87, i32* %retval, align 4, !dbg !3006
  br label %return, !dbg !3006

if.end82:                                         ; preds = %if.end77
  br label %for.inc83, !dbg !3007

for.inc83:                                        ; preds = %if.end82
  %88 = load i32, i32* %book, align 4, !dbg !3008
  %inc84 = add nsw i32 %88, 1, !dbg !3008
  store i32 %inc84, i32* %book, align 4, !dbg !3008
  br label %for.cond, !dbg !3010, !llvm.loop !3011

for.end85:                                        ; preds = %for.cond
  %89 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3013
  %nfloors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %89, i32 0, i32 16, !dbg !3014
  store i32 1, i32* %nfloors, align 8, !dbg !3015
  %90 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3016
  %nfloors86 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %90, i32 0, i32 16, !dbg !3017
  %91 = load i32, i32* %nfloors86, align 8, !dbg !3017
  %conv87 = sext i32 %91 to i64, !dbg !3016
  %mul88 = mul i64 56, %conv87, !dbg !3018
  %call89 = call noalias i8* @av_malloc(i64 %mul88), !dbg !3019
  %92 = bitcast i8* %call89 to %struct.vorbis_enc_floor*, !dbg !3019
  %93 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3020
  %floors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %93, i32 0, i32 17, !dbg !3021
  store %struct.vorbis_enc_floor* %92, %struct.vorbis_enc_floor** %floors, align 8, !dbg !3022
  %94 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3023
  %floors90 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %94, i32 0, i32 17, !dbg !3025
  %95 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors90, align 8, !dbg !3025
  %tobool91 = icmp ne %struct.vorbis_enc_floor* %95, null, !dbg !3023
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !3026

if.then92:                                        ; preds = %for.end85
  store i32 -12, i32* %retval, align 4, !dbg !3027
  br label %return, !dbg !3027

if.end93:                                         ; preds = %for.end85
  %96 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3028
  %floors94 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %96, i32 0, i32 17, !dbg !3029
  %97 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors94, align 8, !dbg !3029
  %arrayidx95 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %97, i64 0, !dbg !3028
  store %struct.vorbis_enc_floor* %arrayidx95, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3030
  %98 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3031
  %partitions = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %98, i32 0, i32 0, !dbg !3032
  store i32 8, i32* %partitions, align 8, !dbg !3033
  %99 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3034
  %partitions96 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %99, i32 0, i32 0, !dbg !3035
  %100 = load i32, i32* %partitions96, align 8, !dbg !3035
  %conv97 = sext i32 %100 to i64, !dbg !3034
  %mul98 = mul i64 4, %conv97, !dbg !3036
  %call99 = call noalias i8* @av_malloc(i64 %mul98), !dbg !3037
  %101 = bitcast i8* %call99 to i32*, !dbg !3037
  %102 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3038
  %partition_to_class = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %102, i32 0, i32 1, !dbg !3039
  store i32* %101, i32** %partition_to_class, align 8, !dbg !3040
  %103 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3041
  %partition_to_class100 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %103, i32 0, i32 1, !dbg !3043
  %104 = load i32*, i32** %partition_to_class100, align 8, !dbg !3043
  %tobool101 = icmp ne i32* %104, null, !dbg !3041
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !3044

if.then102:                                       ; preds = %if.end93
  store i32 -12, i32* %retval, align 4, !dbg !3045
  br label %return, !dbg !3045

if.end103:                                        ; preds = %if.end93
  %105 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3046
  %nclasses = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %105, i32 0, i32 2, !dbg !3047
  store i32 0, i32* %nclasses, align 8, !dbg !3048
  store i32 0, i32* %i, align 4, !dbg !3049
  br label %for.cond104, !dbg !3051

for.cond104:                                      ; preds = %for.inc125, %if.end103
  %106 = load i32, i32* %i, align 4, !dbg !3052
  %107 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3055
  %partitions105 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %107, i32 0, i32 0, !dbg !3056
  %108 = load i32, i32* %partitions105, align 8, !dbg !3056
  %cmp106 = icmp slt i32 %106, %108, !dbg !3057
  br i1 %cmp106, label %for.body108, label %for.end127, !dbg !3058

for.body108:                                      ; preds = %for.cond104
  %109 = load i32, i32* %i, align 4, !dbg !3059
  %idxprom109 = sext i32 %109 to i64, !dbg !3061
  %arrayidx110 = getelementptr inbounds [8 x i32], [8 x i32]* @create_vorbis_context.a, i64 0, i64 %idxprom109, !dbg !3061
  %110 = load i32, i32* %arrayidx110, align 4, !dbg !3061
  %111 = load i32, i32* %i, align 4, !dbg !3062
  %idxprom111 = sext i32 %111 to i64, !dbg !3063
  %112 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3063
  %partition_to_class112 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %112, i32 0, i32 1, !dbg !3064
  %113 = load i32*, i32** %partition_to_class112, align 8, !dbg !3064
  %arrayidx113 = getelementptr inbounds i32, i32* %113, i64 %idxprom111, !dbg !3063
  store i32 %110, i32* %arrayidx113, align 4, !dbg !3065
  %114 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3066
  %nclasses114 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %114, i32 0, i32 2, !dbg !3067
  %115 = load i32, i32* %nclasses114, align 8, !dbg !3067
  %116 = load i32, i32* %i, align 4, !dbg !3068
  %idxprom115 = sext i32 %116 to i64, !dbg !3069
  %117 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3069
  %partition_to_class116 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %117, i32 0, i32 1, !dbg !3070
  %118 = load i32*, i32** %partition_to_class116, align 8, !dbg !3070
  %arrayidx117 = getelementptr inbounds i32, i32* %118, i64 %idxprom115, !dbg !3069
  %119 = load i32, i32* %arrayidx117, align 4, !dbg !3069
  %cmp118 = icmp sgt i32 %115, %119, !dbg !3071
  br i1 %cmp118, label %cond.true, label %cond.false, !dbg !3072

cond.true:                                        ; preds = %for.body108
  %120 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3073
  %nclasses120 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %120, i32 0, i32 2, !dbg !3075
  %121 = load i32, i32* %nclasses120, align 8, !dbg !3075
  br label %cond.end, !dbg !3076

cond.false:                                       ; preds = %for.body108
  %122 = load i32, i32* %i, align 4, !dbg !3077
  %idxprom121 = sext i32 %122 to i64, !dbg !3079
  %123 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3079
  %partition_to_class122 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %123, i32 0, i32 1, !dbg !3080
  %124 = load i32*, i32** %partition_to_class122, align 8, !dbg !3080
  %arrayidx123 = getelementptr inbounds i32, i32* %124, i64 %idxprom121, !dbg !3079
  %125 = load i32, i32* %arrayidx123, align 4, !dbg !3079
  br label %cond.end, !dbg !3081

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %121, %cond.true ], [ %125, %cond.false ], !dbg !3082
  %126 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3084
  %nclasses124 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %126, i32 0, i32 2, !dbg !3085
  store i32 %cond, i32* %nclasses124, align 8, !dbg !3086
  br label %for.inc125, !dbg !3087

for.inc125:                                       ; preds = %cond.end
  %127 = load i32, i32* %i, align 4, !dbg !3088
  %inc126 = add nsw i32 %127, 1, !dbg !3088
  store i32 %inc126, i32* %i, align 4, !dbg !3088
  br label %for.cond104, !dbg !3090, !llvm.loop !3091

for.end127:                                       ; preds = %for.cond104
  %128 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3093
  %nclasses128 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %128, i32 0, i32 2, !dbg !3094
  %129 = load i32, i32* %nclasses128, align 8, !dbg !3095
  %inc129 = add nsw i32 %129, 1, !dbg !3095
  store i32 %inc129, i32* %nclasses128, align 8, !dbg !3095
  %130 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3096
  %nclasses130 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %130, i32 0, i32 2, !dbg !3097
  %131 = load i32, i32* %nclasses130, align 8, !dbg !3097
  %conv131 = sext i32 %131 to i64, !dbg !3096
  %call132 = call i8* @av_malloc_array(i64 %conv131, i64 24), !dbg !3098
  %132 = bitcast i8* %call132 to %struct.vorbis_enc_floor_class*, !dbg !3098
  %133 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3099
  %classes = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %133, i32 0, i32 3, !dbg !3100
  store %struct.vorbis_enc_floor_class* %132, %struct.vorbis_enc_floor_class** %classes, align 8, !dbg !3101
  %134 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3102
  %classes133 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %134, i32 0, i32 3, !dbg !3104
  %135 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes133, align 8, !dbg !3104
  %tobool134 = icmp ne %struct.vorbis_enc_floor_class* %135, null, !dbg !3102
  br i1 %tobool134, label %if.end136, label %if.then135, !dbg !3105

if.then135:                                       ; preds = %for.end127
  store i32 -12, i32* %retval, align 4, !dbg !3106
  br label %return, !dbg !3106

if.end136:                                        ; preds = %for.end127
  store i32 0, i32* %i, align 4, !dbg !3107
  br label %for.cond137, !dbg !3109

for.cond137:                                      ; preds = %for.inc177, %if.end136
  %136 = load i32, i32* %i, align 4, !dbg !3110
  %137 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3113
  %nclasses138 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %137, i32 0, i32 2, !dbg !3114
  %138 = load i32, i32* %nclasses138, align 8, !dbg !3114
  %cmp139 = icmp slt i32 %136, %138, !dbg !3115
  br i1 %cmp139, label %for.body141, label %for.end179, !dbg !3116

for.body141:                                      ; preds = %for.cond137
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor_class** %c, metadata !3117, metadata !1998), !dbg !3119
  %139 = load i32, i32* %i, align 4, !dbg !3120
  %idxprom142 = sext i32 %139 to i64, !dbg !3121
  %140 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3121
  %classes143 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %140, i32 0, i32 3, !dbg !3122
  %141 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes143, align 8, !dbg !3122
  %arrayidx144 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %141, i64 %idxprom142, !dbg !3121
  store %struct.vorbis_enc_floor_class* %arrayidx144, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3119
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3123, metadata !1998), !dbg !3124
  call void @llvm.dbg.declare(metadata i32* %books, metadata !3125, metadata !1998), !dbg !3126
  %142 = load i32, i32* %i, align 4, !dbg !3127
  %idxprom145 = sext i32 %142 to i64, !dbg !3128
  %arrayidx146 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @floor_classes, i64 0, i64 %idxprom145, !dbg !3128
  %dim147 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx146, i32 0, i32 0, !dbg !3129
  %143 = load i32, i32* %dim147, align 4, !dbg !3129
  %144 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3130
  %dim148 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %144, i32 0, i32 0, !dbg !3131
  store i32 %143, i32* %dim148, align 8, !dbg !3132
  %145 = load i32, i32* %i, align 4, !dbg !3133
  %idxprom149 = sext i32 %145 to i64, !dbg !3134
  %arrayidx150 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @floor_classes, i64 0, i64 %idxprom149, !dbg !3134
  %subclass = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx150, i32 0, i32 1, !dbg !3135
  %146 = load i32, i32* %subclass, align 4, !dbg !3135
  %147 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3136
  %subclass151 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %147, i32 0, i32 1, !dbg !3137
  store i32 %146, i32* %subclass151, align 4, !dbg !3138
  %148 = load i32, i32* %i, align 4, !dbg !3139
  %idxprom152 = sext i32 %148 to i64, !dbg !3140
  %arrayidx153 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @floor_classes, i64 0, i64 %idxprom152, !dbg !3140
  %masterbook = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx153, i32 0, i32 2, !dbg !3141
  %149 = load i32, i32* %masterbook, align 4, !dbg !3141
  %150 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3142
  %masterbook154 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %150, i32 0, i32 2, !dbg !3143
  store i32 %149, i32* %masterbook154, align 8, !dbg !3144
  %151 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3145
  %subclass155 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %151, i32 0, i32 1, !dbg !3146
  %152 = load i32, i32* %subclass155, align 4, !dbg !3146
  %shl = shl i32 1, %152, !dbg !3147
  store i32 %shl, i32* %books, align 4, !dbg !3148
  %153 = load i32, i32* %books, align 4, !dbg !3149
  %conv156 = sext i32 %153 to i64, !dbg !3149
  %call157 = call i8* @av_malloc_array(i64 %conv156, i64 4), !dbg !3150
  %154 = bitcast i8* %call157 to i32*, !dbg !3150
  %155 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3151
  %books158 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %155, i32 0, i32 3, !dbg !3152
  store i32* %154, i32** %books158, align 8, !dbg !3153
  %156 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3154
  %books159 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %156, i32 0, i32 3, !dbg !3156
  %157 = load i32*, i32** %books159, align 8, !dbg !3156
  %tobool160 = icmp ne i32* %157, null, !dbg !3154
  br i1 %tobool160, label %if.end162, label %if.then161, !dbg !3157

if.then161:                                       ; preds = %for.body141
  store i32 -12, i32* %retval, align 4, !dbg !3158
  br label %return, !dbg !3158

if.end162:                                        ; preds = %for.body141
  store i32 0, i32* %j, align 4, !dbg !3159
  br label %for.cond163, !dbg !3161

for.cond163:                                      ; preds = %for.inc174, %if.end162
  %158 = load i32, i32* %j, align 4, !dbg !3162
  %159 = load i32, i32* %books, align 4, !dbg !3165
  %cmp164 = icmp slt i32 %158, %159, !dbg !3166
  br i1 %cmp164, label %for.body166, label %for.end176, !dbg !3167

for.body166:                                      ; preds = %for.cond163
  %160 = load i32, i32* %j, align 4, !dbg !3168
  %idxprom167 = sext i32 %160 to i64, !dbg !3169
  %161 = load i32, i32* %i, align 4, !dbg !3170
  %idxprom168 = sext i32 %161 to i64, !dbg !3169
  %arrayidx169 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @floor_classes, i64 0, i64 %idxprom168, !dbg !3169
  %nbooks = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx169, i32 0, i32 3, !dbg !3171
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %nbooks, i64 0, i64 %idxprom167, !dbg !3169
  %162 = load i32, i32* %arrayidx170, align 4, !dbg !3169
  %163 = load i32, i32* %j, align 4, !dbg !3172
  %idxprom171 = sext i32 %163 to i64, !dbg !3173
  %164 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !3173
  %books172 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %164, i32 0, i32 3, !dbg !3174
  %165 = load i32*, i32** %books172, align 8, !dbg !3174
  %arrayidx173 = getelementptr inbounds i32, i32* %165, i64 %idxprom171, !dbg !3173
  store i32 %162, i32* %arrayidx173, align 4, !dbg !3175
  br label %for.inc174, !dbg !3173

for.inc174:                                       ; preds = %for.body166
  %166 = load i32, i32* %j, align 4, !dbg !3176
  %inc175 = add nsw i32 %166, 1, !dbg !3176
  store i32 %inc175, i32* %j, align 4, !dbg !3176
  br label %for.cond163, !dbg !3178, !llvm.loop !3179

for.end176:                                       ; preds = %for.cond163
  br label %for.inc177, !dbg !3181

for.inc177:                                       ; preds = %for.end176
  %167 = load i32, i32* %i, align 4, !dbg !3182
  %inc178 = add nsw i32 %167, 1, !dbg !3182
  store i32 %inc178, i32* %i, align 4, !dbg !3182
  br label %for.cond137, !dbg !3184, !llvm.loop !3185

for.end179:                                       ; preds = %for.cond137
  %168 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3187
  %multiplier = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %168, i32 0, i32 4, !dbg !3188
  store i32 2, i32* %multiplier, align 8, !dbg !3189
  %169 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3190
  %log2_blocksize180 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %169, i32 0, i32 2, !dbg !3191
  %arrayidx181 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize180, i64 0, i64 1, !dbg !3190
  %170 = load i32, i32* %arrayidx181, align 4, !dbg !3190
  %sub182 = sub nsw i32 %170, 1, !dbg !3192
  %171 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3193
  %rangebits = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %171, i32 0, i32 5, !dbg !3194
  store i32 %sub182, i32* %rangebits, align 4, !dbg !3195
  %172 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3196
  %values = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %172, i32 0, i32 6, !dbg !3197
  store i32 2, i32* %values, align 8, !dbg !3198
  store i32 0, i32* %i, align 4, !dbg !3199
  br label %for.cond183, !dbg !3201

for.cond183:                                      ; preds = %for.inc196, %for.end179
  %173 = load i32, i32* %i, align 4, !dbg !3202
  %174 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3205
  %partitions184 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %174, i32 0, i32 0, !dbg !3206
  %175 = load i32, i32* %partitions184, align 8, !dbg !3206
  %cmp185 = icmp slt i32 %173, %175, !dbg !3207
  br i1 %cmp185, label %for.body187, label %for.end198, !dbg !3208

for.body187:                                      ; preds = %for.cond183
  %176 = load i32, i32* %i, align 4, !dbg !3209
  %idxprom188 = sext i32 %176 to i64, !dbg !3210
  %177 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3210
  %partition_to_class189 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %177, i32 0, i32 1, !dbg !3211
  %178 = load i32*, i32** %partition_to_class189, align 8, !dbg !3211
  %arrayidx190 = getelementptr inbounds i32, i32* %178, i64 %idxprom188, !dbg !3210
  %179 = load i32, i32* %arrayidx190, align 4, !dbg !3210
  %idxprom191 = sext i32 %179 to i64, !dbg !3212
  %180 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3212
  %classes192 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %180, i32 0, i32 3, !dbg !3213
  %181 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes192, align 8, !dbg !3213
  %arrayidx193 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %181, i64 %idxprom191, !dbg !3212
  %dim194 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx193, i32 0, i32 0, !dbg !3214
  %182 = load i32, i32* %dim194, align 8, !dbg !3214
  %183 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3215
  %values195 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %183, i32 0, i32 6, !dbg !3216
  %184 = load i32, i32* %values195, align 8, !dbg !3217
  %add = add nsw i32 %184, %182, !dbg !3217
  store i32 %add, i32* %values195, align 8, !dbg !3217
  br label %for.inc196, !dbg !3215

for.inc196:                                       ; preds = %for.body187
  %185 = load i32, i32* %i, align 4, !dbg !3218
  %inc197 = add nsw i32 %185, 1, !dbg !3218
  store i32 %inc197, i32* %i, align 4, !dbg !3218
  br label %for.cond183, !dbg !3220, !llvm.loop !3221

for.end198:                                       ; preds = %for.cond183
  %186 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3223
  %values199 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %186, i32 0, i32 6, !dbg !3224
  %187 = load i32, i32* %values199, align 8, !dbg !3224
  %conv200 = sext i32 %187 to i64, !dbg !3223
  %call201 = call i8* @av_malloc_array(i64 %conv200, i64 8), !dbg !3225
  %188 = bitcast i8* %call201 to %struct.vorbis_floor1_entry*, !dbg !3225
  %189 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3226
  %list = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %189, i32 0, i32 7, !dbg !3227
  store %struct.vorbis_floor1_entry* %188, %struct.vorbis_floor1_entry** %list, align 8, !dbg !3228
  %190 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3229
  %list202 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %190, i32 0, i32 7, !dbg !3231
  %191 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list202, align 8, !dbg !3231
  %tobool203 = icmp ne %struct.vorbis_floor1_entry* %191, null, !dbg !3229
  br i1 %tobool203, label %if.end205, label %if.then204, !dbg !3232

if.then204:                                       ; preds = %for.end198
  store i32 -12, i32* %retval, align 4, !dbg !3233
  br label %return, !dbg !3233

if.end205:                                        ; preds = %for.end198
  %192 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3234
  %list206 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %192, i32 0, i32 7, !dbg !3235
  %193 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list206, align 8, !dbg !3235
  %arrayidx207 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %193, i64 0, !dbg !3234
  %x = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx207, i32 0, i32 0, !dbg !3236
  store i16 0, i16* %x, align 2, !dbg !3237
  %194 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3238
  %rangebits208 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %194, i32 0, i32 5, !dbg !3239
  %195 = load i32, i32* %rangebits208, align 4, !dbg !3239
  %shl209 = shl i32 1, %195, !dbg !3240
  %conv210 = trunc i32 %shl209 to i16, !dbg !3241
  %196 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3242
  %list211 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %196, i32 0, i32 7, !dbg !3243
  %197 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list211, align 8, !dbg !3243
  %arrayidx212 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %197, i64 1, !dbg !3242
  %x213 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx212, i32 0, i32 0, !dbg !3244
  store i16 %conv210, i16* %x213, align 2, !dbg !3245
  store i32 2, i32* %i, align 4, !dbg !3246
  br label %for.cond214, !dbg !3248

for.cond214:                                      ; preds = %for.inc227, %if.end205
  %198 = load i32, i32* %i, align 4, !dbg !3249
  %199 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3252
  %values215 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %199, i32 0, i32 6, !dbg !3253
  %200 = load i32, i32* %values215, align 8, !dbg !3253
  %cmp216 = icmp slt i32 %198, %200, !dbg !3254
  br i1 %cmp216, label %for.body218, label %for.end229, !dbg !3255

for.body218:                                      ; preds = %for.cond214
  %201 = load i32, i32* %i, align 4, !dbg !3256
  %sub219 = sub nsw i32 %201, 2, !dbg !3258
  %idxprom220 = sext i32 %sub219 to i64, !dbg !3259
  %arrayidx221 = getelementptr inbounds [27 x i32], [27 x i32]* @create_vorbis_context.a.3, i64 0, i64 %idxprom220, !dbg !3259
  %202 = load i32, i32* %arrayidx221, align 4, !dbg !3259
  %conv222 = trunc i32 %202 to i16, !dbg !3259
  %203 = load i32, i32* %i, align 4, !dbg !3260
  %idxprom223 = sext i32 %203 to i64, !dbg !3261
  %204 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3261
  %list224 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %204, i32 0, i32 7, !dbg !3262
  %205 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list224, align 8, !dbg !3262
  %arrayidx225 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %205, i64 %idxprom223, !dbg !3261
  %x226 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx225, i32 0, i32 0, !dbg !3263
  store i16 %conv222, i16* %x226, align 2, !dbg !3264
  br label %for.inc227, !dbg !3265

for.inc227:                                       ; preds = %for.body218
  %206 = load i32, i32* %i, align 4, !dbg !3266
  %inc228 = add nsw i32 %206, 1, !dbg !3266
  store i32 %inc228, i32* %i, align 4, !dbg !3266
  br label %for.cond214, !dbg !3268, !llvm.loop !3269

for.end229:                                       ; preds = %for.cond214
  %207 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3271
  %208 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3273
  %list230 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %208, i32 0, i32 7, !dbg !3274
  %209 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list230, align 8, !dbg !3274
  %210 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc, align 8, !dbg !3275
  %values231 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %210, i32 0, i32 6, !dbg !3276
  %211 = load i32, i32* %values231, align 8, !dbg !3276
  %call232 = call i32 @ff_vorbis_ready_floor1_list(%struct.AVCodecContext* %207, %struct.vorbis_floor1_entry* %209, i32 %211), !dbg !3277
  %tobool233 = icmp ne i32 %call232, 0, !dbg !3277
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !3278

if.then234:                                       ; preds = %for.end229
  store i32 -558323010, i32* %retval, align 4, !dbg !3279
  br label %return, !dbg !3279

if.end235:                                        ; preds = %for.end229
  %212 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3280
  %nresidues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %212, i32 0, i32 18, !dbg !3281
  store i32 1, i32* %nresidues, align 8, !dbg !3282
  %213 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3283
  %nresidues236 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %213, i32 0, i32 18, !dbg !3284
  %214 = load i32, i32* %nresidues236, align 8, !dbg !3284
  %conv237 = sext i32 %214 to i64, !dbg !3283
  %mul238 = mul i64 40, %conv237, !dbg !3285
  %call239 = call noalias i8* @av_malloc(i64 %mul238), !dbg !3286
  %215 = bitcast i8* %call239 to %struct.vorbis_enc_residue*, !dbg !3286
  %216 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3287
  %residues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %216, i32 0, i32 19, !dbg !3288
  store %struct.vorbis_enc_residue* %215, %struct.vorbis_enc_residue** %residues, align 8, !dbg !3289
  %217 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3290
  %residues240 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %217, i32 0, i32 19, !dbg !3292
  %218 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues240, align 8, !dbg !3292
  %tobool241 = icmp ne %struct.vorbis_enc_residue* %218, null, !dbg !3290
  br i1 %tobool241, label %if.end243, label %if.then242, !dbg !3293

if.then242:                                       ; preds = %if.end235
  store i32 -12, i32* %retval, align 4, !dbg !3294
  br label %return, !dbg !3294

if.end243:                                        ; preds = %if.end235
  %219 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3295
  %residues244 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %219, i32 0, i32 19, !dbg !3296
  %220 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues244, align 8, !dbg !3296
  %arrayidx245 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %220, i64 0, !dbg !3295
  store %struct.vorbis_enc_residue* %arrayidx245, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3297
  %221 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3298
  %type = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %221, i32 0, i32 0, !dbg !3299
  store i32 2, i32* %type, align 8, !dbg !3300
  %222 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3301
  %begin = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %222, i32 0, i32 1, !dbg !3302
  store i32 0, i32* %begin, align 4, !dbg !3303
  %223 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3304
  %end = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %223, i32 0, i32 2, !dbg !3305
  store i32 1600, i32* %end, align 8, !dbg !3306
  %224 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3307
  %partition_size = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %224, i32 0, i32 3, !dbg !3308
  store i32 32, i32* %partition_size, align 4, !dbg !3309
  %225 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3310
  %classifications = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %225, i32 0, i32 4, !dbg !3311
  store i32 10, i32* %classifications, align 8, !dbg !3312
  %226 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3313
  %classbook = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %226, i32 0, i32 5, !dbg !3314
  store i32 15, i32* %classbook, align 4, !dbg !3315
  %227 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3316
  %classifications246 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %227, i32 0, i32 4, !dbg !3317
  %228 = load i32, i32* %classifications246, align 8, !dbg !3317
  %conv247 = sext i32 %228 to i64, !dbg !3316
  %mul248 = mul i64 8, %conv247, !dbg !3318
  %call249 = call noalias i8* @av_malloc(i64 %mul248), !dbg !3319
  %229 = bitcast i8* %call249 to [8 x i8]*, !dbg !3319
  %230 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3320
  %books250 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %230, i32 0, i32 6, !dbg !3321
  store [8 x i8]* %229, [8 x i8]** %books250, align 8, !dbg !3322
  %231 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3323
  %books251 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %231, i32 0, i32 6, !dbg !3325
  %232 = load [8 x i8]*, [8 x i8]** %books251, align 8, !dbg !3325
  %tobool252 = icmp ne [8 x i8]* %232, null, !dbg !3323
  br i1 %tobool252, label %if.end254, label %if.then253, !dbg !3326

if.then253:                                       ; preds = %if.end243
  store i32 -12, i32* %retval, align 4, !dbg !3327
  br label %return, !dbg !3327

if.end254:                                        ; preds = %if.end243
  %233 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3328
  %books255 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %233, i32 0, i32 6, !dbg !3330
  %234 = load [8 x i8]*, [8 x i8]** %books255, align 8, !dbg !3330
  %235 = bitcast [8 x i8]* %234 to i8*, !dbg !3331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @create_vorbis_context.a.4, i32 0, i32 0, i32 0), i64 80, i32 1, i1 false), !dbg !3331
  %236 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc, align 8, !dbg !3332
  %237 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3334
  %call256 = call i32 @ready_residue(%struct.vorbis_enc_residue* %236, %struct.vorbis_enc_context* %237), !dbg !3335
  store i32 %call256, i32* %ret, align 4, !dbg !3336
  %cmp257 = icmp slt i32 %call256, 0, !dbg !3337
  br i1 %cmp257, label %if.then259, label %if.end260, !dbg !3338

if.then259:                                       ; preds = %if.end254
  %238 = load i32, i32* %ret, align 4, !dbg !3339
  store i32 %238, i32* %retval, align 4, !dbg !3340
  br label %return, !dbg !3340

if.end260:                                        ; preds = %if.end254
  %239 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3341
  %nmappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %239, i32 0, i32 20, !dbg !3342
  store i32 1, i32* %nmappings, align 8, !dbg !3343
  %240 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3344
  %nmappings261 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %240, i32 0, i32 20, !dbg !3345
  %241 = load i32, i32* %nmappings261, align 8, !dbg !3345
  %conv262 = sext i32 %241 to i64, !dbg !3344
  %mul263 = mul i64 56, %conv262, !dbg !3346
  %call264 = call noalias i8* @av_malloc(i64 %mul263), !dbg !3347
  %242 = bitcast i8* %call264 to %struct.vorbis_enc_mapping*, !dbg !3347
  %243 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3348
  %mappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %243, i32 0, i32 21, !dbg !3349
  store %struct.vorbis_enc_mapping* %242, %struct.vorbis_enc_mapping** %mappings, align 8, !dbg !3350
  %244 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3351
  %mappings265 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %244, i32 0, i32 21, !dbg !3353
  %245 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings265, align 8, !dbg !3353
  %tobool266 = icmp ne %struct.vorbis_enc_mapping* %245, null, !dbg !3351
  br i1 %tobool266, label %if.end268, label %if.then267, !dbg !3354

if.then267:                                       ; preds = %if.end260
  store i32 -12, i32* %retval, align 4, !dbg !3355
  br label %return, !dbg !3355

if.end268:                                        ; preds = %if.end260
  %246 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3356
  %mappings269 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %246, i32 0, i32 21, !dbg !3357
  %247 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings269, align 8, !dbg !3357
  %arrayidx270 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %247, i64 0, !dbg !3356
  store %struct.vorbis_enc_mapping* %arrayidx270, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3358
  %248 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3359
  %submaps = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %248, i32 0, i32 0, !dbg !3360
  store i32 1, i32* %submaps, align 8, !dbg !3361
  %249 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3362
  %channels271 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %249, i32 0, i32 0, !dbg !3363
  %250 = load i32, i32* %channels271, align 8, !dbg !3363
  %conv272 = sext i32 %250 to i64, !dbg !3362
  %mul273 = mul i64 4, %conv272, !dbg !3364
  %call274 = call noalias i8* @av_malloc(i64 %mul273), !dbg !3365
  %251 = bitcast i8* %call274 to i32*, !dbg !3365
  %252 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3366
  %mux = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %252, i32 0, i32 1, !dbg !3367
  store i32* %251, i32** %mux, align 8, !dbg !3368
  %253 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3369
  %mux275 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %253, i32 0, i32 1, !dbg !3371
  %254 = load i32*, i32** %mux275, align 8, !dbg !3371
  %tobool276 = icmp ne i32* %254, null, !dbg !3369
  br i1 %tobool276, label %if.end278, label %if.then277, !dbg !3372

if.then277:                                       ; preds = %if.end268
  store i32 -12, i32* %retval, align 4, !dbg !3373
  br label %return, !dbg !3373

if.end278:                                        ; preds = %if.end268
  store i32 0, i32* %i, align 4, !dbg !3374
  br label %for.cond279, !dbg !3376

for.cond279:                                      ; preds = %for.inc287, %if.end278
  %255 = load i32, i32* %i, align 4, !dbg !3377
  %256 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3380
  %channels280 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %256, i32 0, i32 0, !dbg !3381
  %257 = load i32, i32* %channels280, align 8, !dbg !3381
  %cmp281 = icmp slt i32 %255, %257, !dbg !3382
  br i1 %cmp281, label %for.body283, label %for.end289, !dbg !3383

for.body283:                                      ; preds = %for.cond279
  %258 = load i32, i32* %i, align 4, !dbg !3384
  %idxprom284 = sext i32 %258 to i64, !dbg !3385
  %259 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3385
  %mux285 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %259, i32 0, i32 1, !dbg !3386
  %260 = load i32*, i32** %mux285, align 8, !dbg !3386
  %arrayidx286 = getelementptr inbounds i32, i32* %260, i64 %idxprom284, !dbg !3385
  store i32 0, i32* %arrayidx286, align 4, !dbg !3387
  br label %for.inc287, !dbg !3385

for.inc287:                                       ; preds = %for.body283
  %261 = load i32, i32* %i, align 4, !dbg !3388
  %inc288 = add nsw i32 %261, 1, !dbg !3388
  store i32 %inc288, i32* %i, align 4, !dbg !3388
  br label %for.cond279, !dbg !3390, !llvm.loop !3391

for.end289:                                       ; preds = %for.cond279
  %262 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3393
  %submaps290 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %262, i32 0, i32 0, !dbg !3394
  %263 = load i32, i32* %submaps290, align 8, !dbg !3394
  %conv291 = sext i32 %263 to i64, !dbg !3393
  %mul292 = mul i64 4, %conv291, !dbg !3395
  %call293 = call noalias i8* @av_malloc(i64 %mul292), !dbg !3396
  %264 = bitcast i8* %call293 to i32*, !dbg !3396
  %265 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3397
  %floor = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %265, i32 0, i32 2, !dbg !3398
  store i32* %264, i32** %floor, align 8, !dbg !3399
  %266 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3400
  %submaps294 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %266, i32 0, i32 0, !dbg !3401
  %267 = load i32, i32* %submaps294, align 8, !dbg !3401
  %conv295 = sext i32 %267 to i64, !dbg !3400
  %mul296 = mul i64 4, %conv295, !dbg !3402
  %call297 = call noalias i8* @av_malloc(i64 %mul296), !dbg !3403
  %268 = bitcast i8* %call297 to i32*, !dbg !3403
  %269 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3404
  %residue = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %269, i32 0, i32 3, !dbg !3405
  store i32* %268, i32** %residue, align 8, !dbg !3406
  %270 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3407
  %floor298 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %270, i32 0, i32 2, !dbg !3409
  %271 = load i32*, i32** %floor298, align 8, !dbg !3409
  %tobool299 = icmp ne i32* %271, null, !dbg !3407
  br i1 %tobool299, label %lor.lhs.false300, label %if.then303, !dbg !3410

lor.lhs.false300:                                 ; preds = %for.end289
  %272 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3411
  %residue301 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %272, i32 0, i32 3, !dbg !3413
  %273 = load i32*, i32** %residue301, align 8, !dbg !3413
  %tobool302 = icmp ne i32* %273, null, !dbg !3411
  br i1 %tobool302, label %if.end304, label %if.then303, !dbg !3414

if.then303:                                       ; preds = %lor.lhs.false300, %for.end289
  store i32 -12, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.end304:                                        ; preds = %lor.lhs.false300
  store i32 0, i32* %i, align 4, !dbg !3416
  br label %for.cond305, !dbg !3418

for.cond305:                                      ; preds = %for.inc316, %if.end304
  %274 = load i32, i32* %i, align 4, !dbg !3419
  %275 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3422
  %submaps306 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %275, i32 0, i32 0, !dbg !3423
  %276 = load i32, i32* %submaps306, align 8, !dbg !3423
  %cmp307 = icmp slt i32 %274, %276, !dbg !3424
  br i1 %cmp307, label %for.body309, label %for.end318, !dbg !3425

for.body309:                                      ; preds = %for.cond305
  %277 = load i32, i32* %i, align 4, !dbg !3426
  %idxprom310 = sext i32 %277 to i64, !dbg !3428
  %278 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3428
  %floor311 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %278, i32 0, i32 2, !dbg !3429
  %279 = load i32*, i32** %floor311, align 8, !dbg !3429
  %arrayidx312 = getelementptr inbounds i32, i32* %279, i64 %idxprom310, !dbg !3428
  store i32 0, i32* %arrayidx312, align 4, !dbg !3430
  %280 = load i32, i32* %i, align 4, !dbg !3431
  %idxprom313 = sext i32 %280 to i64, !dbg !3432
  %281 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3432
  %residue314 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %281, i32 0, i32 3, !dbg !3433
  %282 = load i32*, i32** %residue314, align 8, !dbg !3433
  %arrayidx315 = getelementptr inbounds i32, i32* %282, i64 %idxprom313, !dbg !3432
  store i32 0, i32* %arrayidx315, align 4, !dbg !3434
  br label %for.inc316, !dbg !3435

for.inc316:                                       ; preds = %for.body309
  %283 = load i32, i32* %i, align 4, !dbg !3436
  %inc317 = add nsw i32 %283, 1, !dbg !3436
  store i32 %inc317, i32* %i, align 4, !dbg !3436
  br label %for.cond305, !dbg !3438, !llvm.loop !3439

for.end318:                                       ; preds = %for.cond305
  %284 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3441
  %channels319 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %284, i32 0, i32 0, !dbg !3442
  %285 = load i32, i32* %channels319, align 8, !dbg !3442
  %cmp320 = icmp eq i32 %285, 2, !dbg !3443
  %cond322 = select i1 %cmp320, i32 1, i32 0, !dbg !3441
  %286 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3444
  %coupling_steps = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %286, i32 0, i32 4, !dbg !3445
  store i32 %cond322, i32* %coupling_steps, align 8, !dbg !3446
  %287 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3447
  %coupling_steps323 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %287, i32 0, i32 4, !dbg !3448
  %288 = load i32, i32* %coupling_steps323, align 8, !dbg !3448
  %conv324 = sext i32 %288 to i64, !dbg !3447
  %mul325 = mul i64 4, %conv324, !dbg !3449
  %call326 = call noalias i8* @av_malloc(i64 %mul325), !dbg !3450
  %289 = bitcast i8* %call326 to i32*, !dbg !3450
  %290 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3451
  %magnitude = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %290, i32 0, i32 5, !dbg !3452
  store i32* %289, i32** %magnitude, align 8, !dbg !3453
  %291 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3454
  %coupling_steps327 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %291, i32 0, i32 4, !dbg !3455
  %292 = load i32, i32* %coupling_steps327, align 8, !dbg !3455
  %conv328 = sext i32 %292 to i64, !dbg !3454
  %mul329 = mul i64 4, %conv328, !dbg !3456
  %call330 = call noalias i8* @av_malloc(i64 %mul329), !dbg !3457
  %293 = bitcast i8* %call330 to i32*, !dbg !3457
  %294 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3458
  %angle = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %294, i32 0, i32 6, !dbg !3459
  store i32* %293, i32** %angle, align 8, !dbg !3460
  %295 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3461
  %magnitude331 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %295, i32 0, i32 5, !dbg !3463
  %296 = load i32*, i32** %magnitude331, align 8, !dbg !3463
  %tobool332 = icmp ne i32* %296, null, !dbg !3461
  br i1 %tobool332, label %lor.lhs.false333, label %if.then336, !dbg !3464

lor.lhs.false333:                                 ; preds = %for.end318
  %297 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3465
  %angle334 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %297, i32 0, i32 6, !dbg !3467
  %298 = load i32*, i32** %angle334, align 8, !dbg !3467
  %tobool335 = icmp ne i32* %298, null, !dbg !3465
  br i1 %tobool335, label %if.end337, label %if.then336, !dbg !3468

if.then336:                                       ; preds = %lor.lhs.false333, %for.end318
  store i32 -12, i32* %retval, align 4, !dbg !3469
  br label %return, !dbg !3469

if.end337:                                        ; preds = %lor.lhs.false333
  %299 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3470
  %coupling_steps338 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %299, i32 0, i32 4, !dbg !3472
  %300 = load i32, i32* %coupling_steps338, align 8, !dbg !3472
  %tobool339 = icmp ne i32 %300, 0, !dbg !3470
  br i1 %tobool339, label %if.then340, label %if.end345, !dbg !3473

if.then340:                                       ; preds = %if.end337
  %301 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3474
  %magnitude341 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %301, i32 0, i32 5, !dbg !3476
  %302 = load i32*, i32** %magnitude341, align 8, !dbg !3476
  %arrayidx342 = getelementptr inbounds i32, i32* %302, i64 0, !dbg !3474
  store i32 0, i32* %arrayidx342, align 4, !dbg !3477
  %303 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3478
  %angle343 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %303, i32 0, i32 6, !dbg !3479
  %304 = load i32*, i32** %angle343, align 8, !dbg !3479
  %arrayidx344 = getelementptr inbounds i32, i32* %304, i64 0, !dbg !3478
  store i32 1, i32* %arrayidx344, align 4, !dbg !3480
  br label %if.end345, !dbg !3481

if.end345:                                        ; preds = %if.then340, %if.end337
  %305 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3482
  %nmodes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %305, i32 0, i32 22, !dbg !3483
  store i32 2, i32* %nmodes, align 8, !dbg !3484
  %306 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3485
  %nmodes346 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %306, i32 0, i32 22, !dbg !3486
  %307 = load i32, i32* %nmodes346, align 8, !dbg !3486
  %conv347 = sext i32 %307 to i64, !dbg !3485
  %mul348 = mul i64 8, %conv347, !dbg !3487
  %call349 = call noalias i8* @av_malloc(i64 %mul348), !dbg !3488
  %308 = bitcast i8* %call349 to %struct.vorbis_enc_mode*, !dbg !3488
  %309 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3489
  %modes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %309, i32 0, i32 23, !dbg !3490
  store %struct.vorbis_enc_mode* %308, %struct.vorbis_enc_mode** %modes, align 8, !dbg !3491
  %310 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3492
  %modes350 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %310, i32 0, i32 23, !dbg !3494
  %311 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes350, align 8, !dbg !3494
  %tobool351 = icmp ne %struct.vorbis_enc_mode* %311, null, !dbg !3492
  br i1 %tobool351, label %if.end353, label %if.then352, !dbg !3495

if.then352:                                       ; preds = %if.end345
  store i32 -12, i32* %retval, align 4, !dbg !3496
  br label %return, !dbg !3496

if.end353:                                        ; preds = %if.end345
  %312 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3497
  %modes354 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %312, i32 0, i32 23, !dbg !3498
  %313 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes354, align 8, !dbg !3498
  %arrayidx355 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %313, i64 0, !dbg !3497
  %blockflag = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %arrayidx355, i32 0, i32 0, !dbg !3499
  store i32 0, i32* %blockflag, align 4, !dbg !3500
  %314 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3501
  %modes356 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %314, i32 0, i32 23, !dbg !3502
  %315 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes356, align 8, !dbg !3502
  %arrayidx357 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %315, i64 0, !dbg !3501
  %mapping = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %arrayidx357, i32 0, i32 1, !dbg !3503
  store i32 0, i32* %mapping, align 4, !dbg !3504
  %316 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3505
  %modes358 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %316, i32 0, i32 23, !dbg !3506
  %317 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes358, align 8, !dbg !3506
  %arrayidx359 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %317, i64 1, !dbg !3505
  %blockflag360 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %arrayidx359, i32 0, i32 0, !dbg !3507
  store i32 1, i32* %blockflag360, align 4, !dbg !3508
  %318 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3509
  %modes361 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %318, i32 0, i32 23, !dbg !3510
  %319 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes361, align 8, !dbg !3510
  %arrayidx362 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %319, i64 1, !dbg !3509
  %mapping363 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %arrayidx362, i32 0, i32 1, !dbg !3511
  store i32 0, i32* %mapping363, align 4, !dbg !3512
  %320 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3513
  %have_saved = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %320, i32 0, i32 5, !dbg !3514
  store i32 0, i32* %have_saved, align 8, !dbg !3515
  %321 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3516
  %channels364 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %321, i32 0, i32 0, !dbg !3517
  %322 = load i32, i32* %channels364, align 8, !dbg !3517
  %conv365 = sext i32 %322 to i64, !dbg !3516
  %mul366 = mul i64 4, %conv365, !dbg !3518
  %323 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3519
  %log2_blocksize367 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %323, i32 0, i32 2, !dbg !3520
  %arrayidx368 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize367, i64 0, i64 1, !dbg !3519
  %324 = load i32, i32* %arrayidx368, align 4, !dbg !3519
  %shl369 = shl i32 1, %324, !dbg !3521
  %div = sdiv i32 %shl369, 2, !dbg !3522
  %conv370 = sext i32 %div to i64, !dbg !3523
  %call371 = call i8* @av_malloc_array(i64 %mul366, i64 %conv370), !dbg !3524
  %325 = bitcast i8* %call371 to float*, !dbg !3524
  %326 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3525
  %saved = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %326, i32 0, i32 6, !dbg !3526
  store float* %325, float** %saved, align 8, !dbg !3527
  %327 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3528
  %channels372 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %327, i32 0, i32 0, !dbg !3529
  %328 = load i32, i32* %channels372, align 8, !dbg !3529
  %conv373 = sext i32 %328 to i64, !dbg !3528
  %mul374 = mul i64 4, %conv373, !dbg !3530
  %329 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3531
  %log2_blocksize375 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %329, i32 0, i32 2, !dbg !3532
  %arrayidx376 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize375, i64 0, i64 1, !dbg !3531
  %330 = load i32, i32* %arrayidx376, align 4, !dbg !3531
  %shl377 = shl i32 1, %330, !dbg !3533
  %conv378 = sext i32 %shl377 to i64, !dbg !3534
  %call379 = call i8* @av_malloc_array(i64 %mul374, i64 %conv378), !dbg !3535
  %331 = bitcast i8* %call379 to float*, !dbg !3535
  %332 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3536
  %samples = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %332, i32 0, i32 7, !dbg !3537
  store float* %331, float** %samples, align 8, !dbg !3538
  %333 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3539
  %channels380 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %333, i32 0, i32 0, !dbg !3540
  %334 = load i32, i32* %channels380, align 8, !dbg !3540
  %conv381 = sext i32 %334 to i64, !dbg !3539
  %mul382 = mul i64 4, %conv381, !dbg !3541
  %335 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3542
  %log2_blocksize383 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %335, i32 0, i32 2, !dbg !3543
  %arrayidx384 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize383, i64 0, i64 1, !dbg !3542
  %336 = load i32, i32* %arrayidx384, align 4, !dbg !3542
  %shl385 = shl i32 1, %336, !dbg !3544
  %div386 = sdiv i32 %shl385, 2, !dbg !3545
  %conv387 = sext i32 %div386 to i64, !dbg !3546
  %call388 = call i8* @av_malloc_array(i64 %mul382, i64 %conv387), !dbg !3547
  %337 = bitcast i8* %call388 to float*, !dbg !3547
  %338 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3548
  %floor389 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %338, i32 0, i32 8, !dbg !3549
  store float* %337, float** %floor389, align 8, !dbg !3550
  %339 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3551
  %channels390 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %339, i32 0, i32 0, !dbg !3552
  %340 = load i32, i32* %channels390, align 8, !dbg !3552
  %conv391 = sext i32 %340 to i64, !dbg !3551
  %mul392 = mul i64 4, %conv391, !dbg !3553
  %341 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3554
  %log2_blocksize393 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %341, i32 0, i32 2, !dbg !3555
  %arrayidx394 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize393, i64 0, i64 1, !dbg !3554
  %342 = load i32, i32* %arrayidx394, align 4, !dbg !3554
  %shl395 = shl i32 1, %342, !dbg !3556
  %div396 = sdiv i32 %shl395, 2, !dbg !3557
  %conv397 = sext i32 %div396 to i64, !dbg !3558
  %call398 = call i8* @av_malloc_array(i64 %mul392, i64 %conv397), !dbg !3559
  %343 = bitcast i8* %call398 to float*, !dbg !3559
  %344 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3560
  %coeffs = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %344, i32 0, i32 9, !dbg !3561
  store float* %343, float** %coeffs, align 8, !dbg !3562
  %345 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3563
  %channels399 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %345, i32 0, i32 0, !dbg !3564
  %346 = load i32, i32* %channels399, align 8, !dbg !3564
  %conv400 = sext i32 %346 to i64, !dbg !3563
  %mul401 = mul i64 4, %conv400, !dbg !3565
  %347 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3566
  %log2_blocksize402 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %347, i32 0, i32 2, !dbg !3567
  %arrayidx403 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize402, i64 0, i64 1, !dbg !3566
  %348 = load i32, i32* %arrayidx403, align 4, !dbg !3566
  %shl404 = shl i32 1, %348, !dbg !3568
  %conv405 = sext i32 %shl404 to i64, !dbg !3569
  %call406 = call i8* @av_malloc_array(i64 %mul401, i64 %conv405), !dbg !3570
  %349 = bitcast i8* %call406 to float*, !dbg !3570
  %350 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3571
  %scratch = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %350, i32 0, i32 10, !dbg !3572
  store float* %349, float** %scratch, align 8, !dbg !3573
  %351 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3574
  %saved407 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %351, i32 0, i32 6, !dbg !3576
  %352 = load float*, float** %saved407, align 8, !dbg !3576
  %tobool408 = icmp ne float* %352, null, !dbg !3574
  br i1 %tobool408, label %lor.lhs.false409, label %if.then421, !dbg !3577

lor.lhs.false409:                                 ; preds = %if.end353
  %353 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3578
  %samples410 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %353, i32 0, i32 7, !dbg !3580
  %354 = load float*, float** %samples410, align 8, !dbg !3580
  %tobool411 = icmp ne float* %354, null, !dbg !3578
  br i1 %tobool411, label %lor.lhs.false412, label %if.then421, !dbg !3581

lor.lhs.false412:                                 ; preds = %lor.lhs.false409
  %355 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3582
  %floor413 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %355, i32 0, i32 8, !dbg !3584
  %356 = load float*, float** %floor413, align 8, !dbg !3584
  %tobool414 = icmp ne float* %356, null, !dbg !3582
  br i1 %tobool414, label %lor.lhs.false415, label %if.then421, !dbg !3585

lor.lhs.false415:                                 ; preds = %lor.lhs.false412
  %357 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3586
  %coeffs416 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %357, i32 0, i32 9, !dbg !3588
  %358 = load float*, float** %coeffs416, align 8, !dbg !3588
  %tobool417 = icmp ne float* %358, null, !dbg !3586
  br i1 %tobool417, label %lor.lhs.false418, label %if.then421, !dbg !3589

lor.lhs.false418:                                 ; preds = %lor.lhs.false415
  %359 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3590
  %scratch419 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %359, i32 0, i32 10, !dbg !3592
  %360 = load float*, float** %scratch419, align 8, !dbg !3592
  %tobool420 = icmp ne float* %360, null, !dbg !3590
  br i1 %tobool420, label %if.end422, label %if.then421, !dbg !3593

if.then421:                                       ; preds = %lor.lhs.false418, %lor.lhs.false415, %lor.lhs.false412, %lor.lhs.false409, %if.end353
  store i32 -12, i32* %retval, align 4, !dbg !3594
  br label %return, !dbg !3594

if.end422:                                        ; preds = %lor.lhs.false418
  %361 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3595
  %362 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3597
  %call423 = call i32 @dsp_init(%struct.AVCodecContext* %361, %struct.vorbis_enc_context* %362), !dbg !3598
  store i32 %call423, i32* %ret, align 4, !dbg !3599
  %cmp424 = icmp slt i32 %call423, 0, !dbg !3600
  br i1 %cmp424, label %if.then426, label %if.end427, !dbg !3601

if.then426:                                       ; preds = %if.end422
  %363 = load i32, i32* %ret, align 4, !dbg !3602
  store i32 %363, i32* %retval, align 4, !dbg !3603
  br label %return, !dbg !3603

if.end427:                                        ; preds = %if.end422
  store i32 0, i32* %retval, align 4, !dbg !3604
  br label %return, !dbg !3604

return:                                           ; preds = %if.end427, %if.then426, %if.then421, %if.then352, %if.then336, %if.then303, %if.then277, %if.then267, %if.then259, %if.then253, %if.then242, %if.then234, %if.then204, %if.then161, %if.then135, %if.then102, %if.then92, %if.then81, %if.then62, %if.then34, %if.then
  %364 = load i32, i32* %retval, align 4, !dbg !3605
  ret i32 %364, !dbg !3605
}

; Function Attrs: nounwind uwtable
define internal i32 @put_main_header(%struct.vorbis_enc_context* %venc, i8** %out) #1 !dbg !3606 {
entry:
  %retval = alloca i32, align 4
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %out.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %pb = alloca %struct.PutBitContext, align 8
  %len = alloca i32, align 4
  %hlens = alloca [3 x i32], align 4
  %buffer_len = alloca i32, align 4
  %buffer = alloca i8*, align 8
  %p = alloca i8*, align 8
  %mc = alloca %struct.vorbis_enc_mapping*, align 8
  %j = alloca i32, align 4
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !3609, metadata !1998), !dbg !3610
  store i8** %out, i8*** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %out.addr, metadata !3611, metadata !1998), !dbg !3612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3613, metadata !1998), !dbg !3614
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !3615, metadata !1998), !dbg !3616
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3617, metadata !1998), !dbg !3618
  call void @llvm.dbg.declare(metadata [3 x i32]* %hlens, metadata !3619, metadata !1998), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %buffer_len, metadata !3624, metadata !1998), !dbg !3625
  store i32 50000, i32* %buffer_len, align 4, !dbg !3625
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !3626, metadata !1998), !dbg !3627
  %0 = load i32, i32* %buffer_len, align 4, !dbg !3628
  %conv = sext i32 %0 to i64, !dbg !3628
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !3629
  store i8* %call, i8** %buffer, align 8, !dbg !3627
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3630, metadata !1998), !dbg !3631
  %1 = load i8*, i8** %buffer, align 8, !dbg !3632
  store i8* %1, i8** %p, align 8, !dbg !3631
  %2 = load i8*, i8** %buffer, align 8, !dbg !3633
  %tobool = icmp ne i8* %2, null, !dbg !3633
  br i1 %tobool, label %if.end, label %if.then, !dbg !3635

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !3636
  br label %return, !dbg !3636

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %p, align 8, !dbg !3637
  %4 = load i32, i32* %buffer_len, align 4, !dbg !3638
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %3, i32 %4), !dbg !3639
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 1), !dbg !3640
  store i32 0, i32* %i, align 4, !dbg !3641
  br label %for.cond, !dbg !3643

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !3644
  %idxprom = sext i32 %5 to i64, !dbg !3647
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @.str, i64 0, i64 %idxprom, !dbg !3647
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3647
  %tobool1 = icmp ne i8 %6, 0, !dbg !3648
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3648

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !3649
  %idxprom2 = sext i32 %7 to i64, !dbg !3650
  %arrayidx3 = getelementptr inbounds [7 x i8], [7 x i8]* @.str, i64 0, i64 %idxprom2, !dbg !3650
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !3650
  %conv4 = sext i8 %8 to i32, !dbg !3650
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv4), !dbg !3651
  br label %for.inc, !dbg !3651

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !3652
  %inc = add nsw i32 %9, 1, !dbg !3652
  store i32 %inc, i32* %i, align 4, !dbg !3652
  br label %for.cond, !dbg !3654, !llvm.loop !3655

for.end:                                          ; preds = %for.cond
  call void @put_bits32(%struct.PutBitContext* %pb, i32 0), !dbg !3657
  %10 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3658
  %channels = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %10, i32 0, i32 0, !dbg !3659
  %11 = load i32, i32* %channels, align 8, !dbg !3659
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %11), !dbg !3660
  %12 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3661
  %sample_rate = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %12, i32 0, i32 1, !dbg !3662
  %13 = load i32, i32* %sample_rate, align 4, !dbg !3662
  call void @put_bits32(%struct.PutBitContext* %pb, i32 %13), !dbg !3663
  call void @put_bits32(%struct.PutBitContext* %pb, i32 0), !dbg !3664
  call void @put_bits32(%struct.PutBitContext* %pb, i32 0), !dbg !3665
  call void @put_bits32(%struct.PutBitContext* %pb, i32 0), !dbg !3666
  %14 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3667
  %log2_blocksize = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %14, i32 0, i32 2, !dbg !3668
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize, i64 0, i64 0, !dbg !3667
  %15 = load i32, i32* %arrayidx5, align 8, !dbg !3667
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %15), !dbg !3669
  %16 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3670
  %log2_blocksize6 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %16, i32 0, i32 2, !dbg !3671
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize6, i64 0, i64 1, !dbg !3670
  %17 = load i32, i32* %arrayidx7, align 4, !dbg !3670
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %17), !dbg !3672
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !3673
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !3674
  %call8 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !3675
  %shr = ashr i32 %call8, 3, !dbg !3676
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 0, !dbg !3677
  store i32 %shr, i32* %arrayidx9, align 4, !dbg !3678
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 0, !dbg !3679
  %18 = load i32, i32* %arrayidx10, align 4, !dbg !3679
  %19 = load i32, i32* %buffer_len, align 4, !dbg !3680
  %sub = sub nsw i32 %19, %18, !dbg !3680
  store i32 %sub, i32* %buffer_len, align 4, !dbg !3680
  %arrayidx11 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 0, !dbg !3681
  %20 = load i32, i32* %arrayidx11, align 4, !dbg !3681
  %21 = load i8*, i8** %p, align 8, !dbg !3682
  %idx.ext = sext i32 %20 to i64, !dbg !3682
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !3682
  store i8* %add.ptr, i8** %p, align 8, !dbg !3682
  %22 = load i8*, i8** %p, align 8, !dbg !3683
  %23 = load i32, i32* %buffer_len, align 4, !dbg !3684
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %22, i32 %23), !dbg !3685
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 3), !dbg !3686
  store i32 0, i32* %i, align 4, !dbg !3687
  br label %for.cond12, !dbg !3689

for.cond12:                                       ; preds = %for.inc20, %for.end
  %24 = load i32, i32* %i, align 4, !dbg !3690
  %idxprom13 = sext i32 %24 to i64, !dbg !3693
  %arrayidx14 = getelementptr inbounds [7 x i8], [7 x i8]* @.str, i64 0, i64 %idxprom13, !dbg !3693
  %25 = load i8, i8* %arrayidx14, align 1, !dbg !3693
  %tobool15 = icmp ne i8 %25, 0, !dbg !3694
  br i1 %tobool15, label %for.body16, label %for.end22, !dbg !3694

for.body16:                                       ; preds = %for.cond12
  %26 = load i32, i32* %i, align 4, !dbg !3695
  %idxprom17 = sext i32 %26 to i64, !dbg !3696
  %arrayidx18 = getelementptr inbounds [7 x i8], [7 x i8]* @.str, i64 0, i64 %idxprom17, !dbg !3696
  %27 = load i8, i8* %arrayidx18, align 1, !dbg !3696
  %conv19 = sext i8 %27 to i32, !dbg !3696
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv19), !dbg !3697
  br label %for.inc20, !dbg !3697

for.inc20:                                        ; preds = %for.body16
  %28 = load i32, i32* %i, align 4, !dbg !3698
  %inc21 = add nsw i32 %28, 1, !dbg !3698
  store i32 %inc21, i32* %i, align 4, !dbg !3698
  br label %for.cond12, !dbg !3700, !llvm.loop !3701

for.end22:                                        ; preds = %for.cond12
  call void @put_bits32(%struct.PutBitContext* %pb, i32 0), !dbg !3703
  call void @put_bits32(%struct.PutBitContext* %pb, i32 0), !dbg !3704
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !3705
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !3706
  %call23 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !3707
  %shr24 = ashr i32 %call23, 3, !dbg !3708
  %arrayidx25 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 1, !dbg !3709
  store i32 %shr24, i32* %arrayidx25, align 4, !dbg !3710
  %arrayidx26 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 1, !dbg !3711
  %29 = load i32, i32* %arrayidx26, align 4, !dbg !3711
  %30 = load i32, i32* %buffer_len, align 4, !dbg !3712
  %sub27 = sub nsw i32 %30, %29, !dbg !3712
  store i32 %sub27, i32* %buffer_len, align 4, !dbg !3712
  %arrayidx28 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 1, !dbg !3713
  %31 = load i32, i32* %arrayidx28, align 4, !dbg !3713
  %32 = load i8*, i8** %p, align 8, !dbg !3714
  %idx.ext29 = sext i32 %31 to i64, !dbg !3714
  %add.ptr30 = getelementptr inbounds i8, i8* %32, i64 %idx.ext29, !dbg !3714
  store i8* %add.ptr30, i8** %p, align 8, !dbg !3714
  %33 = load i8*, i8** %p, align 8, !dbg !3715
  %34 = load i32, i32* %buffer_len, align 4, !dbg !3716
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %33, i32 %34), !dbg !3717
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 5), !dbg !3718
  store i32 0, i32* %i, align 4, !dbg !3719
  br label %for.cond31, !dbg !3721

for.cond31:                                       ; preds = %for.inc39, %for.end22
  %35 = load i32, i32* %i, align 4, !dbg !3722
  %idxprom32 = sext i32 %35 to i64, !dbg !3725
  %arrayidx33 = getelementptr inbounds [7 x i8], [7 x i8]* @.str, i64 0, i64 %idxprom32, !dbg !3725
  %36 = load i8, i8* %arrayidx33, align 1, !dbg !3725
  %tobool34 = icmp ne i8 %36, 0, !dbg !3726
  br i1 %tobool34, label %for.body35, label %for.end41, !dbg !3726

for.body35:                                       ; preds = %for.cond31
  %37 = load i32, i32* %i, align 4, !dbg !3727
  %idxprom36 = sext i32 %37 to i64, !dbg !3728
  %arrayidx37 = getelementptr inbounds [7 x i8], [7 x i8]* @.str, i64 0, i64 %idxprom36, !dbg !3728
  %38 = load i8, i8* %arrayidx37, align 1, !dbg !3728
  %conv38 = sext i8 %38 to i32, !dbg !3728
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv38), !dbg !3729
  br label %for.inc39, !dbg !3729

for.inc39:                                        ; preds = %for.body35
  %39 = load i32, i32* %i, align 4, !dbg !3730
  %inc40 = add nsw i32 %39, 1, !dbg !3730
  store i32 %inc40, i32* %i, align 4, !dbg !3730
  br label %for.cond31, !dbg !3732, !llvm.loop !3733

for.end41:                                        ; preds = %for.cond31
  %40 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3735
  %ncodebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %40, i32 0, i32 14, !dbg !3736
  %41 = load i32, i32* %ncodebooks, align 8, !dbg !3736
  %sub42 = sub nsw i32 %41, 1, !dbg !3737
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %sub42), !dbg !3738
  store i32 0, i32* %i, align 4, !dbg !3739
  br label %for.cond43, !dbg !3741

for.cond43:                                       ; preds = %for.inc49, %for.end41
  %42 = load i32, i32* %i, align 4, !dbg !3742
  %43 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3745
  %ncodebooks44 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %43, i32 0, i32 14, !dbg !3746
  %44 = load i32, i32* %ncodebooks44, align 8, !dbg !3746
  %cmp = icmp slt i32 %42, %44, !dbg !3747
  br i1 %cmp, label %for.body46, label %for.end51, !dbg !3748

for.body46:                                       ; preds = %for.cond43
  %45 = load i32, i32* %i, align 4, !dbg !3749
  %idxprom47 = sext i32 %45 to i64, !dbg !3750
  %46 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3750
  %codebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %46, i32 0, i32 15, !dbg !3751
  %47 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks, align 8, !dbg !3751
  %arrayidx48 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %47, i64 %idxprom47, !dbg !3750
  call void @put_codebook_header(%struct.PutBitContext* %pb, %struct.vorbis_enc_codebook* %arrayidx48), !dbg !3752
  br label %for.inc49, !dbg !3752

for.inc49:                                        ; preds = %for.body46
  %48 = load i32, i32* %i, align 4, !dbg !3753
  %inc50 = add nsw i32 %48, 1, !dbg !3753
  store i32 %inc50, i32* %i, align 4, !dbg !3753
  br label %for.cond43, !dbg !3755, !llvm.loop !3756

for.end51:                                        ; preds = %for.cond43
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 0), !dbg !3758
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 0), !dbg !3759
  %49 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3760
  %nfloors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %49, i32 0, i32 16, !dbg !3761
  %50 = load i32, i32* %nfloors, align 8, !dbg !3761
  %sub52 = sub nsw i32 %50, 1, !dbg !3762
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %sub52), !dbg !3763
  store i32 0, i32* %i, align 4, !dbg !3764
  br label %for.cond53, !dbg !3766

for.cond53:                                       ; preds = %for.inc60, %for.end51
  %51 = load i32, i32* %i, align 4, !dbg !3767
  %52 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3770
  %nfloors54 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %52, i32 0, i32 16, !dbg !3771
  %53 = load i32, i32* %nfloors54, align 8, !dbg !3771
  %cmp55 = icmp slt i32 %51, %53, !dbg !3772
  br i1 %cmp55, label %for.body57, label %for.end62, !dbg !3773

for.body57:                                       ; preds = %for.cond53
  %54 = load i32, i32* %i, align 4, !dbg !3774
  %idxprom58 = sext i32 %54 to i64, !dbg !3775
  %55 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3775
  %floors = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %55, i32 0, i32 17, !dbg !3776
  %56 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %floors, align 8, !dbg !3776
  %arrayidx59 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %56, i64 %idxprom58, !dbg !3775
  call void @put_floor_header(%struct.PutBitContext* %pb, %struct.vorbis_enc_floor* %arrayidx59), !dbg !3777
  br label %for.inc60, !dbg !3777

for.inc60:                                        ; preds = %for.body57
  %57 = load i32, i32* %i, align 4, !dbg !3778
  %inc61 = add nsw i32 %57, 1, !dbg !3778
  store i32 %inc61, i32* %i, align 4, !dbg !3778
  br label %for.cond53, !dbg !3780, !llvm.loop !3781

for.end62:                                        ; preds = %for.cond53
  %58 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3783
  %nresidues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %58, i32 0, i32 18, !dbg !3784
  %59 = load i32, i32* %nresidues, align 8, !dbg !3784
  %sub63 = sub nsw i32 %59, 1, !dbg !3785
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %sub63), !dbg !3786
  store i32 0, i32* %i, align 4, !dbg !3787
  br label %for.cond64, !dbg !3789

for.cond64:                                       ; preds = %for.inc71, %for.end62
  %60 = load i32, i32* %i, align 4, !dbg !3790
  %61 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3793
  %nresidues65 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %61, i32 0, i32 18, !dbg !3794
  %62 = load i32, i32* %nresidues65, align 8, !dbg !3794
  %cmp66 = icmp slt i32 %60, %62, !dbg !3795
  br i1 %cmp66, label %for.body68, label %for.end73, !dbg !3796

for.body68:                                       ; preds = %for.cond64
  %63 = load i32, i32* %i, align 4, !dbg !3797
  %idxprom69 = sext i32 %63 to i64, !dbg !3798
  %64 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3798
  %residues = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %64, i32 0, i32 19, !dbg !3799
  %65 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %residues, align 8, !dbg !3799
  %arrayidx70 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %65, i64 %idxprom69, !dbg !3798
  call void @put_residue_header(%struct.PutBitContext* %pb, %struct.vorbis_enc_residue* %arrayidx70), !dbg !3800
  br label %for.inc71, !dbg !3800

for.inc71:                                        ; preds = %for.body68
  %66 = load i32, i32* %i, align 4, !dbg !3801
  %inc72 = add nsw i32 %66, 1, !dbg !3801
  store i32 %inc72, i32* %i, align 4, !dbg !3801
  br label %for.cond64, !dbg !3803, !llvm.loop !3804

for.end73:                                        ; preds = %for.cond64
  %67 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3806
  %nmappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %67, i32 0, i32 20, !dbg !3807
  %68 = load i32, i32* %nmappings, align 8, !dbg !3807
  %sub74 = sub nsw i32 %68, 1, !dbg !3808
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %sub74), !dbg !3809
  store i32 0, i32* %i, align 4, !dbg !3810
  br label %for.cond75, !dbg !3812

for.cond75:                                       ; preds = %for.inc146, %for.end73
  %69 = load i32, i32* %i, align 4, !dbg !3813
  %70 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3816
  %nmappings76 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %70, i32 0, i32 20, !dbg !3817
  %71 = load i32, i32* %nmappings76, align 8, !dbg !3817
  %cmp77 = icmp slt i32 %69, %71, !dbg !3818
  br i1 %cmp77, label %for.body79, label %for.end148, !dbg !3819

for.body79:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_mapping** %mc, metadata !3820, metadata !1998), !dbg !3822
  %72 = load i32, i32* %i, align 4, !dbg !3823
  %idxprom80 = sext i32 %72 to i64, !dbg !3824
  %73 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3824
  %mappings = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %73, i32 0, i32 21, !dbg !3825
  %74 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mappings, align 8, !dbg !3825
  %arrayidx81 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %74, i64 %idxprom80, !dbg !3824
  store %struct.vorbis_enc_mapping* %arrayidx81, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3822
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3826, metadata !1998), !dbg !3827
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 0), !dbg !3828
  %75 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3829
  %submaps = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %75, i32 0, i32 0, !dbg !3830
  %76 = load i32, i32* %submaps, align 8, !dbg !3830
  %cmp82 = icmp sgt i32 %76, 1, !dbg !3831
  %conv83 = zext i1 %cmp82 to i32, !dbg !3831
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %conv83), !dbg !3832
  %77 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3833
  %submaps84 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %77, i32 0, i32 0, !dbg !3835
  %78 = load i32, i32* %submaps84, align 8, !dbg !3835
  %cmp85 = icmp sgt i32 %78, 1, !dbg !3836
  br i1 %cmp85, label %if.then87, label %if.end90, !dbg !3837

if.then87:                                        ; preds = %for.body79
  %79 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3838
  %submaps88 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %79, i32 0, i32 0, !dbg !3839
  %80 = load i32, i32* %submaps88, align 8, !dbg !3839
  %sub89 = sub nsw i32 %80, 1, !dbg !3840
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %sub89), !dbg !3841
  br label %if.end90, !dbg !3841

if.end90:                                         ; preds = %if.then87, %for.body79
  %81 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3842
  %coupling_steps = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %81, i32 0, i32 4, !dbg !3843
  %82 = load i32, i32* %coupling_steps, align 8, !dbg !3843
  %tobool91 = icmp ne i32 %82, 0, !dbg !3844
  %lnot = xor i1 %tobool91, true, !dbg !3844
  %lnot92 = xor i1 %lnot, true, !dbg !3845
  %lnot.ext = zext i1 %lnot92 to i32, !dbg !3845
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !3846
  %83 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3847
  %coupling_steps93 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %83, i32 0, i32 4, !dbg !3849
  %84 = load i32, i32* %coupling_steps93, align 8, !dbg !3849
  %tobool94 = icmp ne i32 %84, 0, !dbg !3847
  br i1 %tobool94, label %if.then95, label %if.end118, !dbg !3850

if.then95:                                        ; preds = %if.end90
  %85 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3851
  %coupling_steps96 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %85, i32 0, i32 4, !dbg !3853
  %86 = load i32, i32* %coupling_steps96, align 8, !dbg !3853
  %sub97 = sub nsw i32 %86, 1, !dbg !3854
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %sub97), !dbg !3855
  store i32 0, i32* %j, align 4, !dbg !3856
  br label %for.cond98, !dbg !3858

for.cond98:                                       ; preds = %for.inc115, %if.then95
  %87 = load i32, i32* %j, align 4, !dbg !3859
  %88 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3862
  %coupling_steps99 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %88, i32 0, i32 4, !dbg !3863
  %89 = load i32, i32* %coupling_steps99, align 8, !dbg !3863
  %cmp100 = icmp slt i32 %87, %89, !dbg !3864
  br i1 %cmp100, label %for.body102, label %for.end117, !dbg !3865

for.body102:                                      ; preds = %for.cond98
  %90 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3866
  %channels103 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %90, i32 0, i32 0, !dbg !3868
  %91 = load i32, i32* %channels103, align 8, !dbg !3868
  %sub104 = sub nsw i32 %91, 1, !dbg !3869
  %mul = mul nsw i32 2, %sub104, !dbg !3870
  %or = or i32 %mul, 1, !dbg !3871
  %92 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !3872
  %sub105 = sub nsw i32 31, %92, !dbg !3873
  %93 = load i32, i32* %j, align 4, !dbg !3874
  %idxprom106 = sext i32 %93 to i64, !dbg !3875
  %94 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3875
  %magnitude = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %94, i32 0, i32 5, !dbg !3876
  %95 = load i32*, i32** %magnitude, align 8, !dbg !3876
  %arrayidx107 = getelementptr inbounds i32, i32* %95, i64 %idxprom106, !dbg !3875
  %96 = load i32, i32* %arrayidx107, align 4, !dbg !3875
  call void @put_bits(%struct.PutBitContext* %pb, i32 %sub105, i32 %96), !dbg !3877
  %97 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3879
  %channels108 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %97, i32 0, i32 0, !dbg !3880
  %98 = load i32, i32* %channels108, align 8, !dbg !3880
  %sub109 = sub nsw i32 %98, 1, !dbg !3881
  %mul110 = mul nsw i32 2, %sub109, !dbg !3882
  %or111 = or i32 %mul110, 1, !dbg !3883
  %99 = call i32 @llvm.ctlz.i32(i32 %or111, i1 true), !dbg !3884
  %sub112 = sub nsw i32 31, %99, !dbg !3885
  %100 = load i32, i32* %j, align 4, !dbg !3886
  %idxprom113 = sext i32 %100 to i64, !dbg !3887
  %101 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3887
  %angle = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %101, i32 0, i32 6, !dbg !3888
  %102 = load i32*, i32** %angle, align 8, !dbg !3888
  %arrayidx114 = getelementptr inbounds i32, i32* %102, i64 %idxprom113, !dbg !3887
  %103 = load i32, i32* %arrayidx114, align 4, !dbg !3887
  call void @put_bits(%struct.PutBitContext* %pb, i32 %sub112, i32 %103), !dbg !3889
  br label %for.inc115, !dbg !3890

for.inc115:                                       ; preds = %for.body102
  %104 = load i32, i32* %j, align 4, !dbg !3891
  %inc116 = add nsw i32 %104, 1, !dbg !3891
  store i32 %inc116, i32* %j, align 4, !dbg !3891
  br label %for.cond98, !dbg !3893, !llvm.loop !3894

for.end117:                                       ; preds = %for.cond98
  br label %if.end118, !dbg !3896

if.end118:                                        ; preds = %for.end117, %if.end90
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 0), !dbg !3897
  %105 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3898
  %submaps119 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %105, i32 0, i32 0, !dbg !3900
  %106 = load i32, i32* %submaps119, align 8, !dbg !3900
  %cmp120 = icmp sgt i32 %106, 1, !dbg !3901
  br i1 %cmp120, label %if.then122, label %if.end133, !dbg !3902

if.then122:                                       ; preds = %if.end118
  store i32 0, i32* %j, align 4, !dbg !3903
  br label %for.cond123, !dbg !3905

for.cond123:                                      ; preds = %for.inc130, %if.then122
  %107 = load i32, i32* %j, align 4, !dbg !3906
  %108 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3909
  %channels124 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %108, i32 0, i32 0, !dbg !3910
  %109 = load i32, i32* %channels124, align 8, !dbg !3910
  %cmp125 = icmp slt i32 %107, %109, !dbg !3911
  br i1 %cmp125, label %for.body127, label %for.end132, !dbg !3912

for.body127:                                      ; preds = %for.cond123
  %110 = load i32, i32* %j, align 4, !dbg !3913
  %idxprom128 = sext i32 %110 to i64, !dbg !3914
  %111 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3914
  %mux = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %111, i32 0, i32 1, !dbg !3915
  %112 = load i32*, i32** %mux, align 8, !dbg !3915
  %arrayidx129 = getelementptr inbounds i32, i32* %112, i64 %idxprom128, !dbg !3914
  %113 = load i32, i32* %arrayidx129, align 4, !dbg !3914
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %113), !dbg !3916
  br label %for.inc130, !dbg !3916

for.inc130:                                       ; preds = %for.body127
  %114 = load i32, i32* %j, align 4, !dbg !3917
  %inc131 = add nsw i32 %114, 1, !dbg !3917
  store i32 %inc131, i32* %j, align 4, !dbg !3917
  br label %for.cond123, !dbg !3919, !llvm.loop !3920

for.end132:                                       ; preds = %for.cond123
  br label %if.end133, !dbg !3922

if.end133:                                        ; preds = %for.end132, %if.end118
  store i32 0, i32* %j, align 4, !dbg !3924
  br label %for.cond134, !dbg !3926

for.cond134:                                      ; preds = %for.inc143, %if.end133
  %115 = load i32, i32* %j, align 4, !dbg !3927
  %116 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3930
  %submaps135 = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %116, i32 0, i32 0, !dbg !3931
  %117 = load i32, i32* %submaps135, align 8, !dbg !3931
  %cmp136 = icmp slt i32 %115, %117, !dbg !3932
  br i1 %cmp136, label %for.body138, label %for.end145, !dbg !3933

for.body138:                                      ; preds = %for.cond134
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 0), !dbg !3934
  %118 = load i32, i32* %j, align 4, !dbg !3936
  %idxprom139 = sext i32 %118 to i64, !dbg !3937
  %119 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3937
  %floor = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %119, i32 0, i32 2, !dbg !3938
  %120 = load i32*, i32** %floor, align 8, !dbg !3938
  %arrayidx140 = getelementptr inbounds i32, i32* %120, i64 %idxprom139, !dbg !3937
  %121 = load i32, i32* %arrayidx140, align 4, !dbg !3937
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %121), !dbg !3939
  %122 = load i32, i32* %j, align 4, !dbg !3940
  %idxprom141 = sext i32 %122 to i64, !dbg !3941
  %123 = load %struct.vorbis_enc_mapping*, %struct.vorbis_enc_mapping** %mc, align 8, !dbg !3941
  %residue = getelementptr inbounds %struct.vorbis_enc_mapping, %struct.vorbis_enc_mapping* %123, i32 0, i32 3, !dbg !3942
  %124 = load i32*, i32** %residue, align 8, !dbg !3942
  %arrayidx142 = getelementptr inbounds i32, i32* %124, i64 %idxprom141, !dbg !3941
  %125 = load i32, i32* %arrayidx142, align 4, !dbg !3941
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %125), !dbg !3943
  br label %for.inc143, !dbg !3944

for.inc143:                                       ; preds = %for.body138
  %126 = load i32, i32* %j, align 4, !dbg !3945
  %inc144 = add nsw i32 %126, 1, !dbg !3945
  store i32 %inc144, i32* %j, align 4, !dbg !3945
  br label %for.cond134, !dbg !3947, !llvm.loop !3948

for.end145:                                       ; preds = %for.cond134
  br label %for.inc146, !dbg !3950

for.inc146:                                       ; preds = %for.end145
  %127 = load i32, i32* %i, align 4, !dbg !3951
  %inc147 = add nsw i32 %127, 1, !dbg !3951
  store i32 %inc147, i32* %i, align 4, !dbg !3951
  br label %for.cond75, !dbg !3953, !llvm.loop !3954

for.end148:                                       ; preds = %for.cond75
  %128 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3956
  %nmodes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %128, i32 0, i32 22, !dbg !3957
  %129 = load i32, i32* %nmodes, align 8, !dbg !3957
  %sub149 = sub nsw i32 %129, 1, !dbg !3958
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %sub149), !dbg !3959
  store i32 0, i32* %i, align 4, !dbg !3960
  br label %for.cond150, !dbg !3962

for.cond150:                                      ; preds = %for.inc160, %for.end148
  %130 = load i32, i32* %i, align 4, !dbg !3963
  %131 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3966
  %nmodes151 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %131, i32 0, i32 22, !dbg !3967
  %132 = load i32, i32* %nmodes151, align 8, !dbg !3967
  %cmp152 = icmp slt i32 %130, %132, !dbg !3968
  br i1 %cmp152, label %for.body154, label %for.end162, !dbg !3969

for.body154:                                      ; preds = %for.cond150
  %133 = load i32, i32* %i, align 4, !dbg !3970
  %idxprom155 = sext i32 %133 to i64, !dbg !3972
  %134 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3972
  %modes = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %134, i32 0, i32 23, !dbg !3973
  %135 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes, align 8, !dbg !3973
  %arrayidx156 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %135, i64 %idxprom155, !dbg !3972
  %blockflag = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %arrayidx156, i32 0, i32 0, !dbg !3974
  %136 = load i32, i32* %blockflag, align 4, !dbg !3974
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %136), !dbg !3975
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 0), !dbg !3976
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 0), !dbg !3977
  %137 = load i32, i32* %i, align 4, !dbg !3978
  %idxprom157 = sext i32 %137 to i64, !dbg !3979
  %138 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !3979
  %modes158 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %138, i32 0, i32 23, !dbg !3980
  %139 = load %struct.vorbis_enc_mode*, %struct.vorbis_enc_mode** %modes158, align 8, !dbg !3980
  %arrayidx159 = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %139, i64 %idxprom157, !dbg !3979
  %mapping = getelementptr inbounds %struct.vorbis_enc_mode, %struct.vorbis_enc_mode* %arrayidx159, i32 0, i32 1, !dbg !3981
  %140 = load i32, i32* %mapping, align 4, !dbg !3981
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %140), !dbg !3982
  br label %for.inc160, !dbg !3983

for.inc160:                                       ; preds = %for.body154
  %141 = load i32, i32* %i, align 4, !dbg !3984
  %inc161 = add nsw i32 %141, 1, !dbg !3984
  store i32 %inc161, i32* %i, align 4, !dbg !3984
  br label %for.cond150, !dbg !3986, !llvm.loop !3987

for.end162:                                       ; preds = %for.cond150
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 1), !dbg !3989
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !3990
  %call163 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !3991
  %shr164 = ashr i32 %call163, 3, !dbg !3992
  %arrayidx165 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 2, !dbg !3993
  store i32 %shr164, i32* %arrayidx165, align 4, !dbg !3994
  %arrayidx166 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 0, !dbg !3995
  %142 = load i32, i32* %arrayidx166, align 4, !dbg !3995
  %arrayidx167 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 1, !dbg !3996
  %143 = load i32, i32* %arrayidx167, align 4, !dbg !3996
  %add = add nsw i32 %142, %143, !dbg !3997
  %arrayidx168 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 2, !dbg !3998
  %144 = load i32, i32* %arrayidx168, align 4, !dbg !3998
  %add169 = add nsw i32 %add, %144, !dbg !3999
  store i32 %add169, i32* %len, align 4, !dbg !4000
  %145 = load i32, i32* %len, align 4, !dbg !4001
  %add170 = add nsw i32 64, %145, !dbg !4002
  %146 = load i32, i32* %len, align 4, !dbg !4003
  %div = sdiv i32 %146, 255, !dbg !4004
  %add171 = add nsw i32 %add170, %div, !dbg !4005
  %conv172 = sext i32 %add171 to i64, !dbg !4006
  %call173 = call noalias i8* @av_mallocz(i64 %conv172), !dbg !4007
  %147 = load i8**, i8*** %out.addr, align 8, !dbg !4008
  store i8* %call173, i8** %147, align 8, !dbg !4009
  store i8* %call173, i8** %p, align 8, !dbg !4010
  %148 = load i8*, i8** %p, align 8, !dbg !4011
  %tobool174 = icmp ne i8* %148, null, !dbg !4011
  br i1 %tobool174, label %if.end176, label %if.then175, !dbg !4013

if.then175:                                       ; preds = %for.end162
  store i32 -12, i32* %retval, align 4, !dbg !4014
  br label %return, !dbg !4014

if.end176:                                        ; preds = %for.end162
  %149 = load i8*, i8** %p, align 8, !dbg !4015
  %incdec.ptr = getelementptr inbounds i8, i8* %149, i32 1, !dbg !4015
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !4015
  store i8 2, i8* %149, align 1, !dbg !4016
  %150 = load i8*, i8** %p, align 8, !dbg !4017
  %arrayidx177 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 0, !dbg !4018
  %151 = load i32, i32* %arrayidx177, align 4, !dbg !4018
  %call178 = call i32 @av_xiphlacing(i8* %150, i32 %151), !dbg !4019
  %152 = load i8*, i8** %p, align 8, !dbg !4020
  %idx.ext179 = zext i32 %call178 to i64, !dbg !4020
  %add.ptr180 = getelementptr inbounds i8, i8* %152, i64 %idx.ext179, !dbg !4020
  store i8* %add.ptr180, i8** %p, align 8, !dbg !4020
  %153 = load i8*, i8** %p, align 8, !dbg !4021
  %arrayidx181 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 1, !dbg !4022
  %154 = load i32, i32* %arrayidx181, align 4, !dbg !4022
  %call182 = call i32 @av_xiphlacing(i8* %153, i32 %154), !dbg !4023
  %155 = load i8*, i8** %p, align 8, !dbg !4024
  %idx.ext183 = zext i32 %call182 to i64, !dbg !4024
  %add.ptr184 = getelementptr inbounds i8, i8* %155, i64 %idx.ext183, !dbg !4024
  store i8* %add.ptr184, i8** %p, align 8, !dbg !4024
  store i32 0, i32* %buffer_len, align 4, !dbg !4025
  store i32 0, i32* %i, align 4, !dbg !4026
  br label %for.cond185, !dbg !4028

for.cond185:                                      ; preds = %for.inc201, %if.end176
  %156 = load i32, i32* %i, align 4, !dbg !4029
  %cmp186 = icmp slt i32 %156, 3, !dbg !4032
  br i1 %cmp186, label %for.body188, label %for.end203, !dbg !4033

for.body188:                                      ; preds = %for.cond185
  %157 = load i8*, i8** %p, align 8, !dbg !4034
  %158 = load i8*, i8** %buffer, align 8, !dbg !4036
  %159 = load i32, i32* %buffer_len, align 4, !dbg !4037
  %idx.ext189 = sext i32 %159 to i64, !dbg !4038
  %add.ptr190 = getelementptr inbounds i8, i8* %158, i64 %idx.ext189, !dbg !4038
  %160 = load i32, i32* %i, align 4, !dbg !4039
  %idxprom191 = sext i32 %160 to i64, !dbg !4040
  %arrayidx192 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 %idxprom191, !dbg !4040
  %161 = load i32, i32* %arrayidx192, align 4, !dbg !4040
  %conv193 = sext i32 %161 to i64, !dbg !4040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %add.ptr190, i64 %conv193, i32 1, i1 false), !dbg !4041
  %162 = load i32, i32* %i, align 4, !dbg !4042
  %idxprom194 = sext i32 %162 to i64, !dbg !4043
  %arrayidx195 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 %idxprom194, !dbg !4043
  %163 = load i32, i32* %arrayidx195, align 4, !dbg !4043
  %164 = load i8*, i8** %p, align 8, !dbg !4044
  %idx.ext196 = sext i32 %163 to i64, !dbg !4044
  %add.ptr197 = getelementptr inbounds i8, i8* %164, i64 %idx.ext196, !dbg !4044
  store i8* %add.ptr197, i8** %p, align 8, !dbg !4044
  %165 = load i32, i32* %i, align 4, !dbg !4045
  %idxprom198 = sext i32 %165 to i64, !dbg !4046
  %arrayidx199 = getelementptr inbounds [3 x i32], [3 x i32]* %hlens, i64 0, i64 %idxprom198, !dbg !4046
  %166 = load i32, i32* %arrayidx199, align 4, !dbg !4046
  %167 = load i32, i32* %buffer_len, align 4, !dbg !4047
  %add200 = add nsw i32 %167, %166, !dbg !4047
  store i32 %add200, i32* %buffer_len, align 4, !dbg !4047
  br label %for.inc201, !dbg !4048

for.inc201:                                       ; preds = %for.body188
  %168 = load i32, i32* %i, align 4, !dbg !4049
  %inc202 = add nsw i32 %168, 1, !dbg !4049
  store i32 %inc202, i32* %i, align 4, !dbg !4049
  br label %for.cond185, !dbg !4051, !llvm.loop !4052

for.end203:                                       ; preds = %for.cond185
  %169 = bitcast i8** %buffer to i8*, !dbg !4054
  call void @av_freep(i8* %169), !dbg !4055
  %170 = load i8*, i8** %p, align 8, !dbg !4056
  %171 = load i8**, i8*** %out.addr, align 8, !dbg !4057
  %172 = load i8*, i8** %171, align 8, !dbg !4058
  %sub.ptr.lhs.cast = ptrtoint i8* %170 to i64, !dbg !4059
  %sub.ptr.rhs.cast = ptrtoint i8* %172 to i64, !dbg !4059
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4059
  %conv204 = trunc i64 %sub.ptr.sub to i32, !dbg !4056
  store i32 %conv204, i32* %retval, align 4, !dbg !4060
  br label %return, !dbg !4060

return:                                           ; preds = %for.end203, %if.then175, %if.then
  %173 = load i32, i32* %retval, align 4, !dbg !4061
  ret i32 %173, !dbg !4061
}

declare void @ff_af_queue_init(%struct.AVCodecContext*, %struct.AudioFrameQueue*) #3

declare noalias i8* @av_malloc(i64) #3

declare i8* @av_malloc_array(i64, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @cb_lookup_vals(i32 %lookup, i32 %dimensions, i32 %entries) #1 !dbg !4062 {
entry:
  %retval = alloca i32, align 4
  %lookup.addr = alloca i32, align 4
  %dimensions.addr = alloca i32, align 4
  %entries.addr = alloca i32, align 4
  store i32 %lookup, i32* %lookup.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lookup.addr, metadata !4065, metadata !1998), !dbg !4066
  store i32 %dimensions, i32* %dimensions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dimensions.addr, metadata !4067, metadata !1998), !dbg !4068
  store i32 %entries, i32* %entries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entries.addr, metadata !4069, metadata !1998), !dbg !4070
  %0 = load i32, i32* %lookup.addr, align 4, !dbg !4071
  %cmp = icmp eq i32 %0, 1, !dbg !4073
  br i1 %cmp, label %if.then, label %if.else, !dbg !4074

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %entries.addr, align 4, !dbg !4075
  %2 = load i32, i32* %dimensions.addr, align 4, !dbg !4076
  %call = call i32 @ff_vorbis_nth_root(i32 %1, i32 %2), !dbg !4077
  store i32 %call, i32* %retval, align 4, !dbg !4078
  br label %return, !dbg !4078

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %lookup.addr, align 4, !dbg !4079
  %cmp1 = icmp eq i32 %3, 2, !dbg !4081
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4082

if.then2:                                         ; preds = %if.else
  %4 = load i32, i32* %dimensions.addr, align 4, !dbg !4083
  %5 = load i32, i32* %entries.addr, align 4, !dbg !4084
  %mul = mul nsw i32 %4, %5, !dbg !4085
  store i32 %mul, i32* %retval, align 4, !dbg !4086
  br label %return, !dbg !4086

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4087
  br label %return, !dbg !4087

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !4088
  ret i32 %6, !dbg !4088
}

; Function Attrs: nounwind uwtable
define internal i32 @ready_codebook(%struct.vorbis_enc_codebook* %cb) #1 !dbg !4089 {
entry:
  %retval = alloca i32, align 4
  %cb.addr = alloca %struct.vorbis_enc_codebook*, align 8
  %i = alloca i32, align 4
  %vals = alloca i32, align 4
  %last = alloca float, align 4
  %j = alloca i32, align 4
  %div = alloca i32, align 4
  %off = alloca i32, align 4
  store %struct.vorbis_enc_codebook* %cb, %struct.vorbis_enc_codebook** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %cb.addr, metadata !4092, metadata !1998), !dbg !4093
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4094, metadata !1998), !dbg !4095
  %0 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4096
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %0, i32 0, i32 1, !dbg !4097
  %1 = load i8*, i8** %lens, align 8, !dbg !4097
  %2 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4098
  %codewords = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %2, i32 0, i32 2, !dbg !4099
  %3 = load i32*, i32** %codewords, align 8, !dbg !4099
  %4 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4100
  %nentries = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %4, i32 0, i32 0, !dbg !4101
  %5 = load i32, i32* %nentries, align 8, !dbg !4101
  %call = call i32 @ff_vorbis_len2vlc(i8* %1, i32* %3, i32 %5), !dbg !4102
  %6 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4103
  %lookup = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %6, i32 0, i32 7, !dbg !4105
  %7 = load i32, i32* %lookup, align 8, !dbg !4105
  %tobool = icmp ne i32 %7, 0, !dbg !4103
  br i1 %tobool, label %if.else, label %if.then, !dbg !4106

if.then:                                          ; preds = %entry
  %8 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4107
  %dimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %8, i32 0, i32 9, !dbg !4109
  store float* null, float** %dimensions, align 8, !dbg !4110
  %9 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4111
  %pow2 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %9, i32 0, i32 10, !dbg !4112
  store float* null, float** %pow2, align 8, !dbg !4113
  br label %if.end80, !dbg !4114

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %vals, metadata !4115, metadata !1998), !dbg !4117
  %10 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4118
  %lookup1 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %10, i32 0, i32 7, !dbg !4119
  %11 = load i32, i32* %lookup1, align 8, !dbg !4119
  %12 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4120
  %ndimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %12, i32 0, i32 3, !dbg !4121
  %13 = load i32, i32* %ndimensions, align 8, !dbg !4121
  %14 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4122
  %nentries2 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %14, i32 0, i32 0, !dbg !4123
  %15 = load i32, i32* %nentries2, align 8, !dbg !4123
  %call3 = call i32 @cb_lookup_vals(i32 %11, i32 %13, i32 %15), !dbg !4124
  store i32 %call3, i32* %vals, align 4, !dbg !4117
  %16 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4125
  %nentries4 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %16, i32 0, i32 0, !dbg !4126
  %17 = load i32, i32* %nentries4, align 8, !dbg !4126
  %conv = sext i32 %17 to i64, !dbg !4125
  %18 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4127
  %ndimensions5 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %18, i32 0, i32 3, !dbg !4128
  %19 = load i32, i32* %ndimensions5, align 8, !dbg !4128
  %conv6 = sext i32 %19 to i64, !dbg !4127
  %mul = mul i64 4, %conv6, !dbg !4129
  %call7 = call i8* @av_malloc_array(i64 %conv, i64 %mul), !dbg !4130
  %20 = bitcast i8* %call7 to float*, !dbg !4130
  %21 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4131
  %dimensions8 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %21, i32 0, i32 9, !dbg !4132
  store float* %20, float** %dimensions8, align 8, !dbg !4133
  %22 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4134
  %nentries9 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %22, i32 0, i32 0, !dbg !4135
  %23 = load i32, i32* %nentries9, align 8, !dbg !4135
  %conv10 = sext i32 %23 to i64, !dbg !4134
  %call11 = call i8* @av_mallocz_array(i64 %conv10, i64 4), !dbg !4136
  %24 = bitcast i8* %call11 to float*, !dbg !4136
  %25 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4137
  %pow212 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %25, i32 0, i32 10, !dbg !4138
  store float* %24, float** %pow212, align 8, !dbg !4139
  %26 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4140
  %dimensions13 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %26, i32 0, i32 9, !dbg !4142
  %27 = load float*, float** %dimensions13, align 8, !dbg !4142
  %tobool14 = icmp ne float* %27, null, !dbg !4140
  br i1 %tobool14, label %lor.lhs.false, label %if.then17, !dbg !4143

lor.lhs.false:                                    ; preds = %if.else
  %28 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4144
  %pow215 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %28, i32 0, i32 10, !dbg !4146
  %29 = load float*, float** %pow215, align 8, !dbg !4146
  %tobool16 = icmp ne float* %29, null, !dbg !4144
  br i1 %tobool16, label %if.end, label %if.then17, !dbg !4147

if.then17:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -12, i32* %retval, align 4, !dbg !4148
  br label %return, !dbg !4148

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !4149
  br label %for.cond, !dbg !4151

for.cond:                                         ; preds = %for.inc77, %if.end
  %30 = load i32, i32* %i, align 4, !dbg !4152
  %31 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4155
  %nentries18 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %31, i32 0, i32 0, !dbg !4156
  %32 = load i32, i32* %nentries18, align 8, !dbg !4156
  %cmp = icmp slt i32 %30, %32, !dbg !4157
  br i1 %cmp, label %for.body, label %for.end79, !dbg !4158

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %last, metadata !4159, metadata !1998), !dbg !4161
  store float 0.000000e+00, float* %last, align 4, !dbg !4161
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4162, metadata !1998), !dbg !4163
  call void @llvm.dbg.declare(metadata i32* %div, metadata !4164, metadata !1998), !dbg !4165
  store i32 1, i32* %div, align 4, !dbg !4165
  store i32 0, i32* %j, align 4, !dbg !4166
  br label %for.cond20, !dbg !4168

for.cond20:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %j, align 4, !dbg !4169
  %34 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4172
  %ndimensions21 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %34, i32 0, i32 3, !dbg !4173
  %35 = load i32, i32* %ndimensions21, align 8, !dbg !4173
  %cmp22 = icmp slt i32 %33, %35, !dbg !4174
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !4175

for.body24:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata i32* %off, metadata !4176, metadata !1998), !dbg !4178
  %36 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4179
  %lookup25 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %36, i32 0, i32 7, !dbg !4181
  %37 = load i32, i32* %lookup25, align 8, !dbg !4181
  %cmp26 = icmp eq i32 %37, 1, !dbg !4182
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !4183

if.then28:                                        ; preds = %for.body24
  %38 = load i32, i32* %i, align 4, !dbg !4184
  %39 = load i32, i32* %div, align 4, !dbg !4185
  %div29 = sdiv i32 %38, %39, !dbg !4186
  %40 = load i32, i32* %vals, align 4, !dbg !4187
  %rem = srem i32 %div29, %40, !dbg !4188
  store i32 %rem, i32* %off, align 4, !dbg !4189
  br label %if.end33, !dbg !4190

if.else30:                                        ; preds = %for.body24
  %41 = load i32, i32* %i, align 4, !dbg !4191
  %42 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4192
  %ndimensions31 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %42, i32 0, i32 3, !dbg !4193
  %43 = load i32, i32* %ndimensions31, align 8, !dbg !4193
  %mul32 = mul nsw i32 %41, %43, !dbg !4194
  %44 = load i32, i32* %j, align 4, !dbg !4195
  %add = add nsw i32 %mul32, %44, !dbg !4196
  store i32 %add, i32* %off, align 4, !dbg !4197
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then28
  %45 = load float, float* %last, align 4, !dbg !4198
  %46 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4199
  %min = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %46, i32 0, i32 4, !dbg !4200
  %47 = load float, float* %min, align 4, !dbg !4200
  %add34 = fadd float %45, %47, !dbg !4201
  %48 = load i32, i32* %off, align 4, !dbg !4202
  %idxprom = sext i32 %48 to i64, !dbg !4203
  %49 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4203
  %quantlist = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %49, i32 0, i32 8, !dbg !4204
  %50 = load i32*, i32** %quantlist, align 8, !dbg !4204
  %arrayidx = getelementptr inbounds i32, i32* %50, i64 %idxprom, !dbg !4203
  %51 = load i32, i32* %arrayidx, align 4, !dbg !4203
  %conv35 = sitofp i32 %51 to float, !dbg !4203
  %52 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4205
  %delta = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %52, i32 0, i32 5, !dbg !4206
  %53 = load float, float* %delta, align 8, !dbg !4206
  %mul36 = fmul float %conv35, %53, !dbg !4207
  %add37 = fadd float %add34, %mul36, !dbg !4208
  %54 = load i32, i32* %i, align 4, !dbg !4209
  %55 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4210
  %ndimensions38 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %55, i32 0, i32 3, !dbg !4211
  %56 = load i32, i32* %ndimensions38, align 8, !dbg !4211
  %mul39 = mul nsw i32 %54, %56, !dbg !4212
  %57 = load i32, i32* %j, align 4, !dbg !4213
  %add40 = add nsw i32 %mul39, %57, !dbg !4214
  %idxprom41 = sext i32 %add40 to i64, !dbg !4215
  %58 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4215
  %dimensions42 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %58, i32 0, i32 9, !dbg !4216
  %59 = load float*, float** %dimensions42, align 8, !dbg !4216
  %arrayidx43 = getelementptr inbounds float, float* %59, i64 %idxprom41, !dbg !4215
  store float %add37, float* %arrayidx43, align 4, !dbg !4217
  %60 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4218
  %seq_p = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %60, i32 0, i32 6, !dbg !4220
  %61 = load i32, i32* %seq_p, align 4, !dbg !4220
  %tobool44 = icmp ne i32 %61, 0, !dbg !4218
  br i1 %tobool44, label %if.then45, label %if.end52, !dbg !4221

if.then45:                                        ; preds = %if.end33
  %62 = load i32, i32* %i, align 4, !dbg !4222
  %63 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4223
  %ndimensions46 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %63, i32 0, i32 3, !dbg !4224
  %64 = load i32, i32* %ndimensions46, align 8, !dbg !4224
  %mul47 = mul nsw i32 %62, %64, !dbg !4225
  %65 = load i32, i32* %j, align 4, !dbg !4226
  %add48 = add nsw i32 %mul47, %65, !dbg !4227
  %idxprom49 = sext i32 %add48 to i64, !dbg !4228
  %66 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4228
  %dimensions50 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %66, i32 0, i32 9, !dbg !4229
  %67 = load float*, float** %dimensions50, align 8, !dbg !4229
  %arrayidx51 = getelementptr inbounds float, float* %67, i64 %idxprom49, !dbg !4228
  %68 = load float, float* %arrayidx51, align 4, !dbg !4228
  store float %68, float* %last, align 4, !dbg !4230
  br label %if.end52, !dbg !4231

if.end52:                                         ; preds = %if.then45, %if.end33
  %69 = load i32, i32* %i, align 4, !dbg !4232
  %70 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4233
  %ndimensions53 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %70, i32 0, i32 3, !dbg !4234
  %71 = load i32, i32* %ndimensions53, align 8, !dbg !4234
  %mul54 = mul nsw i32 %69, %71, !dbg !4235
  %72 = load i32, i32* %j, align 4, !dbg !4236
  %add55 = add nsw i32 %mul54, %72, !dbg !4237
  %idxprom56 = sext i32 %add55 to i64, !dbg !4238
  %73 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4238
  %dimensions57 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %73, i32 0, i32 9, !dbg !4239
  %74 = load float*, float** %dimensions57, align 8, !dbg !4239
  %arrayidx58 = getelementptr inbounds float, float* %74, i64 %idxprom56, !dbg !4238
  %75 = load float, float* %arrayidx58, align 4, !dbg !4238
  %76 = load i32, i32* %i, align 4, !dbg !4240
  %77 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4241
  %ndimensions59 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %77, i32 0, i32 3, !dbg !4242
  %78 = load i32, i32* %ndimensions59, align 8, !dbg !4242
  %mul60 = mul nsw i32 %76, %78, !dbg !4243
  %79 = load i32, i32* %j, align 4, !dbg !4244
  %add61 = add nsw i32 %mul60, %79, !dbg !4245
  %idxprom62 = sext i32 %add61 to i64, !dbg !4246
  %80 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4246
  %dimensions63 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %80, i32 0, i32 9, !dbg !4247
  %81 = load float*, float** %dimensions63, align 8, !dbg !4247
  %arrayidx64 = getelementptr inbounds float, float* %81, i64 %idxprom62, !dbg !4246
  %82 = load float, float* %arrayidx64, align 4, !dbg !4246
  %mul65 = fmul float %75, %82, !dbg !4248
  %83 = load i32, i32* %i, align 4, !dbg !4249
  %idxprom66 = sext i32 %83 to i64, !dbg !4250
  %84 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4250
  %pow267 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %84, i32 0, i32 10, !dbg !4251
  %85 = load float*, float** %pow267, align 8, !dbg !4251
  %arrayidx68 = getelementptr inbounds float, float* %85, i64 %idxprom66, !dbg !4250
  %86 = load float, float* %arrayidx68, align 4, !dbg !4252
  %add69 = fadd float %86, %mul65, !dbg !4252
  store float %add69, float* %arrayidx68, align 4, !dbg !4252
  %87 = load i32, i32* %vals, align 4, !dbg !4253
  %88 = load i32, i32* %div, align 4, !dbg !4254
  %mul70 = mul nsw i32 %88, %87, !dbg !4254
  store i32 %mul70, i32* %div, align 4, !dbg !4254
  br label %for.inc, !dbg !4255

for.inc:                                          ; preds = %if.end52
  %89 = load i32, i32* %j, align 4, !dbg !4256
  %inc = add nsw i32 %89, 1, !dbg !4256
  store i32 %inc, i32* %j, align 4, !dbg !4256
  br label %for.cond20, !dbg !4258, !llvm.loop !4259

for.end:                                          ; preds = %for.cond20
  %90 = load i32, i32* %i, align 4, !dbg !4261
  %idxprom71 = sext i32 %90 to i64, !dbg !4262
  %91 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4262
  %pow272 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %91, i32 0, i32 10, !dbg !4263
  %92 = load float*, float** %pow272, align 8, !dbg !4263
  %arrayidx73 = getelementptr inbounds float, float* %92, i64 %idxprom71, !dbg !4262
  %93 = load float, float* %arrayidx73, align 4, !dbg !4264
  %conv74 = fpext float %93 to double, !dbg !4264
  %div75 = fdiv double %conv74, 2.000000e+00, !dbg !4264
  %conv76 = fptrunc double %div75 to float, !dbg !4264
  store float %conv76, float* %arrayidx73, align 4, !dbg !4264
  br label %for.inc77, !dbg !4265

for.inc77:                                        ; preds = %for.end
  %94 = load i32, i32* %i, align 4, !dbg !4266
  %inc78 = add nsw i32 %94, 1, !dbg !4266
  store i32 %inc78, i32* %i, align 4, !dbg !4266
  br label %for.cond, !dbg !4268, !llvm.loop !4269

for.end79:                                        ; preds = %for.cond
  br label %if.end80

if.end80:                                         ; preds = %for.end79, %if.then
  store i32 0, i32* %retval, align 4, !dbg !4271
  br label %return, !dbg !4271

return:                                           ; preds = %if.end80, %if.then17
  %95 = load i32, i32* %retval, align 4, !dbg !4272
  ret i32 %95, !dbg !4272
}

declare i32 @ff_vorbis_ready_floor1_list(%struct.AVCodecContext*, %struct.vorbis_floor1_entry*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @ready_residue(%struct.vorbis_enc_residue* %rc, %struct.vorbis_enc_context* %venc) #1 !dbg !4273 {
entry:
  %retval = alloca i32, align 4
  %rc.addr = alloca %struct.vorbis_enc_residue*, align 8
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cb = alloca %struct.vorbis_enc_codebook*, align 8
  %a = alloca float, align 4
  store %struct.vorbis_enc_residue* %rc, %struct.vorbis_enc_residue** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_residue** %rc.addr, metadata !4276, metadata !1998), !dbg !4277
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !4278, metadata !1998), !dbg !4279
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4280, metadata !1998), !dbg !4281
  br label %do.body, !dbg !4282, !llvm.loop !4283

do.body:                                          ; preds = %entry
  %0 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4284
  %type = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %0, i32 0, i32 0, !dbg !4288
  %1 = load i32, i32* %type, align 8, !dbg !4288
  %cmp = icmp eq i32 %1, 2, !dbg !4289
  br i1 %cmp, label %if.end, label %if.then, !dbg !4290

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 213), !dbg !4291
  call void @abort() #9, !dbg !4294
  unreachable, !dbg !4296

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !4297

do.end:                                           ; preds = %if.end
  %2 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4299
  %classifications = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %2, i32 0, i32 4, !dbg !4300
  %3 = load i32, i32* %classifications, align 8, !dbg !4300
  %conv = sext i32 %3 to i64, !dbg !4299
  %call = call i8* @av_mallocz_array(i64 %conv, i64 8), !dbg !4301
  %4 = bitcast i8* %call to [2 x float]*, !dbg !4301
  %5 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4302
  %maxes = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %5, i32 0, i32 7, !dbg !4303
  store [2 x float]* %4, [2 x float]** %maxes, align 8, !dbg !4304
  %6 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4305
  %maxes1 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %6, i32 0, i32 7, !dbg !4307
  %7 = load [2 x float]*, [2 x float]** %maxes1, align 8, !dbg !4307
  %tobool = icmp ne [2 x float]* %7, null, !dbg !4305
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !4308

if.then2:                                         ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !4309
  br label %return, !dbg !4309

if.end3:                                          ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !4310
  br label %for.cond, !dbg !4312

for.cond:                                         ; preds = %for.inc85, %if.end3
  %8 = load i32, i32* %i, align 4, !dbg !4313
  %9 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4316
  %classifications4 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %9, i32 0, i32 4, !dbg !4317
  %10 = load i32, i32* %classifications4, align 8, !dbg !4317
  %cmp5 = icmp slt i32 %8, %10, !dbg !4318
  br i1 %cmp5, label %for.body, label %for.end87, !dbg !4319

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4320, metadata !1998), !dbg !4322
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %cb, metadata !4323, metadata !1998), !dbg !4324
  store i32 0, i32* %j, align 4, !dbg !4325
  br label %for.cond7, !dbg !4327

for.cond7:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %j, align 4, !dbg !4328
  %cmp8 = icmp slt i32 %11, 8, !dbg !4331
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !4332

for.body10:                                       ; preds = %for.cond7
  %12 = load i32, i32* %j, align 4, !dbg !4333
  %idxprom = sext i32 %12 to i64, !dbg !4335
  %13 = load i32, i32* %i, align 4, !dbg !4336
  %idxprom11 = sext i32 %13 to i64, !dbg !4335
  %14 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4335
  %books = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %14, i32 0, i32 6, !dbg !4337
  %15 = load [8 x i8]*, [8 x i8]** %books, align 8, !dbg !4337
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %15, i64 %idxprom11, !dbg !4335
  %arrayidx12 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !4335
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !4335
  %conv13 = sext i8 %16 to i32, !dbg !4335
  %cmp14 = icmp ne i32 %conv13, -1, !dbg !4338
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !4339

if.then16:                                        ; preds = %for.body10
  br label %for.end, !dbg !4340

if.end17:                                         ; preds = %for.body10
  br label %for.inc, !dbg !4341

for.inc:                                          ; preds = %if.end17
  %17 = load i32, i32* %j, align 4, !dbg !4343
  %inc = add nsw i32 %17, 1, !dbg !4343
  store i32 %inc, i32* %j, align 4, !dbg !4343
  br label %for.cond7, !dbg !4345, !llvm.loop !4346

for.end:                                          ; preds = %if.then16, %for.cond7
  %18 = load i32, i32* %j, align 4, !dbg !4348
  %cmp18 = icmp eq i32 %18, 8, !dbg !4350
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !4351

if.then20:                                        ; preds = %for.end
  br label %for.inc85, !dbg !4352

if.end21:                                         ; preds = %for.end
  %19 = load i32, i32* %j, align 4, !dbg !4353
  %idxprom22 = sext i32 %19 to i64, !dbg !4354
  %20 = load i32, i32* %i, align 4, !dbg !4355
  %idxprom23 = sext i32 %20 to i64, !dbg !4354
  %21 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4354
  %books24 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %21, i32 0, i32 6, !dbg !4356
  %22 = load [8 x i8]*, [8 x i8]** %books24, align 8, !dbg !4356
  %arrayidx25 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 %idxprom23, !dbg !4354
  %arrayidx26 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx25, i64 0, i64 %idxprom22, !dbg !4354
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !4354
  %idxprom27 = sext i8 %23 to i64, !dbg !4357
  %24 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4357
  %codebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %24, i32 0, i32 15, !dbg !4358
  %25 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks, align 8, !dbg !4358
  %arrayidx28 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %25, i64 %idxprom27, !dbg !4357
  store %struct.vorbis_enc_codebook* %arrayidx28, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4359
  %26 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4360
  %ndimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %26, i32 0, i32 3, !dbg !4361
  %27 = load i32, i32* %ndimensions, align 8, !dbg !4361
  %cmp29 = icmp sge i32 %27, 2, !dbg !4362
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !4363

cond.true:                                        ; preds = %if.end21
  br label %cond.end, !dbg !4364

cond.false:                                       ; preds = %if.end21
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 226, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.ready_residue, i32 0, i32 0)) #9, !dbg !4366
  unreachable, !dbg !4366
                                                  ; No predecessors!
  br label %cond.end, !dbg !4368

cond.end:                                         ; preds = %28, %cond.true
  %29 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4370
  %lookup = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %29, i32 0, i32 7, !dbg !4371
  %30 = load i32, i32* %lookup, align 8, !dbg !4371
  %tobool31 = icmp ne i32 %30, 0, !dbg !4372
  br i1 %tobool31, label %cond.true32, label %cond.false33, !dbg !4372

cond.true32:                                      ; preds = %cond.end
  br label %cond.end34, !dbg !4373

cond.false33:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 227, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.ready_residue, i32 0, i32 0)) #9, !dbg !4374
  unreachable, !dbg !4374
                                                  ; No predecessors!
  br label %cond.end34, !dbg !4375

cond.end34:                                       ; preds = %31, %cond.true32
  store i32 0, i32* %j, align 4, !dbg !4376
  br label %for.cond35, !dbg !4378

for.cond35:                                       ; preds = %for.inc82, %cond.end34
  %32 = load i32, i32* %j, align 4, !dbg !4379
  %33 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4382
  %nentries = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %33, i32 0, i32 0, !dbg !4383
  %34 = load i32, i32* %nentries, align 8, !dbg !4383
  %cmp36 = icmp slt i32 %32, %34, !dbg !4384
  br i1 %cmp36, label %for.body38, label %for.end84, !dbg !4385

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata float* %a, metadata !4386, metadata !1998), !dbg !4388
  %35 = load i32, i32* %j, align 4, !dbg !4389
  %idxprom39 = sext i32 %35 to i64, !dbg !4391
  %36 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4391
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %36, i32 0, i32 1, !dbg !4392
  %37 = load i8*, i8** %lens, align 8, !dbg !4392
  %arrayidx40 = getelementptr inbounds i8, i8* %37, i64 %idxprom39, !dbg !4391
  %38 = load i8, i8* %arrayidx40, align 1, !dbg !4391
  %tobool41 = icmp ne i8 %38, 0, !dbg !4391
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !4393

if.then42:                                        ; preds = %for.body38
  br label %for.inc82, !dbg !4394

if.end43:                                         ; preds = %for.body38
  %39 = load i32, i32* %j, align 4, !dbg !4395
  %40 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4396
  %ndimensions44 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %40, i32 0, i32 3, !dbg !4397
  %41 = load i32, i32* %ndimensions44, align 8, !dbg !4397
  %mul = mul nsw i32 %39, %41, !dbg !4398
  %idxprom45 = sext i32 %mul to i64, !dbg !4399
  %42 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4399
  %dimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %42, i32 0, i32 9, !dbg !4400
  %43 = load float*, float** %dimensions, align 8, !dbg !4400
  %arrayidx46 = getelementptr inbounds float, float* %43, i64 %idxprom45, !dbg !4399
  %44 = load float, float* %arrayidx46, align 4, !dbg !4399
  %conv47 = fpext float %44 to double, !dbg !4399
  %call48 = call double @fabs(double %conv47) #2, !dbg !4401
  %conv49 = fptrunc double %call48 to float, !dbg !4401
  store float %conv49, float* %a, align 4, !dbg !4402
  %45 = load float, float* %a, align 4, !dbg !4403
  %46 = load i32, i32* %i, align 4, !dbg !4405
  %idxprom50 = sext i32 %46 to i64, !dbg !4406
  %47 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4406
  %maxes51 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %47, i32 0, i32 7, !dbg !4407
  %48 = load [2 x float]*, [2 x float]** %maxes51, align 8, !dbg !4407
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %48, i64 %idxprom50, !dbg !4406
  %arrayidx53 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx52, i64 0, i64 0, !dbg !4406
  %49 = load float, float* %arrayidx53, align 4, !dbg !4406
  %cmp54 = fcmp ogt float %45, %49, !dbg !4408
  br i1 %cmp54, label %if.then56, label %if.end61, !dbg !4409

if.then56:                                        ; preds = %if.end43
  %50 = load float, float* %a, align 4, !dbg !4410
  %51 = load i32, i32* %i, align 4, !dbg !4411
  %idxprom57 = sext i32 %51 to i64, !dbg !4412
  %52 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4412
  %maxes58 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %52, i32 0, i32 7, !dbg !4413
  %53 = load [2 x float]*, [2 x float]** %maxes58, align 8, !dbg !4413
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %53, i64 %idxprom57, !dbg !4412
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx59, i64 0, i64 0, !dbg !4412
  store float %50, float* %arrayidx60, align 4, !dbg !4414
  br label %if.end61, !dbg !4412

if.end61:                                         ; preds = %if.then56, %if.end43
  %54 = load i32, i32* %j, align 4, !dbg !4415
  %55 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4416
  %ndimensions62 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %55, i32 0, i32 3, !dbg !4417
  %56 = load i32, i32* %ndimensions62, align 8, !dbg !4417
  %mul63 = mul nsw i32 %54, %56, !dbg !4418
  %add = add nsw i32 %mul63, 1, !dbg !4419
  %idxprom64 = sext i32 %add to i64, !dbg !4420
  %57 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb, align 8, !dbg !4420
  %dimensions65 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %57, i32 0, i32 9, !dbg !4421
  %58 = load float*, float** %dimensions65, align 8, !dbg !4421
  %arrayidx66 = getelementptr inbounds float, float* %58, i64 %idxprom64, !dbg !4420
  %59 = load float, float* %arrayidx66, align 4, !dbg !4420
  %conv67 = fpext float %59 to double, !dbg !4420
  %call68 = call double @fabs(double %conv67) #2, !dbg !4422
  %conv69 = fptrunc double %call68 to float, !dbg !4422
  store float %conv69, float* %a, align 4, !dbg !4423
  %60 = load float, float* %a, align 4, !dbg !4424
  %61 = load i32, i32* %i, align 4, !dbg !4426
  %idxprom70 = sext i32 %61 to i64, !dbg !4427
  %62 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4427
  %maxes71 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %62, i32 0, i32 7, !dbg !4428
  %63 = load [2 x float]*, [2 x float]** %maxes71, align 8, !dbg !4428
  %arrayidx72 = getelementptr inbounds [2 x float], [2 x float]* %63, i64 %idxprom70, !dbg !4427
  %arrayidx73 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx72, i64 0, i64 1, !dbg !4427
  %64 = load float, float* %arrayidx73, align 4, !dbg !4427
  %cmp74 = fcmp ogt float %60, %64, !dbg !4429
  br i1 %cmp74, label %if.then76, label %if.end81, !dbg !4430

if.then76:                                        ; preds = %if.end61
  %65 = load float, float* %a, align 4, !dbg !4431
  %66 = load i32, i32* %i, align 4, !dbg !4432
  %idxprom77 = sext i32 %66 to i64, !dbg !4433
  %67 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4433
  %maxes78 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %67, i32 0, i32 7, !dbg !4434
  %68 = load [2 x float]*, [2 x float]** %maxes78, align 8, !dbg !4434
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %68, i64 %idxprom77, !dbg !4433
  %arrayidx80 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx79, i64 0, i64 1, !dbg !4433
  store float %65, float* %arrayidx80, align 4, !dbg !4435
  br label %if.end81, !dbg !4433

if.end81:                                         ; preds = %if.then76, %if.end61
  br label %for.inc82, !dbg !4436

for.inc82:                                        ; preds = %if.end81, %if.then42
  %69 = load i32, i32* %j, align 4, !dbg !4437
  %inc83 = add nsw i32 %69, 1, !dbg !4437
  store i32 %inc83, i32* %j, align 4, !dbg !4437
  br label %for.cond35, !dbg !4439, !llvm.loop !4440

for.end84:                                        ; preds = %for.cond35
  br label %for.inc85, !dbg !4442

for.inc85:                                        ; preds = %for.end84, %if.then20
  %70 = load i32, i32* %i, align 4, !dbg !4443
  %inc86 = add nsw i32 %70, 1, !dbg !4443
  store i32 %inc86, i32* %i, align 4, !dbg !4443
  br label %for.cond, !dbg !4445, !llvm.loop !4446

for.end87:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4448
  br label %for.cond88, !dbg !4450

for.cond88:                                       ; preds = %for.inc107, %for.end87
  %71 = load i32, i32* %i, align 4, !dbg !4451
  %72 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4454
  %classifications89 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %72, i32 0, i32 4, !dbg !4455
  %73 = load i32, i32* %classifications89, align 8, !dbg !4455
  %cmp90 = icmp slt i32 %71, %73, !dbg !4456
  br i1 %cmp90, label %for.body92, label %for.end109, !dbg !4457

for.body92:                                       ; preds = %for.cond88
  %74 = load i32, i32* %i, align 4, !dbg !4458
  %idxprom93 = sext i32 %74 to i64, !dbg !4460
  %75 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4460
  %maxes94 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %75, i32 0, i32 7, !dbg !4461
  %76 = load [2 x float]*, [2 x float]** %maxes94, align 8, !dbg !4461
  %arrayidx95 = getelementptr inbounds [2 x float], [2 x float]* %76, i64 %idxprom93, !dbg !4460
  %arrayidx96 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx95, i64 0, i64 0, !dbg !4460
  %77 = load float, float* %arrayidx96, align 4, !dbg !4462
  %conv97 = fpext float %77 to double, !dbg !4462
  %add98 = fadd double %conv97, 8.000000e-01, !dbg !4462
  %conv99 = fptrunc double %add98 to float, !dbg !4462
  store float %conv99, float* %arrayidx96, align 4, !dbg !4462
  %78 = load i32, i32* %i, align 4, !dbg !4463
  %idxprom100 = sext i32 %78 to i64, !dbg !4464
  %79 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !4464
  %maxes101 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %79, i32 0, i32 7, !dbg !4465
  %80 = load [2 x float]*, [2 x float]** %maxes101, align 8, !dbg !4465
  %arrayidx102 = getelementptr inbounds [2 x float], [2 x float]* %80, i64 %idxprom100, !dbg !4464
  %arrayidx103 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx102, i64 0, i64 1, !dbg !4464
  %81 = load float, float* %arrayidx103, align 4, !dbg !4466
  %conv104 = fpext float %81 to double, !dbg !4466
  %add105 = fadd double %conv104, 8.000000e-01, !dbg !4466
  %conv106 = fptrunc double %add105 to float, !dbg !4466
  store float %conv106, float* %arrayidx103, align 4, !dbg !4466
  br label %for.inc107, !dbg !4467

for.inc107:                                       ; preds = %for.body92
  %82 = load i32, i32* %i, align 4, !dbg !4468
  %inc108 = add nsw i32 %82, 1, !dbg !4468
  store i32 %inc108, i32* %i, align 4, !dbg !4468
  br label %for.cond88, !dbg !4470, !llvm.loop !4471

for.end109:                                       ; preds = %for.cond88
  store i32 0, i32* %retval, align 4, !dbg !4473
  br label %return, !dbg !4473

return:                                           ; preds = %for.end109, %if.then2
  %83 = load i32, i32* %retval, align 4, !dbg !4474
  ret i32 %83, !dbg !4474
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @dsp_init(%struct.AVCodecContext* %avctx, %struct.vorbis_enc_context* %venc) #0 !dbg !4475 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4478, metadata !1998), !dbg !4479
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !4480, metadata !1998), !dbg !4481
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4482, metadata !1998), !dbg !4483
  store i32 0, i32* %ret, align 4, !dbg !4483
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4484
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 13, !dbg !4485
  %1 = load i32, i32* %flags, align 4, !dbg !4485
  %and = and i32 %1, 8388608, !dbg !4486
  %call = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and), !dbg !4487
  %2 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4488
  %fdsp = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %2, i32 0, i32 25, !dbg !4489
  store %struct.AVFloatDSPContext* %call, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !4490
  %3 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4491
  %fdsp1 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %3, i32 0, i32 25, !dbg !4493
  %4 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp1, align 8, !dbg !4493
  %tobool = icmp ne %struct.AVFloatDSPContext* %4, null, !dbg !4491
  br i1 %tobool, label %if.end, label %if.then, !dbg !4494

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4495
  br label %return, !dbg !4495

if.end:                                           ; preds = %entry
  %5 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4496
  %log2_blocksize = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %5, i32 0, i32 2, !dbg !4497
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize, i64 0, i64 0, !dbg !4496
  %6 = load i32, i32* %arrayidx, align 8, !dbg !4496
  %sub = sub nsw i32 %6, 6, !dbg !4498
  %idxprom = sext i32 %sub to i64, !dbg !4499
  %arrayidx2 = getelementptr inbounds [8 x float*], [8 x float*]* @ff_vorbis_vwin, i64 0, i64 %idxprom, !dbg !4499
  %7 = load float*, float** %arrayidx2, align 8, !dbg !4499
  %8 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4500
  %win = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %8, i32 0, i32 4, !dbg !4501
  %arrayidx3 = getelementptr inbounds [2 x float*], [2 x float*]* %win, i64 0, i64 0, !dbg !4500
  store float* %7, float** %arrayidx3, align 8, !dbg !4502
  %9 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4503
  %log2_blocksize4 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %9, i32 0, i32 2, !dbg !4504
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize4, i64 0, i64 1, !dbg !4503
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !4503
  %sub6 = sub nsw i32 %10, 6, !dbg !4505
  %idxprom7 = sext i32 %sub6 to i64, !dbg !4506
  %arrayidx8 = getelementptr inbounds [8 x float*], [8 x float*]* @ff_vorbis_vwin, i64 0, i64 %idxprom7, !dbg !4506
  %11 = load float*, float** %arrayidx8, align 8, !dbg !4506
  %12 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4507
  %win9 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %12, i32 0, i32 4, !dbg !4508
  %arrayidx10 = getelementptr inbounds [2 x float*], [2 x float*]* %win9, i64 0, i64 1, !dbg !4507
  store float* %11, float** %arrayidx10, align 8, !dbg !4509
  %13 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4510
  %mdct = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %13, i32 0, i32 3, !dbg !4512
  %arrayidx11 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %mdct, i64 0, i64 0, !dbg !4510
  %14 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4513
  %log2_blocksize12 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %14, i32 0, i32 2, !dbg !4514
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize12, i64 0, i64 0, !dbg !4513
  %15 = load i32, i32* %arrayidx13, align 8, !dbg !4513
  %call14 = call i32 @ff_mdct_init(%struct.FFTContext* %arrayidx11, i32 %15, i32 0, double 1.000000e+00), !dbg !4515
  store i32 %call14, i32* %ret, align 4, !dbg !4516
  %cmp = icmp slt i32 %call14, 0, !dbg !4517
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !4518

if.then15:                                        ; preds = %if.end
  %16 = load i32, i32* %ret, align 4, !dbg !4519
  store i32 %16, i32* %retval, align 4, !dbg !4520
  br label %return, !dbg !4520

if.end16:                                         ; preds = %if.end
  %17 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4521
  %mdct17 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %17, i32 0, i32 3, !dbg !4523
  %arrayidx18 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %mdct17, i64 0, i64 1, !dbg !4521
  %18 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !4524
  %log2_blocksize19 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %18, i32 0, i32 2, !dbg !4525
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize19, i64 0, i64 1, !dbg !4524
  %19 = load i32, i32* %arrayidx20, align 4, !dbg !4524
  %call21 = call i32 @ff_mdct_init(%struct.FFTContext* %arrayidx18, i32 %19, i32 0, double 1.000000e+00), !dbg !4526
  store i32 %call21, i32* %ret, align 4, !dbg !4527
  %cmp22 = icmp slt i32 %call21, 0, !dbg !4528
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !4529

if.then23:                                        ; preds = %if.end16
  %20 = load i32, i32* %ret, align 4, !dbg !4530
  store i32 %20, i32* %retval, align 4, !dbg !4531
  br label %return, !dbg !4531

if.end24:                                         ; preds = %if.end16
  store i32 0, i32* %retval, align 4, !dbg !4532
  br label %return, !dbg !4532

return:                                           ; preds = %if.end24, %if.then23, %if.then15, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4533
  ret i32 %21, !dbg !4533
}

declare i32 @ff_vorbis_nth_root(i32, i32) #3

declare i32 @ff_vorbis_len2vlc(i8*, i32*, i32) #3

declare i8* @av_mallocz_array(i64, i64) #3

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind readnone
declare double @fabs(double) #6

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #3

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #3

declare noalias i8* @av_mallocz(i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #7 !dbg !4534 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4538, metadata !1998), !dbg !4539
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4540, metadata !1998), !dbg !4541
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !4542, metadata !1998), !dbg !4543
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !4544
  %cmp = icmp slt i32 %0, 0, !dbg !4546
  br i1 %cmp, label %if.then, label %if.end, !dbg !4547

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !4548
  store i8* null, i8** %buffer.addr, align 8, !dbg !4550
  br label %if.end, !dbg !4551

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !4552
  %mul = mul nsw i32 8, %1, !dbg !4553
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4554
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !4555
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !4556
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !4557
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4558
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !4559
  store i8* %3, i8** %buf, align 8, !dbg !4560
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4561
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !4562
  %6 = load i8*, i8** %buf1, align 8, !dbg !4562
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !4563
  %idx.ext = sext i32 %7 to i64, !dbg !4564
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !4564
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4565
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !4566
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !4567
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4568
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !4569
  %10 = load i8*, i8** %buf2, align 8, !dbg !4569
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4570
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !4571
  store i8* %10, i8** %buf_ptr, align 8, !dbg !4572
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4573
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !4574
  store i32 32, i32* %bit_left, align 4, !dbg !4575
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4576
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !4577
  store i32 0, i32* %bit_buf, align 8, !dbg !4578
  ret void, !dbg !4579
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #7 !dbg !4580 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4583, metadata !1998), !dbg !4584
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4585, metadata !1998), !dbg !4586
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4587, metadata !1998), !dbg !4588
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !4589, metadata !1998), !dbg !4590
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !4591, metadata !1998), !dbg !4592
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4593
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !4594
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !4594
  store i32 %1, i32* %bit_buf, align 4, !dbg !4595
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4596
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !4597
  %3 = load i32, i32* %bit_left2, align 4, !dbg !4597
  store i32 %3, i32* %bit_left, align 4, !dbg !4598
  %4 = load i32, i32* %value.addr, align 4, !dbg !4599
  %5 = load i32, i32* %bit_left, align 4, !dbg !4600
  %sub = sub nsw i32 32, %5, !dbg !4601
  %shl = shl i32 %4, %sub, !dbg !4602
  %6 = load i32, i32* %bit_buf, align 4, !dbg !4603
  %or = or i32 %6, %shl, !dbg !4603
  store i32 %or, i32* %bit_buf, align 4, !dbg !4603
  %7 = load i32, i32* %n.addr, align 4, !dbg !4604
  %8 = load i32, i32* %bit_left, align 4, !dbg !4606
  %cmp = icmp sge i32 %7, %8, !dbg !4607
  br i1 %cmp, label %if.then, label %if.end7, !dbg !4608

if.then:                                          ; preds = %entry
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4609
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 4, !dbg !4612
  %10 = load i8*, i8** %buf_end, align 8, !dbg !4612
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4613
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !4614
  %12 = load i8*, i8** %buf_ptr, align 8, !dbg !4614
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !4615
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !4615
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4615
  %cmp3 = icmp slt i64 3, %sub.ptr.sub, !dbg !4616
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !4617

if.then4:                                         ; preds = %if.then
  %13 = load i32, i32* %bit_buf, align 4, !dbg !4618
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4620
  %buf_ptr5 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !4621
  %15 = load i8*, i8** %buf_ptr5, align 8, !dbg !4621
  %16 = bitcast i8* %15 to %union.unaligned_32*, !dbg !4622
  %l = bitcast %union.unaligned_32* %16 to i32*, !dbg !4622
  store i32 %13, i32* %l, align 1, !dbg !4623
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4624
  %buf_ptr6 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 3, !dbg !4625
  %18 = load i8*, i8** %buf_ptr6, align 8, !dbg !4626
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 4, !dbg !4626
  store i8* %add.ptr, i8** %buf_ptr6, align 8, !dbg !4626
  br label %if.end, !dbg !4627

if.else:                                          ; preds = %if.then
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23, i32 0, i32 0)), !dbg !4628
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %19 = load i32, i32* %value.addr, align 4, !dbg !4630
  %20 = load i32, i32* %bit_left, align 4, !dbg !4631
  %shr = lshr i32 %19, %20, !dbg !4632
  store i32 %shr, i32* %bit_buf, align 4, !dbg !4633
  %21 = load i32, i32* %bit_left, align 4, !dbg !4634
  %add = add nsw i32 %21, 32, !dbg !4634
  store i32 %add, i32* %bit_left, align 4, !dbg !4634
  br label %if.end7, !dbg !4635

if.end7:                                          ; preds = %if.end, %entry
  %22 = load i32, i32* %n.addr, align 4, !dbg !4636
  %23 = load i32, i32* %bit_left, align 4, !dbg !4637
  %sub8 = sub nsw i32 %23, %22, !dbg !4637
  store i32 %sub8, i32* %bit_left, align 4, !dbg !4637
  %24 = load i32, i32* %bit_buf, align 4, !dbg !4638
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4639
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %25, i32 0, i32 0, !dbg !4640
  store i32 %24, i32* %bit_buf9, align 8, !dbg !4641
  %26 = load i32, i32* %bit_left, align 4, !dbg !4642
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4643
  %bit_left10 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %27, i32 0, i32 1, !dbg !4644
  store i32 %26, i32* %bit_left10, align 4, !dbg !4645
  ret void, !dbg !4646
}

; Function Attrs: nounwind uwtable
define internal void @put_bits32(%struct.PutBitContext* %s, i32 %value) #1 !dbg !4647 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4650, metadata !1998), !dbg !4651
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4652, metadata !1998), !dbg !4653
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !4654, metadata !1998), !dbg !4655
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !4656, metadata !1998), !dbg !4657
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4658
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !4659
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !4659
  store i32 %1, i32* %bit_buf, align 4, !dbg !4660
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4661
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !4662
  %3 = load i32, i32* %bit_left2, align 4, !dbg !4662
  store i32 %3, i32* %bit_left, align 4, !dbg !4663
  %4 = load i32, i32* %value.addr, align 4, !dbg !4664
  %5 = load i32, i32* %bit_left, align 4, !dbg !4665
  %sub = sub nsw i32 32, %5, !dbg !4666
  %shl = shl i32 %4, %sub, !dbg !4667
  %6 = load i32, i32* %bit_buf, align 4, !dbg !4668
  %or = or i32 %6, %shl, !dbg !4668
  store i32 %or, i32* %bit_buf, align 4, !dbg !4668
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4669
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %7, i32 0, i32 4, !dbg !4671
  %8 = load i8*, i8** %buf_end, align 8, !dbg !4671
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4672
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 3, !dbg !4673
  %10 = load i8*, i8** %buf_ptr, align 8, !dbg !4673
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !4674
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !4674
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4674
  %cmp = icmp slt i64 3, %sub.ptr.sub, !dbg !4675
  br i1 %cmp, label %if.then, label %if.else, !dbg !4676

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %bit_buf, align 4, !dbg !4677
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4679
  %buf_ptr3 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 3, !dbg !4680
  %13 = load i8*, i8** %buf_ptr3, align 8, !dbg !4680
  %14 = bitcast i8* %13 to %union.unaligned_32*, !dbg !4681
  %l = bitcast %union.unaligned_32* %14 to i32*, !dbg !4681
  store i32 %11, i32* %l, align 1, !dbg !4682
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4683
  %buf_ptr4 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %15, i32 0, i32 3, !dbg !4684
  %16 = load i8*, i8** %buf_ptr4, align 8, !dbg !4685
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 4, !dbg !4685
  store i8* %add.ptr, i8** %buf_ptr4, align 8, !dbg !4685
  br label %if.end, !dbg !4686

if.else:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23, i32 0, i32 0)), !dbg !4687
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load i32, i32* %value.addr, align 4, !dbg !4689
  %conv = zext i32 %17 to i64, !dbg !4690
  %18 = load i32, i32* %bit_left, align 4, !dbg !4691
  %sh_prom = zext i32 %18 to i64, !dbg !4692
  %shr = lshr i64 %conv, %sh_prom, !dbg !4692
  %conv5 = trunc i64 %shr to i32, !dbg !4690
  store i32 %conv5, i32* %bit_buf, align 4, !dbg !4693
  %19 = load i32, i32* %bit_buf, align 4, !dbg !4694
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4695
  %bit_buf6 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 0, !dbg !4696
  store i32 %19, i32* %bit_buf6, align 8, !dbg !4697
  %21 = load i32, i32* %bit_left, align 4, !dbg !4698
  %22 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4699
  %bit_left7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %22, i32 0, i32 1, !dbg !4700
  store i32 %21, i32* %bit_left7, align 4, !dbg !4701
  ret void, !dbg !4702
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #7 !dbg !4703 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4706, metadata !1998), !dbg !4707
  br label %while.cond, !dbg !4708

while.cond:                                       ; preds = %do.end, %entry
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4709
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !4711
  %1 = load i32, i32* %bit_left, align 4, !dbg !4711
  %cmp = icmp slt i32 %1, 32, !dbg !4712
  br i1 %cmp, label %while.body, label %while.end, !dbg !4713

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !4714, !llvm.loop !4716

do.body:                                          ; preds = %while.body
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4717
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 3, !dbg !4721
  %3 = load i8*, i8** %buf_ptr, align 8, !dbg !4721
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4722
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 4, !dbg !4723
  %5 = load i8*, i8** %buf_end, align 8, !dbg !4723
  %cmp1 = icmp ult i8* %3, %5, !dbg !4724
  br i1 %cmp1, label %if.end, label %if.then, !dbg !4725

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i32 0, i32 0), i32 108), !dbg !4726
  call void @abort() #9, !dbg !4729
  unreachable, !dbg !4731

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !4732

do.end:                                           ; preds = %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4734
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 0, !dbg !4735
  %7 = load i32, i32* %bit_buf, align 8, !dbg !4735
  %conv = trunc i32 %7 to i8, !dbg !4734
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4736
  %buf_ptr2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !4737
  %9 = load i8*, i8** %buf_ptr2, align 8, !dbg !4738
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !4738
  store i8* %incdec.ptr, i8** %buf_ptr2, align 8, !dbg !4738
  store i8 %conv, i8* %9, align 1, !dbg !4739
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4740
  %bit_buf3 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 0, !dbg !4741
  %11 = load i32, i32* %bit_buf3, align 8, !dbg !4742
  %shr = lshr i32 %11, 8, !dbg !4742
  store i32 %shr, i32* %bit_buf3, align 8, !dbg !4742
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4743
  %bit_left4 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !4744
  %13 = load i32, i32* %bit_left4, align 4, !dbg !4745
  %add = add nsw i32 %13, 8, !dbg !4745
  store i32 %add, i32* %bit_left4, align 4, !dbg !4745
  br label %while.cond, !dbg !4746, !llvm.loop !4748

while.end:                                        ; preds = %while.cond
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4749
  %bit_left5 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 1, !dbg !4750
  store i32 32, i32* %bit_left5, align 4, !dbg !4751
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4752
  %bit_buf6 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %15, i32 0, i32 0, !dbg !4753
  store i32 0, i32* %bit_buf6, align 8, !dbg !4754
  ret void, !dbg !4755
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #7 !dbg !4756 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !4759, metadata !1998), !dbg !4760
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4761
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !4762
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !4762
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4763
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !4764
  %3 = load i8*, i8** %buf, align 8, !dbg !4764
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !4765
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !4765
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4765
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !4766
  %add = add nsw i64 %mul, 32, !dbg !4767
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !4768
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !4769
  %5 = load i32, i32* %bit_left, align 4, !dbg !4769
  %conv = sext i32 %5 to i64, !dbg !4768
  %sub = sub nsw i64 %add, %conv, !dbg !4770
  %conv1 = trunc i64 %sub to i32, !dbg !4771
  ret i32 %conv1, !dbg !4772
}

; Function Attrs: nounwind uwtable
define internal void @put_codebook_header(%struct.PutBitContext* %pb, %struct.vorbis_enc_codebook* %cb) #1 !dbg !4773 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %cb.addr = alloca %struct.vorbis_enc_codebook*, align 8
  %i = alloca i32, align 4
  %ordered = alloca i32, align 4
  %len = alloca i32, align 4
  %j = alloca i32, align 4
  %sparse = alloca i32, align 4
  %tmp = alloca i32, align 4
  %bits = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !4776, metadata !1998), !dbg !4777
  store %struct.vorbis_enc_codebook* %cb, %struct.vorbis_enc_codebook** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %cb.addr, metadata !4778, metadata !1998), !dbg !4779
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4780, metadata !1998), !dbg !4781
  call void @llvm.dbg.declare(metadata i32* %ordered, metadata !4782, metadata !1998), !dbg !4783
  store i32 0, i32* %ordered, align 4, !dbg !4783
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4784
  call void @put_bits(%struct.PutBitContext* %0, i32 24, i32 5653314), !dbg !4785
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4786
  %2 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4787
  %ndimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %2, i32 0, i32 3, !dbg !4788
  %3 = load i32, i32* %ndimensions, align 8, !dbg !4788
  call void @put_bits(%struct.PutBitContext* %1, i32 16, i32 %3), !dbg !4789
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4790
  %5 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4791
  %nentries = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %5, i32 0, i32 0, !dbg !4792
  %6 = load i32, i32* %nentries, align 8, !dbg !4792
  call void @put_bits(%struct.PutBitContext* %4, i32 24, i32 %6), !dbg !4793
  store i32 1, i32* %i, align 4, !dbg !4794
  br label %for.cond, !dbg !4796

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !4797
  %8 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4800
  %nentries1 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %8, i32 0, i32 0, !dbg !4801
  %9 = load i32, i32* %nentries1, align 8, !dbg !4801
  %cmp = icmp slt i32 %7, %9, !dbg !4802
  br i1 %cmp, label %for.body, label %for.end, !dbg !4803

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !4804
  %idxprom = sext i32 %10 to i64, !dbg !4806
  %11 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4806
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %11, i32 0, i32 1, !dbg !4807
  %12 = load i8*, i8** %lens, align 8, !dbg !4807
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 %idxprom, !dbg !4806
  %13 = load i8, i8* %arrayidx, align 1, !dbg !4806
  %conv = zext i8 %13 to i32, !dbg !4806
  %14 = load i32, i32* %i, align 4, !dbg !4808
  %sub = sub nsw i32 %14, 1, !dbg !4809
  %idxprom2 = sext i32 %sub to i64, !dbg !4810
  %15 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4810
  %lens3 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %15, i32 0, i32 1, !dbg !4811
  %16 = load i8*, i8** %lens3, align 8, !dbg !4811
  %arrayidx4 = getelementptr inbounds i8, i8* %16, i64 %idxprom2, !dbg !4810
  %17 = load i8, i8* %arrayidx4, align 1, !dbg !4810
  %conv5 = zext i8 %17 to i32, !dbg !4810
  %cmp6 = icmp slt i32 %conv, %conv5, !dbg !4812
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4813

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4814

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4815

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !4817
  %inc = add nsw i32 %18, 1, !dbg !4817
  store i32 %inc, i32* %i, align 4, !dbg !4817
  br label %for.cond, !dbg !4819, !llvm.loop !4820

for.end:                                          ; preds = %if.then, %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !4822
  %20 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4824
  %nentries8 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %20, i32 0, i32 0, !dbg !4825
  %21 = load i32, i32* %nentries8, align 8, !dbg !4825
  %cmp9 = icmp eq i32 %19, %21, !dbg !4826
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4827

if.then11:                                        ; preds = %for.end
  store i32 1, i32* %ordered, align 4, !dbg !4828
  br label %if.end12, !dbg !4829

if.end12:                                         ; preds = %if.then11, %for.end
  %22 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4830
  %23 = load i32, i32* %ordered, align 4, !dbg !4831
  call void @put_bits(%struct.PutBitContext* %22, i32 1, i32 %23), !dbg !4832
  %24 = load i32, i32* %ordered, align 4, !dbg !4833
  %tobool = icmp ne i32 %24, 0, !dbg !4833
  br i1 %tobool, label %if.then13, label %if.else, !dbg !4835

if.then13:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4836, metadata !1998), !dbg !4838
  %25 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4839
  %lens14 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %25, i32 0, i32 1, !dbg !4840
  %26 = load i8*, i8** %lens14, align 8, !dbg !4840
  %arrayidx15 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !4839
  %27 = load i8, i8* %arrayidx15, align 1, !dbg !4839
  %conv16 = zext i8 %27 to i32, !dbg !4839
  store i32 %conv16, i32* %len, align 4, !dbg !4838
  %28 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4841
  %29 = load i32, i32* %len, align 4, !dbg !4842
  %sub17 = sub nsw i32 %29, 1, !dbg !4843
  call void @put_bits(%struct.PutBitContext* %28, i32 5, i32 %sub17), !dbg !4844
  store i32 0, i32* %i, align 4, !dbg !4845
  br label %while.cond, !dbg !4846

while.cond:                                       ; preds = %for.end37, %if.then13
  %30 = load i32, i32* %i, align 4, !dbg !4847
  %31 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4849
  %nentries18 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %31, i32 0, i32 0, !dbg !4850
  %32 = load i32, i32* %nentries18, align 8, !dbg !4850
  %cmp19 = icmp slt i32 %30, %32, !dbg !4851
  br i1 %cmp19, label %while.body, label %while.end, !dbg !4852

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4853, metadata !1998), !dbg !4855
  store i32 0, i32* %j, align 4, !dbg !4856
  br label %for.cond21, !dbg !4858

for.cond21:                                       ; preds = %for.inc35, %while.body
  %33 = load i32, i32* %j, align 4, !dbg !4859
  %34 = load i32, i32* %i, align 4, !dbg !4862
  %add = add nsw i32 %33, %34, !dbg !4863
  %35 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4864
  %nentries22 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %35, i32 0, i32 0, !dbg !4865
  %36 = load i32, i32* %nentries22, align 8, !dbg !4865
  %cmp23 = icmp slt i32 %add, %36, !dbg !4866
  br i1 %cmp23, label %for.body25, label %for.end37, !dbg !4867

for.body25:                                       ; preds = %for.cond21
  %37 = load i32, i32* %j, align 4, !dbg !4868
  %38 = load i32, i32* %i, align 4, !dbg !4870
  %add26 = add nsw i32 %37, %38, !dbg !4871
  %idxprom27 = sext i32 %add26 to i64, !dbg !4872
  %39 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4872
  %lens28 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %39, i32 0, i32 1, !dbg !4873
  %40 = load i8*, i8** %lens28, align 8, !dbg !4873
  %arrayidx29 = getelementptr inbounds i8, i8* %40, i64 %idxprom27, !dbg !4872
  %41 = load i8, i8* %arrayidx29, align 1, !dbg !4872
  %conv30 = zext i8 %41 to i32, !dbg !4872
  %42 = load i32, i32* %len, align 4, !dbg !4874
  %cmp31 = icmp ne i32 %conv30, %42, !dbg !4875
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4876

if.then33:                                        ; preds = %for.body25
  br label %for.end37, !dbg !4877

if.end34:                                         ; preds = %for.body25
  br label %for.inc35, !dbg !4878

for.inc35:                                        ; preds = %if.end34
  %43 = load i32, i32* %j, align 4, !dbg !4880
  %inc36 = add nsw i32 %43, 1, !dbg !4880
  store i32 %inc36, i32* %j, align 4, !dbg !4880
  br label %for.cond21, !dbg !4882, !llvm.loop !4883

for.end37:                                        ; preds = %if.then33, %for.cond21
  %44 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4885
  %45 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4886
  %nentries38 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %45, i32 0, i32 0, !dbg !4887
  %46 = load i32, i32* %nentries38, align 8, !dbg !4887
  %47 = load i32, i32* %i, align 4, !dbg !4888
  %sub39 = sub nsw i32 %46, %47, !dbg !4889
  %mul = mul nsw i32 2, %sub39, !dbg !4890
  %or = or i32 %mul, 1, !dbg !4891
  %48 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4892
  %sub40 = sub nsw i32 31, %48, !dbg !4893
  %49 = load i32, i32* %j, align 4, !dbg !4894
  call void @put_bits(%struct.PutBitContext* %44, i32 %sub40, i32 %49), !dbg !4895
  %50 = load i32, i32* %j, align 4, !dbg !4897
  %51 = load i32, i32* %i, align 4, !dbg !4898
  %add41 = add nsw i32 %51, %50, !dbg !4898
  store i32 %add41, i32* %i, align 4, !dbg !4898
  %52 = load i32, i32* %len, align 4, !dbg !4899
  %inc42 = add nsw i32 %52, 1, !dbg !4899
  store i32 %inc42, i32* %len, align 4, !dbg !4899
  br label %while.cond, !dbg !4900, !llvm.loop !4902

while.end:                                        ; preds = %while.cond
  br label %if.end89, !dbg !4903

if.else:                                          ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %sparse, metadata !4904, metadata !1998), !dbg !4906
  store i32 0, i32* %sparse, align 4, !dbg !4906
  store i32 0, i32* %i, align 4, !dbg !4907
  br label %for.cond43, !dbg !4909

for.cond43:                                       ; preds = %for.inc54, %if.else
  %53 = load i32, i32* %i, align 4, !dbg !4910
  %54 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4913
  %nentries44 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %54, i32 0, i32 0, !dbg !4914
  %55 = load i32, i32* %nentries44, align 8, !dbg !4914
  %cmp45 = icmp slt i32 %53, %55, !dbg !4915
  br i1 %cmp45, label %for.body47, label %for.end56, !dbg !4916

for.body47:                                       ; preds = %for.cond43
  %56 = load i32, i32* %i, align 4, !dbg !4917
  %idxprom48 = sext i32 %56 to i64, !dbg !4919
  %57 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4919
  %lens49 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %57, i32 0, i32 1, !dbg !4920
  %58 = load i8*, i8** %lens49, align 8, !dbg !4920
  %arrayidx50 = getelementptr inbounds i8, i8* %58, i64 %idxprom48, !dbg !4919
  %59 = load i8, i8* %arrayidx50, align 1, !dbg !4919
  %tobool51 = icmp ne i8 %59, 0, !dbg !4919
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !4921

if.then52:                                        ; preds = %for.body47
  br label %for.end56, !dbg !4922

if.end53:                                         ; preds = %for.body47
  br label %for.inc54, !dbg !4923

for.inc54:                                        ; preds = %if.end53
  %60 = load i32, i32* %i, align 4, !dbg !4925
  %inc55 = add nsw i32 %60, 1, !dbg !4925
  store i32 %inc55, i32* %i, align 4, !dbg !4925
  br label %for.cond43, !dbg !4927, !llvm.loop !4928

for.end56:                                        ; preds = %if.then52, %for.cond43
  %61 = load i32, i32* %i, align 4, !dbg !4930
  %62 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4932
  %nentries57 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %62, i32 0, i32 0, !dbg !4933
  %63 = load i32, i32* %nentries57, align 8, !dbg !4933
  %cmp58 = icmp ne i32 %61, %63, !dbg !4934
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !4935

if.then60:                                        ; preds = %for.end56
  store i32 1, i32* %sparse, align 4, !dbg !4936
  br label %if.end61, !dbg !4937

if.end61:                                         ; preds = %if.then60, %for.end56
  %64 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4938
  %65 = load i32, i32* %sparse, align 4, !dbg !4939
  call void @put_bits(%struct.PutBitContext* %64, i32 1, i32 %65), !dbg !4940
  store i32 0, i32* %i, align 4, !dbg !4941
  br label %for.cond62, !dbg !4943

for.cond62:                                       ; preds = %for.inc86, %if.end61
  %66 = load i32, i32* %i, align 4, !dbg !4944
  %67 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4947
  %nentries63 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %67, i32 0, i32 0, !dbg !4948
  %68 = load i32, i32* %nentries63, align 8, !dbg !4948
  %cmp64 = icmp slt i32 %66, %68, !dbg !4949
  br i1 %cmp64, label %for.body66, label %for.end88, !dbg !4950

for.body66:                                       ; preds = %for.cond62
  %69 = load i32, i32* %sparse, align 4, !dbg !4951
  %tobool67 = icmp ne i32 %69, 0, !dbg !4951
  br i1 %tobool67, label %if.then68, label %if.end74, !dbg !4954

if.then68:                                        ; preds = %for.body66
  %70 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4955
  %71 = load i32, i32* %i, align 4, !dbg !4956
  %idxprom69 = sext i32 %71 to i64, !dbg !4957
  %72 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4957
  %lens70 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %72, i32 0, i32 1, !dbg !4958
  %73 = load i8*, i8** %lens70, align 8, !dbg !4958
  %arrayidx71 = getelementptr inbounds i8, i8* %73, i64 %idxprom69, !dbg !4957
  %74 = load i8, i8* %arrayidx71, align 1, !dbg !4957
  %tobool72 = icmp ne i8 %74, 0, !dbg !4959
  %lnot = xor i1 %tobool72, true, !dbg !4959
  %lnot73 = xor i1 %lnot, true, !dbg !4960
  %lnot.ext = zext i1 %lnot73 to i32, !dbg !4960
  call void @put_bits(%struct.PutBitContext* %70, i32 1, i32 %lnot.ext), !dbg !4961
  br label %if.end74, !dbg !4961

if.end74:                                         ; preds = %if.then68, %for.body66
  %75 = load i32, i32* %i, align 4, !dbg !4962
  %idxprom75 = sext i32 %75 to i64, !dbg !4964
  %76 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4964
  %lens76 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %76, i32 0, i32 1, !dbg !4965
  %77 = load i8*, i8** %lens76, align 8, !dbg !4965
  %arrayidx77 = getelementptr inbounds i8, i8* %77, i64 %idxprom75, !dbg !4964
  %78 = load i8, i8* %arrayidx77, align 1, !dbg !4964
  %tobool78 = icmp ne i8 %78, 0, !dbg !4964
  br i1 %tobool78, label %if.then79, label %if.end85, !dbg !4966

if.then79:                                        ; preds = %if.end74
  %79 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4967
  %80 = load i32, i32* %i, align 4, !dbg !4968
  %idxprom80 = sext i32 %80 to i64, !dbg !4969
  %81 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4969
  %lens81 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %81, i32 0, i32 1, !dbg !4970
  %82 = load i8*, i8** %lens81, align 8, !dbg !4970
  %arrayidx82 = getelementptr inbounds i8, i8* %82, i64 %idxprom80, !dbg !4969
  %83 = load i8, i8* %arrayidx82, align 1, !dbg !4969
  %conv83 = zext i8 %83 to i32, !dbg !4969
  %sub84 = sub nsw i32 %conv83, 1, !dbg !4971
  call void @put_bits(%struct.PutBitContext* %79, i32 5, i32 %sub84), !dbg !4972
  br label %if.end85, !dbg !4972

if.end85:                                         ; preds = %if.then79, %if.end74
  br label %for.inc86, !dbg !4973

for.inc86:                                        ; preds = %if.end85
  %84 = load i32, i32* %i, align 4, !dbg !4974
  %inc87 = add nsw i32 %84, 1, !dbg !4974
  store i32 %inc87, i32* %i, align 4, !dbg !4974
  br label %for.cond62, !dbg !4976, !llvm.loop !4977

for.end88:                                        ; preds = %for.cond62
  br label %if.end89

if.end89:                                         ; preds = %for.end88, %while.end
  %85 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4979
  %86 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4980
  %lookup = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %86, i32 0, i32 7, !dbg !4981
  %87 = load i32, i32* %lookup, align 8, !dbg !4981
  call void @put_bits(%struct.PutBitContext* %85, i32 4, i32 %87), !dbg !4982
  %88 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4983
  %lookup90 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %88, i32 0, i32 7, !dbg !4985
  %89 = load i32, i32* %lookup90, align 8, !dbg !4985
  %tobool91 = icmp ne i32 %89, 0, !dbg !4983
  br i1 %tobool91, label %if.then92, label %if.end133, !dbg !4986

if.then92:                                        ; preds = %if.end89
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4987, metadata !1998), !dbg !4989
  %90 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4990
  %lookup93 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %90, i32 0, i32 7, !dbg !4991
  %91 = load i32, i32* %lookup93, align 8, !dbg !4991
  %92 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4992
  %ndimensions94 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %92, i32 0, i32 3, !dbg !4993
  %93 = load i32, i32* %ndimensions94, align 8, !dbg !4993
  %94 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4994
  %nentries95 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %94, i32 0, i32 0, !dbg !4995
  %95 = load i32, i32* %nentries95, align 8, !dbg !4995
  %call = call i32 @cb_lookup_vals(i32 %91, i32 %93, i32 %95), !dbg !4996
  store i32 %call, i32* %tmp, align 4, !dbg !4989
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4997, metadata !1998), !dbg !4998
  %96 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !4999
  %quantlist = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %96, i32 0, i32 8, !dbg !5000
  %97 = load i32*, i32** %quantlist, align 8, !dbg !5000
  %arrayidx97 = getelementptr inbounds i32, i32* %97, i64 0, !dbg !4999
  %98 = load i32, i32* %arrayidx97, align 4, !dbg !4999
  %mul98 = mul nsw i32 2, %98, !dbg !5001
  %or99 = or i32 %mul98, 1, !dbg !5002
  %99 = call i32 @llvm.ctlz.i32(i32 %or99, i1 true), !dbg !5003
  %sub100 = sub nsw i32 31, %99, !dbg !5004
  store i32 %sub100, i32* %bits, align 4, !dbg !4998
  store i32 1, i32* %i, align 4, !dbg !5005
  br label %for.cond101, !dbg !5007

for.cond101:                                      ; preds = %for.inc119, %if.then92
  %100 = load i32, i32* %i, align 4, !dbg !5008
  %101 = load i32, i32* %tmp, align 4, !dbg !5011
  %cmp102 = icmp slt i32 %100, %101, !dbg !5012
  br i1 %cmp102, label %for.body104, label %for.end121, !dbg !5013

for.body104:                                      ; preds = %for.cond101
  %102 = load i32, i32* %bits, align 4, !dbg !5014
  %103 = load i32, i32* %i, align 4, !dbg !5015
  %idxprom105 = sext i32 %103 to i64, !dbg !5016
  %104 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !5016
  %quantlist106 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %104, i32 0, i32 8, !dbg !5017
  %105 = load i32*, i32** %quantlist106, align 8, !dbg !5017
  %arrayidx107 = getelementptr inbounds i32, i32* %105, i64 %idxprom105, !dbg !5016
  %106 = load i32, i32* %arrayidx107, align 4, !dbg !5016
  %mul108 = mul nsw i32 2, %106, !dbg !5018
  %or109 = or i32 %mul108, 1, !dbg !5019
  %107 = call i32 @llvm.ctlz.i32(i32 %or109, i1 true), !dbg !5020
  %sub110 = sub nsw i32 31, %107, !dbg !5021
  %cmp111 = icmp sgt i32 %102, %sub110, !dbg !5022
  br i1 %cmp111, label %cond.true, label %cond.false, !dbg !5023

cond.true:                                        ; preds = %for.body104
  %108 = load i32, i32* %bits, align 4, !dbg !5024
  br label %cond.end, !dbg !5025

cond.false:                                       ; preds = %for.body104
  %109 = load i32, i32* %i, align 4, !dbg !5026
  %idxprom113 = sext i32 %109 to i64, !dbg !5028
  %110 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !5028
  %quantlist114 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %110, i32 0, i32 8, !dbg !5029
  %111 = load i32*, i32** %quantlist114, align 8, !dbg !5029
  %arrayidx115 = getelementptr inbounds i32, i32* %111, i64 %idxprom113, !dbg !5028
  %112 = load i32, i32* %arrayidx115, align 4, !dbg !5028
  %mul116 = mul nsw i32 2, %112, !dbg !5030
  %or117 = or i32 %mul116, 1, !dbg !5031
  %113 = call i32 @llvm.ctlz.i32(i32 %or117, i1 true), !dbg !5032
  %sub118 = sub nsw i32 31, %113, !dbg !5033
  br label %cond.end, !dbg !5034

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %108, %cond.true ], [ %sub118, %cond.false ], !dbg !5035
  store i32 %cond, i32* %bits, align 4, !dbg !5037
  br label %for.inc119, !dbg !5038

for.inc119:                                       ; preds = %cond.end
  %114 = load i32, i32* %i, align 4, !dbg !5039
  %inc120 = add nsw i32 %114, 1, !dbg !5039
  store i32 %inc120, i32* %i, align 4, !dbg !5039
  br label %for.cond101, !dbg !5040, !llvm.loop !5041

for.end121:                                       ; preds = %for.cond101
  %115 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5043
  %116 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !5044
  %min = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %116, i32 0, i32 4, !dbg !5045
  %117 = load float, float* %min, align 4, !dbg !5045
  call void @put_float(%struct.PutBitContext* %115, float %117), !dbg !5046
  %118 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5047
  %119 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !5048
  %delta = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %119, i32 0, i32 5, !dbg !5049
  %120 = load float, float* %delta, align 8, !dbg !5049
  call void @put_float(%struct.PutBitContext* %118, float %120), !dbg !5050
  %121 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5051
  %122 = load i32, i32* %bits, align 4, !dbg !5052
  %sub122 = sub nsw i32 %122, 1, !dbg !5053
  call void @put_bits(%struct.PutBitContext* %121, i32 4, i32 %sub122), !dbg !5054
  %123 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5055
  %124 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !5056
  %seq_p = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %124, i32 0, i32 6, !dbg !5057
  %125 = load i32, i32* %seq_p, align 4, !dbg !5057
  call void @put_bits(%struct.PutBitContext* %123, i32 1, i32 %125), !dbg !5058
  store i32 0, i32* %i, align 4, !dbg !5059
  br label %for.cond123, !dbg !5061

for.cond123:                                      ; preds = %for.inc130, %for.end121
  %126 = load i32, i32* %i, align 4, !dbg !5062
  %127 = load i32, i32* %tmp, align 4, !dbg !5065
  %cmp124 = icmp slt i32 %126, %127, !dbg !5066
  br i1 %cmp124, label %for.body126, label %for.end132, !dbg !5067

for.body126:                                      ; preds = %for.cond123
  %128 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5068
  %129 = load i32, i32* %bits, align 4, !dbg !5069
  %130 = load i32, i32* %i, align 4, !dbg !5070
  %idxprom127 = sext i32 %130 to i64, !dbg !5071
  %131 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !5071
  %quantlist128 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %131, i32 0, i32 8, !dbg !5072
  %132 = load i32*, i32** %quantlist128, align 8, !dbg !5072
  %arrayidx129 = getelementptr inbounds i32, i32* %132, i64 %idxprom127, !dbg !5071
  %133 = load i32, i32* %arrayidx129, align 4, !dbg !5071
  call void @put_bits(%struct.PutBitContext* %128, i32 %129, i32 %133), !dbg !5073
  br label %for.inc130, !dbg !5073

for.inc130:                                       ; preds = %for.body126
  %134 = load i32, i32* %i, align 4, !dbg !5074
  %inc131 = add nsw i32 %134, 1, !dbg !5074
  store i32 %inc131, i32* %i, align 4, !dbg !5074
  br label %for.cond123, !dbg !5076, !llvm.loop !5077

for.end132:                                       ; preds = %for.cond123
  br label %if.end133, !dbg !5079

if.end133:                                        ; preds = %for.end132, %if.end89
  ret void, !dbg !5080
}

; Function Attrs: nounwind uwtable
define internal void @put_floor_header(%struct.PutBitContext* %pb, %struct.vorbis_enc_floor* %fc) #1 !dbg !5081 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %fc.addr = alloca %struct.vorbis_enc_floor*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %books = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5084, metadata !1998), !dbg !5085
  store %struct.vorbis_enc_floor* %fc, %struct.vorbis_enc_floor** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor** %fc.addr, metadata !5086, metadata !1998), !dbg !5087
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5088, metadata !1998), !dbg !5089
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5090
  call void @put_bits(%struct.PutBitContext* %0, i32 16, i32 1), !dbg !5091
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5092
  %2 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5093
  %partitions = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %2, i32 0, i32 0, !dbg !5094
  %3 = load i32, i32* %partitions, align 8, !dbg !5094
  call void @put_bits(%struct.PutBitContext* %1, i32 5, i32 %3), !dbg !5095
  store i32 0, i32* %i, align 4, !dbg !5096
  br label %for.cond, !dbg !5098

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !5099
  %5 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5102
  %partitions1 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %5, i32 0, i32 0, !dbg !5103
  %6 = load i32, i32* %partitions1, align 8, !dbg !5103
  %cmp = icmp slt i32 %4, %6, !dbg !5104
  br i1 %cmp, label %for.body, label %for.end, !dbg !5105

for.body:                                         ; preds = %for.cond
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5106
  %8 = load i32, i32* %i, align 4, !dbg !5107
  %idxprom = sext i32 %8 to i64, !dbg !5108
  %9 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5108
  %partition_to_class = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %9, i32 0, i32 1, !dbg !5109
  %10 = load i32*, i32** %partition_to_class, align 8, !dbg !5109
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !5108
  %11 = load i32, i32* %arrayidx, align 4, !dbg !5108
  call void @put_bits(%struct.PutBitContext* %7, i32 4, i32 %11), !dbg !5110
  br label %for.inc, !dbg !5110

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !5111
  %inc = add nsw i32 %12, 1, !dbg !5111
  store i32 %inc, i32* %i, align 4, !dbg !5111
  br label %for.cond, !dbg !5113, !llvm.loop !5114

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5116
  br label %for.cond2, !dbg !5118

for.cond2:                                        ; preds = %for.inc33, %for.end
  %13 = load i32, i32* %i, align 4, !dbg !5119
  %14 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5122
  %nclasses = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %14, i32 0, i32 2, !dbg !5123
  %15 = load i32, i32* %nclasses, align 8, !dbg !5123
  %cmp3 = icmp slt i32 %13, %15, !dbg !5124
  br i1 %cmp3, label %for.body4, label %for.end35, !dbg !5125

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5126, metadata !1998), !dbg !5128
  call void @llvm.dbg.declare(metadata i32* %books, metadata !5129, metadata !1998), !dbg !5130
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5131
  %17 = load i32, i32* %i, align 4, !dbg !5132
  %idxprom5 = sext i32 %17 to i64, !dbg !5133
  %18 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5133
  %classes = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %18, i32 0, i32 3, !dbg !5134
  %19 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes, align 8, !dbg !5134
  %arrayidx6 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %19, i64 %idxprom5, !dbg !5133
  %dim = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx6, i32 0, i32 0, !dbg !5135
  %20 = load i32, i32* %dim, align 8, !dbg !5135
  %sub = sub nsw i32 %20, 1, !dbg !5136
  call void @put_bits(%struct.PutBitContext* %16, i32 3, i32 %sub), !dbg !5137
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5138
  %22 = load i32, i32* %i, align 4, !dbg !5139
  %idxprom7 = sext i32 %22 to i64, !dbg !5140
  %23 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5140
  %classes8 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %23, i32 0, i32 3, !dbg !5141
  %24 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes8, align 8, !dbg !5141
  %arrayidx9 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %24, i64 %idxprom7, !dbg !5140
  %subclass = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx9, i32 0, i32 1, !dbg !5142
  %25 = load i32, i32* %subclass, align 4, !dbg !5142
  call void @put_bits(%struct.PutBitContext* %21, i32 2, i32 %25), !dbg !5143
  %26 = load i32, i32* %i, align 4, !dbg !5144
  %idxprom10 = sext i32 %26 to i64, !dbg !5146
  %27 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5146
  %classes11 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %27, i32 0, i32 3, !dbg !5147
  %28 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes11, align 8, !dbg !5147
  %arrayidx12 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %28, i64 %idxprom10, !dbg !5146
  %subclass13 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx12, i32 0, i32 1, !dbg !5148
  %29 = load i32, i32* %subclass13, align 4, !dbg !5148
  %tobool = icmp ne i32 %29, 0, !dbg !5146
  br i1 %tobool, label %if.then, label %if.end, !dbg !5149

if.then:                                          ; preds = %for.body4
  %30 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5150
  %31 = load i32, i32* %i, align 4, !dbg !5151
  %idxprom14 = sext i32 %31 to i64, !dbg !5152
  %32 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5152
  %classes15 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %32, i32 0, i32 3, !dbg !5153
  %33 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes15, align 8, !dbg !5153
  %arrayidx16 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %33, i64 %idxprom14, !dbg !5152
  %masterbook = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx16, i32 0, i32 2, !dbg !5154
  %34 = load i32, i32* %masterbook, align 8, !dbg !5154
  call void @put_bits(%struct.PutBitContext* %30, i32 8, i32 %34), !dbg !5155
  br label %if.end, !dbg !5155

if.end:                                           ; preds = %if.then, %for.body4
  %35 = load i32, i32* %i, align 4, !dbg !5156
  %idxprom17 = sext i32 %35 to i64, !dbg !5157
  %36 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5157
  %classes18 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %36, i32 0, i32 3, !dbg !5158
  %37 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes18, align 8, !dbg !5158
  %arrayidx19 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %37, i64 %idxprom17, !dbg !5157
  %subclass20 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx19, i32 0, i32 1, !dbg !5159
  %38 = load i32, i32* %subclass20, align 4, !dbg !5159
  %shl = shl i32 1, %38, !dbg !5160
  store i32 %shl, i32* %books, align 4, !dbg !5161
  store i32 0, i32* %j, align 4, !dbg !5162
  br label %for.cond21, !dbg !5164

for.cond21:                                       ; preds = %for.inc30, %if.end
  %39 = load i32, i32* %j, align 4, !dbg !5165
  %40 = load i32, i32* %books, align 4, !dbg !5168
  %cmp22 = icmp slt i32 %39, %40, !dbg !5169
  br i1 %cmp22, label %for.body23, label %for.end32, !dbg !5170

for.body23:                                       ; preds = %for.cond21
  %41 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5171
  %42 = load i32, i32* %j, align 4, !dbg !5172
  %idxprom24 = sext i32 %42 to i64, !dbg !5173
  %43 = load i32, i32* %i, align 4, !dbg !5174
  %idxprom25 = sext i32 %43 to i64, !dbg !5173
  %44 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5173
  %classes26 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %44, i32 0, i32 3, !dbg !5175
  %45 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes26, align 8, !dbg !5175
  %arrayidx27 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %45, i64 %idxprom25, !dbg !5173
  %books28 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %arrayidx27, i32 0, i32 3, !dbg !5176
  %46 = load i32*, i32** %books28, align 8, !dbg !5176
  %arrayidx29 = getelementptr inbounds i32, i32* %46, i64 %idxprom24, !dbg !5173
  %47 = load i32, i32* %arrayidx29, align 4, !dbg !5173
  %add = add nsw i32 %47, 1, !dbg !5177
  call void @put_bits(%struct.PutBitContext* %41, i32 8, i32 %add), !dbg !5178
  br label %for.inc30, !dbg !5178

for.inc30:                                        ; preds = %for.body23
  %48 = load i32, i32* %j, align 4, !dbg !5179
  %inc31 = add nsw i32 %48, 1, !dbg !5179
  store i32 %inc31, i32* %j, align 4, !dbg !5179
  br label %for.cond21, !dbg !5181, !llvm.loop !5182

for.end32:                                        ; preds = %for.cond21
  br label %for.inc33, !dbg !5184

for.inc33:                                        ; preds = %for.end32
  %49 = load i32, i32* %i, align 4, !dbg !5185
  %inc34 = add nsw i32 %49, 1, !dbg !5185
  store i32 %inc34, i32* %i, align 4, !dbg !5185
  br label %for.cond2, !dbg !5187, !llvm.loop !5188

for.end35:                                        ; preds = %for.cond2
  %50 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5190
  %51 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5191
  %multiplier = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %51, i32 0, i32 4, !dbg !5192
  %52 = load i32, i32* %multiplier, align 8, !dbg !5192
  %sub36 = sub nsw i32 %52, 1, !dbg !5193
  call void @put_bits(%struct.PutBitContext* %50, i32 2, i32 %sub36), !dbg !5194
  %53 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5195
  %54 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5196
  %rangebits = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %54, i32 0, i32 5, !dbg !5197
  %55 = load i32, i32* %rangebits, align 4, !dbg !5197
  call void @put_bits(%struct.PutBitContext* %53, i32 4, i32 %55), !dbg !5198
  store i32 2, i32* %i, align 4, !dbg !5199
  br label %for.cond37, !dbg !5201

for.cond37:                                       ; preds = %for.inc43, %for.end35
  %56 = load i32, i32* %i, align 4, !dbg !5202
  %57 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5205
  %values = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %57, i32 0, i32 6, !dbg !5206
  %58 = load i32, i32* %values, align 8, !dbg !5206
  %cmp38 = icmp slt i32 %56, %58, !dbg !5207
  br i1 %cmp38, label %for.body39, label %for.end45, !dbg !5208

for.body39:                                       ; preds = %for.cond37
  %59 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5209
  %60 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5210
  %rangebits40 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %60, i32 0, i32 5, !dbg !5211
  %61 = load i32, i32* %rangebits40, align 4, !dbg !5211
  %62 = load i32, i32* %i, align 4, !dbg !5212
  %idxprom41 = sext i32 %62 to i64, !dbg !5213
  %63 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5213
  %list = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %63, i32 0, i32 7, !dbg !5214
  %64 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list, align 8, !dbg !5214
  %arrayidx42 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %64, i64 %idxprom41, !dbg !5213
  %x = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx42, i32 0, i32 0, !dbg !5215
  %65 = load i16, i16* %x, align 2, !dbg !5215
  %conv = zext i16 %65 to i32, !dbg !5213
  call void @put_bits(%struct.PutBitContext* %59, i32 %61, i32 %conv), !dbg !5216
  br label %for.inc43, !dbg !5216

for.inc43:                                        ; preds = %for.body39
  %66 = load i32, i32* %i, align 4, !dbg !5217
  %inc44 = add nsw i32 %66, 1, !dbg !5217
  store i32 %inc44, i32* %i, align 4, !dbg !5217
  br label %for.cond37, !dbg !5219, !llvm.loop !5220

for.end45:                                        ; preds = %for.cond37
  ret void, !dbg !5222
}

; Function Attrs: nounwind uwtable
define internal void @put_residue_header(%struct.PutBitContext* %pb, %struct.vorbis_enc_residue* %rc) #1 !dbg !5223 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %rc.addr = alloca %struct.vorbis_enc_residue*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  %j23 = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5226, metadata !1998), !dbg !5227
  store %struct.vorbis_enc_residue* %rc, %struct.vorbis_enc_residue** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_residue** %rc.addr, metadata !5228, metadata !1998), !dbg !5229
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5230, metadata !1998), !dbg !5231
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5232
  %1 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5233
  %type = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %1, i32 0, i32 0, !dbg !5234
  %2 = load i32, i32* %type, align 8, !dbg !5234
  call void @put_bits(%struct.PutBitContext* %0, i32 16, i32 %2), !dbg !5235
  %3 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5236
  %4 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5237
  %begin = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %4, i32 0, i32 1, !dbg !5238
  %5 = load i32, i32* %begin, align 4, !dbg !5238
  call void @put_bits(%struct.PutBitContext* %3, i32 24, i32 %5), !dbg !5239
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5240
  %7 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5241
  %end = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %7, i32 0, i32 2, !dbg !5242
  %8 = load i32, i32* %end, align 8, !dbg !5242
  call void @put_bits(%struct.PutBitContext* %6, i32 24, i32 %8), !dbg !5243
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5244
  %10 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5245
  %partition_size = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %10, i32 0, i32 3, !dbg !5246
  %11 = load i32, i32* %partition_size, align 4, !dbg !5246
  %sub = sub nsw i32 %11, 1, !dbg !5247
  call void @put_bits(%struct.PutBitContext* %9, i32 24, i32 %sub), !dbg !5248
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5249
  %13 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5250
  %classifications = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %13, i32 0, i32 4, !dbg !5251
  %14 = load i32, i32* %classifications, align 8, !dbg !5251
  %sub1 = sub nsw i32 %14, 1, !dbg !5252
  call void @put_bits(%struct.PutBitContext* %12, i32 6, i32 %sub1), !dbg !5253
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5254
  %16 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5255
  %classbook = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %16, i32 0, i32 5, !dbg !5256
  %17 = load i32, i32* %classbook, align 4, !dbg !5256
  call void @put_bits(%struct.PutBitContext* %15, i32 8, i32 %17), !dbg !5257
  store i32 0, i32* %i, align 4, !dbg !5258
  br label %for.cond, !dbg !5260

for.cond:                                         ; preds = %for.inc14, %entry
  %18 = load i32, i32* %i, align 4, !dbg !5261
  %19 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5264
  %classifications2 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %19, i32 0, i32 4, !dbg !5265
  %20 = load i32, i32* %classifications2, align 8, !dbg !5265
  %cmp = icmp slt i32 %18, %20, !dbg !5266
  br i1 %cmp, label %for.body, label %for.end16, !dbg !5267

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5268, metadata !1998), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5271, metadata !1998), !dbg !5272
  store i32 0, i32* %tmp, align 4, !dbg !5272
  store i32 0, i32* %j, align 4, !dbg !5273
  br label %for.cond3, !dbg !5275

for.cond3:                                        ; preds = %for.inc, %for.body
  %21 = load i32, i32* %j, align 4, !dbg !5276
  %cmp4 = icmp slt i32 %21, 8, !dbg !5279
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !5280

for.body5:                                        ; preds = %for.cond3
  %22 = load i32, i32* %j, align 4, !dbg !5281
  %idxprom = sext i32 %22 to i64, !dbg !5282
  %23 = load i32, i32* %i, align 4, !dbg !5283
  %idxprom6 = sext i32 %23 to i64, !dbg !5282
  %24 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5282
  %books = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %24, i32 0, i32 6, !dbg !5284
  %25 = load [8 x i8]*, [8 x i8]** %books, align 8, !dbg !5284
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %25, i64 %idxprom6, !dbg !5282
  %arrayidx7 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !5282
  %26 = load i8, i8* %arrayidx7, align 1, !dbg !5282
  %conv = sext i8 %26 to i32, !dbg !5282
  %cmp8 = icmp ne i32 %conv, -1, !dbg !5285
  %conv9 = zext i1 %cmp8 to i32, !dbg !5285
  %27 = load i32, i32* %j, align 4, !dbg !5286
  %shl = shl i32 %conv9, %27, !dbg !5287
  %28 = load i32, i32* %tmp, align 4, !dbg !5288
  %or = or i32 %28, %shl, !dbg !5288
  store i32 %or, i32* %tmp, align 4, !dbg !5288
  br label %for.inc, !dbg !5289

for.inc:                                          ; preds = %for.body5
  %29 = load i32, i32* %j, align 4, !dbg !5290
  %inc = add nsw i32 %29, 1, !dbg !5290
  store i32 %inc, i32* %j, align 4, !dbg !5290
  br label %for.cond3, !dbg !5292, !llvm.loop !5293

for.end:                                          ; preds = %for.cond3
  %30 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5295
  %31 = load i32, i32* %tmp, align 4, !dbg !5296
  %and = and i32 %31, 7, !dbg !5297
  call void @put_bits(%struct.PutBitContext* %30, i32 3, i32 %and), !dbg !5298
  %32 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5299
  %33 = load i32, i32* %tmp, align 4, !dbg !5300
  %cmp10 = icmp sgt i32 %33, 7, !dbg !5301
  %conv11 = zext i1 %cmp10 to i32, !dbg !5301
  call void @put_bits(%struct.PutBitContext* %32, i32 1, i32 %conv11), !dbg !5302
  %34 = load i32, i32* %tmp, align 4, !dbg !5303
  %cmp12 = icmp sgt i32 %34, 7, !dbg !5305
  br i1 %cmp12, label %if.then, label %if.end, !dbg !5306

if.then:                                          ; preds = %for.end
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5307
  %36 = load i32, i32* %tmp, align 4, !dbg !5308
  %shr = ashr i32 %36, 3, !dbg !5309
  call void @put_bits(%struct.PutBitContext* %35, i32 5, i32 %shr), !dbg !5310
  br label %if.end, !dbg !5310

if.end:                                           ; preds = %if.then, %for.end
  br label %for.inc14, !dbg !5311

for.inc14:                                        ; preds = %if.end
  %37 = load i32, i32* %i, align 4, !dbg !5312
  %inc15 = add nsw i32 %37, 1, !dbg !5312
  store i32 %inc15, i32* %i, align 4, !dbg !5312
  br label %for.cond, !dbg !5314, !llvm.loop !5315

for.end16:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5317
  br label %for.cond17, !dbg !5319

for.cond17:                                       ; preds = %for.inc47, %for.end16
  %38 = load i32, i32* %i, align 4, !dbg !5320
  %39 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5323
  %classifications18 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %39, i32 0, i32 4, !dbg !5324
  %40 = load i32, i32* %classifications18, align 8, !dbg !5324
  %cmp19 = icmp slt i32 %38, %40, !dbg !5325
  br i1 %cmp19, label %for.body21, label %for.end49, !dbg !5326

for.body21:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i32* %j23, metadata !5327, metadata !1998), !dbg !5329
  store i32 0, i32* %j23, align 4, !dbg !5330
  br label %for.cond24, !dbg !5332

for.cond24:                                       ; preds = %for.inc44, %for.body21
  %41 = load i32, i32* %j23, align 4, !dbg !5333
  %cmp25 = icmp slt i32 %41, 8, !dbg !5336
  br i1 %cmp25, label %for.body27, label %for.end46, !dbg !5337

for.body27:                                       ; preds = %for.cond24
  %42 = load i32, i32* %j23, align 4, !dbg !5338
  %idxprom28 = sext i32 %42 to i64, !dbg !5340
  %43 = load i32, i32* %i, align 4, !dbg !5341
  %idxprom29 = sext i32 %43 to i64, !dbg !5340
  %44 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5340
  %books30 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %44, i32 0, i32 6, !dbg !5342
  %45 = load [8 x i8]*, [8 x i8]** %books30, align 8, !dbg !5342
  %arrayidx31 = getelementptr inbounds [8 x i8], [8 x i8]* %45, i64 %idxprom29, !dbg !5340
  %arrayidx32 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx31, i64 0, i64 %idxprom28, !dbg !5340
  %46 = load i8, i8* %arrayidx32, align 1, !dbg !5340
  %conv33 = sext i8 %46 to i32, !dbg !5340
  %cmp34 = icmp ne i32 %conv33, -1, !dbg !5343
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !5344

if.then36:                                        ; preds = %for.body27
  %47 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5345
  %48 = load i32, i32* %j23, align 4, !dbg !5346
  %idxprom37 = sext i32 %48 to i64, !dbg !5347
  %49 = load i32, i32* %i, align 4, !dbg !5348
  %idxprom38 = sext i32 %49 to i64, !dbg !5347
  %50 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !5347
  %books39 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %50, i32 0, i32 6, !dbg !5349
  %51 = load [8 x i8]*, [8 x i8]** %books39, align 8, !dbg !5349
  %arrayidx40 = getelementptr inbounds [8 x i8], [8 x i8]* %51, i64 %idxprom38, !dbg !5347
  %arrayidx41 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !5347
  %52 = load i8, i8* %arrayidx41, align 1, !dbg !5347
  %conv42 = sext i8 %52 to i32, !dbg !5347
  call void @put_bits(%struct.PutBitContext* %47, i32 8, i32 %conv42), !dbg !5350
  br label %if.end43, !dbg !5350

if.end43:                                         ; preds = %if.then36, %for.body27
  br label %for.inc44, !dbg !5351

for.inc44:                                        ; preds = %if.end43
  %53 = load i32, i32* %j23, align 4, !dbg !5353
  %inc45 = add nsw i32 %53, 1, !dbg !5353
  store i32 %inc45, i32* %j23, align 4, !dbg !5353
  br label %for.cond24, !dbg !5355, !llvm.loop !5356

for.end46:                                        ; preds = %for.cond24
  br label %for.inc47, !dbg !5358

for.inc47:                                        ; preds = %for.end46
  %54 = load i32, i32* %i, align 4, !dbg !5359
  %inc48 = add nsw i32 %54, 1, !dbg !5359
  store i32 %inc48, i32* %i, align 4, !dbg !5359
  br label %for.cond17, !dbg !5361, !llvm.loop !5362

for.end49:                                        ; preds = %for.cond17
  ret void, !dbg !5364
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

declare i32 @av_xiphlacing(i8*, i32) #3

declare void @av_freep(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @put_float(%struct.PutBitContext* %pb, float %f) #1 !dbg !5365 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %f.addr = alloca float, align 4
  %exp = alloca i32, align 4
  %mant = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5368, metadata !1998), !dbg !5369
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5370, metadata !1998), !dbg !5371
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !5372, metadata !1998), !dbg !5373
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !5374, metadata !1998), !dbg !5375
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5376, metadata !1998), !dbg !5377
  store i32 0, i32* %res, align 4, !dbg !5377
  %0 = load float, float* %f.addr, align 4, !dbg !5378
  %conv = fpext float %0 to double, !dbg !5378
  %call = call double @frexp(double %conv, i32* %exp) #10, !dbg !5379
  %call1 = call double @ldexp(double %call, i32 20) #10, !dbg !5380
  %conv2 = fptosi double %call1 to i32, !dbg !5382
  store i32 %conv2, i32* %mant, align 4, !dbg !5383
  %1 = load i32, i32* %exp, align 4, !dbg !5384
  %add = add nsw i32 %1, 768, !dbg !5384
  store i32 %add, i32* %exp, align 4, !dbg !5384
  %2 = load i32, i32* %mant, align 4, !dbg !5385
  %cmp = icmp slt i32 %2, 0, !dbg !5387
  br i1 %cmp, label %if.then, label %if.end, !dbg !5388

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %res, align 4, !dbg !5389
  %or = or i32 %3, -2147483648, !dbg !5389
  store i32 %or, i32* %res, align 4, !dbg !5389
  %4 = load i32, i32* %mant, align 4, !dbg !5391
  %sub = sub nsw i32 0, %4, !dbg !5392
  store i32 %sub, i32* %mant, align 4, !dbg !5393
  br label %if.end, !dbg !5394

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %mant, align 4, !dbg !5395
  %6 = load i32, i32* %exp, align 4, !dbg !5396
  %shl = shl i32 %6, 21, !dbg !5397
  %or4 = or i32 %5, %shl, !dbg !5398
  %7 = load i32, i32* %res, align 4, !dbg !5399
  %or5 = or i32 %7, %or4, !dbg !5399
  store i32 %or5, i32* %res, align 4, !dbg !5399
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5400
  %9 = load i32, i32* %res, align 4, !dbg !5401
  call void @put_bits32(%struct.PutBitContext* %8, i32 %9), !dbg !5402
  ret void, !dbg !5403
}

; Function Attrs: nounwind
declare double @ldexp(double, i32) #8

; Function Attrs: nounwind
declare double @frexp(double, i32*) #8

declare i32 @ff_af_queue_add(%struct.AudioFrameQueue*, %struct.AVFrame*) #3

declare %struct.AVFrame* @av_frame_clone(%struct.AVFrame*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_bufqueue_add(i8* %log, %struct.FFBufQueue* %queue, %struct.AVFrame* %buf) #7 !dbg !5404 {
entry:
  %log.addr = alloca i8*, align 8
  %queue.addr = alloca %struct.FFBufQueue*, align 8
  %buf.addr = alloca %struct.AVFrame*, align 8
  store i8* %log, i8** %log.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log.addr, metadata !5408, metadata !1998), !dbg !5409
  store %struct.FFBufQueue* %queue, %struct.FFBufQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFBufQueue** %queue.addr, metadata !5410, metadata !1998), !dbg !5411
  store %struct.AVFrame* %buf, %struct.AVFrame** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %buf.addr, metadata !5412, metadata !1998), !dbg !5413
  %0 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5414
  %call = call i32 @ff_bufqueue_is_full(%struct.FFBufQueue* %0), !dbg !5416
  %tobool = icmp ne i32 %call, 0, !dbg !5416
  br i1 %tobool, label %if.then, label %if.end, !dbg !5417

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %log.addr, align 8, !dbg !5418
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i32 0, i32 0)), !dbg !5420
  %2 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5421
  %head = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %2, i32 0, i32 1, !dbg !5422
  %3 = load i16, i16* %head, align 8, !dbg !5422
  %conv = zext i16 %3 to i32, !dbg !5421
  %4 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5423
  %available = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %4, i32 0, i32 2, !dbg !5424
  %5 = load i16, i16* %available, align 2, !dbg !5425
  %dec = add i16 %5, -1, !dbg !5425
  store i16 %dec, i16* %available, align 2, !dbg !5425
  %conv1 = zext i16 %dec to i32, !dbg !5426
  %add = add nsw i32 %conv, %conv1, !dbg !5427
  %rem = srem i32 %add, 64, !dbg !5428
  %idxprom = sext i32 %rem to i64, !dbg !5429
  %6 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5429
  %queue2 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %6, i32 0, i32 0, !dbg !5430
  %arrayidx = getelementptr inbounds [64 x %struct.AVFrame*], [64 x %struct.AVFrame*]* %queue2, i64 0, i64 %idxprom, !dbg !5429
  call void @av_frame_free(%struct.AVFrame** %arrayidx), !dbg !5431
  br label %if.end, !dbg !5432

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.AVFrame*, %struct.AVFrame** %buf.addr, align 8, !dbg !5433
  %8 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5434
  %head3 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %8, i32 0, i32 1, !dbg !5435
  %9 = load i16, i16* %head3, align 8, !dbg !5435
  %conv4 = zext i16 %9 to i32, !dbg !5434
  %10 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5436
  %available5 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %10, i32 0, i32 2, !dbg !5437
  %11 = load i16, i16* %available5, align 2, !dbg !5438
  %inc = add i16 %11, 1, !dbg !5438
  store i16 %inc, i16* %available5, align 2, !dbg !5438
  %conv6 = zext i16 %11 to i32, !dbg !5439
  %add7 = add nsw i32 %conv4, %conv6, !dbg !5440
  %rem8 = srem i32 %add7, 64, !dbg !5441
  %idxprom9 = sext i32 %rem8 to i64, !dbg !5442
  %12 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !5442
  %queue10 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %12, i32 0, i32 0, !dbg !5443
  %arrayidx11 = getelementptr inbounds [64 x %struct.AVFrame*], [64 x %struct.AVFrame*]* %queue10, i64 0, i64 %idxprom9, !dbg !5442
  store %struct.AVFrame* %7, %struct.AVFrame** %arrayidx11, align 8, !dbg !5444
  ret void, !dbg !5445
}

; Function Attrs: nounwind uwtable
define internal %struct.AVFrame* @spawn_empty_frame(%struct.AVCodecContext* %avctx, i32 %channels) #1 !dbg !5446 {
entry:
  %retval = alloca %struct.AVFrame*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %channels.addr = alloca i32, align 4
  %f = alloca %struct.AVFrame*, align 8
  %ch = alloca i32, align 4
  %bps = alloca i64, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5449, metadata !1998), !dbg !5450
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !5451, metadata !1998), !dbg !5452
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %f, metadata !5453, metadata !1998), !dbg !5454
  %call = call %struct.AVFrame* @av_frame_alloc(), !dbg !5455
  store %struct.AVFrame* %call, %struct.AVFrame** %f, align 8, !dbg !5454
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5456, metadata !1998), !dbg !5457
  %0 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5458
  %tobool = icmp ne %struct.AVFrame* %0, null, !dbg !5458
  br i1 %tobool, label %if.end, label %if.then, !dbg !5460

if.then:                                          ; preds = %entry
  store %struct.AVFrame* null, %struct.AVFrame** %retval, align 8, !dbg !5461
  br label %return, !dbg !5461

if.end:                                           ; preds = %entry
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5462
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 84, !dbg !5463
  %2 = load i32, i32* %sample_fmt, align 8, !dbg !5463
  %3 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5464
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i32 0, i32 6, !dbg !5465
  store i32 %2, i32* %format, align 4, !dbg !5466
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5467
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 85, !dbg !5468
  %5 = load i32, i32* %frame_size, align 4, !dbg !5468
  %6 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5469
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 5, !dbg !5470
  store i32 %5, i32* %nb_samples, align 8, !dbg !5471
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5472
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 89, !dbg !5473
  %8 = load i64, i64* %channel_layout, align 8, !dbg !5473
  %9 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5474
  %channel_layout1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 24, !dbg !5475
  store i64 %8, i64* %channel_layout1, align 8, !dbg !5476
  %10 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5477
  %call2 = call i32 @av_frame_get_buffer(%struct.AVFrame* %10, i32 4), !dbg !5479
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5479
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5480

if.then4:                                         ; preds = %if.end
  call void @av_frame_free(%struct.AVFrame** %f), !dbg !5481
  store %struct.AVFrame* null, %struct.AVFrame** %retval, align 8, !dbg !5483
  br label %return, !dbg !5483

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %ch, align 4, !dbg !5484
  br label %for.cond, !dbg !5486

for.cond:                                         ; preds = %for.inc, %if.end5
  %11 = load i32, i32* %ch, align 4, !dbg !5487
  %12 = load i32, i32* %channels.addr, align 4, !dbg !5490
  %cmp = icmp slt i32 %11, %12, !dbg !5491
  br i1 %cmp, label %for.body, label %for.end, !dbg !5492

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %bps, metadata !5493, metadata !1998), !dbg !5495
  %13 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5496
  %format6 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 6, !dbg !5497
  %14 = load i32, i32* %format6, align 4, !dbg !5497
  %call7 = call i32 @av_get_bytes_per_sample(i32 %14), !dbg !5498
  %conv = sext i32 %call7 to i64, !dbg !5498
  store i64 %conv, i64* %bps, align 8, !dbg !5495
  %15 = load i32, i32* %ch, align 4, !dbg !5499
  %idxprom = sext i32 %15 to i64, !dbg !5500
  %16 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5500
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 2, !dbg !5501
  %17 = load i8**, i8*** %extended_data, align 8, !dbg !5501
  %arrayidx = getelementptr inbounds i8*, i8** %17, i64 %idxprom, !dbg !5500
  %18 = load i8*, i8** %arrayidx, align 8, !dbg !5500
  %19 = load i64, i64* %bps, align 8, !dbg !5502
  %20 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5503
  %nb_samples8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 5, !dbg !5504
  %21 = load i32, i32* %nb_samples8, align 8, !dbg !5504
  %conv9 = sext i32 %21 to i64, !dbg !5503
  %mul = mul i64 %19, %conv9, !dbg !5505
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %mul, i32 1, i1 false), !dbg !5506
  br label %for.inc, !dbg !5507

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %ch, align 4, !dbg !5508
  %inc = add nsw i32 %22, 1, !dbg !5508
  store i32 %inc, i32* %ch, align 4, !dbg !5508
  br label %for.cond, !dbg !5510, !llvm.loop !5511

for.end:                                          ; preds = %for.cond
  %23 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !5513
  store %struct.AVFrame* %23, %struct.AVFrame** %retval, align 8, !dbg !5514
  br label %return, !dbg !5514

return:                                           ; preds = %for.end, %if.then4, %if.then
  %24 = load %struct.AVFrame*, %struct.AVFrame** %retval, align 8, !dbg !5515
  ret %struct.AVFrame* %24, !dbg !5515
}

; Function Attrs: nounwind uwtable
define internal void @move_audio(%struct.vorbis_enc_context* %venc, i32 %sf_size) #1 !dbg !5516 {
entry:
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %sf_size.addr = alloca i32, align 4
  %cur = alloca %struct.AVFrame*, align 8
  %frame_size = alloca i32, align 4
  %subframes = alloca i32, align 4
  %sf = alloca i32, align 4
  %ch = alloca i32, align 4
  %offset = alloca float*, align 8
  %save = alloca float*, align 8
  %input = alloca float*, align 8
  %len = alloca i64, align 8
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !5519, metadata !1998), !dbg !5520
  store i32 %sf_size, i32* %sf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf_size.addr, metadata !5521, metadata !1998), !dbg !5522
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %cur, metadata !5523, metadata !1998), !dbg !5524
  store %struct.AVFrame* null, %struct.AVFrame** %cur, align 8, !dbg !5524
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !5525, metadata !1998), !dbg !5526
  %0 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5527
  %log2_blocksize = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %0, i32 0, i32 2, !dbg !5528
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize, i64 0, i64 1, !dbg !5527
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5527
  %sub = sub nsw i32 %1, 1, !dbg !5529
  %shl = shl i32 1, %sub, !dbg !5530
  store i32 %shl, i32* %frame_size, align 4, !dbg !5526
  call void @llvm.dbg.declare(metadata i32* %subframes, metadata !5531, metadata !1998), !dbg !5532
  %2 = load i32, i32* %frame_size, align 4, !dbg !5533
  %3 = load i32, i32* %sf_size.addr, align 4, !dbg !5534
  %div = sdiv i32 %2, %3, !dbg !5535
  store i32 %div, i32* %subframes, align 4, !dbg !5532
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !5536, metadata !1998), !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5538, metadata !1998), !dbg !5539
  %4 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5540
  %have_saved = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %4, i32 0, i32 5, !dbg !5542
  %5 = load i32, i32* %have_saved, align 8, !dbg !5542
  %tobool = icmp ne i32 %5, 0, !dbg !5540
  br i1 %tobool, label %if.then, label %if.else, !dbg !5543

if.then:                                          ; preds = %entry
  store i32 0, i32* %ch, align 4, !dbg !5544
  br label %for.cond, !dbg !5546

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %ch, align 4, !dbg !5547
  %7 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5550
  %channels = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %7, i32 0, i32 0, !dbg !5551
  %8 = load i32, i32* %channels, align 8, !dbg !5551
  %cmp = icmp slt i32 %6, %8, !dbg !5552
  br i1 %cmp, label %for.body, label %for.end, !dbg !5553

for.body:                                         ; preds = %for.cond
  %9 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5554
  %samples = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %9, i32 0, i32 7, !dbg !5555
  %10 = load float*, float** %samples, align 8, !dbg !5555
  %11 = load i32, i32* %ch, align 4, !dbg !5556
  %mul = mul nsw i32 2, %11, !dbg !5557
  %12 = load i32, i32* %frame_size, align 4, !dbg !5558
  %mul1 = mul nsw i32 %mul, %12, !dbg !5559
  %idx.ext = sext i32 %mul1 to i64, !dbg !5560
  %add.ptr = getelementptr inbounds float, float* %10, i64 %idx.ext, !dbg !5560
  %13 = bitcast float* %add.ptr to i8*, !dbg !5561
  %14 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5562
  %saved = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %14, i32 0, i32 6, !dbg !5563
  %15 = load float*, float** %saved, align 8, !dbg !5563
  %16 = load i32, i32* %ch, align 4, !dbg !5564
  %17 = load i32, i32* %frame_size, align 4, !dbg !5565
  %mul2 = mul nsw i32 %16, %17, !dbg !5566
  %idx.ext3 = sext i32 %mul2 to i64, !dbg !5567
  %add.ptr4 = getelementptr inbounds float, float* %15, i64 %idx.ext3, !dbg !5567
  %18 = bitcast float* %add.ptr4 to i8*, !dbg !5561
  %19 = load i32, i32* %frame_size, align 4, !dbg !5568
  %conv = sext i32 %19 to i64, !dbg !5568
  %mul5 = mul i64 4, %conv, !dbg !5569
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %18, i64 %mul5, i32 4, i1 false), !dbg !5561
  br label %for.inc, !dbg !5561

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %ch, align 4, !dbg !5570
  %inc = add nsw i32 %20, 1, !dbg !5570
  store i32 %inc, i32* %ch, align 4, !dbg !5570
  br label %for.cond, !dbg !5572, !llvm.loop !5573

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5575

if.else:                                          ; preds = %entry
  store i32 0, i32* %ch, align 4, !dbg !5577
  br label %for.cond6, !dbg !5579

for.cond6:                                        ; preds = %for.inc18, %if.else
  %21 = load i32, i32* %ch, align 4, !dbg !5580
  %22 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5583
  %channels7 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %22, i32 0, i32 0, !dbg !5584
  %23 = load i32, i32* %channels7, align 8, !dbg !5584
  %cmp8 = icmp slt i32 %21, %23, !dbg !5585
  br i1 %cmp8, label %for.body10, label %for.end20, !dbg !5586

for.body10:                                       ; preds = %for.cond6
  %24 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5587
  %samples11 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %24, i32 0, i32 7, !dbg !5588
  %25 = load float*, float** %samples11, align 8, !dbg !5588
  %26 = load i32, i32* %ch, align 4, !dbg !5589
  %mul12 = mul nsw i32 2, %26, !dbg !5590
  %27 = load i32, i32* %frame_size, align 4, !dbg !5591
  %mul13 = mul nsw i32 %mul12, %27, !dbg !5592
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !5593
  %add.ptr15 = getelementptr inbounds float, float* %25, i64 %idx.ext14, !dbg !5593
  %28 = bitcast float* %add.ptr15 to i8*, !dbg !5594
  %29 = load i32, i32* %frame_size, align 4, !dbg !5595
  %conv16 = sext i32 %29 to i64, !dbg !5595
  %mul17 = mul i64 4, %conv16, !dbg !5596
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 %mul17, i32 4, i1 false), !dbg !5594
  br label %for.inc18, !dbg !5594

for.inc18:                                        ; preds = %for.body10
  %30 = load i32, i32* %ch, align 4, !dbg !5597
  %inc19 = add nsw i32 %30, 1, !dbg !5597
  store i32 %inc19, i32* %ch, align 4, !dbg !5597
  br label %for.cond6, !dbg !5599, !llvm.loop !5600

for.end20:                                        ; preds = %for.cond6
  br label %if.end

if.end:                                           ; preds = %for.end20, %for.end
  store i32 0, i32* %sf, align 4, !dbg !5602
  br label %for.cond21, !dbg !5604

for.cond21:                                       ; preds = %for.inc53, %if.end
  %31 = load i32, i32* %sf, align 4, !dbg !5605
  %32 = load i32, i32* %subframes, align 4, !dbg !5608
  %cmp22 = icmp slt i32 %31, %32, !dbg !5609
  br i1 %cmp22, label %for.body24, label %for.end55, !dbg !5610

for.body24:                                       ; preds = %for.cond21
  %33 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5611
  %bufqueue = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %33, i32 0, i32 13, !dbg !5613
  %call = call %struct.AVFrame* @ff_bufqueue_get(%struct.FFBufQueue* %bufqueue), !dbg !5614
  store %struct.AVFrame* %call, %struct.AVFrame** %cur, align 8, !dbg !5615
  store i32 0, i32* %ch, align 4, !dbg !5616
  br label %for.cond25, !dbg !5618

for.cond25:                                       ; preds = %for.inc50, %for.body24
  %34 = load i32, i32* %ch, align 4, !dbg !5619
  %35 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5622
  %channels26 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %35, i32 0, i32 0, !dbg !5623
  %36 = load i32, i32* %channels26, align 8, !dbg !5623
  %cmp27 = icmp slt i32 %34, %36, !dbg !5624
  br i1 %cmp27, label %for.body29, label %for.end52, !dbg !5625

for.body29:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata float** %offset, metadata !5626, metadata !1998), !dbg !5628
  %37 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5629
  %samples30 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %37, i32 0, i32 7, !dbg !5630
  %38 = load float*, float** %samples30, align 8, !dbg !5630
  %39 = load i32, i32* %ch, align 4, !dbg !5631
  %mul31 = mul nsw i32 2, %39, !dbg !5632
  %40 = load i32, i32* %frame_size, align 4, !dbg !5633
  %mul32 = mul nsw i32 %mul31, %40, !dbg !5634
  %idx.ext33 = sext i32 %mul32 to i64, !dbg !5635
  %add.ptr34 = getelementptr inbounds float, float* %38, i64 %idx.ext33, !dbg !5635
  %41 = load i32, i32* %frame_size, align 4, !dbg !5636
  %idx.ext35 = sext i32 %41 to i64, !dbg !5637
  %add.ptr36 = getelementptr inbounds float, float* %add.ptr34, i64 %idx.ext35, !dbg !5637
  store float* %add.ptr36, float** %offset, align 8, !dbg !5628
  call void @llvm.dbg.declare(metadata float** %save, metadata !5638, metadata !1998), !dbg !5639
  %42 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5640
  %saved37 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %42, i32 0, i32 6, !dbg !5641
  %43 = load float*, float** %saved37, align 8, !dbg !5641
  %44 = load i32, i32* %ch, align 4, !dbg !5642
  %45 = load i32, i32* %frame_size, align 4, !dbg !5643
  %mul38 = mul nsw i32 %44, %45, !dbg !5644
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !5645
  %add.ptr40 = getelementptr inbounds float, float* %43, i64 %idx.ext39, !dbg !5645
  store float* %add.ptr40, float** %save, align 8, !dbg !5639
  call void @llvm.dbg.declare(metadata float** %input, metadata !5646, metadata !1998), !dbg !5647
  %46 = load i32, i32* %ch, align 4, !dbg !5648
  %idxprom = sext i32 %46 to i64, !dbg !5649
  %47 = load %struct.AVFrame*, %struct.AVFrame** %cur, align 8, !dbg !5649
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %47, i32 0, i32 2, !dbg !5650
  %48 = load i8**, i8*** %extended_data, align 8, !dbg !5650
  %arrayidx41 = getelementptr inbounds i8*, i8** %48, i64 %idxprom, !dbg !5649
  %49 = load i8*, i8** %arrayidx41, align 8, !dbg !5649
  %50 = bitcast i8* %49 to float*, !dbg !5651
  store float* %50, float** %input, align 8, !dbg !5647
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5652, metadata !1998), !dbg !5654
  %51 = load %struct.AVFrame*, %struct.AVFrame** %cur, align 8, !dbg !5655
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %51, i32 0, i32 5, !dbg !5656
  %52 = load i32, i32* %nb_samples, align 8, !dbg !5656
  %conv42 = sext i32 %52 to i64, !dbg !5655
  %mul43 = mul i64 %conv42, 4, !dbg !5657
  store i64 %mul43, i64* %len, align 8, !dbg !5654
  %53 = load float*, float** %offset, align 8, !dbg !5658
  %54 = load i32, i32* %sf, align 4, !dbg !5659
  %55 = load i32, i32* %sf_size.addr, align 4, !dbg !5660
  %mul44 = mul nsw i32 %54, %55, !dbg !5661
  %idx.ext45 = sext i32 %mul44 to i64, !dbg !5662
  %add.ptr46 = getelementptr inbounds float, float* %53, i64 %idx.ext45, !dbg !5662
  %56 = bitcast float* %add.ptr46 to i8*, !dbg !5663
  %57 = load float*, float** %input, align 8, !dbg !5664
  %58 = bitcast float* %57 to i8*, !dbg !5663
  %59 = load i64, i64* %len, align 8, !dbg !5665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %58, i64 %59, i32 4, i1 false), !dbg !5663
  %60 = load float*, float** %save, align 8, !dbg !5666
  %61 = load i32, i32* %sf, align 4, !dbg !5667
  %62 = load i32, i32* %sf_size.addr, align 4, !dbg !5668
  %mul47 = mul nsw i32 %61, %62, !dbg !5669
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !5670
  %add.ptr49 = getelementptr inbounds float, float* %60, i64 %idx.ext48, !dbg !5670
  %63 = bitcast float* %add.ptr49 to i8*, !dbg !5671
  %64 = load float*, float** %input, align 8, !dbg !5672
  %65 = bitcast float* %64 to i8*, !dbg !5671
  %66 = load i64, i64* %len, align 8, !dbg !5673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %65, i64 %66, i32 4, i1 false), !dbg !5671
  br label %for.inc50, !dbg !5674

for.inc50:                                        ; preds = %for.body29
  %67 = load i32, i32* %ch, align 4, !dbg !5675
  %inc51 = add nsw i32 %67, 1, !dbg !5675
  store i32 %inc51, i32* %ch, align 4, !dbg !5675
  br label %for.cond25, !dbg !5677, !llvm.loop !5678

for.end52:                                        ; preds = %for.cond25
  call void @av_frame_free(%struct.AVFrame** %cur), !dbg !5680
  br label %for.inc53, !dbg !5681

for.inc53:                                        ; preds = %for.end52
  %68 = load i32, i32* %sf, align 4, !dbg !5682
  %inc54 = add nsw i32 %68, 1, !dbg !5682
  store i32 %inc54, i32* %sf, align 4, !dbg !5682
  br label %for.cond21, !dbg !5684, !llvm.loop !5685

for.end55:                                        ; preds = %for.cond21
  %69 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5687
  %have_saved56 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %69, i32 0, i32 5, !dbg !5688
  store i32 1, i32* %have_saved56, align 8, !dbg !5689
  %70 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5690
  %scratch = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %70, i32 0, i32 10, !dbg !5691
  %71 = load float*, float** %scratch, align 8, !dbg !5691
  %72 = bitcast float* %71 to i8*, !dbg !5692
  %73 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5693
  %samples57 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %73, i32 0, i32 7, !dbg !5694
  %74 = load float*, float** %samples57, align 8, !dbg !5694
  %75 = bitcast float* %74 to i8*, !dbg !5692
  %76 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5695
  %channels58 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %76, i32 0, i32 0, !dbg !5696
  %77 = load i32, i32* %channels58, align 8, !dbg !5696
  %mul59 = mul nsw i32 2, %77, !dbg !5697
  %78 = load i32, i32* %frame_size, align 4, !dbg !5698
  %mul60 = mul nsw i32 %mul59, %78, !dbg !5699
  %conv61 = sext i32 %mul60 to i64, !dbg !5700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %75, i64 %conv61, i32 4, i1 false), !dbg !5692
  ret void, !dbg !5701
}

; Function Attrs: nounwind uwtable
define internal i32 @apply_window_and_mdct(%struct.vorbis_enc_context* %venc) #1 !dbg !5702 {
entry:
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %channel = alloca i32, align 4
  %win = alloca float*, align 8
  %window_len = alloca i32, align 4
  %n = alloca float, align 4
  %fdsp = alloca %struct.AVFloatDSPContext*, align 8
  %offset = alloca float*, align 8
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !5705, metadata !1998), !dbg !5706
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !5707, metadata !1998), !dbg !5708
  call void @llvm.dbg.declare(metadata float** %win, metadata !5709, metadata !1998), !dbg !5710
  %0 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5711
  %win1 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %0, i32 0, i32 4, !dbg !5712
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %win1, i64 0, i64 1, !dbg !5711
  %1 = load float*, float** %arrayidx, align 8, !dbg !5711
  store float* %1, float** %win, align 8, !dbg !5710
  call void @llvm.dbg.declare(metadata i32* %window_len, metadata !5713, metadata !1998), !dbg !5714
  %2 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5715
  %log2_blocksize = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %2, i32 0, i32 2, !dbg !5716
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize, i64 0, i64 1, !dbg !5715
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !5715
  %sub = sub nsw i32 %3, 1, !dbg !5717
  %shl = shl i32 1, %sub, !dbg !5718
  store i32 %shl, i32* %window_len, align 4, !dbg !5714
  call void @llvm.dbg.declare(metadata float* %n, metadata !5719, metadata !1998), !dbg !5720
  %4 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5721
  %log2_blocksize3 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %4, i32 0, i32 2, !dbg !5722
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %log2_blocksize3, i64 0, i64 1, !dbg !5721
  %5 = load i32, i32* %arrayidx4, align 4, !dbg !5721
  %shl5 = shl i32 1, %5, !dbg !5723
  %conv = sitofp i32 %shl5 to float, !dbg !5724
  %conv6 = fpext float %conv to double, !dbg !5724
  %div = fdiv double %conv6, 4.000000e+00, !dbg !5725
  %conv7 = fptrunc double %div to float, !dbg !5724
  store float %conv7, float* %n, align 4, !dbg !5720
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp, metadata !5726, metadata !1998), !dbg !5727
  %6 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5728
  %fdsp8 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %6, i32 0, i32 25, !dbg !5729
  %7 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp8, align 8, !dbg !5729
  store %struct.AVFloatDSPContext* %7, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5727
  store i32 0, i32* %channel, align 4, !dbg !5730
  br label %for.cond, !dbg !5732

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %channel, align 4, !dbg !5733
  %9 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5736
  %channels = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %9, i32 0, i32 0, !dbg !5737
  %10 = load i32, i32* %channels, align 8, !dbg !5737
  %cmp = icmp slt i32 %8, %10, !dbg !5738
  br i1 %cmp, label %for.body, label %for.end, !dbg !5739

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %offset, metadata !5740, metadata !1998), !dbg !5742
  %11 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5743
  %samples = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %11, i32 0, i32 7, !dbg !5744
  %12 = load float*, float** %samples, align 8, !dbg !5744
  %13 = load i32, i32* %channel, align 4, !dbg !5745
  %14 = load i32, i32* %window_len, align 4, !dbg !5746
  %mul = mul nsw i32 %13, %14, !dbg !5747
  %mul10 = mul nsw i32 %mul, 2, !dbg !5748
  %idx.ext = sext i32 %mul10 to i64, !dbg !5749
  %add.ptr = getelementptr inbounds float, float* %12, i64 %idx.ext, !dbg !5749
  store float* %add.ptr, float** %offset, align 8, !dbg !5742
  %15 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5750
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %15, i32 0, i32 0, !dbg !5751
  %16 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !5751
  %17 = load float*, float** %offset, align 8, !dbg !5752
  %18 = load float*, float** %offset, align 8, !dbg !5753
  %19 = load float*, float** %win, align 8, !dbg !5754
  %20 = load i32, i32* %window_len, align 4, !dbg !5755
  call void %16(float* %17, float* %18, float* %19, i32 %20), !dbg !5750
  %21 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5756
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %21, i32 0, i32 3, !dbg !5757
  %22 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !5757
  %23 = load float*, float** %offset, align 8, !dbg !5758
  %24 = load float*, float** %offset, align 8, !dbg !5759
  %25 = load float, float* %n, align 4, !dbg !5760
  %div11 = fdiv float 1.000000e+00, %25, !dbg !5761
  %26 = load i32, i32* %window_len, align 4, !dbg !5762
  call void %22(float* %23, float* %24, float %div11, i32 %26), !dbg !5756
  %27 = load i32, i32* %window_len, align 4, !dbg !5763
  %28 = load float*, float** %offset, align 8, !dbg !5764
  %idx.ext12 = sext i32 %27 to i64, !dbg !5764
  %add.ptr13 = getelementptr inbounds float, float* %28, i64 %idx.ext12, !dbg !5764
  store float* %add.ptr13, float** %offset, align 8, !dbg !5764
  %29 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5765
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %29, i32 0, i32 7, !dbg !5766
  %30 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !5766
  %31 = load float*, float** %offset, align 8, !dbg !5767
  %32 = load float*, float** %offset, align 8, !dbg !5768
  %33 = load float*, float** %win, align 8, !dbg !5769
  %34 = load i32, i32* %window_len, align 4, !dbg !5770
  call void %30(float* %31, float* %32, float* %33, i32 %34), !dbg !5765
  %35 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5771
  %vector_fmul_scalar14 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %35, i32 0, i32 3, !dbg !5772
  %36 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar14, align 8, !dbg !5772
  %37 = load float*, float** %offset, align 8, !dbg !5773
  %38 = load float*, float** %offset, align 8, !dbg !5774
  %39 = load float, float* %n, align 4, !dbg !5775
  %div15 = fdiv float 1.000000e+00, %39, !dbg !5776
  %40 = load i32, i32* %window_len, align 4, !dbg !5777
  call void %36(float* %37, float* %38, float %div15, i32 %40), !dbg !5771
  %41 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5778
  %mdct = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %41, i32 0, i32 3, !dbg !5779
  %arrayidx16 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %mdct, i64 0, i64 1, !dbg !5778
  %mdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %arrayidx16, i32 0, i32 12, !dbg !5780
  %42 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %mdct_calc, align 8, !dbg !5780
  %43 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5781
  %mdct17 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %43, i32 0, i32 3, !dbg !5782
  %arrayidx18 = getelementptr inbounds [2 x %struct.FFTContext], [2 x %struct.FFTContext]* %mdct17, i64 0, i64 1, !dbg !5781
  %44 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5783
  %coeffs = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %44, i32 0, i32 9, !dbg !5784
  %45 = load float*, float** %coeffs, align 8, !dbg !5784
  %46 = load i32, i32* %channel, align 4, !dbg !5785
  %47 = load i32, i32* %window_len, align 4, !dbg !5786
  %mul19 = mul nsw i32 %46, %47, !dbg !5787
  %idx.ext20 = sext i32 %mul19 to i64, !dbg !5788
  %add.ptr21 = getelementptr inbounds float, float* %45, i64 %idx.ext20, !dbg !5788
  %48 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5789
  %samples22 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %48, i32 0, i32 7, !dbg !5790
  %49 = load float*, float** %samples22, align 8, !dbg !5790
  %50 = load i32, i32* %channel, align 4, !dbg !5791
  %51 = load i32, i32* %window_len, align 4, !dbg !5792
  %mul23 = mul nsw i32 %50, %51, !dbg !5793
  %mul24 = mul nsw i32 %mul23, 2, !dbg !5794
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !5795
  %add.ptr26 = getelementptr inbounds float, float* %49, i64 %idx.ext25, !dbg !5795
  call void %42(%struct.FFTContext* %arrayidx18, float* %add.ptr21, float* %add.ptr26), !dbg !5778
  br label %for.inc, !dbg !5796

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %channel, align 4, !dbg !5797
  %inc = add nsw i32 %52, 1, !dbg !5797
  store i32 %inc, i32* %channel, align 4, !dbg !5797
  br label %for.cond, !dbg !5799, !llvm.loop !5800

for.end:                                          ; preds = %for.cond
  ret i32 1, !dbg !5802
}

declare i32 @ff_alloc_packet2(%struct.AVCodecContext*, %struct.AVPacket*, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal void @floor_fit(%struct.vorbis_enc_context* %venc, %struct.vorbis_enc_floor* %fc, float* %coeffs, i16* %posts, i32 %samples) #1 !dbg !5803 {
entry:
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %fc.addr = alloca %struct.vorbis_enc_floor*, align 8
  %coeffs.addr = alloca float*, align 8
  %posts.addr = alloca i16*, align 8
  %samples.addr = alloca i32, align 4
  %range = alloca i32, align 4
  %i = alloca i32, align 4
  %tot_average = alloca float, align 4
  %averages = alloca [34 x float], align 16
  %position = alloca i32, align 4
  %average = alloca float, align 4
  %j = alloca i32, align 4
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !5806, metadata !1998), !dbg !5807
  store %struct.vorbis_enc_floor* %fc, %struct.vorbis_enc_floor** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor** %fc.addr, metadata !5808, metadata !1998), !dbg !5809
  store float* %coeffs, float** %coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coeffs.addr, metadata !5810, metadata !1998), !dbg !5811
  store i16* %posts, i16** %posts.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %posts.addr, metadata !5812, metadata !1998), !dbg !5813
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !5814, metadata !1998), !dbg !5815
  call void @llvm.dbg.declare(metadata i32* %range, metadata !5816, metadata !1998), !dbg !5817
  %0 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5818
  %multiplier = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %0, i32 0, i32 4, !dbg !5819
  %1 = load i32, i32* %multiplier, align 8, !dbg !5819
  %div = sdiv i32 255, %1, !dbg !5820
  %add = add nsw i32 %div, 1, !dbg !5821
  store i32 %add, i32* %range, align 4, !dbg !5817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5822, metadata !1998), !dbg !5823
  call void @llvm.dbg.declare(metadata float* %tot_average, metadata !5824, metadata !1998), !dbg !5825
  store float 0.000000e+00, float* %tot_average, align 4, !dbg !5825
  call void @llvm.dbg.declare(metadata [34 x float]* %averages, metadata !5826, metadata !1998), !dbg !5828
  store i32 0, i32* %i, align 4, !dbg !5829
  br label %for.cond, !dbg !5831

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5832
  %3 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5835
  %values = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %3, i32 0, i32 6, !dbg !5836
  %4 = load i32, i32* %values, align 8, !dbg !5836
  %cmp = icmp slt i32 %2, %4, !dbg !5837
  br i1 %cmp, label %for.body, label %for.end, !dbg !5838

for.body:                                         ; preds = %for.cond
  %5 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5839
  %6 = load float*, float** %coeffs.addr, align 8, !dbg !5841
  %7 = load i32, i32* %i, align 4, !dbg !5842
  %call = call float @get_floor_average(%struct.vorbis_enc_floor* %5, float* %6, i32 %7), !dbg !5843
  %8 = load i32, i32* %i, align 4, !dbg !5844
  %idxprom = sext i32 %8 to i64, !dbg !5845
  %arrayidx = getelementptr inbounds [34 x float], [34 x float]* %averages, i64 0, i64 %idxprom, !dbg !5845
  store float %call, float* %arrayidx, align 4, !dbg !5846
  %9 = load i32, i32* %i, align 4, !dbg !5847
  %idxprom1 = sext i32 %9 to i64, !dbg !5848
  %arrayidx2 = getelementptr inbounds [34 x float], [34 x float]* %averages, i64 0, i64 %idxprom1, !dbg !5848
  %10 = load float, float* %arrayidx2, align 4, !dbg !5848
  %11 = load float, float* %tot_average, align 4, !dbg !5849
  %add3 = fadd float %11, %10, !dbg !5849
  store float %add3, float* %tot_average, align 4, !dbg !5849
  br label %for.inc, !dbg !5850

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !5851
  %inc = add nsw i32 %12, 1, !dbg !5851
  store i32 %inc, i32* %i, align 4, !dbg !5851
  br label %for.cond, !dbg !5853, !llvm.loop !5854

for.end:                                          ; preds = %for.cond
  %13 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5856
  %values4 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %13, i32 0, i32 6, !dbg !5857
  %14 = load i32, i32* %values4, align 8, !dbg !5857
  %conv = sitofp i32 %14 to float, !dbg !5856
  %15 = load float, float* %tot_average, align 4, !dbg !5858
  %div5 = fdiv float %15, %conv, !dbg !5858
  store float %div5, float* %tot_average, align 4, !dbg !5858
  %16 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !5859
  %quality = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %16, i32 0, i32 11, !dbg !5860
  %17 = load float, float* %quality, align 8, !dbg !5860
  %18 = load float, float* %tot_average, align 4, !dbg !5861
  %div6 = fdiv float %18, %17, !dbg !5861
  store float %div6, float* %tot_average, align 4, !dbg !5861
  store i32 0, i32* %i, align 4, !dbg !5862
  br label %for.cond7, !dbg !5864

for.cond7:                                        ; preds = %for.inc48, %for.end
  %19 = load i32, i32* %i, align 4, !dbg !5865
  %20 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5868
  %values8 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %20, i32 0, i32 6, !dbg !5869
  %21 = load i32, i32* %values8, align 8, !dbg !5869
  %cmp9 = icmp slt i32 %19, %21, !dbg !5870
  br i1 %cmp9, label %for.body11, label %for.end50, !dbg !5871

for.body11:                                       ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata i32* %position, metadata !5872, metadata !1998), !dbg !5874
  %22 = load i32, i32* %i, align 4, !dbg !5875
  %idxprom12 = sext i32 %22 to i64, !dbg !5876
  %23 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5876
  %list = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %23, i32 0, i32 7, !dbg !5877
  %24 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list, align 8, !dbg !5877
  %arrayidx13 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %24, i64 %idxprom12, !dbg !5876
  %sort = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx13, i32 0, i32 1, !dbg !5878
  %25 = load i16, i16* %sort, align 2, !dbg !5878
  %idxprom14 = zext i16 %25 to i64, !dbg !5879
  %26 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5879
  %list15 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %26, i32 0, i32 7, !dbg !5880
  %27 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list15, align 8, !dbg !5880
  %arrayidx16 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %27, i64 %idxprom14, !dbg !5879
  %x = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx16, i32 0, i32 0, !dbg !5881
  %28 = load i16, i16* %x, align 2, !dbg !5881
  %conv17 = zext i16 %28 to i32, !dbg !5879
  store i32 %conv17, i32* %position, align 4, !dbg !5874
  call void @llvm.dbg.declare(metadata float* %average, metadata !5882, metadata !1998), !dbg !5883
  %29 = load i32, i32* %i, align 4, !dbg !5884
  %idxprom18 = sext i32 %29 to i64, !dbg !5885
  %arrayidx19 = getelementptr inbounds [34 x float], [34 x float]* %averages, i64 0, i64 %idxprom18, !dbg !5885
  %30 = load float, float* %arrayidx19, align 4, !dbg !5885
  store float %30, float* %average, align 4, !dbg !5883
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5886, metadata !1998), !dbg !5887
  %31 = load float, float* %tot_average, align 4, !dbg !5888
  %32 = load float, float* %average, align 4, !dbg !5889
  %mul = fmul float %31, %32, !dbg !5890
  %conv20 = fpext float %mul to double, !dbg !5888
  %call21 = call double @sqrt(double %conv20) #10, !dbg !5891
  %33 = load i32, i32* %position, align 4, !dbg !5892
  %conv22 = sitofp i32 %33 to float, !dbg !5892
  %mul23 = fmul float %conv22, 0x3F747AE140000000, !dbg !5893
  %conv24 = fpext float %mul23 to double, !dbg !5892
  %call25 = call double @pow(double 1.250000e+00, double %conv24) #10, !dbg !5894
  %mul26 = fmul double %call21, %call25, !dbg !5896
  %conv27 = fptrunc double %mul26 to float, !dbg !5891
  store float %conv27, float* %average, align 4, !dbg !5897
  store i32 0, i32* %j, align 4, !dbg !5898
  br label %for.cond28, !dbg !5900

for.cond28:                                       ; preds = %for.inc38, %for.body11
  %34 = load i32, i32* %j, align 4, !dbg !5901
  %35 = load i32, i32* %range, align 4, !dbg !5904
  %sub = sub nsw i32 %35, 1, !dbg !5905
  %cmp29 = icmp slt i32 %34, %sub, !dbg !5906
  br i1 %cmp29, label %for.body31, label %for.end40, !dbg !5907

for.body31:                                       ; preds = %for.cond28
  %36 = load i32, i32* %j, align 4, !dbg !5908
  %37 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5910
  %multiplier32 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %37, i32 0, i32 4, !dbg !5911
  %38 = load i32, i32* %multiplier32, align 8, !dbg !5911
  %mul33 = mul nsw i32 %36, %38, !dbg !5912
  %idxprom34 = sext i32 %mul33 to i64, !dbg !5913
  %arrayidx35 = getelementptr inbounds [256 x float], [256 x float]* @ff_vorbis_floor1_inverse_db_table, i64 0, i64 %idxprom34, !dbg !5913
  %39 = load float, float* %arrayidx35, align 4, !dbg !5913
  %40 = load float, float* %average, align 4, !dbg !5914
  %cmp36 = fcmp ogt float %39, %40, !dbg !5915
  br i1 %cmp36, label %if.then, label %if.end, !dbg !5916

if.then:                                          ; preds = %for.body31
  br label %for.end40, !dbg !5917

if.end:                                           ; preds = %for.body31
  br label %for.inc38, !dbg !5918

for.inc38:                                        ; preds = %if.end
  %41 = load i32, i32* %j, align 4, !dbg !5920
  %inc39 = add nsw i32 %41, 1, !dbg !5920
  store i32 %inc39, i32* %j, align 4, !dbg !5920
  br label %for.cond28, !dbg !5922, !llvm.loop !5923

for.end40:                                        ; preds = %if.then, %for.cond28
  %42 = load i32, i32* %j, align 4, !dbg !5925
  %conv41 = trunc i32 %42 to i16, !dbg !5925
  %43 = load i32, i32* %i, align 4, !dbg !5926
  %idxprom42 = sext i32 %43 to i64, !dbg !5927
  %44 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5927
  %list43 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %44, i32 0, i32 7, !dbg !5928
  %45 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list43, align 8, !dbg !5928
  %arrayidx44 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %45, i64 %idxprom42, !dbg !5927
  %sort45 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx44, i32 0, i32 1, !dbg !5929
  %46 = load i16, i16* %sort45, align 2, !dbg !5929
  %idxprom46 = zext i16 %46 to i64, !dbg !5930
  %47 = load i16*, i16** %posts.addr, align 8, !dbg !5930
  %arrayidx47 = getelementptr inbounds i16, i16* %47, i64 %idxprom46, !dbg !5930
  store i16 %conv41, i16* %arrayidx47, align 2, !dbg !5931
  br label %for.inc48, !dbg !5932

for.inc48:                                        ; preds = %for.end40
  %48 = load i32, i32* %i, align 4, !dbg !5933
  %inc49 = add nsw i32 %48, 1, !dbg !5933
  store i32 %inc49, i32* %i, align 4, !dbg !5933
  br label %for.cond7, !dbg !5935, !llvm.loop !5936

for.end50:                                        ; preds = %for.cond7
  ret void, !dbg !5938
}

; Function Attrs: nounwind uwtable
define internal i32 @floor_encode(%struct.vorbis_enc_context* %venc, %struct.vorbis_enc_floor* %fc, %struct.PutBitContext* %pb, i16* %posts, float* %floor, i32 %samples) #1 !dbg !5939 {
entry:
  %retval = alloca i32, align 4
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %fc.addr = alloca %struct.vorbis_enc_floor*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %posts.addr = alloca i16*, align 8
  %floor.addr = alloca float*, align 8
  %samples.addr = alloca i32, align 4
  %range = alloca i32, align 4
  %coded = alloca [34 x i32], align 16
  %i = alloca i32, align 4
  %counter = alloca i32, align 4
  %predicted = alloca i32, align 4
  %highroom = alloca i32, align 4
  %lowroom = alloca i32, align 4
  %room = alloca i32, align 4
  %c = alloca %struct.vorbis_enc_floor_class*, align 8
  %k = alloca i32, align 4
  %cval = alloca i32, align 4
  %csub = alloca i32, align 4
  %book = alloca %struct.vorbis_enc_codebook*, align 8
  %cshift = alloca i32, align 4
  %l = alloca i32, align 4
  %maxval = alloca i32, align 4
  %book214 = alloca i32, align 4
  %entry219 = alloca i32, align 4
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !5942, metadata !1998), !dbg !5943
  store %struct.vorbis_enc_floor* %fc, %struct.vorbis_enc_floor** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor** %fc.addr, metadata !5944, metadata !1998), !dbg !5945
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5946, metadata !1998), !dbg !5947
  store i16* %posts, i16** %posts.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %posts.addr, metadata !5948, metadata !1998), !dbg !5949
  store float* %floor, float** %floor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %floor.addr, metadata !5950, metadata !1998), !dbg !5951
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !5952, metadata !1998), !dbg !5953
  call void @llvm.dbg.declare(metadata i32* %range, metadata !5954, metadata !1998), !dbg !5955
  %0 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !5956
  %multiplier = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %0, i32 0, i32 4, !dbg !5957
  %1 = load i32, i32* %multiplier, align 8, !dbg !5957
  %div = sdiv i32 255, %1, !dbg !5958
  %add = add nsw i32 %div, 1, !dbg !5959
  store i32 %add, i32* %range, align 4, !dbg !5955
  call void @llvm.dbg.declare(metadata [34 x i32]* %coded, metadata !5960, metadata !1998), !dbg !5962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5963, metadata !1998), !dbg !5964
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !5965, metadata !1998), !dbg !5966
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5967
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !5969
  %3 = load i32, i32* %size_in_bits, align 8, !dbg !5969
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5970
  %call = call i32 @put_bits_count(%struct.PutBitContext* %4), !dbg !5971
  %sub = sub nsw i32 %3, %call, !dbg !5972
  %5 = load i32, i32* %range, align 4, !dbg !5973
  %sub1 = sub nsw i32 %5, 1, !dbg !5974
  %mul = mul nsw i32 2, %sub1, !dbg !5975
  %or = or i32 %mul, 1, !dbg !5976
  %6 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !5977
  %sub2 = sub nsw i32 31, %6, !dbg !5979
  %mul3 = mul nsw i32 2, %sub2, !dbg !5980
  %add4 = add nsw i32 1, %mul3, !dbg !5981
  %cmp = icmp slt i32 %sub, %add4, !dbg !5982
  br i1 %cmp, label %if.then, label %if.end, !dbg !5983

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5984
  br label %return, !dbg !5984

if.end:                                           ; preds = %entry
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5985
  call void @put_bits(%struct.PutBitContext* %7, i32 1, i32 1), !dbg !5986
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5987
  %9 = load i32, i32* %range, align 4, !dbg !5988
  %sub5 = sub nsw i32 %9, 1, !dbg !5989
  %mul6 = mul nsw i32 2, %sub5, !dbg !5990
  %or7 = or i32 %mul6, 1, !dbg !5991
  %10 = call i32 @llvm.ctlz.i32(i32 %or7, i1 true), !dbg !5992
  %sub8 = sub nsw i32 31, %10, !dbg !5993
  %11 = load i16*, i16** %posts.addr, align 8, !dbg !5994
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 0, !dbg !5994
  %12 = load i16, i16* %arrayidx, align 2, !dbg !5994
  %conv = zext i16 %12 to i32, !dbg !5994
  call void @put_bits(%struct.PutBitContext* %8, i32 %sub8, i32 %conv), !dbg !5995
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5997
  %14 = load i32, i32* %range, align 4, !dbg !5998
  %sub9 = sub nsw i32 %14, 1, !dbg !5999
  %mul10 = mul nsw i32 2, %sub9, !dbg !6000
  %or11 = or i32 %mul10, 1, !dbg !6001
  %15 = call i32 @llvm.ctlz.i32(i32 %or11, i1 true), !dbg !6002
  %sub12 = sub nsw i32 31, %15, !dbg !6003
  %16 = load i16*, i16** %posts.addr, align 8, !dbg !6004
  %arrayidx13 = getelementptr inbounds i16, i16* %16, i64 1, !dbg !6004
  %17 = load i16, i16* %arrayidx13, align 2, !dbg !6004
  %conv14 = zext i16 %17 to i32, !dbg !6004
  call void @put_bits(%struct.PutBitContext* %13, i32 %sub12, i32 %conv14), !dbg !6005
  %arrayidx15 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 1, !dbg !6006
  store i32 1, i32* %arrayidx15, align 4, !dbg !6007
  %arrayidx16 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 0, !dbg !6008
  store i32 1, i32* %arrayidx16, align 16, !dbg !6009
  store i32 2, i32* %i, align 4, !dbg !6010
  br label %for.cond, !dbg !6012

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !6013
  %19 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6016
  %values = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %19, i32 0, i32 6, !dbg !6017
  %20 = load i32, i32* %values, align 8, !dbg !6017
  %cmp17 = icmp slt i32 %18, %20, !dbg !6018
  br i1 %cmp17, label %for.body, label %for.end, !dbg !6019

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %predicted, metadata !6020, metadata !1998), !dbg !6022
  %21 = load i32, i32* %i, align 4, !dbg !6023
  %idxprom = sext i32 %21 to i64, !dbg !6024
  %22 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6024
  %list = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %22, i32 0, i32 7, !dbg !6025
  %23 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list, align 8, !dbg !6025
  %arrayidx19 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %23, i64 %idxprom, !dbg !6024
  %low = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx19, i32 0, i32 2, !dbg !6026
  %24 = load i16, i16* %low, align 2, !dbg !6026
  %idxprom20 = zext i16 %24 to i64, !dbg !6027
  %25 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6027
  %list21 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %25, i32 0, i32 7, !dbg !6028
  %26 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list21, align 8, !dbg !6028
  %arrayidx22 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %26, i64 %idxprom20, !dbg !6027
  %x = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx22, i32 0, i32 0, !dbg !6029
  %27 = load i16, i16* %x, align 2, !dbg !6029
  %conv23 = zext i16 %27 to i32, !dbg !6027
  %28 = load i32, i32* %i, align 4, !dbg !6030
  %idxprom24 = sext i32 %28 to i64, !dbg !6031
  %29 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6031
  %list25 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %29, i32 0, i32 7, !dbg !6032
  %30 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list25, align 8, !dbg !6032
  %arrayidx26 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %30, i64 %idxprom24, !dbg !6031
  %low27 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx26, i32 0, i32 2, !dbg !6033
  %31 = load i16, i16* %low27, align 2, !dbg !6033
  %idxprom28 = zext i16 %31 to i64, !dbg !6034
  %32 = load i16*, i16** %posts.addr, align 8, !dbg !6034
  %arrayidx29 = getelementptr inbounds i16, i16* %32, i64 %idxprom28, !dbg !6034
  %33 = load i16, i16* %arrayidx29, align 2, !dbg !6034
  %conv30 = zext i16 %33 to i32, !dbg !6034
  %34 = load i32, i32* %i, align 4, !dbg !6035
  %idxprom31 = sext i32 %34 to i64, !dbg !6036
  %35 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6036
  %list32 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %35, i32 0, i32 7, !dbg !6037
  %36 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list32, align 8, !dbg !6037
  %arrayidx33 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %36, i64 %idxprom31, !dbg !6036
  %high = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx33, i32 0, i32 3, !dbg !6038
  %37 = load i16, i16* %high, align 2, !dbg !6038
  %idxprom34 = zext i16 %37 to i64, !dbg !6039
  %38 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6039
  %list35 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %38, i32 0, i32 7, !dbg !6040
  %39 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list35, align 8, !dbg !6040
  %arrayidx36 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %39, i64 %idxprom34, !dbg !6039
  %x37 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx36, i32 0, i32 0, !dbg !6041
  %40 = load i16, i16* %x37, align 2, !dbg !6041
  %conv38 = zext i16 %40 to i32, !dbg !6039
  %41 = load i32, i32* %i, align 4, !dbg !6042
  %idxprom39 = sext i32 %41 to i64, !dbg !6043
  %42 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6043
  %list40 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %42, i32 0, i32 7, !dbg !6044
  %43 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list40, align 8, !dbg !6044
  %arrayidx41 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %43, i64 %idxprom39, !dbg !6043
  %high42 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx41, i32 0, i32 3, !dbg !6045
  %44 = load i16, i16* %high42, align 2, !dbg !6045
  %idxprom43 = zext i16 %44 to i64, !dbg !6046
  %45 = load i16*, i16** %posts.addr, align 8, !dbg !6046
  %arrayidx44 = getelementptr inbounds i16, i16* %45, i64 %idxprom43, !dbg !6046
  %46 = load i16, i16* %arrayidx44, align 2, !dbg !6046
  %conv45 = zext i16 %46 to i32, !dbg !6046
  %47 = load i32, i32* %i, align 4, !dbg !6047
  %idxprom46 = sext i32 %47 to i64, !dbg !6048
  %48 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6048
  %list47 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %48, i32 0, i32 7, !dbg !6049
  %49 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list47, align 8, !dbg !6049
  %arrayidx48 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %49, i64 %idxprom46, !dbg !6048
  %x49 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx48, i32 0, i32 0, !dbg !6050
  %50 = load i16, i16* %x49, align 2, !dbg !6050
  %conv50 = zext i16 %50 to i32, !dbg !6048
  %call51 = call i32 @render_point(i32 %conv23, i32 %conv30, i32 %conv38, i32 %conv45, i32 %conv50), !dbg !6051
  store i32 %call51, i32* %predicted, align 4, !dbg !6022
  call void @llvm.dbg.declare(metadata i32* %highroom, metadata !6052, metadata !1998), !dbg !6053
  %51 = load i32, i32* %range, align 4, !dbg !6054
  %52 = load i32, i32* %predicted, align 4, !dbg !6055
  %sub52 = sub nsw i32 %51, %52, !dbg !6056
  store i32 %sub52, i32* %highroom, align 4, !dbg !6053
  call void @llvm.dbg.declare(metadata i32* %lowroom, metadata !6057, metadata !1998), !dbg !6058
  %53 = load i32, i32* %predicted, align 4, !dbg !6059
  store i32 %53, i32* %lowroom, align 4, !dbg !6058
  call void @llvm.dbg.declare(metadata i32* %room, metadata !6060, metadata !1998), !dbg !6061
  %54 = load i32, i32* %highroom, align 4, !dbg !6062
  %55 = load i32, i32* %lowroom, align 4, !dbg !6063
  %cmp53 = icmp sgt i32 %54, %55, !dbg !6064
  br i1 %cmp53, label %cond.true, label %cond.false, !dbg !6065

cond.true:                                        ; preds = %for.body
  %56 = load i32, i32* %lowroom, align 4, !dbg !6066
  br label %cond.end, !dbg !6068

cond.false:                                       ; preds = %for.body
  %57 = load i32, i32* %highroom, align 4, !dbg !6069
  br label %cond.end, !dbg !6071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %57, %cond.false ], !dbg !6072
  store i32 %cond, i32* %room, align 4, !dbg !6074
  %58 = load i32, i32* %predicted, align 4, !dbg !6075
  %59 = load i32, i32* %i, align 4, !dbg !6077
  %idxprom55 = sext i32 %59 to i64, !dbg !6078
  %60 = load i16*, i16** %posts.addr, align 8, !dbg !6078
  %arrayidx56 = getelementptr inbounds i16, i16* %60, i64 %idxprom55, !dbg !6078
  %61 = load i16, i16* %arrayidx56, align 2, !dbg !6078
  %conv57 = zext i16 %61 to i32, !dbg !6078
  %cmp58 = icmp eq i32 %58, %conv57, !dbg !6079
  br i1 %cmp58, label %if.then60, label %if.else, !dbg !6080

if.then60:                                        ; preds = %cond.end
  %62 = load i32, i32* %i, align 4, !dbg !6081
  %idxprom61 = sext i32 %62 to i64, !dbg !6083
  %arrayidx62 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom61, !dbg !6083
  store i32 0, i32* %arrayidx62, align 4, !dbg !6084
  br label %for.inc, !dbg !6085

if.else:                                          ; preds = %cond.end
  %63 = load i32, i32* %i, align 4, !dbg !6086
  %idxprom63 = sext i32 %63 to i64, !dbg !6089
  %64 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6089
  %list64 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %64, i32 0, i32 7, !dbg !6090
  %65 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list64, align 8, !dbg !6090
  %arrayidx65 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %65, i64 %idxprom63, !dbg !6089
  %low66 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx65, i32 0, i32 2, !dbg !6091
  %66 = load i16, i16* %low66, align 2, !dbg !6091
  %idxprom67 = zext i16 %66 to i64, !dbg !6092
  %arrayidx68 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom67, !dbg !6092
  %67 = load i32, i32* %arrayidx68, align 4, !dbg !6092
  %tobool = icmp ne i32 %67, 0, !dbg !6092
  br i1 %tobool, label %if.end76, label %if.then69, !dbg !6093

if.then69:                                        ; preds = %if.else
  %68 = load i32, i32* %i, align 4, !dbg !6094
  %idxprom70 = sext i32 %68 to i64, !dbg !6095
  %69 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6095
  %list71 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %69, i32 0, i32 7, !dbg !6096
  %70 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list71, align 8, !dbg !6096
  %arrayidx72 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %70, i64 %idxprom70, !dbg !6095
  %low73 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx72, i32 0, i32 2, !dbg !6097
  %71 = load i16, i16* %low73, align 2, !dbg !6097
  %idxprom74 = zext i16 %71 to i64, !dbg !6098
  %arrayidx75 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom74, !dbg !6098
  store i32 -1, i32* %arrayidx75, align 4, !dbg !6099
  br label %if.end76, !dbg !6098

if.end76:                                         ; preds = %if.then69, %if.else
  %72 = load i32, i32* %i, align 4, !dbg !6100
  %idxprom77 = sext i32 %72 to i64, !dbg !6102
  %73 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6102
  %list78 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %73, i32 0, i32 7, !dbg !6103
  %74 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list78, align 8, !dbg !6103
  %arrayidx79 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %74, i64 %idxprom77, !dbg !6102
  %high80 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx79, i32 0, i32 3, !dbg !6104
  %75 = load i16, i16* %high80, align 2, !dbg !6104
  %idxprom81 = zext i16 %75 to i64, !dbg !6105
  %arrayidx82 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom81, !dbg !6105
  %76 = load i32, i32* %arrayidx82, align 4, !dbg !6105
  %tobool83 = icmp ne i32 %76, 0, !dbg !6105
  br i1 %tobool83, label %if.end91, label %if.then84, !dbg !6106

if.then84:                                        ; preds = %if.end76
  %77 = load i32, i32* %i, align 4, !dbg !6107
  %idxprom85 = sext i32 %77 to i64, !dbg !6108
  %78 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6108
  %list86 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %78, i32 0, i32 7, !dbg !6109
  %79 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list86, align 8, !dbg !6109
  %arrayidx87 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %79, i64 %idxprom85, !dbg !6108
  %high88 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx87, i32 0, i32 3, !dbg !6110
  %80 = load i16, i16* %high88, align 2, !dbg !6110
  %idxprom89 = zext i16 %80 to i64, !dbg !6111
  %arrayidx90 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom89, !dbg !6111
  store i32 -1, i32* %arrayidx90, align 4, !dbg !6112
  br label %if.end91, !dbg !6111

if.end91:                                         ; preds = %if.then84, %if.end76
  br label %if.end92

if.end92:                                         ; preds = %if.end91
  %81 = load i32, i32* %i, align 4, !dbg !6113
  %idxprom93 = sext i32 %81 to i64, !dbg !6115
  %82 = load i16*, i16** %posts.addr, align 8, !dbg !6115
  %arrayidx94 = getelementptr inbounds i16, i16* %82, i64 %idxprom93, !dbg !6115
  %83 = load i16, i16* %arrayidx94, align 2, !dbg !6115
  %conv95 = zext i16 %83 to i32, !dbg !6115
  %84 = load i32, i32* %predicted, align 4, !dbg !6116
  %cmp96 = icmp sgt i32 %conv95, %84, !dbg !6117
  br i1 %cmp96, label %if.then98, label %if.else121, !dbg !6118

if.then98:                                        ; preds = %if.end92
  %85 = load i32, i32* %i, align 4, !dbg !6119
  %idxprom99 = sext i32 %85 to i64, !dbg !6122
  %86 = load i16*, i16** %posts.addr, align 8, !dbg !6122
  %arrayidx100 = getelementptr inbounds i16, i16* %86, i64 %idxprom99, !dbg !6122
  %87 = load i16, i16* %arrayidx100, align 2, !dbg !6122
  %conv101 = zext i16 %87 to i32, !dbg !6122
  %88 = load i32, i32* %predicted, align 4, !dbg !6123
  %sub102 = sub nsw i32 %conv101, %88, !dbg !6124
  %89 = load i32, i32* %room, align 4, !dbg !6125
  %cmp103 = icmp sgt i32 %sub102, %89, !dbg !6126
  br i1 %cmp103, label %if.then105, label %if.else113, !dbg !6127

if.then105:                                       ; preds = %if.then98
  %90 = load i32, i32* %i, align 4, !dbg !6128
  %idxprom106 = sext i32 %90 to i64, !dbg !6129
  %91 = load i16*, i16** %posts.addr, align 8, !dbg !6129
  %arrayidx107 = getelementptr inbounds i16, i16* %91, i64 %idxprom106, !dbg !6129
  %92 = load i16, i16* %arrayidx107, align 2, !dbg !6129
  %conv108 = zext i16 %92 to i32, !dbg !6129
  %93 = load i32, i32* %predicted, align 4, !dbg !6130
  %sub109 = sub nsw i32 %conv108, %93, !dbg !6131
  %94 = load i32, i32* %lowroom, align 4, !dbg !6132
  %add110 = add nsw i32 %sub109, %94, !dbg !6133
  %95 = load i32, i32* %i, align 4, !dbg !6134
  %idxprom111 = sext i32 %95 to i64, !dbg !6135
  %arrayidx112 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom111, !dbg !6135
  store i32 %add110, i32* %arrayidx112, align 4, !dbg !6136
  br label %if.end120, !dbg !6135

if.else113:                                       ; preds = %if.then98
  %96 = load i32, i32* %i, align 4, !dbg !6137
  %idxprom114 = sext i32 %96 to i64, !dbg !6138
  %97 = load i16*, i16** %posts.addr, align 8, !dbg !6138
  %arrayidx115 = getelementptr inbounds i16, i16* %97, i64 %idxprom114, !dbg !6138
  %98 = load i16, i16* %arrayidx115, align 2, !dbg !6138
  %conv116 = zext i16 %98 to i32, !dbg !6138
  %99 = load i32, i32* %predicted, align 4, !dbg !6139
  %sub117 = sub nsw i32 %conv116, %99, !dbg !6140
  %shl = shl i32 %sub117, 1, !dbg !6141
  %100 = load i32, i32* %i, align 4, !dbg !6142
  %idxprom118 = sext i32 %100 to i64, !dbg !6143
  %arrayidx119 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom118, !dbg !6143
  store i32 %shl, i32* %arrayidx119, align 4, !dbg !6144
  br label %if.end120

if.end120:                                        ; preds = %if.else113, %if.then105
  br label %if.end147, !dbg !6145

if.else121:                                       ; preds = %if.end92
  %101 = load i32, i32* %predicted, align 4, !dbg !6146
  %102 = load i32, i32* %i, align 4, !dbg !6149
  %idxprom122 = sext i32 %102 to i64, !dbg !6150
  %103 = load i16*, i16** %posts.addr, align 8, !dbg !6150
  %arrayidx123 = getelementptr inbounds i16, i16* %103, i64 %idxprom122, !dbg !6150
  %104 = load i16, i16* %arrayidx123, align 2, !dbg !6150
  %conv124 = zext i16 %104 to i32, !dbg !6150
  %sub125 = sub nsw i32 %101, %conv124, !dbg !6151
  %105 = load i32, i32* %room, align 4, !dbg !6152
  %cmp126 = icmp sgt i32 %sub125, %105, !dbg !6153
  br i1 %cmp126, label %if.then128, label %if.else137, !dbg !6154

if.then128:                                       ; preds = %if.else121
  %106 = load i32, i32* %predicted, align 4, !dbg !6155
  %107 = load i32, i32* %i, align 4, !dbg !6156
  %idxprom129 = sext i32 %107 to i64, !dbg !6157
  %108 = load i16*, i16** %posts.addr, align 8, !dbg !6157
  %arrayidx130 = getelementptr inbounds i16, i16* %108, i64 %idxprom129, !dbg !6157
  %109 = load i16, i16* %arrayidx130, align 2, !dbg !6157
  %conv131 = zext i16 %109 to i32, !dbg !6157
  %sub132 = sub nsw i32 %106, %conv131, !dbg !6158
  %110 = load i32, i32* %highroom, align 4, !dbg !6159
  %add133 = add nsw i32 %sub132, %110, !dbg !6160
  %sub134 = sub nsw i32 %add133, 1, !dbg !6161
  %111 = load i32, i32* %i, align 4, !dbg !6162
  %idxprom135 = sext i32 %111 to i64, !dbg !6163
  %arrayidx136 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom135, !dbg !6163
  store i32 %sub134, i32* %arrayidx136, align 4, !dbg !6164
  br label %if.end146, !dbg !6163

if.else137:                                       ; preds = %if.else121
  %112 = load i32, i32* %predicted, align 4, !dbg !6165
  %113 = load i32, i32* %i, align 4, !dbg !6166
  %idxprom138 = sext i32 %113 to i64, !dbg !6167
  %114 = load i16*, i16** %posts.addr, align 8, !dbg !6167
  %arrayidx139 = getelementptr inbounds i16, i16* %114, i64 %idxprom138, !dbg !6167
  %115 = load i16, i16* %arrayidx139, align 2, !dbg !6167
  %conv140 = zext i16 %115 to i32, !dbg !6167
  %sub141 = sub nsw i32 %112, %conv140, !dbg !6168
  %shl142 = shl i32 %sub141, 1, !dbg !6169
  %sub143 = sub nsw i32 %shl142, 1, !dbg !6170
  %116 = load i32, i32* %i, align 4, !dbg !6171
  %idxprom144 = sext i32 %116 to i64, !dbg !6172
  %arrayidx145 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom144, !dbg !6172
  store i32 %sub143, i32* %arrayidx145, align 4, !dbg !6173
  br label %if.end146

if.end146:                                        ; preds = %if.else137, %if.then128
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end120
  br label %for.inc, !dbg !6174

for.inc:                                          ; preds = %if.end147, %if.then60
  %117 = load i32, i32* %i, align 4, !dbg !6175
  %inc = add nsw i32 %117, 1, !dbg !6175
  store i32 %inc, i32* %i, align 4, !dbg !6175
  br label %for.cond, !dbg !6177, !llvm.loop !6178

for.end:                                          ; preds = %for.cond
  store i32 2, i32* %counter, align 4, !dbg !6180
  store i32 0, i32* %i, align 4, !dbg !6181
  br label %for.cond148, !dbg !6183

for.cond148:                                      ; preds = %for.inc242, %for.end
  %118 = load i32, i32* %i, align 4, !dbg !6184
  %119 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6187
  %partitions = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %119, i32 0, i32 0, !dbg !6188
  %120 = load i32, i32* %partitions, align 8, !dbg !6188
  %cmp149 = icmp slt i32 %118, %120, !dbg !6189
  br i1 %cmp149, label %for.body151, label %for.end244, !dbg !6190

for.body151:                                      ; preds = %for.cond148
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor_class** %c, metadata !6191, metadata !1998), !dbg !6193
  %121 = load i32, i32* %i, align 4, !dbg !6194
  %idxprom152 = sext i32 %121 to i64, !dbg !6195
  %122 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6195
  %partition_to_class = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %122, i32 0, i32 1, !dbg !6196
  %123 = load i32*, i32** %partition_to_class, align 8, !dbg !6196
  %arrayidx153 = getelementptr inbounds i32, i32* %123, i64 %idxprom152, !dbg !6195
  %124 = load i32, i32* %arrayidx153, align 4, !dbg !6195
  %idxprom154 = sext i32 %124 to i64, !dbg !6197
  %125 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6197
  %classes = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %125, i32 0, i32 3, !dbg !6198
  %126 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %classes, align 8, !dbg !6198
  %arrayidx155 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %126, i64 %idxprom154, !dbg !6197
  store %struct.vorbis_enc_floor_class* %arrayidx155, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6193
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6199, metadata !1998), !dbg !6200
  call void @llvm.dbg.declare(metadata i32* %cval, metadata !6201, metadata !1998), !dbg !6202
  store i32 0, i32* %cval, align 4, !dbg !6202
  call void @llvm.dbg.declare(metadata i32* %csub, metadata !6203, metadata !1998), !dbg !6204
  %127 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6205
  %subclass = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %127, i32 0, i32 1, !dbg !6206
  %128 = load i32, i32* %subclass, align 4, !dbg !6206
  %shl156 = shl i32 1, %128, !dbg !6207
  store i32 %shl156, i32* %csub, align 4, !dbg !6204
  %129 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6208
  %subclass157 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %129, i32 0, i32 1, !dbg !6210
  %130 = load i32, i32* %subclass157, align 4, !dbg !6210
  %tobool158 = icmp ne i32 %130, 0, !dbg !6208
  br i1 %tobool158, label %if.then159, label %if.end208, !dbg !6211

if.then159:                                       ; preds = %for.body151
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %book, metadata !6212, metadata !1998), !dbg !6214
  %131 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6215
  %masterbook = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %131, i32 0, i32 2, !dbg !6216
  %132 = load i32, i32* %masterbook, align 8, !dbg !6216
  %idxprom160 = sext i32 %132 to i64, !dbg !6217
  %133 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !6217
  %codebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %133, i32 0, i32 15, !dbg !6218
  %134 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks, align 8, !dbg !6218
  %arrayidx161 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %134, i64 %idxprom160, !dbg !6217
  store %struct.vorbis_enc_codebook* %arrayidx161, %struct.vorbis_enc_codebook** %book, align 8, !dbg !6214
  call void @llvm.dbg.declare(metadata i32* %cshift, metadata !6219, metadata !1998), !dbg !6220
  store i32 0, i32* %cshift, align 4, !dbg !6220
  store i32 0, i32* %k, align 4, !dbg !6221
  br label %for.cond162, !dbg !6223

for.cond162:                                      ; preds = %for.inc201, %if.then159
  %135 = load i32, i32* %k, align 4, !dbg !6224
  %136 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6227
  %dim = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %136, i32 0, i32 0, !dbg !6228
  %137 = load i32, i32* %dim, align 8, !dbg !6228
  %cmp163 = icmp slt i32 %135, %137, !dbg !6229
  br i1 %cmp163, label %for.body165, label %for.end203, !dbg !6230

for.body165:                                      ; preds = %for.cond162
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6231, metadata !1998), !dbg !6233
  store i32 0, i32* %l, align 4, !dbg !6234
  br label %for.cond166, !dbg !6236

for.cond166:                                      ; preds = %for.inc189, %for.body165
  %138 = load i32, i32* %l, align 4, !dbg !6237
  %139 = load i32, i32* %csub, align 4, !dbg !6240
  %cmp167 = icmp slt i32 %138, %139, !dbg !6241
  br i1 %cmp167, label %for.body169, label %for.end191, !dbg !6242

for.body169:                                      ; preds = %for.cond166
  call void @llvm.dbg.declare(metadata i32* %maxval, metadata !6243, metadata !1998), !dbg !6245
  store i32 1, i32* %maxval, align 4, !dbg !6245
  %140 = load i32, i32* %l, align 4, !dbg !6246
  %idxprom170 = sext i32 %140 to i64, !dbg !6248
  %141 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6248
  %books = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %141, i32 0, i32 3, !dbg !6249
  %142 = load i32*, i32** %books, align 8, !dbg !6249
  %arrayidx171 = getelementptr inbounds i32, i32* %142, i64 %idxprom170, !dbg !6248
  %143 = load i32, i32* %arrayidx171, align 4, !dbg !6248
  %cmp172 = icmp ne i32 %143, -1, !dbg !6250
  br i1 %cmp172, label %if.then174, label %if.end181, !dbg !6251

if.then174:                                       ; preds = %for.body169
  %144 = load i32, i32* %l, align 4, !dbg !6252
  %idxprom175 = sext i32 %144 to i64, !dbg !6253
  %145 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6253
  %books176 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %145, i32 0, i32 3, !dbg !6254
  %146 = load i32*, i32** %books176, align 8, !dbg !6254
  %arrayidx177 = getelementptr inbounds i32, i32* %146, i64 %idxprom175, !dbg !6253
  %147 = load i32, i32* %arrayidx177, align 4, !dbg !6253
  %idxprom178 = sext i32 %147 to i64, !dbg !6255
  %148 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !6255
  %codebooks179 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %148, i32 0, i32 15, !dbg !6256
  %149 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks179, align 8, !dbg !6256
  %arrayidx180 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %149, i64 %idxprom178, !dbg !6255
  %nentries = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx180, i32 0, i32 0, !dbg !6257
  %150 = load i32, i32* %nentries, align 8, !dbg !6257
  store i32 %150, i32* %maxval, align 4, !dbg !6258
  br label %if.end181, !dbg !6259

if.end181:                                        ; preds = %if.then174, %for.body169
  %151 = load i32, i32* %counter, align 4, !dbg !6260
  %152 = load i32, i32* %k, align 4, !dbg !6262
  %add182 = add nsw i32 %151, %152, !dbg !6263
  %idxprom183 = sext i32 %add182 to i64, !dbg !6264
  %arrayidx184 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom183, !dbg !6264
  %153 = load i32, i32* %arrayidx184, align 4, !dbg !6264
  %154 = load i32, i32* %maxval, align 4, !dbg !6265
  %cmp185 = icmp slt i32 %153, %154, !dbg !6266
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !6267

if.then187:                                       ; preds = %if.end181
  br label %for.end191, !dbg !6268

if.end188:                                        ; preds = %if.end181
  br label %for.inc189, !dbg !6269

for.inc189:                                       ; preds = %if.end188
  %155 = load i32, i32* %l, align 4, !dbg !6270
  %inc190 = add nsw i32 %155, 1, !dbg !6270
  store i32 %inc190, i32* %l, align 4, !dbg !6270
  br label %for.cond166, !dbg !6272, !llvm.loop !6273

for.end191:                                       ; preds = %if.then187, %for.cond166
  %156 = load i32, i32* %l, align 4, !dbg !6275
  %157 = load i32, i32* %csub, align 4, !dbg !6276
  %cmp192 = icmp ne i32 %156, %157, !dbg !6277
  br i1 %cmp192, label %cond.true194, label %cond.false195, !dbg !6278

cond.true194:                                     ; preds = %for.end191
  br label %cond.end196, !dbg !6279

cond.false195:                                    ; preds = %for.end191
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 856, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.floor_encode, i32 0, i32 0)) #9, !dbg !6281
  unreachable, !dbg !6281
                                                  ; No predecessors!
  br label %cond.end196, !dbg !6283

cond.end196:                                      ; preds = %158, %cond.true194
  %159 = load i32, i32* %l, align 4, !dbg !6285
  %160 = load i32, i32* %cshift, align 4, !dbg !6286
  %shl197 = shl i32 %159, %160, !dbg !6287
  %161 = load i32, i32* %cval, align 4, !dbg !6288
  %or198 = or i32 %161, %shl197, !dbg !6288
  store i32 %or198, i32* %cval, align 4, !dbg !6288
  %162 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6289
  %subclass199 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %162, i32 0, i32 1, !dbg !6290
  %163 = load i32, i32* %subclass199, align 4, !dbg !6290
  %164 = load i32, i32* %cshift, align 4, !dbg !6291
  %add200 = add nsw i32 %164, %163, !dbg !6291
  store i32 %add200, i32* %cshift, align 4, !dbg !6291
  br label %for.inc201, !dbg !6292

for.inc201:                                       ; preds = %cond.end196
  %165 = load i32, i32* %k, align 4, !dbg !6293
  %inc202 = add nsw i32 %165, 1, !dbg !6293
  store i32 %inc202, i32* %k, align 4, !dbg !6293
  br label %for.cond162, !dbg !6295, !llvm.loop !6296

for.end203:                                       ; preds = %for.cond162
  %166 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6298
  %167 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book, align 8, !dbg !6300
  %168 = load i32, i32* %cval, align 4, !dbg !6301
  %call204 = call i32 @put_codeword(%struct.PutBitContext* %166, %struct.vorbis_enc_codebook* %167, i32 %168), !dbg !6302
  %tobool205 = icmp ne i32 %call204, 0, !dbg !6302
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !6303

if.then206:                                       ; preds = %for.end203
  store i32 -22, i32* %retval, align 4, !dbg !6304
  br label %return, !dbg !6304

if.end207:                                        ; preds = %for.end203
  br label %if.end208, !dbg !6305

if.end208:                                        ; preds = %if.end207, %for.body151
  store i32 0, i32* %k, align 4, !dbg !6306
  br label %for.cond209, !dbg !6308

for.cond209:                                      ; preds = %for.inc239, %if.end208
  %169 = load i32, i32* %k, align 4, !dbg !6309
  %170 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6312
  %dim210 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %170, i32 0, i32 0, !dbg !6313
  %171 = load i32, i32* %dim210, align 8, !dbg !6313
  %cmp211 = icmp slt i32 %169, %171, !dbg !6314
  br i1 %cmp211, label %for.body213, label %for.end241, !dbg !6315

for.body213:                                      ; preds = %for.cond209
  call void @llvm.dbg.declare(metadata i32* %book214, metadata !6316, metadata !1998), !dbg !6318
  %172 = load i32, i32* %cval, align 4, !dbg !6319
  %173 = load i32, i32* %csub, align 4, !dbg !6320
  %sub215 = sub nsw i32 %173, 1, !dbg !6321
  %and = and i32 %172, %sub215, !dbg !6322
  %idxprom216 = sext i32 %and to i64, !dbg !6323
  %174 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6323
  %books217 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %174, i32 0, i32 3, !dbg !6324
  %175 = load i32*, i32** %books217, align 8, !dbg !6324
  %arrayidx218 = getelementptr inbounds i32, i32* %175, i64 %idxprom216, !dbg !6323
  %176 = load i32, i32* %arrayidx218, align 4, !dbg !6323
  store i32 %176, i32* %book214, align 4, !dbg !6318
  call void @llvm.dbg.declare(metadata i32* %entry219, metadata !6325, metadata !1998), !dbg !6326
  %177 = load i32, i32* %counter, align 4, !dbg !6327
  %inc220 = add nsw i32 %177, 1, !dbg !6327
  store i32 %inc220, i32* %counter, align 4, !dbg !6327
  %idxprom221 = sext i32 %177 to i64, !dbg !6328
  %arrayidx222 = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i64 0, i64 %idxprom221, !dbg !6328
  %178 = load i32, i32* %arrayidx222, align 4, !dbg !6328
  store i32 %178, i32* %entry219, align 4, !dbg !6326
  %179 = load %struct.vorbis_enc_floor_class*, %struct.vorbis_enc_floor_class** %c, align 8, !dbg !6329
  %subclass223 = getelementptr inbounds %struct.vorbis_enc_floor_class, %struct.vorbis_enc_floor_class* %179, i32 0, i32 1, !dbg !6330
  %180 = load i32, i32* %subclass223, align 4, !dbg !6330
  %181 = load i32, i32* %cval, align 4, !dbg !6331
  %shr = ashr i32 %181, %180, !dbg !6331
  store i32 %shr, i32* %cval, align 4, !dbg !6331
  %182 = load i32, i32* %book214, align 4, !dbg !6332
  %cmp224 = icmp eq i32 %182, -1, !dbg !6334
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !6335

if.then226:                                       ; preds = %for.body213
  br label %for.inc239, !dbg !6336

if.end227:                                        ; preds = %for.body213
  %183 = load i32, i32* %entry219, align 4, !dbg !6337
  %cmp228 = icmp eq i32 %183, -1, !dbg !6339
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !6340

if.then230:                                       ; preds = %if.end227
  store i32 0, i32* %entry219, align 4, !dbg !6341
  br label %if.end231, !dbg !6342

if.end231:                                        ; preds = %if.then230, %if.end227
  %184 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6343
  %185 = load i32, i32* %book214, align 4, !dbg !6345
  %idxprom232 = sext i32 %185 to i64, !dbg !6346
  %186 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !6346
  %codebooks233 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %186, i32 0, i32 15, !dbg !6347
  %187 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks233, align 8, !dbg !6347
  %arrayidx234 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %187, i64 %idxprom232, !dbg !6346
  %188 = load i32, i32* %entry219, align 4, !dbg !6348
  %call235 = call i32 @put_codeword(%struct.PutBitContext* %184, %struct.vorbis_enc_codebook* %arrayidx234, i32 %188), !dbg !6349
  %tobool236 = icmp ne i32 %call235, 0, !dbg !6349
  br i1 %tobool236, label %if.then237, label %if.end238, !dbg !6350

if.then237:                                       ; preds = %if.end231
  store i32 -22, i32* %retval, align 4, !dbg !6351
  br label %return, !dbg !6351

if.end238:                                        ; preds = %if.end231
  br label %for.inc239, !dbg !6352

for.inc239:                                       ; preds = %if.end238, %if.then226
  %189 = load i32, i32* %k, align 4, !dbg !6353
  %inc240 = add nsw i32 %189, 1, !dbg !6353
  store i32 %inc240, i32* %k, align 4, !dbg !6353
  br label %for.cond209, !dbg !6355, !llvm.loop !6356

for.end241:                                       ; preds = %for.cond209
  br label %for.inc242, !dbg !6358

for.inc242:                                       ; preds = %for.end241
  %190 = load i32, i32* %i, align 4, !dbg !6359
  %inc243 = add nsw i32 %190, 1, !dbg !6359
  store i32 %inc243, i32* %i, align 4, !dbg !6359
  br label %for.cond148, !dbg !6361, !llvm.loop !6362

for.end244:                                       ; preds = %for.cond148
  %191 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6364
  %list245 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %191, i32 0, i32 7, !dbg !6365
  %192 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list245, align 8, !dbg !6365
  %193 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6366
  %values246 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %193, i32 0, i32 6, !dbg !6367
  %194 = load i32, i32* %values246, align 8, !dbg !6367
  %195 = load i16*, i16** %posts.addr, align 8, !dbg !6368
  %arraydecay = getelementptr inbounds [34 x i32], [34 x i32]* %coded, i32 0, i32 0, !dbg !6369
  %196 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !6370
  %multiplier247 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %196, i32 0, i32 4, !dbg !6371
  %197 = load i32, i32* %multiplier247, align 8, !dbg !6371
  %198 = load float*, float** %floor.addr, align 8, !dbg !6372
  %199 = load i32, i32* %samples.addr, align 4, !dbg !6373
  call void @ff_vorbis_floor1_render_list(%struct.vorbis_floor1_entry* %192, i32 %194, i16* %195, i32* %arraydecay, i32 %197, float* %198, i32 %199), !dbg !6374
  store i32 0, i32* %retval, align 4, !dbg !6375
  br label %return, !dbg !6375

return:                                           ; preds = %for.end244, %if.then237, %if.then206, %if.then
  %200 = load i32, i32* %retval, align 4, !dbg !6376
  ret i32 %200, !dbg !6376
}

; Function Attrs: nounwind uwtable
define internal i32 @residue_encode(%struct.vorbis_enc_context* %venc, %struct.vorbis_enc_residue* %rc, %struct.PutBitContext* %pb, float* %coeffs, i32 %samples, i32 %real_ch) #1 !dbg !6377 {
entry:
  %retval = alloca i32, align 4
  %venc.addr = alloca %struct.vorbis_enc_context*, align 8
  %rc.addr = alloca %struct.vorbis_enc_residue*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %coeffs.addr = alloca float*, align 8
  %samples.addr = alloca i32, align 4
  %real_ch.addr = alloca i32, align 4
  %pass = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %p = alloca i32, align 4
  %k = alloca i32, align 4
  %psize = alloca i32, align 4
  %partitions = alloca i32, align 4
  %channels = alloca i32, align 4
  %classes = alloca [2 x [50 x i32]], align 16
  %classwords = alloca i32, align 4
  %max1 = alloca float, align 4
  %max2 = alloca float, align 4
  %s = alloca i32, align 4
  %book = alloca %struct.vorbis_enc_codebook*, align 8
  %entry96 = alloca i32, align 4
  %nbook = alloca i32, align 4
  %book138 = alloca %struct.vorbis_enc_codebook*, align 8
  %buf = alloca float*, align 8
  %l = alloca i32, align 4
  %a = alloca float*, align 8
  %s199 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %dim = alloca i32, align 4
  %a2 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %vec = alloca [8 x float], align 16
  %pv = alloca float*, align 8
  store %struct.vorbis_enc_context* %venc, %struct.vorbis_enc_context** %venc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_context** %venc.addr, metadata !6380, metadata !1998), !dbg !6381
  store %struct.vorbis_enc_residue* %rc, %struct.vorbis_enc_residue** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_residue** %rc.addr, metadata !6382, metadata !1998), !dbg !6383
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !6384, metadata !1998), !dbg !6385
  store float* %coeffs, float** %coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coeffs.addr, metadata !6386, metadata !1998), !dbg !6387
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !6388, metadata !1998), !dbg !6389
  store i32 %real_ch, i32* %real_ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %real_ch.addr, metadata !6390, metadata !1998), !dbg !6391
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !6392, metadata !1998), !dbg !6393
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6394, metadata !1998), !dbg !6395
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6396, metadata !1998), !dbg !6397
  call void @llvm.dbg.declare(metadata i32* %p, metadata !6398, metadata !1998), !dbg !6399
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6400, metadata !1998), !dbg !6401
  call void @llvm.dbg.declare(metadata i32* %psize, metadata !6402, metadata !1998), !dbg !6403
  %0 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6404
  %partition_size = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %0, i32 0, i32 3, !dbg !6405
  %1 = load i32, i32* %partition_size, align 4, !dbg !6405
  store i32 %1, i32* %psize, align 4, !dbg !6403
  call void @llvm.dbg.declare(metadata i32* %partitions, metadata !6406, metadata !1998), !dbg !6407
  %2 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6408
  %end = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %2, i32 0, i32 2, !dbg !6409
  %3 = load i32, i32* %end, align 8, !dbg !6409
  %4 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6410
  %begin = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %4, i32 0, i32 1, !dbg !6411
  %5 = load i32, i32* %begin, align 4, !dbg !6411
  %sub = sub nsw i32 %3, %5, !dbg !6412
  %6 = load i32, i32* %psize, align 4, !dbg !6413
  %div = sdiv i32 %sub, %6, !dbg !6414
  store i32 %div, i32* %partitions, align 4, !dbg !6407
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !6415, metadata !1998), !dbg !6416
  %7 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6417
  %type = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %7, i32 0, i32 0, !dbg !6418
  %8 = load i32, i32* %type, align 8, !dbg !6418
  %cmp = icmp eq i32 %8, 2, !dbg !6419
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6420

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6421

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %real_ch.addr, align 4, !dbg !6423
  br label %cond.end, !dbg !6425

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %9, %cond.false ], !dbg !6426
  store i32 %cond, i32* %channels, align 4, !dbg !6428
  call void @llvm.dbg.declare(metadata [2 x [50 x i32]]* %classes, metadata !6429, metadata !1998), !dbg !6433
  call void @llvm.dbg.declare(metadata i32* %classwords, metadata !6434, metadata !1998), !dbg !6435
  %10 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6436
  %classbook = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %10, i32 0, i32 5, !dbg !6437
  %11 = load i32, i32* %classbook, align 4, !dbg !6437
  %idxprom = sext i32 %11 to i64, !dbg !6438
  %12 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !6438
  %codebooks = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %12, i32 0, i32 15, !dbg !6439
  %13 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks, align 8, !dbg !6439
  %arrayidx = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %13, i64 %idxprom, !dbg !6438
  %ndimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %arrayidx, i32 0, i32 3, !dbg !6440
  %14 = load i32, i32* %ndimensions, align 8, !dbg !6440
  store i32 %14, i32* %classwords, align 4, !dbg !6435
  br label %do.body, !dbg !6441, !llvm.loop !6442

do.body:                                          ; preds = %cond.end
  %15 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6443
  %type1 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %15, i32 0, i32 0, !dbg !6447
  %16 = load i32, i32* %type1, align 8, !dbg !6447
  %cmp2 = icmp eq i32 %16, 2, !dbg !6448
  br i1 %cmp2, label %if.end, label %if.then, !dbg !6449

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 916), !dbg !6450
  call void @abort() #9, !dbg !6453
  unreachable, !dbg !6455

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !6456

do.end:                                           ; preds = %if.end
  br label %do.body3, !dbg !6458, !llvm.loop !6459

do.body3:                                         ; preds = %do.end
  %17 = load i32, i32* %real_ch.addr, align 4, !dbg !6460
  %cmp4 = icmp eq i32 %17, 2, !dbg !6464
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !6465

if.then5:                                         ; preds = %do.body3
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 917), !dbg !6466
  call void @abort() #9, !dbg !6469
  unreachable, !dbg !6471

if.end6:                                          ; preds = %do.body3
  br label %do.end7, !dbg !6472

do.end7:                                          ; preds = %if.end6
  store i32 0, i32* %p, align 4, !dbg !6474
  br label %for.cond, !dbg !6476

for.cond:                                         ; preds = %for.inc76, %do.end7
  %18 = load i32, i32* %p, align 4, !dbg !6477
  %19 = load i32, i32* %partitions, align 4, !dbg !6480
  %cmp8 = icmp slt i32 %18, %19, !dbg !6481
  br i1 %cmp8, label %for.body, label %for.end78, !dbg !6482

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %max1, metadata !6483, metadata !1998), !dbg !6485
  store float 0.000000e+00, float* %max1, align 4, !dbg !6485
  call void @llvm.dbg.declare(metadata float* %max2, metadata !6486, metadata !1998), !dbg !6487
  store float 0.000000e+00, float* %max2, align 4, !dbg !6487
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6488, metadata !1998), !dbg !6489
  %20 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6490
  %begin9 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %20, i32 0, i32 1, !dbg !6491
  %21 = load i32, i32* %begin9, align 4, !dbg !6491
  %22 = load i32, i32* %p, align 4, !dbg !6492
  %23 = load i32, i32* %psize, align 4, !dbg !6493
  %mul = mul nsw i32 %22, %23, !dbg !6494
  %add = add nsw i32 %21, %mul, !dbg !6495
  store i32 %add, i32* %s, align 4, !dbg !6489
  %24 = load i32, i32* %s, align 4, !dbg !6496
  store i32 %24, i32* %k, align 4, !dbg !6498
  br label %for.cond10, !dbg !6499

for.cond10:                                       ; preds = %for.inc, %for.body
  %25 = load i32, i32* %k, align 4, !dbg !6500
  %26 = load i32, i32* %s, align 4, !dbg !6503
  %27 = load i32, i32* %psize, align 4, !dbg !6504
  %add11 = add nsw i32 %26, %27, !dbg !6505
  %cmp12 = icmp slt i32 %25, %add11, !dbg !6506
  br i1 %cmp12, label %for.body13, label %for.end, !dbg !6507

for.body13:                                       ; preds = %for.cond10
  %28 = load float, float* %max1, align 4, !dbg !6508
  %conv = fpext float %28 to double, !dbg !6510
  %29 = load i32, i32* %k, align 4, !dbg !6511
  %30 = load i32, i32* %real_ch.addr, align 4, !dbg !6512
  %div14 = sdiv i32 %29, %30, !dbg !6513
  %idxprom15 = sext i32 %div14 to i64, !dbg !6514
  %31 = load float*, float** %coeffs.addr, align 8, !dbg !6514
  %arrayidx16 = getelementptr inbounds float, float* %31, i64 %idxprom15, !dbg !6514
  %32 = load float, float* %arrayidx16, align 4, !dbg !6514
  %conv17 = fpext float %32 to double, !dbg !6514
  %call = call double @fabs(double %conv17) #2, !dbg !6515
  %cmp18 = fcmp ogt double %conv, %call, !dbg !6516
  br i1 %cmp18, label %cond.true20, label %cond.false22, !dbg !6510

cond.true20:                                      ; preds = %for.body13
  %33 = load float, float* %max1, align 4, !dbg !6517
  %conv21 = fpext float %33 to double, !dbg !6519
  br label %cond.end28, !dbg !6520

cond.false22:                                     ; preds = %for.body13
  %34 = load i32, i32* %k, align 4, !dbg !6521
  %35 = load i32, i32* %real_ch.addr, align 4, !dbg !6523
  %div23 = sdiv i32 %34, %35, !dbg !6524
  %idxprom24 = sext i32 %div23 to i64, !dbg !6525
  %36 = load float*, float** %coeffs.addr, align 8, !dbg !6525
  %arrayidx25 = getelementptr inbounds float, float* %36, i64 %idxprom24, !dbg !6525
  %37 = load float, float* %arrayidx25, align 4, !dbg !6525
  %conv26 = fpext float %37 to double, !dbg !6525
  %call27 = call double @fabs(double %conv26) #2, !dbg !6526
  br label %cond.end28, !dbg !6527

cond.end28:                                       ; preds = %cond.false22, %cond.true20
  %cond29 = phi double [ %conv21, %cond.true20 ], [ %call27, %cond.false22 ], !dbg !6528
  %conv30 = fptrunc double %cond29 to float, !dbg !6530
  store float %conv30, float* %max1, align 4, !dbg !6531
  %38 = load float, float* %max2, align 4, !dbg !6532
  %conv31 = fpext float %38 to double, !dbg !6533
  %39 = load i32, i32* %samples.addr, align 4, !dbg !6534
  %40 = load i32, i32* %k, align 4, !dbg !6535
  %41 = load i32, i32* %real_ch.addr, align 4, !dbg !6536
  %div32 = sdiv i32 %40, %41, !dbg !6537
  %add33 = add nsw i32 %39, %div32, !dbg !6538
  %idxprom34 = sext i32 %add33 to i64, !dbg !6539
  %42 = load float*, float** %coeffs.addr, align 8, !dbg !6539
  %arrayidx35 = getelementptr inbounds float, float* %42, i64 %idxprom34, !dbg !6539
  %43 = load float, float* %arrayidx35, align 4, !dbg !6539
  %conv36 = fpext float %43 to double, !dbg !6539
  %call37 = call double @fabs(double %conv36) #2, !dbg !6540
  %cmp38 = fcmp ogt double %conv31, %call37, !dbg !6541
  br i1 %cmp38, label %cond.true40, label %cond.false42, !dbg !6533

cond.true40:                                      ; preds = %cond.end28
  %44 = load float, float* %max2, align 4, !dbg !6542
  %conv41 = fpext float %44 to double, !dbg !6543
  br label %cond.end49, !dbg !6544

cond.false42:                                     ; preds = %cond.end28
  %45 = load i32, i32* %samples.addr, align 4, !dbg !6545
  %46 = load i32, i32* %k, align 4, !dbg !6546
  %47 = load i32, i32* %real_ch.addr, align 4, !dbg !6547
  %div43 = sdiv i32 %46, %47, !dbg !6548
  %add44 = add nsw i32 %45, %div43, !dbg !6549
  %idxprom45 = sext i32 %add44 to i64, !dbg !6550
  %48 = load float*, float** %coeffs.addr, align 8, !dbg !6550
  %arrayidx46 = getelementptr inbounds float, float* %48, i64 %idxprom45, !dbg !6550
  %49 = load float, float* %arrayidx46, align 4, !dbg !6550
  %conv47 = fpext float %49 to double, !dbg !6550
  %call48 = call double @fabs(double %conv47) #2, !dbg !6551
  br label %cond.end49, !dbg !6552

cond.end49:                                       ; preds = %cond.false42, %cond.true40
  %cond50 = phi double [ %conv41, %cond.true40 ], [ %call48, %cond.false42 ], !dbg !6553
  %conv51 = fptrunc double %cond50 to float, !dbg !6554
  store float %conv51, float* %max2, align 4, !dbg !6555
  br label %for.inc, !dbg !6556

for.inc:                                          ; preds = %cond.end49
  %50 = load i32, i32* %k, align 4, !dbg !6557
  %add52 = add nsw i32 %50, 2, !dbg !6557
  store i32 %add52, i32* %k, align 4, !dbg !6557
  br label %for.cond10, !dbg !6559, !llvm.loop !6560

for.end:                                          ; preds = %for.cond10
  store i32 0, i32* %i, align 4, !dbg !6562
  br label %for.cond53, !dbg !6564

for.cond53:                                       ; preds = %for.inc71, %for.end
  %51 = load i32, i32* %i, align 4, !dbg !6565
  %52 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6568
  %classifications = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %52, i32 0, i32 4, !dbg !6569
  %53 = load i32, i32* %classifications, align 8, !dbg !6569
  %sub54 = sub nsw i32 %53, 1, !dbg !6570
  %cmp55 = icmp slt i32 %51, %sub54, !dbg !6571
  br i1 %cmp55, label %for.body57, label %for.end72, !dbg !6572

for.body57:                                       ; preds = %for.cond53
  %54 = load float, float* %max1, align 4, !dbg !6573
  %55 = load i32, i32* %i, align 4, !dbg !6575
  %idxprom58 = sext i32 %55 to i64, !dbg !6576
  %56 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6576
  %maxes = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %56, i32 0, i32 7, !dbg !6577
  %57 = load [2 x float]*, [2 x float]** %maxes, align 8, !dbg !6577
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %57, i64 %idxprom58, !dbg !6576
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx59, i64 0, i64 0, !dbg !6576
  %58 = load float, float* %arrayidx60, align 4, !dbg !6576
  %cmp61 = fcmp olt float %54, %58, !dbg !6578
  br i1 %cmp61, label %land.lhs.true, label %if.end70, !dbg !6579

land.lhs.true:                                    ; preds = %for.body57
  %59 = load float, float* %max2, align 4, !dbg !6580
  %60 = load i32, i32* %i, align 4, !dbg !6582
  %idxprom63 = sext i32 %60 to i64, !dbg !6583
  %61 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6583
  %maxes64 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %61, i32 0, i32 7, !dbg !6584
  %62 = load [2 x float]*, [2 x float]** %maxes64, align 8, !dbg !6584
  %arrayidx65 = getelementptr inbounds [2 x float], [2 x float]* %62, i64 %idxprom63, !dbg !6583
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx65, i64 0, i64 1, !dbg !6583
  %63 = load float, float* %arrayidx66, align 4, !dbg !6583
  %cmp67 = fcmp olt float %59, %63, !dbg !6585
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !6586

if.then69:                                        ; preds = %land.lhs.true
  br label %for.end72, !dbg !6587

if.end70:                                         ; preds = %land.lhs.true, %for.body57
  br label %for.inc71, !dbg !6588

for.inc71:                                        ; preds = %if.end70
  %64 = load i32, i32* %i, align 4, !dbg !6590
  %inc = add nsw i32 %64, 1, !dbg !6590
  store i32 %inc, i32* %i, align 4, !dbg !6590
  br label %for.cond53, !dbg !6592, !llvm.loop !6593

for.end72:                                        ; preds = %if.then69, %for.cond53
  %65 = load i32, i32* %i, align 4, !dbg !6595
  %66 = load i32, i32* %p, align 4, !dbg !6596
  %idxprom73 = sext i32 %66 to i64, !dbg !6597
  %arrayidx74 = getelementptr inbounds [2 x [50 x i32]], [2 x [50 x i32]]* %classes, i64 0, i64 0, !dbg !6597
  %arrayidx75 = getelementptr inbounds [50 x i32], [50 x i32]* %arrayidx74, i64 0, i64 %idxprom73, !dbg !6597
  store i32 %65, i32* %arrayidx75, align 4, !dbg !6598
  br label %for.inc76, !dbg !6599

for.inc76:                                        ; preds = %for.end72
  %67 = load i32, i32* %p, align 4, !dbg !6600
  %inc77 = add nsw i32 %67, 1, !dbg !6600
  store i32 %inc77, i32* %p, align 4, !dbg !6600
  br label %for.cond, !dbg !6602, !llvm.loop !6603

for.end78:                                        ; preds = %for.cond
  store i32 0, i32* %pass, align 4, !dbg !6605
  br label %for.cond79, !dbg !6607

for.cond79:                                       ; preds = %for.inc259, %for.end78
  %68 = load i32, i32* %pass, align 4, !dbg !6608
  %cmp80 = icmp slt i32 %68, 8, !dbg !6611
  br i1 %cmp80, label %for.body82, label %for.end261, !dbg !6612

for.body82:                                       ; preds = %for.cond79
  store i32 0, i32* %p, align 4, !dbg !6613
  br label %while.cond, !dbg !6615

while.cond:                                       ; preds = %for.end258, %for.body82
  %69 = load i32, i32* %p, align 4, !dbg !6616
  %70 = load i32, i32* %partitions, align 4, !dbg !6618
  %cmp83 = icmp slt i32 %69, %70, !dbg !6619
  br i1 %cmp83, label %while.body, label %while.end, !dbg !6620

while.body:                                       ; preds = %while.cond
  %71 = load i32, i32* %pass, align 4, !dbg !6621
  %cmp85 = icmp eq i32 %71, 0, !dbg !6624
  br i1 %cmp85, label %if.then87, label %if.end118, !dbg !6625

if.then87:                                        ; preds = %while.body
  store i32 0, i32* %j, align 4, !dbg !6626
  br label %for.cond88, !dbg !6628

for.cond88:                                       ; preds = %for.inc115, %if.then87
  %72 = load i32, i32* %j, align 4, !dbg !6629
  %73 = load i32, i32* %channels, align 4, !dbg !6632
  %cmp89 = icmp slt i32 %72, %73, !dbg !6633
  br i1 %cmp89, label %for.body91, label %for.end117, !dbg !6634

for.body91:                                       ; preds = %for.cond88
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %book, metadata !6635, metadata !1998), !dbg !6637
  %74 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6638
  %classbook92 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %74, i32 0, i32 5, !dbg !6639
  %75 = load i32, i32* %classbook92, align 4, !dbg !6639
  %idxprom93 = sext i32 %75 to i64, !dbg !6640
  %76 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !6640
  %codebooks94 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %76, i32 0, i32 15, !dbg !6641
  %77 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks94, align 8, !dbg !6641
  %arrayidx95 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %77, i64 %idxprom93, !dbg !6640
  store %struct.vorbis_enc_codebook* %arrayidx95, %struct.vorbis_enc_codebook** %book, align 8, !dbg !6637
  call void @llvm.dbg.declare(metadata i32* %entry96, metadata !6642, metadata !1998), !dbg !6643
  store i32 0, i32* %entry96, align 4, !dbg !6643
  store i32 0, i32* %i, align 4, !dbg !6644
  br label %for.cond97, !dbg !6646

for.cond97:                                       ; preds = %for.inc109, %for.body91
  %78 = load i32, i32* %i, align 4, !dbg !6647
  %79 = load i32, i32* %classwords, align 4, !dbg !6650
  %cmp98 = icmp slt i32 %78, %79, !dbg !6651
  br i1 %cmp98, label %for.body100, label %for.end111, !dbg !6652

for.body100:                                      ; preds = %for.cond97
  %80 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6653
  %classifications101 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %80, i32 0, i32 4, !dbg !6655
  %81 = load i32, i32* %classifications101, align 8, !dbg !6655
  %82 = load i32, i32* %entry96, align 4, !dbg !6656
  %mul102 = mul nsw i32 %82, %81, !dbg !6656
  store i32 %mul102, i32* %entry96, align 4, !dbg !6656
  %83 = load i32, i32* %p, align 4, !dbg !6657
  %84 = load i32, i32* %i, align 4, !dbg !6658
  %add103 = add nsw i32 %83, %84, !dbg !6659
  %idxprom104 = sext i32 %add103 to i64, !dbg !6660
  %85 = load i32, i32* %j, align 4, !dbg !6661
  %idxprom105 = sext i32 %85 to i64, !dbg !6660
  %arrayidx106 = getelementptr inbounds [2 x [50 x i32]], [2 x [50 x i32]]* %classes, i64 0, i64 %idxprom105, !dbg !6660
  %arrayidx107 = getelementptr inbounds [50 x i32], [50 x i32]* %arrayidx106, i64 0, i64 %idxprom104, !dbg !6660
  %86 = load i32, i32* %arrayidx107, align 4, !dbg !6660
  %87 = load i32, i32* %entry96, align 4, !dbg !6662
  %add108 = add nsw i32 %87, %86, !dbg !6662
  store i32 %add108, i32* %entry96, align 4, !dbg !6662
  br label %for.inc109, !dbg !6663

for.inc109:                                       ; preds = %for.body100
  %88 = load i32, i32* %i, align 4, !dbg !6664
  %inc110 = add nsw i32 %88, 1, !dbg !6664
  store i32 %inc110, i32* %i, align 4, !dbg !6664
  br label %for.cond97, !dbg !6666, !llvm.loop !6667

for.end111:                                       ; preds = %for.cond97
  %89 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6669
  %90 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book, align 8, !dbg !6671
  %91 = load i32, i32* %entry96, align 4, !dbg !6672
  %call112 = call i32 @put_codeword(%struct.PutBitContext* %89, %struct.vorbis_enc_codebook* %90, i32 %91), !dbg !6673
  %tobool = icmp ne i32 %call112, 0, !dbg !6673
  br i1 %tobool, label %if.then113, label %if.end114, !dbg !6674

if.then113:                                       ; preds = %for.end111
  store i32 -22, i32* %retval, align 4, !dbg !6675
  br label %return, !dbg !6675

if.end114:                                        ; preds = %for.end111
  br label %for.inc115, !dbg !6676

for.inc115:                                       ; preds = %if.end114
  %92 = load i32, i32* %j, align 4, !dbg !6677
  %inc116 = add nsw i32 %92, 1, !dbg !6677
  store i32 %inc116, i32* %j, align 4, !dbg !6677
  br label %for.cond88, !dbg !6679, !llvm.loop !6680

for.end117:                                       ; preds = %for.cond88
  br label %if.end118, !dbg !6682

if.end118:                                        ; preds = %for.end117, %while.body
  store i32 0, i32* %i, align 4, !dbg !6684
  br label %for.cond119, !dbg !6686

for.cond119:                                      ; preds = %for.inc255, %if.end118
  %93 = load i32, i32* %i, align 4, !dbg !6687
  %94 = load i32, i32* %classwords, align 4, !dbg !6690
  %cmp120 = icmp slt i32 %93, %94, !dbg !6691
  br i1 %cmp120, label %land.rhs, label %land.end, !dbg !6692

land.rhs:                                         ; preds = %for.cond119
  %95 = load i32, i32* %p, align 4, !dbg !6693
  %96 = load i32, i32* %partitions, align 4, !dbg !6695
  %cmp122 = icmp slt i32 %95, %96, !dbg !6696
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond119
  %97 = phi i1 [ false, %for.cond119 ], [ %cmp122, %land.rhs ]
  br i1 %97, label %for.body124, label %for.end258, !dbg !6697

for.body124:                                      ; preds = %land.end
  store i32 0, i32* %j, align 4, !dbg !6699
  br label %for.cond125, !dbg !6702

for.cond125:                                      ; preds = %for.inc252, %for.body124
  %98 = load i32, i32* %j, align 4, !dbg !6703
  %99 = load i32, i32* %channels, align 4, !dbg !6706
  %cmp126 = icmp slt i32 %98, %99, !dbg !6707
  br i1 %cmp126, label %for.body128, label %for.end254, !dbg !6708

for.body128:                                      ; preds = %for.cond125
  call void @llvm.dbg.declare(metadata i32* %nbook, metadata !6709, metadata !1998), !dbg !6711
  %100 = load i32, i32* %pass, align 4, !dbg !6712
  %idxprom129 = sext i32 %100 to i64, !dbg !6713
  %101 = load i32, i32* %p, align 4, !dbg !6714
  %idxprom130 = sext i32 %101 to i64, !dbg !6715
  %102 = load i32, i32* %j, align 4, !dbg !6716
  %idxprom131 = sext i32 %102 to i64, !dbg !6715
  %arrayidx132 = getelementptr inbounds [2 x [50 x i32]], [2 x [50 x i32]]* %classes, i64 0, i64 %idxprom131, !dbg !6715
  %arrayidx133 = getelementptr inbounds [50 x i32], [50 x i32]* %arrayidx132, i64 0, i64 %idxprom130, !dbg !6715
  %103 = load i32, i32* %arrayidx133, align 4, !dbg !6715
  %idxprom134 = sext i32 %103 to i64, !dbg !6713
  %104 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6713
  %books = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %104, i32 0, i32 6, !dbg !6717
  %105 = load [8 x i8]*, [8 x i8]** %books, align 8, !dbg !6717
  %arrayidx135 = getelementptr inbounds [8 x i8], [8 x i8]* %105, i64 %idxprom134, !dbg !6713
  %arrayidx136 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx135, i64 0, i64 %idxprom129, !dbg !6713
  %106 = load i8, i8* %arrayidx136, align 1, !dbg !6713
  %conv137 = sext i8 %106 to i32, !dbg !6713
  store i32 %conv137, i32* %nbook, align 4, !dbg !6711
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %book138, metadata !6718, metadata !1998), !dbg !6719
  %107 = load i32, i32* %nbook, align 4, !dbg !6720
  %idxprom139 = sext i32 %107 to i64, !dbg !6721
  %108 = load %struct.vorbis_enc_context*, %struct.vorbis_enc_context** %venc.addr, align 8, !dbg !6721
  %codebooks140 = getelementptr inbounds %struct.vorbis_enc_context, %struct.vorbis_enc_context* %108, i32 0, i32 15, !dbg !6722
  %109 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %codebooks140, align 8, !dbg !6722
  %arrayidx141 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %109, i64 %idxprom139, !dbg !6721
  store %struct.vorbis_enc_codebook* %arrayidx141, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6719
  call void @llvm.dbg.declare(metadata float** %buf, metadata !6723, metadata !1998), !dbg !6724
  %110 = load float*, float** %coeffs.addr, align 8, !dbg !6725
  %111 = load i32, i32* %samples.addr, align 4, !dbg !6726
  %112 = load i32, i32* %j, align 4, !dbg !6727
  %mul142 = mul nsw i32 %111, %112, !dbg !6728
  %idx.ext = sext i32 %mul142 to i64, !dbg !6729
  %add.ptr = getelementptr inbounds float, float* %110, i64 %idx.ext, !dbg !6729
  %113 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6730
  %begin143 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %113, i32 0, i32 1, !dbg !6731
  %114 = load i32, i32* %begin143, align 4, !dbg !6731
  %idx.ext144 = sext i32 %114 to i64, !dbg !6732
  %add.ptr145 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext144, !dbg !6732
  %115 = load i32, i32* %p, align 4, !dbg !6733
  %116 = load i32, i32* %psize, align 4, !dbg !6734
  %mul146 = mul nsw i32 %115, %116, !dbg !6735
  %idx.ext147 = sext i32 %mul146 to i64, !dbg !6736
  %add.ptr148 = getelementptr inbounds float, float* %add.ptr145, i64 %idx.ext147, !dbg !6736
  store float* %add.ptr148, float** %buf, align 8, !dbg !6724
  %117 = load i32, i32* %nbook, align 4, !dbg !6737
  %cmp149 = icmp eq i32 %117, -1, !dbg !6739
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !6740

if.then151:                                       ; preds = %for.body128
  br label %for.inc252, !dbg !6741

if.end152:                                        ; preds = %for.body128
  %118 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6742
  %type153 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %118, i32 0, i32 0, !dbg !6743
  %119 = load i32, i32* %type153, align 8, !dbg !6743
  %cmp154 = icmp eq i32 %119, 0, !dbg !6744
  br i1 %cmp154, label %cond.true159, label %lor.lhs.false, !dbg !6745

lor.lhs.false:                                    ; preds = %if.end152
  %120 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6746
  %type156 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %120, i32 0, i32 0, !dbg !6748
  %121 = load i32, i32* %type156, align 8, !dbg !6748
  %cmp157 = icmp eq i32 %121, 2, !dbg !6749
  br i1 %cmp157, label %cond.true159, label %cond.false160, !dbg !6750

cond.true159:                                     ; preds = %lor.lhs.false, %if.end152
  br label %cond.end161, !dbg !6751

cond.false160:                                    ; preds = %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 954, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__.residue_encode, i32 0, i32 0)) #9, !dbg !6753
  unreachable, !dbg !6753
                                                  ; No predecessors!
  br label %cond.end161, !dbg !6755

cond.end161:                                      ; preds = %122, %cond.true159
  %123 = load i32, i32* %psize, align 4, !dbg !6757
  %124 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6758
  %ndimensions162 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %124, i32 0, i32 3, !dbg !6759
  %125 = load i32, i32* %ndimensions162, align 8, !dbg !6759
  %rem = srem i32 %123, %125, !dbg !6760
  %tobool163 = icmp ne i32 %rem, 0, !dbg !6760
  br i1 %tobool163, label %cond.false165, label %cond.true164, !dbg !6761

cond.true164:                                     ; preds = %cond.end161
  br label %cond.end166, !dbg !6762

cond.false165:                                    ; preds = %cond.end161
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 955, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__.residue_encode, i32 0, i32 0)) #9, !dbg !6763
  unreachable, !dbg !6763
                                                  ; No predecessors!
  br label %cond.end166, !dbg !6764

cond.end166:                                      ; preds = %126, %cond.true164
  %127 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6765
  %type167 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %127, i32 0, i32 0, !dbg !6767
  %128 = load i32, i32* %type167, align 8, !dbg !6767
  %cmp168 = icmp eq i32 %128, 0, !dbg !6768
  br i1 %cmp168, label %if.then170, label %if.else, !dbg !6769

if.then170:                                       ; preds = %cond.end166
  store i32 0, i32* %k, align 4, !dbg !6770
  br label %for.cond171, !dbg !6773

for.cond171:                                      ; preds = %for.inc195, %if.then170
  %129 = load i32, i32* %k, align 4, !dbg !6774
  %130 = load i32, i32* %psize, align 4, !dbg !6777
  %cmp172 = icmp slt i32 %129, %130, !dbg !6778
  br i1 %cmp172, label %for.body174, label %for.end198, !dbg !6779

for.body174:                                      ; preds = %for.cond171
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6780, metadata !1998), !dbg !6782
  call void @llvm.dbg.declare(metadata float** %a, metadata !6783, metadata !1998), !dbg !6784
  %131 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6785
  %132 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6786
  %133 = load i32, i32* %k, align 4, !dbg !6787
  %idxprom175 = sext i32 %133 to i64, !dbg !6788
  %134 = load float*, float** %buf, align 8, !dbg !6788
  %arrayidx176 = getelementptr inbounds float, float* %134, i64 %idxprom175, !dbg !6788
  %call177 = call float* @put_vector(%struct.vorbis_enc_codebook* %131, %struct.PutBitContext* %132, float* %arrayidx176), !dbg !6789
  store float* %call177, float** %a, align 8, !dbg !6784
  %135 = load float*, float** %a, align 8, !dbg !6790
  %tobool178 = icmp ne float* %135, null, !dbg !6790
  br i1 %tobool178, label %if.end180, label %if.then179, !dbg !6792

if.then179:                                       ; preds = %for.body174
  store i32 -22, i32* %retval, align 4, !dbg !6793
  br label %return, !dbg !6793

if.end180:                                        ; preds = %for.body174
  store i32 0, i32* %l, align 4, !dbg !6794
  br label %for.cond181, !dbg !6796

for.cond181:                                      ; preds = %for.inc192, %if.end180
  %136 = load i32, i32* %l, align 4, !dbg !6797
  %137 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6800
  %ndimensions182 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %137, i32 0, i32 3, !dbg !6801
  %138 = load i32, i32* %ndimensions182, align 8, !dbg !6801
  %cmp183 = icmp slt i32 %136, %138, !dbg !6802
  br i1 %cmp183, label %for.body185, label %for.end194, !dbg !6803

for.body185:                                      ; preds = %for.cond181
  %139 = load i32, i32* %l, align 4, !dbg !6804
  %idxprom186 = sext i32 %139 to i64, !dbg !6805
  %140 = load float*, float** %a, align 8, !dbg !6805
  %arrayidx187 = getelementptr inbounds float, float* %140, i64 %idxprom186, !dbg !6805
  %141 = load float, float* %arrayidx187, align 4, !dbg !6805
  %142 = load i32, i32* %k, align 4, !dbg !6806
  %143 = load i32, i32* %l, align 4, !dbg !6807
  %add188 = add nsw i32 %142, %143, !dbg !6808
  %idxprom189 = sext i32 %add188 to i64, !dbg !6809
  %144 = load float*, float** %buf, align 8, !dbg !6809
  %arrayidx190 = getelementptr inbounds float, float* %144, i64 %idxprom189, !dbg !6809
  %145 = load float, float* %arrayidx190, align 4, !dbg !6810
  %sub191 = fsub float %145, %141, !dbg !6810
  store float %sub191, float* %arrayidx190, align 4, !dbg !6810
  br label %for.inc192, !dbg !6809

for.inc192:                                       ; preds = %for.body185
  %146 = load i32, i32* %l, align 4, !dbg !6811
  %inc193 = add nsw i32 %146, 1, !dbg !6811
  store i32 %inc193, i32* %l, align 4, !dbg !6811
  br label %for.cond181, !dbg !6813, !llvm.loop !6814

for.end194:                                       ; preds = %for.cond181
  br label %for.inc195, !dbg !6816

for.inc195:                                       ; preds = %for.end194
  %147 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6817
  %ndimensions196 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %147, i32 0, i32 3, !dbg !6819
  %148 = load i32, i32* %ndimensions196, align 8, !dbg !6819
  %149 = load i32, i32* %k, align 4, !dbg !6820
  %add197 = add nsw i32 %149, %148, !dbg !6820
  store i32 %add197, i32* %k, align 4, !dbg !6820
  br label %for.cond171, !dbg !6821, !llvm.loop !6822

for.end198:                                       ; preds = %for.cond171
  br label %if.end251, !dbg !6824

if.else:                                          ; preds = %cond.end166
  call void @llvm.dbg.declare(metadata i32* %s199, metadata !6825, metadata !1998), !dbg !6827
  %150 = load %struct.vorbis_enc_residue*, %struct.vorbis_enc_residue** %rc.addr, align 8, !dbg !6828
  %begin200 = getelementptr inbounds %struct.vorbis_enc_residue, %struct.vorbis_enc_residue* %150, i32 0, i32 1, !dbg !6829
  %151 = load i32, i32* %begin200, align 4, !dbg !6829
  %152 = load i32, i32* %p, align 4, !dbg !6830
  %153 = load i32, i32* %psize, align 4, !dbg !6831
  %mul201 = mul nsw i32 %152, %153, !dbg !6832
  %add202 = add nsw i32 %151, %mul201, !dbg !6833
  store i32 %add202, i32* %s199, align 4, !dbg !6827
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !6834, metadata !1998), !dbg !6835
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !6836, metadata !1998), !dbg !6837
  %154 = load i32, i32* %s199, align 4, !dbg !6838
  %155 = load i32, i32* %real_ch.addr, align 4, !dbg !6839
  %rem203 = srem i32 %154, %155, !dbg !6840
  %156 = load i32, i32* %samples.addr, align 4, !dbg !6841
  %mul204 = mul nsw i32 %rem203, %156, !dbg !6842
  store i32 %mul204, i32* %a1, align 4, !dbg !6843
  %157 = load i32, i32* %s199, align 4, !dbg !6844
  %158 = load i32, i32* %real_ch.addr, align 4, !dbg !6845
  %div205 = sdiv i32 %157, %158, !dbg !6846
  store i32 %div205, i32* %b1, align 4, !dbg !6847
  %159 = load i32, i32* %real_ch.addr, align 4, !dbg !6848
  %160 = load i32, i32* %samples.addr, align 4, !dbg !6849
  %mul206 = mul nsw i32 %159, %160, !dbg !6850
  store i32 %mul206, i32* %s199, align 4, !dbg !6851
  store i32 0, i32* %k, align 4, !dbg !6852
  br label %for.cond207, !dbg !6854

for.cond207:                                      ; preds = %for.inc247, %if.else
  %161 = load i32, i32* %k, align 4, !dbg !6855
  %162 = load i32, i32* %psize, align 4, !dbg !6858
  %cmp208 = icmp slt i32 %161, %162, !dbg !6859
  br i1 %cmp208, label %for.body210, label %for.end250, !dbg !6860

for.body210:                                      ; preds = %for.cond207
  call void @llvm.dbg.declare(metadata i32* %dim, metadata !6861, metadata !1998), !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !6864, metadata !1998), !dbg !6865
  %163 = load i32, i32* %a1, align 4, !dbg !6866
  store i32 %163, i32* %a2, align 4, !dbg !6865
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !6867, metadata !1998), !dbg !6868
  %164 = load i32, i32* %b1, align 4, !dbg !6869
  store i32 %164, i32* %b2, align 4, !dbg !6868
  call void @llvm.dbg.declare(metadata [8 x float]* %vec, metadata !6870, metadata !1998), !dbg !6872
  call void @llvm.dbg.declare(metadata float** %pv, metadata !6873, metadata !1998), !dbg !6874
  %arraydecay = getelementptr inbounds [8 x float], [8 x float]* %vec, i32 0, i32 0, !dbg !6875
  store float* %arraydecay, float** %pv, align 8, !dbg !6874
  %165 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6876
  %ndimensions211 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %165, i32 0, i32 3, !dbg !6878
  %166 = load i32, i32* %ndimensions211, align 8, !dbg !6878
  store i32 %166, i32* %dim, align 4, !dbg !6879
  br label %for.cond212, !dbg !6880

for.cond212:                                      ; preds = %if.end223, %for.body210
  %167 = load i32, i32* %dim, align 4, !dbg !6881
  %dec = add nsw i32 %167, -1, !dbg !6881
  store i32 %dec, i32* %dim, align 4, !dbg !6881
  %tobool213 = icmp ne i32 %167, 0, !dbg !6884
  br i1 %tobool213, label %for.body214, label %for.end224, !dbg !6884

for.body214:                                      ; preds = %for.cond212
  %168 = load i32, i32* %a2, align 4, !dbg !6885
  %169 = load i32, i32* %b2, align 4, !dbg !6887
  %add215 = add nsw i32 %168, %169, !dbg !6888
  %idxprom216 = sext i32 %add215 to i64, !dbg !6889
  %170 = load float*, float** %coeffs.addr, align 8, !dbg !6889
  %arrayidx217 = getelementptr inbounds float, float* %170, i64 %idxprom216, !dbg !6889
  %171 = load float, float* %arrayidx217, align 4, !dbg !6889
  %172 = load float*, float** %pv, align 8, !dbg !6890
  %incdec.ptr = getelementptr inbounds float, float* %172, i32 1, !dbg !6890
  store float* %incdec.ptr, float** %pv, align 8, !dbg !6890
  store float %171, float* %172, align 4, !dbg !6891
  %173 = load i32, i32* %samples.addr, align 4, !dbg !6892
  %174 = load i32, i32* %a2, align 4, !dbg !6894
  %add218 = add nsw i32 %174, %173, !dbg !6894
  store i32 %add218, i32* %a2, align 4, !dbg !6894
  %175 = load i32, i32* %s199, align 4, !dbg !6895
  %cmp219 = icmp eq i32 %add218, %175, !dbg !6896
  br i1 %cmp219, label %if.then221, label %if.end223, !dbg !6897

if.then221:                                       ; preds = %for.body214
  store i32 0, i32* %a2, align 4, !dbg !6898
  %176 = load i32, i32* %b2, align 4, !dbg !6900
  %inc222 = add nsw i32 %176, 1, !dbg !6900
  store i32 %inc222, i32* %b2, align 4, !dbg !6900
  br label %if.end223, !dbg !6901

if.end223:                                        ; preds = %if.then221, %for.body214
  br label %for.cond212, !dbg !6902, !llvm.loop !6904

for.end224:                                       ; preds = %for.cond212
  %177 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6906
  %178 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6907
  %arraydecay225 = getelementptr inbounds [8 x float], [8 x float]* %vec, i32 0, i32 0, !dbg !6908
  %call226 = call float* @put_vector(%struct.vorbis_enc_codebook* %177, %struct.PutBitContext* %178, float* %arraydecay225), !dbg !6909
  store float* %call226, float** %pv, align 8, !dbg !6910
  %179 = load float*, float** %pv, align 8, !dbg !6911
  %tobool227 = icmp ne float* %179, null, !dbg !6911
  br i1 %tobool227, label %if.end229, label %if.then228, !dbg !6913

if.then228:                                       ; preds = %for.end224
  store i32 -22, i32* %retval, align 4, !dbg !6914
  br label %return, !dbg !6914

if.end229:                                        ; preds = %for.end224
  %180 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6915
  %ndimensions230 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %180, i32 0, i32 3, !dbg !6917
  %181 = load i32, i32* %ndimensions230, align 8, !dbg !6917
  store i32 %181, i32* %dim, align 4, !dbg !6918
  br label %for.cond231, !dbg !6919

for.cond231:                                      ; preds = %if.end245, %if.end229
  %182 = load i32, i32* %dim, align 4, !dbg !6920
  %dec232 = add nsw i32 %182, -1, !dbg !6920
  store i32 %dec232, i32* %dim, align 4, !dbg !6920
  %tobool233 = icmp ne i32 %182, 0, !dbg !6923
  br i1 %tobool233, label %for.body234, label %for.end246, !dbg !6923

for.body234:                                      ; preds = %for.cond231
  %183 = load float*, float** %pv, align 8, !dbg !6924
  %incdec.ptr235 = getelementptr inbounds float, float* %183, i32 1, !dbg !6924
  store float* %incdec.ptr235, float** %pv, align 8, !dbg !6924
  %184 = load float, float* %183, align 4, !dbg !6926
  %185 = load i32, i32* %a1, align 4, !dbg !6927
  %186 = load i32, i32* %b1, align 4, !dbg !6928
  %add236 = add nsw i32 %185, %186, !dbg !6929
  %idxprom237 = sext i32 %add236 to i64, !dbg !6930
  %187 = load float*, float** %coeffs.addr, align 8, !dbg !6930
  %arrayidx238 = getelementptr inbounds float, float* %187, i64 %idxprom237, !dbg !6930
  %188 = load float, float* %arrayidx238, align 4, !dbg !6931
  %sub239 = fsub float %188, %184, !dbg !6931
  store float %sub239, float* %arrayidx238, align 4, !dbg !6931
  %189 = load i32, i32* %samples.addr, align 4, !dbg !6932
  %190 = load i32, i32* %a1, align 4, !dbg !6934
  %add240 = add nsw i32 %190, %189, !dbg !6934
  store i32 %add240, i32* %a1, align 4, !dbg !6934
  %191 = load i32, i32* %s199, align 4, !dbg !6935
  %cmp241 = icmp eq i32 %add240, %191, !dbg !6936
  br i1 %cmp241, label %if.then243, label %if.end245, !dbg !6937

if.then243:                                       ; preds = %for.body234
  store i32 0, i32* %a1, align 4, !dbg !6938
  %192 = load i32, i32* %b1, align 4, !dbg !6940
  %inc244 = add nsw i32 %192, 1, !dbg !6940
  store i32 %inc244, i32* %b1, align 4, !dbg !6940
  br label %if.end245, !dbg !6941

if.end245:                                        ; preds = %if.then243, %for.body234
  br label %for.cond231, !dbg !6942, !llvm.loop !6944

for.end246:                                       ; preds = %for.cond231
  br label %for.inc247, !dbg !6946

for.inc247:                                       ; preds = %for.end246
  %193 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book138, align 8, !dbg !6947
  %ndimensions248 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %193, i32 0, i32 3, !dbg !6949
  %194 = load i32, i32* %ndimensions248, align 8, !dbg !6949
  %195 = load i32, i32* %k, align 4, !dbg !6950
  %add249 = add nsw i32 %195, %194, !dbg !6950
  store i32 %add249, i32* %k, align 4, !dbg !6950
  br label %for.cond207, !dbg !6951, !llvm.loop !6952

for.end250:                                       ; preds = %for.cond207
  br label %if.end251

if.end251:                                        ; preds = %for.end250, %for.end198
  br label %for.inc252, !dbg !6954

for.inc252:                                       ; preds = %if.end251, %if.then151
  %196 = load i32, i32* %j, align 4, !dbg !6955
  %inc253 = add nsw i32 %196, 1, !dbg !6955
  store i32 %inc253, i32* %j, align 4, !dbg !6955
  br label %for.cond125, !dbg !6957, !llvm.loop !6958

for.end254:                                       ; preds = %for.cond125
  br label %for.inc255, !dbg !6960

for.inc255:                                       ; preds = %for.end254
  %197 = load i32, i32* %i, align 4, !dbg !6961
  %inc256 = add nsw i32 %197, 1, !dbg !6961
  store i32 %inc256, i32* %i, align 4, !dbg !6961
  %198 = load i32, i32* %p, align 4, !dbg !6963
  %inc257 = add nsw i32 %198, 1, !dbg !6963
  store i32 %inc257, i32* %p, align 4, !dbg !6963
  br label %for.cond119, !dbg !6964, !llvm.loop !6965

for.end258:                                       ; preds = %land.end
  br label %while.cond, !dbg !6967, !llvm.loop !6969

while.end:                                        ; preds = %while.cond
  br label %for.inc259, !dbg !6970

for.inc259:                                       ; preds = %while.end
  %199 = load i32, i32* %pass, align 4, !dbg !6971
  %inc260 = add nsw i32 %199, 1, !dbg !6971
  store i32 %inc260, i32* %pass, align 4, !dbg !6971
  br label %for.cond79, !dbg !6973, !llvm.loop !6974

for.end261:                                       ; preds = %for.cond79
  store i32 0, i32* %retval, align 4, !dbg !6976
  br label %return, !dbg !6976

return:                                           ; preds = %for.end261, %if.then228, %if.then179, %if.then113
  %200 = load i32, i32* %retval, align 4, !dbg !6977
  ret i32 %200, !dbg !6977
}

declare void @ff_af_queue_remove(%struct.AudioFrameQueue*, i32, i64*, i64*) #3

declare i8* @av_packet_new_side_data(%struct.AVPacket*, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_bufqueue_is_full(%struct.FFBufQueue* %queue) #7 !dbg !6978 {
entry:
  %queue.addr = alloca %struct.FFBufQueue*, align 8
  store %struct.FFBufQueue* %queue, %struct.FFBufQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFBufQueue** %queue.addr, metadata !6981, metadata !1998), !dbg !6982
  %0 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !6983
  %available = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %0, i32 0, i32 2, !dbg !6984
  %1 = load i16, i16* %available, align 2, !dbg !6984
  %conv = zext i16 %1 to i32, !dbg !6983
  %cmp = icmp eq i32 %conv, 64, !dbg !6985
  %conv1 = zext i1 %cmp to i32, !dbg !6985
  ret i32 %conv1, !dbg !6986
}

declare void @av_frame_free(%struct.AVFrame**) #3

declare %struct.AVFrame* @av_frame_alloc() #3

declare i32 @av_frame_get_buffer(%struct.AVFrame*, i32) #3

declare i32 @av_get_bytes_per_sample(i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.AVFrame* @ff_bufqueue_get(%struct.FFBufQueue* %queue) #7 !dbg !6987 {
entry:
  %queue.addr = alloca %struct.FFBufQueue*, align 8
  %ret = alloca %struct.AVFrame*, align 8
  store %struct.FFBufQueue* %queue, %struct.FFBufQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFBufQueue** %queue.addr, metadata !6990, metadata !1998), !dbg !6991
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %ret, metadata !6992, metadata !1998), !dbg !6993
  %0 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !6994
  %head = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %0, i32 0, i32 1, !dbg !6995
  %1 = load i16, i16* %head, align 8, !dbg !6995
  %idxprom = zext i16 %1 to i64, !dbg !6996
  %2 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !6996
  %queue1 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %2, i32 0, i32 0, !dbg !6997
  %arrayidx = getelementptr inbounds [64 x %struct.AVFrame*], [64 x %struct.AVFrame*]* %queue1, i64 0, i64 %idxprom, !dbg !6996
  %3 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx, align 8, !dbg !6996
  store %struct.AVFrame* %3, %struct.AVFrame** %ret, align 8, !dbg !6993
  br label %do.body, !dbg !6998, !llvm.loop !6999

do.body:                                          ; preds = %entry
  %4 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7000
  %available = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %4, i32 0, i32 2, !dbg !7004
  %5 = load i16, i16* %available, align 2, !dbg !7004
  %tobool = icmp ne i16 %5, 0, !dbg !7005
  br i1 %tobool, label %if.end, label %if.then, !dbg !7006

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i32 0, i32 0), i32 101), !dbg !7007
  call void @abort() #9, !dbg !7010
  unreachable, !dbg !7012

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !7013

do.end:                                           ; preds = %if.end
  %6 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7015
  %available2 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %6, i32 0, i32 2, !dbg !7016
  %7 = load i16, i16* %available2, align 2, !dbg !7017
  %dec = add i16 %7, -1, !dbg !7017
  store i16 %dec, i16* %available2, align 2, !dbg !7017
  %8 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7018
  %head3 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %8, i32 0, i32 1, !dbg !7019
  %9 = load i16, i16* %head3, align 8, !dbg !7019
  %idxprom4 = zext i16 %9 to i64, !dbg !7020
  %10 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7020
  %queue5 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %10, i32 0, i32 0, !dbg !7021
  %arrayidx6 = getelementptr inbounds [64 x %struct.AVFrame*], [64 x %struct.AVFrame*]* %queue5, i64 0, i64 %idxprom4, !dbg !7020
  store %struct.AVFrame* null, %struct.AVFrame** %arrayidx6, align 8, !dbg !7022
  %11 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7023
  %head7 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %11, i32 0, i32 1, !dbg !7024
  %12 = load i16, i16* %head7, align 8, !dbg !7024
  %conv = zext i16 %12 to i32, !dbg !7023
  %add = add nsw i32 %conv, 1, !dbg !7025
  %rem = srem i32 %add, 64, !dbg !7026
  %conv8 = trunc i32 %rem to i16, !dbg !7027
  %13 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7028
  %head9 = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %13, i32 0, i32 1, !dbg !7029
  store i16 %conv8, i16* %head9, align 8, !dbg !7030
  %14 = load %struct.AVFrame*, %struct.AVFrame** %ret, align 8, !dbg !7031
  ret %struct.AVFrame* %14, !dbg !7032
}

; Function Attrs: nounwind uwtable
define internal float @get_floor_average(%struct.vorbis_enc_floor* %fc, float* %coeffs, i32 %i) #1 !dbg !7033 {
entry:
  %fc.addr = alloca %struct.vorbis_enc_floor*, align 8
  %coeffs.addr = alloca float*, align 8
  %i.addr = alloca i32, align 4
  %begin = alloca i32, align 4
  %end = alloca i32, align 4
  %j = alloca i32, align 4
  %average = alloca float, align 4
  store %struct.vorbis_enc_floor* %fc, %struct.vorbis_enc_floor** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_floor** %fc.addr, metadata !7036, metadata !1998), !dbg !7037
  store float* %coeffs, float** %coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coeffs.addr, metadata !7038, metadata !1998), !dbg !7039
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7040, metadata !1998), !dbg !7041
  call void @llvm.dbg.declare(metadata i32* %begin, metadata !7042, metadata !1998), !dbg !7043
  %0 = load i32, i32* %i.addr, align 4, !dbg !7044
  %sub = sub nsw i32 %0, 1, !dbg !7045
  %cmp = icmp sgt i32 %sub, 0, !dbg !7046
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7047

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %i.addr, align 4, !dbg !7048
  %sub1 = sub nsw i32 %1, 1, !dbg !7050
  br label %cond.end, !dbg !7051

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub1, %cond.true ], [ 0, %cond.false ], !dbg !7054
  %idxprom = sext i32 %cond to i64, !dbg !7056
  %2 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !7056
  %list = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %2, i32 0, i32 7, !dbg !7057
  %3 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list, align 8, !dbg !7057
  %arrayidx = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %3, i64 %idxprom, !dbg !7056
  %sort = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx, i32 0, i32 1, !dbg !7058
  %4 = load i16, i16* %sort, align 2, !dbg !7058
  %idxprom2 = zext i16 %4 to i64, !dbg !7059
  %5 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !7059
  %list3 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %5, i32 0, i32 7, !dbg !7060
  %6 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list3, align 8, !dbg !7060
  %arrayidx4 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %6, i64 %idxprom2, !dbg !7059
  %x = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx4, i32 0, i32 0, !dbg !7061
  %7 = load i16, i16* %x, align 2, !dbg !7061
  %conv = zext i16 %7 to i32, !dbg !7059
  store i32 %conv, i32* %begin, align 4, !dbg !7062
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7063, metadata !1998), !dbg !7064
  %8 = load i32, i32* %i.addr, align 4, !dbg !7065
  %add = add nsw i32 %8, 1, !dbg !7066
  %9 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !7067
  %values = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %9, i32 0, i32 6, !dbg !7068
  %10 = load i32, i32* %values, align 8, !dbg !7068
  %sub5 = sub nsw i32 %10, 1, !dbg !7069
  %cmp6 = icmp sgt i32 %add, %sub5, !dbg !7070
  br i1 %cmp6, label %cond.true8, label %cond.false11, !dbg !7071

cond.true8:                                       ; preds = %cond.end
  %11 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !7072
  %values9 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %11, i32 0, i32 6, !dbg !7073
  %12 = load i32, i32* %values9, align 8, !dbg !7073
  %sub10 = sub nsw i32 %12, 1, !dbg !7074
  br label %cond.end13, !dbg !7075

cond.false11:                                     ; preds = %cond.end
  %13 = load i32, i32* %i.addr, align 4, !dbg !7076
  %add12 = add nsw i32 %13, 1, !dbg !7077
  br label %cond.end13, !dbg !7078

cond.end13:                                       ; preds = %cond.false11, %cond.true8
  %cond14 = phi i32 [ %sub10, %cond.true8 ], [ %add12, %cond.false11 ], !dbg !7079
  %idxprom15 = sext i32 %cond14 to i64, !dbg !7080
  %14 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !7080
  %list16 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %14, i32 0, i32 7, !dbg !7081
  %15 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list16, align 8, !dbg !7081
  %arrayidx17 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %15, i64 %idxprom15, !dbg !7080
  %sort18 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx17, i32 0, i32 1, !dbg !7082
  %16 = load i16, i16* %sort18, align 2, !dbg !7082
  %idxprom19 = zext i16 %16 to i64, !dbg !7083
  %17 = load %struct.vorbis_enc_floor*, %struct.vorbis_enc_floor** %fc.addr, align 8, !dbg !7083
  %list20 = getelementptr inbounds %struct.vorbis_enc_floor, %struct.vorbis_enc_floor* %17, i32 0, i32 7, !dbg !7084
  %18 = load %struct.vorbis_floor1_entry*, %struct.vorbis_floor1_entry** %list20, align 8, !dbg !7084
  %arrayidx21 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %18, i64 %idxprom19, !dbg !7083
  %x22 = getelementptr inbounds %struct.vorbis_floor1_entry, %struct.vorbis_floor1_entry* %arrayidx21, i32 0, i32 0, !dbg !7085
  %19 = load i16, i16* %x22, align 2, !dbg !7085
  %conv23 = zext i16 %19 to i32, !dbg !7083
  store i32 %conv23, i32* %end, align 4, !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7087, metadata !1998), !dbg !7088
  call void @llvm.dbg.declare(metadata float* %average, metadata !7089, metadata !1998), !dbg !7090
  store float 0.000000e+00, float* %average, align 4, !dbg !7090
  %20 = load i32, i32* %begin, align 4, !dbg !7091
  store i32 %20, i32* %j, align 4, !dbg !7093
  br label %for.cond, !dbg !7094

for.cond:                                         ; preds = %for.inc, %cond.end13
  %21 = load i32, i32* %j, align 4, !dbg !7095
  %22 = load i32, i32* %end, align 4, !dbg !7098
  %cmp24 = icmp slt i32 %21, %22, !dbg !7099
  br i1 %cmp24, label %for.body, label %for.end, !dbg !7100

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %j, align 4, !dbg !7101
  %idxprom26 = sext i32 %23 to i64, !dbg !7102
  %24 = load float*, float** %coeffs.addr, align 8, !dbg !7102
  %arrayidx27 = getelementptr inbounds float, float* %24, i64 %idxprom26, !dbg !7102
  %25 = load float, float* %arrayidx27, align 4, !dbg !7102
  %conv28 = fpext float %25 to double, !dbg !7102
  %call = call double @fabs(double %conv28) #2, !dbg !7103
  %26 = load float, float* %average, align 4, !dbg !7104
  %conv29 = fpext float %26 to double, !dbg !7104
  %add30 = fadd double %conv29, %call, !dbg !7104
  %conv31 = fptrunc double %add30 to float, !dbg !7104
  store float %conv31, float* %average, align 4, !dbg !7104
  br label %for.inc, !dbg !7105

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %j, align 4, !dbg !7106
  %inc = add nsw i32 %27, 1, !dbg !7106
  store i32 %inc, i32* %j, align 4, !dbg !7106
  br label %for.cond, !dbg !7108, !llvm.loop !7109

for.end:                                          ; preds = %for.cond
  %28 = load float, float* %average, align 4, !dbg !7111
  %29 = load i32, i32* %end, align 4, !dbg !7112
  %30 = load i32, i32* %begin, align 4, !dbg !7113
  %sub32 = sub nsw i32 %29, %30, !dbg !7114
  %conv33 = sitofp i32 %sub32 to float, !dbg !7115
  %div = fdiv float %28, %conv33, !dbg !7116
  ret float %div, !dbg !7117
}

; Function Attrs: nounwind
declare double @sqrt(double) #8

; Function Attrs: nounwind
declare double @pow(double, double) #8

; Function Attrs: nounwind uwtable
define internal i32 @render_point(i32 %x0, i32 %y0, i32 %x1, i32 %y1, i32 %x) #1 !dbg !7118 {
entry:
  %x0.addr = alloca i32, align 4
  %y0.addr = alloca i32, align 4
  %x1.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %x0, i32* %x0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x0.addr, metadata !7121, metadata !1998), !dbg !7122
  store i32 %y0, i32* %y0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y0.addr, metadata !7123, metadata !1998), !dbg !7124
  store i32 %x1, i32* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x1.addr, metadata !7125, metadata !1998), !dbg !7126
  store i32 %y1, i32* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y1.addr, metadata !7127, metadata !1998), !dbg !7128
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7129, metadata !1998), !dbg !7130
  %0 = load i32, i32* %y0.addr, align 4, !dbg !7131
  %1 = load i32, i32* %x.addr, align 4, !dbg !7132
  %2 = load i32, i32* %x0.addr, align 4, !dbg !7133
  %sub = sub nsw i32 %1, %2, !dbg !7134
  %3 = load i32, i32* %y1.addr, align 4, !dbg !7135
  %4 = load i32, i32* %y0.addr, align 4, !dbg !7136
  %sub1 = sub nsw i32 %3, %4, !dbg !7137
  %mul = mul nsw i32 %sub, %sub1, !dbg !7138
  %5 = load i32, i32* %x1.addr, align 4, !dbg !7139
  %6 = load i32, i32* %x0.addr, align 4, !dbg !7140
  %sub2 = sub nsw i32 %5, %6, !dbg !7141
  %div = sdiv i32 %mul, %sub2, !dbg !7142
  %add = add nsw i32 %0, %div, !dbg !7143
  ret i32 %add, !dbg !7144
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_codeword(%struct.PutBitContext* %pb, %struct.vorbis_enc_codebook* %cb, i32 %entry1) #7 !dbg !7145 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %cb.addr = alloca %struct.vorbis_enc_codebook*, align 8
  %entry.addr = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7148, metadata !1998), !dbg !7149
  store %struct.vorbis_enc_codebook* %cb, %struct.vorbis_enc_codebook** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %cb.addr, metadata !7150, metadata !1998), !dbg !7151
  store i32 %entry1, i32* %entry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entry.addr, metadata !7152, metadata !1998), !dbg !7153
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7154
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 5, !dbg !7156
  %1 = load i32, i32* %size_in_bits, align 8, !dbg !7156
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7157
  %call = call i32 @put_bits_count(%struct.PutBitContext* %2), !dbg !7158
  %sub = sub nsw i32 %1, %call, !dbg !7159
  %3 = load i32, i32* %entry.addr, align 4, !dbg !7160
  %idxprom = sext i32 %3 to i64, !dbg !7161
  %4 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !7161
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %4, i32 0, i32 1, !dbg !7162
  %5 = load i8*, i8** %lens, align 8, !dbg !7162
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !7161
  %6 = load i8, i8* %arrayidx, align 1, !dbg !7161
  %conv = zext i8 %6 to i32, !dbg !7161
  %cmp = icmp slt i32 %sub, %conv, !dbg !7163
  br i1 %cmp, label %if.then, label %if.end, !dbg !7164

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7165
  br label %return, !dbg !7165

if.end:                                           ; preds = %entry
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7166
  %8 = load i32, i32* %entry.addr, align 4, !dbg !7167
  %idxprom3 = sext i32 %8 to i64, !dbg !7168
  %9 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !7168
  %lens4 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %9, i32 0, i32 1, !dbg !7169
  %10 = load i8*, i8** %lens4, align 8, !dbg !7169
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 %idxprom3, !dbg !7168
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !7168
  %conv6 = zext i8 %11 to i32, !dbg !7168
  %12 = load i32, i32* %entry.addr, align 4, !dbg !7170
  %idxprom7 = sext i32 %12 to i64, !dbg !7171
  %13 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %cb.addr, align 8, !dbg !7171
  %codewords = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %13, i32 0, i32 2, !dbg !7172
  %14 = load i32*, i32** %codewords, align 8, !dbg !7172
  %arrayidx8 = getelementptr inbounds i32, i32* %14, i64 %idxprom7, !dbg !7171
  %15 = load i32, i32* %arrayidx8, align 4, !dbg !7171
  call void @put_bits(%struct.PutBitContext* %7, i32 %conv6, i32 %15), !dbg !7173
  store i32 0, i32* %retval, align 4, !dbg !7174
  br label %return, !dbg !7174

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7175
  ret i32 %16, !dbg !7175
}

declare void @ff_vorbis_floor1_render_list(%struct.vorbis_floor1_entry*, i32, i16*, i32*, i32, float*, i32) #3

; Function Attrs: nounwind uwtable
define internal float* @put_vector(%struct.vorbis_enc_codebook* %book, %struct.PutBitContext* %pb, float* %num) #1 !dbg !7176 {
entry:
  %retval = alloca float*, align 8
  %book.addr = alloca %struct.vorbis_enc_codebook*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %num.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %entry1 = alloca i32, align 4
  %distance = alloca float, align 4
  %vec = alloca float*, align 8
  %d = alloca float, align 4
  %j = alloca i32, align 4
  store %struct.vorbis_enc_codebook* %book, %struct.vorbis_enc_codebook** %book.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vorbis_enc_codebook** %book.addr, metadata !7179, metadata !1998), !dbg !7180
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7181, metadata !1998), !dbg !7182
  store float* %num, float** %num.addr, align 8
  call void @llvm.dbg.declare(metadata float** %num.addr, metadata !7183, metadata !1998), !dbg !7184
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7185, metadata !1998), !dbg !7186
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !7187, metadata !1998), !dbg !7188
  store i32 -1, i32* %entry1, align 4, !dbg !7188
  call void @llvm.dbg.declare(metadata float* %distance, metadata !7189, metadata !1998), !dbg !7190
  store float 0x47EFFFFFE0000000, float* %distance, align 4, !dbg !7190
  %0 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7191
  %dimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %0, i32 0, i32 9, !dbg !7192
  %1 = load float*, float** %dimensions, align 8, !dbg !7192
  %tobool = icmp ne float* %1, null, !dbg !7193
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7193

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7194

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), i32 887, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.put_vector, i32 0, i32 0)) #9, !dbg !7196
  unreachable, !dbg !7196
                                                  ; No predecessors!
  br label %cond.end, !dbg !7198

cond.end:                                         ; preds = %2, %cond.true
  store i32 0, i32* %i, align 4, !dbg !7200
  br label %for.cond, !dbg !7202

for.cond:                                         ; preds = %for.inc18, %cond.end
  %3 = load i32, i32* %i, align 4, !dbg !7203
  %4 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7206
  %nentries = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %4, i32 0, i32 0, !dbg !7207
  %5 = load i32, i32* %nentries, align 8, !dbg !7207
  %cmp = icmp slt i32 %3, %5, !dbg !7208
  br i1 %cmp, label %for.body, label %for.end20, !dbg !7209

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %vec, metadata !7210, metadata !1998), !dbg !7212
  %6 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7213
  %dimensions2 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %6, i32 0, i32 9, !dbg !7214
  %7 = load float*, float** %dimensions2, align 8, !dbg !7214
  %8 = load i32, i32* %i, align 4, !dbg !7215
  %9 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7216
  %ndimensions = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %9, i32 0, i32 3, !dbg !7217
  %10 = load i32, i32* %ndimensions, align 8, !dbg !7217
  %mul = mul nsw i32 %8, %10, !dbg !7218
  %idx.ext = sext i32 %mul to i64, !dbg !7219
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !7219
  store float* %add.ptr, float** %vec, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata float* %d, metadata !7220, metadata !1998), !dbg !7221
  %11 = load i32, i32* %i, align 4, !dbg !7222
  %idxprom = sext i32 %11 to i64, !dbg !7223
  %12 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7223
  %pow2 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %12, i32 0, i32 10, !dbg !7224
  %13 = load float*, float** %pow2, align 8, !dbg !7224
  %arrayidx = getelementptr inbounds float, float* %13, i64 %idxprom, !dbg !7223
  %14 = load float, float* %arrayidx, align 4, !dbg !7223
  store float %14, float* %d, align 4, !dbg !7221
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7225, metadata !1998), !dbg !7226
  %15 = load i32, i32* %i, align 4, !dbg !7227
  %idxprom3 = sext i32 %15 to i64, !dbg !7229
  %16 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7229
  %lens = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %16, i32 0, i32 1, !dbg !7230
  %17 = load i8*, i8** %lens, align 8, !dbg !7230
  %arrayidx4 = getelementptr inbounds i8, i8* %17, i64 %idxprom3, !dbg !7229
  %18 = load i8, i8* %arrayidx4, align 1, !dbg !7229
  %tobool5 = icmp ne i8 %18, 0, !dbg !7229
  br i1 %tobool5, label %if.end, label %if.then, !dbg !7231

if.then:                                          ; preds = %for.body
  br label %for.inc18, !dbg !7232

if.end:                                           ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !7233
  br label %for.cond6, !dbg !7235

for.cond6:                                        ; preds = %for.inc, %if.end
  %19 = load i32, i32* %j, align 4, !dbg !7236
  %20 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7239
  %ndimensions7 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %20, i32 0, i32 3, !dbg !7240
  %21 = load i32, i32* %ndimensions7, align 8, !dbg !7240
  %cmp8 = icmp slt i32 %19, %21, !dbg !7241
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !7242

for.body9:                                        ; preds = %for.cond6
  %22 = load i32, i32* %j, align 4, !dbg !7243
  %idxprom10 = sext i32 %22 to i64, !dbg !7244
  %23 = load float*, float** %vec, align 8, !dbg !7244
  %arrayidx11 = getelementptr inbounds float, float* %23, i64 %idxprom10, !dbg !7244
  %24 = load float, float* %arrayidx11, align 4, !dbg !7244
  %25 = load i32, i32* %j, align 4, !dbg !7245
  %idxprom12 = sext i32 %25 to i64, !dbg !7246
  %26 = load float*, float** %num.addr, align 8, !dbg !7246
  %arrayidx13 = getelementptr inbounds float, float* %26, i64 %idxprom12, !dbg !7246
  %27 = load float, float* %arrayidx13, align 4, !dbg !7246
  %mul14 = fmul float %24, %27, !dbg !7247
  %28 = load float, float* %d, align 4, !dbg !7248
  %sub = fsub float %28, %mul14, !dbg !7248
  store float %sub, float* %d, align 4, !dbg !7248
  br label %for.inc, !dbg !7249

for.inc:                                          ; preds = %for.body9
  %29 = load i32, i32* %j, align 4, !dbg !7250
  %inc = add nsw i32 %29, 1, !dbg !7250
  store i32 %inc, i32* %j, align 4, !dbg !7250
  br label %for.cond6, !dbg !7252, !llvm.loop !7253

for.end:                                          ; preds = %for.cond6
  %30 = load float, float* %distance, align 4, !dbg !7255
  %31 = load float, float* %d, align 4, !dbg !7257
  %cmp15 = fcmp ogt float %30, %31, !dbg !7258
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !7259

if.then16:                                        ; preds = %for.end
  %32 = load i32, i32* %i, align 4, !dbg !7260
  store i32 %32, i32* %entry1, align 4, !dbg !7262
  %33 = load float, float* %d, align 4, !dbg !7263
  store float %33, float* %distance, align 4, !dbg !7264
  br label %if.end17, !dbg !7265

if.end17:                                         ; preds = %if.then16, %for.end
  br label %for.inc18, !dbg !7266

for.inc18:                                        ; preds = %if.end17, %if.then
  %34 = load i32, i32* %i, align 4, !dbg !7267
  %inc19 = add nsw i32 %34, 1, !dbg !7267
  store i32 %inc19, i32* %i, align 4, !dbg !7267
  br label %for.cond, !dbg !7269, !llvm.loop !7270

for.end20:                                        ; preds = %for.cond
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7272
  %36 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7274
  %37 = load i32, i32* %entry1, align 4, !dbg !7275
  %call = call i32 @put_codeword(%struct.PutBitContext* %35, %struct.vorbis_enc_codebook* %36, i32 %37), !dbg !7276
  %tobool21 = icmp ne i32 %call, 0, !dbg !7276
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7277

if.then22:                                        ; preds = %for.end20
  store float* null, float** %retval, align 8, !dbg !7278
  br label %return, !dbg !7278

if.end23:                                         ; preds = %for.end20
  %38 = load i32, i32* %entry1, align 4, !dbg !7279
  %39 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7280
  %ndimensions24 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %39, i32 0, i32 3, !dbg !7281
  %40 = load i32, i32* %ndimensions24, align 8, !dbg !7281
  %mul25 = mul nsw i32 %38, %40, !dbg !7282
  %idxprom26 = sext i32 %mul25 to i64, !dbg !7283
  %41 = load %struct.vorbis_enc_codebook*, %struct.vorbis_enc_codebook** %book.addr, align 8, !dbg !7283
  %dimensions27 = getelementptr inbounds %struct.vorbis_enc_codebook, %struct.vorbis_enc_codebook* %41, i32 0, i32 9, !dbg !7284
  %42 = load float*, float** %dimensions27, align 8, !dbg !7284
  %arrayidx28 = getelementptr inbounds float, float* %42, i64 %idxprom26, !dbg !7283
  store float* %arrayidx28, float** %retval, align 8, !dbg !7285
  br label %return, !dbg !7285

return:                                           ; preds = %if.end23, %if.then22
  %43 = load float*, float** %retval, align 8, !dbg !7286
  ret float* %43, !dbg !7286
}

declare void @ff_mdct_end(%struct.FFTContext*) #3

declare void @ff_af_queue_close(%struct.AudioFrameQueue*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_bufqueue_discard_all(%struct.FFBufQueue* %queue) #7 !dbg !7287 {
entry:
  %queue.addr = alloca %struct.FFBufQueue*, align 8
  %buf = alloca %struct.AVFrame*, align 8
  store %struct.FFBufQueue* %queue, %struct.FFBufQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFBufQueue** %queue.addr, metadata !7290, metadata !1998), !dbg !7291
  br label %while.cond, !dbg !7292

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7293
  %available = getelementptr inbounds %struct.FFBufQueue, %struct.FFBufQueue* %0, i32 0, i32 2, !dbg !7295
  %1 = load i16, i16* %available, align 2, !dbg !7295
  %tobool = icmp ne i16 %1, 0, !dbg !7296
  br i1 %tobool, label %while.body, label %while.end, !dbg !7296

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %buf, metadata !7297, metadata !1998), !dbg !7299
  %2 = load %struct.FFBufQueue*, %struct.FFBufQueue** %queue.addr, align 8, !dbg !7300
  %call = call %struct.AVFrame* @ff_bufqueue_get(%struct.FFBufQueue* %2), !dbg !7301
  store %struct.AVFrame* %call, %struct.AVFrame** %buf, align 8, !dbg !7299
  call void @av_frame_free(%struct.AVFrame** %buf), !dbg !7302
  br label %while.cond, !dbg !7303, !llvm.loop !7305

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7306
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1993, !1994}
!llvm.ident = !{!1995}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !897, globals: !916)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--vorbisenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !893}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !{!898, !899, !904, !905, !906, !907, !913, !915}
!898 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64, align: 64)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !902, line: 48, baseType: !903)
!902 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!903 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!904 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!905 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64, align: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !909, line: 221, size: 32, align: 8, elements: !910)
!909 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !908, file: !909, line: 221, baseType: !912, size: 32, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !902, line: 51, baseType: !905)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !902, line: 55, baseType: !914)
!914 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!916 = !{!917, !1640, !1871, !1875, !1880, !1896, !1900, !1902, !1906, !1908, !1912, !1916, !1920, !1921, !1922, !1926, !1927, !1931, !1932, !1933, !1934, !1938, !1942, !1946, !1950, !1954, !1958, !1962, !1963, !1967, !1971, !1975, !1976, !1980, !1981}
!917 = distinct !DIGlobalVariable(name: "ff_vorbis_encoder", scope: !0, file: !918, line: 1301, type: !919, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_vorbis_encoder)
!918 = !DIFile(filename: "libavcodec/vorbisenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !921)
!921 = !{!922, !926, !927, !928, !929, !930, !939, !942, !945, !948, !951, !952, !993, !1001, !1002, !1003, !1005, !1555, !1561, !1569, !1573, !1574, !1611, !1615, !1619, !1620, !1624, !1628, !1629, !1633, !1634, !1635}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !920, file: !14, line: 3475, baseType: !923, size: 64, align: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!925 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !920, file: !14, line: 3480, baseType: !923, size: 64, align: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !920, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !920, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !920, file: !14, line: 3487, baseType: !904, size: 32, align: 32, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !920, file: !14, line: 3488, baseType: !931, size: 64, align: 64, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !934, line: 61, baseType: !935)
!934 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !934, line: 58, size: 64, align: 32, elements: !936)
!936 = !{!937, !938}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !935, file: !934, line: 59, baseType: !904, size: 32, align: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !935, file: !934, line: 60, baseType: !904, size: 32, align: 32, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !920, file: !14, line: 3489, baseType: !940, size: 64, align: 64, offset: 320)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !920, file: !14, line: 3490, baseType: !943, size: 64, align: 64, offset: 384)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !920, file: !14, line: 3491, baseType: !946, size: 64, align: 64, offset: 448)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64, align: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !920, file: !14, line: 3492, baseType: !949, size: 64, align: 64, offset: 512)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !920, file: !14, line: 3493, baseType: !901, size: 8, align: 8, offset: 576)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !920, file: !14, line: 3494, baseType: !953, size: 64, align: 64, offset: 640)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !957)
!957 = !{!958, !959, !963, !967, !968, !969, !970, !974, !980, !982, !986}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !956, file: !691, line: 72, baseType: !923, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !956, file: !691, line: 78, baseType: !960, size: 64, align: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!961 = !DISubroutineType(types: !962)
!962 = !{!923, !906}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !956, file: !691, line: 85, baseType: !964, size: 64, align: 64, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !956, file: !691, line: 93, baseType: !904, size: 32, align: 32, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !956, file: !691, line: 99, baseType: !904, size: 32, align: 32, offset: 224)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !956, file: !691, line: 108, baseType: !904, size: 32, align: 32, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !956, file: !691, line: 113, baseType: !971, size: 64, align: 64, offset: 320)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!906, !906, !906}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !956, file: !691, line: 123, baseType: !975, size: 64, align: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!978, !978}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !956, file: !691, line: 130, baseType: !981, size: 32, align: 32, offset: 448)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !956, file: !691, line: 136, baseType: !983, size: 64, align: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!981, !906}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !956, file: !691, line: 142, baseType: !987, size: 64, align: 64, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!904, !990, !906, !923, !904}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !920, file: !14, line: 3495, baseType: !994, size: 64, align: 64, offset: 704)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !997, file: !14, line: 3402, baseType: !904, size: 32, align: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !997, file: !14, line: 3403, baseType: !923, size: 64, align: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !920, file: !14, line: 3507, baseType: !923, size: 64, align: 64, offset: 768)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !920, file: !14, line: 3516, baseType: !904, size: 32, align: 32, offset: 832)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !920, file: !14, line: 3517, baseType: !1004, size: 64, align: 64, offset: 896)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64, align: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !920, file: !14, line: 3527, baseType: !1006, size: 64, align: 64, offset: 960)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!904, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1019, !1020, !1021, !1022, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1302, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1493, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1011, file: !14, line: 1561, baseType: !953, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1011, file: !14, line: 1562, baseType: !904, size: 32, align: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1011, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1011, file: !14, line: 1565, baseType: !1017, size: 64, align: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1011, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1011, file: !14, line: 1581, baseType: !905, size: 32, align: 32, offset: 224)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1011, file: !14, line: 1583, baseType: !906, size: 64, align: 64, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1011, file: !14, line: 1591, baseType: !1023, size: 64, align: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1025, line: 129, size: 1664, align: 64, elements: !1026)
!1025 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1026 = !{!1027, !1028, !1029, !1030, !1128, !1149, !1150, !1179, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1024, file: !1025, line: 136, baseType: !904, size: 32, align: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1024, file: !1025, line: 151, baseType: !904, size: 32, align: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1024, file: !1025, line: 157, baseType: !904, size: 32, align: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1024, file: !1025, line: 159, baseType: !1031, size: 64, align: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1034)
!1034 = !{!1035, !1039, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1080, !1082, !1083, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1116, !1117, !1118, !1119, !1120, !1121, !1124, !1125, !1126, !1127}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1033, file: !722, line: 282, baseType: !1036, size: 512, align: 64)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 512, align: 64, elements: !1037)
!1037 = !{!1038}
!1038 = !DISubrange(count: 8)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1033, file: !722, line: 299, baseType: !1040, size: 256, align: 32, offset: 512)
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 256, align: 32, elements: !1037)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1033, file: !722, line: 315, baseType: !899, size: 64, align: 64, offset: 768)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1033, file: !722, line: 326, baseType: !904, size: 32, align: 32, offset: 832)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1033, file: !722, line: 326, baseType: !904, size: 32, align: 32, offset: 864)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1033, file: !722, line: 334, baseType: !904, size: 32, align: 32, offset: 896)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1033, file: !722, line: 341, baseType: !904, size: 32, align: 32, offset: 928)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1033, file: !722, line: 346, baseType: !904, size: 32, align: 32, offset: 960)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1033, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1033, file: !722, line: 356, baseType: !933, size: 64, align: 32, offset: 1024)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1033, file: !722, line: 361, baseType: !1050, size: 64, align: 64, offset: 1088)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !902, line: 40, baseType: !1051)
!1051 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1033, file: !722, line: 369, baseType: !1050, size: 64, align: 64, offset: 1152)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1033, file: !722, line: 377, baseType: !1050, size: 64, align: 64, offset: 1216)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1033, file: !722, line: 382, baseType: !904, size: 32, align: 32, offset: 1280)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1033, file: !722, line: 386, baseType: !904, size: 32, align: 32, offset: 1312)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1033, file: !722, line: 391, baseType: !904, size: 32, align: 32, offset: 1344)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1033, file: !722, line: 396, baseType: !906, size: 64, align: 64, offset: 1408)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1033, file: !722, line: 403, baseType: !1059, size: 512, align: 64, offset: 1472)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 512, align: 64, elements: !1037)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1033, file: !722, line: 410, baseType: !904, size: 32, align: 32, offset: 1984)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1033, file: !722, line: 415, baseType: !904, size: 32, align: 32, offset: 2016)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1033, file: !722, line: 420, baseType: !904, size: 32, align: 32, offset: 2048)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1033, file: !722, line: 425, baseType: !904, size: 32, align: 32, offset: 2080)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1033, file: !722, line: 435, baseType: !1050, size: 64, align: 64, offset: 2112)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1033, file: !722, line: 440, baseType: !904, size: 32, align: 32, offset: 2176)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1033, file: !722, line: 445, baseType: !913, size: 64, align: 64, offset: 2240)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1033, file: !722, line: 459, baseType: !1068, size: 512, align: 64, offset: 2304)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1069, size: 512, align: 64, elements: !1037)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1071, line: 94, baseType: !1072)
!1071 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1071, line: 81, size: 192, align: 64, elements: !1073)
!1073 = !{!1074, !1078, !1079}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1072, file: !1071, line: 82, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1071, line: 73, baseType: !1077)
!1077 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1071, line: 73, flags: DIFlagFwdDecl)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1072, file: !1071, line: 89, baseType: !900, size: 64, align: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1072, file: !1071, line: 93, baseType: !904, size: 32, align: 32, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1033, file: !722, line: 473, baseType: !1081, size: 64, align: 64, offset: 2816)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1033, file: !722, line: 477, baseType: !904, size: 32, align: 32, offset: 2880)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1033, file: !722, line: 479, baseType: !1084, size: 64, align: 64, offset: 2944)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1088)
!1088 = !{!1089, !1090, !1091, !1092, !1097}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1087, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1087, file: !722, line: 203, baseType: !900, size: 64, align: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1087, file: !722, line: 204, baseType: !904, size: 32, align: 32, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1087, file: !722, line: 205, baseType: !1093, size: 64, align: 64, offset: 192)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1095, line: 86, baseType: !1096)
!1095 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1096 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1095, line: 86, flags: DIFlagFwdDecl)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1087, file: !722, line: 206, baseType: !1069, size: 64, align: 64, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1033, file: !722, line: 480, baseType: !904, size: 32, align: 32, offset: 3008)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1033, file: !722, line: 505, baseType: !904, size: 32, align: 32, offset: 3040)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1033, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1033, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1033, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1033, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1033, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1033, file: !722, line: 532, baseType: !1050, size: 64, align: 64, offset: 3264)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1033, file: !722, line: 539, baseType: !1050, size: 64, align: 64, offset: 3328)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1033, file: !722, line: 547, baseType: !1050, size: 64, align: 64, offset: 3392)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1033, file: !722, line: 554, baseType: !1093, size: 64, align: 64, offset: 3456)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1033, file: !722, line: 563, baseType: !904, size: 32, align: 32, offset: 3520)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1033, file: !722, line: 572, baseType: !904, size: 32, align: 32, offset: 3552)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1033, file: !722, line: 581, baseType: !904, size: 32, align: 32, offset: 3584)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1033, file: !722, line: 588, baseType: !1113, size: 64, align: 64, offset: 3648)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !902, line: 36, baseType: !1115)
!1115 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1033, file: !722, line: 593, baseType: !904, size: 32, align: 32, offset: 3712)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1033, file: !722, line: 596, baseType: !904, size: 32, align: 32, offset: 3744)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1033, file: !722, line: 599, baseType: !1069, size: 64, align: 64, offset: 3776)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1033, file: !722, line: 605, baseType: !1069, size: 64, align: 64, offset: 3840)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1033, file: !722, line: 616, baseType: !1069, size: 64, align: 64, offset: 3904)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1033, file: !722, line: 626, baseType: !1122, size: 64, align: 64, offset: 3968)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1123, line: 216, baseType: !914)
!1123 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1033, file: !722, line: 627, baseType: !1122, size: 64, align: 64, offset: 4032)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1033, file: !722, line: 628, baseType: !1122, size: 64, align: 64, offset: 4096)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1033, file: !722, line: 629, baseType: !1122, size: 64, align: 64, offset: 4160)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1033, file: !722, line: 645, baseType: !1069, size: 64, align: 64, offset: 4224)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1024, file: !1025, line: 161, baseType: !1129, size: 64, align: 64, offset: 192)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1025, line: 117, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1025, line: 100, size: 832, align: 64, elements: !1132)
!1132 = !{!1133, !1140, !1141, !1142, !1143, !1144, !1146, !1147, !1148}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1131, file: !1025, line: 105, baseType: !1134, size: 256, align: 64)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1135, size: 256, align: 64, elements: !1138)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1071, line: 238, baseType: !1137)
!1137 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1071, line: 238, flags: DIFlagFwdDecl)
!1138 = !{!1139}
!1139 = !DISubrange(count: 4)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1131, file: !1025, line: 110, baseType: !904, size: 32, align: 32, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1131, file: !1025, line: 111, baseType: !904, size: 32, align: 32, offset: 288)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1131, file: !1025, line: 111, baseType: !904, size: 32, align: 32, offset: 320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1131, file: !1025, line: 112, baseType: !1040, size: 256, align: 32, offset: 352)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1131, file: !1025, line: 113, baseType: !1145, size: 128, align: 32, offset: 608)
!1145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 128, align: 32, elements: !1138)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1131, file: !1025, line: 114, baseType: !904, size: 32, align: 32, offset: 736)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1131, file: !1025, line: 115, baseType: !904, size: 32, align: 32, offset: 768)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1131, file: !1025, line: 116, baseType: !904, size: 32, align: 32, offset: 800)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1024, file: !1025, line: 163, baseType: !906, size: 64, align: 64, offset: 256)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1024, file: !1025, line: 165, baseType: !1151, size: 128, align: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1025, line: 122, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1025, line: 119, size: 128, align: 64, elements: !1153)
!1153 = !{!1154, !1178}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1152, file: !1025, line: 120, baseType: !1155, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1174, !1175, !1176, !1177}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1157, file: !14, line: 1451, baseType: !1069, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1157, file: !14, line: 1461, baseType: !1050, size: 64, align: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1157, file: !14, line: 1467, baseType: !1050, size: 64, align: 64, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1157, file: !14, line: 1468, baseType: !900, size: 64, align: 64, offset: 192)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1157, file: !14, line: 1469, baseType: !904, size: 32, align: 32, offset: 256)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1157, file: !14, line: 1470, baseType: !904, size: 32, align: 32, offset: 288)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1157, file: !14, line: 1474, baseType: !904, size: 32, align: 32, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1157, file: !14, line: 1479, baseType: !1167, size: 64, align: 64, offset: 384)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1170)
!1170 = !{!1171, !1172, !1173}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1169, file: !14, line: 1412, baseType: !900, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1169, file: !14, line: 1413, baseType: !904, size: 32, align: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1169, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1157, file: !14, line: 1480, baseType: !904, size: 32, align: 32, offset: 448)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1157, file: !14, line: 1486, baseType: !1050, size: 64, align: 64, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1157, file: !14, line: 1488, baseType: !1050, size: 64, align: 64, offset: 576)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1157, file: !14, line: 1497, baseType: !1050, size: 64, align: 64, offset: 640)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1152, file: !1025, line: 121, baseType: !1031, size: 64, align: 64, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1024, file: !1025, line: 166, baseType: !1180, size: 128, align: 64, offset: 448)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1025, line: 127, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1025, line: 124, size: 128, align: 64, elements: !1182)
!1182 = !{!1183, !1256}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1181, file: !1025, line: 125, baseType: !1184, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1188)
!1188 = !{!1189, !1190, !1214, !1218, !1219, !1253, !1254, !1255}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1187, file: !14, line: 5751, baseType: !953, size: 64, align: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1187, file: !14, line: 5756, baseType: !1191, size: 64, align: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1194)
!1194 = !{!1195, !1196, !1199, !1200, !1201, !1205, !1209, !1213}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1193, file: !14, line: 5797, baseType: !923, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1193, file: !14, line: 5804, baseType: !1197, size: 64, align: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1193, file: !14, line: 5815, baseType: !953, size: 64, align: 64, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1193, file: !14, line: 5825, baseType: !904, size: 32, align: 32, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1193, file: !14, line: 5826, baseType: !1202, size: 64, align: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64, align: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!904, !1185}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1193, file: !14, line: 5827, baseType: !1206, size: 64, align: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!904, !1185, !1155}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1193, file: !14, line: 5828, baseType: !1210, size: 64, align: 64, offset: 384)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{null, !1185}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1193, file: !14, line: 5829, baseType: !1210, size: 64, align: 64, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1187, file: !14, line: 5762, baseType: !1215, size: 64, align: 64, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1217)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1187, file: !14, line: 5768, baseType: !906, size: 64, align: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1187, file: !14, line: 5775, baseType: !1220, size: 64, align: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1222, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1222, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1222, file: !14, line: 3948, baseType: !912, size: 32, align: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1222, file: !14, line: 3958, baseType: !900, size: 64, align: 64, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1222, file: !14, line: 3962, baseType: !904, size: 32, align: 32, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1222, file: !14, line: 3968, baseType: !904, size: 32, align: 32, offset: 224)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1222, file: !14, line: 3973, baseType: !1050, size: 64, align: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1222, file: !14, line: 3986, baseType: !904, size: 32, align: 32, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1222, file: !14, line: 3999, baseType: !904, size: 32, align: 32, offset: 352)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1222, file: !14, line: 4004, baseType: !904, size: 32, align: 32, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1222, file: !14, line: 4005, baseType: !904, size: 32, align: 32, offset: 416)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1222, file: !14, line: 4010, baseType: !904, size: 32, align: 32, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1222, file: !14, line: 4011, baseType: !904, size: 32, align: 32, offset: 480)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1222, file: !14, line: 4020, baseType: !933, size: 64, align: 32, offset: 512)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1222, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1222, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1222, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1222, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1222, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1222, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1222, file: !14, line: 4039, baseType: !904, size: 32, align: 32, offset: 768)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1222, file: !14, line: 4046, baseType: !913, size: 64, align: 64, offset: 832)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1222, file: !14, line: 4050, baseType: !904, size: 32, align: 32, offset: 896)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1222, file: !14, line: 4054, baseType: !904, size: 32, align: 32, offset: 928)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1222, file: !14, line: 4061, baseType: !904, size: 32, align: 32, offset: 960)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1222, file: !14, line: 4065, baseType: !904, size: 32, align: 32, offset: 992)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1222, file: !14, line: 4073, baseType: !904, size: 32, align: 32, offset: 1024)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1222, file: !14, line: 4080, baseType: !904, size: 32, align: 32, offset: 1056)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1222, file: !14, line: 4084, baseType: !904, size: 32, align: 32, offset: 1088)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1187, file: !14, line: 5781, baseType: !1220, size: 64, align: 64, offset: 320)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1187, file: !14, line: 5787, baseType: !933, size: 64, align: 32, offset: 384)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1187, file: !14, line: 5793, baseType: !933, size: 64, align: 32, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1181, file: !1025, line: 126, baseType: !904, size: 32, align: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1024, file: !1025, line: 172, baseType: !1155, size: 64, align: 64, offset: 576)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1024, file: !1025, line: 177, baseType: !900, size: 64, align: 64, offset: 640)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1024, file: !1025, line: 178, baseType: !905, size: 32, align: 32, offset: 704)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1024, file: !1025, line: 180, baseType: !906, size: 64, align: 64, offset: 768)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1024, file: !1025, line: 185, baseType: !904, size: 32, align: 32, offset: 832)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1024, file: !1025, line: 190, baseType: !906, size: 64, align: 64, offset: 896)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1024, file: !1025, line: 195, baseType: !904, size: 32, align: 32, offset: 960)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1024, file: !1025, line: 200, baseType: !1155, size: 64, align: 64, offset: 1024)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1024, file: !1025, line: 201, baseType: !904, size: 32, align: 32, offset: 1088)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1024, file: !1025, line: 202, baseType: !1031, size: 64, align: 64, offset: 1152)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1024, file: !1025, line: 203, baseType: !904, size: 32, align: 32, offset: 1216)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1024, file: !1025, line: 205, baseType: !904, size: 32, align: 32, offset: 1248)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1024, file: !1025, line: 206, baseType: !904, size: 32, align: 32, offset: 1280)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1024, file: !1025, line: 209, baseType: !1122, size: 64, align: 64, offset: 1344)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1024, file: !1025, line: 212, baseType: !1122, size: 64, align: 64, offset: 1408)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1024, file: !1025, line: 213, baseType: !1031, size: 64, align: 64, offset: 1472)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1024, file: !1025, line: 215, baseType: !904, size: 32, align: 32, offset: 1536)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1024, file: !1025, line: 217, baseType: !904, size: 32, align: 32, offset: 1568)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1024, file: !1025, line: 220, baseType: !904, size: 32, align: 32, offset: 1600)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1011, file: !14, line: 1598, baseType: !906, size: 64, align: 64, offset: 384)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1011, file: !14, line: 1606, baseType: !1050, size: 64, align: 64, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1011, file: !14, line: 1614, baseType: !904, size: 32, align: 32, offset: 512)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1011, file: !14, line: 1622, baseType: !904, size: 32, align: 32, offset: 544)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1011, file: !14, line: 1628, baseType: !904, size: 32, align: 32, offset: 576)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1011, file: !14, line: 1636, baseType: !904, size: 32, align: 32, offset: 608)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1011, file: !14, line: 1643, baseType: !904, size: 32, align: 32, offset: 640)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1011, file: !14, line: 1657, baseType: !900, size: 64, align: 64, offset: 704)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1011, file: !14, line: 1658, baseType: !904, size: 32, align: 32, offset: 768)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1011, file: !14, line: 1679, baseType: !933, size: 64, align: 32, offset: 800)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1011, file: !14, line: 1688, baseType: !904, size: 32, align: 32, offset: 864)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1011, file: !14, line: 1712, baseType: !904, size: 32, align: 32, offset: 896)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1011, file: !14, line: 1729, baseType: !904, size: 32, align: 32, offset: 928)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1011, file: !14, line: 1729, baseType: !904, size: 32, align: 32, offset: 960)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1011, file: !14, line: 1744, baseType: !904, size: 32, align: 32, offset: 992)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1011, file: !14, line: 1744, baseType: !904, size: 32, align: 32, offset: 1024)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1011, file: !14, line: 1751, baseType: !904, size: 32, align: 32, offset: 1056)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1011, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1011, file: !14, line: 1791, baseType: !1295, size: 64, align: 64, offset: 1152)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64, align: 64)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{null, !1298, !1299, !1301, !904, !904, !904}
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64, align: 64)
!1300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1011, file: !14, line: 1808, baseType: !1303, size: 64, align: 64, offset: 1216)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!473, !1298, !940}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1011, file: !14, line: 1816, baseType: !904, size: 32, align: 32, offset: 1280)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1011, file: !14, line: 1825, baseType: !898, size: 32, align: 32, offset: 1312)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1011, file: !14, line: 1830, baseType: !904, size: 32, align: 32, offset: 1344)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1011, file: !14, line: 1838, baseType: !898, size: 32, align: 32, offset: 1376)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1011, file: !14, line: 1846, baseType: !904, size: 32, align: 32, offset: 1408)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1011, file: !14, line: 1851, baseType: !904, size: 32, align: 32, offset: 1440)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1011, file: !14, line: 1861, baseType: !898, size: 32, align: 32, offset: 1472)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1011, file: !14, line: 1868, baseType: !898, size: 32, align: 32, offset: 1504)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1011, file: !14, line: 1875, baseType: !898, size: 32, align: 32, offset: 1536)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1011, file: !14, line: 1882, baseType: !898, size: 32, align: 32, offset: 1568)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1011, file: !14, line: 1889, baseType: !898, size: 32, align: 32, offset: 1600)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1011, file: !14, line: 1896, baseType: !898, size: 32, align: 32, offset: 1632)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1011, file: !14, line: 1903, baseType: !898, size: 32, align: 32, offset: 1664)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1011, file: !14, line: 1910, baseType: !904, size: 32, align: 32, offset: 1696)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1011, file: !14, line: 1915, baseType: !904, size: 32, align: 32, offset: 1728)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1011, file: !14, line: 1926, baseType: !1301, size: 64, align: 64, offset: 1792)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1011, file: !14, line: 1935, baseType: !933, size: 64, align: 32, offset: 1856)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1011, file: !14, line: 1942, baseType: !904, size: 32, align: 32, offset: 1920)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1011, file: !14, line: 1948, baseType: !904, size: 32, align: 32, offset: 1952)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1011, file: !14, line: 1954, baseType: !904, size: 32, align: 32, offset: 1984)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1011, file: !14, line: 1960, baseType: !904, size: 32, align: 32, offset: 2016)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1011, file: !14, line: 1984, baseType: !904, size: 32, align: 32, offset: 2048)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1011, file: !14, line: 1991, baseType: !904, size: 32, align: 32, offset: 2080)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1011, file: !14, line: 1996, baseType: !904, size: 32, align: 32, offset: 2112)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1011, file: !14, line: 2004, baseType: !904, size: 32, align: 32, offset: 2144)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1011, file: !14, line: 2011, baseType: !904, size: 32, align: 32, offset: 2176)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1011, file: !14, line: 2018, baseType: !904, size: 32, align: 32, offset: 2208)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1011, file: !14, line: 2027, baseType: !904, size: 32, align: 32, offset: 2240)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1011, file: !14, line: 2034, baseType: !904, size: 32, align: 32, offset: 2272)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1011, file: !14, line: 2044, baseType: !904, size: 32, align: 32, offset: 2304)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1011, file: !14, line: 2054, baseType: !1337, size: 64, align: 64, offset: 2368)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !902, line: 49, baseType: !1339)
!1339 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1011, file: !14, line: 2061, baseType: !1337, size: 64, align: 64, offset: 2432)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1011, file: !14, line: 2066, baseType: !904, size: 32, align: 32, offset: 2496)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1011, file: !14, line: 2070, baseType: !904, size: 32, align: 32, offset: 2528)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1011, file: !14, line: 2078, baseType: !904, size: 32, align: 32, offset: 2560)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1011, file: !14, line: 2085, baseType: !904, size: 32, align: 32, offset: 2592)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1011, file: !14, line: 2092, baseType: !904, size: 32, align: 32, offset: 2624)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1011, file: !14, line: 2099, baseType: !904, size: 32, align: 32, offset: 2656)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1011, file: !14, line: 2106, baseType: !904, size: 32, align: 32, offset: 2688)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1011, file: !14, line: 2113, baseType: !904, size: 32, align: 32, offset: 2720)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1011, file: !14, line: 2120, baseType: !904, size: 32, align: 32, offset: 2752)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1011, file: !14, line: 2125, baseType: !904, size: 32, align: 32, offset: 2784)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1011, file: !14, line: 2133, baseType: !904, size: 32, align: 32, offset: 2816)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1011, file: !14, line: 2140, baseType: !904, size: 32, align: 32, offset: 2848)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1011, file: !14, line: 2145, baseType: !904, size: 32, align: 32, offset: 2880)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1011, file: !14, line: 2153, baseType: !904, size: 32, align: 32, offset: 2912)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1011, file: !14, line: 2158, baseType: !904, size: 32, align: 32, offset: 2944)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1011, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1011, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1011, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1011, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1011, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1011, file: !14, line: 2203, baseType: !904, size: 32, align: 32, offset: 3136)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1011, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1011, file: !14, line: 2212, baseType: !904, size: 32, align: 32, offset: 3200)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1011, file: !14, line: 2213, baseType: !904, size: 32, align: 32, offset: 3232)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1011, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1011, file: !14, line: 2232, baseType: !904, size: 32, align: 32, offset: 3296)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1011, file: !14, line: 2243, baseType: !904, size: 32, align: 32, offset: 3328)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1011, file: !14, line: 2249, baseType: !904, size: 32, align: 32, offset: 3360)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1011, file: !14, line: 2256, baseType: !904, size: 32, align: 32, offset: 3392)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1011, file: !14, line: 2263, baseType: !913, size: 64, align: 64, offset: 3456)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1011, file: !14, line: 2270, baseType: !913, size: 64, align: 64, offset: 3520)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1011, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1011, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1011, file: !14, line: 2367, baseType: !1375, size: 64, align: 64, offset: 3648)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!904, !1298, !1031, !904}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1011, file: !14, line: 2383, baseType: !904, size: 32, align: 32, offset: 3712)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1011, file: !14, line: 2386, baseType: !898, size: 32, align: 32, offset: 3744)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1011, file: !14, line: 2387, baseType: !898, size: 32, align: 32, offset: 3776)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1011, file: !14, line: 2394, baseType: !904, size: 32, align: 32, offset: 3808)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1011, file: !14, line: 2401, baseType: !904, size: 32, align: 32, offset: 3840)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1011, file: !14, line: 2408, baseType: !904, size: 32, align: 32, offset: 3872)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1011, file: !14, line: 2415, baseType: !904, size: 32, align: 32, offset: 3904)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1011, file: !14, line: 2422, baseType: !904, size: 32, align: 32, offset: 3936)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1011, file: !14, line: 2423, baseType: !1387, size: 64, align: 64, offset: 3968)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64, align: 64)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1389, file: !14, line: 827, baseType: !904, size: 32, align: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1389, file: !14, line: 828, baseType: !904, size: 32, align: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1389, file: !14, line: 829, baseType: !904, size: 32, align: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1389, file: !14, line: 830, baseType: !898, size: 32, align: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1011, file: !14, line: 2430, baseType: !1050, size: 64, align: 64, offset: 4032)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1011, file: !14, line: 2437, baseType: !1050, size: 64, align: 64, offset: 4096)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1011, file: !14, line: 2444, baseType: !898, size: 32, align: 32, offset: 4160)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1011, file: !14, line: 2451, baseType: !898, size: 32, align: 32, offset: 4192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1011, file: !14, line: 2458, baseType: !904, size: 32, align: 32, offset: 4224)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1011, file: !14, line: 2469, baseType: !904, size: 32, align: 32, offset: 4256)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1011, file: !14, line: 2475, baseType: !904, size: 32, align: 32, offset: 4288)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1011, file: !14, line: 2481, baseType: !904, size: 32, align: 32, offset: 4320)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1011, file: !14, line: 2485, baseType: !904, size: 32, align: 32, offset: 4352)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1011, file: !14, line: 2489, baseType: !904, size: 32, align: 32, offset: 4384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1011, file: !14, line: 2493, baseType: !904, size: 32, align: 32, offset: 4416)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1011, file: !14, line: 2501, baseType: !904, size: 32, align: 32, offset: 4448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1011, file: !14, line: 2506, baseType: !904, size: 32, align: 32, offset: 4480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1011, file: !14, line: 2510, baseType: !904, size: 32, align: 32, offset: 4512)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1011, file: !14, line: 2514, baseType: !1050, size: 64, align: 64, offset: 4544)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1011, file: !14, line: 2528, baseType: !1411, size: 64, align: 64, offset: 4608)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64, align: 64)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !1298, !906, !904, !904}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1011, file: !14, line: 2534, baseType: !904, size: 32, align: 32, offset: 4672)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1011, file: !14, line: 2545, baseType: !904, size: 32, align: 32, offset: 4704)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1011, file: !14, line: 2547, baseType: !904, size: 32, align: 32, offset: 4736)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1011, file: !14, line: 2549, baseType: !904, size: 32, align: 32, offset: 4768)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1011, file: !14, line: 2551, baseType: !904, size: 32, align: 32, offset: 4800)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1011, file: !14, line: 2553, baseType: !904, size: 32, align: 32, offset: 4832)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1011, file: !14, line: 2555, baseType: !904, size: 32, align: 32, offset: 4864)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1011, file: !14, line: 2557, baseType: !904, size: 32, align: 32, offset: 4896)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1011, file: !14, line: 2559, baseType: !904, size: 32, align: 32, offset: 4928)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1011, file: !14, line: 2563, baseType: !904, size: 32, align: 32, offset: 4960)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1011, file: !14, line: 2571, baseType: !1425, size: 64, align: 64, offset: 4992)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1011, file: !14, line: 2579, baseType: !1425, size: 64, align: 64, offset: 5056)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1011, file: !14, line: 2586, baseType: !904, size: 32, align: 32, offset: 5120)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1011, file: !14, line: 2615, baseType: !904, size: 32, align: 32, offset: 5152)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1011, file: !14, line: 2627, baseType: !904, size: 32, align: 32, offset: 5184)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1011, file: !14, line: 2637, baseType: !904, size: 32, align: 32, offset: 5216)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1011, file: !14, line: 2681, baseType: !904, size: 32, align: 32, offset: 5248)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1011, file: !14, line: 2709, baseType: !1050, size: 64, align: 64, offset: 5312)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1011, file: !14, line: 2716, baseType: !1434, size: 64, align: 64, offset: 5376)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64, align: 64)
!1435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1447, !1453, !1457, !1458, !1459, !1460, !1466, !1467, !1468, !1469, !1470}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1436, file: !14, line: 3642, baseType: !923, size: 64, align: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1436, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1436, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1436, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1436, file: !14, line: 3669, baseType: !904, size: 32, align: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1436, file: !14, line: 3682, baseType: !1444, size: 64, align: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64, align: 64)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!904, !1009, !1031}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1436, file: !14, line: 3698, baseType: !1448, size: 64, align: 64, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!904, !1009, !1451, !912}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1436, file: !14, line: 3712, baseType: !1454, size: 64, align: 64, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!904, !1009, !904, !1451, !912}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1436, file: !14, line: 3726, baseType: !1448, size: 64, align: 64, offset: 384)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1436, file: !14, line: 3737, baseType: !1006, size: 64, align: 64, offset: 448)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1436, file: !14, line: 3746, baseType: !904, size: 32, align: 32, offset: 512)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1436, file: !14, line: 3757, baseType: !1461, size: 64, align: 64, offset: 576)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64, align: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{null, !1464}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1436, file: !14, line: 3766, baseType: !1006, size: 64, align: 64, offset: 640)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1436, file: !14, line: 3774, baseType: !1006, size: 64, align: 64, offset: 704)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1436, file: !14, line: 3780, baseType: !904, size: 32, align: 32, offset: 768)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1436, file: !14, line: 3785, baseType: !904, size: 32, align: 32, offset: 800)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1436, file: !14, line: 3795, baseType: !1471, size: 64, align: 64, offset: 832)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64, align: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!904, !1009, !1069}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1011, file: !14, line: 2728, baseType: !906, size: 64, align: 64, offset: 5440)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1011, file: !14, line: 2735, baseType: !1059, size: 512, align: 64, offset: 5504)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1011, file: !14, line: 2742, baseType: !904, size: 32, align: 32, offset: 6016)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1011, file: !14, line: 2755, baseType: !904, size: 32, align: 32, offset: 6048)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1011, file: !14, line: 2776, baseType: !904, size: 32, align: 32, offset: 6080)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1011, file: !14, line: 2783, baseType: !904, size: 32, align: 32, offset: 6112)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1011, file: !14, line: 2791, baseType: !904, size: 32, align: 32, offset: 6144)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1011, file: !14, line: 2802, baseType: !1031, size: 64, align: 64, offset: 6208)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1011, file: !14, line: 2811, baseType: !904, size: 32, align: 32, offset: 6272)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1011, file: !14, line: 2821, baseType: !904, size: 32, align: 32, offset: 6304)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1011, file: !14, line: 2830, baseType: !904, size: 32, align: 32, offset: 6336)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1011, file: !14, line: 2840, baseType: !904, size: 32, align: 32, offset: 6368)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1011, file: !14, line: 2851, baseType: !1487, size: 64, align: 64, offset: 6400)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!904, !1298, !1490, !906, !1301, !904, !904}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!904, !1298, !906}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1011, file: !14, line: 2871, baseType: !1494, size: 64, align: 64, offset: 6464)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!904, !1298, !1497, !906, !1301, !904}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64, align: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!904, !1298, !906, !904, !904}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1011, file: !14, line: 2878, baseType: !904, size: 32, align: 32, offset: 6528)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1011, file: !14, line: 2885, baseType: !904, size: 32, align: 32, offset: 6560)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1011, file: !14, line: 3005, baseType: !904, size: 32, align: 32, offset: 6592)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1011, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1011, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1011, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1011, file: !14, line: 3037, baseType: !900, size: 64, align: 64, offset: 6720)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1011, file: !14, line: 3038, baseType: !904, size: 32, align: 32, offset: 6784)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1011, file: !14, line: 3050, baseType: !913, size: 64, align: 64, offset: 6848)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1011, file: !14, line: 3065, baseType: !904, size: 32, align: 32, offset: 6912)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1011, file: !14, line: 3083, baseType: !904, size: 32, align: 32, offset: 6944)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1011, file: !14, line: 3092, baseType: !933, size: 64, align: 32, offset: 6976)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1011, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1011, file: !14, line: 3106, baseType: !933, size: 64, align: 32, offset: 7072)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1011, file: !14, line: 3113, baseType: !1515, size: 64, align: 64, offset: 7168)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1523, !1524, !1525, !1528}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1518, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1518, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1518, file: !14, line: 720, baseType: !923, size: 64, align: 64, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1518, file: !14, line: 724, baseType: !923, size: 64, align: 64, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1518, file: !14, line: 728, baseType: !904, size: 32, align: 32, offset: 192)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1518, file: !14, line: 734, baseType: !1526, size: 64, align: 64, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64, align: 64)
!1527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1518, file: !14, line: 739, baseType: !1529, size: 64, align: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1011, file: !14, line: 3129, baseType: !1050, size: 64, align: 64, offset: 7232)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1011, file: !14, line: 3130, baseType: !1050, size: 64, align: 64, offset: 7296)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1011, file: !14, line: 3131, baseType: !1050, size: 64, align: 64, offset: 7360)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1011, file: !14, line: 3132, baseType: !1050, size: 64, align: 64, offset: 7424)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1011, file: !14, line: 3139, baseType: !1425, size: 64, align: 64, offset: 7488)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1011, file: !14, line: 3147, baseType: !904, size: 32, align: 32, offset: 7552)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1011, file: !14, line: 3165, baseType: !904, size: 32, align: 32, offset: 7584)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1011, file: !14, line: 3172, baseType: !904, size: 32, align: 32, offset: 7616)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1011, file: !14, line: 3180, baseType: !904, size: 32, align: 32, offset: 7648)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1011, file: !14, line: 3191, baseType: !1337, size: 64, align: 64, offset: 7680)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1011, file: !14, line: 3199, baseType: !900, size: 64, align: 64, offset: 7744)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1011, file: !14, line: 3207, baseType: !1425, size: 64, align: 64, offset: 7808)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1011, file: !14, line: 3214, baseType: !905, size: 32, align: 32, offset: 7872)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1011, file: !14, line: 3224, baseType: !1167, size: 64, align: 64, offset: 7936)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1011, file: !14, line: 3225, baseType: !904, size: 32, align: 32, offset: 8000)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1011, file: !14, line: 3249, baseType: !1069, size: 64, align: 64, offset: 8064)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1011, file: !14, line: 3256, baseType: !904, size: 32, align: 32, offset: 8128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1011, file: !14, line: 3271, baseType: !904, size: 32, align: 32, offset: 8160)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1011, file: !14, line: 3279, baseType: !1050, size: 64, align: 64, offset: 8192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1011, file: !14, line: 3301, baseType: !1069, size: 64, align: 64, offset: 8256)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1011, file: !14, line: 3310, baseType: !904, size: 32, align: 32, offset: 8320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1011, file: !14, line: 3337, baseType: !904, size: 32, align: 32, offset: 8352)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1011, file: !14, line: 3351, baseType: !904, size: 32, align: 32, offset: 8384)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1011, file: !14, line: 3359, baseType: !904, size: 32, align: 32, offset: 8416)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !920, file: !14, line: 3535, baseType: !1556, size: 64, align: 64, offset: 1024)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64, align: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!904, !1009, !1559}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !920, file: !14, line: 3541, baseType: !1562, size: 64, align: 64, offset: 1088)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1025, line: 223, size: 128, align: 64, elements: !1566)
!1566 = !{!1567, !1568}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1565, file: !1025, line: 224, baseType: !1451, size: 64, align: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1565, file: !1025, line: 225, baseType: !1451, size: 64, align: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !920, file: !14, line: 3549, baseType: !1570, size: 64, align: 64, offset: 1152)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64, align: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{null, !1004}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !920, file: !14, line: 3551, baseType: !1006, size: 64, align: 64, offset: 1216)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !920, file: !14, line: 3552, baseType: !1575, size: 64, align: 64, offset: 1280)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64, align: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!904, !1009, !900, !904, !1578}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1610}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1580, file: !14, line: 3921, baseType: !1338, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1580, file: !14, line: 3922, baseType: !912, size: 32, align: 32, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1580, file: !14, line: 3923, baseType: !912, size: 32, align: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1580, file: !14, line: 3924, baseType: !905, size: 32, align: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1580, file: !14, line: 3925, baseType: !1587, size: 64, align: 64, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1603, !1605, !1606, !1607, !1608, !1609}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1590, file: !14, line: 3886, baseType: !904, size: 32, align: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1590, file: !14, line: 3887, baseType: !904, size: 32, align: 32, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1590, file: !14, line: 3888, baseType: !904, size: 32, align: 32, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1590, file: !14, line: 3889, baseType: !904, size: 32, align: 32, offset: 96)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1590, file: !14, line: 3890, baseType: !904, size: 32, align: 32, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1590, file: !14, line: 3897, baseType: !1598, size: 768, align: 64, offset: 192)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1600)
!1600 = !{!1601, !1602}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1599, file: !14, line: 3855, baseType: !1036, size: 512, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1599, file: !14, line: 3857, baseType: !1040, size: 256, align: 32, offset: 512)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1590, file: !14, line: 3903, baseType: !1604, size: 256, align: 64, offset: 960)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 256, align: 64, elements: !1138)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1590, file: !14, line: 3904, baseType: !1145, size: 128, align: 32, offset: 1216)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1590, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1590, file: !14, line: 3908, baseType: !1425, size: 64, align: 64, offset: 1408)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1590, file: !14, line: 3915, baseType: !1425, size: 64, align: 64, offset: 1472)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1590, file: !14, line: 3917, baseType: !904, size: 32, align: 32, offset: 1536)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1580, file: !14, line: 3926, baseType: !1050, size: 64, align: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !920, file: !14, line: 3564, baseType: !1612, size: 64, align: 64, offset: 1344)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64, align: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!904, !1009, !1155, !1299, !1301}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !920, file: !14, line: 3566, baseType: !1616, size: 64, align: 64, offset: 1408)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!904, !1009, !906, !1301, !1155}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !920, file: !14, line: 3567, baseType: !1006, size: 64, align: 64, offset: 1472)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !920, file: !14, line: 3576, baseType: !1621, size: 64, align: 64, offset: 1536)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!904, !1009, !1299}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !920, file: !14, line: 3577, baseType: !1625, size: 64, align: 64, offset: 1600)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!904, !1009, !1155}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !920, file: !14, line: 3584, baseType: !1444, size: 64, align: 64, offset: 1664)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !920, file: !14, line: 3589, baseType: !1630, size: 64, align: 64, offset: 1728)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !1009}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !920, file: !14, line: 3594, baseType: !904, size: 32, align: 32, offset: 1792)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !920, file: !14, line: 3600, baseType: !923, size: 64, align: 64, offset: 1856)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !920, file: !14, line: 3609, baseType: !1636, size: 64, align: 64, offset: 1920)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1640 = distinct !DIGlobalVariable(name: "a", scope: !1641, file: !918, line: 333, type: !1870, isLocal: true, isDefinition: true, variable: [8 x i32]* @create_vorbis_context.a)
!1641 = distinct !DISubprogram(name: "create_vorbis_context", scope: !918, file: !918, line: 269, type: !1642, isLocal: true, isDefinition: true, scopeLine: 271, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!904, !1644, !1009}
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_context", file: !918, line: 139, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_context", file: !918, line: 104, size: 7680, align: 64, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1654, !1700, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1728, !1738, !1739, !1755, !1756, !1786, !1787, !1804, !1805, !1817, !1818, !1825, !1826}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1646, file: !918, line: 105, baseType: !904, size: 32, align: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1646, file: !918, line: 106, baseType: !904, size: 32, align: 32, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "log2_blocksize", scope: !1646, file: !918, line: 107, baseType: !1651, size: 64, align: 32, offset: 64)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 64, align: 32, elements: !1652)
!1652 = !{!1653}
!1653 = !DISubrange(count: 2)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1646, file: !918, line: 108, baseType: !1655, size: 1792, align: 64, offset: 128)
!1655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 1792, align: 64, elements: !1652)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1657, line: 41, baseType: !1658)
!1657 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1671, !1672, !1673, !1675, !1676, !1681, !1682, !1688, !1689, !1690, !1696, !1697, !1698}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1658, file: !888, line: 89, baseType: !904, size: 32, align: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1658, file: !888, line: 90, baseType: !904, size: 32, align: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1658, file: !888, line: 91, baseType: !1337, size: 64, align: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1658, file: !888, line: 92, baseType: !1664, size: 64, align: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64, align: 64)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1657, line: 39, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1657, line: 37, size: 64, align: 32, elements: !1667)
!1667 = !{!1668, !1670}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1666, file: !1657, line: 38, baseType: !1669, size: 32, align: 32)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1657, line: 35, baseType: !898)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1666, file: !1657, line: 38, baseType: !1669, size: 32, align: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1658, file: !888, line: 93, baseType: !904, size: 32, align: 32, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1658, file: !888, line: 94, baseType: !904, size: 32, align: 32, offset: 224)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1658, file: !888, line: 96, baseType: !1674, size: 64, align: 64, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1658, file: !888, line: 97, baseType: !1674, size: 64, align: 64, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1658, file: !888, line: 101, baseType: !1677, size: 64, align: 64, offset: 384)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64, align: 64)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{null, !1680, !1664}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1658, file: !888, line: 106, baseType: !1677, size: 64, align: 64, offset: 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1658, file: !888, line: 107, baseType: !1683, size: 64, align: 64, offset: 512)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !1680, !1674, !1686}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1658, file: !888, line: 108, baseType: !1683, size: 64, align: 64, offset: 576)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1658, file: !888, line: 109, baseType: !1683, size: 64, align: 64, offset: 640)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1658, file: !888, line: 110, baseType: !1691, size: 64, align: 64, offset: 704)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64, align: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !1680, !1694, !1686}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64, align: 64)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !898)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1658, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1658, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1658, file: !888, line: 113, baseType: !1699, size: 64, align: 64, offset: 832)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1646, file: !918, line: 109, baseType: !1701, size: 128, align: 64, offset: 1920)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 128, align: 64, elements: !1652)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "have_saved", scope: !1646, file: !918, line: 110, baseType: !904, size: 32, align: 32, offset: 2048)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1646, file: !918, line: 111, baseType: !915, size: 64, align: 64, offset: 2112)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1646, file: !918, line: 112, baseType: !915, size: 64, align: 64, offset: 2176)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "floor", scope: !1646, file: !918, line: 113, baseType: !915, size: 64, align: 64, offset: 2240)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1646, file: !918, line: 114, baseType: !915, size: 64, align: 64, offset: 2304)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1646, file: !918, line: 115, baseType: !915, size: 64, align: 64, offset: 2368)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1646, file: !918, line: 116, baseType: !898, size: 32, align: 32, offset: 2432)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "afq", scope: !1646, file: !918, line: 118, baseType: !1712, size: 256, align: 64, offset: 2496)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrameQueue", file: !1713, line: 39, baseType: !1714)
!1713 = !DIFile(filename: "libavcodec/audio_frame_queue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrameQueue", file: !1713, line: 32, size: 256, align: 64, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719, !1726, !1727}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1714, file: !1713, line: 33, baseType: !1009, size: 64, align: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_delay", scope: !1714, file: !1713, line: 34, baseType: !904, size: 32, align: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_samples", scope: !1714, file: !1713, line: 35, baseType: !904, size: 32, align: 32, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1714, file: !1713, line: 36, baseType: !1720, size: 64, align: 64, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrame", file: !1713, line: 30, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrame", file: !1713, line: 27, size: 128, align: 64, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1722, file: !1713, line: 28, baseType: !1050, size: 64, align: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1722, file: !1713, line: 29, baseType: !904, size: 32, align: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !1714, file: !1713, line: 37, baseType: !905, size: 32, align: 32, offset: 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "frame_alloc", scope: !1714, file: !1713, line: 38, baseType: !905, size: 32, align: 32, offset: 224)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "bufqueue", scope: !1646, file: !918, line: 119, baseType: !1729, size: 4160, align: 64, offset: 2752)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFBufQueue", file: !1730, line: 49, size: 4160, align: 64, elements: !1731)
!1730 = !DIFile(filename: "./libavfilter/bufferqueue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1731 = !{!1732, !1736, !1737}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1729, file: !1730, line: 50, baseType: !1733, size: 4096, align: 64)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 4096, align: 64, elements: !1734)
!1734 = !{!1735}
!1735 = !DISubrange(count: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1729, file: !1730, line: 51, baseType: !1339, size: 16, align: 16, offset: 4096)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "available", scope: !1729, file: !1730, line: 52, baseType: !1339, size: 16, align: 16, offset: 4112)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ncodebooks", scope: !1646, file: !918, line: 121, baseType: !904, size: 32, align: 32, offset: 6912)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "codebooks", scope: !1646, file: !918, line: 122, baseType: !1740, size: 64, align: 64, offset: 6976)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64, align: 64)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_codebook", file: !918, line: 58, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_codebook", file: !918, line: 46, size: 576, align: 64, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "nentries", scope: !1742, file: !918, line: 47, baseType: !904, size: 32, align: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !1742, file: !918, line: 48, baseType: !900, size: 64, align: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "codewords", scope: !1742, file: !918, line: 49, baseType: !1699, size: 64, align: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ndimensions", scope: !1742, file: !918, line: 50, baseType: !904, size: 32, align: 32, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1742, file: !918, line: 51, baseType: !898, size: 32, align: 32, offset: 224)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1742, file: !918, line: 52, baseType: !898, size: 32, align: 32, offset: 256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "seq_p", scope: !1742, file: !918, line: 53, baseType: !904, size: 32, align: 32, offset: 288)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1742, file: !918, line: 54, baseType: !904, size: 32, align: 32, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "quantlist", scope: !1742, file: !918, line: 55, baseType: !1301, size: 64, align: 64, offset: 384)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "dimensions", scope: !1742, file: !918, line: 56, baseType: !915, size: 64, align: 64, offset: 448)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "pow2", scope: !1742, file: !918, line: 57, baseType: !915, size: 64, align: 64, offset: 512)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "nfloors", scope: !1646, file: !918, line: 124, baseType: !904, size: 32, align: 32, offset: 7040)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "floors", scope: !1646, file: !918, line: 125, baseType: !1757, size: 64, align: 64, offset: 7104)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_floor", file: !918, line: 76, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_floor", file: !918, line: 67, size: 448, align: 64, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1773, !1774, !1775, !1776}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !1759, file: !918, line: 68, baseType: !904, size: 32, align: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "partition_to_class", scope: !1759, file: !918, line: 69, baseType: !1301, size: 64, align: 64, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nclasses", scope: !1759, file: !918, line: 70, baseType: !904, size: 32, align: 32, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "classes", scope: !1759, file: !918, line: 71, baseType: !1765, size: 64, align: 64, offset: 192)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64, align: 64)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_floor_class", file: !918, line: 65, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_floor_class", file: !918, line: 60, size: 192, align: 64, elements: !1768)
!1768 = !{!1769, !1770, !1771, !1772}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dim", scope: !1767, file: !918, line: 61, baseType: !904, size: 32, align: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "subclass", scope: !1767, file: !918, line: 62, baseType: !904, size: 32, align: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "masterbook", scope: !1767, file: !918, line: 63, baseType: !904, size: 32, align: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "books", scope: !1767, file: !918, line: 64, baseType: !1301, size: 64, align: 64, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "multiplier", scope: !1759, file: !918, line: 72, baseType: !904, size: 32, align: 32, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rangebits", scope: !1759, file: !918, line: 73, baseType: !904, size: 32, align: 32, offset: 288)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1759, file: !918, line: 74, baseType: !904, size: 32, align: 32, offset: 320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1759, file: !918, line: 75, baseType: !1777, size: 64, align: 64, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_floor1_entry", file: !1779, line: 37, baseType: !1780)
!1779 = !DIFile(filename: "libavcodec/vorbis.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_floor1_entry", file: !1779, line: 32, size: 64, align: 16, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1780, file: !1779, line: 33, baseType: !1338, size: 16, align: 16)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "sort", scope: !1780, file: !1779, line: 34, baseType: !1338, size: 16, align: 16, offset: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1780, file: !1779, line: 35, baseType: !1338, size: 16, align: 16, offset: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1780, file: !1779, line: 36, baseType: !1338, size: 16, align: 16, offset: 48)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "nresidues", scope: !1646, file: !918, line: 127, baseType: !904, size: 32, align: 32, offset: 7168)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "residues", scope: !1646, file: !918, line: 128, baseType: !1788, size: 64, align: 64, offset: 7232)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64, align: 64)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_residue", file: !918, line: 87, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_residue", file: !918, line: 78, size: 320, align: 64, elements: !1791)
!1791 = !{!1792, !1793, !1794, !1795, !1796, !1797, !1798, !1801}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1790, file: !918, line: 79, baseType: !904, size: 32, align: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1790, file: !918, line: 80, baseType: !904, size: 32, align: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1790, file: !918, line: 81, baseType: !904, size: 32, align: 32, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "partition_size", scope: !1790, file: !918, line: 82, baseType: !904, size: 32, align: 32, offset: 96)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "classifications", scope: !1790, file: !918, line: 83, baseType: !904, size: 32, align: 32, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "classbook", scope: !1790, file: !918, line: 84, baseType: !904, size: 32, align: 32, offset: 160)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "books", scope: !1790, file: !918, line: 85, baseType: !1799, size: 64, align: 64, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64, align: 64)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 64, align: 8, elements: !1037)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "maxes", scope: !1790, file: !918, line: 86, baseType: !1802, size: 64, align: 64, offset: 256)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64, align: 64)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 64, align: 32, elements: !1652)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "nmappings", scope: !1646, file: !918, line: 130, baseType: !904, size: 32, align: 32, offset: 7296)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !1646, file: !918, line: 131, baseType: !1806, size: 64, align: 64, offset: 7360)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64, align: 64)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_mapping", file: !918, line: 97, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_mapping", file: !918, line: 89, size: 448, align: 64, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "submaps", scope: !1808, file: !918, line: 90, baseType: !904, size: 32, align: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "mux", scope: !1808, file: !918, line: 91, baseType: !1301, size: 64, align: 64, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "floor", scope: !1808, file: !918, line: 92, baseType: !1301, size: 64, align: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !1808, file: !918, line: 93, baseType: !1301, size: 64, align: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_steps", scope: !1808, file: !918, line: 94, baseType: !904, size: 32, align: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !1808, file: !918, line: 95, baseType: !1301, size: 64, align: 64, offset: 320)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1808, file: !918, line: 96, baseType: !1301, size: 64, align: 64, offset: 384)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "nmodes", scope: !1646, file: !918, line: 133, baseType: !904, size: 32, align: 32, offset: 7424)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !1646, file: !918, line: 134, baseType: !1819, size: 64, align: 64, offset: 7488)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64, align: 64)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "vorbis_enc_mode", file: !918, line: 102, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vorbis_enc_mode", file: !918, line: 99, size: 64, align: 32, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "blockflag", scope: !1821, file: !918, line: 100, baseType: !904, size: 32, align: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1821, file: !918, line: 101, baseType: !904, size: 32, align: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "next_pts", scope: !1646, file: !918, line: 136, baseType: !1050, size: 64, align: 64, offset: 7552)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1646, file: !918, line: 138, baseType: !1827, size: 64, align: 64, offset: 7616)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1829, line: 192, baseType: !1830)
!1829 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1829, line: 24, size: 704, align: 64, elements: !1831)
!1831 = !{!1832, !1836, !1840, !1848, !1849, !1850, !1854, !1855, !1856, !1861, !1865}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1830, file: !1829, line: 38, baseType: !1833, size: 64, align: 64)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64, align: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{null, !915, !1702, !1702, !904}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1830, file: !1829, line: 54, baseType: !1837, size: 64, align: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64, align: 64)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{null, !915, !1702, !898, !904}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1830, file: !1829, line: 70, baseType: !1841, size: 64, align: 64, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64, align: 64)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{null, !1844, !1846, !1845, !904}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64, align: 64)
!1845 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64, align: 64)
!1847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1830, file: !1829, line: 85, baseType: !1837, size: 64, align: 64, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1830, file: !1829, line: 100, baseType: !1841, size: 64, align: 64, offset: 256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1830, file: !1829, line: 119, baseType: !1851, size: 64, align: 64, offset: 320)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !915, !1702, !1702, !1702, !904}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1830, file: !1829, line: 137, baseType: !1851, size: 64, align: 64, offset: 384)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1830, file: !1829, line: 154, baseType: !1833, size: 64, align: 64, offset: 448)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1830, file: !1829, line: 164, baseType: !1857, size: 64, align: 64, offset: 512)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1860, !1860, !904}
!1860 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !915)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1830, file: !1829, line: 175, baseType: !1862, size: 64, align: 64, offset: 576)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64, align: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!898, !1702, !1702, !904}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1830, file: !1829, line: 190, baseType: !1866, size: 64, align: 64, offset: 640)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64, align: 64)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{null, !1844, !1846, !1846, !904}
!1869 = !{}
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 256, align: 32, elements: !1037)
!1871 = distinct !DIGlobalVariable(name: "a", scope: !1641, file: !918, line: 367, type: !1872, isLocal: true, isDefinition: true, variable: [27 x i32]* @create_vorbis_context.a.3)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 864, align: 32, elements: !1873)
!1873 = !{!1874}
!1874 = !DISubrange(count: 27)
!1875 = distinct !DIGlobalVariable(name: "a", scope: !1641, file: !918, line: 394, type: !1876, isLocal: true, isDefinition: true, variable: [10 x [8 x i8]]* @create_vorbis_context.a.4)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 640, align: 8, elements: !1878)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1878 = !{!1879, !1038}
!1879 = !DISubrange(count: 10)
!1880 = distinct !DIGlobalVariable(name: "cvectors", scope: !0, file: !1881, line: 459, type: !1882, isLocal: true, isDefinition: true, variable: [29 x %struct.anon]* @cvectors)
!1881 = !DIFile(filename: "libavcodec/vorbis_enc_data.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 11136, align: 64, elements: !1894)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1881, line: 450, size: 384, align: 64, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "dim", scope: !1884, file: !1881, line: 451, baseType: !904, size: 32, align: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1884, file: !1881, line: 452, baseType: !904, size: 32, align: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "real_len", scope: !1884, file: !1881, line: 453, baseType: !904, size: 32, align: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "clens", scope: !1884, file: !1881, line: 454, baseType: !1451, size: 64, align: 64, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1884, file: !1881, line: 455, baseType: !904, size: 32, align: 32, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1884, file: !1881, line: 456, baseType: !898, size: 32, align: 32, offset: 224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1884, file: !1881, line: 457, baseType: !898, size: 32, align: 32, offset: 256)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !1884, file: !1881, line: 458, baseType: !1451, size: 64, align: 64, offset: 320)
!1894 = !{!1895}
!1895 = !DISubrange(count: 29)
!1896 = distinct !DIGlobalVariable(name: "codebook0", scope: !0, file: !1881, line: 26, type: !1897, isLocal: true, isDefinition: true, variable: [16 x i8]* @codebook0)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 128, align: 8, elements: !1898)
!1898 = !{!1899}
!1899 = !DISubrange(count: 16)
!1900 = distinct !DIGlobalVariable(name: "codebook1", scope: !0, file: !1881, line: 30, type: !1901, isLocal: true, isDefinition: true, variable: [8 x i8]* @codebook1)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 64, align: 8, elements: !1037)
!1902 = distinct !DIGlobalVariable(name: "codebook2", scope: !0, file: !1881, line: 34, type: !1903, isLocal: true, isDefinition: true, variable: [256 x i8]* @codebook2)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 2048, align: 8, elements: !1904)
!1904 = !{!1905}
!1905 = !DISubrange(count: 256)
!1906 = distinct !DIGlobalVariable(name: "codebook3", scope: !0, file: !1881, line: 55, type: !1907, isLocal: true, isDefinition: true, variable: [64 x i8]* @codebook3)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 512, align: 8, elements: !1734)
!1908 = distinct !DIGlobalVariable(name: "codebook4", scope: !0, file: !1881, line: 63, type: !1909, isLocal: true, isDefinition: true, variable: [128 x i8]* @codebook4)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 1024, align: 8, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 128)
!1912 = distinct !DIGlobalVariable(name: "codebook5", scope: !0, file: !1881, line: 75, type: !1913, isLocal: true, isDefinition: true, variable: [32 x i8]* @codebook5)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 256, align: 8, elements: !1914)
!1914 = !{!1915}
!1915 = !DISubrange(count: 32)
!1916 = distinct !DIGlobalVariable(name: "codebook6", scope: !0, file: !1881, line: 81, type: !1917, isLocal: true, isDefinition: true, variable: [96 x i8]* @codebook6)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 768, align: 8, elements: !1918)
!1918 = !{!1919}
!1919 = !DISubrange(count: 96)
!1920 = distinct !DIGlobalVariable(name: "codebook7", scope: !0, file: !1881, line: 91, type: !1913, isLocal: true, isDefinition: true, variable: [32 x i8]* @codebook7)
!1921 = distinct !DIGlobalVariable(name: "codebook8", scope: !0, file: !1881, line: 97, type: !1917, isLocal: true, isDefinition: true, variable: [96 x i8]* @codebook8)
!1922 = distinct !DIGlobalVariable(name: "codebook9", scope: !0, file: !1881, line: 107, type: !1923, isLocal: true, isDefinition: true, variable: [17 x i8]* @codebook9)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 136, align: 8, elements: !1924)
!1924 = !{!1925}
!1925 = !DISubrange(count: 17)
!1926 = distinct !DIGlobalVariable(name: "codebook10", scope: !0, file: !1881, line: 112, type: !1913, isLocal: true, isDefinition: true, variable: [32 x i8]* @codebook10)
!1927 = distinct !DIGlobalVariable(name: "codebook11", scope: !0, file: !1881, line: 118, type: !1928, isLocal: true, isDefinition: true, variable: [78 x i8]* @codebook11)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 624, align: 8, elements: !1929)
!1929 = !{!1930}
!1930 = !DISubrange(count: 78)
!1931 = distinct !DIGlobalVariable(name: "codebook12", scope: !0, file: !1881, line: 127, type: !1923, isLocal: true, isDefinition: true, variable: [17 x i8]* @codebook12)
!1932 = distinct !DIGlobalVariable(name: "codebook13", scope: !0, file: !1881, line: 132, type: !1913, isLocal: true, isDefinition: true, variable: [32 x i8]* @codebook13)
!1933 = distinct !DIGlobalVariable(name: "codebook14", scope: !0, file: !1881, line: 138, type: !1928, isLocal: true, isDefinition: true, variable: [78 x i8]* @codebook14)
!1934 = distinct !DIGlobalVariable(name: "codebook15", scope: !0, file: !1881, line: 147, type: !1935, isLocal: true, isDefinition: true, variable: [100 x i8]* @codebook15)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 800, align: 8, elements: !1936)
!1936 = !{!1937}
!1937 = !DISubrange(count: 100)
!1938 = distinct !DIGlobalVariable(name: "codebook16", scope: !0, file: !1881, line: 157, type: !1939, isLocal: true, isDefinition: true, variable: [1641 x i8]* @codebook16)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 13128, align: 8, elements: !1940)
!1940 = !{!1941}
!1941 = !DISubrange(count: 1641)
!1942 = distinct !DIGlobalVariable(name: "codebook17", scope: !0, file: !1881, line: 270, type: !1943, isLocal: true, isDefinition: true, variable: [443 x i8]* @codebook17)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 3544, align: 8, elements: !1944)
!1944 = !{!1945}
!1945 = !DISubrange(count: 443)
!1946 = distinct !DIGlobalVariable(name: "codebook18", scope: !0, file: !1881, line: 303, type: !1947, isLocal: true, isDefinition: true, variable: [105 x i8]* @codebook18)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 840, align: 8, elements: !1948)
!1948 = !{!1949}
!1949 = !DISubrange(count: 105)
!1950 = distinct !DIGlobalVariable(name: "codebook19", scope: !0, file: !1881, line: 313, type: !1951, isLocal: true, isDefinition: true, variable: [68 x i8]* @codebook19)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 544, align: 8, elements: !1952)
!1952 = !{!1953}
!1953 = !DISubrange(count: 68)
!1954 = distinct !DIGlobalVariable(name: "codebook20", scope: !0, file: !1881, line: 321, type: !1955, isLocal: true, isDefinition: true, variable: [81 x i8]* @codebook20)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 648, align: 8, elements: !1956)
!1956 = !{!1957}
!1957 = !DISubrange(count: 81)
!1958 = distinct !DIGlobalVariable(name: "codebook21", scope: !0, file: !1881, line: 330, type: !1959, isLocal: true, isDefinition: true, variable: [289 x i8]* @codebook21)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 2312, align: 8, elements: !1960)
!1960 = !{!1961}
!1961 = !DISubrange(count: 289)
!1962 = distinct !DIGlobalVariable(name: "codebook22", scope: !0, file: !1881, line: 353, type: !1955, isLocal: true, isDefinition: true, variable: [81 x i8]* @codebook22)
!1963 = distinct !DIGlobalVariable(name: "codebook23", scope: !0, file: !1881, line: 362, type: !1964, isLocal: true, isDefinition: true, variable: [121 x i8]* @codebook23)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 968, align: 8, elements: !1965)
!1965 = !{!1966}
!1966 = !DISubrange(count: 121)
!1967 = distinct !DIGlobalVariable(name: "codebook24", scope: !0, file: !1881, line: 374, type: !1968, isLocal: true, isDefinition: true, variable: [169 x i8]* @codebook24)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 1352, align: 8, elements: !1969)
!1969 = !{!1970}
!1970 = !DISubrange(count: 169)
!1971 = distinct !DIGlobalVariable(name: "codebook25", scope: !0, file: !1881, line: 389, type: !1972, isLocal: true, isDefinition: true, variable: [25 x i8]* @codebook25)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 200, align: 8, elements: !1973)
!1973 = !{!1974}
!1974 = !DISubrange(count: 25)
!1975 = distinct !DIGlobalVariable(name: "codebook26", scope: !0, file: !1881, line: 394, type: !1968, isLocal: true, isDefinition: true, variable: [169 x i8]* @codebook26)
!1976 = distinct !DIGlobalVariable(name: "codebook27", scope: !0, file: !1881, line: 409, type: !1977, isLocal: true, isDefinition: true, variable: [225 x i8]* @codebook27)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 1800, align: 8, elements: !1978)
!1978 = !{!1979}
!1979 = !DISubrange(count: 225)
!1980 = distinct !DIGlobalVariable(name: "codebook28", scope: !0, file: !1881, line: 427, type: !1959, isLocal: true, isDefinition: true, variable: [289 x i8]* @codebook28)
!1981 = distinct !DIGlobalVariable(name: "floor_classes", scope: !0, file: !1881, line: 496, type: !1982, isLocal: true, isDefinition: true, variable: [5 x %struct.anon.0]* @floor_classes)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1983, size: 1120, align: 32, elements: !1991)
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1881, line: 491, size: 224, align: 32, elements: !1985)
!1985 = !{!1986, !1987, !1988, !1989}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "dim", scope: !1984, file: !1881, line: 492, baseType: !904, size: 32, align: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "subclass", scope: !1984, file: !1881, line: 493, baseType: !904, size: 32, align: 32, offset: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "masterbook", scope: !1984, file: !1881, line: 494, baseType: !904, size: 32, align: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "nbooks", scope: !1984, file: !1881, line: 495, baseType: !1990, size: 128, align: 32, offset: 96)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 128, align: 32, elements: !1138)
!1991 = !{!1992}
!1992 = !DISubrange(count: 5)
!1993 = !{i32 2, !"Dwarf Version", i32 4}
!1994 = !{i32 2, !"Debug Info Version", i32 3}
!1995 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1996 = distinct !DISubprogram(name: "vorbis_encode_init", scope: !918, file: !918, line: 1267, type: !1007, isLocal: true, isDefinition: true, scopeLine: 1268, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!1997 = !DILocalVariable(name: "avctx", arg: 1, scope: !1996, file: !918, line: 1267, type: !1009)
!1998 = !DIExpression()
!1999 = !DILocation(line: 1267, column: 69, scope: !1996)
!2000 = !DILocalVariable(name: "venc", scope: !1996, file: !918, line: 1269, type: !1644)
!2001 = !DILocation(line: 1269, column: 25, scope: !1996)
!2002 = !DILocation(line: 1269, column: 32, scope: !1996)
!2003 = !DILocation(line: 1269, column: 39, scope: !1996)
!2004 = !DILocalVariable(name: "ret", scope: !1996, file: !918, line: 1270, type: !904)
!2005 = !DILocation(line: 1270, column: 9, scope: !1996)
!2006 = !DILocation(line: 1272, column: 9, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1996, file: !918, line: 1272, column: 9)
!2008 = !DILocation(line: 1272, column: 16, scope: !2007)
!2009 = !DILocation(line: 1272, column: 25, scope: !2007)
!2010 = !DILocation(line: 1272, column: 9, scope: !1996)
!2011 = !DILocation(line: 1273, column: 16, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2007, file: !918, line: 1272, column: 31)
!2013 = !DILocation(line: 1273, column: 9, scope: !2012)
!2014 = !DILocation(line: 1274, column: 9, scope: !2012)
!2015 = !DILocation(line: 1277, column: 38, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !1996, file: !918, line: 1277, column: 9)
!2017 = !DILocation(line: 1277, column: 44, scope: !2016)
!2018 = !DILocation(line: 1277, column: 16, scope: !2016)
!2019 = !DILocation(line: 1277, column: 14, scope: !2016)
!2020 = !DILocation(line: 1277, column: 52, scope: !2016)
!2021 = !DILocation(line: 1277, column: 9, scope: !1996)
!2022 = !DILocation(line: 1278, column: 9, scope: !2016)
!2023 = !DILocation(line: 1280, column: 5, scope: !1996)
!2024 = !DILocation(line: 1280, column: 12, scope: !1996)
!2025 = !DILocation(line: 1280, column: 21, scope: !1996)
!2026 = !DILocation(line: 1281, column: 9, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !1996, file: !918, line: 1281, column: 9)
!2028 = !DILocation(line: 1281, column: 16, scope: !2027)
!2029 = !DILocation(line: 1281, column: 22, scope: !2027)
!2030 = !DILocation(line: 1281, column: 9, scope: !1996)
!2031 = !DILocation(line: 1282, column: 25, scope: !2027)
!2032 = !DILocation(line: 1282, column: 32, scope: !2027)
!2033 = !DILocation(line: 1282, column: 47, scope: !2027)
!2034 = !DILocation(line: 1282, column: 9, scope: !2027)
!2035 = !DILocation(line: 1282, column: 15, scope: !2027)
!2036 = !DILocation(line: 1282, column: 23, scope: !2027)
!2037 = !DILocation(line: 1284, column: 9, scope: !2027)
!2038 = !DILocation(line: 1284, column: 15, scope: !2027)
!2039 = !DILocation(line: 1284, column: 23, scope: !2027)
!2040 = !DILocation(line: 1285, column: 22, scope: !1996)
!2041 = !DILocation(line: 1285, column: 28, scope: !1996)
!2042 = !DILocation(line: 1285, column: 5, scope: !1996)
!2043 = !DILocation(line: 1285, column: 11, scope: !1996)
!2044 = !DILocation(line: 1285, column: 19, scope: !1996)
!2045 = !DILocation(line: 1287, column: 32, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !1996, file: !918, line: 1287, column: 9)
!2047 = !DILocation(line: 1287, column: 50, scope: !2046)
!2048 = !DILocation(line: 1287, column: 57, scope: !2046)
!2049 = !DILocation(line: 1287, column: 16, scope: !2046)
!2050 = !DILocation(line: 1287, column: 14, scope: !2046)
!2051 = !DILocation(line: 1287, column: 69, scope: !2046)
!2052 = !DILocation(line: 1287, column: 9, scope: !1996)
!2053 = !DILocation(line: 1288, column: 9, scope: !2046)
!2054 = !DILocation(line: 1289, column: 29, scope: !1996)
!2055 = !DILocation(line: 1289, column: 5, scope: !1996)
!2056 = !DILocation(line: 1289, column: 12, scope: !1996)
!2057 = !DILocation(line: 1289, column: 27, scope: !1996)
!2058 = !DILocation(line: 1291, column: 5, scope: !1996)
!2059 = !DILocation(line: 1291, column: 12, scope: !1996)
!2060 = !DILocation(line: 1291, column: 23, scope: !1996)
!2061 = !DILocation(line: 1293, column: 22, scope: !1996)
!2062 = !DILocation(line: 1293, column: 30, scope: !1996)
!2063 = !DILocation(line: 1293, column: 36, scope: !1996)
!2064 = !DILocation(line: 1293, column: 5, scope: !1996)
!2065 = !DILocation(line: 1295, column: 5, scope: !1996)
!2066 = !DILocation(line: 1297, column: 25, scope: !1996)
!2067 = !DILocation(line: 1297, column: 5, scope: !1996)
!2068 = !DILocation(line: 1298, column: 12, scope: !1996)
!2069 = !DILocation(line: 1298, column: 5, scope: !1996)
!2070 = !DILocation(line: 1299, column: 1, scope: !1996)
!2071 = distinct !DISubprogram(name: "vorbis_encode_frame", scope: !918, file: !918, line: 1085, type: !1613, isLocal: true, isDefinition: true, scopeLine: 1087, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!2072 = !DILocalVariable(name: "avctx", arg: 1, scope: !2071, file: !918, line: 1085, type: !1009)
!2073 = !DILocation(line: 1085, column: 48, scope: !2071)
!2074 = !DILocalVariable(name: "avpkt", arg: 2, scope: !2071, file: !918, line: 1085, type: !1155)
!2075 = !DILocation(line: 1085, column: 65, scope: !2071)
!2076 = !DILocalVariable(name: "frame", arg: 3, scope: !2071, file: !918, line: 1086, type: !1299)
!2077 = !DILocation(line: 1086, column: 47, scope: !2071)
!2078 = !DILocalVariable(name: "got_packet_ptr", arg: 4, scope: !2071, file: !918, line: 1086, type: !1301)
!2079 = !DILocation(line: 1086, column: 59, scope: !2071)
!2080 = !DILocalVariable(name: "venc", scope: !2071, file: !918, line: 1088, type: !1644)
!2081 = !DILocation(line: 1088, column: 25, scope: !2071)
!2082 = !DILocation(line: 1088, column: 32, scope: !2071)
!2083 = !DILocation(line: 1088, column: 39, scope: !2071)
!2084 = !DILocalVariable(name: "i", scope: !2071, file: !918, line: 1089, type: !904)
!2085 = !DILocation(line: 1089, column: 9, scope: !2071)
!2086 = !DILocalVariable(name: "ret", scope: !2071, file: !918, line: 1089, type: !904)
!2087 = !DILocation(line: 1089, column: 12, scope: !2071)
!2088 = !DILocalVariable(name: "need_more", scope: !2071, file: !918, line: 1089, type: !904)
!2089 = !DILocation(line: 1089, column: 17, scope: !2071)
!2090 = !DILocalVariable(name: "frame_size", scope: !2071, file: !918, line: 1090, type: !904)
!2091 = !DILocation(line: 1090, column: 9, scope: !2071)
!2092 = !DILocation(line: 1090, column: 28, scope: !2071)
!2093 = !DILocation(line: 1090, column: 34, scope: !2071)
!2094 = !DILocation(line: 1090, column: 52, scope: !2071)
!2095 = !DILocation(line: 1090, column: 24, scope: !2071)
!2096 = !DILocalVariable(name: "mode", scope: !2071, file: !918, line: 1091, type: !1819)
!2097 = !DILocation(line: 1091, column: 22, scope: !2071)
!2098 = !DILocalVariable(name: "mapping", scope: !2071, file: !918, line: 1092, type: !1806)
!2099 = !DILocation(line: 1092, column: 25, scope: !2071)
!2100 = !DILocalVariable(name: "pb", scope: !2071, file: !918, line: 1093, type: !2101)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !2102, line: 40, baseType: !2103)
!2102 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !2102, line: 35, size: 320, align: 64, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !2103, file: !2102, line: 36, baseType: !912, size: 32, align: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !2103, file: !2102, line: 37, baseType: !904, size: 32, align: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2103, file: !2102, line: 38, baseType: !900, size: 64, align: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !2103, file: !2102, line: 38, baseType: !900, size: 64, align: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !2103, file: !2102, line: 38, baseType: !900, size: 64, align: 64, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2103, file: !2102, line: 39, baseType: !904, size: 32, align: 32, offset: 256)
!2111 = !DILocation(line: 1093, column: 19, scope: !2071)
!2112 = !DILocation(line: 1095, column: 9, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1095, column: 9)
!2114 = !DILocation(line: 1095, column: 9, scope: !2071)
!2115 = !DILocalVariable(name: "clone", scope: !2116, file: !918, line: 1096, type: !1031)
!2116 = distinct !DILexicalBlock(scope: !2113, file: !918, line: 1095, column: 16)
!2117 = !DILocation(line: 1096, column: 18, scope: !2116)
!2118 = !DILocation(line: 1097, column: 37, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2116, file: !918, line: 1097, column: 13)
!2120 = !DILocation(line: 1097, column: 43, scope: !2119)
!2121 = !DILocation(line: 1097, column: 48, scope: !2119)
!2122 = !DILocation(line: 1097, column: 20, scope: !2119)
!2123 = !DILocation(line: 1097, column: 18, scope: !2119)
!2124 = !DILocation(line: 1097, column: 56, scope: !2119)
!2125 = !DILocation(line: 1097, column: 13, scope: !2116)
!2126 = !DILocation(line: 1098, column: 20, scope: !2119)
!2127 = !DILocation(line: 1098, column: 13, scope: !2119)
!2128 = !DILocation(line: 1099, column: 32, scope: !2116)
!2129 = !DILocation(line: 1099, column: 17, scope: !2116)
!2130 = !DILocation(line: 1099, column: 15, scope: !2116)
!2131 = !DILocation(line: 1100, column: 14, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2116, file: !918, line: 1100, column: 13)
!2133 = !DILocation(line: 1100, column: 13, scope: !2116)
!2134 = !DILocation(line: 1101, column: 13, scope: !2132)
!2135 = !DILocation(line: 1102, column: 25, scope: !2116)
!2136 = !DILocation(line: 1102, column: 33, scope: !2116)
!2137 = !DILocation(line: 1102, column: 39, scope: !2116)
!2138 = !DILocation(line: 1102, column: 49, scope: !2116)
!2139 = !DILocation(line: 1102, column: 9, scope: !2116)
!2140 = !DILocation(line: 1103, column: 5, scope: !2116)
!2141 = !DILocation(line: 1104, column: 14, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2113, file: !918, line: 1104, column: 13)
!2143 = !DILocation(line: 1104, column: 20, scope: !2142)
!2144 = !DILocation(line: 1104, column: 24, scope: !2142)
!2145 = !DILocation(line: 1104, column: 13, scope: !2113)
!2146 = !DILocation(line: 1105, column: 13, scope: !2142)
!2147 = !DILocation(line: 1107, column: 17, scope: !2071)
!2148 = !DILocation(line: 1107, column: 23, scope: !2071)
!2149 = !DILocation(line: 1107, column: 32, scope: !2071)
!2150 = !DILocation(line: 1107, column: 44, scope: !2071)
!2151 = !DILocation(line: 1107, column: 51, scope: !2071)
!2152 = !DILocation(line: 1107, column: 42, scope: !2071)
!2153 = !DILocation(line: 1107, column: 64, scope: !2071)
!2154 = !DILocation(line: 1107, column: 62, scope: !2071)
!2155 = !DILocation(line: 1107, column: 15, scope: !2071)
!2156 = !DILocation(line: 1108, column: 17, scope: !2071)
!2157 = !DILocation(line: 1108, column: 23, scope: !2071)
!2158 = !DILocation(line: 1108, column: 26, scope: !2159)
!2159 = !DILexicalBlockFile(scope: !2071, file: !918, discriminator: 1)
!2160 = !DILocation(line: 1108, column: 23, scope: !2159)
!2161 = !DILocation(line: 1108, column: 23, scope: !2162)
!2162 = !DILexicalBlockFile(scope: !2071, file: !918, discriminator: 2)
!2163 = !DILocation(line: 1108, column: 15, scope: !2162)
!2164 = !DILocation(line: 1109, column: 9, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1109, column: 9)
!2166 = !DILocation(line: 1109, column: 9, scope: !2071)
!2167 = !DILocation(line: 1110, column: 9, scope: !2165)
!2168 = !DILocation(line: 1113, column: 10, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1113, column: 9)
!2170 = !DILocation(line: 1113, column: 9, scope: !2071)
!2171 = !DILocation(line: 1114, column: 13, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2173, file: !918, line: 1114, column: 13)
!2173 = distinct !DILexicalBlock(scope: !2169, file: !918, line: 1113, column: 17)
!2174 = !DILocation(line: 1114, column: 19, scope: !2172)
!2175 = !DILocation(line: 1114, column: 28, scope: !2172)
!2176 = !DILocation(line: 1114, column: 40, scope: !2172)
!2177 = !DILocation(line: 1114, column: 47, scope: !2172)
!2178 = !DILocation(line: 1114, column: 38, scope: !2172)
!2179 = !DILocation(line: 1114, column: 60, scope: !2172)
!2180 = !DILocation(line: 1114, column: 58, scope: !2172)
!2181 = !DILocation(line: 1114, column: 13, scope: !2173)
!2182 = !DILocalVariable(name: "frames_needed", scope: !2183, file: !918, line: 1115, type: !904)
!2183 = distinct !DILexicalBlock(scope: !2172, file: !918, line: 1114, column: 72)
!2184 = !DILocation(line: 1115, column: 17, scope: !2183)
!2185 = !DILocation(line: 1115, column: 34, scope: !2183)
!2186 = !DILocation(line: 1115, column: 45, scope: !2183)
!2187 = !DILocation(line: 1115, column: 52, scope: !2183)
!2188 = !DILocation(line: 1115, column: 44, scope: !2183)
!2189 = !DILocation(line: 1115, column: 66, scope: !2183)
!2190 = !DILocation(line: 1115, column: 72, scope: !2183)
!2191 = !DILocation(line: 1115, column: 81, scope: !2183)
!2192 = !DILocation(line: 1115, column: 64, scope: !2183)
!2193 = !DILocalVariable(name: "i", scope: !2183, file: !918, line: 1116, type: !904)
!2194 = !DILocation(line: 1116, column: 17, scope: !2183)
!2195 = !DILocation(line: 1118, column: 20, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2183, file: !918, line: 1118, column: 13)
!2197 = !DILocation(line: 1118, column: 18, scope: !2196)
!2198 = !DILocation(line: 1118, column: 25, scope: !2199)
!2199 = !DILexicalBlockFile(scope: !2200, file: !918, discriminator: 1)
!2200 = distinct !DILexicalBlock(scope: !2196, file: !918, line: 1118, column: 13)
!2201 = !DILocation(line: 1118, column: 29, scope: !2199)
!2202 = !DILocation(line: 1118, column: 27, scope: !2199)
!2203 = !DILocation(line: 1118, column: 13, scope: !2199)
!2204 = !DILocalVariable(name: "empty", scope: !2205, file: !918, line: 1119, type: !1031)
!2205 = distinct !DILexicalBlock(scope: !2200, file: !918, line: 1118, column: 49)
!2206 = !DILocation(line: 1119, column: 25, scope: !2205)
!2207 = !DILocation(line: 1119, column: 51, scope: !2205)
!2208 = !DILocation(line: 1119, column: 58, scope: !2205)
!2209 = !DILocation(line: 1119, column: 64, scope: !2205)
!2210 = !DILocation(line: 1119, column: 33, scope: !2205)
!2211 = !DILocation(line: 1120, column: 21, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2205, file: !918, line: 1120, column: 20)
!2213 = !DILocation(line: 1120, column: 20, scope: !2205)
!2214 = !DILocation(line: 1121, column: 20, scope: !2212)
!2215 = !DILocation(line: 1123, column: 32, scope: !2205)
!2216 = !DILocation(line: 1123, column: 40, scope: !2205)
!2217 = !DILocation(line: 1123, column: 46, scope: !2205)
!2218 = !DILocation(line: 1123, column: 56, scope: !2205)
!2219 = !DILocation(line: 1123, column: 16, scope: !2205)
!2220 = !DILocation(line: 1124, column: 13, scope: !2205)
!2221 = !DILocation(line: 1118, column: 45, scope: !2222)
!2222 = !DILexicalBlockFile(scope: !2200, file: !918, discriminator: 2)
!2223 = !DILocation(line: 1118, column: 13, scope: !2222)
!2224 = distinct !{!2224, !2225}
!2225 = !DILocation(line: 1118, column: 13, scope: !2183)
!2226 = !DILocation(line: 1125, column: 9, scope: !2183)
!2227 = !DILocation(line: 1126, column: 5, scope: !2173)
!2228 = !DILocation(line: 1128, column: 16, scope: !2071)
!2229 = !DILocation(line: 1128, column: 22, scope: !2071)
!2230 = !DILocation(line: 1128, column: 29, scope: !2071)
!2231 = !DILocation(line: 1128, column: 5, scope: !2071)
!2232 = !DILocation(line: 1130, column: 32, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1130, column: 9)
!2234 = !DILocation(line: 1130, column: 10, scope: !2233)
!2235 = !DILocation(line: 1130, column: 9, scope: !2071)
!2236 = !DILocation(line: 1131, column: 9, scope: !2233)
!2237 = !DILocation(line: 1133, column: 33, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1133, column: 9)
!2239 = !DILocation(line: 1133, column: 40, scope: !2238)
!2240 = !DILocation(line: 1133, column: 16, scope: !2238)
!2241 = !DILocation(line: 1133, column: 14, scope: !2238)
!2242 = !DILocation(line: 1133, column: 57, scope: !2238)
!2243 = !DILocation(line: 1133, column: 9, scope: !2071)
!2244 = !DILocation(line: 1134, column: 16, scope: !2238)
!2245 = !DILocation(line: 1134, column: 9, scope: !2238)
!2246 = !DILocation(line: 1136, column: 24, scope: !2071)
!2247 = !DILocation(line: 1136, column: 31, scope: !2071)
!2248 = !DILocation(line: 1136, column: 37, scope: !2071)
!2249 = !DILocation(line: 1136, column: 44, scope: !2071)
!2250 = !DILocation(line: 1136, column: 5, scope: !2071)
!2251 = !DILocation(line: 1138, column: 12, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1138, column: 9)
!2253 = !DILocation(line: 1138, column: 27, scope: !2252)
!2254 = !DILocation(line: 1138, column: 25, scope: !2252)
!2255 = !DILocation(line: 1138, column: 77, scope: !2252)
!2256 = !DILocation(line: 1138, column: 83, scope: !2252)
!2257 = !DILocation(line: 1138, column: 90, scope: !2252)
!2258 = !DILocation(line: 1138, column: 75, scope: !2252)
!2259 = !DILocation(line: 1138, column: 95, scope: !2252)
!2260 = !DILocation(line: 1138, column: 59, scope: !2261)
!2261 = !DILexicalBlockFile(scope: !2252, file: !918, discriminator: 1)
!2262 = !DILocation(line: 1138, column: 57, scope: !2252)
!2263 = !DILocation(line: 1138, column: 51, scope: !2252)
!2264 = !DILocation(line: 1138, column: 47, scope: !2252)
!2265 = !DILocation(line: 1138, column: 9, scope: !2071)
!2266 = !DILocation(line: 1139, column: 16, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2252, file: !918, line: 1138, column: 101)
!2268 = !DILocation(line: 1139, column: 9, scope: !2267)
!2269 = !DILocation(line: 1140, column: 9, scope: !2267)
!2270 = !DILocation(line: 1143, column: 5, scope: !2071)
!2271 = !DILocation(line: 1145, column: 43, scope: !2071)
!2272 = !DILocation(line: 1145, column: 49, scope: !2071)
!2273 = !DILocation(line: 1145, column: 56, scope: !2071)
!2274 = !DILocation(line: 1145, column: 41, scope: !2071)
!2275 = !DILocation(line: 1145, column: 61, scope: !2071)
!2276 = !DILocation(line: 1145, column: 25, scope: !2071)
!2277 = !DILocation(line: 1145, column: 23, scope: !2071)
!2278 = !DILocation(line: 1145, column: 5, scope: !2159)
!2279 = !DILocation(line: 1147, column: 13, scope: !2071)
!2280 = !DILocation(line: 1147, column: 19, scope: !2071)
!2281 = !DILocation(line: 1147, column: 10, scope: !2071)
!2282 = !DILocation(line: 1148, column: 31, scope: !2071)
!2283 = !DILocation(line: 1148, column: 37, scope: !2071)
!2284 = !DILocation(line: 1148, column: 16, scope: !2071)
!2285 = !DILocation(line: 1148, column: 22, scope: !2071)
!2286 = !DILocation(line: 1148, column: 13, scope: !2071)
!2287 = !DILocation(line: 1149, column: 9, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1149, column: 9)
!2289 = !DILocation(line: 1149, column: 15, scope: !2288)
!2290 = !DILocation(line: 1149, column: 9, scope: !2071)
!2291 = !DILocation(line: 1150, column: 9, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2288, file: !918, line: 1149, column: 26)
!2293 = !DILocation(line: 1151, column: 9, scope: !2292)
!2294 = !DILocation(line: 1152, column: 5, scope: !2292)
!2295 = !DILocation(line: 1154, column: 12, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1154, column: 5)
!2297 = !DILocation(line: 1154, column: 10, scope: !2296)
!2298 = !DILocation(line: 1154, column: 17, scope: !2299)
!2299 = !DILexicalBlockFile(scope: !2300, file: !918, discriminator: 1)
!2300 = distinct !DILexicalBlock(scope: !2296, file: !918, line: 1154, column: 5)
!2301 = !DILocation(line: 1154, column: 21, scope: !2299)
!2302 = !DILocation(line: 1154, column: 27, scope: !2299)
!2303 = !DILocation(line: 1154, column: 19, scope: !2299)
!2304 = !DILocation(line: 1154, column: 5, scope: !2299)
!2305 = !DILocalVariable(name: "fc", scope: !2306, file: !918, line: 1155, type: !1757)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !918, line: 1154, column: 42)
!2307 = !DILocation(line: 1155, column: 27, scope: !2306)
!2308 = !DILocation(line: 1155, column: 74, scope: !2306)
!2309 = !DILocation(line: 1155, column: 61, scope: !2306)
!2310 = !DILocation(line: 1155, column: 70, scope: !2306)
!2311 = !DILocation(line: 1155, column: 46, scope: !2306)
!2312 = !DILocation(line: 1155, column: 55, scope: !2306)
!2313 = !DILocation(line: 1155, column: 33, scope: !2306)
!2314 = !DILocation(line: 1155, column: 39, scope: !2306)
!2315 = !DILocalVariable(name: "posts", scope: !2306, file: !918, line: 1156, type: !2316)
!2316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1338, size: 544, align: 16, elements: !2317)
!2317 = !{!2318}
!2318 = !DISubrange(count: 34)
!2319 = !DILocation(line: 1156, column: 18, scope: !2306)
!2320 = !DILocation(line: 1157, column: 19, scope: !2306)
!2321 = !DILocation(line: 1157, column: 25, scope: !2306)
!2322 = !DILocation(line: 1157, column: 43, scope: !2306)
!2323 = !DILocation(line: 1157, column: 47, scope: !2306)
!2324 = !DILocation(line: 1157, column: 45, scope: !2306)
!2325 = !DILocation(line: 1157, column: 30, scope: !2306)
!2326 = !DILocation(line: 1157, column: 36, scope: !2306)
!2327 = !DILocation(line: 1157, column: 60, scope: !2306)
!2328 = !DILocation(line: 1157, column: 67, scope: !2306)
!2329 = !DILocation(line: 1157, column: 9, scope: !2306)
!2330 = !DILocation(line: 1158, column: 26, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2306, file: !918, line: 1158, column: 13)
!2332 = !DILocation(line: 1158, column: 32, scope: !2331)
!2333 = !DILocation(line: 1158, column: 41, scope: !2331)
!2334 = !DILocation(line: 1158, column: 61, scope: !2331)
!2335 = !DILocation(line: 1158, column: 65, scope: !2331)
!2336 = !DILocation(line: 1158, column: 63, scope: !2331)
!2337 = !DILocation(line: 1158, column: 49, scope: !2331)
!2338 = !DILocation(line: 1158, column: 55, scope: !2331)
!2339 = !DILocation(line: 1158, column: 78, scope: !2331)
!2340 = !DILocation(line: 1158, column: 13, scope: !2331)
!2341 = !DILocation(line: 1158, column: 13, scope: !2306)
!2342 = !DILocation(line: 1159, column: 20, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2331, file: !918, line: 1158, column: 91)
!2344 = !DILocation(line: 1159, column: 13, scope: !2343)
!2345 = !DILocation(line: 1160, column: 13, scope: !2343)
!2346 = !DILocation(line: 1162, column: 5, scope: !2306)
!2347 = !DILocation(line: 1154, column: 38, scope: !2348)
!2348 = !DILexicalBlockFile(scope: !2300, file: !918, discriminator: 2)
!2349 = !DILocation(line: 1154, column: 5, scope: !2348)
!2350 = distinct !{!2350, !2351}
!2351 = !DILocation(line: 1154, column: 5, scope: !2071)
!2352 = !DILocation(line: 1164, column: 12, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1164, column: 5)
!2354 = !DILocation(line: 1164, column: 10, scope: !2353)
!2355 = !DILocation(line: 1164, column: 17, scope: !2356)
!2356 = !DILexicalBlockFile(scope: !2357, file: !918, discriminator: 1)
!2357 = distinct !DILexicalBlock(scope: !2353, file: !918, line: 1164, column: 5)
!2358 = !DILocation(line: 1164, column: 21, scope: !2356)
!2359 = !DILocation(line: 1164, column: 27, scope: !2356)
!2360 = !DILocation(line: 1164, column: 38, scope: !2356)
!2361 = !DILocation(line: 1164, column: 36, scope: !2356)
!2362 = !DILocation(line: 1164, column: 19, scope: !2356)
!2363 = !DILocation(line: 1164, column: 5, scope: !2356)
!2364 = !DILocation(line: 1165, column: 40, scope: !2357)
!2365 = !DILocation(line: 1165, column: 28, scope: !2357)
!2366 = !DILocation(line: 1165, column: 34, scope: !2357)
!2367 = !DILocation(line: 1165, column: 22, scope: !2357)
!2368 = !DILocation(line: 1165, column: 9, scope: !2357)
!2369 = !DILocation(line: 1165, column: 15, scope: !2357)
!2370 = !DILocation(line: 1165, column: 25, scope: !2357)
!2371 = !DILocation(line: 1164, column: 51, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !2357, file: !918, discriminator: 2)
!2373 = !DILocation(line: 1164, column: 5, scope: !2372)
!2374 = distinct !{!2374, !2375}
!2375 = !DILocation(line: 1164, column: 5, scope: !2071)
!2376 = !DILocation(line: 1167, column: 12, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1167, column: 5)
!2378 = !DILocation(line: 1167, column: 10, scope: !2377)
!2379 = !DILocation(line: 1167, column: 17, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !2381, file: !918, discriminator: 1)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !918, line: 1167, column: 5)
!2382 = !DILocation(line: 1167, column: 21, scope: !2380)
!2383 = !DILocation(line: 1167, column: 30, scope: !2380)
!2384 = !DILocation(line: 1167, column: 19, scope: !2380)
!2385 = !DILocation(line: 1167, column: 5, scope: !2380)
!2386 = !DILocalVariable(name: "mag", scope: !2387, file: !918, line: 1168, type: !915)
!2387 = distinct !DILexicalBlock(scope: !2381, file: !918, line: 1167, column: 51)
!2388 = !DILocation(line: 1168, column: 16, scope: !2387)
!2389 = !DILocation(line: 1168, column: 22, scope: !2387)
!2390 = !DILocation(line: 1168, column: 28, scope: !2387)
!2391 = !DILocation(line: 1168, column: 56, scope: !2387)
!2392 = !DILocation(line: 1168, column: 37, scope: !2387)
!2393 = !DILocation(line: 1168, column: 46, scope: !2387)
!2394 = !DILocation(line: 1168, column: 61, scope: !2387)
!2395 = !DILocation(line: 1168, column: 59, scope: !2387)
!2396 = !DILocation(line: 1168, column: 35, scope: !2387)
!2397 = !DILocalVariable(name: "ang", scope: !2387, file: !918, line: 1169, type: !915)
!2398 = !DILocation(line: 1169, column: 16, scope: !2387)
!2399 = !DILocation(line: 1169, column: 22, scope: !2387)
!2400 = !DILocation(line: 1169, column: 28, scope: !2387)
!2401 = !DILocation(line: 1169, column: 52, scope: !2387)
!2402 = !DILocation(line: 1169, column: 37, scope: !2387)
!2403 = !DILocation(line: 1169, column: 46, scope: !2387)
!2404 = !DILocation(line: 1169, column: 57, scope: !2387)
!2405 = !DILocation(line: 1169, column: 55, scope: !2387)
!2406 = !DILocation(line: 1169, column: 35, scope: !2387)
!2407 = !DILocalVariable(name: "j", scope: !2387, file: !918, line: 1170, type: !904)
!2408 = !DILocation(line: 1170, column: 13, scope: !2387)
!2409 = !DILocation(line: 1171, column: 16, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2387, file: !918, line: 1171, column: 9)
!2411 = !DILocation(line: 1171, column: 14, scope: !2410)
!2412 = !DILocation(line: 1171, column: 21, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !2414, file: !918, discriminator: 1)
!2414 = distinct !DILexicalBlock(scope: !2410, file: !918, line: 1171, column: 9)
!2415 = !DILocation(line: 1171, column: 25, scope: !2413)
!2416 = !DILocation(line: 1171, column: 23, scope: !2413)
!2417 = !DILocation(line: 1171, column: 9, scope: !2413)
!2418 = !DILocalVariable(name: "a", scope: !2419, file: !918, line: 1172, type: !898)
!2419 = distinct !DILexicalBlock(scope: !2414, file: !918, line: 1171, column: 42)
!2420 = !DILocation(line: 1172, column: 19, scope: !2419)
!2421 = !DILocation(line: 1172, column: 27, scope: !2419)
!2422 = !DILocation(line: 1172, column: 23, scope: !2419)
!2423 = !DILocation(line: 1173, column: 27, scope: !2419)
!2424 = !DILocation(line: 1173, column: 23, scope: !2419)
!2425 = !DILocation(line: 1173, column: 17, scope: !2419)
!2426 = !DILocation(line: 1173, column: 13, scope: !2419)
!2427 = !DILocation(line: 1173, column: 20, scope: !2419)
!2428 = !DILocation(line: 1174, column: 21, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2419, file: !918, line: 1174, column: 17)
!2430 = !DILocation(line: 1174, column: 17, scope: !2429)
!2431 = !DILocation(line: 1174, column: 24, scope: !2429)
!2432 = !DILocation(line: 1174, column: 17, scope: !2419)
!2433 = !DILocation(line: 1175, column: 31, scope: !2429)
!2434 = !DILocation(line: 1175, column: 27, scope: !2429)
!2435 = !DILocation(line: 1175, column: 26, scope: !2429)
!2436 = !DILocation(line: 1175, column: 21, scope: !2429)
!2437 = !DILocation(line: 1175, column: 17, scope: !2429)
!2438 = !DILocation(line: 1175, column: 24, scope: !2429)
!2439 = !DILocation(line: 1176, column: 21, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2419, file: !918, line: 1176, column: 17)
!2441 = !DILocation(line: 1176, column: 17, scope: !2440)
!2442 = !DILocation(line: 1176, column: 24, scope: !2440)
!2443 = !DILocation(line: 1176, column: 17, scope: !2419)
!2444 = !DILocation(line: 1177, column: 26, scope: !2440)
!2445 = !DILocation(line: 1177, column: 21, scope: !2440)
!2446 = !DILocation(line: 1177, column: 17, scope: !2440)
!2447 = !DILocation(line: 1177, column: 24, scope: !2440)
!2448 = !DILocation(line: 1178, column: 9, scope: !2419)
!2449 = !DILocation(line: 1171, column: 38, scope: !2450)
!2450 = !DILexicalBlockFile(scope: !2414, file: !918, discriminator: 2)
!2451 = !DILocation(line: 1171, column: 9, scope: !2450)
!2452 = distinct !{!2452, !2453}
!2453 = !DILocation(line: 1171, column: 9, scope: !2387)
!2454 = !DILocation(line: 1179, column: 5, scope: !2387)
!2455 = !DILocation(line: 1167, column: 47, scope: !2456)
!2456 = !DILexicalBlockFile(scope: !2381, file: !918, discriminator: 2)
!2457 = !DILocation(line: 1167, column: 5, scope: !2456)
!2458 = distinct !{!2458, !2459}
!2459 = !DILocation(line: 1167, column: 5, scope: !2071)
!2460 = !DILocation(line: 1181, column: 24, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1181, column: 9)
!2462 = !DILocation(line: 1181, column: 63, scope: !2461)
!2463 = !DILocation(line: 1181, column: 72, scope: !2461)
!2464 = !DILocation(line: 1181, column: 46, scope: !2461)
!2465 = !DILocation(line: 1181, column: 55, scope: !2461)
!2466 = !DILocation(line: 1181, column: 31, scope: !2461)
!2467 = !DILocation(line: 1181, column: 37, scope: !2461)
!2468 = !DILocation(line: 1182, column: 29, scope: !2461)
!2469 = !DILocation(line: 1182, column: 35, scope: !2461)
!2470 = !DILocation(line: 1182, column: 43, scope: !2461)
!2471 = !DILocation(line: 1182, column: 55, scope: !2461)
!2472 = !DILocation(line: 1182, column: 61, scope: !2461)
!2473 = !DILocation(line: 1181, column: 9, scope: !2461)
!2474 = !DILocation(line: 1181, column: 9, scope: !2071)
!2475 = !DILocation(line: 1183, column: 16, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2461, file: !918, line: 1182, column: 72)
!2477 = !DILocation(line: 1183, column: 9, scope: !2476)
!2478 = !DILocation(line: 1184, column: 9, scope: !2476)
!2479 = !DILocation(line: 1187, column: 5, scope: !2071)
!2480 = !DILocation(line: 1188, column: 19, scope: !2071)
!2481 = !DILocation(line: 1188, column: 39, scope: !2071)
!2482 = !DILocation(line: 1188, column: 5, scope: !2071)
!2483 = !DILocation(line: 1188, column: 12, scope: !2071)
!2484 = !DILocation(line: 1188, column: 17, scope: !2071)
!2485 = !DILocation(line: 1190, column: 25, scope: !2071)
!2486 = !DILocation(line: 1190, column: 31, scope: !2071)
!2487 = !DILocation(line: 1190, column: 36, scope: !2071)
!2488 = !DILocation(line: 1190, column: 49, scope: !2071)
!2489 = !DILocation(line: 1190, column: 56, scope: !2071)
!2490 = !DILocation(line: 1190, column: 62, scope: !2071)
!2491 = !DILocation(line: 1190, column: 69, scope: !2071)
!2492 = !DILocation(line: 1190, column: 5, scope: !2071)
!2493 = !DILocation(line: 1192, column: 9, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2071, file: !918, line: 1192, column: 9)
!2495 = !DILocation(line: 1192, column: 22, scope: !2494)
!2496 = !DILocation(line: 1192, column: 29, scope: !2494)
!2497 = !DILocation(line: 1192, column: 20, scope: !2494)
!2498 = !DILocation(line: 1192, column: 9, scope: !2071)
!2499 = !DILocalVariable(name: "side", scope: !2500, file: !918, line: 1193, type: !900)
!2500 = distinct !DILexicalBlock(scope: !2494, file: !918, line: 1192, column: 39)
!2501 = !DILocation(line: 1193, column: 18, scope: !2500)
!2502 = !DILocation(line: 1193, column: 49, scope: !2500)
!2503 = !DILocation(line: 1193, column: 25, scope: !2500)
!2504 = !DILocation(line: 1194, column: 14, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2500, file: !918, line: 1194, column: 13)
!2506 = !DILocation(line: 1194, column: 13, scope: !2500)
!2507 = !DILocation(line: 1195, column: 13, scope: !2505)
!2508 = !DILocation(line: 1196, column: 54, scope: !2500)
!2509 = !DILocation(line: 1196, column: 67, scope: !2500)
!2510 = !DILocation(line: 1196, column: 74, scope: !2500)
!2511 = !DILocation(line: 1196, column: 65, scope: !2500)
!2512 = !DILocation(line: 1196, column: 53, scope: !2500)
!2513 = !DILocation(line: 1196, column: 37, scope: !2500)
!2514 = !DILocation(line: 1196, column: 48, scope: !2500)
!2515 = !DILocation(line: 1196, column: 51, scope: !2500)
!2516 = !DILocation(line: 1197, column: 5, scope: !2500)
!2517 = !DILocation(line: 1199, column: 6, scope: !2071)
!2518 = !DILocation(line: 1199, column: 21, scope: !2071)
!2519 = !DILocation(line: 1200, column: 5, scope: !2071)
!2520 = !DILocation(line: 1201, column: 1, scope: !2071)
!2521 = distinct !DISubprogram(name: "vorbis_encode_close", scope: !918, file: !918, line: 1204, type: !1007, isLocal: true, isDefinition: true, scopeLine: 1205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!2522 = !DILocalVariable(name: "avctx", arg: 1, scope: !2521, file: !918, line: 1204, type: !1009)
!2523 = !DILocation(line: 1204, column: 70, scope: !2521)
!2524 = !DILocalVariable(name: "venc", scope: !2521, file: !918, line: 1206, type: !1644)
!2525 = !DILocation(line: 1206, column: 25, scope: !2521)
!2526 = !DILocation(line: 1206, column: 32, scope: !2521)
!2527 = !DILocation(line: 1206, column: 39, scope: !2521)
!2528 = !DILocalVariable(name: "i", scope: !2521, file: !918, line: 1207, type: !904)
!2529 = !DILocation(line: 1207, column: 9, scope: !2521)
!2530 = !DILocation(line: 1209, column: 9, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2521, file: !918, line: 1209, column: 9)
!2532 = !DILocation(line: 1209, column: 15, scope: !2531)
!2533 = !DILocation(line: 1209, column: 9, scope: !2521)
!2534 = !DILocation(line: 1210, column: 16, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2531, file: !918, line: 1210, column: 9)
!2536 = !DILocation(line: 1210, column: 14, scope: !2535)
!2537 = !DILocation(line: 1210, column: 21, scope: !2538)
!2538 = !DILexicalBlockFile(scope: !2539, file: !918, discriminator: 1)
!2539 = distinct !DILexicalBlock(scope: !2535, file: !918, line: 1210, column: 9)
!2540 = !DILocation(line: 1210, column: 25, scope: !2538)
!2541 = !DILocation(line: 1210, column: 31, scope: !2538)
!2542 = !DILocation(line: 1210, column: 23, scope: !2538)
!2543 = !DILocation(line: 1210, column: 9, scope: !2538)
!2544 = !DILocation(line: 1211, column: 39, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2539, file: !918, line: 1210, column: 48)
!2546 = !DILocation(line: 1211, column: 23, scope: !2545)
!2547 = !DILocation(line: 1211, column: 29, scope: !2545)
!2548 = !DILocation(line: 1211, column: 42, scope: !2545)
!2549 = !DILocation(line: 1211, column: 22, scope: !2545)
!2550 = !DILocation(line: 1211, column: 13, scope: !2545)
!2551 = !DILocation(line: 1212, column: 39, scope: !2545)
!2552 = !DILocation(line: 1212, column: 23, scope: !2545)
!2553 = !DILocation(line: 1212, column: 29, scope: !2545)
!2554 = !DILocation(line: 1212, column: 42, scope: !2545)
!2555 = !DILocation(line: 1212, column: 22, scope: !2545)
!2556 = !DILocation(line: 1212, column: 13, scope: !2545)
!2557 = !DILocation(line: 1213, column: 39, scope: !2545)
!2558 = !DILocation(line: 1213, column: 23, scope: !2545)
!2559 = !DILocation(line: 1213, column: 29, scope: !2545)
!2560 = !DILocation(line: 1213, column: 42, scope: !2545)
!2561 = !DILocation(line: 1213, column: 22, scope: !2545)
!2562 = !DILocation(line: 1213, column: 13, scope: !2545)
!2563 = !DILocation(line: 1214, column: 39, scope: !2545)
!2564 = !DILocation(line: 1214, column: 23, scope: !2545)
!2565 = !DILocation(line: 1214, column: 29, scope: !2545)
!2566 = !DILocation(line: 1214, column: 42, scope: !2545)
!2567 = !DILocation(line: 1214, column: 22, scope: !2545)
!2568 = !DILocation(line: 1214, column: 13, scope: !2545)
!2569 = !DILocation(line: 1215, column: 39, scope: !2545)
!2570 = !DILocation(line: 1215, column: 23, scope: !2545)
!2571 = !DILocation(line: 1215, column: 29, scope: !2545)
!2572 = !DILocation(line: 1215, column: 42, scope: !2545)
!2573 = !DILocation(line: 1215, column: 22, scope: !2545)
!2574 = !DILocation(line: 1215, column: 13, scope: !2545)
!2575 = !DILocation(line: 1216, column: 9, scope: !2545)
!2576 = !DILocation(line: 1210, column: 44, scope: !2577)
!2577 = !DILexicalBlockFile(scope: !2539, file: !918, discriminator: 2)
!2578 = !DILocation(line: 1210, column: 9, scope: !2577)
!2579 = distinct !{!2579, !2580}
!2580 = !DILocation(line: 1210, column: 9, scope: !2531)
!2581 = !DILocation(line: 1216, column: 9, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2535, file: !918, discriminator: 1)
!2583 = !DILocation(line: 1217, column: 15, scope: !2521)
!2584 = !DILocation(line: 1217, column: 21, scope: !2521)
!2585 = !DILocation(line: 1217, column: 14, scope: !2521)
!2586 = !DILocation(line: 1217, column: 5, scope: !2521)
!2587 = !DILocation(line: 1219, column: 9, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2521, file: !918, line: 1219, column: 9)
!2589 = !DILocation(line: 1219, column: 15, scope: !2588)
!2590 = !DILocation(line: 1219, column: 9, scope: !2521)
!2591 = !DILocation(line: 1220, column: 16, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2588, file: !918, line: 1220, column: 9)
!2593 = !DILocation(line: 1220, column: 14, scope: !2592)
!2594 = !DILocation(line: 1220, column: 21, scope: !2595)
!2595 = !DILexicalBlockFile(scope: !2596, file: !918, discriminator: 1)
!2596 = distinct !DILexicalBlock(scope: !2592, file: !918, line: 1220, column: 9)
!2597 = !DILocation(line: 1220, column: 25, scope: !2595)
!2598 = !DILocation(line: 1220, column: 31, scope: !2595)
!2599 = !DILocation(line: 1220, column: 23, scope: !2595)
!2600 = !DILocation(line: 1220, column: 9, scope: !2595)
!2601 = !DILocalVariable(name: "j", scope: !2602, file: !918, line: 1221, type: !904)
!2602 = distinct !DILexicalBlock(scope: !2596, file: !918, line: 1220, column: 45)
!2603 = !DILocation(line: 1221, column: 17, scope: !2602)
!2604 = !DILocation(line: 1222, column: 30, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2602, file: !918, line: 1222, column: 17)
!2606 = !DILocation(line: 1222, column: 17, scope: !2605)
!2607 = !DILocation(line: 1222, column: 23, scope: !2605)
!2608 = !DILocation(line: 1222, column: 33, scope: !2605)
!2609 = !DILocation(line: 1222, column: 17, scope: !2602)
!2610 = !DILocation(line: 1223, column: 24, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2605, file: !918, line: 1223, column: 17)
!2612 = !DILocation(line: 1223, column: 22, scope: !2611)
!2613 = !DILocation(line: 1223, column: 29, scope: !2614)
!2614 = !DILexicalBlockFile(scope: !2615, file: !918, discriminator: 1)
!2615 = distinct !DILexicalBlock(scope: !2611, file: !918, line: 1223, column: 17)
!2616 = !DILocation(line: 1223, column: 46, scope: !2614)
!2617 = !DILocation(line: 1223, column: 33, scope: !2614)
!2618 = !DILocation(line: 1223, column: 39, scope: !2614)
!2619 = !DILocation(line: 1223, column: 49, scope: !2614)
!2620 = !DILocation(line: 1223, column: 31, scope: !2614)
!2621 = !DILocation(line: 1223, column: 17, scope: !2614)
!2622 = !DILocation(line: 1224, column: 55, scope: !2615)
!2623 = !DILocation(line: 1224, column: 31, scope: !2615)
!2624 = !DILocation(line: 1224, column: 44, scope: !2615)
!2625 = !DILocation(line: 1224, column: 37, scope: !2615)
!2626 = !DILocation(line: 1224, column: 47, scope: !2615)
!2627 = !DILocation(line: 1224, column: 58, scope: !2615)
!2628 = !DILocation(line: 1224, column: 30, scope: !2615)
!2629 = !DILocation(line: 1224, column: 21, scope: !2615)
!2630 = !DILocation(line: 1223, column: 60, scope: !2631)
!2631 = !DILexicalBlockFile(scope: !2615, file: !918, discriminator: 2)
!2632 = !DILocation(line: 1223, column: 17, scope: !2631)
!2633 = distinct !{!2633, !2634}
!2634 = !DILocation(line: 1223, column: 17, scope: !2605)
!2635 = !DILocation(line: 1224, column: 63, scope: !2636)
!2636 = !DILexicalBlockFile(scope: !2611, file: !918, discriminator: 1)
!2637 = !DILocation(line: 1225, column: 36, scope: !2602)
!2638 = !DILocation(line: 1225, column: 23, scope: !2602)
!2639 = !DILocation(line: 1225, column: 29, scope: !2602)
!2640 = !DILocation(line: 1225, column: 39, scope: !2602)
!2641 = !DILocation(line: 1225, column: 22, scope: !2602)
!2642 = !DILocation(line: 1225, column: 13, scope: !2602)
!2643 = !DILocation(line: 1226, column: 36, scope: !2602)
!2644 = !DILocation(line: 1226, column: 23, scope: !2602)
!2645 = !DILocation(line: 1226, column: 29, scope: !2602)
!2646 = !DILocation(line: 1226, column: 39, scope: !2602)
!2647 = !DILocation(line: 1226, column: 22, scope: !2602)
!2648 = !DILocation(line: 1226, column: 13, scope: !2602)
!2649 = !DILocation(line: 1227, column: 36, scope: !2602)
!2650 = !DILocation(line: 1227, column: 23, scope: !2602)
!2651 = !DILocation(line: 1227, column: 29, scope: !2602)
!2652 = !DILocation(line: 1227, column: 39, scope: !2602)
!2653 = !DILocation(line: 1227, column: 22, scope: !2602)
!2654 = !DILocation(line: 1227, column: 13, scope: !2602)
!2655 = !DILocation(line: 1228, column: 9, scope: !2602)
!2656 = !DILocation(line: 1220, column: 41, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2596, file: !918, discriminator: 2)
!2658 = !DILocation(line: 1220, column: 9, scope: !2657)
!2659 = distinct !{!2659, !2660}
!2660 = !DILocation(line: 1220, column: 9, scope: !2588)
!2661 = !DILocation(line: 1228, column: 9, scope: !2662)
!2662 = !DILexicalBlockFile(scope: !2592, file: !918, discriminator: 1)
!2663 = !DILocation(line: 1229, column: 15, scope: !2521)
!2664 = !DILocation(line: 1229, column: 21, scope: !2521)
!2665 = !DILocation(line: 1229, column: 14, scope: !2521)
!2666 = !DILocation(line: 1229, column: 5, scope: !2521)
!2667 = !DILocation(line: 1231, column: 9, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2521, file: !918, line: 1231, column: 9)
!2669 = !DILocation(line: 1231, column: 15, scope: !2668)
!2670 = !DILocation(line: 1231, column: 9, scope: !2521)
!2671 = !DILocation(line: 1232, column: 16, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2668, file: !918, line: 1232, column: 9)
!2673 = !DILocation(line: 1232, column: 14, scope: !2672)
!2674 = !DILocation(line: 1232, column: 21, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !2676, file: !918, discriminator: 1)
!2676 = distinct !DILexicalBlock(scope: !2672, file: !918, line: 1232, column: 9)
!2677 = !DILocation(line: 1232, column: 25, scope: !2675)
!2678 = !DILocation(line: 1232, column: 31, scope: !2675)
!2679 = !DILocation(line: 1232, column: 23, scope: !2675)
!2680 = !DILocation(line: 1232, column: 9, scope: !2675)
!2681 = !DILocation(line: 1233, column: 38, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2676, file: !918, line: 1232, column: 47)
!2683 = !DILocation(line: 1233, column: 23, scope: !2682)
!2684 = !DILocation(line: 1233, column: 29, scope: !2682)
!2685 = !DILocation(line: 1233, column: 41, scope: !2682)
!2686 = !DILocation(line: 1233, column: 22, scope: !2682)
!2687 = !DILocation(line: 1233, column: 13, scope: !2682)
!2688 = !DILocation(line: 1234, column: 38, scope: !2682)
!2689 = !DILocation(line: 1234, column: 23, scope: !2682)
!2690 = !DILocation(line: 1234, column: 29, scope: !2682)
!2691 = !DILocation(line: 1234, column: 41, scope: !2682)
!2692 = !DILocation(line: 1234, column: 22, scope: !2682)
!2693 = !DILocation(line: 1234, column: 13, scope: !2682)
!2694 = !DILocation(line: 1235, column: 9, scope: !2682)
!2695 = !DILocation(line: 1232, column: 43, scope: !2696)
!2696 = !DILexicalBlockFile(scope: !2676, file: !918, discriminator: 2)
!2697 = !DILocation(line: 1232, column: 9, scope: !2696)
!2698 = distinct !{!2698, !2699}
!2699 = !DILocation(line: 1232, column: 9, scope: !2668)
!2700 = !DILocation(line: 1235, column: 9, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !2672, file: !918, discriminator: 1)
!2702 = !DILocation(line: 1236, column: 15, scope: !2521)
!2703 = !DILocation(line: 1236, column: 21, scope: !2521)
!2704 = !DILocation(line: 1236, column: 14, scope: !2521)
!2705 = !DILocation(line: 1236, column: 5, scope: !2521)
!2706 = !DILocation(line: 1238, column: 9, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2521, file: !918, line: 1238, column: 9)
!2708 = !DILocation(line: 1238, column: 15, scope: !2707)
!2709 = !DILocation(line: 1238, column: 9, scope: !2521)
!2710 = !DILocation(line: 1239, column: 16, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2707, file: !918, line: 1239, column: 9)
!2712 = !DILocation(line: 1239, column: 14, scope: !2711)
!2713 = !DILocation(line: 1239, column: 21, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2715, file: !918, discriminator: 1)
!2715 = distinct !DILexicalBlock(scope: !2711, file: !918, line: 1239, column: 9)
!2716 = !DILocation(line: 1239, column: 25, scope: !2714)
!2717 = !DILocation(line: 1239, column: 31, scope: !2714)
!2718 = !DILocation(line: 1239, column: 23, scope: !2714)
!2719 = !DILocation(line: 1239, column: 9, scope: !2714)
!2720 = !DILocation(line: 1240, column: 38, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2715, file: !918, line: 1239, column: 47)
!2722 = !DILocation(line: 1240, column: 23, scope: !2721)
!2723 = !DILocation(line: 1240, column: 29, scope: !2721)
!2724 = !DILocation(line: 1240, column: 41, scope: !2721)
!2725 = !DILocation(line: 1240, column: 22, scope: !2721)
!2726 = !DILocation(line: 1240, column: 13, scope: !2721)
!2727 = !DILocation(line: 1241, column: 38, scope: !2721)
!2728 = !DILocation(line: 1241, column: 23, scope: !2721)
!2729 = !DILocation(line: 1241, column: 29, scope: !2721)
!2730 = !DILocation(line: 1241, column: 41, scope: !2721)
!2731 = !DILocation(line: 1241, column: 22, scope: !2721)
!2732 = !DILocation(line: 1241, column: 13, scope: !2721)
!2733 = !DILocation(line: 1242, column: 38, scope: !2721)
!2734 = !DILocation(line: 1242, column: 23, scope: !2721)
!2735 = !DILocation(line: 1242, column: 29, scope: !2721)
!2736 = !DILocation(line: 1242, column: 41, scope: !2721)
!2737 = !DILocation(line: 1242, column: 22, scope: !2721)
!2738 = !DILocation(line: 1242, column: 13, scope: !2721)
!2739 = !DILocation(line: 1243, column: 38, scope: !2721)
!2740 = !DILocation(line: 1243, column: 23, scope: !2721)
!2741 = !DILocation(line: 1243, column: 29, scope: !2721)
!2742 = !DILocation(line: 1243, column: 41, scope: !2721)
!2743 = !DILocation(line: 1243, column: 22, scope: !2721)
!2744 = !DILocation(line: 1243, column: 13, scope: !2721)
!2745 = !DILocation(line: 1244, column: 38, scope: !2721)
!2746 = !DILocation(line: 1244, column: 23, scope: !2721)
!2747 = !DILocation(line: 1244, column: 29, scope: !2721)
!2748 = !DILocation(line: 1244, column: 41, scope: !2721)
!2749 = !DILocation(line: 1244, column: 22, scope: !2721)
!2750 = !DILocation(line: 1244, column: 13, scope: !2721)
!2751 = !DILocation(line: 1245, column: 9, scope: !2721)
!2752 = !DILocation(line: 1239, column: 43, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !2715, file: !918, discriminator: 2)
!2754 = !DILocation(line: 1239, column: 9, scope: !2753)
!2755 = distinct !{!2755, !2756}
!2756 = !DILocation(line: 1239, column: 9, scope: !2707)
!2757 = !DILocation(line: 1245, column: 9, scope: !2758)
!2758 = !DILexicalBlockFile(scope: !2711, file: !918, discriminator: 1)
!2759 = !DILocation(line: 1246, column: 15, scope: !2521)
!2760 = !DILocation(line: 1246, column: 21, scope: !2521)
!2761 = !DILocation(line: 1246, column: 14, scope: !2521)
!2762 = !DILocation(line: 1246, column: 5, scope: !2521)
!2763 = !DILocation(line: 1248, column: 15, scope: !2521)
!2764 = !DILocation(line: 1248, column: 21, scope: !2521)
!2765 = !DILocation(line: 1248, column: 14, scope: !2521)
!2766 = !DILocation(line: 1248, column: 5, scope: !2521)
!2767 = !DILocation(line: 1250, column: 15, scope: !2521)
!2768 = !DILocation(line: 1250, column: 21, scope: !2521)
!2769 = !DILocation(line: 1250, column: 14, scope: !2521)
!2770 = !DILocation(line: 1250, column: 5, scope: !2521)
!2771 = !DILocation(line: 1251, column: 15, scope: !2521)
!2772 = !DILocation(line: 1251, column: 21, scope: !2521)
!2773 = !DILocation(line: 1251, column: 14, scope: !2521)
!2774 = !DILocation(line: 1251, column: 5, scope: !2521)
!2775 = !DILocation(line: 1252, column: 15, scope: !2521)
!2776 = !DILocation(line: 1252, column: 21, scope: !2521)
!2777 = !DILocation(line: 1252, column: 14, scope: !2521)
!2778 = !DILocation(line: 1252, column: 5, scope: !2521)
!2779 = !DILocation(line: 1253, column: 15, scope: !2521)
!2780 = !DILocation(line: 1253, column: 21, scope: !2521)
!2781 = !DILocation(line: 1253, column: 14, scope: !2521)
!2782 = !DILocation(line: 1253, column: 5, scope: !2521)
!2783 = !DILocation(line: 1254, column: 15, scope: !2521)
!2784 = !DILocation(line: 1254, column: 21, scope: !2521)
!2785 = !DILocation(line: 1254, column: 14, scope: !2521)
!2786 = !DILocation(line: 1254, column: 5, scope: !2521)
!2787 = !DILocation(line: 1255, column: 15, scope: !2521)
!2788 = !DILocation(line: 1255, column: 21, scope: !2521)
!2789 = !DILocation(line: 1255, column: 14, scope: !2521)
!2790 = !DILocation(line: 1255, column: 5, scope: !2521)
!2791 = !DILocation(line: 1257, column: 18, scope: !2521)
!2792 = !DILocation(line: 1257, column: 24, scope: !2521)
!2793 = !DILocation(line: 1257, column: 5, scope: !2521)
!2794 = !DILocation(line: 1258, column: 18, scope: !2521)
!2795 = !DILocation(line: 1258, column: 24, scope: !2521)
!2796 = !DILocation(line: 1258, column: 5, scope: !2521)
!2797 = !DILocation(line: 1259, column: 24, scope: !2521)
!2798 = !DILocation(line: 1259, column: 30, scope: !2521)
!2799 = !DILocation(line: 1259, column: 5, scope: !2521)
!2800 = !DILocation(line: 1260, column: 30, scope: !2521)
!2801 = !DILocation(line: 1260, column: 36, scope: !2521)
!2802 = !DILocation(line: 1260, column: 5, scope: !2521)
!2803 = !DILocation(line: 1262, column: 15, scope: !2521)
!2804 = !DILocation(line: 1262, column: 22, scope: !2521)
!2805 = !DILocation(line: 1262, column: 14, scope: !2521)
!2806 = !DILocation(line: 1262, column: 5, scope: !2521)
!2807 = !DILocation(line: 1264, column: 5, scope: !2521)
!2808 = !DILocalVariable(name: "venc", arg: 1, scope: !1641, file: !918, line: 269, type: !1644)
!2809 = !DILocation(line: 269, column: 54, scope: !1641)
!2810 = !DILocalVariable(name: "avctx", arg: 2, scope: !1641, file: !918, line: 270, type: !1009)
!2811 = !DILocation(line: 270, column: 50, scope: !1641)
!2812 = !DILocalVariable(name: "fc", scope: !1641, file: !918, line: 272, type: !1757)
!2813 = !DILocation(line: 272, column: 23, scope: !1641)
!2814 = !DILocalVariable(name: "rc", scope: !1641, file: !918, line: 273, type: !1788)
!2815 = !DILocation(line: 273, column: 25, scope: !1641)
!2816 = !DILocalVariable(name: "mc", scope: !1641, file: !918, line: 274, type: !1806)
!2817 = !DILocation(line: 274, column: 25, scope: !1641)
!2818 = !DILocalVariable(name: "i", scope: !1641, file: !918, line: 275, type: !904)
!2819 = !DILocation(line: 275, column: 9, scope: !1641)
!2820 = !DILocalVariable(name: "book", scope: !1641, file: !918, line: 275, type: !904)
!2821 = !DILocation(line: 275, column: 12, scope: !1641)
!2822 = !DILocalVariable(name: "ret", scope: !1641, file: !918, line: 275, type: !904)
!2823 = !DILocation(line: 275, column: 18, scope: !1641)
!2824 = !DILocation(line: 277, column: 22, scope: !1641)
!2825 = !DILocation(line: 277, column: 29, scope: !1641)
!2826 = !DILocation(line: 277, column: 5, scope: !1641)
!2827 = !DILocation(line: 277, column: 11, scope: !1641)
!2828 = !DILocation(line: 277, column: 20, scope: !1641)
!2829 = !DILocation(line: 278, column: 25, scope: !1641)
!2830 = !DILocation(line: 278, column: 32, scope: !1641)
!2831 = !DILocation(line: 278, column: 5, scope: !1641)
!2832 = !DILocation(line: 278, column: 11, scope: !1641)
!2833 = !DILocation(line: 278, column: 23, scope: !1641)
!2834 = !DILocation(line: 279, column: 31, scope: !1641)
!2835 = !DILocation(line: 279, column: 37, scope: !1641)
!2836 = !DILocation(line: 279, column: 55, scope: !1641)
!2837 = !DILocation(line: 279, column: 5, scope: !1641)
!2838 = !DILocation(line: 279, column: 11, scope: !1641)
!2839 = !DILocation(line: 279, column: 29, scope: !1641)
!2840 = !DILocation(line: 281, column: 5, scope: !1641)
!2841 = !DILocation(line: 281, column: 11, scope: !1641)
!2842 = !DILocation(line: 281, column: 22, scope: !1641)
!2843 = !DILocation(line: 282, column: 63, scope: !1641)
!2844 = !DILocation(line: 282, column: 69, scope: !1641)
!2845 = !DILocation(line: 282, column: 61, scope: !1641)
!2846 = !DILocation(line: 282, column: 23, scope: !1641)
!2847 = !DILocation(line: 282, column: 5, scope: !1641)
!2848 = !DILocation(line: 282, column: 11, scope: !1641)
!2849 = !DILocation(line: 282, column: 21, scope: !1641)
!2850 = !DILocation(line: 283, column: 10, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 283, column: 9)
!2852 = !DILocation(line: 283, column: 16, scope: !2851)
!2853 = !DILocation(line: 283, column: 9, scope: !1641)
!2854 = !DILocation(line: 284, column: 9, scope: !2851)
!2855 = !DILocation(line: 289, column: 15, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 289, column: 5)
!2857 = !DILocation(line: 289, column: 10, scope: !2856)
!2858 = !DILocation(line: 289, column: 20, scope: !2859)
!2859 = !DILexicalBlockFile(scope: !2860, file: !918, discriminator: 1)
!2860 = distinct !DILexicalBlock(scope: !2856, file: !918, line: 289, column: 5)
!2861 = !DILocation(line: 289, column: 27, scope: !2859)
!2862 = !DILocation(line: 289, column: 33, scope: !2859)
!2863 = !DILocation(line: 289, column: 25, scope: !2859)
!2864 = !DILocation(line: 289, column: 5, scope: !2859)
!2865 = !DILocalVariable(name: "cb", scope: !2866, file: !918, line: 290, type: !1740)
!2866 = distinct !DILexicalBlock(scope: !2860, file: !918, line: 289, column: 53)
!2867 = !DILocation(line: 290, column: 30, scope: !2866)
!2868 = !DILocation(line: 290, column: 52, scope: !2866)
!2869 = !DILocation(line: 290, column: 36, scope: !2866)
!2870 = !DILocation(line: 290, column: 42, scope: !2866)
!2871 = !DILocalVariable(name: "vals", scope: !2866, file: !918, line: 291, type: !904)
!2872 = !DILocation(line: 291, column: 13, scope: !2866)
!2873 = !DILocation(line: 292, column: 36, scope: !2866)
!2874 = !DILocation(line: 292, column: 27, scope: !2866)
!2875 = !DILocation(line: 292, column: 42, scope: !2866)
!2876 = !DILocation(line: 292, column: 9, scope: !2866)
!2877 = !DILocation(line: 292, column: 13, scope: !2866)
!2878 = !DILocation(line: 292, column: 25, scope: !2866)
!2879 = !DILocation(line: 293, column: 33, scope: !2866)
!2880 = !DILocation(line: 293, column: 24, scope: !2866)
!2881 = !DILocation(line: 293, column: 39, scope: !2866)
!2882 = !DILocation(line: 293, column: 9, scope: !2866)
!2883 = !DILocation(line: 293, column: 13, scope: !2866)
!2884 = !DILocation(line: 293, column: 22, scope: !2866)
!2885 = !DILocation(line: 294, column: 28, scope: !2866)
!2886 = !DILocation(line: 294, column: 19, scope: !2866)
!2887 = !DILocation(line: 294, column: 34, scope: !2866)
!2888 = !DILocation(line: 294, column: 9, scope: !2866)
!2889 = !DILocation(line: 294, column: 13, scope: !2866)
!2890 = !DILocation(line: 294, column: 17, scope: !2866)
!2891 = !DILocation(line: 295, column: 30, scope: !2866)
!2892 = !DILocation(line: 295, column: 21, scope: !2866)
!2893 = !DILocation(line: 295, column: 36, scope: !2866)
!2894 = !DILocation(line: 295, column: 9, scope: !2866)
!2895 = !DILocation(line: 295, column: 13, scope: !2866)
!2896 = !DILocation(line: 295, column: 19, scope: !2866)
!2897 = !DILocation(line: 296, column: 31, scope: !2866)
!2898 = !DILocation(line: 296, column: 22, scope: !2866)
!2899 = !DILocation(line: 296, column: 37, scope: !2866)
!2900 = !DILocation(line: 296, column: 9, scope: !2866)
!2901 = !DILocation(line: 296, column: 13, scope: !2866)
!2902 = !DILocation(line: 296, column: 20, scope: !2866)
!2903 = !DILocation(line: 297, column: 9, scope: !2866)
!2904 = !DILocation(line: 297, column: 13, scope: !2866)
!2905 = !DILocation(line: 297, column: 19, scope: !2866)
!2906 = !DILocation(line: 299, column: 36, scope: !2866)
!2907 = !DILocation(line: 299, column: 40, scope: !2866)
!2908 = !DILocation(line: 299, column: 20, scope: !2866)
!2909 = !DILocation(line: 299, column: 9, scope: !2866)
!2910 = !DILocation(line: 299, column: 13, scope: !2866)
!2911 = !DILocation(line: 299, column: 18, scope: !2866)
!2912 = !DILocation(line: 300, column: 41, scope: !2866)
!2913 = !DILocation(line: 300, column: 45, scope: !2866)
!2914 = !DILocation(line: 300, column: 25, scope: !2866)
!2915 = !DILocation(line: 300, column: 9, scope: !2866)
!2916 = !DILocation(line: 300, column: 13, scope: !2866)
!2917 = !DILocation(line: 300, column: 23, scope: !2866)
!2918 = !DILocation(line: 301, column: 14, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2866, file: !918, line: 301, column: 13)
!2920 = !DILocation(line: 301, column: 18, scope: !2919)
!2921 = !DILocation(line: 301, column: 23, scope: !2919)
!2922 = !DILocation(line: 301, column: 27, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2919, file: !918, discriminator: 1)
!2924 = !DILocation(line: 301, column: 31, scope: !2923)
!2925 = !DILocation(line: 301, column: 13, scope: !2923)
!2926 = !DILocation(line: 302, column: 13, scope: !2919)
!2927 = !DILocation(line: 303, column: 16, scope: !2866)
!2928 = !DILocation(line: 303, column: 20, scope: !2866)
!2929 = !DILocation(line: 303, column: 35, scope: !2866)
!2930 = !DILocation(line: 303, column: 26, scope: !2866)
!2931 = !DILocation(line: 303, column: 41, scope: !2866)
!2932 = !DILocation(line: 303, column: 57, scope: !2866)
!2933 = !DILocation(line: 303, column: 48, scope: !2866)
!2934 = !DILocation(line: 303, column: 63, scope: !2866)
!2935 = !DILocation(line: 303, column: 9, scope: !2866)
!2936 = !DILocation(line: 304, column: 16, scope: !2866)
!2937 = !DILocation(line: 304, column: 20, scope: !2866)
!2938 = !DILocation(line: 304, column: 36, scope: !2866)
!2939 = !DILocation(line: 304, column: 27, scope: !2866)
!2940 = !DILocation(line: 304, column: 42, scope: !2866)
!2941 = !DILocation(line: 304, column: 25, scope: !2866)
!2942 = !DILocation(line: 304, column: 50, scope: !2866)
!2943 = !DILocation(line: 304, column: 54, scope: !2866)
!2944 = !DILocation(line: 304, column: 74, scope: !2866)
!2945 = !DILocation(line: 304, column: 65, scope: !2866)
!2946 = !DILocation(line: 304, column: 80, scope: !2866)
!2947 = !DILocation(line: 304, column: 63, scope: !2866)
!2948 = !DILocation(line: 304, column: 9, scope: !2866)
!2949 = !DILocation(line: 306, column: 13, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2866, file: !918, line: 306, column: 13)
!2951 = !DILocation(line: 306, column: 17, scope: !2950)
!2952 = !DILocation(line: 306, column: 13, scope: !2866)
!2953 = !DILocation(line: 307, column: 35, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2950, file: !918, line: 306, column: 25)
!2955 = !DILocation(line: 307, column: 39, scope: !2954)
!2956 = !DILocation(line: 307, column: 47, scope: !2954)
!2957 = !DILocation(line: 307, column: 51, scope: !2954)
!2958 = !DILocation(line: 307, column: 64, scope: !2954)
!2959 = !DILocation(line: 307, column: 68, scope: !2954)
!2960 = !DILocation(line: 307, column: 20, scope: !2954)
!2961 = !DILocation(line: 307, column: 18, scope: !2954)
!2962 = !DILocation(line: 308, column: 45, scope: !2954)
!2963 = !DILocation(line: 308, column: 29, scope: !2954)
!2964 = !DILocation(line: 308, column: 13, scope: !2954)
!2965 = !DILocation(line: 308, column: 17, scope: !2954)
!2966 = !DILocation(line: 308, column: 27, scope: !2954)
!2967 = !DILocation(line: 309, column: 18, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2954, file: !918, line: 309, column: 17)
!2969 = !DILocation(line: 309, column: 22, scope: !2968)
!2970 = !DILocation(line: 309, column: 17, scope: !2954)
!2971 = !DILocation(line: 310, column: 17, scope: !2968)
!2972 = !DILocation(line: 311, column: 20, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2954, file: !918, line: 311, column: 13)
!2974 = !DILocation(line: 311, column: 18, scope: !2973)
!2975 = !DILocation(line: 311, column: 25, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2977, file: !918, discriminator: 1)
!2977 = distinct !DILexicalBlock(scope: !2973, file: !918, line: 311, column: 13)
!2978 = !DILocation(line: 311, column: 29, scope: !2976)
!2979 = !DILocation(line: 311, column: 27, scope: !2976)
!2980 = !DILocation(line: 311, column: 13, scope: !2976)
!2981 = !DILocation(line: 312, column: 57, scope: !2977)
!2982 = !DILocation(line: 312, column: 36, scope: !2977)
!2983 = !DILocation(line: 312, column: 45, scope: !2977)
!2984 = !DILocation(line: 312, column: 51, scope: !2977)
!2985 = !DILocation(line: 312, column: 31, scope: !2977)
!2986 = !DILocation(line: 312, column: 17, scope: !2977)
!2987 = !DILocation(line: 312, column: 21, scope: !2977)
!2988 = !DILocation(line: 312, column: 34, scope: !2977)
!2989 = !DILocation(line: 311, column: 36, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2977, file: !918, discriminator: 2)
!2991 = !DILocation(line: 311, column: 13, scope: !2990)
!2992 = distinct !{!2992, !2993}
!2993 = !DILocation(line: 311, column: 13, scope: !2954)
!2994 = !DILocation(line: 313, column: 9, scope: !2954)
!2995 = !DILocation(line: 314, column: 13, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2950, file: !918, line: 313, column: 16)
!2997 = !DILocation(line: 314, column: 17, scope: !2996)
!2998 = !DILocation(line: 314, column: 27, scope: !2996)
!2999 = !DILocation(line: 316, column: 35, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2866, file: !918, line: 316, column: 13)
!3001 = !DILocation(line: 316, column: 20, scope: !3000)
!3002 = !DILocation(line: 316, column: 18, scope: !3000)
!3003 = !DILocation(line: 316, column: 40, scope: !3000)
!3004 = !DILocation(line: 316, column: 13, scope: !2866)
!3005 = !DILocation(line: 317, column: 20, scope: !3000)
!3006 = !DILocation(line: 317, column: 13, scope: !3000)
!3007 = !DILocation(line: 318, column: 5, scope: !2866)
!3008 = !DILocation(line: 289, column: 49, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !2860, file: !918, discriminator: 2)
!3010 = !DILocation(line: 289, column: 5, scope: !3009)
!3011 = distinct !{!3011, !3012}
!3012 = !DILocation(line: 289, column: 5, scope: !1641)
!3013 = !DILocation(line: 320, column: 5, scope: !1641)
!3014 = !DILocation(line: 320, column: 11, scope: !1641)
!3015 = !DILocation(line: 320, column: 19, scope: !1641)
!3016 = !DILocation(line: 321, column: 57, scope: !1641)
!3017 = !DILocation(line: 321, column: 63, scope: !1641)
!3018 = !DILocation(line: 321, column: 55, scope: !1641)
!3019 = !DILocation(line: 321, column: 20, scope: !1641)
!3020 = !DILocation(line: 321, column: 5, scope: !1641)
!3021 = !DILocation(line: 321, column: 11, scope: !1641)
!3022 = !DILocation(line: 321, column: 18, scope: !1641)
!3023 = !DILocation(line: 322, column: 10, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 322, column: 9)
!3025 = !DILocation(line: 322, column: 16, scope: !3024)
!3026 = !DILocation(line: 322, column: 9, scope: !1641)
!3027 = !DILocation(line: 323, column: 9, scope: !3024)
!3028 = !DILocation(line: 326, column: 11, scope: !1641)
!3029 = !DILocation(line: 326, column: 17, scope: !1641)
!3030 = !DILocation(line: 326, column: 8, scope: !1641)
!3031 = !DILocation(line: 327, column: 5, scope: !1641)
!3032 = !DILocation(line: 327, column: 9, scope: !1641)
!3033 = !DILocation(line: 327, column: 20, scope: !1641)
!3034 = !DILocation(line: 328, column: 54, scope: !1641)
!3035 = !DILocation(line: 328, column: 58, scope: !1641)
!3036 = !DILocation(line: 328, column: 52, scope: !1641)
!3037 = !DILocation(line: 328, column: 30, scope: !1641)
!3038 = !DILocation(line: 328, column: 5, scope: !1641)
!3039 = !DILocation(line: 328, column: 9, scope: !1641)
!3040 = !DILocation(line: 328, column: 28, scope: !1641)
!3041 = !DILocation(line: 329, column: 10, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 329, column: 9)
!3043 = !DILocation(line: 329, column: 14, scope: !3042)
!3044 = !DILocation(line: 329, column: 9, scope: !1641)
!3045 = !DILocation(line: 330, column: 9, scope: !3042)
!3046 = !DILocation(line: 331, column: 5, scope: !1641)
!3047 = !DILocation(line: 331, column: 9, scope: !1641)
!3048 = !DILocation(line: 331, column: 18, scope: !1641)
!3049 = !DILocation(line: 332, column: 12, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 332, column: 5)
!3051 = !DILocation(line: 332, column: 10, scope: !3050)
!3052 = !DILocation(line: 332, column: 17, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3054, file: !918, discriminator: 1)
!3054 = distinct !DILexicalBlock(scope: !3050, file: !918, line: 332, column: 5)
!3055 = !DILocation(line: 332, column: 21, scope: !3053)
!3056 = !DILocation(line: 332, column: 25, scope: !3053)
!3057 = !DILocation(line: 332, column: 19, scope: !3053)
!3058 = !DILocation(line: 332, column: 5, scope: !3053)
!3059 = !DILocation(line: 334, column: 39, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3054, file: !918, line: 332, column: 42)
!3061 = !DILocation(line: 334, column: 37, scope: !3060)
!3062 = !DILocation(line: 334, column: 32, scope: !3060)
!3063 = !DILocation(line: 334, column: 9, scope: !3060)
!3064 = !DILocation(line: 334, column: 13, scope: !3060)
!3065 = !DILocation(line: 334, column: 35, scope: !3060)
!3066 = !DILocation(line: 335, column: 26, scope: !3060)
!3067 = !DILocation(line: 335, column: 30, scope: !3060)
!3068 = !DILocation(line: 335, column: 66, scope: !3060)
!3069 = !DILocation(line: 335, column: 43, scope: !3060)
!3070 = !DILocation(line: 335, column: 47, scope: !3060)
!3071 = !DILocation(line: 335, column: 40, scope: !3060)
!3072 = !DILocation(line: 335, column: 25, scope: !3060)
!3073 = !DILocation(line: 335, column: 73, scope: !3074)
!3074 = !DILexicalBlockFile(scope: !3060, file: !918, discriminator: 1)
!3075 = !DILocation(line: 335, column: 77, scope: !3074)
!3076 = !DILocation(line: 335, column: 25, scope: !3074)
!3077 = !DILocation(line: 335, column: 113, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !3060, file: !918, discriminator: 2)
!3079 = !DILocation(line: 335, column: 90, scope: !3078)
!3080 = !DILocation(line: 335, column: 94, scope: !3078)
!3081 = !DILocation(line: 335, column: 25, scope: !3078)
!3082 = !DILocation(line: 335, column: 25, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3060, file: !918, discriminator: 3)
!3084 = !DILocation(line: 335, column: 9, scope: !3083)
!3085 = !DILocation(line: 335, column: 13, scope: !3083)
!3086 = !DILocation(line: 335, column: 22, scope: !3083)
!3087 = !DILocation(line: 336, column: 5, scope: !3060)
!3088 = !DILocation(line: 332, column: 38, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3054, file: !918, discriminator: 2)
!3090 = !DILocation(line: 332, column: 5, scope: !3089)
!3091 = distinct !{!3091, !3092}
!3092 = !DILocation(line: 332, column: 5, scope: !1641)
!3093 = !DILocation(line: 337, column: 5, scope: !1641)
!3094 = !DILocation(line: 337, column: 9, scope: !1641)
!3095 = !DILocation(line: 337, column: 17, scope: !1641)
!3096 = !DILocation(line: 338, column: 35, scope: !1641)
!3097 = !DILocation(line: 338, column: 39, scope: !1641)
!3098 = !DILocation(line: 338, column: 19, scope: !1641)
!3099 = !DILocation(line: 338, column: 5, scope: !1641)
!3100 = !DILocation(line: 338, column: 9, scope: !1641)
!3101 = !DILocation(line: 338, column: 17, scope: !1641)
!3102 = !DILocation(line: 339, column: 10, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 339, column: 9)
!3104 = !DILocation(line: 339, column: 14, scope: !3103)
!3105 = !DILocation(line: 339, column: 9, scope: !1641)
!3106 = !DILocation(line: 340, column: 9, scope: !3103)
!3107 = !DILocation(line: 341, column: 12, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 341, column: 5)
!3109 = !DILocation(line: 341, column: 10, scope: !3108)
!3110 = !DILocation(line: 341, column: 17, scope: !3111)
!3111 = !DILexicalBlockFile(scope: !3112, file: !918, discriminator: 1)
!3112 = distinct !DILexicalBlock(scope: !3108, file: !918, line: 341, column: 5)
!3113 = !DILocation(line: 341, column: 21, scope: !3111)
!3114 = !DILocation(line: 341, column: 25, scope: !3111)
!3115 = !DILocation(line: 341, column: 19, scope: !3111)
!3116 = !DILocation(line: 341, column: 5, scope: !3111)
!3117 = !DILocalVariable(name: "c", scope: !3118, file: !918, line: 342, type: !1765)
!3118 = distinct !DILexicalBlock(scope: !3112, file: !918, line: 341, column: 40)
!3119 = !DILocation(line: 342, column: 34, scope: !3118)
!3120 = !DILocation(line: 342, column: 51, scope: !3118)
!3121 = !DILocation(line: 342, column: 39, scope: !3118)
!3122 = !DILocation(line: 342, column: 43, scope: !3118)
!3123 = !DILocalVariable(name: "j", scope: !3118, file: !918, line: 343, type: !904)
!3124 = !DILocation(line: 343, column: 13, scope: !3118)
!3125 = !DILocalVariable(name: "books", scope: !3118, file: !918, line: 343, type: !904)
!3126 = !DILocation(line: 343, column: 16, scope: !3118)
!3127 = !DILocation(line: 344, column: 32, scope: !3118)
!3128 = !DILocation(line: 344, column: 18, scope: !3118)
!3129 = !DILocation(line: 344, column: 35, scope: !3118)
!3130 = !DILocation(line: 344, column: 9, scope: !3118)
!3131 = !DILocation(line: 344, column: 12, scope: !3118)
!3132 = !DILocation(line: 344, column: 16, scope: !3118)
!3133 = !DILocation(line: 345, column: 37, scope: !3118)
!3134 = !DILocation(line: 345, column: 23, scope: !3118)
!3135 = !DILocation(line: 345, column: 40, scope: !3118)
!3136 = !DILocation(line: 345, column: 9, scope: !3118)
!3137 = !DILocation(line: 345, column: 12, scope: !3118)
!3138 = !DILocation(line: 345, column: 21, scope: !3118)
!3139 = !DILocation(line: 346, column: 39, scope: !3118)
!3140 = !DILocation(line: 346, column: 25, scope: !3118)
!3141 = !DILocation(line: 346, column: 42, scope: !3118)
!3142 = !DILocation(line: 346, column: 9, scope: !3118)
!3143 = !DILocation(line: 346, column: 12, scope: !3118)
!3144 = !DILocation(line: 346, column: 23, scope: !3118)
!3145 = !DILocation(line: 347, column: 23, scope: !3118)
!3146 = !DILocation(line: 347, column: 26, scope: !3118)
!3147 = !DILocation(line: 347, column: 20, scope: !3118)
!3148 = !DILocation(line: 347, column: 15, scope: !3118)
!3149 = !DILocation(line: 348, column: 36, scope: !3118)
!3150 = !DILocation(line: 348, column: 20, scope: !3118)
!3151 = !DILocation(line: 348, column: 9, scope: !3118)
!3152 = !DILocation(line: 348, column: 12, scope: !3118)
!3153 = !DILocation(line: 348, column: 18, scope: !3118)
!3154 = !DILocation(line: 349, column: 14, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3118, file: !918, line: 349, column: 13)
!3156 = !DILocation(line: 349, column: 17, scope: !3155)
!3157 = !DILocation(line: 349, column: 13, scope: !3118)
!3158 = !DILocation(line: 350, column: 13, scope: !3155)
!3159 = !DILocation(line: 351, column: 16, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3118, file: !918, line: 351, column: 9)
!3161 = !DILocation(line: 351, column: 14, scope: !3160)
!3162 = !DILocation(line: 351, column: 21, scope: !3163)
!3163 = !DILexicalBlockFile(scope: !3164, file: !918, discriminator: 1)
!3164 = distinct !DILexicalBlock(scope: !3160, file: !918, line: 351, column: 9)
!3165 = !DILocation(line: 351, column: 25, scope: !3163)
!3166 = !DILocation(line: 351, column: 23, scope: !3163)
!3167 = !DILocation(line: 351, column: 9, scope: !3163)
!3168 = !DILocation(line: 352, column: 51, scope: !3164)
!3169 = !DILocation(line: 352, column: 27, scope: !3164)
!3170 = !DILocation(line: 352, column: 41, scope: !3164)
!3171 = !DILocation(line: 352, column: 44, scope: !3164)
!3172 = !DILocation(line: 352, column: 22, scope: !3164)
!3173 = !DILocation(line: 352, column: 13, scope: !3164)
!3174 = !DILocation(line: 352, column: 16, scope: !3164)
!3175 = !DILocation(line: 352, column: 25, scope: !3164)
!3176 = !DILocation(line: 351, column: 33, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !3164, file: !918, discriminator: 2)
!3178 = !DILocation(line: 351, column: 9, scope: !3177)
!3179 = distinct !{!3179, !3180}
!3180 = !DILocation(line: 351, column: 9, scope: !3118)
!3181 = !DILocation(line: 353, column: 5, scope: !3118)
!3182 = !DILocation(line: 341, column: 36, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3112, file: !918, discriminator: 2)
!3184 = !DILocation(line: 341, column: 5, scope: !3183)
!3185 = distinct !{!3185, !3186}
!3186 = !DILocation(line: 341, column: 5, scope: !1641)
!3187 = !DILocation(line: 354, column: 5, scope: !1641)
!3188 = !DILocation(line: 354, column: 9, scope: !1641)
!3189 = !DILocation(line: 354, column: 20, scope: !1641)
!3190 = !DILocation(line: 355, column: 21, scope: !1641)
!3191 = !DILocation(line: 355, column: 27, scope: !1641)
!3192 = !DILocation(line: 355, column: 45, scope: !1641)
!3193 = !DILocation(line: 355, column: 5, scope: !1641)
!3194 = !DILocation(line: 355, column: 9, scope: !1641)
!3195 = !DILocation(line: 355, column: 19, scope: !1641)
!3196 = !DILocation(line: 357, column: 5, scope: !1641)
!3197 = !DILocation(line: 357, column: 9, scope: !1641)
!3198 = !DILocation(line: 357, column: 16, scope: !1641)
!3199 = !DILocation(line: 358, column: 12, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 358, column: 5)
!3201 = !DILocation(line: 358, column: 10, scope: !3200)
!3202 = !DILocation(line: 358, column: 17, scope: !3203)
!3203 = !DILexicalBlockFile(scope: !3204, file: !918, discriminator: 1)
!3204 = distinct !DILexicalBlock(scope: !3200, file: !918, line: 358, column: 5)
!3205 = !DILocation(line: 358, column: 21, scope: !3203)
!3206 = !DILocation(line: 358, column: 25, scope: !3203)
!3207 = !DILocation(line: 358, column: 19, scope: !3203)
!3208 = !DILocation(line: 358, column: 5, scope: !3203)
!3209 = !DILocation(line: 359, column: 58, scope: !3204)
!3210 = !DILocation(line: 359, column: 35, scope: !3204)
!3211 = !DILocation(line: 359, column: 39, scope: !3204)
!3212 = !DILocation(line: 359, column: 23, scope: !3204)
!3213 = !DILocation(line: 359, column: 27, scope: !3204)
!3214 = !DILocation(line: 359, column: 62, scope: !3204)
!3215 = !DILocation(line: 359, column: 9, scope: !3204)
!3216 = !DILocation(line: 359, column: 13, scope: !3204)
!3217 = !DILocation(line: 359, column: 20, scope: !3204)
!3218 = !DILocation(line: 358, column: 38, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !3204, file: !918, discriminator: 2)
!3220 = !DILocation(line: 358, column: 5, scope: !3219)
!3221 = distinct !{!3221, !3222}
!3222 = !DILocation(line: 358, column: 5, scope: !1641)
!3223 = !DILocation(line: 361, column: 32, scope: !1641)
!3224 = !DILocation(line: 361, column: 36, scope: !1641)
!3225 = !DILocation(line: 361, column: 16, scope: !1641)
!3226 = !DILocation(line: 361, column: 5, scope: !1641)
!3227 = !DILocation(line: 361, column: 9, scope: !1641)
!3228 = !DILocation(line: 361, column: 14, scope: !1641)
!3229 = !DILocation(line: 362, column: 10, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 362, column: 9)
!3231 = !DILocation(line: 362, column: 14, scope: !3230)
!3232 = !DILocation(line: 362, column: 9, scope: !1641)
!3233 = !DILocation(line: 363, column: 9, scope: !3230)
!3234 = !DILocation(line: 364, column: 5, scope: !1641)
!3235 = !DILocation(line: 364, column: 9, scope: !1641)
!3236 = !DILocation(line: 364, column: 17, scope: !1641)
!3237 = !DILocation(line: 364, column: 19, scope: !1641)
!3238 = !DILocation(line: 365, column: 26, scope: !1641)
!3239 = !DILocation(line: 365, column: 30, scope: !1641)
!3240 = !DILocation(line: 365, column: 23, scope: !1641)
!3241 = !DILocation(line: 365, column: 21, scope: !1641)
!3242 = !DILocation(line: 365, column: 5, scope: !1641)
!3243 = !DILocation(line: 365, column: 9, scope: !1641)
!3244 = !DILocation(line: 365, column: 17, scope: !1641)
!3245 = !DILocation(line: 365, column: 19, scope: !1641)
!3246 = !DILocation(line: 366, column: 12, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 366, column: 5)
!3248 = !DILocation(line: 366, column: 10, scope: !3247)
!3249 = !DILocation(line: 366, column: 17, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3251, file: !918, discriminator: 1)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !918, line: 366, column: 5)
!3252 = !DILocation(line: 366, column: 21, scope: !3250)
!3253 = !DILocation(line: 366, column: 25, scope: !3250)
!3254 = !DILocation(line: 366, column: 19, scope: !3250)
!3255 = !DILocation(line: 366, column: 5, scope: !3250)
!3256 = !DILocation(line: 372, column: 27, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3251, file: !918, line: 366, column: 38)
!3258 = !DILocation(line: 372, column: 29, scope: !3257)
!3259 = !DILocation(line: 372, column: 25, scope: !3257)
!3260 = !DILocation(line: 372, column: 18, scope: !3257)
!3261 = !DILocation(line: 372, column: 9, scope: !3257)
!3262 = !DILocation(line: 372, column: 13, scope: !3257)
!3263 = !DILocation(line: 372, column: 21, scope: !3257)
!3264 = !DILocation(line: 372, column: 23, scope: !3257)
!3265 = !DILocation(line: 373, column: 5, scope: !3257)
!3266 = !DILocation(line: 366, column: 34, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3251, file: !918, discriminator: 2)
!3268 = !DILocation(line: 366, column: 5, scope: !3267)
!3269 = distinct !{!3269, !3270}
!3270 = !DILocation(line: 366, column: 5, scope: !1641)
!3271 = !DILocation(line: 374, column: 37, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 374, column: 9)
!3273 = !DILocation(line: 374, column: 44, scope: !3272)
!3274 = !DILocation(line: 374, column: 48, scope: !3272)
!3275 = !DILocation(line: 374, column: 54, scope: !3272)
!3276 = !DILocation(line: 374, column: 58, scope: !3272)
!3277 = !DILocation(line: 374, column: 9, scope: !3272)
!3278 = !DILocation(line: 374, column: 9, scope: !1641)
!3279 = !DILocation(line: 375, column: 9, scope: !3272)
!3280 = !DILocation(line: 377, column: 5, scope: !1641)
!3281 = !DILocation(line: 377, column: 11, scope: !1641)
!3282 = !DILocation(line: 377, column: 21, scope: !1641)
!3283 = !DILocation(line: 378, column: 61, scope: !1641)
!3284 = !DILocation(line: 378, column: 67, scope: !1641)
!3285 = !DILocation(line: 378, column: 59, scope: !1641)
!3286 = !DILocation(line: 378, column: 22, scope: !1641)
!3287 = !DILocation(line: 378, column: 5, scope: !1641)
!3288 = !DILocation(line: 378, column: 11, scope: !1641)
!3289 = !DILocation(line: 378, column: 20, scope: !1641)
!3290 = !DILocation(line: 379, column: 10, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 379, column: 9)
!3292 = !DILocation(line: 379, column: 16, scope: !3291)
!3293 = !DILocation(line: 379, column: 9, scope: !1641)
!3294 = !DILocation(line: 380, column: 9, scope: !3291)
!3295 = !DILocation(line: 383, column: 11, scope: !1641)
!3296 = !DILocation(line: 383, column: 17, scope: !1641)
!3297 = !DILocation(line: 383, column: 8, scope: !1641)
!3298 = !DILocation(line: 384, column: 5, scope: !1641)
!3299 = !DILocation(line: 384, column: 9, scope: !1641)
!3300 = !DILocation(line: 384, column: 14, scope: !1641)
!3301 = !DILocation(line: 385, column: 5, scope: !1641)
!3302 = !DILocation(line: 385, column: 9, scope: !1641)
!3303 = !DILocation(line: 385, column: 15, scope: !1641)
!3304 = !DILocation(line: 386, column: 5, scope: !1641)
!3305 = !DILocation(line: 386, column: 9, scope: !1641)
!3306 = !DILocation(line: 386, column: 13, scope: !1641)
!3307 = !DILocation(line: 387, column: 5, scope: !1641)
!3308 = !DILocation(line: 387, column: 9, scope: !1641)
!3309 = !DILocation(line: 387, column: 24, scope: !1641)
!3310 = !DILocation(line: 388, column: 5, scope: !1641)
!3311 = !DILocation(line: 388, column: 9, scope: !1641)
!3312 = !DILocation(line: 388, column: 25, scope: !1641)
!3313 = !DILocation(line: 389, column: 5, scope: !1641)
!3314 = !DILocation(line: 389, column: 9, scope: !1641)
!3315 = !DILocation(line: 389, column: 19, scope: !1641)
!3316 = !DILocation(line: 390, column: 48, scope: !1641)
!3317 = !DILocation(line: 390, column: 52, scope: !1641)
!3318 = !DILocation(line: 390, column: 46, scope: !1641)
!3319 = !DILocation(line: 390, column: 17, scope: !1641)
!3320 = !DILocation(line: 390, column: 5, scope: !1641)
!3321 = !DILocation(line: 390, column: 9, scope: !1641)
!3322 = !DILocation(line: 390, column: 15, scope: !1641)
!3323 = !DILocation(line: 391, column: 10, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 391, column: 9)
!3325 = !DILocation(line: 391, column: 14, scope: !3324)
!3326 = !DILocation(line: 391, column: 9, scope: !1641)
!3327 = !DILocation(line: 392, column: 9, scope: !3324)
!3328 = !DILocation(line: 406, column: 16, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 393, column: 5)
!3330 = !DILocation(line: 406, column: 20, scope: !3329)
!3331 = !DILocation(line: 406, column: 9, scope: !3329)
!3332 = !DILocation(line: 408, column: 30, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 408, column: 9)
!3334 = !DILocation(line: 408, column: 34, scope: !3333)
!3335 = !DILocation(line: 408, column: 16, scope: !3333)
!3336 = !DILocation(line: 408, column: 14, scope: !3333)
!3337 = !DILocation(line: 408, column: 41, scope: !3333)
!3338 = !DILocation(line: 408, column: 9, scope: !1641)
!3339 = !DILocation(line: 409, column: 16, scope: !3333)
!3340 = !DILocation(line: 409, column: 9, scope: !3333)
!3341 = !DILocation(line: 411, column: 5, scope: !1641)
!3342 = !DILocation(line: 411, column: 11, scope: !1641)
!3343 = !DILocation(line: 411, column: 21, scope: !1641)
!3344 = !DILocation(line: 412, column: 61, scope: !1641)
!3345 = !DILocation(line: 412, column: 67, scope: !1641)
!3346 = !DILocation(line: 412, column: 59, scope: !1641)
!3347 = !DILocation(line: 412, column: 22, scope: !1641)
!3348 = !DILocation(line: 412, column: 5, scope: !1641)
!3349 = !DILocation(line: 412, column: 11, scope: !1641)
!3350 = !DILocation(line: 412, column: 20, scope: !1641)
!3351 = !DILocation(line: 413, column: 10, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 413, column: 9)
!3353 = !DILocation(line: 413, column: 16, scope: !3352)
!3354 = !DILocation(line: 413, column: 9, scope: !1641)
!3355 = !DILocation(line: 414, column: 9, scope: !3352)
!3356 = !DILocation(line: 417, column: 11, scope: !1641)
!3357 = !DILocation(line: 417, column: 17, scope: !1641)
!3358 = !DILocation(line: 417, column: 8, scope: !1641)
!3359 = !DILocation(line: 418, column: 5, scope: !1641)
!3360 = !DILocation(line: 418, column: 9, scope: !1641)
!3361 = !DILocation(line: 418, column: 17, scope: !1641)
!3362 = !DILocation(line: 419, column: 39, scope: !1641)
!3363 = !DILocation(line: 419, column: 45, scope: !1641)
!3364 = !DILocation(line: 419, column: 37, scope: !1641)
!3365 = !DILocation(line: 419, column: 15, scope: !1641)
!3366 = !DILocation(line: 419, column: 5, scope: !1641)
!3367 = !DILocation(line: 419, column: 9, scope: !1641)
!3368 = !DILocation(line: 419, column: 13, scope: !1641)
!3369 = !DILocation(line: 420, column: 10, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 420, column: 9)
!3371 = !DILocation(line: 420, column: 14, scope: !3370)
!3372 = !DILocation(line: 420, column: 9, scope: !1641)
!3373 = !DILocation(line: 421, column: 9, scope: !3370)
!3374 = !DILocation(line: 422, column: 12, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 422, column: 5)
!3376 = !DILocation(line: 422, column: 10, scope: !3375)
!3377 = !DILocation(line: 422, column: 17, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !3379, file: !918, discriminator: 1)
!3379 = distinct !DILexicalBlock(scope: !3375, file: !918, line: 422, column: 5)
!3380 = !DILocation(line: 422, column: 21, scope: !3378)
!3381 = !DILocation(line: 422, column: 27, scope: !3378)
!3382 = !DILocation(line: 422, column: 19, scope: !3378)
!3383 = !DILocation(line: 422, column: 5, scope: !3378)
!3384 = !DILocation(line: 423, column: 17, scope: !3379)
!3385 = !DILocation(line: 423, column: 9, scope: !3379)
!3386 = !DILocation(line: 423, column: 13, scope: !3379)
!3387 = !DILocation(line: 423, column: 20, scope: !3379)
!3388 = !DILocation(line: 422, column: 38, scope: !3389)
!3389 = !DILexicalBlockFile(scope: !3379, file: !918, discriminator: 2)
!3390 = !DILocation(line: 422, column: 5, scope: !3389)
!3391 = distinct !{!3391, !3392}
!3392 = !DILocation(line: 422, column: 5, scope: !1641)
!3393 = !DILocation(line: 424, column: 41, scope: !1641)
!3394 = !DILocation(line: 424, column: 45, scope: !1641)
!3395 = !DILocation(line: 424, column: 39, scope: !1641)
!3396 = !DILocation(line: 424, column: 17, scope: !1641)
!3397 = !DILocation(line: 424, column: 5, scope: !1641)
!3398 = !DILocation(line: 424, column: 9, scope: !1641)
!3399 = !DILocation(line: 424, column: 15, scope: !1641)
!3400 = !DILocation(line: 425, column: 43, scope: !1641)
!3401 = !DILocation(line: 425, column: 47, scope: !1641)
!3402 = !DILocation(line: 425, column: 41, scope: !1641)
!3403 = !DILocation(line: 425, column: 19, scope: !1641)
!3404 = !DILocation(line: 425, column: 5, scope: !1641)
!3405 = !DILocation(line: 425, column: 9, scope: !1641)
!3406 = !DILocation(line: 425, column: 17, scope: !1641)
!3407 = !DILocation(line: 426, column: 10, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 426, column: 9)
!3409 = !DILocation(line: 426, column: 14, scope: !3408)
!3410 = !DILocation(line: 426, column: 20, scope: !3408)
!3411 = !DILocation(line: 426, column: 24, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3408, file: !918, discriminator: 1)
!3413 = !DILocation(line: 426, column: 28, scope: !3412)
!3414 = !DILocation(line: 426, column: 9, scope: !3412)
!3415 = !DILocation(line: 427, column: 9, scope: !3408)
!3416 = !DILocation(line: 428, column: 12, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 428, column: 5)
!3418 = !DILocation(line: 428, column: 10, scope: !3417)
!3419 = !DILocation(line: 428, column: 17, scope: !3420)
!3420 = !DILexicalBlockFile(scope: !3421, file: !918, discriminator: 1)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !918, line: 428, column: 5)
!3422 = !DILocation(line: 428, column: 21, scope: !3420)
!3423 = !DILocation(line: 428, column: 25, scope: !3420)
!3424 = !DILocation(line: 428, column: 19, scope: !3420)
!3425 = !DILocation(line: 428, column: 5, scope: !3420)
!3426 = !DILocation(line: 429, column: 19, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3421, file: !918, line: 428, column: 39)
!3428 = !DILocation(line: 429, column: 9, scope: !3427)
!3429 = !DILocation(line: 429, column: 13, scope: !3427)
!3430 = !DILocation(line: 429, column: 22, scope: !3427)
!3431 = !DILocation(line: 430, column: 21, scope: !3427)
!3432 = !DILocation(line: 430, column: 9, scope: !3427)
!3433 = !DILocation(line: 430, column: 13, scope: !3427)
!3434 = !DILocation(line: 430, column: 24, scope: !3427)
!3435 = !DILocation(line: 431, column: 5, scope: !3427)
!3436 = !DILocation(line: 428, column: 35, scope: !3437)
!3437 = !DILexicalBlockFile(scope: !3421, file: !918, discriminator: 2)
!3438 = !DILocation(line: 428, column: 5, scope: !3437)
!3439 = distinct !{!3439, !3440}
!3440 = !DILocation(line: 428, column: 5, scope: !1641)
!3441 = !DILocation(line: 432, column: 26, scope: !1641)
!3442 = !DILocation(line: 432, column: 32, scope: !1641)
!3443 = !DILocation(line: 432, column: 41, scope: !1641)
!3444 = !DILocation(line: 432, column: 5, scope: !1641)
!3445 = !DILocation(line: 432, column: 9, scope: !1641)
!3446 = !DILocation(line: 432, column: 24, scope: !1641)
!3447 = !DILocation(line: 433, column: 45, scope: !1641)
!3448 = !DILocation(line: 433, column: 49, scope: !1641)
!3449 = !DILocation(line: 433, column: 43, scope: !1641)
!3450 = !DILocation(line: 433, column: 21, scope: !1641)
!3451 = !DILocation(line: 433, column: 5, scope: !1641)
!3452 = !DILocation(line: 433, column: 9, scope: !1641)
!3453 = !DILocation(line: 433, column: 19, scope: !1641)
!3454 = !DILocation(line: 434, column: 41, scope: !1641)
!3455 = !DILocation(line: 434, column: 45, scope: !1641)
!3456 = !DILocation(line: 434, column: 39, scope: !1641)
!3457 = !DILocation(line: 434, column: 17, scope: !1641)
!3458 = !DILocation(line: 434, column: 5, scope: !1641)
!3459 = !DILocation(line: 434, column: 9, scope: !1641)
!3460 = !DILocation(line: 434, column: 15, scope: !1641)
!3461 = !DILocation(line: 435, column: 10, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 435, column: 9)
!3463 = !DILocation(line: 435, column: 14, scope: !3462)
!3464 = !DILocation(line: 435, column: 24, scope: !3462)
!3465 = !DILocation(line: 435, column: 28, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3462, file: !918, discriminator: 1)
!3467 = !DILocation(line: 435, column: 32, scope: !3466)
!3468 = !DILocation(line: 435, column: 9, scope: !3466)
!3469 = !DILocation(line: 436, column: 9, scope: !3462)
!3470 = !DILocation(line: 437, column: 9, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 437, column: 9)
!3472 = !DILocation(line: 437, column: 13, scope: !3471)
!3473 = !DILocation(line: 437, column: 9, scope: !1641)
!3474 = !DILocation(line: 438, column: 9, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3471, file: !918, line: 437, column: 29)
!3476 = !DILocation(line: 438, column: 13, scope: !3475)
!3477 = !DILocation(line: 438, column: 26, scope: !3475)
!3478 = !DILocation(line: 439, column: 9, scope: !3475)
!3479 = !DILocation(line: 439, column: 13, scope: !3475)
!3480 = !DILocation(line: 439, column: 22, scope: !3475)
!3481 = !DILocation(line: 440, column: 5, scope: !3475)
!3482 = !DILocation(line: 442, column: 5, scope: !1641)
!3483 = !DILocation(line: 442, column: 11, scope: !1641)
!3484 = !DILocation(line: 442, column: 18, scope: !1641)
!3485 = !DILocation(line: 443, column: 55, scope: !1641)
!3486 = !DILocation(line: 443, column: 61, scope: !1641)
!3487 = !DILocation(line: 443, column: 53, scope: !1641)
!3488 = !DILocation(line: 443, column: 19, scope: !1641)
!3489 = !DILocation(line: 443, column: 5, scope: !1641)
!3490 = !DILocation(line: 443, column: 11, scope: !1641)
!3491 = !DILocation(line: 443, column: 17, scope: !1641)
!3492 = !DILocation(line: 444, column: 10, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 444, column: 9)
!3494 = !DILocation(line: 444, column: 16, scope: !3493)
!3495 = !DILocation(line: 444, column: 9, scope: !1641)
!3496 = !DILocation(line: 445, column: 9, scope: !3493)
!3497 = !DILocation(line: 448, column: 5, scope: !1641)
!3498 = !DILocation(line: 448, column: 11, scope: !1641)
!3499 = !DILocation(line: 448, column: 20, scope: !1641)
!3500 = !DILocation(line: 448, column: 30, scope: !1641)
!3501 = !DILocation(line: 449, column: 5, scope: !1641)
!3502 = !DILocation(line: 449, column: 11, scope: !1641)
!3503 = !DILocation(line: 449, column: 20, scope: !1641)
!3504 = !DILocation(line: 449, column: 28, scope: !1641)
!3505 = !DILocation(line: 451, column: 5, scope: !1641)
!3506 = !DILocation(line: 451, column: 11, scope: !1641)
!3507 = !DILocation(line: 451, column: 20, scope: !1641)
!3508 = !DILocation(line: 451, column: 30, scope: !1641)
!3509 = !DILocation(line: 452, column: 5, scope: !1641)
!3510 = !DILocation(line: 452, column: 11, scope: !1641)
!3511 = !DILocation(line: 452, column: 20, scope: !1641)
!3512 = !DILocation(line: 452, column: 28, scope: !1641)
!3513 = !DILocation(line: 454, column: 5, scope: !1641)
!3514 = !DILocation(line: 454, column: 11, scope: !1641)
!3515 = !DILocation(line: 454, column: 22, scope: !1641)
!3516 = !DILocation(line: 455, column: 51, scope: !1641)
!3517 = !DILocation(line: 455, column: 57, scope: !1641)
!3518 = !DILocation(line: 455, column: 49, scope: !1641)
!3519 = !DILocation(line: 455, column: 73, scope: !1641)
!3520 = !DILocation(line: 455, column: 79, scope: !1641)
!3521 = !DILocation(line: 455, column: 70, scope: !1641)
!3522 = !DILocation(line: 455, column: 98, scope: !1641)
!3523 = !DILocation(line: 455, column: 67, scope: !1641)
!3524 = !DILocation(line: 455, column: 19, scope: !1641)
!3525 = !DILocation(line: 455, column: 5, scope: !1641)
!3526 = !DILocation(line: 455, column: 11, scope: !1641)
!3527 = !DILocation(line: 455, column: 17, scope: !1641)
!3528 = !DILocation(line: 456, column: 53, scope: !1641)
!3529 = !DILocation(line: 456, column: 59, scope: !1641)
!3530 = !DILocation(line: 456, column: 51, scope: !1641)
!3531 = !DILocation(line: 456, column: 75, scope: !1641)
!3532 = !DILocation(line: 456, column: 81, scope: !1641)
!3533 = !DILocation(line: 456, column: 72, scope: !1641)
!3534 = !DILocation(line: 456, column: 69, scope: !1641)
!3535 = !DILocation(line: 456, column: 21, scope: !1641)
!3536 = !DILocation(line: 456, column: 5, scope: !1641)
!3537 = !DILocation(line: 456, column: 11, scope: !1641)
!3538 = !DILocation(line: 456, column: 19, scope: !1641)
!3539 = !DILocation(line: 457, column: 51, scope: !1641)
!3540 = !DILocation(line: 457, column: 57, scope: !1641)
!3541 = !DILocation(line: 457, column: 49, scope: !1641)
!3542 = !DILocation(line: 457, column: 73, scope: !1641)
!3543 = !DILocation(line: 457, column: 79, scope: !1641)
!3544 = !DILocation(line: 457, column: 70, scope: !1641)
!3545 = !DILocation(line: 457, column: 98, scope: !1641)
!3546 = !DILocation(line: 457, column: 67, scope: !1641)
!3547 = !DILocation(line: 457, column: 19, scope: !1641)
!3548 = !DILocation(line: 457, column: 5, scope: !1641)
!3549 = !DILocation(line: 457, column: 11, scope: !1641)
!3550 = !DILocation(line: 457, column: 17, scope: !1641)
!3551 = !DILocation(line: 458, column: 52, scope: !1641)
!3552 = !DILocation(line: 458, column: 58, scope: !1641)
!3553 = !DILocation(line: 458, column: 50, scope: !1641)
!3554 = !DILocation(line: 458, column: 74, scope: !1641)
!3555 = !DILocation(line: 458, column: 80, scope: !1641)
!3556 = !DILocation(line: 458, column: 71, scope: !1641)
!3557 = !DILocation(line: 458, column: 99, scope: !1641)
!3558 = !DILocation(line: 458, column: 68, scope: !1641)
!3559 = !DILocation(line: 458, column: 20, scope: !1641)
!3560 = !DILocation(line: 458, column: 5, scope: !1641)
!3561 = !DILocation(line: 458, column: 11, scope: !1641)
!3562 = !DILocation(line: 458, column: 18, scope: !1641)
!3563 = !DILocation(line: 459, column: 53, scope: !1641)
!3564 = !DILocation(line: 459, column: 59, scope: !1641)
!3565 = !DILocation(line: 459, column: 51, scope: !1641)
!3566 = !DILocation(line: 459, column: 75, scope: !1641)
!3567 = !DILocation(line: 459, column: 81, scope: !1641)
!3568 = !DILocation(line: 459, column: 72, scope: !1641)
!3569 = !DILocation(line: 459, column: 69, scope: !1641)
!3570 = !DILocation(line: 459, column: 21, scope: !1641)
!3571 = !DILocation(line: 459, column: 5, scope: !1641)
!3572 = !DILocation(line: 459, column: 11, scope: !1641)
!3573 = !DILocation(line: 459, column: 19, scope: !1641)
!3574 = !DILocation(line: 461, column: 10, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 461, column: 9)
!3576 = !DILocation(line: 461, column: 16, scope: !3575)
!3577 = !DILocation(line: 461, column: 22, scope: !3575)
!3578 = !DILocation(line: 461, column: 26, scope: !3579)
!3579 = !DILexicalBlockFile(scope: !3575, file: !918, discriminator: 1)
!3580 = !DILocation(line: 461, column: 32, scope: !3579)
!3581 = !DILocation(line: 461, column: 40, scope: !3579)
!3582 = !DILocation(line: 461, column: 44, scope: !3583)
!3583 = !DILexicalBlockFile(scope: !3575, file: !918, discriminator: 2)
!3584 = !DILocation(line: 461, column: 50, scope: !3583)
!3585 = !DILocation(line: 461, column: 56, scope: !3583)
!3586 = !DILocation(line: 461, column: 60, scope: !3587)
!3587 = !DILexicalBlockFile(scope: !3575, file: !918, discriminator: 3)
!3588 = !DILocation(line: 461, column: 66, scope: !3587)
!3589 = !DILocation(line: 461, column: 73, scope: !3587)
!3590 = !DILocation(line: 461, column: 77, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3575, file: !918, discriminator: 4)
!3592 = !DILocation(line: 461, column: 83, scope: !3591)
!3593 = !DILocation(line: 461, column: 9, scope: !3591)
!3594 = !DILocation(line: 462, column: 9, scope: !3575)
!3595 = !DILocation(line: 464, column: 25, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !1641, file: !918, line: 464, column: 9)
!3597 = !DILocation(line: 464, column: 32, scope: !3596)
!3598 = !DILocation(line: 464, column: 16, scope: !3596)
!3599 = !DILocation(line: 464, column: 14, scope: !3596)
!3600 = !DILocation(line: 464, column: 39, scope: !3596)
!3601 = !DILocation(line: 464, column: 9, scope: !1641)
!3602 = !DILocation(line: 465, column: 16, scope: !3596)
!3603 = !DILocation(line: 465, column: 9, scope: !3596)
!3604 = !DILocation(line: 467, column: 5, scope: !1641)
!3605 = !DILocation(line: 468, column: 1, scope: !1641)
!3606 = distinct !DISubprogram(name: "put_main_header", scope: !918, file: !918, line: 614, type: !3607, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{!904, !1644, !899}
!3609 = !DILocalVariable(name: "venc", arg: 1, scope: !3606, file: !918, line: 614, type: !1644)
!3610 = !DILocation(line: 614, column: 48, scope: !3606)
!3611 = !DILocalVariable(name: "out", arg: 2, scope: !3606, file: !918, line: 614, type: !899)
!3612 = !DILocation(line: 614, column: 64, scope: !3606)
!3613 = !DILocalVariable(name: "i", scope: !3606, file: !918, line: 616, type: !904)
!3614 = !DILocation(line: 616, column: 9, scope: !3606)
!3615 = !DILocalVariable(name: "pb", scope: !3606, file: !918, line: 617, type: !2101)
!3616 = !DILocation(line: 617, column: 19, scope: !3606)
!3617 = !DILocalVariable(name: "len", scope: !3606, file: !918, line: 618, type: !904)
!3618 = !DILocation(line: 618, column: 9, scope: !3606)
!3619 = !DILocalVariable(name: "hlens", scope: !3606, file: !918, line: 618, type: !3620)
!3620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 96, align: 32, elements: !3621)
!3621 = !{!3622}
!3622 = !DISubrange(count: 3)
!3623 = !DILocation(line: 618, column: 14, scope: !3606)
!3624 = !DILocalVariable(name: "buffer_len", scope: !3606, file: !918, line: 619, type: !904)
!3625 = !DILocation(line: 619, column: 9, scope: !3606)
!3626 = !DILocalVariable(name: "buffer", scope: !3606, file: !918, line: 620, type: !900)
!3627 = !DILocation(line: 620, column: 14, scope: !3606)
!3628 = !DILocation(line: 620, column: 34, scope: !3606)
!3629 = !DILocation(line: 620, column: 23, scope: !3606)
!3630 = !DILocalVariable(name: "p", scope: !3606, file: !918, line: 620, type: !900)
!3631 = !DILocation(line: 620, column: 48, scope: !3606)
!3632 = !DILocation(line: 620, column: 52, scope: !3606)
!3633 = !DILocation(line: 621, column: 10, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 621, column: 9)
!3635 = !DILocation(line: 621, column: 9, scope: !3606)
!3636 = !DILocation(line: 622, column: 9, scope: !3634)
!3637 = !DILocation(line: 625, column: 24, scope: !3606)
!3638 = !DILocation(line: 625, column: 27, scope: !3606)
!3639 = !DILocation(line: 625, column: 5, scope: !3606)
!3640 = !DILocation(line: 626, column: 5, scope: !3606)
!3641 = !DILocation(line: 627, column: 12, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 627, column: 5)
!3643 = !DILocation(line: 627, column: 10, scope: !3642)
!3644 = !DILocation(line: 627, column: 26, scope: !3645)
!3645 = !DILexicalBlockFile(scope: !3646, file: !918, discriminator: 1)
!3646 = distinct !DILexicalBlock(scope: !3642, file: !918, line: 627, column: 5)
!3647 = !DILocation(line: 627, column: 17, scope: !3645)
!3648 = !DILocation(line: 627, column: 5, scope: !3645)
!3649 = !DILocation(line: 628, column: 35, scope: !3646)
!3650 = !DILocation(line: 628, column: 26, scope: !3646)
!3651 = !DILocation(line: 628, column: 9, scope: !3646)
!3652 = !DILocation(line: 627, column: 31, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3646, file: !918, discriminator: 2)
!3654 = !DILocation(line: 627, column: 5, scope: !3653)
!3655 = distinct !{!3655, !3656}
!3656 = !DILocation(line: 627, column: 5, scope: !3606)
!3657 = !DILocation(line: 629, column: 5, scope: !3606)
!3658 = !DILocation(line: 630, column: 22, scope: !3606)
!3659 = !DILocation(line: 630, column: 28, scope: !3606)
!3660 = !DILocation(line: 630, column: 5, scope: !3606)
!3661 = !DILocation(line: 631, column: 21, scope: !3606)
!3662 = !DILocation(line: 631, column: 27, scope: !3606)
!3663 = !DILocation(line: 631, column: 5, scope: !3606)
!3664 = !DILocation(line: 632, column: 5, scope: !3606)
!3665 = !DILocation(line: 633, column: 5, scope: !3606)
!3666 = !DILocation(line: 634, column: 5, scope: !3606)
!3667 = !DILocation(line: 635, column: 22, scope: !3606)
!3668 = !DILocation(line: 635, column: 28, scope: !3606)
!3669 = !DILocation(line: 635, column: 5, scope: !3606)
!3670 = !DILocation(line: 636, column: 22, scope: !3606)
!3671 = !DILocation(line: 636, column: 28, scope: !3606)
!3672 = !DILocation(line: 636, column: 5, scope: !3606)
!3673 = !DILocation(line: 637, column: 5, scope: !3606)
!3674 = !DILocation(line: 639, column: 5, scope: !3606)
!3675 = !DILocation(line: 640, column: 16, scope: !3606)
!3676 = !DILocation(line: 640, column: 36, scope: !3606)
!3677 = !DILocation(line: 640, column: 5, scope: !3606)
!3678 = !DILocation(line: 640, column: 14, scope: !3606)
!3679 = !DILocation(line: 641, column: 19, scope: !3606)
!3680 = !DILocation(line: 641, column: 16, scope: !3606)
!3681 = !DILocation(line: 642, column: 10, scope: !3606)
!3682 = !DILocation(line: 642, column: 7, scope: !3606)
!3683 = !DILocation(line: 645, column: 24, scope: !3606)
!3684 = !DILocation(line: 645, column: 27, scope: !3606)
!3685 = !DILocation(line: 645, column: 5, scope: !3606)
!3686 = !DILocation(line: 646, column: 5, scope: !3606)
!3687 = !DILocation(line: 647, column: 12, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 647, column: 5)
!3689 = !DILocation(line: 647, column: 10, scope: !3688)
!3690 = !DILocation(line: 647, column: 26, scope: !3691)
!3691 = !DILexicalBlockFile(scope: !3692, file: !918, discriminator: 1)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !918, line: 647, column: 5)
!3693 = !DILocation(line: 647, column: 17, scope: !3691)
!3694 = !DILocation(line: 647, column: 5, scope: !3691)
!3695 = !DILocation(line: 648, column: 35, scope: !3692)
!3696 = !DILocation(line: 648, column: 26, scope: !3692)
!3697 = !DILocation(line: 648, column: 9, scope: !3692)
!3698 = !DILocation(line: 647, column: 31, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3692, file: !918, discriminator: 2)
!3700 = !DILocation(line: 647, column: 5, scope: !3699)
!3701 = distinct !{!3701, !3702}
!3702 = !DILocation(line: 647, column: 5, scope: !3606)
!3703 = !DILocation(line: 649, column: 5, scope: !3606)
!3704 = !DILocation(line: 650, column: 5, scope: !3606)
!3705 = !DILocation(line: 651, column: 5, scope: !3606)
!3706 = !DILocation(line: 653, column: 5, scope: !3606)
!3707 = !DILocation(line: 654, column: 16, scope: !3606)
!3708 = !DILocation(line: 654, column: 36, scope: !3606)
!3709 = !DILocation(line: 654, column: 5, scope: !3606)
!3710 = !DILocation(line: 654, column: 14, scope: !3606)
!3711 = !DILocation(line: 655, column: 19, scope: !3606)
!3712 = !DILocation(line: 655, column: 16, scope: !3606)
!3713 = !DILocation(line: 656, column: 10, scope: !3606)
!3714 = !DILocation(line: 656, column: 7, scope: !3606)
!3715 = !DILocation(line: 659, column: 24, scope: !3606)
!3716 = !DILocation(line: 659, column: 27, scope: !3606)
!3717 = !DILocation(line: 659, column: 5, scope: !3606)
!3718 = !DILocation(line: 660, column: 5, scope: !3606)
!3719 = !DILocation(line: 661, column: 12, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 661, column: 5)
!3721 = !DILocation(line: 661, column: 10, scope: !3720)
!3722 = !DILocation(line: 661, column: 26, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3724, file: !918, discriminator: 1)
!3724 = distinct !DILexicalBlock(scope: !3720, file: !918, line: 661, column: 5)
!3725 = !DILocation(line: 661, column: 17, scope: !3723)
!3726 = !DILocation(line: 661, column: 5, scope: !3723)
!3727 = !DILocation(line: 662, column: 35, scope: !3724)
!3728 = !DILocation(line: 662, column: 26, scope: !3724)
!3729 = !DILocation(line: 662, column: 9, scope: !3724)
!3730 = !DILocation(line: 661, column: 31, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3724, file: !918, discriminator: 2)
!3732 = !DILocation(line: 661, column: 5, scope: !3731)
!3733 = distinct !{!3733, !3734}
!3734 = !DILocation(line: 661, column: 5, scope: !3606)
!3735 = !DILocation(line: 665, column: 22, scope: !3606)
!3736 = !DILocation(line: 665, column: 28, scope: !3606)
!3737 = !DILocation(line: 665, column: 39, scope: !3606)
!3738 = !DILocation(line: 665, column: 5, scope: !3606)
!3739 = !DILocation(line: 666, column: 12, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 666, column: 5)
!3741 = !DILocation(line: 666, column: 10, scope: !3740)
!3742 = !DILocation(line: 666, column: 17, scope: !3743)
!3743 = !DILexicalBlockFile(scope: !3744, file: !918, discriminator: 1)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !918, line: 666, column: 5)
!3745 = !DILocation(line: 666, column: 21, scope: !3743)
!3746 = !DILocation(line: 666, column: 27, scope: !3743)
!3747 = !DILocation(line: 666, column: 19, scope: !3743)
!3748 = !DILocation(line: 666, column: 5, scope: !3743)
!3749 = !DILocation(line: 667, column: 51, scope: !3744)
!3750 = !DILocation(line: 667, column: 35, scope: !3744)
!3751 = !DILocation(line: 667, column: 41, scope: !3744)
!3752 = !DILocation(line: 667, column: 9, scope: !3744)
!3753 = !DILocation(line: 666, column: 40, scope: !3754)
!3754 = !DILexicalBlockFile(scope: !3744, file: !918, discriminator: 2)
!3755 = !DILocation(line: 666, column: 5, scope: !3754)
!3756 = distinct !{!3756, !3757}
!3757 = !DILocation(line: 666, column: 5, scope: !3606)
!3758 = !DILocation(line: 670, column: 5, scope: !3606)
!3759 = !DILocation(line: 671, column: 5, scope: !3606)
!3760 = !DILocation(line: 674, column: 22, scope: !3606)
!3761 = !DILocation(line: 674, column: 28, scope: !3606)
!3762 = !DILocation(line: 674, column: 36, scope: !3606)
!3763 = !DILocation(line: 674, column: 5, scope: !3606)
!3764 = !DILocation(line: 675, column: 12, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 675, column: 5)
!3766 = !DILocation(line: 675, column: 10, scope: !3765)
!3767 = !DILocation(line: 675, column: 17, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !3769, file: !918, discriminator: 1)
!3769 = distinct !DILexicalBlock(scope: !3765, file: !918, line: 675, column: 5)
!3770 = !DILocation(line: 675, column: 21, scope: !3768)
!3771 = !DILocation(line: 675, column: 27, scope: !3768)
!3772 = !DILocation(line: 675, column: 19, scope: !3768)
!3773 = !DILocation(line: 675, column: 5, scope: !3768)
!3774 = !DILocation(line: 676, column: 45, scope: !3769)
!3775 = !DILocation(line: 676, column: 32, scope: !3769)
!3776 = !DILocation(line: 676, column: 38, scope: !3769)
!3777 = !DILocation(line: 676, column: 9, scope: !3769)
!3778 = !DILocation(line: 675, column: 37, scope: !3779)
!3779 = !DILexicalBlockFile(scope: !3769, file: !918, discriminator: 2)
!3780 = !DILocation(line: 675, column: 5, scope: !3779)
!3781 = distinct !{!3781, !3782}
!3782 = !DILocation(line: 675, column: 5, scope: !3606)
!3783 = !DILocation(line: 679, column: 22, scope: !3606)
!3784 = !DILocation(line: 679, column: 28, scope: !3606)
!3785 = !DILocation(line: 679, column: 38, scope: !3606)
!3786 = !DILocation(line: 679, column: 5, scope: !3606)
!3787 = !DILocation(line: 680, column: 12, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 680, column: 5)
!3789 = !DILocation(line: 680, column: 10, scope: !3788)
!3790 = !DILocation(line: 680, column: 17, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !3792, file: !918, discriminator: 1)
!3792 = distinct !DILexicalBlock(scope: !3788, file: !918, line: 680, column: 5)
!3793 = !DILocation(line: 680, column: 21, scope: !3791)
!3794 = !DILocation(line: 680, column: 27, scope: !3791)
!3795 = !DILocation(line: 680, column: 19, scope: !3791)
!3796 = !DILocation(line: 680, column: 5, scope: !3791)
!3797 = !DILocation(line: 681, column: 49, scope: !3792)
!3798 = !DILocation(line: 681, column: 34, scope: !3792)
!3799 = !DILocation(line: 681, column: 40, scope: !3792)
!3800 = !DILocation(line: 681, column: 9, scope: !3792)
!3801 = !DILocation(line: 680, column: 39, scope: !3802)
!3802 = !DILexicalBlockFile(scope: !3792, file: !918, discriminator: 2)
!3803 = !DILocation(line: 680, column: 5, scope: !3802)
!3804 = distinct !{!3804, !3805}
!3805 = !DILocation(line: 680, column: 5, scope: !3606)
!3806 = !DILocation(line: 684, column: 22, scope: !3606)
!3807 = !DILocation(line: 684, column: 28, scope: !3606)
!3808 = !DILocation(line: 684, column: 38, scope: !3606)
!3809 = !DILocation(line: 684, column: 5, scope: !3606)
!3810 = !DILocation(line: 685, column: 12, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 685, column: 5)
!3812 = !DILocation(line: 685, column: 10, scope: !3811)
!3813 = !DILocation(line: 685, column: 17, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !3815, file: !918, discriminator: 1)
!3815 = distinct !DILexicalBlock(scope: !3811, file: !918, line: 685, column: 5)
!3816 = !DILocation(line: 685, column: 21, scope: !3814)
!3817 = !DILocation(line: 685, column: 27, scope: !3814)
!3818 = !DILocation(line: 685, column: 19, scope: !3814)
!3819 = !DILocation(line: 685, column: 5, scope: !3814)
!3820 = !DILocalVariable(name: "mc", scope: !3821, file: !918, line: 686, type: !1806)
!3821 = distinct !DILexicalBlock(scope: !3815, file: !918, line: 685, column: 43)
!3822 = !DILocation(line: 686, column: 29, scope: !3821)
!3823 = !DILocation(line: 686, column: 50, scope: !3821)
!3824 = !DILocation(line: 686, column: 35, scope: !3821)
!3825 = !DILocation(line: 686, column: 41, scope: !3821)
!3826 = !DILocalVariable(name: "j", scope: !3821, file: !918, line: 687, type: !904)
!3827 = !DILocation(line: 687, column: 13, scope: !3821)
!3828 = !DILocation(line: 688, column: 9, scope: !3821)
!3829 = !DILocation(line: 690, column: 26, scope: !3821)
!3830 = !DILocation(line: 690, column: 30, scope: !3821)
!3831 = !DILocation(line: 690, column: 38, scope: !3821)
!3832 = !DILocation(line: 690, column: 9, scope: !3821)
!3833 = !DILocation(line: 691, column: 13, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3821, file: !918, line: 691, column: 13)
!3835 = !DILocation(line: 691, column: 17, scope: !3834)
!3836 = !DILocation(line: 691, column: 25, scope: !3834)
!3837 = !DILocation(line: 691, column: 13, scope: !3821)
!3838 = !DILocation(line: 692, column: 30, scope: !3834)
!3839 = !DILocation(line: 692, column: 34, scope: !3834)
!3840 = !DILocation(line: 692, column: 42, scope: !3834)
!3841 = !DILocation(line: 692, column: 13, scope: !3834)
!3842 = !DILocation(line: 694, column: 28, scope: !3821)
!3843 = !DILocation(line: 694, column: 32, scope: !3821)
!3844 = !DILocation(line: 694, column: 27, scope: !3821)
!3845 = !DILocation(line: 694, column: 26, scope: !3821)
!3846 = !DILocation(line: 694, column: 9, scope: !3821)
!3847 = !DILocation(line: 695, column: 13, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3821, file: !918, line: 695, column: 13)
!3849 = !DILocation(line: 695, column: 17, scope: !3848)
!3850 = !DILocation(line: 695, column: 13, scope: !3821)
!3851 = !DILocation(line: 696, column: 30, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3848, file: !918, line: 695, column: 33)
!3853 = !DILocation(line: 696, column: 34, scope: !3852)
!3854 = !DILocation(line: 696, column: 49, scope: !3852)
!3855 = !DILocation(line: 696, column: 13, scope: !3852)
!3856 = !DILocation(line: 697, column: 20, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3852, file: !918, line: 697, column: 13)
!3858 = !DILocation(line: 697, column: 18, scope: !3857)
!3859 = !DILocation(line: 697, column: 25, scope: !3860)
!3860 = !DILexicalBlockFile(scope: !3861, file: !918, discriminator: 1)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !918, line: 697, column: 13)
!3862 = !DILocation(line: 697, column: 29, scope: !3860)
!3863 = !DILocation(line: 697, column: 33, scope: !3860)
!3864 = !DILocation(line: 697, column: 27, scope: !3860)
!3865 = !DILocation(line: 697, column: 13, scope: !3860)
!3866 = !DILocation(line: 698, column: 55, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3861, file: !918, line: 697, column: 54)
!3868 = !DILocation(line: 698, column: 61, scope: !3867)
!3869 = !DILocation(line: 698, column: 70, scope: !3867)
!3870 = !DILocation(line: 698, column: 53, scope: !3867)
!3871 = !DILocation(line: 698, column: 75, scope: !3867)
!3872 = !DILocation(line: 698, column: 37, scope: !3867)
!3873 = !DILocation(line: 698, column: 35, scope: !3867)
!3874 = !DILocation(line: 698, column: 95, scope: !3867)
!3875 = !DILocation(line: 698, column: 81, scope: !3867)
!3876 = !DILocation(line: 698, column: 85, scope: !3867)
!3877 = !DILocation(line: 698, column: 17, scope: !3878)
!3878 = !DILexicalBlockFile(scope: !3867, file: !918, discriminator: 1)
!3879 = !DILocation(line: 699, column: 55, scope: !3867)
!3880 = !DILocation(line: 699, column: 61, scope: !3867)
!3881 = !DILocation(line: 699, column: 70, scope: !3867)
!3882 = !DILocation(line: 699, column: 53, scope: !3867)
!3883 = !DILocation(line: 699, column: 75, scope: !3867)
!3884 = !DILocation(line: 699, column: 37, scope: !3867)
!3885 = !DILocation(line: 699, column: 35, scope: !3867)
!3886 = !DILocation(line: 699, column: 91, scope: !3867)
!3887 = !DILocation(line: 699, column: 81, scope: !3867)
!3888 = !DILocation(line: 699, column: 85, scope: !3867)
!3889 = !DILocation(line: 699, column: 17, scope: !3878)
!3890 = !DILocation(line: 700, column: 13, scope: !3867)
!3891 = !DILocation(line: 697, column: 50, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3861, file: !918, discriminator: 2)
!3893 = !DILocation(line: 697, column: 13, scope: !3892)
!3894 = distinct !{!3894, !3895}
!3895 = !DILocation(line: 697, column: 13, scope: !3852)
!3896 = !DILocation(line: 701, column: 9, scope: !3852)
!3897 = !DILocation(line: 703, column: 9, scope: !3821)
!3898 = !DILocation(line: 705, column: 13, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3821, file: !918, line: 705, column: 13)
!3900 = !DILocation(line: 705, column: 17, scope: !3899)
!3901 = !DILocation(line: 705, column: 25, scope: !3899)
!3902 = !DILocation(line: 705, column: 13, scope: !3821)
!3903 = !DILocation(line: 706, column: 20, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3899, file: !918, line: 706, column: 13)
!3905 = !DILocation(line: 706, column: 18, scope: !3904)
!3906 = !DILocation(line: 706, column: 25, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3908, file: !918, discriminator: 1)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !918, line: 706, column: 13)
!3909 = !DILocation(line: 706, column: 29, scope: !3907)
!3910 = !DILocation(line: 706, column: 35, scope: !3907)
!3911 = !DILocation(line: 706, column: 27, scope: !3907)
!3912 = !DILocation(line: 706, column: 13, scope: !3907)
!3913 = !DILocation(line: 707, column: 42, scope: !3908)
!3914 = !DILocation(line: 707, column: 34, scope: !3908)
!3915 = !DILocation(line: 707, column: 38, scope: !3908)
!3916 = !DILocation(line: 707, column: 17, scope: !3908)
!3917 = !DILocation(line: 706, column: 46, scope: !3918)
!3918 = !DILexicalBlockFile(scope: !3908, file: !918, discriminator: 2)
!3919 = !DILocation(line: 706, column: 13, scope: !3918)
!3920 = distinct !{!3920, !3921}
!3921 = !DILocation(line: 706, column: 13, scope: !3899)
!3922 = !DILocation(line: 707, column: 44, scope: !3923)
!3923 = !DILexicalBlockFile(scope: !3904, file: !918, discriminator: 1)
!3924 = !DILocation(line: 709, column: 16, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3821, file: !918, line: 709, column: 9)
!3926 = !DILocation(line: 709, column: 14, scope: !3925)
!3927 = !DILocation(line: 709, column: 21, scope: !3928)
!3928 = !DILexicalBlockFile(scope: !3929, file: !918, discriminator: 1)
!3929 = distinct !DILexicalBlock(scope: !3925, file: !918, line: 709, column: 9)
!3930 = !DILocation(line: 709, column: 25, scope: !3928)
!3931 = !DILocation(line: 709, column: 29, scope: !3928)
!3932 = !DILocation(line: 709, column: 23, scope: !3928)
!3933 = !DILocation(line: 709, column: 9, scope: !3928)
!3934 = !DILocation(line: 710, column: 13, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3929, file: !918, line: 709, column: 43)
!3936 = !DILocation(line: 711, column: 40, scope: !3935)
!3937 = !DILocation(line: 711, column: 30, scope: !3935)
!3938 = !DILocation(line: 711, column: 34, scope: !3935)
!3939 = !DILocation(line: 711, column: 13, scope: !3935)
!3940 = !DILocation(line: 712, column: 42, scope: !3935)
!3941 = !DILocation(line: 712, column: 30, scope: !3935)
!3942 = !DILocation(line: 712, column: 34, scope: !3935)
!3943 = !DILocation(line: 712, column: 13, scope: !3935)
!3944 = !DILocation(line: 713, column: 9, scope: !3935)
!3945 = !DILocation(line: 709, column: 39, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !3929, file: !918, discriminator: 2)
!3947 = !DILocation(line: 709, column: 9, scope: !3946)
!3948 = distinct !{!3948, !3949}
!3949 = !DILocation(line: 709, column: 9, scope: !3821)
!3950 = !DILocation(line: 714, column: 5, scope: !3821)
!3951 = !DILocation(line: 685, column: 39, scope: !3952)
!3952 = !DILexicalBlockFile(scope: !3815, file: !918, discriminator: 2)
!3953 = !DILocation(line: 685, column: 5, scope: !3952)
!3954 = distinct !{!3954, !3955}
!3955 = !DILocation(line: 685, column: 5, scope: !3606)
!3956 = !DILocation(line: 717, column: 22, scope: !3606)
!3957 = !DILocation(line: 717, column: 28, scope: !3606)
!3958 = !DILocation(line: 717, column: 35, scope: !3606)
!3959 = !DILocation(line: 717, column: 5, scope: !3606)
!3960 = !DILocation(line: 718, column: 12, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 718, column: 5)
!3962 = !DILocation(line: 718, column: 10, scope: !3961)
!3963 = !DILocation(line: 718, column: 17, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !3965, file: !918, discriminator: 1)
!3965 = distinct !DILexicalBlock(scope: !3961, file: !918, line: 718, column: 5)
!3966 = !DILocation(line: 718, column: 21, scope: !3964)
!3967 = !DILocation(line: 718, column: 27, scope: !3964)
!3968 = !DILocation(line: 718, column: 19, scope: !3964)
!3969 = !DILocation(line: 718, column: 5, scope: !3964)
!3970 = !DILocation(line: 719, column: 38, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3965, file: !918, line: 718, column: 40)
!3972 = !DILocation(line: 719, column: 26, scope: !3971)
!3973 = !DILocation(line: 719, column: 32, scope: !3971)
!3974 = !DILocation(line: 719, column: 41, scope: !3971)
!3975 = !DILocation(line: 719, column: 9, scope: !3971)
!3976 = !DILocation(line: 720, column: 9, scope: !3971)
!3977 = !DILocation(line: 721, column: 9, scope: !3971)
!3978 = !DILocation(line: 722, column: 38, scope: !3971)
!3979 = !DILocation(line: 722, column: 26, scope: !3971)
!3980 = !DILocation(line: 722, column: 32, scope: !3971)
!3981 = !DILocation(line: 722, column: 41, scope: !3971)
!3982 = !DILocation(line: 722, column: 9, scope: !3971)
!3983 = !DILocation(line: 723, column: 5, scope: !3971)
!3984 = !DILocation(line: 718, column: 36, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3965, file: !918, discriminator: 2)
!3986 = !DILocation(line: 718, column: 5, scope: !3985)
!3987 = distinct !{!3987, !3988}
!3988 = !DILocation(line: 718, column: 5, scope: !3606)
!3989 = !DILocation(line: 725, column: 5, scope: !3606)
!3990 = !DILocation(line: 727, column: 5, scope: !3606)
!3991 = !DILocation(line: 728, column: 16, scope: !3606)
!3992 = !DILocation(line: 728, column: 36, scope: !3606)
!3993 = !DILocation(line: 728, column: 5, scope: !3606)
!3994 = !DILocation(line: 728, column: 14, scope: !3606)
!3995 = !DILocation(line: 730, column: 11, scope: !3606)
!3996 = !DILocation(line: 730, column: 22, scope: !3606)
!3997 = !DILocation(line: 730, column: 20, scope: !3606)
!3998 = !DILocation(line: 730, column: 33, scope: !3606)
!3999 = !DILocation(line: 730, column: 31, scope: !3606)
!4000 = !DILocation(line: 730, column: 9, scope: !3606)
!4001 = !DILocation(line: 731, column: 32, scope: !3606)
!4002 = !DILocation(line: 731, column: 30, scope: !3606)
!4003 = !DILocation(line: 731, column: 38, scope: !3606)
!4004 = !DILocation(line: 731, column: 41, scope: !3606)
!4005 = !DILocation(line: 731, column: 36, scope: !3606)
!4006 = !DILocation(line: 731, column: 27, scope: !3606)
!4007 = !DILocation(line: 731, column: 16, scope: !3606)
!4008 = !DILocation(line: 731, column: 10, scope: !3606)
!4009 = !DILocation(line: 731, column: 14, scope: !3606)
!4010 = !DILocation(line: 731, column: 7, scope: !3606)
!4011 = !DILocation(line: 732, column: 10, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 732, column: 9)
!4013 = !DILocation(line: 732, column: 9, scope: !3606)
!4014 = !DILocation(line: 733, column: 9, scope: !4012)
!4015 = !DILocation(line: 735, column: 7, scope: !3606)
!4016 = !DILocation(line: 735, column: 10, scope: !3606)
!4017 = !DILocation(line: 736, column: 24, scope: !3606)
!4018 = !DILocation(line: 736, column: 27, scope: !3606)
!4019 = !DILocation(line: 736, column: 10, scope: !3606)
!4020 = !DILocation(line: 736, column: 7, scope: !3606)
!4021 = !DILocation(line: 737, column: 24, scope: !3606)
!4022 = !DILocation(line: 737, column: 27, scope: !3606)
!4023 = !DILocation(line: 737, column: 10, scope: !3606)
!4024 = !DILocation(line: 737, column: 7, scope: !3606)
!4025 = !DILocation(line: 738, column: 16, scope: !3606)
!4026 = !DILocation(line: 739, column: 12, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3606, file: !918, line: 739, column: 5)
!4028 = !DILocation(line: 739, column: 10, scope: !4027)
!4029 = !DILocation(line: 739, column: 17, scope: !4030)
!4030 = !DILexicalBlockFile(scope: !4031, file: !918, discriminator: 1)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !918, line: 739, column: 5)
!4032 = !DILocation(line: 739, column: 19, scope: !4030)
!4033 = !DILocation(line: 739, column: 5, scope: !4030)
!4034 = !DILocation(line: 740, column: 16, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4031, file: !918, line: 739, column: 29)
!4036 = !DILocation(line: 740, column: 19, scope: !4035)
!4037 = !DILocation(line: 740, column: 28, scope: !4035)
!4038 = !DILocation(line: 740, column: 26, scope: !4035)
!4039 = !DILocation(line: 740, column: 46, scope: !4035)
!4040 = !DILocation(line: 740, column: 40, scope: !4035)
!4041 = !DILocation(line: 740, column: 9, scope: !4035)
!4042 = !DILocation(line: 741, column: 20, scope: !4035)
!4043 = !DILocation(line: 741, column: 14, scope: !4035)
!4044 = !DILocation(line: 741, column: 11, scope: !4035)
!4045 = !DILocation(line: 742, column: 29, scope: !4035)
!4046 = !DILocation(line: 742, column: 23, scope: !4035)
!4047 = !DILocation(line: 742, column: 20, scope: !4035)
!4048 = !DILocation(line: 743, column: 5, scope: !4035)
!4049 = !DILocation(line: 739, column: 25, scope: !4050)
!4050 = !DILexicalBlockFile(scope: !4031, file: !918, discriminator: 2)
!4051 = !DILocation(line: 739, column: 5, scope: !4050)
!4052 = distinct !{!4052, !4053}
!4053 = !DILocation(line: 739, column: 5, scope: !3606)
!4054 = !DILocation(line: 745, column: 14, scope: !3606)
!4055 = !DILocation(line: 745, column: 5, scope: !3606)
!4056 = !DILocation(line: 746, column: 12, scope: !3606)
!4057 = !DILocation(line: 746, column: 17, scope: !3606)
!4058 = !DILocation(line: 746, column: 16, scope: !3606)
!4059 = !DILocation(line: 746, column: 14, scope: !3606)
!4060 = !DILocation(line: 746, column: 5, scope: !3606)
!4061 = !DILocation(line: 747, column: 1, scope: !3606)
!4062 = distinct !DISubprogram(name: "cb_lookup_vals", scope: !918, file: !918, line: 164, type: !4063, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!904, !904, !904, !904}
!4065 = !DILocalVariable(name: "lookup", arg: 1, scope: !4062, file: !918, line: 164, type: !904)
!4066 = !DILocation(line: 164, column: 31, scope: !4062)
!4067 = !DILocalVariable(name: "dimensions", arg: 2, scope: !4062, file: !918, line: 164, type: !904)
!4068 = !DILocation(line: 164, column: 43, scope: !4062)
!4069 = !DILocalVariable(name: "entries", arg: 3, scope: !4062, file: !918, line: 164, type: !904)
!4070 = !DILocation(line: 164, column: 59, scope: !4062)
!4071 = !DILocation(line: 166, column: 9, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4062, file: !918, line: 166, column: 9)
!4073 = !DILocation(line: 166, column: 16, scope: !4072)
!4074 = !DILocation(line: 166, column: 9, scope: !4062)
!4075 = !DILocation(line: 167, column: 35, scope: !4072)
!4076 = !DILocation(line: 167, column: 44, scope: !4072)
!4077 = !DILocation(line: 167, column: 16, scope: !4072)
!4078 = !DILocation(line: 167, column: 9, scope: !4072)
!4079 = !DILocation(line: 168, column: 14, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4072, file: !918, line: 168, column: 14)
!4081 = !DILocation(line: 168, column: 21, scope: !4080)
!4082 = !DILocation(line: 168, column: 14, scope: !4072)
!4083 = !DILocation(line: 169, column: 16, scope: !4080)
!4084 = !DILocation(line: 169, column: 28, scope: !4080)
!4085 = !DILocation(line: 169, column: 27, scope: !4080)
!4086 = !DILocation(line: 169, column: 9, scope: !4080)
!4087 = !DILocation(line: 170, column: 5, scope: !4062)
!4088 = !DILocation(line: 171, column: 1, scope: !4062)
!4089 = distinct !DISubprogram(name: "ready_codebook", scope: !918, file: !918, line: 173, type: !4090, isLocal: true, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!904, !1740}
!4092 = !DILocalVariable(name: "cb", arg: 1, scope: !4089, file: !918, line: 173, type: !1740)
!4093 = !DILocation(line: 173, column: 48, scope: !4089)
!4094 = !DILocalVariable(name: "i", scope: !4089, file: !918, line: 175, type: !904)
!4095 = !DILocation(line: 175, column: 9, scope: !4089)
!4096 = !DILocation(line: 177, column: 23, scope: !4089)
!4097 = !DILocation(line: 177, column: 27, scope: !4089)
!4098 = !DILocation(line: 177, column: 33, scope: !4089)
!4099 = !DILocation(line: 177, column: 37, scope: !4089)
!4100 = !DILocation(line: 177, column: 48, scope: !4089)
!4101 = !DILocation(line: 177, column: 52, scope: !4089)
!4102 = !DILocation(line: 177, column: 5, scope: !4089)
!4103 = !DILocation(line: 179, column: 10, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4089, file: !918, line: 179, column: 9)
!4105 = !DILocation(line: 179, column: 14, scope: !4104)
!4106 = !DILocation(line: 179, column: 9, scope: !4089)
!4107 = !DILocation(line: 180, column: 20, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4104, file: !918, line: 179, column: 22)
!4109 = !DILocation(line: 180, column: 24, scope: !4108)
!4110 = !DILocation(line: 180, column: 35, scope: !4108)
!4111 = !DILocation(line: 180, column: 9, scope: !4108)
!4112 = !DILocation(line: 180, column: 13, scope: !4108)
!4113 = !DILocation(line: 180, column: 18, scope: !4108)
!4114 = !DILocation(line: 181, column: 5, scope: !4108)
!4115 = !DILocalVariable(name: "vals", scope: !4116, file: !918, line: 182, type: !904)
!4116 = distinct !DILexicalBlock(scope: !4104, file: !918, line: 181, column: 12)
!4117 = !DILocation(line: 182, column: 13, scope: !4116)
!4118 = !DILocation(line: 182, column: 35, scope: !4116)
!4119 = !DILocation(line: 182, column: 39, scope: !4116)
!4120 = !DILocation(line: 182, column: 47, scope: !4116)
!4121 = !DILocation(line: 182, column: 51, scope: !4116)
!4122 = !DILocation(line: 182, column: 64, scope: !4116)
!4123 = !DILocation(line: 182, column: 68, scope: !4116)
!4124 = !DILocation(line: 182, column: 20, scope: !4116)
!4125 = !DILocation(line: 183, column: 42, scope: !4116)
!4126 = !DILocation(line: 183, column: 46, scope: !4116)
!4127 = !DILocation(line: 183, column: 72, scope: !4116)
!4128 = !DILocation(line: 183, column: 76, scope: !4116)
!4129 = !DILocation(line: 183, column: 70, scope: !4116)
!4130 = !DILocation(line: 183, column: 26, scope: !4116)
!4131 = !DILocation(line: 183, column: 9, scope: !4116)
!4132 = !DILocation(line: 183, column: 13, scope: !4116)
!4133 = !DILocation(line: 183, column: 24, scope: !4116)
!4134 = !DILocation(line: 184, column: 37, scope: !4116)
!4135 = !DILocation(line: 184, column: 41, scope: !4116)
!4136 = !DILocation(line: 184, column: 20, scope: !4116)
!4137 = !DILocation(line: 184, column: 9, scope: !4116)
!4138 = !DILocation(line: 184, column: 13, scope: !4116)
!4139 = !DILocation(line: 184, column: 18, scope: !4116)
!4140 = !DILocation(line: 185, column: 14, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4116, file: !918, line: 185, column: 13)
!4142 = !DILocation(line: 185, column: 18, scope: !4141)
!4143 = !DILocation(line: 185, column: 29, scope: !4141)
!4144 = !DILocation(line: 185, column: 33, scope: !4145)
!4145 = !DILexicalBlockFile(scope: !4141, file: !918, discriminator: 1)
!4146 = !DILocation(line: 185, column: 37, scope: !4145)
!4147 = !DILocation(line: 185, column: 13, scope: !4145)
!4148 = !DILocation(line: 186, column: 13, scope: !4141)
!4149 = !DILocation(line: 187, column: 16, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4116, file: !918, line: 187, column: 9)
!4151 = !DILocation(line: 187, column: 14, scope: !4150)
!4152 = !DILocation(line: 187, column: 21, scope: !4153)
!4153 = !DILexicalBlockFile(scope: !4154, file: !918, discriminator: 1)
!4154 = distinct !DILexicalBlock(scope: !4150, file: !918, line: 187, column: 9)
!4155 = !DILocation(line: 187, column: 25, scope: !4153)
!4156 = !DILocation(line: 187, column: 29, scope: !4153)
!4157 = !DILocation(line: 187, column: 23, scope: !4153)
!4158 = !DILocation(line: 187, column: 9, scope: !4153)
!4159 = !DILocalVariable(name: "last", scope: !4160, file: !918, line: 188, type: !898)
!4160 = distinct !DILexicalBlock(scope: !4154, file: !918, line: 187, column: 44)
!4161 = !DILocation(line: 188, column: 19, scope: !4160)
!4162 = !DILocalVariable(name: "j", scope: !4160, file: !918, line: 189, type: !904)
!4163 = !DILocation(line: 189, column: 17, scope: !4160)
!4164 = !DILocalVariable(name: "div", scope: !4160, file: !918, line: 190, type: !904)
!4165 = !DILocation(line: 190, column: 17, scope: !4160)
!4166 = !DILocation(line: 191, column: 20, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4160, file: !918, line: 191, column: 13)
!4168 = !DILocation(line: 191, column: 18, scope: !4167)
!4169 = !DILocation(line: 191, column: 25, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4171, file: !918, discriminator: 1)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !918, line: 191, column: 13)
!4172 = !DILocation(line: 191, column: 29, scope: !4170)
!4173 = !DILocation(line: 191, column: 33, scope: !4170)
!4174 = !DILocation(line: 191, column: 27, scope: !4170)
!4175 = !DILocation(line: 191, column: 13, scope: !4170)
!4176 = !DILocalVariable(name: "off", scope: !4177, file: !918, line: 192, type: !904)
!4177 = distinct !DILexicalBlock(scope: !4171, file: !918, line: 191, column: 51)
!4178 = !DILocation(line: 192, column: 21, scope: !4177)
!4179 = !DILocation(line: 193, column: 21, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4177, file: !918, line: 193, column: 21)
!4181 = !DILocation(line: 193, column: 25, scope: !4180)
!4182 = !DILocation(line: 193, column: 32, scope: !4180)
!4183 = !DILocation(line: 193, column: 21, scope: !4177)
!4184 = !DILocation(line: 194, column: 28, scope: !4180)
!4185 = !DILocation(line: 194, column: 32, scope: !4180)
!4186 = !DILocation(line: 194, column: 30, scope: !4180)
!4187 = !DILocation(line: 194, column: 39, scope: !4180)
!4188 = !DILocation(line: 194, column: 37, scope: !4180)
!4189 = !DILocation(line: 194, column: 25, scope: !4180)
!4190 = !DILocation(line: 194, column: 21, scope: !4180)
!4191 = !DILocation(line: 196, column: 27, scope: !4180)
!4192 = !DILocation(line: 196, column: 31, scope: !4180)
!4193 = !DILocation(line: 196, column: 35, scope: !4180)
!4194 = !DILocation(line: 196, column: 29, scope: !4180)
!4195 = !DILocation(line: 196, column: 49, scope: !4180)
!4196 = !DILocation(line: 196, column: 47, scope: !4180)
!4197 = !DILocation(line: 196, column: 25, scope: !4180)
!4198 = !DILocation(line: 198, column: 59, scope: !4177)
!4199 = !DILocation(line: 198, column: 66, scope: !4177)
!4200 = !DILocation(line: 198, column: 70, scope: !4177)
!4201 = !DILocation(line: 198, column: 64, scope: !4177)
!4202 = !DILocation(line: 198, column: 90, scope: !4177)
!4203 = !DILocation(line: 198, column: 76, scope: !4177)
!4204 = !DILocation(line: 198, column: 80, scope: !4177)
!4205 = !DILocation(line: 198, column: 97, scope: !4177)
!4206 = !DILocation(line: 198, column: 101, scope: !4177)
!4207 = !DILocation(line: 198, column: 95, scope: !4177)
!4208 = !DILocation(line: 198, column: 74, scope: !4177)
!4209 = !DILocation(line: 198, column: 32, scope: !4177)
!4210 = !DILocation(line: 198, column: 36, scope: !4177)
!4211 = !DILocation(line: 198, column: 40, scope: !4177)
!4212 = !DILocation(line: 198, column: 34, scope: !4177)
!4213 = !DILocation(line: 198, column: 54, scope: !4177)
!4214 = !DILocation(line: 198, column: 52, scope: !4177)
!4215 = !DILocation(line: 198, column: 17, scope: !4177)
!4216 = !DILocation(line: 198, column: 21, scope: !4177)
!4217 = !DILocation(line: 198, column: 57, scope: !4177)
!4218 = !DILocation(line: 199, column: 21, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4177, file: !918, line: 199, column: 21)
!4220 = !DILocation(line: 199, column: 25, scope: !4219)
!4221 = !DILocation(line: 199, column: 21, scope: !4177)
!4222 = !DILocation(line: 200, column: 43, scope: !4219)
!4223 = !DILocation(line: 200, column: 47, scope: !4219)
!4224 = !DILocation(line: 200, column: 51, scope: !4219)
!4225 = !DILocation(line: 200, column: 45, scope: !4219)
!4226 = !DILocation(line: 200, column: 65, scope: !4219)
!4227 = !DILocation(line: 200, column: 63, scope: !4219)
!4228 = !DILocation(line: 200, column: 28, scope: !4219)
!4229 = !DILocation(line: 200, column: 32, scope: !4219)
!4230 = !DILocation(line: 200, column: 26, scope: !4219)
!4231 = !DILocation(line: 200, column: 21, scope: !4219)
!4232 = !DILocation(line: 201, column: 47, scope: !4177)
!4233 = !DILocation(line: 201, column: 51, scope: !4177)
!4234 = !DILocation(line: 201, column: 55, scope: !4177)
!4235 = !DILocation(line: 201, column: 49, scope: !4177)
!4236 = !DILocation(line: 201, column: 69, scope: !4177)
!4237 = !DILocation(line: 201, column: 67, scope: !4177)
!4238 = !DILocation(line: 201, column: 32, scope: !4177)
!4239 = !DILocation(line: 201, column: 36, scope: !4177)
!4240 = !DILocation(line: 201, column: 89, scope: !4177)
!4241 = !DILocation(line: 201, column: 93, scope: !4177)
!4242 = !DILocation(line: 201, column: 97, scope: !4177)
!4243 = !DILocation(line: 201, column: 91, scope: !4177)
!4244 = !DILocation(line: 201, column: 111, scope: !4177)
!4245 = !DILocation(line: 201, column: 109, scope: !4177)
!4246 = !DILocation(line: 201, column: 74, scope: !4177)
!4247 = !DILocation(line: 201, column: 78, scope: !4177)
!4248 = !DILocation(line: 201, column: 72, scope: !4177)
!4249 = !DILocation(line: 201, column: 26, scope: !4177)
!4250 = !DILocation(line: 201, column: 17, scope: !4177)
!4251 = !DILocation(line: 201, column: 21, scope: !4177)
!4252 = !DILocation(line: 201, column: 29, scope: !4177)
!4253 = !DILocation(line: 202, column: 24, scope: !4177)
!4254 = !DILocation(line: 202, column: 21, scope: !4177)
!4255 = !DILocation(line: 203, column: 13, scope: !4177)
!4256 = !DILocation(line: 191, column: 47, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !4171, file: !918, discriminator: 2)
!4258 = !DILocation(line: 191, column: 13, scope: !4257)
!4259 = distinct !{!4259, !4260}
!4260 = !DILocation(line: 191, column: 13, scope: !4160)
!4261 = !DILocation(line: 204, column: 22, scope: !4160)
!4262 = !DILocation(line: 204, column: 13, scope: !4160)
!4263 = !DILocation(line: 204, column: 17, scope: !4160)
!4264 = !DILocation(line: 204, column: 25, scope: !4160)
!4265 = !DILocation(line: 205, column: 9, scope: !4160)
!4266 = !DILocation(line: 187, column: 40, scope: !4267)
!4267 = !DILexicalBlockFile(scope: !4154, file: !918, discriminator: 2)
!4268 = !DILocation(line: 187, column: 9, scope: !4267)
!4269 = distinct !{!4269, !4270}
!4270 = !DILocation(line: 187, column: 9, scope: !4116)
!4271 = !DILocation(line: 207, column: 5, scope: !4089)
!4272 = !DILocation(line: 208, column: 1, scope: !4089)
!4273 = distinct !DISubprogram(name: "ready_residue", scope: !918, file: !918, line: 210, type: !4274, isLocal: true, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!904, !1788, !1644}
!4276 = !DILocalVariable(name: "rc", arg: 1, scope: !4273, file: !918, line: 210, type: !1788)
!4277 = !DILocation(line: 210, column: 46, scope: !4273)
!4278 = !DILocalVariable(name: "venc", arg: 2, scope: !4273, file: !918, line: 210, type: !1644)
!4279 = !DILocation(line: 210, column: 70, scope: !4273)
!4280 = !DILocalVariable(name: "i", scope: !4273, file: !918, line: 212, type: !904)
!4281 = !DILocation(line: 212, column: 9, scope: !4273)
!4282 = !DILocation(line: 213, column: 5, scope: !4273)
!4283 = distinct !{!4283, !4282}
!4284 = !DILocation(line: 213, column: 16, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4286, file: !918, discriminator: 1)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !918, line: 213, column: 14)
!4287 = distinct !DILexicalBlock(scope: !4273, file: !918, line: 213, column: 8)
!4288 = !DILocation(line: 213, column: 20, scope: !4285)
!4289 = !DILocation(line: 213, column: 25, scope: !4285)
!4290 = !DILocation(line: 213, column: 14, scope: !4285)
!4291 = !DILocation(line: 213, column: 34, scope: !4292)
!4292 = !DILexicalBlockFile(scope: !4293, file: !918, discriminator: 2)
!4293 = distinct !DILexicalBlock(scope: !4286, file: !918, line: 213, column: 32)
!4294 = !DILocation(line: 213, column: 92, scope: !4295)
!4295 = !DILexicalBlockFile(scope: !4292, file: !918, discriminator: 4)
!4296 = !DILocation(line: 213, column: 92, scope: !4292)
!4297 = !DILocation(line: 213, column: 103, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !4287, file: !918, discriminator: 3)
!4299 = !DILocation(line: 214, column: 34, scope: !4273)
!4300 = !DILocation(line: 214, column: 38, scope: !4273)
!4301 = !DILocation(line: 214, column: 17, scope: !4273)
!4302 = !DILocation(line: 214, column: 5, scope: !4273)
!4303 = !DILocation(line: 214, column: 9, scope: !4273)
!4304 = !DILocation(line: 214, column: 15, scope: !4273)
!4305 = !DILocation(line: 215, column: 10, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4273, file: !918, line: 215, column: 9)
!4307 = !DILocation(line: 215, column: 14, scope: !4306)
!4308 = !DILocation(line: 215, column: 9, scope: !4273)
!4309 = !DILocation(line: 216, column: 9, scope: !4306)
!4310 = !DILocation(line: 217, column: 12, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4273, file: !918, line: 217, column: 5)
!4312 = !DILocation(line: 217, column: 10, scope: !4311)
!4313 = !DILocation(line: 217, column: 17, scope: !4314)
!4314 = !DILexicalBlockFile(scope: !4315, file: !918, discriminator: 1)
!4315 = distinct !DILexicalBlock(scope: !4311, file: !918, line: 217, column: 5)
!4316 = !DILocation(line: 217, column: 21, scope: !4314)
!4317 = !DILocation(line: 217, column: 25, scope: !4314)
!4318 = !DILocation(line: 217, column: 19, scope: !4314)
!4319 = !DILocation(line: 217, column: 5, scope: !4314)
!4320 = !DILocalVariable(name: "j", scope: !4321, file: !918, line: 218, type: !904)
!4321 = distinct !DILexicalBlock(scope: !4315, file: !918, line: 217, column: 47)
!4322 = !DILocation(line: 218, column: 13, scope: !4321)
!4323 = !DILocalVariable(name: "cb", scope: !4321, file: !918, line: 219, type: !1740)
!4324 = !DILocation(line: 219, column: 31, scope: !4321)
!4325 = !DILocation(line: 220, column: 16, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4321, file: !918, line: 220, column: 9)
!4327 = !DILocation(line: 220, column: 14, scope: !4326)
!4328 = !DILocation(line: 220, column: 21, scope: !4329)
!4329 = !DILexicalBlockFile(scope: !4330, file: !918, discriminator: 1)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !918, line: 220, column: 9)
!4331 = !DILocation(line: 220, column: 23, scope: !4329)
!4332 = !DILocation(line: 220, column: 9, scope: !4329)
!4333 = !DILocation(line: 221, column: 30, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4330, file: !918, line: 221, column: 17)
!4335 = !DILocation(line: 221, column: 17, scope: !4334)
!4336 = !DILocation(line: 221, column: 27, scope: !4334)
!4337 = !DILocation(line: 221, column: 21, scope: !4334)
!4338 = !DILocation(line: 221, column: 33, scope: !4334)
!4339 = !DILocation(line: 221, column: 17, scope: !4330)
!4340 = !DILocation(line: 222, column: 17, scope: !4334)
!4341 = !DILocation(line: 221, column: 37, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4334, file: !918, discriminator: 1)
!4343 = !DILocation(line: 220, column: 29, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !4330, file: !918, discriminator: 2)
!4345 = !DILocation(line: 220, column: 9, scope: !4344)
!4346 = distinct !{!4346, !4347}
!4347 = !DILocation(line: 220, column: 9, scope: !4321)
!4348 = !DILocation(line: 223, column: 13, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4321, file: !918, line: 223, column: 13)
!4350 = !DILocation(line: 223, column: 15, scope: !4349)
!4351 = !DILocation(line: 223, column: 13, scope: !4321)
!4352 = !DILocation(line: 224, column: 13, scope: !4349)
!4353 = !DILocation(line: 225, column: 44, scope: !4321)
!4354 = !DILocation(line: 225, column: 31, scope: !4321)
!4355 = !DILocation(line: 225, column: 41, scope: !4321)
!4356 = !DILocation(line: 225, column: 35, scope: !4321)
!4357 = !DILocation(line: 225, column: 15, scope: !4321)
!4358 = !DILocation(line: 225, column: 21, scope: !4321)
!4359 = !DILocation(line: 225, column: 12, scope: !4321)
!4360 = !DILocation(line: 226, column: 8, scope: !4321)
!4361 = !DILocation(line: 226, column: 12, scope: !4321)
!4362 = !DILocation(line: 226, column: 24, scope: !4321)
!4363 = !DILocation(line: 226, column: 9, scope: !4321)
!4364 = !DILocation(line: 226, column: 9, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4321, file: !918, discriminator: 1)
!4366 = !DILocation(line: 226, column: 25, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !4321, file: !918, discriminator: 2)
!4368 = !DILocation(line: 226, column: 9, scope: !4369)
!4369 = !DILexicalBlockFile(scope: !4321, file: !918, discriminator: 3)
!4370 = !DILocation(line: 227, column: 8, scope: !4321)
!4371 = !DILocation(line: 227, column: 12, scope: !4321)
!4372 = !DILocation(line: 227, column: 9, scope: !4321)
!4373 = !DILocation(line: 227, column: 9, scope: !4365)
!4374 = !DILocation(line: 227, column: 25, scope: !4367)
!4375 = !DILocation(line: 227, column: 9, scope: !4369)
!4376 = !DILocation(line: 229, column: 16, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4321, file: !918, line: 229, column: 9)
!4378 = !DILocation(line: 229, column: 14, scope: !4377)
!4379 = !DILocation(line: 229, column: 21, scope: !4380)
!4380 = !DILexicalBlockFile(scope: !4381, file: !918, discriminator: 1)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !918, line: 229, column: 9)
!4382 = !DILocation(line: 229, column: 25, scope: !4380)
!4383 = !DILocation(line: 229, column: 29, scope: !4380)
!4384 = !DILocation(line: 229, column: 23, scope: !4380)
!4385 = !DILocation(line: 229, column: 9, scope: !4380)
!4386 = !DILocalVariable(name: "a", scope: !4387, file: !918, line: 230, type: !898)
!4387 = distinct !DILexicalBlock(scope: !4381, file: !918, line: 229, column: 44)
!4388 = !DILocation(line: 230, column: 19, scope: !4387)
!4389 = !DILocation(line: 231, column: 27, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4387, file: !918, line: 231, column: 17)
!4391 = !DILocation(line: 231, column: 18, scope: !4390)
!4392 = !DILocation(line: 231, column: 22, scope: !4390)
!4393 = !DILocation(line: 231, column: 17, scope: !4387)
!4394 = !DILocation(line: 232, column: 17, scope: !4390)
!4395 = !DILocation(line: 233, column: 37, scope: !4387)
!4396 = !DILocation(line: 233, column: 41, scope: !4387)
!4397 = !DILocation(line: 233, column: 45, scope: !4387)
!4398 = !DILocation(line: 233, column: 39, scope: !4387)
!4399 = !DILocation(line: 233, column: 22, scope: !4387)
!4400 = !DILocation(line: 233, column: 26, scope: !4387)
!4401 = !DILocation(line: 233, column: 17, scope: !4387)
!4402 = !DILocation(line: 233, column: 15, scope: !4387)
!4403 = !DILocation(line: 234, column: 17, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4387, file: !918, line: 234, column: 17)
!4405 = !DILocation(line: 234, column: 31, scope: !4404)
!4406 = !DILocation(line: 234, column: 21, scope: !4404)
!4407 = !DILocation(line: 234, column: 25, scope: !4404)
!4408 = !DILocation(line: 234, column: 19, scope: !4404)
!4409 = !DILocation(line: 234, column: 17, scope: !4387)
!4410 = !DILocation(line: 235, column: 35, scope: !4404)
!4411 = !DILocation(line: 235, column: 27, scope: !4404)
!4412 = !DILocation(line: 235, column: 17, scope: !4404)
!4413 = !DILocation(line: 235, column: 21, scope: !4404)
!4414 = !DILocation(line: 235, column: 33, scope: !4404)
!4415 = !DILocation(line: 236, column: 37, scope: !4387)
!4416 = !DILocation(line: 236, column: 41, scope: !4387)
!4417 = !DILocation(line: 236, column: 45, scope: !4387)
!4418 = !DILocation(line: 236, column: 39, scope: !4387)
!4419 = !DILocation(line: 236, column: 57, scope: !4387)
!4420 = !DILocation(line: 236, column: 22, scope: !4387)
!4421 = !DILocation(line: 236, column: 26, scope: !4387)
!4422 = !DILocation(line: 236, column: 17, scope: !4387)
!4423 = !DILocation(line: 236, column: 15, scope: !4387)
!4424 = !DILocation(line: 237, column: 17, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4387, file: !918, line: 237, column: 17)
!4426 = !DILocation(line: 237, column: 31, scope: !4425)
!4427 = !DILocation(line: 237, column: 21, scope: !4425)
!4428 = !DILocation(line: 237, column: 25, scope: !4425)
!4429 = !DILocation(line: 237, column: 19, scope: !4425)
!4430 = !DILocation(line: 237, column: 17, scope: !4387)
!4431 = !DILocation(line: 238, column: 35, scope: !4425)
!4432 = !DILocation(line: 238, column: 27, scope: !4425)
!4433 = !DILocation(line: 238, column: 17, scope: !4425)
!4434 = !DILocation(line: 238, column: 21, scope: !4425)
!4435 = !DILocation(line: 238, column: 33, scope: !4425)
!4436 = !DILocation(line: 239, column: 9, scope: !4387)
!4437 = !DILocation(line: 229, column: 40, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4381, file: !918, discriminator: 2)
!4439 = !DILocation(line: 229, column: 9, scope: !4438)
!4440 = distinct !{!4440, !4441}
!4441 = !DILocation(line: 229, column: 9, scope: !4321)
!4442 = !DILocation(line: 240, column: 5, scope: !4321)
!4443 = !DILocation(line: 217, column: 43, scope: !4444)
!4444 = !DILexicalBlockFile(scope: !4315, file: !918, discriminator: 2)
!4445 = !DILocation(line: 217, column: 5, scope: !4444)
!4446 = distinct !{!4446, !4447}
!4447 = !DILocation(line: 217, column: 5, scope: !4273)
!4448 = !DILocation(line: 242, column: 12, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4273, file: !918, line: 242, column: 5)
!4450 = !DILocation(line: 242, column: 10, scope: !4449)
!4451 = !DILocation(line: 242, column: 17, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !4453, file: !918, discriminator: 1)
!4453 = distinct !DILexicalBlock(scope: !4449, file: !918, line: 242, column: 5)
!4454 = !DILocation(line: 242, column: 21, scope: !4452)
!4455 = !DILocation(line: 242, column: 25, scope: !4452)
!4456 = !DILocation(line: 242, column: 19, scope: !4452)
!4457 = !DILocation(line: 242, column: 5, scope: !4452)
!4458 = !DILocation(line: 243, column: 19, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4453, file: !918, line: 242, column: 47)
!4460 = !DILocation(line: 243, column: 9, scope: !4459)
!4461 = !DILocation(line: 243, column: 13, scope: !4459)
!4462 = !DILocation(line: 243, column: 25, scope: !4459)
!4463 = !DILocation(line: 244, column: 19, scope: !4459)
!4464 = !DILocation(line: 244, column: 9, scope: !4459)
!4465 = !DILocation(line: 244, column: 13, scope: !4459)
!4466 = !DILocation(line: 244, column: 25, scope: !4459)
!4467 = !DILocation(line: 245, column: 5, scope: !4459)
!4468 = !DILocation(line: 242, column: 43, scope: !4469)
!4469 = !DILexicalBlockFile(scope: !4453, file: !918, discriminator: 2)
!4470 = !DILocation(line: 242, column: 5, scope: !4469)
!4471 = distinct !{!4471, !4472}
!4472 = !DILocation(line: 242, column: 5, scope: !4273)
!4473 = !DILocation(line: 246, column: 5, scope: !4273)
!4474 = !DILocation(line: 247, column: 1, scope: !4273)
!4475 = distinct !DISubprogram(name: "dsp_init", scope: !918, file: !918, line: 249, type: !4476, isLocal: true, isDefinition: true, scopeLine: 250, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!904, !1009, !1644}
!4478 = !DILocalVariable(name: "avctx", arg: 1, scope: !4475, file: !918, line: 249, type: !1009)
!4479 = !DILocation(line: 249, column: 59, scope: !4475)
!4480 = !DILocalVariable(name: "venc", arg: 2, scope: !4475, file: !918, line: 249, type: !1644)
!4481 = !DILocation(line: 249, column: 86, scope: !4475)
!4482 = !DILocalVariable(name: "ret", scope: !4475, file: !918, line: 251, type: !904)
!4483 = !DILocation(line: 251, column: 9, scope: !4475)
!4484 = !DILocation(line: 253, column: 41, scope: !4475)
!4485 = !DILocation(line: 253, column: 48, scope: !4475)
!4486 = !DILocation(line: 253, column: 54, scope: !4475)
!4487 = !DILocation(line: 253, column: 18, scope: !4475)
!4488 = !DILocation(line: 253, column: 5, scope: !4475)
!4489 = !DILocation(line: 253, column: 11, scope: !4475)
!4490 = !DILocation(line: 253, column: 16, scope: !4475)
!4491 = !DILocation(line: 254, column: 10, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4475, file: !918, line: 254, column: 9)
!4493 = !DILocation(line: 254, column: 16, scope: !4492)
!4494 = !DILocation(line: 254, column: 9, scope: !4475)
!4495 = !DILocation(line: 255, column: 9, scope: !4492)
!4496 = !DILocation(line: 258, column: 35, scope: !4475)
!4497 = !DILocation(line: 258, column: 41, scope: !4475)
!4498 = !DILocation(line: 258, column: 59, scope: !4475)
!4499 = !DILocation(line: 258, column: 20, scope: !4475)
!4500 = !DILocation(line: 258, column: 5, scope: !4475)
!4501 = !DILocation(line: 258, column: 11, scope: !4475)
!4502 = !DILocation(line: 258, column: 18, scope: !4475)
!4503 = !DILocation(line: 259, column: 35, scope: !4475)
!4504 = !DILocation(line: 259, column: 41, scope: !4475)
!4505 = !DILocation(line: 259, column: 59, scope: !4475)
!4506 = !DILocation(line: 259, column: 20, scope: !4475)
!4507 = !DILocation(line: 259, column: 5, scope: !4475)
!4508 = !DILocation(line: 259, column: 11, scope: !4475)
!4509 = !DILocation(line: 259, column: 18, scope: !4475)
!4510 = !DILocation(line: 261, column: 30, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4475, file: !918, line: 261, column: 9)
!4512 = !DILocation(line: 261, column: 36, scope: !4511)
!4513 = !DILocation(line: 261, column: 45, scope: !4511)
!4514 = !DILocation(line: 261, column: 51, scope: !4511)
!4515 = !DILocation(line: 261, column: 16, scope: !4511)
!4516 = !DILocation(line: 261, column: 14, scope: !4511)
!4517 = !DILocation(line: 261, column: 79, scope: !4511)
!4518 = !DILocation(line: 261, column: 9, scope: !4475)
!4519 = !DILocation(line: 262, column: 16, scope: !4511)
!4520 = !DILocation(line: 262, column: 9, scope: !4511)
!4521 = !DILocation(line: 263, column: 30, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4475, file: !918, line: 263, column: 9)
!4523 = !DILocation(line: 263, column: 36, scope: !4522)
!4524 = !DILocation(line: 263, column: 45, scope: !4522)
!4525 = !DILocation(line: 263, column: 51, scope: !4522)
!4526 = !DILocation(line: 263, column: 16, scope: !4522)
!4527 = !DILocation(line: 263, column: 14, scope: !4522)
!4528 = !DILocation(line: 263, column: 79, scope: !4522)
!4529 = !DILocation(line: 263, column: 9, scope: !4475)
!4530 = !DILocation(line: 264, column: 16, scope: !4522)
!4531 = !DILocation(line: 264, column: 9, scope: !4522)
!4532 = !DILocation(line: 266, column: 5, scope: !4475)
!4533 = !DILocation(line: 267, column: 1, scope: !4475)
!4534 = distinct !DISubprogram(name: "init_put_bits", scope: !2102, file: !2102, line: 48, type: !4535, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !4537, !900, !904}
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64, align: 64)
!4538 = !DILocalVariable(name: "s", arg: 1, scope: !4534, file: !2102, line: 48, type: !4537)
!4539 = !DILocation(line: 48, column: 49, scope: !4534)
!4540 = !DILocalVariable(name: "buffer", arg: 2, scope: !4534, file: !2102, line: 48, type: !900)
!4541 = !DILocation(line: 48, column: 61, scope: !4534)
!4542 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !4534, file: !2102, line: 49, type: !904)
!4543 = !DILocation(line: 49, column: 38, scope: !4534)
!4544 = !DILocation(line: 51, column: 9, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4534, file: !2102, line: 51, column: 9)
!4546 = !DILocation(line: 51, column: 21, scope: !4545)
!4547 = !DILocation(line: 51, column: 9, scope: !4534)
!4548 = !DILocation(line: 52, column: 21, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4545, file: !2102, line: 51, column: 26)
!4550 = !DILocation(line: 53, column: 16, scope: !4549)
!4551 = !DILocation(line: 54, column: 5, scope: !4549)
!4552 = !DILocation(line: 56, column: 27, scope: !4534)
!4553 = !DILocation(line: 56, column: 25, scope: !4534)
!4554 = !DILocation(line: 56, column: 5, scope: !4534)
!4555 = !DILocation(line: 56, column: 8, scope: !4534)
!4556 = !DILocation(line: 56, column: 21, scope: !4534)
!4557 = !DILocation(line: 57, column: 14, scope: !4534)
!4558 = !DILocation(line: 57, column: 5, scope: !4534)
!4559 = !DILocation(line: 57, column: 8, scope: !4534)
!4560 = !DILocation(line: 57, column: 12, scope: !4534)
!4561 = !DILocation(line: 58, column: 18, scope: !4534)
!4562 = !DILocation(line: 58, column: 21, scope: !4534)
!4563 = !DILocation(line: 58, column: 27, scope: !4534)
!4564 = !DILocation(line: 58, column: 25, scope: !4534)
!4565 = !DILocation(line: 58, column: 5, scope: !4534)
!4566 = !DILocation(line: 58, column: 8, scope: !4534)
!4567 = !DILocation(line: 58, column: 16, scope: !4534)
!4568 = !DILocation(line: 59, column: 18, scope: !4534)
!4569 = !DILocation(line: 59, column: 21, scope: !4534)
!4570 = !DILocation(line: 59, column: 5, scope: !4534)
!4571 = !DILocation(line: 59, column: 8, scope: !4534)
!4572 = !DILocation(line: 59, column: 16, scope: !4534)
!4573 = !DILocation(line: 60, column: 5, scope: !4534)
!4574 = !DILocation(line: 60, column: 8, scope: !4534)
!4575 = !DILocation(line: 60, column: 17, scope: !4534)
!4576 = !DILocation(line: 61, column: 5, scope: !4534)
!4577 = !DILocation(line: 61, column: 8, scope: !4534)
!4578 = !DILocation(line: 61, column: 16, scope: !4534)
!4579 = !DILocation(line: 62, column: 1, scope: !4534)
!4580 = distinct !DISubprogram(name: "put_bits", scope: !2102, file: !2102, line: 164, type: !4581, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{null, !4537, !904, !905}
!4583 = !DILocalVariable(name: "s", arg: 1, scope: !4580, file: !2102, line: 164, type: !4537)
!4584 = !DILocation(line: 164, column: 44, scope: !4580)
!4585 = !DILocalVariable(name: "n", arg: 2, scope: !4580, file: !2102, line: 164, type: !904)
!4586 = !DILocation(line: 164, column: 51, scope: !4580)
!4587 = !DILocalVariable(name: "value", arg: 3, scope: !4580, file: !2102, line: 164, type: !905)
!4588 = !DILocation(line: 164, column: 67, scope: !4580)
!4589 = !DILocalVariable(name: "bit_buf", scope: !4580, file: !2102, line: 166, type: !905)
!4590 = !DILocation(line: 166, column: 18, scope: !4580)
!4591 = !DILocalVariable(name: "bit_left", scope: !4580, file: !2102, line: 167, type: !904)
!4592 = !DILocation(line: 167, column: 9, scope: !4580)
!4593 = !DILocation(line: 171, column: 15, scope: !4580)
!4594 = !DILocation(line: 171, column: 18, scope: !4580)
!4595 = !DILocation(line: 171, column: 13, scope: !4580)
!4596 = !DILocation(line: 172, column: 16, scope: !4580)
!4597 = !DILocation(line: 172, column: 19, scope: !4580)
!4598 = !DILocation(line: 172, column: 14, scope: !4580)
!4599 = !DILocation(line: 176, column: 16, scope: !4580)
!4600 = !DILocation(line: 176, column: 31, scope: !4580)
!4601 = !DILocation(line: 176, column: 29, scope: !4580)
!4602 = !DILocation(line: 176, column: 22, scope: !4580)
!4603 = !DILocation(line: 176, column: 13, scope: !4580)
!4604 = !DILocation(line: 177, column: 9, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4580, file: !2102, line: 177, column: 9)
!4606 = !DILocation(line: 177, column: 14, scope: !4605)
!4607 = !DILocation(line: 177, column: 11, scope: !4605)
!4608 = !DILocation(line: 177, column: 9, scope: !4580)
!4609 = !DILocation(line: 178, column: 17, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2102, line: 178, column: 13)
!4611 = distinct !DILexicalBlock(scope: !4605, file: !2102, line: 177, column: 24)
!4612 = !DILocation(line: 178, column: 20, scope: !4610)
!4613 = !DILocation(line: 178, column: 30, scope: !4610)
!4614 = !DILocation(line: 178, column: 33, scope: !4610)
!4615 = !DILocation(line: 178, column: 28, scope: !4610)
!4616 = !DILocation(line: 178, column: 15, scope: !4610)
!4617 = !DILocation(line: 178, column: 13, scope: !4611)
!4618 = !DILocation(line: 179, column: 60, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4610, file: !2102, line: 178, column: 42)
!4620 = !DILocation(line: 179, column: 40, scope: !4619)
!4621 = !DILocation(line: 179, column: 43, scope: !4619)
!4622 = !DILocation(line: 179, column: 54, scope: !4619)
!4623 = !DILocation(line: 179, column: 57, scope: !4619)
!4624 = !DILocation(line: 180, column: 13, scope: !4619)
!4625 = !DILocation(line: 180, column: 16, scope: !4619)
!4626 = !DILocation(line: 180, column: 24, scope: !4619)
!4627 = !DILocation(line: 181, column: 9, scope: !4619)
!4628 = !DILocation(line: 182, column: 13, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4610, file: !2102, line: 181, column: 16)
!4630 = !DILocation(line: 185, column: 19, scope: !4611)
!4631 = !DILocation(line: 185, column: 28, scope: !4611)
!4632 = !DILocation(line: 185, column: 25, scope: !4611)
!4633 = !DILocation(line: 185, column: 17, scope: !4611)
!4634 = !DILocation(line: 186, column: 18, scope: !4611)
!4635 = !DILocation(line: 187, column: 5, scope: !4611)
!4636 = !DILocation(line: 188, column: 17, scope: !4580)
!4637 = !DILocation(line: 188, column: 14, scope: !4580)
!4638 = !DILocation(line: 208, column: 18, scope: !4580)
!4639 = !DILocation(line: 208, column: 5, scope: !4580)
!4640 = !DILocation(line: 208, column: 8, scope: !4580)
!4641 = !DILocation(line: 208, column: 16, scope: !4580)
!4642 = !DILocation(line: 209, column: 19, scope: !4580)
!4643 = !DILocation(line: 209, column: 5, scope: !4580)
!4644 = !DILocation(line: 209, column: 8, scope: !4580)
!4645 = !DILocation(line: 209, column: 17, scope: !4580)
!4646 = !DILocation(line: 210, column: 1, scope: !4580)
!4647 = distinct !DISubprogram(name: "put_bits32", scope: !2102, file: !2102, line: 250, type: !4648, isLocal: true, isDefinition: true, scopeLine: 251, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{null, !4537, !912}
!4650 = !DILocalVariable(name: "s", arg: 1, scope: !4647, file: !2102, line: 250, type: !4537)
!4651 = !DILocation(line: 250, column: 63, scope: !4647)
!4652 = !DILocalVariable(name: "value", arg: 2, scope: !4647, file: !2102, line: 250, type: !912)
!4653 = !DILocation(line: 250, column: 75, scope: !4647)
!4654 = !DILocalVariable(name: "bit_buf", scope: !4647, file: !2102, line: 252, type: !905)
!4655 = !DILocation(line: 252, column: 18, scope: !4647)
!4656 = !DILocalVariable(name: "bit_left", scope: !4647, file: !2102, line: 253, type: !904)
!4657 = !DILocation(line: 253, column: 9, scope: !4647)
!4658 = !DILocation(line: 255, column: 15, scope: !4647)
!4659 = !DILocation(line: 255, column: 18, scope: !4647)
!4660 = !DILocation(line: 255, column: 13, scope: !4647)
!4661 = !DILocation(line: 256, column: 16, scope: !4647)
!4662 = !DILocation(line: 256, column: 19, scope: !4647)
!4663 = !DILocation(line: 256, column: 14, scope: !4647)
!4664 = !DILocation(line: 259, column: 16, scope: !4647)
!4665 = !DILocation(line: 259, column: 31, scope: !4647)
!4666 = !DILocation(line: 259, column: 29, scope: !4647)
!4667 = !DILocation(line: 259, column: 22, scope: !4647)
!4668 = !DILocation(line: 259, column: 13, scope: !4647)
!4669 = !DILocation(line: 260, column: 13, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4647, file: !2102, line: 260, column: 9)
!4671 = !DILocation(line: 260, column: 16, scope: !4670)
!4672 = !DILocation(line: 260, column: 26, scope: !4670)
!4673 = !DILocation(line: 260, column: 29, scope: !4670)
!4674 = !DILocation(line: 260, column: 24, scope: !4670)
!4675 = !DILocation(line: 260, column: 11, scope: !4670)
!4676 = !DILocation(line: 260, column: 9, scope: !4647)
!4677 = !DILocation(line: 261, column: 56, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4670, file: !2102, line: 260, column: 38)
!4679 = !DILocation(line: 261, column: 36, scope: !4678)
!4680 = !DILocation(line: 261, column: 39, scope: !4678)
!4681 = !DILocation(line: 261, column: 50, scope: !4678)
!4682 = !DILocation(line: 261, column: 53, scope: !4678)
!4683 = !DILocation(line: 262, column: 9, scope: !4678)
!4684 = !DILocation(line: 262, column: 12, scope: !4678)
!4685 = !DILocation(line: 262, column: 20, scope: !4678)
!4686 = !DILocation(line: 263, column: 5, scope: !4678)
!4687 = !DILocation(line: 264, column: 9, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4670, file: !2102, line: 263, column: 12)
!4689 = !DILocation(line: 267, column: 25, scope: !4647)
!4690 = !DILocation(line: 267, column: 15, scope: !4647)
!4691 = !DILocation(line: 267, column: 34, scope: !4647)
!4692 = !DILocation(line: 267, column: 31, scope: !4647)
!4693 = !DILocation(line: 267, column: 13, scope: !4647)
!4694 = !DILocation(line: 281, column: 18, scope: !4647)
!4695 = !DILocation(line: 281, column: 5, scope: !4647)
!4696 = !DILocation(line: 281, column: 8, scope: !4647)
!4697 = !DILocation(line: 281, column: 16, scope: !4647)
!4698 = !DILocation(line: 282, column: 19, scope: !4647)
!4699 = !DILocation(line: 282, column: 5, scope: !4647)
!4700 = !DILocation(line: 282, column: 8, scope: !4647)
!4701 = !DILocation(line: 282, column: 17, scope: !4647)
!4702 = !DILocation(line: 283, column: 1, scope: !4647)
!4703 = distinct !DISubprogram(name: "flush_put_bits", scope: !2102, file: !2102, line: 101, type: !4704, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4704 = !DISubroutineType(types: !4705)
!4705 = !{null, !4537}
!4706 = !DILocalVariable(name: "s", arg: 1, scope: !4703, file: !2102, line: 101, type: !4537)
!4707 = !DILocation(line: 101, column: 50, scope: !4703)
!4708 = !DILocation(line: 107, column: 5, scope: !4703)
!4709 = !DILocation(line: 107, column: 12, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4703, file: !2102, discriminator: 1)
!4711 = !DILocation(line: 107, column: 15, scope: !4710)
!4712 = !DILocation(line: 107, column: 24, scope: !4710)
!4713 = !DILocation(line: 107, column: 5, scope: !4710)
!4714 = !DILocation(line: 108, column: 9, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4703, file: !2102, line: 107, column: 30)
!4716 = distinct !{!4716, !4714}
!4717 = !DILocation(line: 108, column: 20, scope: !4718)
!4718 = !DILexicalBlockFile(scope: !4719, file: !2102, discriminator: 1)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !2102, line: 108, column: 18)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !2102, line: 108, column: 12)
!4721 = !DILocation(line: 108, column: 23, scope: !4718)
!4722 = !DILocation(line: 108, column: 33, scope: !4718)
!4723 = !DILocation(line: 108, column: 36, scope: !4718)
!4724 = !DILocation(line: 108, column: 31, scope: !4718)
!4725 = !DILocation(line: 108, column: 18, scope: !4718)
!4726 = !DILocation(line: 108, column: 48, scope: !4727)
!4727 = !DILexicalBlockFile(scope: !4728, file: !2102, discriminator: 2)
!4728 = distinct !DILexicalBlock(scope: !4719, file: !2102, line: 108, column: 46)
!4729 = !DILocation(line: 108, column: 105, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4727, file: !2102, discriminator: 4)
!4731 = !DILocation(line: 108, column: 105, scope: !4727)
!4732 = !DILocation(line: 108, column: 116, scope: !4733)
!4733 = !DILexicalBlockFile(scope: !4720, file: !2102, discriminator: 3)
!4734 = !DILocation(line: 110, column: 25, scope: !4715)
!4735 = !DILocation(line: 110, column: 28, scope: !4715)
!4736 = !DILocation(line: 110, column: 10, scope: !4715)
!4737 = !DILocation(line: 110, column: 13, scope: !4715)
!4738 = !DILocation(line: 110, column: 20, scope: !4715)
!4739 = !DILocation(line: 110, column: 23, scope: !4715)
!4740 = !DILocation(line: 111, column: 9, scope: !4715)
!4741 = !DILocation(line: 111, column: 12, scope: !4715)
!4742 = !DILocation(line: 111, column: 20, scope: !4715)
!4743 = !DILocation(line: 116, column: 9, scope: !4715)
!4744 = !DILocation(line: 116, column: 12, scope: !4715)
!4745 = !DILocation(line: 116, column: 21, scope: !4715)
!4746 = !DILocation(line: 107, column: 5, scope: !4747)
!4747 = !DILexicalBlockFile(scope: !4703, file: !2102, discriminator: 2)
!4748 = distinct !{!4748, !4708}
!4749 = !DILocation(line: 118, column: 5, scope: !4703)
!4750 = !DILocation(line: 118, column: 8, scope: !4703)
!4751 = !DILocation(line: 118, column: 17, scope: !4703)
!4752 = !DILocation(line: 119, column: 5, scope: !4703)
!4753 = !DILocation(line: 119, column: 8, scope: !4703)
!4754 = !DILocation(line: 119, column: 16, scope: !4703)
!4755 = !DILocation(line: 120, column: 1, scope: !4703)
!4756 = distinct !DISubprogram(name: "put_bits_count", scope: !2102, file: !2102, line: 85, type: !4757, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!904, !4537}
!4759 = !DILocalVariable(name: "s", arg: 1, scope: !4756, file: !2102, line: 85, type: !4537)
!4760 = !DILocation(line: 85, column: 49, scope: !4756)
!4761 = !DILocation(line: 87, column: 13, scope: !4756)
!4762 = !DILocation(line: 87, column: 16, scope: !4756)
!4763 = !DILocation(line: 87, column: 26, scope: !4756)
!4764 = !DILocation(line: 87, column: 29, scope: !4756)
!4765 = !DILocation(line: 87, column: 24, scope: !4756)
!4766 = !DILocation(line: 87, column: 34, scope: !4756)
!4767 = !DILocation(line: 87, column: 38, scope: !4756)
!4768 = !DILocation(line: 87, column: 45, scope: !4756)
!4769 = !DILocation(line: 87, column: 48, scope: !4756)
!4770 = !DILocation(line: 87, column: 43, scope: !4756)
!4771 = !DILocation(line: 87, column: 12, scope: !4756)
!4772 = !DILocation(line: 87, column: 5, scope: !4756)
!4773 = distinct !DISubprogram(name: "put_codebook_header", scope: !918, file: !918, line: 484, type: !4774, isLocal: true, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{null, !4537, !1740}
!4776 = !DILocalVariable(name: "pb", arg: 1, scope: !4773, file: !918, line: 484, type: !4537)
!4777 = !DILocation(line: 484, column: 48, scope: !4773)
!4778 = !DILocalVariable(name: "cb", arg: 2, scope: !4773, file: !918, line: 484, type: !1740)
!4779 = !DILocation(line: 484, column: 73, scope: !4773)
!4780 = !DILocalVariable(name: "i", scope: !4773, file: !918, line: 486, type: !904)
!4781 = !DILocation(line: 486, column: 9, scope: !4773)
!4782 = !DILocalVariable(name: "ordered", scope: !4773, file: !918, line: 487, type: !904)
!4783 = !DILocation(line: 487, column: 9, scope: !4773)
!4784 = !DILocation(line: 489, column: 14, scope: !4773)
!4785 = !DILocation(line: 489, column: 5, scope: !4773)
!4786 = !DILocation(line: 490, column: 14, scope: !4773)
!4787 = !DILocation(line: 490, column: 22, scope: !4773)
!4788 = !DILocation(line: 490, column: 26, scope: !4773)
!4789 = !DILocation(line: 490, column: 5, scope: !4773)
!4790 = !DILocation(line: 491, column: 14, scope: !4773)
!4791 = !DILocation(line: 491, column: 22, scope: !4773)
!4792 = !DILocation(line: 491, column: 26, scope: !4773)
!4793 = !DILocation(line: 491, column: 5, scope: !4773)
!4794 = !DILocation(line: 493, column: 12, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4773, file: !918, line: 493, column: 5)
!4796 = !DILocation(line: 493, column: 10, scope: !4795)
!4797 = !DILocation(line: 493, column: 17, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !4799, file: !918, discriminator: 1)
!4799 = distinct !DILexicalBlock(scope: !4795, file: !918, line: 493, column: 5)
!4800 = !DILocation(line: 493, column: 21, scope: !4798)
!4801 = !DILocation(line: 493, column: 25, scope: !4798)
!4802 = !DILocation(line: 493, column: 19, scope: !4798)
!4803 = !DILocation(line: 493, column: 5, scope: !4798)
!4804 = !DILocation(line: 494, column: 22, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4799, file: !918, line: 494, column: 13)
!4806 = !DILocation(line: 494, column: 13, scope: !4805)
!4807 = !DILocation(line: 494, column: 17, scope: !4805)
!4808 = !DILocation(line: 494, column: 36, scope: !4805)
!4809 = !DILocation(line: 494, column: 37, scope: !4805)
!4810 = !DILocation(line: 494, column: 27, scope: !4805)
!4811 = !DILocation(line: 494, column: 31, scope: !4805)
!4812 = !DILocation(line: 494, column: 25, scope: !4805)
!4813 = !DILocation(line: 494, column: 13, scope: !4799)
!4814 = !DILocation(line: 495, column: 13, scope: !4805)
!4815 = !DILocation(line: 494, column: 39, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4805, file: !918, discriminator: 1)
!4817 = !DILocation(line: 493, column: 36, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4799, file: !918, discriminator: 2)
!4819 = !DILocation(line: 493, column: 5, scope: !4818)
!4820 = distinct !{!4820, !4821}
!4821 = !DILocation(line: 493, column: 5, scope: !4773)
!4822 = !DILocation(line: 496, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4773, file: !918, line: 496, column: 9)
!4824 = !DILocation(line: 496, column: 14, scope: !4823)
!4825 = !DILocation(line: 496, column: 18, scope: !4823)
!4826 = !DILocation(line: 496, column: 11, scope: !4823)
!4827 = !DILocation(line: 496, column: 9, scope: !4773)
!4828 = !DILocation(line: 497, column: 17, scope: !4823)
!4829 = !DILocation(line: 497, column: 9, scope: !4823)
!4830 = !DILocation(line: 499, column: 14, scope: !4773)
!4831 = !DILocation(line: 499, column: 21, scope: !4773)
!4832 = !DILocation(line: 499, column: 5, scope: !4773)
!4833 = !DILocation(line: 500, column: 9, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4773, file: !918, line: 500, column: 9)
!4835 = !DILocation(line: 500, column: 9, scope: !4773)
!4836 = !DILocalVariable(name: "len", scope: !4837, file: !918, line: 501, type: !904)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !918, line: 500, column: 18)
!4838 = !DILocation(line: 501, column: 13, scope: !4837)
!4839 = !DILocation(line: 501, column: 19, scope: !4837)
!4840 = !DILocation(line: 501, column: 23, scope: !4837)
!4841 = !DILocation(line: 502, column: 18, scope: !4837)
!4842 = !DILocation(line: 502, column: 25, scope: !4837)
!4843 = !DILocation(line: 502, column: 29, scope: !4837)
!4844 = !DILocation(line: 502, column: 9, scope: !4837)
!4845 = !DILocation(line: 503, column: 11, scope: !4837)
!4846 = !DILocation(line: 504, column: 9, scope: !4837)
!4847 = !DILocation(line: 504, column: 16, scope: !4848)
!4848 = !DILexicalBlockFile(scope: !4837, file: !918, discriminator: 1)
!4849 = !DILocation(line: 504, column: 20, scope: !4848)
!4850 = !DILocation(line: 504, column: 24, scope: !4848)
!4851 = !DILocation(line: 504, column: 18, scope: !4848)
!4852 = !DILocation(line: 504, column: 9, scope: !4848)
!4853 = !DILocalVariable(name: "j", scope: !4854, file: !918, line: 505, type: !904)
!4854 = distinct !DILexicalBlock(scope: !4837, file: !918, line: 504, column: 34)
!4855 = !DILocation(line: 505, column: 17, scope: !4854)
!4856 = !DILocation(line: 506, column: 20, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !918, line: 506, column: 13)
!4858 = !DILocation(line: 506, column: 18, scope: !4857)
!4859 = !DILocation(line: 506, column: 25, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4861, file: !918, discriminator: 1)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !918, line: 506, column: 13)
!4862 = !DILocation(line: 506, column: 27, scope: !4860)
!4863 = !DILocation(line: 506, column: 26, scope: !4860)
!4864 = !DILocation(line: 506, column: 31, scope: !4860)
!4865 = !DILocation(line: 506, column: 35, scope: !4860)
!4866 = !DILocation(line: 506, column: 29, scope: !4860)
!4867 = !DILocation(line: 506, column: 13, scope: !4860)
!4868 = !DILocation(line: 507, column: 30, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4861, file: !918, line: 507, column: 21)
!4870 = !DILocation(line: 507, column: 32, scope: !4869)
!4871 = !DILocation(line: 507, column: 31, scope: !4869)
!4872 = !DILocation(line: 507, column: 21, scope: !4869)
!4873 = !DILocation(line: 507, column: 25, scope: !4869)
!4874 = !DILocation(line: 507, column: 38, scope: !4869)
!4875 = !DILocation(line: 507, column: 35, scope: !4869)
!4876 = !DILocation(line: 507, column: 21, scope: !4861)
!4877 = !DILocation(line: 508, column: 21, scope: !4869)
!4878 = !DILocation(line: 507, column: 38, scope: !4879)
!4879 = !DILexicalBlockFile(scope: !4869, file: !918, discriminator: 1)
!4880 = !DILocation(line: 506, column: 46, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4861, file: !918, discriminator: 2)
!4882 = !DILocation(line: 506, column: 13, scope: !4881)
!4883 = distinct !{!4883, !4884}
!4884 = !DILocation(line: 506, column: 13, scope: !4854)
!4885 = !DILocation(line: 509, column: 22, scope: !4854)
!4886 = !DILocation(line: 509, column: 50, scope: !4854)
!4887 = !DILocation(line: 509, column: 54, scope: !4854)
!4888 = !DILocation(line: 509, column: 65, scope: !4854)
!4889 = !DILocation(line: 509, column: 63, scope: !4854)
!4890 = !DILocation(line: 509, column: 48, scope: !4854)
!4891 = !DILocation(line: 509, column: 68, scope: !4854)
!4892 = !DILocation(line: 509, column: 32, scope: !4854)
!4893 = !DILocation(line: 509, column: 30, scope: !4854)
!4894 = !DILocation(line: 509, column: 74, scope: !4854)
!4895 = !DILocation(line: 509, column: 13, scope: !4896)
!4896 = !DILexicalBlockFile(scope: !4854, file: !918, discriminator: 1)
!4897 = !DILocation(line: 510, column: 18, scope: !4854)
!4898 = !DILocation(line: 510, column: 15, scope: !4854)
!4899 = !DILocation(line: 511, column: 16, scope: !4854)
!4900 = !DILocation(line: 504, column: 9, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4837, file: !918, discriminator: 2)
!4902 = distinct !{!4902, !4846}
!4903 = !DILocation(line: 513, column: 5, scope: !4837)
!4904 = !DILocalVariable(name: "sparse", scope: !4905, file: !918, line: 514, type: !904)
!4905 = distinct !DILexicalBlock(scope: !4834, file: !918, line: 513, column: 12)
!4906 = !DILocation(line: 514, column: 13, scope: !4905)
!4907 = !DILocation(line: 515, column: 16, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !918, line: 515, column: 9)
!4909 = !DILocation(line: 515, column: 14, scope: !4908)
!4910 = !DILocation(line: 515, column: 21, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !4912, file: !918, discriminator: 1)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !918, line: 515, column: 9)
!4913 = !DILocation(line: 515, column: 25, scope: !4911)
!4914 = !DILocation(line: 515, column: 29, scope: !4911)
!4915 = !DILocation(line: 515, column: 23, scope: !4911)
!4916 = !DILocation(line: 515, column: 9, scope: !4911)
!4917 = !DILocation(line: 516, column: 27, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4912, file: !918, line: 516, column: 17)
!4919 = !DILocation(line: 516, column: 18, scope: !4918)
!4920 = !DILocation(line: 516, column: 22, scope: !4918)
!4921 = !DILocation(line: 516, column: 17, scope: !4912)
!4922 = !DILocation(line: 517, column: 17, scope: !4918)
!4923 = !DILocation(line: 516, column: 28, scope: !4924)
!4924 = !DILexicalBlockFile(scope: !4918, file: !918, discriminator: 1)
!4925 = !DILocation(line: 515, column: 40, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4912, file: !918, discriminator: 2)
!4927 = !DILocation(line: 515, column: 9, scope: !4926)
!4928 = distinct !{!4928, !4929}
!4929 = !DILocation(line: 515, column: 9, scope: !4905)
!4930 = !DILocation(line: 518, column: 13, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4905, file: !918, line: 518, column: 13)
!4932 = !DILocation(line: 518, column: 18, scope: !4931)
!4933 = !DILocation(line: 518, column: 22, scope: !4931)
!4934 = !DILocation(line: 518, column: 15, scope: !4931)
!4935 = !DILocation(line: 518, column: 13, scope: !4905)
!4936 = !DILocation(line: 519, column: 20, scope: !4931)
!4937 = !DILocation(line: 519, column: 13, scope: !4931)
!4938 = !DILocation(line: 520, column: 18, scope: !4905)
!4939 = !DILocation(line: 520, column: 25, scope: !4905)
!4940 = !DILocation(line: 520, column: 9, scope: !4905)
!4941 = !DILocation(line: 522, column: 16, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4905, file: !918, line: 522, column: 9)
!4943 = !DILocation(line: 522, column: 14, scope: !4942)
!4944 = !DILocation(line: 522, column: 21, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4946, file: !918, discriminator: 1)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !918, line: 522, column: 9)
!4947 = !DILocation(line: 522, column: 25, scope: !4945)
!4948 = !DILocation(line: 522, column: 29, scope: !4945)
!4949 = !DILocation(line: 522, column: 23, scope: !4945)
!4950 = !DILocation(line: 522, column: 9, scope: !4945)
!4951 = !DILocation(line: 523, column: 17, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !918, line: 523, column: 17)
!4953 = distinct !DILexicalBlock(scope: !4946, file: !918, line: 522, column: 44)
!4954 = !DILocation(line: 523, column: 17, scope: !4953)
!4955 = !DILocation(line: 524, column: 26, scope: !4952)
!4956 = !DILocation(line: 524, column: 44, scope: !4952)
!4957 = !DILocation(line: 524, column: 35, scope: !4952)
!4958 = !DILocation(line: 524, column: 39, scope: !4952)
!4959 = !DILocation(line: 524, column: 34, scope: !4952)
!4960 = !DILocation(line: 524, column: 33, scope: !4952)
!4961 = !DILocation(line: 524, column: 17, scope: !4952)
!4962 = !DILocation(line: 525, column: 26, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4953, file: !918, line: 525, column: 17)
!4964 = !DILocation(line: 525, column: 17, scope: !4963)
!4965 = !DILocation(line: 525, column: 21, scope: !4963)
!4966 = !DILocation(line: 525, column: 17, scope: !4953)
!4967 = !DILocation(line: 526, column: 26, scope: !4963)
!4968 = !DILocation(line: 526, column: 42, scope: !4963)
!4969 = !DILocation(line: 526, column: 33, scope: !4963)
!4970 = !DILocation(line: 526, column: 37, scope: !4963)
!4971 = !DILocation(line: 526, column: 45, scope: !4963)
!4972 = !DILocation(line: 526, column: 17, scope: !4963)
!4973 = !DILocation(line: 527, column: 9, scope: !4953)
!4974 = !DILocation(line: 522, column: 40, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !4946, file: !918, discriminator: 2)
!4976 = !DILocation(line: 522, column: 9, scope: !4975)
!4977 = distinct !{!4977, !4978}
!4978 = !DILocation(line: 522, column: 9, scope: !4905)
!4979 = !DILocation(line: 530, column: 14, scope: !4773)
!4980 = !DILocation(line: 530, column: 21, scope: !4773)
!4981 = !DILocation(line: 530, column: 25, scope: !4773)
!4982 = !DILocation(line: 530, column: 5, scope: !4773)
!4983 = !DILocation(line: 531, column: 9, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4773, file: !918, line: 531, column: 9)
!4985 = !DILocation(line: 531, column: 13, scope: !4984)
!4986 = !DILocation(line: 531, column: 9, scope: !4773)
!4987 = !DILocalVariable(name: "tmp", scope: !4988, file: !918, line: 532, type: !904)
!4988 = distinct !DILexicalBlock(scope: !4984, file: !918, line: 531, column: 21)
!4989 = !DILocation(line: 532, column: 13, scope: !4988)
!4990 = !DILocation(line: 532, column: 34, scope: !4988)
!4991 = !DILocation(line: 532, column: 38, scope: !4988)
!4992 = !DILocation(line: 532, column: 46, scope: !4988)
!4993 = !DILocation(line: 532, column: 50, scope: !4988)
!4994 = !DILocation(line: 532, column: 63, scope: !4988)
!4995 = !DILocation(line: 532, column: 67, scope: !4988)
!4996 = !DILocation(line: 532, column: 19, scope: !4988)
!4997 = !DILocalVariable(name: "bits", scope: !4988, file: !918, line: 533, type: !904)
!4998 = !DILocation(line: 533, column: 13, scope: !4988)
!4999 = !DILocation(line: 533, column: 44, scope: !4988)
!5000 = !DILocation(line: 533, column: 48, scope: !4988)
!5001 = !DILocation(line: 533, column: 42, scope: !4988)
!5002 = !DILocation(line: 533, column: 62, scope: !4988)
!5003 = !DILocation(line: 533, column: 26, scope: !4988)
!5004 = !DILocation(line: 533, column: 24, scope: !4988)
!5005 = !DILocation(line: 535, column: 16, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4988, file: !918, line: 535, column: 9)
!5007 = !DILocation(line: 535, column: 14, scope: !5006)
!5008 = !DILocation(line: 535, column: 21, scope: !5009)
!5009 = !DILexicalBlockFile(scope: !5010, file: !918, discriminator: 1)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !918, line: 535, column: 9)
!5011 = !DILocation(line: 535, column: 25, scope: !5009)
!5012 = !DILocation(line: 535, column: 23, scope: !5009)
!5013 = !DILocation(line: 535, column: 9, scope: !5009)
!5014 = !DILocation(line: 536, column: 22, scope: !5010)
!5015 = !DILocation(line: 536, column: 69, scope: !5010)
!5016 = !DILocation(line: 536, column: 55, scope: !5010)
!5017 = !DILocation(line: 536, column: 59, scope: !5010)
!5018 = !DILocation(line: 536, column: 53, scope: !5010)
!5019 = !DILocation(line: 536, column: 73, scope: !5010)
!5020 = !DILocation(line: 536, column: 37, scope: !5010)
!5021 = !DILocation(line: 536, column: 35, scope: !5010)
!5022 = !DILocation(line: 536, column: 28, scope: !5010)
!5023 = !DILocation(line: 536, column: 21, scope: !5010)
!5024 = !DILocation(line: 536, column: 82, scope: !5009)
!5025 = !DILocation(line: 536, column: 21, scope: !5009)
!5026 = !DILocation(line: 536, column: 129, scope: !5027)
!5027 = !DILexicalBlockFile(scope: !5010, file: !918, discriminator: 2)
!5028 = !DILocation(line: 536, column: 115, scope: !5027)
!5029 = !DILocation(line: 536, column: 119, scope: !5027)
!5030 = !DILocation(line: 536, column: 113, scope: !5027)
!5031 = !DILocation(line: 536, column: 133, scope: !5027)
!5032 = !DILocation(line: 536, column: 97, scope: !5027)
!5033 = !DILocation(line: 536, column: 95, scope: !5027)
!5034 = !DILocation(line: 536, column: 21, scope: !5027)
!5035 = !DILocation(line: 536, column: 21, scope: !5036)
!5036 = !DILexicalBlockFile(scope: !5010, file: !918, discriminator: 3)
!5037 = !DILocation(line: 536, column: 18, scope: !5036)
!5038 = !DILocation(line: 536, column: 13, scope: !5036)
!5039 = !DILocation(line: 535, column: 31, scope: !5027)
!5040 = !DILocation(line: 535, column: 9, scope: !5027)
!5041 = distinct !{!5041, !5042}
!5042 = !DILocation(line: 535, column: 9, scope: !4988)
!5043 = !DILocation(line: 538, column: 19, scope: !4988)
!5044 = !DILocation(line: 538, column: 23, scope: !4988)
!5045 = !DILocation(line: 538, column: 27, scope: !4988)
!5046 = !DILocation(line: 538, column: 9, scope: !4988)
!5047 = !DILocation(line: 539, column: 19, scope: !4988)
!5048 = !DILocation(line: 539, column: 23, scope: !4988)
!5049 = !DILocation(line: 539, column: 27, scope: !4988)
!5050 = !DILocation(line: 539, column: 9, scope: !4988)
!5051 = !DILocation(line: 541, column: 18, scope: !4988)
!5052 = !DILocation(line: 541, column: 25, scope: !4988)
!5053 = !DILocation(line: 541, column: 30, scope: !4988)
!5054 = !DILocation(line: 541, column: 9, scope: !4988)
!5055 = !DILocation(line: 542, column: 18, scope: !4988)
!5056 = !DILocation(line: 542, column: 25, scope: !4988)
!5057 = !DILocation(line: 542, column: 29, scope: !4988)
!5058 = !DILocation(line: 542, column: 9, scope: !4988)
!5059 = !DILocation(line: 544, column: 16, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4988, file: !918, line: 544, column: 9)
!5061 = !DILocation(line: 544, column: 14, scope: !5060)
!5062 = !DILocation(line: 544, column: 21, scope: !5063)
!5063 = !DILexicalBlockFile(scope: !5064, file: !918, discriminator: 1)
!5064 = distinct !DILexicalBlock(scope: !5060, file: !918, line: 544, column: 9)
!5065 = !DILocation(line: 544, column: 25, scope: !5063)
!5066 = !DILocation(line: 544, column: 23, scope: !5063)
!5067 = !DILocation(line: 544, column: 9, scope: !5063)
!5068 = !DILocation(line: 545, column: 22, scope: !5064)
!5069 = !DILocation(line: 545, column: 26, scope: !5064)
!5070 = !DILocation(line: 545, column: 46, scope: !5064)
!5071 = !DILocation(line: 545, column: 32, scope: !5064)
!5072 = !DILocation(line: 545, column: 36, scope: !5064)
!5073 = !DILocation(line: 545, column: 13, scope: !5064)
!5074 = !DILocation(line: 544, column: 31, scope: !5075)
!5075 = !DILexicalBlockFile(scope: !5064, file: !918, discriminator: 2)
!5076 = !DILocation(line: 544, column: 9, scope: !5075)
!5077 = distinct !{!5077, !5078}
!5078 = !DILocation(line: 544, column: 9, scope: !4988)
!5079 = !DILocation(line: 546, column: 5, scope: !4988)
!5080 = !DILocation(line: 547, column: 1, scope: !4773)
!5081 = distinct !DISubprogram(name: "put_floor_header", scope: !918, file: !918, line: 549, type: !5082, isLocal: true, isDefinition: true, scopeLine: 550, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !4537, !1757}
!5084 = !DILocalVariable(name: "pb", arg: 1, scope: !5081, file: !918, line: 549, type: !4537)
!5085 = !DILocation(line: 549, column: 45, scope: !5081)
!5086 = !DILocalVariable(name: "fc", arg: 2, scope: !5081, file: !918, line: 549, type: !1757)
!5087 = !DILocation(line: 549, column: 67, scope: !5081)
!5088 = !DILocalVariable(name: "i", scope: !5081, file: !918, line: 551, type: !904)
!5089 = !DILocation(line: 551, column: 9, scope: !5081)
!5090 = !DILocation(line: 553, column: 14, scope: !5081)
!5091 = !DILocation(line: 553, column: 5, scope: !5081)
!5092 = !DILocation(line: 555, column: 14, scope: !5081)
!5093 = !DILocation(line: 555, column: 21, scope: !5081)
!5094 = !DILocation(line: 555, column: 25, scope: !5081)
!5095 = !DILocation(line: 555, column: 5, scope: !5081)
!5096 = !DILocation(line: 557, column: 12, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5081, file: !918, line: 557, column: 5)
!5098 = !DILocation(line: 557, column: 10, scope: !5097)
!5099 = !DILocation(line: 557, column: 17, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !5101, file: !918, discriminator: 1)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !918, line: 557, column: 5)
!5102 = !DILocation(line: 557, column: 21, scope: !5100)
!5103 = !DILocation(line: 557, column: 25, scope: !5100)
!5104 = !DILocation(line: 557, column: 19, scope: !5100)
!5105 = !DILocation(line: 557, column: 5, scope: !5100)
!5106 = !DILocation(line: 558, column: 18, scope: !5101)
!5107 = !DILocation(line: 558, column: 48, scope: !5101)
!5108 = !DILocation(line: 558, column: 25, scope: !5101)
!5109 = !DILocation(line: 558, column: 29, scope: !5101)
!5110 = !DILocation(line: 558, column: 9, scope: !5101)
!5111 = !DILocation(line: 557, column: 38, scope: !5112)
!5112 = !DILexicalBlockFile(scope: !5101, file: !918, discriminator: 2)
!5113 = !DILocation(line: 557, column: 5, scope: !5112)
!5114 = distinct !{!5114, !5115}
!5115 = !DILocation(line: 557, column: 5, scope: !5081)
!5116 = !DILocation(line: 560, column: 12, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5081, file: !918, line: 560, column: 5)
!5118 = !DILocation(line: 560, column: 10, scope: !5117)
!5119 = !DILocation(line: 560, column: 17, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !5121, file: !918, discriminator: 1)
!5121 = distinct !DILexicalBlock(scope: !5117, file: !918, line: 560, column: 5)
!5122 = !DILocation(line: 560, column: 21, scope: !5120)
!5123 = !DILocation(line: 560, column: 25, scope: !5120)
!5124 = !DILocation(line: 560, column: 19, scope: !5120)
!5125 = !DILocation(line: 560, column: 5, scope: !5120)
!5126 = !DILocalVariable(name: "j", scope: !5127, file: !918, line: 561, type: !904)
!5127 = distinct !DILexicalBlock(scope: !5121, file: !918, line: 560, column: 40)
!5128 = !DILocation(line: 561, column: 13, scope: !5127)
!5129 = !DILocalVariable(name: "books", scope: !5127, file: !918, line: 561, type: !904)
!5130 = !DILocation(line: 561, column: 16, scope: !5127)
!5131 = !DILocation(line: 563, column: 18, scope: !5127)
!5132 = !DILocation(line: 563, column: 37, scope: !5127)
!5133 = !DILocation(line: 563, column: 25, scope: !5127)
!5134 = !DILocation(line: 563, column: 29, scope: !5127)
!5135 = !DILocation(line: 563, column: 40, scope: !5127)
!5136 = !DILocation(line: 563, column: 44, scope: !5127)
!5137 = !DILocation(line: 563, column: 9, scope: !5127)
!5138 = !DILocation(line: 564, column: 18, scope: !5127)
!5139 = !DILocation(line: 564, column: 37, scope: !5127)
!5140 = !DILocation(line: 564, column: 25, scope: !5127)
!5141 = !DILocation(line: 564, column: 29, scope: !5127)
!5142 = !DILocation(line: 564, column: 40, scope: !5127)
!5143 = !DILocation(line: 564, column: 9, scope: !5127)
!5144 = !DILocation(line: 566, column: 25, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5127, file: !918, line: 566, column: 13)
!5146 = !DILocation(line: 566, column: 13, scope: !5145)
!5147 = !DILocation(line: 566, column: 17, scope: !5145)
!5148 = !DILocation(line: 566, column: 28, scope: !5145)
!5149 = !DILocation(line: 566, column: 13, scope: !5127)
!5150 = !DILocation(line: 567, column: 22, scope: !5145)
!5151 = !DILocation(line: 567, column: 41, scope: !5145)
!5152 = !DILocation(line: 567, column: 29, scope: !5145)
!5153 = !DILocation(line: 567, column: 33, scope: !5145)
!5154 = !DILocation(line: 567, column: 44, scope: !5145)
!5155 = !DILocation(line: 567, column: 13, scope: !5145)
!5156 = !DILocation(line: 569, column: 35, scope: !5127)
!5157 = !DILocation(line: 569, column: 23, scope: !5127)
!5158 = !DILocation(line: 569, column: 27, scope: !5127)
!5159 = !DILocation(line: 569, column: 38, scope: !5127)
!5160 = !DILocation(line: 569, column: 20, scope: !5127)
!5161 = !DILocation(line: 569, column: 15, scope: !5127)
!5162 = !DILocation(line: 571, column: 16, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5127, file: !918, line: 571, column: 9)
!5164 = !DILocation(line: 571, column: 14, scope: !5163)
!5165 = !DILocation(line: 571, column: 21, scope: !5166)
!5166 = !DILexicalBlockFile(scope: !5167, file: !918, discriminator: 1)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !918, line: 571, column: 9)
!5168 = !DILocation(line: 571, column: 25, scope: !5166)
!5169 = !DILocation(line: 571, column: 23, scope: !5166)
!5170 = !DILocation(line: 571, column: 9, scope: !5166)
!5171 = !DILocation(line: 572, column: 22, scope: !5167)
!5172 = !DILocation(line: 572, column: 50, scope: !5167)
!5173 = !DILocation(line: 572, column: 29, scope: !5167)
!5174 = !DILocation(line: 572, column: 41, scope: !5167)
!5175 = !DILocation(line: 572, column: 33, scope: !5167)
!5176 = !DILocation(line: 572, column: 44, scope: !5167)
!5177 = !DILocation(line: 572, column: 53, scope: !5167)
!5178 = !DILocation(line: 572, column: 13, scope: !5167)
!5179 = !DILocation(line: 571, column: 33, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !5167, file: !918, discriminator: 2)
!5181 = !DILocation(line: 571, column: 9, scope: !5180)
!5182 = distinct !{!5182, !5183}
!5183 = !DILocation(line: 571, column: 9, scope: !5127)
!5184 = !DILocation(line: 573, column: 5, scope: !5127)
!5185 = !DILocation(line: 560, column: 36, scope: !5186)
!5186 = !DILexicalBlockFile(scope: !5121, file: !918, discriminator: 2)
!5187 = !DILocation(line: 560, column: 5, scope: !5186)
!5188 = distinct !{!5188, !5189}
!5189 = !DILocation(line: 560, column: 5, scope: !5081)
!5190 = !DILocation(line: 575, column: 14, scope: !5081)
!5191 = !DILocation(line: 575, column: 21, scope: !5081)
!5192 = !DILocation(line: 575, column: 25, scope: !5081)
!5193 = !DILocation(line: 575, column: 36, scope: !5081)
!5194 = !DILocation(line: 575, column: 5, scope: !5081)
!5195 = !DILocation(line: 576, column: 14, scope: !5081)
!5196 = !DILocation(line: 576, column: 21, scope: !5081)
!5197 = !DILocation(line: 576, column: 25, scope: !5081)
!5198 = !DILocation(line: 576, column: 5, scope: !5081)
!5199 = !DILocation(line: 578, column: 12, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5081, file: !918, line: 578, column: 5)
!5201 = !DILocation(line: 578, column: 10, scope: !5200)
!5202 = !DILocation(line: 578, column: 17, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5204, file: !918, discriminator: 1)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !918, line: 578, column: 5)
!5205 = !DILocation(line: 578, column: 21, scope: !5203)
!5206 = !DILocation(line: 578, column: 25, scope: !5203)
!5207 = !DILocation(line: 578, column: 19, scope: !5203)
!5208 = !DILocation(line: 578, column: 5, scope: !5203)
!5209 = !DILocation(line: 579, column: 18, scope: !5204)
!5210 = !DILocation(line: 579, column: 22, scope: !5204)
!5211 = !DILocation(line: 579, column: 26, scope: !5204)
!5212 = !DILocation(line: 579, column: 46, scope: !5204)
!5213 = !DILocation(line: 579, column: 37, scope: !5204)
!5214 = !DILocation(line: 579, column: 41, scope: !5204)
!5215 = !DILocation(line: 579, column: 49, scope: !5204)
!5216 = !DILocation(line: 579, column: 9, scope: !5204)
!5217 = !DILocation(line: 578, column: 34, scope: !5218)
!5218 = !DILexicalBlockFile(scope: !5204, file: !918, discriminator: 2)
!5219 = !DILocation(line: 578, column: 5, scope: !5218)
!5220 = distinct !{!5220, !5221}
!5221 = !DILocation(line: 578, column: 5, scope: !5081)
!5222 = !DILocation(line: 580, column: 1, scope: !5081)
!5223 = distinct !DISubprogram(name: "put_residue_header", scope: !918, file: !918, line: 582, type: !5224, isLocal: true, isDefinition: true, scopeLine: 583, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{null, !4537, !1788}
!5226 = !DILocalVariable(name: "pb", arg: 1, scope: !5223, file: !918, line: 582, type: !4537)
!5227 = !DILocation(line: 582, column: 47, scope: !5223)
!5228 = !DILocalVariable(name: "rc", arg: 2, scope: !5223, file: !918, line: 582, type: !1788)
!5229 = !DILocation(line: 582, column: 71, scope: !5223)
!5230 = !DILocalVariable(name: "i", scope: !5223, file: !918, line: 584, type: !904)
!5231 = !DILocation(line: 584, column: 9, scope: !5223)
!5232 = !DILocation(line: 586, column: 14, scope: !5223)
!5233 = !DILocation(line: 586, column: 22, scope: !5223)
!5234 = !DILocation(line: 586, column: 26, scope: !5223)
!5235 = !DILocation(line: 586, column: 5, scope: !5223)
!5236 = !DILocation(line: 588, column: 14, scope: !5223)
!5237 = !DILocation(line: 588, column: 22, scope: !5223)
!5238 = !DILocation(line: 588, column: 26, scope: !5223)
!5239 = !DILocation(line: 588, column: 5, scope: !5223)
!5240 = !DILocation(line: 589, column: 14, scope: !5223)
!5241 = !DILocation(line: 589, column: 22, scope: !5223)
!5242 = !DILocation(line: 589, column: 26, scope: !5223)
!5243 = !DILocation(line: 589, column: 5, scope: !5223)
!5244 = !DILocation(line: 590, column: 14, scope: !5223)
!5245 = !DILocation(line: 590, column: 22, scope: !5223)
!5246 = !DILocation(line: 590, column: 26, scope: !5223)
!5247 = !DILocation(line: 590, column: 41, scope: !5223)
!5248 = !DILocation(line: 590, column: 5, scope: !5223)
!5249 = !DILocation(line: 591, column: 14, scope: !5223)
!5250 = !DILocation(line: 591, column: 21, scope: !5223)
!5251 = !DILocation(line: 591, column: 25, scope: !5223)
!5252 = !DILocation(line: 591, column: 41, scope: !5223)
!5253 = !DILocation(line: 591, column: 5, scope: !5223)
!5254 = !DILocation(line: 592, column: 14, scope: !5223)
!5255 = !DILocation(line: 592, column: 21, scope: !5223)
!5256 = !DILocation(line: 592, column: 25, scope: !5223)
!5257 = !DILocation(line: 592, column: 5, scope: !5223)
!5258 = !DILocation(line: 594, column: 12, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5223, file: !918, line: 594, column: 5)
!5260 = !DILocation(line: 594, column: 10, scope: !5259)
!5261 = !DILocation(line: 594, column: 17, scope: !5262)
!5262 = !DILexicalBlockFile(scope: !5263, file: !918, discriminator: 1)
!5263 = distinct !DILexicalBlock(scope: !5259, file: !918, line: 594, column: 5)
!5264 = !DILocation(line: 594, column: 21, scope: !5262)
!5265 = !DILocation(line: 594, column: 25, scope: !5262)
!5266 = !DILocation(line: 594, column: 19, scope: !5262)
!5267 = !DILocation(line: 594, column: 5, scope: !5262)
!5268 = !DILocalVariable(name: "j", scope: !5269, file: !918, line: 595, type: !904)
!5269 = distinct !DILexicalBlock(scope: !5263, file: !918, line: 594, column: 47)
!5270 = !DILocation(line: 595, column: 13, scope: !5269)
!5271 = !DILocalVariable(name: "tmp", scope: !5269, file: !918, line: 595, type: !904)
!5272 = !DILocation(line: 595, column: 16, scope: !5269)
!5273 = !DILocation(line: 596, column: 16, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5269, file: !918, line: 596, column: 9)
!5275 = !DILocation(line: 596, column: 14, scope: !5274)
!5276 = !DILocation(line: 596, column: 21, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !5278, file: !918, discriminator: 1)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !918, line: 596, column: 9)
!5279 = !DILocation(line: 596, column: 23, scope: !5277)
!5280 = !DILocation(line: 596, column: 9, scope: !5277)
!5281 = !DILocation(line: 597, column: 34, scope: !5278)
!5282 = !DILocation(line: 597, column: 21, scope: !5278)
!5283 = !DILocation(line: 597, column: 31, scope: !5278)
!5284 = !DILocation(line: 597, column: 25, scope: !5278)
!5285 = !DILocation(line: 597, column: 37, scope: !5278)
!5286 = !DILocation(line: 597, column: 47, scope: !5278)
!5287 = !DILocation(line: 597, column: 44, scope: !5278)
!5288 = !DILocation(line: 597, column: 17, scope: !5278)
!5289 = !DILocation(line: 597, column: 13, scope: !5278)
!5290 = !DILocation(line: 596, column: 29, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5278, file: !918, discriminator: 2)
!5292 = !DILocation(line: 596, column: 9, scope: !5291)
!5293 = distinct !{!5293, !5294}
!5294 = !DILocation(line: 596, column: 9, scope: !5269)
!5295 = !DILocation(line: 599, column: 18, scope: !5269)
!5296 = !DILocation(line: 599, column: 25, scope: !5269)
!5297 = !DILocation(line: 599, column: 29, scope: !5269)
!5298 = !DILocation(line: 599, column: 9, scope: !5269)
!5299 = !DILocation(line: 600, column: 18, scope: !5269)
!5300 = !DILocation(line: 600, column: 25, scope: !5269)
!5301 = !DILocation(line: 600, column: 29, scope: !5269)
!5302 = !DILocation(line: 600, column: 9, scope: !5269)
!5303 = !DILocation(line: 602, column: 13, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5269, file: !918, line: 602, column: 13)
!5305 = !DILocation(line: 602, column: 17, scope: !5304)
!5306 = !DILocation(line: 602, column: 13, scope: !5269)
!5307 = !DILocation(line: 603, column: 22, scope: !5304)
!5308 = !DILocation(line: 603, column: 29, scope: !5304)
!5309 = !DILocation(line: 603, column: 33, scope: !5304)
!5310 = !DILocation(line: 603, column: 13, scope: !5304)
!5311 = !DILocation(line: 604, column: 5, scope: !5269)
!5312 = !DILocation(line: 594, column: 43, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !5263, file: !918, discriminator: 2)
!5314 = !DILocation(line: 594, column: 5, scope: !5313)
!5315 = distinct !{!5315, !5316}
!5316 = !DILocation(line: 594, column: 5, scope: !5223)
!5317 = !DILocation(line: 606, column: 12, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5223, file: !918, line: 606, column: 5)
!5319 = !DILocation(line: 606, column: 10, scope: !5318)
!5320 = !DILocation(line: 606, column: 17, scope: !5321)
!5321 = !DILexicalBlockFile(scope: !5322, file: !918, discriminator: 1)
!5322 = distinct !DILexicalBlock(scope: !5318, file: !918, line: 606, column: 5)
!5323 = !DILocation(line: 606, column: 21, scope: !5321)
!5324 = !DILocation(line: 606, column: 25, scope: !5321)
!5325 = !DILocation(line: 606, column: 19, scope: !5321)
!5326 = !DILocation(line: 606, column: 5, scope: !5321)
!5327 = !DILocalVariable(name: "j", scope: !5328, file: !918, line: 607, type: !904)
!5328 = distinct !DILexicalBlock(scope: !5322, file: !918, line: 606, column: 47)
!5329 = !DILocation(line: 607, column: 13, scope: !5328)
!5330 = !DILocation(line: 608, column: 16, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5328, file: !918, line: 608, column: 9)
!5332 = !DILocation(line: 608, column: 14, scope: !5331)
!5333 = !DILocation(line: 608, column: 21, scope: !5334)
!5334 = !DILexicalBlockFile(scope: !5335, file: !918, discriminator: 1)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !918, line: 608, column: 9)
!5336 = !DILocation(line: 608, column: 23, scope: !5334)
!5337 = !DILocation(line: 608, column: 9, scope: !5334)
!5338 = !DILocation(line: 609, column: 30, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5335, file: !918, line: 609, column: 17)
!5340 = !DILocation(line: 609, column: 17, scope: !5339)
!5341 = !DILocation(line: 609, column: 27, scope: !5339)
!5342 = !DILocation(line: 609, column: 21, scope: !5339)
!5343 = !DILocation(line: 609, column: 33, scope: !5339)
!5344 = !DILocation(line: 609, column: 17, scope: !5335)
!5345 = !DILocation(line: 610, column: 26, scope: !5339)
!5346 = !DILocation(line: 610, column: 46, scope: !5339)
!5347 = !DILocation(line: 610, column: 33, scope: !5339)
!5348 = !DILocation(line: 610, column: 43, scope: !5339)
!5349 = !DILocation(line: 610, column: 37, scope: !5339)
!5350 = !DILocation(line: 610, column: 17, scope: !5339)
!5351 = !DILocation(line: 609, column: 37, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !5339, file: !918, discriminator: 1)
!5353 = !DILocation(line: 608, column: 29, scope: !5354)
!5354 = !DILexicalBlockFile(scope: !5335, file: !918, discriminator: 2)
!5355 = !DILocation(line: 608, column: 9, scope: !5354)
!5356 = distinct !{!5356, !5357}
!5357 = !DILocation(line: 608, column: 9, scope: !5328)
!5358 = !DILocation(line: 611, column: 5, scope: !5328)
!5359 = !DILocation(line: 606, column: 43, scope: !5360)
!5360 = !DILexicalBlockFile(scope: !5322, file: !918, discriminator: 2)
!5361 = !DILocation(line: 606, column: 5, scope: !5360)
!5362 = distinct !{!5362, !5363}
!5363 = !DILocation(line: 606, column: 5, scope: !5223)
!5364 = !DILocation(line: 612, column: 1, scope: !5223)
!5365 = distinct !DISubprogram(name: "put_float", scope: !918, file: !918, line: 470, type: !5366, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !4537, !898}
!5368 = !DILocalVariable(name: "pb", arg: 1, scope: !5365, file: !918, line: 470, type: !4537)
!5369 = !DILocation(line: 470, column: 38, scope: !5365)
!5370 = !DILocalVariable(name: "f", arg: 2, scope: !5365, file: !918, line: 470, type: !898)
!5371 = !DILocation(line: 470, column: 48, scope: !5365)
!5372 = !DILocalVariable(name: "exp", scope: !5365, file: !918, line: 472, type: !904)
!5373 = !DILocation(line: 472, column: 9, scope: !5365)
!5374 = !DILocalVariable(name: "mant", scope: !5365, file: !918, line: 472, type: !904)
!5375 = !DILocation(line: 472, column: 14, scope: !5365)
!5376 = !DILocalVariable(name: "res", scope: !5365, file: !918, line: 473, type: !912)
!5377 = !DILocation(line: 473, column: 14, scope: !5365)
!5378 = !DILocation(line: 474, column: 29, scope: !5365)
!5379 = !DILocation(line: 474, column: 23, scope: !5365)
!5380 = !DILocation(line: 474, column: 17, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !5365, file: !918, discriminator: 1)
!5382 = !DILocation(line: 474, column: 12, scope: !5365)
!5383 = !DILocation(line: 474, column: 10, scope: !5365)
!5384 = !DILocation(line: 475, column: 9, scope: !5365)
!5385 = !DILocation(line: 476, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5365, file: !918, line: 476, column: 9)
!5387 = !DILocation(line: 476, column: 14, scope: !5386)
!5388 = !DILocation(line: 476, column: 9, scope: !5365)
!5389 = !DILocation(line: 477, column: 13, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !918, line: 476, column: 19)
!5391 = !DILocation(line: 478, column: 17, scope: !5390)
!5392 = !DILocation(line: 478, column: 16, scope: !5390)
!5393 = !DILocation(line: 478, column: 14, scope: !5390)
!5394 = !DILocation(line: 479, column: 5, scope: !5390)
!5395 = !DILocation(line: 480, column: 12, scope: !5365)
!5396 = !DILocation(line: 480, column: 20, scope: !5365)
!5397 = !DILocation(line: 480, column: 24, scope: !5365)
!5398 = !DILocation(line: 480, column: 17, scope: !5365)
!5399 = !DILocation(line: 480, column: 9, scope: !5365)
!5400 = !DILocation(line: 481, column: 16, scope: !5365)
!5401 = !DILocation(line: 481, column: 20, scope: !5365)
!5402 = !DILocation(line: 481, column: 5, scope: !5365)
!5403 = !DILocation(line: 482, column: 1, scope: !5365)
!5404 = distinct !DISubprogram(name: "ff_bufqueue_add", scope: !1730, file: !1730, line: 71, type: !5405, isLocal: true, isDefinition: true, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5405 = !DISubroutineType(types: !5406)
!5406 = !{null, !906, !5407, !1031}
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!5408 = !DILocalVariable(name: "log", arg: 1, scope: !5404, file: !1730, line: 71, type: !906)
!5409 = !DILocation(line: 71, column: 42, scope: !5404)
!5410 = !DILocalVariable(name: "queue", arg: 2, scope: !5404, file: !1730, line: 71, type: !5407)
!5411 = !DILocation(line: 71, column: 66, scope: !5404)
!5412 = !DILocalVariable(name: "buf", arg: 3, scope: !5404, file: !1730, line: 72, type: !1031)
!5413 = !DILocation(line: 72, column: 45, scope: !5404)
!5414 = !DILocation(line: 74, column: 29, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5404, file: !1730, line: 74, column: 9)
!5416 = !DILocation(line: 74, column: 9, scope: !5415)
!5417 = !DILocation(line: 74, column: 9, scope: !5404)
!5418 = !DILocation(line: 75, column: 16, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5415, file: !1730, line: 74, column: 37)
!5420 = !DILocation(line: 75, column: 9, scope: !5419)
!5421 = !DILocation(line: 76, column: 38, scope: !5419)
!5422 = !DILocation(line: 76, column: 45, scope: !5419)
!5423 = !DILocation(line: 76, column: 55, scope: !5419)
!5424 = !DILocation(line: 76, column: 62, scope: !5419)
!5425 = !DILocation(line: 76, column: 53, scope: !5419)
!5426 = !DILocation(line: 76, column: 52, scope: !5419)
!5427 = !DILocation(line: 76, column: 50, scope: !5419)
!5428 = !DILocation(line: 76, column: 74, scope: !5419)
!5429 = !DILocation(line: 76, column: 24, scope: !5419)
!5430 = !DILocation(line: 76, column: 31, scope: !5419)
!5431 = !DILocation(line: 76, column: 9, scope: !5419)
!5432 = !DILocation(line: 77, column: 5, scope: !5419)
!5433 = !DILocation(line: 78, column: 63, scope: !5404)
!5434 = !DILocation(line: 78, column: 19, scope: !5404)
!5435 = !DILocation(line: 78, column: 26, scope: !5404)
!5436 = !DILocation(line: 78, column: 34, scope: !5404)
!5437 = !DILocation(line: 78, column: 41, scope: !5404)
!5438 = !DILocation(line: 78, column: 50, scope: !5404)
!5439 = !DILocation(line: 78, column: 33, scope: !5404)
!5440 = !DILocation(line: 78, column: 31, scope: !5404)
!5441 = !DILocation(line: 78, column: 55, scope: !5404)
!5442 = !DILocation(line: 78, column: 5, scope: !5404)
!5443 = !DILocation(line: 78, column: 12, scope: !5404)
!5444 = !DILocation(line: 78, column: 61, scope: !5404)
!5445 = !DILocation(line: 79, column: 1, scope: !5404)
!5446 = distinct !DISubprogram(name: "spawn_empty_frame", scope: !918, file: !918, line: 1026, type: !5447, isLocal: true, isDefinition: true, scopeLine: 1027, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{!1031, !1009, !904}
!5449 = !DILocalVariable(name: "avctx", arg: 1, scope: !5446, file: !918, line: 1026, type: !1009)
!5450 = !DILocation(line: 1026, column: 51, scope: !5446)
!5451 = !DILocalVariable(name: "channels", arg: 2, scope: !5446, file: !918, line: 1026, type: !904)
!5452 = !DILocation(line: 1026, column: 62, scope: !5446)
!5453 = !DILocalVariable(name: "f", scope: !5446, file: !918, line: 1028, type: !1031)
!5454 = !DILocation(line: 1028, column: 14, scope: !5446)
!5455 = !DILocation(line: 1028, column: 18, scope: !5446)
!5456 = !DILocalVariable(name: "ch", scope: !5446, file: !918, line: 1029, type: !904)
!5457 = !DILocation(line: 1029, column: 9, scope: !5446)
!5458 = !DILocation(line: 1031, column: 10, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5446, file: !918, line: 1031, column: 9)
!5460 = !DILocation(line: 1031, column: 9, scope: !5446)
!5461 = !DILocation(line: 1032, column: 9, scope: !5459)
!5462 = !DILocation(line: 1034, column: 17, scope: !5446)
!5463 = !DILocation(line: 1034, column: 24, scope: !5446)
!5464 = !DILocation(line: 1034, column: 5, scope: !5446)
!5465 = !DILocation(line: 1034, column: 8, scope: !5446)
!5466 = !DILocation(line: 1034, column: 15, scope: !5446)
!5467 = !DILocation(line: 1035, column: 21, scope: !5446)
!5468 = !DILocation(line: 1035, column: 28, scope: !5446)
!5469 = !DILocation(line: 1035, column: 5, scope: !5446)
!5470 = !DILocation(line: 1035, column: 8, scope: !5446)
!5471 = !DILocation(line: 1035, column: 19, scope: !5446)
!5472 = !DILocation(line: 1036, column: 25, scope: !5446)
!5473 = !DILocation(line: 1036, column: 32, scope: !5446)
!5474 = !DILocation(line: 1036, column: 5, scope: !5446)
!5475 = !DILocation(line: 1036, column: 8, scope: !5446)
!5476 = !DILocation(line: 1036, column: 23, scope: !5446)
!5477 = !DILocation(line: 1038, column: 29, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5446, file: !918, line: 1038, column: 9)
!5479 = !DILocation(line: 1038, column: 9, scope: !5478)
!5480 = !DILocation(line: 1038, column: 9, scope: !5446)
!5481 = !DILocation(line: 1039, column: 9, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5478, file: !918, line: 1038, column: 36)
!5483 = !DILocation(line: 1040, column: 9, scope: !5482)
!5484 = !DILocation(line: 1043, column: 13, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5446, file: !918, line: 1043, column: 5)
!5486 = !DILocation(line: 1043, column: 10, scope: !5485)
!5487 = !DILocation(line: 1043, column: 18, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !5489, file: !918, discriminator: 1)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !918, line: 1043, column: 5)
!5490 = !DILocation(line: 1043, column: 23, scope: !5488)
!5491 = !DILocation(line: 1043, column: 21, scope: !5488)
!5492 = !DILocation(line: 1043, column: 5, scope: !5488)
!5493 = !DILocalVariable(name: "bps", scope: !5494, file: !918, line: 1044, type: !1122)
!5494 = distinct !DILexicalBlock(scope: !5489, file: !918, line: 1043, column: 39)
!5495 = !DILocation(line: 1044, column: 16, scope: !5494)
!5496 = !DILocation(line: 1044, column: 46, scope: !5494)
!5497 = !DILocation(line: 1044, column: 49, scope: !5494)
!5498 = !DILocation(line: 1044, column: 22, scope: !5494)
!5499 = !DILocation(line: 1045, column: 33, scope: !5494)
!5500 = !DILocation(line: 1045, column: 16, scope: !5494)
!5501 = !DILocation(line: 1045, column: 19, scope: !5494)
!5502 = !DILocation(line: 1045, column: 41, scope: !5494)
!5503 = !DILocation(line: 1045, column: 47, scope: !5494)
!5504 = !DILocation(line: 1045, column: 50, scope: !5494)
!5505 = !DILocation(line: 1045, column: 45, scope: !5494)
!5506 = !DILocation(line: 1045, column: 9, scope: !5494)
!5507 = !DILocation(line: 1046, column: 5, scope: !5494)
!5508 = !DILocation(line: 1043, column: 35, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5489, file: !918, discriminator: 2)
!5510 = !DILocation(line: 1043, column: 5, scope: !5509)
!5511 = distinct !{!5511, !5512}
!5512 = !DILocation(line: 1043, column: 5, scope: !5446)
!5513 = !DILocation(line: 1047, column: 12, scope: !5446)
!5514 = !DILocation(line: 1047, column: 5, scope: !5446)
!5515 = !DILocation(line: 1048, column: 1, scope: !5446)
!5516 = distinct !DISubprogram(name: "move_audio", scope: !918, file: !918, line: 1051, type: !5517, isLocal: true, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{null, !1644, !904}
!5519 = !DILocalVariable(name: "venc", arg: 1, scope: !5516, file: !918, line: 1051, type: !1644)
!5520 = !DILocation(line: 1051, column: 44, scope: !5516)
!5521 = !DILocalVariable(name: "sf_size", arg: 2, scope: !5516, file: !918, line: 1051, type: !904)
!5522 = !DILocation(line: 1051, column: 54, scope: !5516)
!5523 = !DILocalVariable(name: "cur", scope: !5516, file: !918, line: 1053, type: !1031)
!5524 = !DILocation(line: 1053, column: 14, scope: !5516)
!5525 = !DILocalVariable(name: "frame_size", scope: !5516, file: !918, line: 1054, type: !904)
!5526 = !DILocation(line: 1054, column: 9, scope: !5516)
!5527 = !DILocation(line: 1054, column: 28, scope: !5516)
!5528 = !DILocation(line: 1054, column: 34, scope: !5516)
!5529 = !DILocation(line: 1054, column: 52, scope: !5516)
!5530 = !DILocation(line: 1054, column: 24, scope: !5516)
!5531 = !DILocalVariable(name: "subframes", scope: !5516, file: !918, line: 1055, type: !904)
!5532 = !DILocation(line: 1055, column: 9, scope: !5516)
!5533 = !DILocation(line: 1055, column: 21, scope: !5516)
!5534 = !DILocation(line: 1055, column: 34, scope: !5516)
!5535 = !DILocation(line: 1055, column: 32, scope: !5516)
!5536 = !DILocalVariable(name: "sf", scope: !5516, file: !918, line: 1056, type: !904)
!5537 = !DILocation(line: 1056, column: 9, scope: !5516)
!5538 = !DILocalVariable(name: "ch", scope: !5516, file: !918, line: 1056, type: !904)
!5539 = !DILocation(line: 1056, column: 13, scope: !5516)
!5540 = !DILocation(line: 1059, column: 9, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5516, file: !918, line: 1059, column: 9)
!5542 = !DILocation(line: 1059, column: 15, scope: !5541)
!5543 = !DILocation(line: 1059, column: 9, scope: !5516)
!5544 = !DILocation(line: 1060, column: 17, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5541, file: !918, line: 1060, column: 9)
!5546 = !DILocation(line: 1060, column: 14, scope: !5545)
!5547 = !DILocation(line: 1060, column: 22, scope: !5548)
!5548 = !DILexicalBlockFile(scope: !5549, file: !918, discriminator: 1)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !918, line: 1060, column: 9)
!5550 = !DILocation(line: 1060, column: 27, scope: !5548)
!5551 = !DILocation(line: 1060, column: 33, scope: !5548)
!5552 = !DILocation(line: 1060, column: 25, scope: !5548)
!5553 = !DILocation(line: 1060, column: 9, scope: !5548)
!5554 = !DILocation(line: 1061, column: 20, scope: !5549)
!5555 = !DILocation(line: 1061, column: 26, scope: !5549)
!5556 = !DILocation(line: 1061, column: 40, scope: !5549)
!5557 = !DILocation(line: 1061, column: 38, scope: !5549)
!5558 = !DILocation(line: 1061, column: 45, scope: !5549)
!5559 = !DILocation(line: 1061, column: 43, scope: !5549)
!5560 = !DILocation(line: 1061, column: 34, scope: !5549)
!5561 = !DILocation(line: 1061, column: 13, scope: !5549)
!5562 = !DILocation(line: 1062, column: 20, scope: !5549)
!5563 = !DILocation(line: 1062, column: 26, scope: !5549)
!5564 = !DILocation(line: 1062, column: 34, scope: !5549)
!5565 = !DILocation(line: 1062, column: 39, scope: !5549)
!5566 = !DILocation(line: 1062, column: 37, scope: !5549)
!5567 = !DILocation(line: 1062, column: 32, scope: !5549)
!5568 = !DILocation(line: 1062, column: 67, scope: !5549)
!5569 = !DILocation(line: 1062, column: 65, scope: !5549)
!5570 = !DILocation(line: 1060, column: 45, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5549, file: !918, discriminator: 2)
!5572 = !DILocation(line: 1060, column: 9, scope: !5571)
!5573 = distinct !{!5573, !5574}
!5574 = !DILocation(line: 1060, column: 9, scope: !5541)
!5575 = !DILocation(line: 1062, column: 77, scope: !5576)
!5576 = !DILexicalBlockFile(scope: !5545, file: !918, discriminator: 1)
!5577 = !DILocation(line: 1064, column: 17, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5541, file: !918, line: 1064, column: 9)
!5579 = !DILocation(line: 1064, column: 14, scope: !5578)
!5580 = !DILocation(line: 1064, column: 22, scope: !5581)
!5581 = !DILexicalBlockFile(scope: !5582, file: !918, discriminator: 1)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !918, line: 1064, column: 9)
!5583 = !DILocation(line: 1064, column: 27, scope: !5581)
!5584 = !DILocation(line: 1064, column: 33, scope: !5581)
!5585 = !DILocation(line: 1064, column: 25, scope: !5581)
!5586 = !DILocation(line: 1064, column: 9, scope: !5581)
!5587 = !DILocation(line: 1065, column: 20, scope: !5582)
!5588 = !DILocation(line: 1065, column: 26, scope: !5582)
!5589 = !DILocation(line: 1065, column: 40, scope: !5582)
!5590 = !DILocation(line: 1065, column: 38, scope: !5582)
!5591 = !DILocation(line: 1065, column: 45, scope: !5582)
!5592 = !DILocation(line: 1065, column: 43, scope: !5582)
!5593 = !DILocation(line: 1065, column: 34, scope: !5582)
!5594 = !DILocation(line: 1065, column: 13, scope: !5582)
!5595 = !DILocation(line: 1065, column: 76, scope: !5582)
!5596 = !DILocation(line: 1065, column: 74, scope: !5582)
!5597 = !DILocation(line: 1064, column: 45, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5582, file: !918, discriminator: 2)
!5599 = !DILocation(line: 1064, column: 9, scope: !5598)
!5600 = distinct !{!5600, !5601}
!5601 = !DILocation(line: 1064, column: 9, scope: !5541)
!5602 = !DILocation(line: 1067, column: 13, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5516, file: !918, line: 1067, column: 5)
!5604 = !DILocation(line: 1067, column: 10, scope: !5603)
!5605 = !DILocation(line: 1067, column: 18, scope: !5606)
!5606 = !DILexicalBlockFile(scope: !5607, file: !918, discriminator: 1)
!5607 = distinct !DILexicalBlock(scope: !5603, file: !918, line: 1067, column: 5)
!5608 = !DILocation(line: 1067, column: 23, scope: !5606)
!5609 = !DILocation(line: 1067, column: 21, scope: !5606)
!5610 = !DILocation(line: 1067, column: 5, scope: !5606)
!5611 = !DILocation(line: 1068, column: 32, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5607, file: !918, line: 1067, column: 40)
!5613 = !DILocation(line: 1068, column: 38, scope: !5612)
!5614 = !DILocation(line: 1068, column: 15, scope: !5612)
!5615 = !DILocation(line: 1068, column: 13, scope: !5612)
!5616 = !DILocation(line: 1070, column: 17, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5612, file: !918, line: 1070, column: 9)
!5618 = !DILocation(line: 1070, column: 14, scope: !5617)
!5619 = !DILocation(line: 1070, column: 22, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !5621, file: !918, discriminator: 1)
!5621 = distinct !DILexicalBlock(scope: !5617, file: !918, line: 1070, column: 9)
!5622 = !DILocation(line: 1070, column: 27, scope: !5620)
!5623 = !DILocation(line: 1070, column: 33, scope: !5620)
!5624 = !DILocation(line: 1070, column: 25, scope: !5620)
!5625 = !DILocation(line: 1070, column: 9, scope: !5620)
!5626 = !DILocalVariable(name: "offset", scope: !5627, file: !918, line: 1071, type: !915)
!5627 = distinct !DILexicalBlock(scope: !5621, file: !918, line: 1070, column: 49)
!5628 = !DILocation(line: 1071, column: 20, scope: !5627)
!5629 = !DILocation(line: 1071, column: 29, scope: !5627)
!5630 = !DILocation(line: 1071, column: 35, scope: !5627)
!5631 = !DILocation(line: 1071, column: 49, scope: !5627)
!5632 = !DILocation(line: 1071, column: 47, scope: !5627)
!5633 = !DILocation(line: 1071, column: 54, scope: !5627)
!5634 = !DILocation(line: 1071, column: 52, scope: !5627)
!5635 = !DILocation(line: 1071, column: 43, scope: !5627)
!5636 = !DILocation(line: 1071, column: 67, scope: !5627)
!5637 = !DILocation(line: 1071, column: 65, scope: !5627)
!5638 = !DILocalVariable(name: "save", scope: !5627, file: !918, line: 1072, type: !915)
!5639 = !DILocation(line: 1072, column: 20, scope: !5627)
!5640 = !DILocation(line: 1072, column: 27, scope: !5627)
!5641 = !DILocation(line: 1072, column: 33, scope: !5627)
!5642 = !DILocation(line: 1072, column: 41, scope: !5627)
!5643 = !DILocation(line: 1072, column: 46, scope: !5627)
!5644 = !DILocation(line: 1072, column: 44, scope: !5627)
!5645 = !DILocation(line: 1072, column: 39, scope: !5627)
!5646 = !DILocalVariable(name: "input", scope: !5627, file: !918, line: 1073, type: !1702)
!5647 = !DILocation(line: 1073, column: 26, scope: !5627)
!5648 = !DILocation(line: 1073, column: 63, scope: !5627)
!5649 = !DILocation(line: 1073, column: 44, scope: !5627)
!5650 = !DILocation(line: 1073, column: 49, scope: !5627)
!5651 = !DILocation(line: 1073, column: 34, scope: !5627)
!5652 = !DILocalVariable(name: "len", scope: !5627, file: !918, line: 1074, type: !5653)
!5653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!5654 = !DILocation(line: 1074, column: 26, scope: !5627)
!5655 = !DILocation(line: 1074, column: 32, scope: !5627)
!5656 = !DILocation(line: 1074, column: 37, scope: !5627)
!5657 = !DILocation(line: 1074, column: 48, scope: !5627)
!5658 = !DILocation(line: 1076, column: 20, scope: !5627)
!5659 = !DILocation(line: 1076, column: 29, scope: !5627)
!5660 = !DILocation(line: 1076, column: 32, scope: !5627)
!5661 = !DILocation(line: 1076, column: 31, scope: !5627)
!5662 = !DILocation(line: 1076, column: 27, scope: !5627)
!5663 = !DILocation(line: 1076, column: 13, scope: !5627)
!5664 = !DILocation(line: 1076, column: 41, scope: !5627)
!5665 = !DILocation(line: 1076, column: 48, scope: !5627)
!5666 = !DILocation(line: 1077, column: 20, scope: !5627)
!5667 = !DILocation(line: 1077, column: 27, scope: !5627)
!5668 = !DILocation(line: 1077, column: 30, scope: !5627)
!5669 = !DILocation(line: 1077, column: 29, scope: !5627)
!5670 = !DILocation(line: 1077, column: 25, scope: !5627)
!5671 = !DILocation(line: 1077, column: 13, scope: !5627)
!5672 = !DILocation(line: 1077, column: 39, scope: !5627)
!5673 = !DILocation(line: 1077, column: 46, scope: !5627)
!5674 = !DILocation(line: 1078, column: 9, scope: !5627)
!5675 = !DILocation(line: 1070, column: 45, scope: !5676)
!5676 = !DILexicalBlockFile(scope: !5621, file: !918, discriminator: 2)
!5677 = !DILocation(line: 1070, column: 9, scope: !5676)
!5678 = distinct !{!5678, !5679}
!5679 = !DILocation(line: 1070, column: 9, scope: !5612)
!5680 = !DILocation(line: 1079, column: 9, scope: !5612)
!5681 = !DILocation(line: 1080, column: 5, scope: !5612)
!5682 = !DILocation(line: 1067, column: 36, scope: !5683)
!5683 = !DILexicalBlockFile(scope: !5607, file: !918, discriminator: 2)
!5684 = !DILocation(line: 1067, column: 5, scope: !5683)
!5685 = distinct !{!5685, !5686}
!5686 = !DILocation(line: 1067, column: 5, scope: !5516)
!5687 = !DILocation(line: 1081, column: 5, scope: !5516)
!5688 = !DILocation(line: 1081, column: 11, scope: !5516)
!5689 = !DILocation(line: 1081, column: 22, scope: !5516)
!5690 = !DILocation(line: 1082, column: 12, scope: !5516)
!5691 = !DILocation(line: 1082, column: 18, scope: !5516)
!5692 = !DILocation(line: 1082, column: 5, scope: !5516)
!5693 = !DILocation(line: 1082, column: 27, scope: !5516)
!5694 = !DILocation(line: 1082, column: 33, scope: !5516)
!5695 = !DILocation(line: 1082, column: 46, scope: !5516)
!5696 = !DILocation(line: 1082, column: 52, scope: !5516)
!5697 = !DILocation(line: 1082, column: 44, scope: !5516)
!5698 = !DILocation(line: 1082, column: 63, scope: !5516)
!5699 = !DILocation(line: 1082, column: 61, scope: !5516)
!5700 = !DILocation(line: 1082, column: 42, scope: !5516)
!5701 = !DILocation(line: 1083, column: 1, scope: !5516)
!5702 = distinct !DISubprogram(name: "apply_window_and_mdct", scope: !918, file: !918, line: 1000, type: !5703, isLocal: true, isDefinition: true, scopeLine: 1001, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!904, !1644}
!5705 = !DILocalVariable(name: "venc", arg: 1, scope: !5702, file: !918, line: 1000, type: !1644)
!5706 = !DILocation(line: 1000, column: 54, scope: !5702)
!5707 = !DILocalVariable(name: "channel", scope: !5702, file: !918, line: 1002, type: !904)
!5708 = !DILocation(line: 1002, column: 9, scope: !5702)
!5709 = !DILocalVariable(name: "win", scope: !5702, file: !918, line: 1003, type: !1702)
!5710 = !DILocation(line: 1003, column: 19, scope: !5702)
!5711 = !DILocation(line: 1003, column: 25, scope: !5702)
!5712 = !DILocation(line: 1003, column: 31, scope: !5702)
!5713 = !DILocalVariable(name: "window_len", scope: !5702, file: !918, line: 1004, type: !904)
!5714 = !DILocation(line: 1004, column: 9, scope: !5702)
!5715 = !DILocation(line: 1004, column: 28, scope: !5702)
!5716 = !DILocation(line: 1004, column: 34, scope: !5702)
!5717 = !DILocation(line: 1004, column: 52, scope: !5702)
!5718 = !DILocation(line: 1004, column: 24, scope: !5702)
!5719 = !DILocalVariable(name: "n", scope: !5702, file: !918, line: 1005, type: !898)
!5720 = !DILocation(line: 1005, column: 11, scope: !5702)
!5721 = !DILocation(line: 1005, column: 28, scope: !5702)
!5722 = !DILocation(line: 1005, column: 34, scope: !5702)
!5723 = !DILocation(line: 1005, column: 25, scope: !5702)
!5724 = !DILocation(line: 1005, column: 15, scope: !5702)
!5725 = !DILocation(line: 1005, column: 53, scope: !5702)
!5726 = !DILocalVariable(name: "fdsp", scope: !5702, file: !918, line: 1006, type: !1827)
!5727 = !DILocation(line: 1006, column: 24, scope: !5702)
!5728 = !DILocation(line: 1006, column: 31, scope: !5702)
!5729 = !DILocation(line: 1006, column: 37, scope: !5702)
!5730 = !DILocation(line: 1008, column: 18, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5702, file: !918, line: 1008, column: 5)
!5732 = !DILocation(line: 1008, column: 10, scope: !5731)
!5733 = !DILocation(line: 1008, column: 23, scope: !5734)
!5734 = !DILexicalBlockFile(scope: !5735, file: !918, discriminator: 1)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !918, line: 1008, column: 5)
!5736 = !DILocation(line: 1008, column: 33, scope: !5734)
!5737 = !DILocation(line: 1008, column: 39, scope: !5734)
!5738 = !DILocation(line: 1008, column: 31, scope: !5734)
!5739 = !DILocation(line: 1008, column: 5, scope: !5734)
!5740 = !DILocalVariable(name: "offset", scope: !5741, file: !918, line: 1009, type: !915)
!5741 = distinct !DILexicalBlock(scope: !5735, file: !918, line: 1008, column: 60)
!5742 = !DILocation(line: 1009, column: 16, scope: !5741)
!5743 = !DILocation(line: 1009, column: 25, scope: !5741)
!5744 = !DILocation(line: 1009, column: 31, scope: !5741)
!5745 = !DILocation(line: 1009, column: 41, scope: !5741)
!5746 = !DILocation(line: 1009, column: 51, scope: !5741)
!5747 = !DILocation(line: 1009, column: 49, scope: !5741)
!5748 = !DILocation(line: 1009, column: 62, scope: !5741)
!5749 = !DILocation(line: 1009, column: 39, scope: !5741)
!5750 = !DILocation(line: 1011, column: 9, scope: !5741)
!5751 = !DILocation(line: 1011, column: 15, scope: !5741)
!5752 = !DILocation(line: 1011, column: 27, scope: !5741)
!5753 = !DILocation(line: 1011, column: 35, scope: !5741)
!5754 = !DILocation(line: 1011, column: 43, scope: !5741)
!5755 = !DILocation(line: 1011, column: 48, scope: !5741)
!5756 = !DILocation(line: 1012, column: 9, scope: !5741)
!5757 = !DILocation(line: 1012, column: 15, scope: !5741)
!5758 = !DILocation(line: 1012, column: 34, scope: !5741)
!5759 = !DILocation(line: 1012, column: 42, scope: !5741)
!5760 = !DILocation(line: 1012, column: 52, scope: !5741)
!5761 = !DILocation(line: 1012, column: 51, scope: !5741)
!5762 = !DILocation(line: 1012, column: 55, scope: !5741)
!5763 = !DILocation(line: 1014, column: 19, scope: !5741)
!5764 = !DILocation(line: 1014, column: 16, scope: !5741)
!5765 = !DILocation(line: 1016, column: 9, scope: !5741)
!5766 = !DILocation(line: 1016, column: 15, scope: !5741)
!5767 = !DILocation(line: 1016, column: 35, scope: !5741)
!5768 = !DILocation(line: 1016, column: 43, scope: !5741)
!5769 = !DILocation(line: 1016, column: 51, scope: !5741)
!5770 = !DILocation(line: 1016, column: 56, scope: !5741)
!5771 = !DILocation(line: 1017, column: 9, scope: !5741)
!5772 = !DILocation(line: 1017, column: 15, scope: !5741)
!5773 = !DILocation(line: 1017, column: 34, scope: !5741)
!5774 = !DILocation(line: 1017, column: 42, scope: !5741)
!5775 = !DILocation(line: 1017, column: 52, scope: !5741)
!5776 = !DILocation(line: 1017, column: 51, scope: !5741)
!5777 = !DILocation(line: 1017, column: 55, scope: !5741)
!5778 = !DILocation(line: 1019, column: 9, scope: !5741)
!5779 = !DILocation(line: 1019, column: 15, scope: !5741)
!5780 = !DILocation(line: 1019, column: 23, scope: !5741)
!5781 = !DILocation(line: 1019, column: 34, scope: !5741)
!5782 = !DILocation(line: 1019, column: 40, scope: !5741)
!5783 = !DILocation(line: 1019, column: 49, scope: !5741)
!5784 = !DILocation(line: 1019, column: 55, scope: !5741)
!5785 = !DILocation(line: 1019, column: 64, scope: !5741)
!5786 = !DILocation(line: 1019, column: 74, scope: !5741)
!5787 = !DILocation(line: 1019, column: 72, scope: !5741)
!5788 = !DILocation(line: 1019, column: 62, scope: !5741)
!5789 = !DILocation(line: 1020, column: 22, scope: !5741)
!5790 = !DILocation(line: 1020, column: 28, scope: !5741)
!5791 = !DILocation(line: 1020, column: 38, scope: !5741)
!5792 = !DILocation(line: 1020, column: 48, scope: !5741)
!5793 = !DILocation(line: 1020, column: 46, scope: !5741)
!5794 = !DILocation(line: 1020, column: 59, scope: !5741)
!5795 = !DILocation(line: 1020, column: 36, scope: !5741)
!5796 = !DILocation(line: 1021, column: 5, scope: !5741)
!5797 = !DILocation(line: 1008, column: 56, scope: !5798)
!5798 = !DILexicalBlockFile(scope: !5735, file: !918, discriminator: 2)
!5799 = !DILocation(line: 1008, column: 5, scope: !5798)
!5800 = distinct !{!5800, !5801}
!5801 = !DILocation(line: 1008, column: 5, scope: !5702)
!5802 = !DILocation(line: 1022, column: 5, scope: !5702)
!5803 = distinct !DISubprogram(name: "floor_fit", scope: !918, file: !918, line: 761, type: !5804, isLocal: true, isDefinition: true, scopeLine: 763, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5804 = !DISubroutineType(types: !5805)
!5805 = !{null, !1644, !1757, !915, !1337, !904}
!5806 = !DILocalVariable(name: "venc", arg: 1, scope: !5803, file: !918, line: 761, type: !1644)
!5807 = !DILocation(line: 761, column: 43, scope: !5803)
!5808 = !DILocalVariable(name: "fc", arg: 2, scope: !5803, file: !918, line: 761, type: !1757)
!5809 = !DILocation(line: 761, column: 67, scope: !5803)
!5810 = !DILocalVariable(name: "coeffs", arg: 3, scope: !5803, file: !918, line: 762, type: !915)
!5811 = !DILocation(line: 762, column: 30, scope: !5803)
!5812 = !DILocalVariable(name: "posts", arg: 4, scope: !5803, file: !918, line: 762, type: !1337)
!5813 = !DILocation(line: 762, column: 48, scope: !5803)
!5814 = !DILocalVariable(name: "samples", arg: 5, scope: !5803, file: !918, line: 762, type: !904)
!5815 = !DILocation(line: 762, column: 59, scope: !5803)
!5816 = !DILocalVariable(name: "range", scope: !5803, file: !918, line: 764, type: !904)
!5817 = !DILocation(line: 764, column: 9, scope: !5803)
!5818 = !DILocation(line: 764, column: 23, scope: !5803)
!5819 = !DILocation(line: 764, column: 27, scope: !5803)
!5820 = !DILocation(line: 764, column: 21, scope: !5803)
!5821 = !DILocation(line: 764, column: 38, scope: !5803)
!5822 = !DILocalVariable(name: "i", scope: !5803, file: !918, line: 765, type: !904)
!5823 = !DILocation(line: 765, column: 9, scope: !5803)
!5824 = !DILocalVariable(name: "tot_average", scope: !5803, file: !918, line: 766, type: !898)
!5825 = !DILocation(line: 766, column: 11, scope: !5803)
!5826 = !DILocalVariable(name: "averages", scope: !5803, file: !918, line: 767, type: !5827)
!5827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 1088, align: 32, elements: !2317)
!5828 = !DILocation(line: 767, column: 11, scope: !5803)
!5829 = !DILocation(line: 768, column: 12, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5803, file: !918, line: 768, column: 5)
!5831 = !DILocation(line: 768, column: 10, scope: !5830)
!5832 = !DILocation(line: 768, column: 17, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5834, file: !918, discriminator: 1)
!5834 = distinct !DILexicalBlock(scope: !5830, file: !918, line: 768, column: 5)
!5835 = !DILocation(line: 768, column: 21, scope: !5833)
!5836 = !DILocation(line: 768, column: 25, scope: !5833)
!5837 = !DILocation(line: 768, column: 19, scope: !5833)
!5838 = !DILocation(line: 768, column: 5, scope: !5833)
!5839 = !DILocation(line: 769, column: 41, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5834, file: !918, line: 768, column: 38)
!5841 = !DILocation(line: 769, column: 45, scope: !5840)
!5842 = !DILocation(line: 769, column: 53, scope: !5840)
!5843 = !DILocation(line: 769, column: 23, scope: !5840)
!5844 = !DILocation(line: 769, column: 18, scope: !5840)
!5845 = !DILocation(line: 769, column: 9, scope: !5840)
!5846 = !DILocation(line: 769, column: 21, scope: !5840)
!5847 = !DILocation(line: 770, column: 33, scope: !5840)
!5848 = !DILocation(line: 770, column: 24, scope: !5840)
!5849 = !DILocation(line: 770, column: 21, scope: !5840)
!5850 = !DILocation(line: 771, column: 5, scope: !5840)
!5851 = !DILocation(line: 768, column: 34, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5834, file: !918, discriminator: 2)
!5853 = !DILocation(line: 768, column: 5, scope: !5852)
!5854 = distinct !{!5854, !5855}
!5855 = !DILocation(line: 768, column: 5, scope: !5803)
!5856 = !DILocation(line: 772, column: 20, scope: !5803)
!5857 = !DILocation(line: 772, column: 24, scope: !5803)
!5858 = !DILocation(line: 772, column: 17, scope: !5803)
!5859 = !DILocation(line: 773, column: 20, scope: !5803)
!5860 = !DILocation(line: 773, column: 26, scope: !5803)
!5861 = !DILocation(line: 773, column: 17, scope: !5803)
!5862 = !DILocation(line: 775, column: 12, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5803, file: !918, line: 775, column: 5)
!5864 = !DILocation(line: 775, column: 10, scope: !5863)
!5865 = !DILocation(line: 775, column: 17, scope: !5866)
!5866 = !DILexicalBlockFile(scope: !5867, file: !918, discriminator: 1)
!5867 = distinct !DILexicalBlock(scope: !5863, file: !918, line: 775, column: 5)
!5868 = !DILocation(line: 775, column: 21, scope: !5866)
!5869 = !DILocation(line: 775, column: 25, scope: !5866)
!5870 = !DILocation(line: 775, column: 19, scope: !5866)
!5871 = !DILocation(line: 775, column: 5, scope: !5866)
!5872 = !DILocalVariable(name: "position", scope: !5873, file: !918, line: 776, type: !904)
!5873 = distinct !DILexicalBlock(scope: !5867, file: !918, line: 775, column: 38)
!5874 = !DILocation(line: 776, column: 13, scope: !5873)
!5875 = !DILocation(line: 776, column: 42, scope: !5873)
!5876 = !DILocation(line: 776, column: 33, scope: !5873)
!5877 = !DILocation(line: 776, column: 37, scope: !5873)
!5878 = !DILocation(line: 776, column: 45, scope: !5873)
!5879 = !DILocation(line: 776, column: 24, scope: !5873)
!5880 = !DILocation(line: 776, column: 28, scope: !5873)
!5881 = !DILocation(line: 776, column: 51, scope: !5873)
!5882 = !DILocalVariable(name: "average", scope: !5873, file: !918, line: 777, type: !898)
!5883 = !DILocation(line: 777, column: 15, scope: !5873)
!5884 = !DILocation(line: 777, column: 34, scope: !5873)
!5885 = !DILocation(line: 777, column: 25, scope: !5873)
!5886 = !DILocalVariable(name: "j", scope: !5873, file: !918, line: 778, type: !904)
!5887 = !DILocation(line: 778, column: 13, scope: !5873)
!5888 = !DILocation(line: 780, column: 24, scope: !5873)
!5889 = !DILocation(line: 780, column: 38, scope: !5873)
!5890 = !DILocation(line: 780, column: 36, scope: !5873)
!5891 = !DILocation(line: 780, column: 19, scope: !5873)
!5892 = !DILocation(line: 780, column: 60, scope: !5873)
!5893 = !DILocation(line: 780, column: 68, scope: !5873)
!5894 = !DILocation(line: 780, column: 49, scope: !5895)
!5895 = !DILexicalBlockFile(scope: !5873, file: !918, discriminator: 1)
!5896 = !DILocation(line: 780, column: 47, scope: !5873)
!5897 = !DILocation(line: 780, column: 17, scope: !5873)
!5898 = !DILocation(line: 781, column: 16, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5873, file: !918, line: 781, column: 9)
!5900 = !DILocation(line: 781, column: 14, scope: !5899)
!5901 = !DILocation(line: 781, column: 21, scope: !5902)
!5902 = !DILexicalBlockFile(scope: !5903, file: !918, discriminator: 1)
!5903 = distinct !DILexicalBlock(scope: !5899, file: !918, line: 781, column: 9)
!5904 = !DILocation(line: 781, column: 25, scope: !5902)
!5905 = !DILocation(line: 781, column: 31, scope: !5902)
!5906 = !DILocation(line: 781, column: 23, scope: !5902)
!5907 = !DILocation(line: 781, column: 9, scope: !5902)
!5908 = !DILocation(line: 782, column: 51, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5903, file: !918, line: 782, column: 17)
!5910 = !DILocation(line: 782, column: 55, scope: !5909)
!5911 = !DILocation(line: 782, column: 59, scope: !5909)
!5912 = !DILocation(line: 782, column: 53, scope: !5909)
!5913 = !DILocation(line: 782, column: 17, scope: !5909)
!5914 = !DILocation(line: 782, column: 73, scope: !5909)
!5915 = !DILocation(line: 782, column: 71, scope: !5909)
!5916 = !DILocation(line: 782, column: 17, scope: !5903)
!5917 = !DILocation(line: 783, column: 17, scope: !5909)
!5918 = !DILocation(line: 782, column: 73, scope: !5919)
!5919 = !DILexicalBlockFile(scope: !5909, file: !918, discriminator: 1)
!5920 = !DILocation(line: 781, column: 37, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5903, file: !918, discriminator: 2)
!5922 = !DILocation(line: 781, column: 9, scope: !5921)
!5923 = distinct !{!5923, !5924}
!5924 = !DILocation(line: 781, column: 9, scope: !5873)
!5925 = !DILocation(line: 784, column: 35, scope: !5873)
!5926 = !DILocation(line: 784, column: 24, scope: !5873)
!5927 = !DILocation(line: 784, column: 15, scope: !5873)
!5928 = !DILocation(line: 784, column: 19, scope: !5873)
!5929 = !DILocation(line: 784, column: 27, scope: !5873)
!5930 = !DILocation(line: 784, column: 9, scope: !5873)
!5931 = !DILocation(line: 784, column: 33, scope: !5873)
!5932 = !DILocation(line: 785, column: 5, scope: !5873)
!5933 = !DILocation(line: 775, column: 34, scope: !5934)
!5934 = !DILexicalBlockFile(scope: !5867, file: !918, discriminator: 2)
!5935 = !DILocation(line: 775, column: 5, scope: !5934)
!5936 = distinct !{!5936, !5937}
!5937 = !DILocation(line: 775, column: 5, scope: !5803)
!5938 = !DILocation(line: 786, column: 1, scope: !5803)
!5939 = distinct !DISubprogram(name: "floor_encode", scope: !918, file: !918, line: 793, type: !5940, isLocal: true, isDefinition: true, scopeLine: 796, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{!904, !1644, !1757, !4537, !1337, !915, !904}
!5942 = !DILocalVariable(name: "venc", arg: 1, scope: !5939, file: !918, line: 793, type: !1644)
!5943 = !DILocation(line: 793, column: 45, scope: !5939)
!5944 = !DILocalVariable(name: "fc", arg: 2, scope: !5939, file: !918, line: 793, type: !1757)
!5945 = !DILocation(line: 793, column: 69, scope: !5939)
!5946 = !DILocalVariable(name: "pb", arg: 3, scope: !5939, file: !918, line: 794, type: !4537)
!5947 = !DILocation(line: 794, column: 40, scope: !5939)
!5948 = !DILocalVariable(name: "posts", arg: 4, scope: !5939, file: !918, line: 794, type: !1337)
!5949 = !DILocation(line: 794, column: 54, scope: !5939)
!5950 = !DILocalVariable(name: "floor", arg: 5, scope: !5939, file: !918, line: 795, type: !915)
!5951 = !DILocation(line: 795, column: 32, scope: !5939)
!5952 = !DILocalVariable(name: "samples", arg: 6, scope: !5939, file: !918, line: 795, type: !904)
!5953 = !DILocation(line: 795, column: 43, scope: !5939)
!5954 = !DILocalVariable(name: "range", scope: !5939, file: !918, line: 797, type: !904)
!5955 = !DILocation(line: 797, column: 9, scope: !5939)
!5956 = !DILocation(line: 797, column: 23, scope: !5939)
!5957 = !DILocation(line: 797, column: 27, scope: !5939)
!5958 = !DILocation(line: 797, column: 21, scope: !5939)
!5959 = !DILocation(line: 797, column: 38, scope: !5939)
!5960 = !DILocalVariable(name: "coded", scope: !5939, file: !918, line: 798, type: !5961)
!5961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 1088, align: 32, elements: !2317)
!5962 = !DILocation(line: 798, column: 9, scope: !5939)
!5963 = !DILocalVariable(name: "i", scope: !5939, file: !918, line: 799, type: !904)
!5964 = !DILocation(line: 799, column: 9, scope: !5939)
!5965 = !DILocalVariable(name: "counter", scope: !5939, file: !918, line: 799, type: !904)
!5966 = !DILocation(line: 799, column: 12, scope: !5939)
!5967 = !DILocation(line: 801, column: 9, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5939, file: !918, line: 801, column: 9)
!5969 = !DILocation(line: 801, column: 13, scope: !5968)
!5970 = !DILocation(line: 801, column: 43, scope: !5968)
!5971 = !DILocation(line: 801, column: 28, scope: !5968)
!5972 = !DILocation(line: 801, column: 26, scope: !5968)
!5973 = !DILocation(line: 801, column: 81, scope: !5968)
!5974 = !DILocation(line: 801, column: 87, scope: !5968)
!5975 = !DILocation(line: 801, column: 79, scope: !5968)
!5976 = !DILocation(line: 801, column: 92, scope: !5968)
!5977 = !DILocation(line: 801, column: 63, scope: !5978)
!5978 = !DILexicalBlockFile(scope: !5968, file: !918, discriminator: 1)
!5979 = !DILocation(line: 801, column: 61, scope: !5968)
!5980 = !DILocation(line: 801, column: 55, scope: !5968)
!5981 = !DILocation(line: 801, column: 51, scope: !5968)
!5982 = !DILocation(line: 801, column: 47, scope: !5968)
!5983 = !DILocation(line: 801, column: 9, scope: !5939)
!5984 = !DILocation(line: 802, column: 9, scope: !5968)
!5985 = !DILocation(line: 803, column: 14, scope: !5939)
!5986 = !DILocation(line: 803, column: 5, scope: !5939)
!5987 = !DILocation(line: 804, column: 14, scope: !5939)
!5988 = !DILocation(line: 804, column: 42, scope: !5939)
!5989 = !DILocation(line: 804, column: 48, scope: !5939)
!5990 = !DILocation(line: 804, column: 40, scope: !5939)
!5991 = !DILocation(line: 804, column: 53, scope: !5939)
!5992 = !DILocation(line: 804, column: 24, scope: !5939)
!5993 = !DILocation(line: 804, column: 22, scope: !5939)
!5994 = !DILocation(line: 804, column: 59, scope: !5939)
!5995 = !DILocation(line: 804, column: 5, scope: !5996)
!5996 = !DILexicalBlockFile(scope: !5939, file: !918, discriminator: 1)
!5997 = !DILocation(line: 805, column: 14, scope: !5939)
!5998 = !DILocation(line: 805, column: 42, scope: !5939)
!5999 = !DILocation(line: 805, column: 48, scope: !5939)
!6000 = !DILocation(line: 805, column: 40, scope: !5939)
!6001 = !DILocation(line: 805, column: 53, scope: !5939)
!6002 = !DILocation(line: 805, column: 24, scope: !5939)
!6003 = !DILocation(line: 805, column: 22, scope: !5939)
!6004 = !DILocation(line: 805, column: 59, scope: !5939)
!6005 = !DILocation(line: 805, column: 5, scope: !5996)
!6006 = !DILocation(line: 806, column: 16, scope: !5939)
!6007 = !DILocation(line: 806, column: 25, scope: !5939)
!6008 = !DILocation(line: 806, column: 5, scope: !5939)
!6009 = !DILocation(line: 806, column: 14, scope: !5939)
!6010 = !DILocation(line: 808, column: 12, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5939, file: !918, line: 808, column: 5)
!6012 = !DILocation(line: 808, column: 10, scope: !6011)
!6013 = !DILocation(line: 808, column: 17, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !6015, file: !918, discriminator: 1)
!6015 = distinct !DILexicalBlock(scope: !6011, file: !918, line: 808, column: 5)
!6016 = !DILocation(line: 808, column: 21, scope: !6014)
!6017 = !DILocation(line: 808, column: 25, scope: !6014)
!6018 = !DILocation(line: 808, column: 19, scope: !6014)
!6019 = !DILocation(line: 808, column: 5, scope: !6014)
!6020 = !DILocalVariable(name: "predicted", scope: !6021, file: !918, line: 809, type: !904)
!6021 = distinct !DILexicalBlock(scope: !6015, file: !918, line: 808, column: 38)
!6022 = !DILocation(line: 809, column: 13, scope: !6021)
!6023 = !DILocation(line: 809, column: 56, scope: !6021)
!6024 = !DILocation(line: 809, column: 47, scope: !6021)
!6025 = !DILocation(line: 809, column: 51, scope: !6021)
!6026 = !DILocation(line: 809, column: 59, scope: !6021)
!6027 = !DILocation(line: 809, column: 38, scope: !6021)
!6028 = !DILocation(line: 809, column: 42, scope: !6021)
!6029 = !DILocation(line: 809, column: 64, scope: !6021)
!6030 = !DILocation(line: 810, column: 53, scope: !6021)
!6031 = !DILocation(line: 810, column: 44, scope: !6021)
!6032 = !DILocation(line: 810, column: 48, scope: !6021)
!6033 = !DILocation(line: 810, column: 56, scope: !6021)
!6034 = !DILocation(line: 810, column: 38, scope: !6021)
!6035 = !DILocation(line: 811, column: 56, scope: !6021)
!6036 = !DILocation(line: 811, column: 47, scope: !6021)
!6037 = !DILocation(line: 811, column: 51, scope: !6021)
!6038 = !DILocation(line: 811, column: 59, scope: !6021)
!6039 = !DILocation(line: 811, column: 38, scope: !6021)
!6040 = !DILocation(line: 811, column: 42, scope: !6021)
!6041 = !DILocation(line: 811, column: 65, scope: !6021)
!6042 = !DILocation(line: 812, column: 53, scope: !6021)
!6043 = !DILocation(line: 812, column: 44, scope: !6021)
!6044 = !DILocation(line: 812, column: 48, scope: !6021)
!6045 = !DILocation(line: 812, column: 56, scope: !6021)
!6046 = !DILocation(line: 812, column: 38, scope: !6021)
!6047 = !DILocation(line: 813, column: 47, scope: !6021)
!6048 = !DILocation(line: 813, column: 38, scope: !6021)
!6049 = !DILocation(line: 813, column: 42, scope: !6021)
!6050 = !DILocation(line: 813, column: 50, scope: !6021)
!6051 = !DILocation(line: 809, column: 25, scope: !6021)
!6052 = !DILocalVariable(name: "highroom", scope: !6021, file: !918, line: 814, type: !904)
!6053 = !DILocation(line: 814, column: 13, scope: !6021)
!6054 = !DILocation(line: 814, column: 24, scope: !6021)
!6055 = !DILocation(line: 814, column: 32, scope: !6021)
!6056 = !DILocation(line: 814, column: 30, scope: !6021)
!6057 = !DILocalVariable(name: "lowroom", scope: !6021, file: !918, line: 815, type: !904)
!6058 = !DILocation(line: 815, column: 13, scope: !6021)
!6059 = !DILocation(line: 815, column: 23, scope: !6021)
!6060 = !DILocalVariable(name: "room", scope: !6021, file: !918, line: 816, type: !904)
!6061 = !DILocation(line: 816, column: 13, scope: !6021)
!6062 = !DILocation(line: 816, column: 22, scope: !6021)
!6063 = !DILocation(line: 816, column: 35, scope: !6021)
!6064 = !DILocation(line: 816, column: 32, scope: !6021)
!6065 = !DILocation(line: 816, column: 21, scope: !6021)
!6066 = !DILocation(line: 816, column: 47, scope: !6067)
!6067 = !DILexicalBlockFile(scope: !6021, file: !918, discriminator: 1)
!6068 = !DILocation(line: 816, column: 21, scope: !6067)
!6069 = !DILocation(line: 816, column: 59, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !6021, file: !918, discriminator: 2)
!6071 = !DILocation(line: 816, column: 21, scope: !6070)
!6072 = !DILocation(line: 816, column: 21, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !6021, file: !918, discriminator: 3)
!6074 = !DILocation(line: 816, column: 13, scope: !6073)
!6075 = !DILocation(line: 817, column: 13, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6021, file: !918, line: 817, column: 13)
!6077 = !DILocation(line: 817, column: 32, scope: !6076)
!6078 = !DILocation(line: 817, column: 26, scope: !6076)
!6079 = !DILocation(line: 817, column: 23, scope: !6076)
!6080 = !DILocation(line: 817, column: 13, scope: !6021)
!6081 = !DILocation(line: 818, column: 19, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6076, file: !918, line: 817, column: 36)
!6083 = !DILocation(line: 818, column: 13, scope: !6082)
!6084 = !DILocation(line: 818, column: 22, scope: !6082)
!6085 = !DILocation(line: 819, column: 13, scope: !6082)
!6086 = !DILocation(line: 821, column: 33, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !918, line: 821, column: 17)
!6088 = distinct !DILexicalBlock(scope: !6076, file: !918, line: 820, column: 16)
!6089 = !DILocation(line: 821, column: 24, scope: !6087)
!6090 = !DILocation(line: 821, column: 28, scope: !6087)
!6091 = !DILocation(line: 821, column: 36, scope: !6087)
!6092 = !DILocation(line: 821, column: 18, scope: !6087)
!6093 = !DILocation(line: 821, column: 17, scope: !6088)
!6094 = !DILocation(line: 822, column: 32, scope: !6087)
!6095 = !DILocation(line: 822, column: 23, scope: !6087)
!6096 = !DILocation(line: 822, column: 27, scope: !6087)
!6097 = !DILocation(line: 822, column: 35, scope: !6087)
!6098 = !DILocation(line: 822, column: 17, scope: !6087)
!6099 = !DILocation(line: 822, column: 41, scope: !6087)
!6100 = !DILocation(line: 823, column: 33, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6088, file: !918, line: 823, column: 17)
!6102 = !DILocation(line: 823, column: 24, scope: !6101)
!6103 = !DILocation(line: 823, column: 28, scope: !6101)
!6104 = !DILocation(line: 823, column: 36, scope: !6101)
!6105 = !DILocation(line: 823, column: 18, scope: !6101)
!6106 = !DILocation(line: 823, column: 17, scope: !6088)
!6107 = !DILocation(line: 824, column: 32, scope: !6101)
!6108 = !DILocation(line: 824, column: 23, scope: !6101)
!6109 = !DILocation(line: 824, column: 27, scope: !6101)
!6110 = !DILocation(line: 824, column: 35, scope: !6101)
!6111 = !DILocation(line: 824, column: 17, scope: !6101)
!6112 = !DILocation(line: 824, column: 41, scope: !6101)
!6113 = !DILocation(line: 826, column: 19, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6021, file: !918, line: 826, column: 13)
!6115 = !DILocation(line: 826, column: 13, scope: !6114)
!6116 = !DILocation(line: 826, column: 24, scope: !6114)
!6117 = !DILocation(line: 826, column: 22, scope: !6114)
!6118 = !DILocation(line: 826, column: 13, scope: !6021)
!6119 = !DILocation(line: 827, column: 23, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !918, line: 827, column: 17)
!6121 = distinct !DILexicalBlock(scope: !6114, file: !918, line: 826, column: 35)
!6122 = !DILocation(line: 827, column: 17, scope: !6120)
!6123 = !DILocation(line: 827, column: 28, scope: !6120)
!6124 = !DILocation(line: 827, column: 26, scope: !6120)
!6125 = !DILocation(line: 827, column: 40, scope: !6120)
!6126 = !DILocation(line: 827, column: 38, scope: !6120)
!6127 = !DILocation(line: 827, column: 17, scope: !6121)
!6128 = !DILocation(line: 828, column: 34, scope: !6120)
!6129 = !DILocation(line: 828, column: 28, scope: !6120)
!6130 = !DILocation(line: 828, column: 39, scope: !6120)
!6131 = !DILocation(line: 828, column: 37, scope: !6120)
!6132 = !DILocation(line: 828, column: 51, scope: !6120)
!6133 = !DILocation(line: 828, column: 49, scope: !6120)
!6134 = !DILocation(line: 828, column: 23, scope: !6120)
!6135 = !DILocation(line: 828, column: 17, scope: !6120)
!6136 = !DILocation(line: 828, column: 26, scope: !6120)
!6137 = !DILocation(line: 830, column: 35, scope: !6120)
!6138 = !DILocation(line: 830, column: 29, scope: !6120)
!6139 = !DILocation(line: 830, column: 40, scope: !6120)
!6140 = !DILocation(line: 830, column: 38, scope: !6120)
!6141 = !DILocation(line: 830, column: 51, scope: !6120)
!6142 = !DILocation(line: 830, column: 23, scope: !6120)
!6143 = !DILocation(line: 830, column: 17, scope: !6120)
!6144 = !DILocation(line: 830, column: 26, scope: !6120)
!6145 = !DILocation(line: 831, column: 9, scope: !6121)
!6146 = !DILocation(line: 832, column: 17, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !918, line: 832, column: 17)
!6148 = distinct !DILexicalBlock(scope: !6114, file: !918, line: 831, column: 16)
!6149 = !DILocation(line: 832, column: 35, scope: !6147)
!6150 = !DILocation(line: 832, column: 29, scope: !6147)
!6151 = !DILocation(line: 832, column: 27, scope: !6147)
!6152 = !DILocation(line: 832, column: 40, scope: !6147)
!6153 = !DILocation(line: 832, column: 38, scope: !6147)
!6154 = !DILocation(line: 832, column: 17, scope: !6148)
!6155 = !DILocation(line: 833, column: 28, scope: !6147)
!6156 = !DILocation(line: 833, column: 46, scope: !6147)
!6157 = !DILocation(line: 833, column: 40, scope: !6147)
!6158 = !DILocation(line: 833, column: 38, scope: !6147)
!6159 = !DILocation(line: 833, column: 51, scope: !6147)
!6160 = !DILocation(line: 833, column: 49, scope: !6147)
!6161 = !DILocation(line: 833, column: 60, scope: !6147)
!6162 = !DILocation(line: 833, column: 23, scope: !6147)
!6163 = !DILocation(line: 833, column: 17, scope: !6147)
!6164 = !DILocation(line: 833, column: 26, scope: !6147)
!6165 = !DILocation(line: 835, column: 30, scope: !6147)
!6166 = !DILocation(line: 835, column: 48, scope: !6147)
!6167 = !DILocation(line: 835, column: 42, scope: !6147)
!6168 = !DILocation(line: 835, column: 40, scope: !6147)
!6169 = !DILocation(line: 835, column: 52, scope: !6147)
!6170 = !DILocation(line: 835, column: 58, scope: !6147)
!6171 = !DILocation(line: 835, column: 23, scope: !6147)
!6172 = !DILocation(line: 835, column: 17, scope: !6147)
!6173 = !DILocation(line: 835, column: 26, scope: !6147)
!6174 = !DILocation(line: 837, column: 5, scope: !6021)
!6175 = !DILocation(line: 808, column: 34, scope: !6176)
!6176 = !DILexicalBlockFile(scope: !6015, file: !918, discriminator: 2)
!6177 = !DILocation(line: 808, column: 5, scope: !6176)
!6178 = distinct !{!6178, !6179}
!6179 = !DILocation(line: 808, column: 5, scope: !5939)
!6180 = !DILocation(line: 839, column: 13, scope: !5939)
!6181 = !DILocation(line: 840, column: 12, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !5939, file: !918, line: 840, column: 5)
!6183 = !DILocation(line: 840, column: 10, scope: !6182)
!6184 = !DILocation(line: 840, column: 17, scope: !6185)
!6185 = !DILexicalBlockFile(scope: !6186, file: !918, discriminator: 1)
!6186 = distinct !DILexicalBlock(scope: !6182, file: !918, line: 840, column: 5)
!6187 = !DILocation(line: 840, column: 21, scope: !6185)
!6188 = !DILocation(line: 840, column: 25, scope: !6185)
!6189 = !DILocation(line: 840, column: 19, scope: !6185)
!6190 = !DILocation(line: 840, column: 5, scope: !6185)
!6191 = !DILocalVariable(name: "c", scope: !6192, file: !918, line: 841, type: !1765)
!6192 = distinct !DILexicalBlock(scope: !6186, file: !918, line: 840, column: 42)
!6193 = !DILocation(line: 841, column: 34, scope: !6192)
!6194 = !DILocation(line: 841, column: 74, scope: !6192)
!6195 = !DILocation(line: 841, column: 51, scope: !6192)
!6196 = !DILocation(line: 841, column: 55, scope: !6192)
!6197 = !DILocation(line: 841, column: 39, scope: !6192)
!6198 = !DILocation(line: 841, column: 43, scope: !6192)
!6199 = !DILocalVariable(name: "k", scope: !6192, file: !918, line: 842, type: !904)
!6200 = !DILocation(line: 842, column: 13, scope: !6192)
!6201 = !DILocalVariable(name: "cval", scope: !6192, file: !918, line: 842, type: !904)
!6202 = !DILocation(line: 842, column: 16, scope: !6192)
!6203 = !DILocalVariable(name: "csub", scope: !6192, file: !918, line: 842, type: !904)
!6204 = !DILocation(line: 842, column: 26, scope: !6192)
!6205 = !DILocation(line: 842, column: 36, scope: !6192)
!6206 = !DILocation(line: 842, column: 39, scope: !6192)
!6207 = !DILocation(line: 842, column: 34, scope: !6192)
!6208 = !DILocation(line: 843, column: 13, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6192, file: !918, line: 843, column: 13)
!6210 = !DILocation(line: 843, column: 16, scope: !6209)
!6211 = !DILocation(line: 843, column: 13, scope: !6192)
!6212 = !DILocalVariable(name: "book", scope: !6213, file: !918, line: 844, type: !1740)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !918, line: 843, column: 26)
!6214 = !DILocation(line: 844, column: 35, scope: !6213)
!6215 = !DILocation(line: 844, column: 59, scope: !6213)
!6216 = !DILocation(line: 844, column: 62, scope: !6213)
!6217 = !DILocation(line: 844, column: 43, scope: !6213)
!6218 = !DILocation(line: 844, column: 49, scope: !6213)
!6219 = !DILocalVariable(name: "cshift", scope: !6213, file: !918, line: 845, type: !904)
!6220 = !DILocation(line: 845, column: 17, scope: !6213)
!6221 = !DILocation(line: 846, column: 20, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6213, file: !918, line: 846, column: 13)
!6223 = !DILocation(line: 846, column: 18, scope: !6222)
!6224 = !DILocation(line: 846, column: 25, scope: !6225)
!6225 = !DILexicalBlockFile(scope: !6226, file: !918, discriminator: 1)
!6226 = distinct !DILexicalBlock(scope: !6222, file: !918, line: 846, column: 13)
!6227 = !DILocation(line: 846, column: 29, scope: !6225)
!6228 = !DILocation(line: 846, column: 32, scope: !6225)
!6229 = !DILocation(line: 846, column: 27, scope: !6225)
!6230 = !DILocation(line: 846, column: 13, scope: !6225)
!6231 = !DILocalVariable(name: "l", scope: !6232, file: !918, line: 847, type: !904)
!6232 = distinct !DILexicalBlock(scope: !6226, file: !918, line: 846, column: 42)
!6233 = !DILocation(line: 847, column: 21, scope: !6232)
!6234 = !DILocation(line: 848, column: 24, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6232, file: !918, line: 848, column: 17)
!6236 = !DILocation(line: 848, column: 22, scope: !6235)
!6237 = !DILocation(line: 848, column: 29, scope: !6238)
!6238 = !DILexicalBlockFile(scope: !6239, file: !918, discriminator: 1)
!6239 = distinct !DILexicalBlock(scope: !6235, file: !918, line: 848, column: 17)
!6240 = !DILocation(line: 848, column: 33, scope: !6238)
!6241 = !DILocation(line: 848, column: 31, scope: !6238)
!6242 = !DILocation(line: 848, column: 17, scope: !6238)
!6243 = !DILocalVariable(name: "maxval", scope: !6244, file: !918, line: 849, type: !904)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !918, line: 848, column: 44)
!6245 = !DILocation(line: 849, column: 25, scope: !6244)
!6246 = !DILocation(line: 850, column: 34, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6244, file: !918, line: 850, column: 25)
!6248 = !DILocation(line: 850, column: 25, scope: !6247)
!6249 = !DILocation(line: 850, column: 28, scope: !6247)
!6250 = !DILocation(line: 850, column: 37, scope: !6247)
!6251 = !DILocation(line: 850, column: 25, scope: !6244)
!6252 = !DILocation(line: 851, column: 59, scope: !6247)
!6253 = !DILocation(line: 851, column: 50, scope: !6247)
!6254 = !DILocation(line: 851, column: 53, scope: !6247)
!6255 = !DILocation(line: 851, column: 34, scope: !6247)
!6256 = !DILocation(line: 851, column: 40, scope: !6247)
!6257 = !DILocation(line: 851, column: 63, scope: !6247)
!6258 = !DILocation(line: 851, column: 32, scope: !6247)
!6259 = !DILocation(line: 851, column: 25, scope: !6247)
!6260 = !DILocation(line: 853, column: 31, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6244, file: !918, line: 853, column: 25)
!6262 = !DILocation(line: 853, column: 41, scope: !6261)
!6263 = !DILocation(line: 853, column: 39, scope: !6261)
!6264 = !DILocation(line: 853, column: 25, scope: !6261)
!6265 = !DILocation(line: 853, column: 46, scope: !6261)
!6266 = !DILocation(line: 853, column: 44, scope: !6261)
!6267 = !DILocation(line: 853, column: 25, scope: !6244)
!6268 = !DILocation(line: 854, column: 25, scope: !6261)
!6269 = !DILocation(line: 855, column: 17, scope: !6244)
!6270 = !DILocation(line: 848, column: 40, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6239, file: !918, discriminator: 2)
!6272 = !DILocation(line: 848, column: 17, scope: !6271)
!6273 = distinct !{!6273, !6274}
!6274 = !DILocation(line: 848, column: 17, scope: !6232)
!6275 = !DILocation(line: 856, column: 16, scope: !6232)
!6276 = !DILocation(line: 856, column: 21, scope: !6232)
!6277 = !DILocation(line: 856, column: 18, scope: !6232)
!6278 = !DILocation(line: 856, column: 17, scope: !6232)
!6279 = !DILocation(line: 856, column: 17, scope: !6280)
!6280 = !DILexicalBlockFile(scope: !6232, file: !918, discriminator: 1)
!6281 = !DILocation(line: 856, column: 33, scope: !6282)
!6282 = !DILexicalBlockFile(scope: !6232, file: !918, discriminator: 2)
!6283 = !DILocation(line: 856, column: 17, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6232, file: !918, discriminator: 3)
!6285 = !DILocation(line: 857, column: 25, scope: !6232)
!6286 = !DILocation(line: 857, column: 30, scope: !6232)
!6287 = !DILocation(line: 857, column: 27, scope: !6232)
!6288 = !DILocation(line: 857, column: 22, scope: !6232)
!6289 = !DILocation(line: 858, column: 27, scope: !6232)
!6290 = !DILocation(line: 858, column: 30, scope: !6232)
!6291 = !DILocation(line: 858, column: 24, scope: !6232)
!6292 = !DILocation(line: 859, column: 13, scope: !6232)
!6293 = !DILocation(line: 846, column: 38, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6226, file: !918, discriminator: 2)
!6295 = !DILocation(line: 846, column: 13, scope: !6294)
!6296 = distinct !{!6296, !6297}
!6297 = !DILocation(line: 846, column: 13, scope: !6213)
!6298 = !DILocation(line: 860, column: 30, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6213, file: !918, line: 860, column: 17)
!6300 = !DILocation(line: 860, column: 34, scope: !6299)
!6301 = !DILocation(line: 860, column: 40, scope: !6299)
!6302 = !DILocation(line: 860, column: 17, scope: !6299)
!6303 = !DILocation(line: 860, column: 17, scope: !6213)
!6304 = !DILocation(line: 861, column: 17, scope: !6299)
!6305 = !DILocation(line: 862, column: 9, scope: !6213)
!6306 = !DILocation(line: 863, column: 16, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6192, file: !918, line: 863, column: 9)
!6308 = !DILocation(line: 863, column: 14, scope: !6307)
!6309 = !DILocation(line: 863, column: 21, scope: !6310)
!6310 = !DILexicalBlockFile(scope: !6311, file: !918, discriminator: 1)
!6311 = distinct !DILexicalBlock(scope: !6307, file: !918, line: 863, column: 9)
!6312 = !DILocation(line: 863, column: 25, scope: !6310)
!6313 = !DILocation(line: 863, column: 28, scope: !6310)
!6314 = !DILocation(line: 863, column: 23, scope: !6310)
!6315 = !DILocation(line: 863, column: 9, scope: !6310)
!6316 = !DILocalVariable(name: "book", scope: !6317, file: !918, line: 864, type: !904)
!6317 = distinct !DILexicalBlock(scope: !6311, file: !918, line: 863, column: 38)
!6318 = !DILocation(line: 864, column: 17, scope: !6317)
!6319 = !DILocation(line: 864, column: 33, scope: !6317)
!6320 = !DILocation(line: 864, column: 41, scope: !6317)
!6321 = !DILocation(line: 864, column: 45, scope: !6317)
!6322 = !DILocation(line: 864, column: 38, scope: !6317)
!6323 = !DILocation(line: 864, column: 24, scope: !6317)
!6324 = !DILocation(line: 864, column: 27, scope: !6317)
!6325 = !DILocalVariable(name: "entry", scope: !6317, file: !918, line: 865, type: !904)
!6326 = !DILocation(line: 865, column: 17, scope: !6317)
!6327 = !DILocation(line: 865, column: 38, scope: !6317)
!6328 = !DILocation(line: 865, column: 25, scope: !6317)
!6329 = !DILocation(line: 866, column: 22, scope: !6317)
!6330 = !DILocation(line: 866, column: 25, scope: !6317)
!6331 = !DILocation(line: 866, column: 18, scope: !6317)
!6332 = !DILocation(line: 867, column: 17, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6317, file: !918, line: 867, column: 17)
!6334 = !DILocation(line: 867, column: 22, scope: !6333)
!6335 = !DILocation(line: 867, column: 17, scope: !6317)
!6336 = !DILocation(line: 868, column: 17, scope: !6333)
!6337 = !DILocation(line: 869, column: 17, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6317, file: !918, line: 869, column: 17)
!6339 = !DILocation(line: 869, column: 23, scope: !6338)
!6340 = !DILocation(line: 869, column: 17, scope: !6317)
!6341 = !DILocation(line: 870, column: 23, scope: !6338)
!6342 = !DILocation(line: 870, column: 17, scope: !6338)
!6343 = !DILocation(line: 871, column: 30, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6317, file: !918, line: 871, column: 17)
!6345 = !DILocation(line: 871, column: 51, scope: !6344)
!6346 = !DILocation(line: 871, column: 35, scope: !6344)
!6347 = !DILocation(line: 871, column: 41, scope: !6344)
!6348 = !DILocation(line: 871, column: 58, scope: !6344)
!6349 = !DILocation(line: 871, column: 17, scope: !6344)
!6350 = !DILocation(line: 871, column: 17, scope: !6317)
!6351 = !DILocation(line: 872, column: 17, scope: !6344)
!6352 = !DILocation(line: 873, column: 9, scope: !6317)
!6353 = !DILocation(line: 863, column: 34, scope: !6354)
!6354 = !DILexicalBlockFile(scope: !6311, file: !918, discriminator: 2)
!6355 = !DILocation(line: 863, column: 9, scope: !6354)
!6356 = distinct !{!6356, !6357}
!6357 = !DILocation(line: 863, column: 9, scope: !6192)
!6358 = !DILocation(line: 874, column: 5, scope: !6192)
!6359 = !DILocation(line: 840, column: 38, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !6186, file: !918, discriminator: 2)
!6361 = !DILocation(line: 840, column: 5, scope: !6360)
!6362 = distinct !{!6362, !6363}
!6363 = !DILocation(line: 840, column: 5, scope: !5939)
!6364 = !DILocation(line: 876, column: 34, scope: !5939)
!6365 = !DILocation(line: 876, column: 38, scope: !5939)
!6366 = !DILocation(line: 876, column: 44, scope: !5939)
!6367 = !DILocation(line: 876, column: 48, scope: !5939)
!6368 = !DILocation(line: 876, column: 56, scope: !5939)
!6369 = !DILocation(line: 876, column: 63, scope: !5939)
!6370 = !DILocation(line: 877, column: 34, scope: !5939)
!6371 = !DILocation(line: 877, column: 38, scope: !5939)
!6372 = !DILocation(line: 877, column: 50, scope: !5939)
!6373 = !DILocation(line: 877, column: 57, scope: !5939)
!6374 = !DILocation(line: 876, column: 5, scope: !5939)
!6375 = !DILocation(line: 879, column: 5, scope: !5939)
!6376 = !DILocation(line: 880, column: 1, scope: !5939)
!6377 = distinct !DISubprogram(name: "residue_encode", scope: !918, file: !918, line: 905, type: !6378, isLocal: true, isDefinition: true, scopeLine: 908, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!904, !1644, !1788, !4537, !915, !904, !904}
!6380 = !DILocalVariable(name: "venc", arg: 1, scope: !6377, file: !918, line: 905, type: !1644)
!6381 = !DILocation(line: 905, column: 47, scope: !6377)
!6382 = !DILocalVariable(name: "rc", arg: 2, scope: !6377, file: !918, line: 905, type: !1788)
!6383 = !DILocation(line: 905, column: 73, scope: !6377)
!6384 = !DILocalVariable(name: "pb", arg: 3, scope: !6377, file: !918, line: 906, type: !4537)
!6385 = !DILocation(line: 906, column: 42, scope: !6377)
!6386 = !DILocalVariable(name: "coeffs", arg: 4, scope: !6377, file: !918, line: 906, type: !915)
!6387 = !DILocation(line: 906, column: 53, scope: !6377)
!6388 = !DILocalVariable(name: "samples", arg: 5, scope: !6377, file: !918, line: 906, type: !904)
!6389 = !DILocation(line: 906, column: 65, scope: !6377)
!6390 = !DILocalVariable(name: "real_ch", arg: 6, scope: !6377, file: !918, line: 907, type: !904)
!6391 = !DILocation(line: 907, column: 31, scope: !6377)
!6392 = !DILocalVariable(name: "pass", scope: !6377, file: !918, line: 909, type: !904)
!6393 = !DILocation(line: 909, column: 9, scope: !6377)
!6394 = !DILocalVariable(name: "i", scope: !6377, file: !918, line: 909, type: !904)
!6395 = !DILocation(line: 909, column: 15, scope: !6377)
!6396 = !DILocalVariable(name: "j", scope: !6377, file: !918, line: 909, type: !904)
!6397 = !DILocation(line: 909, column: 18, scope: !6377)
!6398 = !DILocalVariable(name: "p", scope: !6377, file: !918, line: 909, type: !904)
!6399 = !DILocation(line: 909, column: 21, scope: !6377)
!6400 = !DILocalVariable(name: "k", scope: !6377, file: !918, line: 909, type: !904)
!6401 = !DILocation(line: 909, column: 24, scope: !6377)
!6402 = !DILocalVariable(name: "psize", scope: !6377, file: !918, line: 910, type: !904)
!6403 = !DILocation(line: 910, column: 9, scope: !6377)
!6404 = !DILocation(line: 910, column: 17, scope: !6377)
!6405 = !DILocation(line: 910, column: 21, scope: !6377)
!6406 = !DILocalVariable(name: "partitions", scope: !6377, file: !918, line: 911, type: !904)
!6407 = !DILocation(line: 911, column: 9, scope: !6377)
!6408 = !DILocation(line: 911, column: 23, scope: !6377)
!6409 = !DILocation(line: 911, column: 27, scope: !6377)
!6410 = !DILocation(line: 911, column: 33, scope: !6377)
!6411 = !DILocation(line: 911, column: 37, scope: !6377)
!6412 = !DILocation(line: 911, column: 31, scope: !6377)
!6413 = !DILocation(line: 911, column: 46, scope: !6377)
!6414 = !DILocation(line: 911, column: 44, scope: !6377)
!6415 = !DILocalVariable(name: "channels", scope: !6377, file: !918, line: 912, type: !904)
!6416 = !DILocation(line: 912, column: 9, scope: !6377)
!6417 = !DILocation(line: 912, column: 21, scope: !6377)
!6418 = !DILocation(line: 912, column: 25, scope: !6377)
!6419 = !DILocation(line: 912, column: 30, scope: !6377)
!6420 = !DILocation(line: 912, column: 20, scope: !6377)
!6421 = !DILocation(line: 912, column: 20, scope: !6422)
!6422 = !DILexicalBlockFile(scope: !6377, file: !918, discriminator: 1)
!6423 = !DILocation(line: 912, column: 42, scope: !6424)
!6424 = !DILexicalBlockFile(scope: !6377, file: !918, discriminator: 2)
!6425 = !DILocation(line: 912, column: 20, scope: !6424)
!6426 = !DILocation(line: 912, column: 20, scope: !6427)
!6427 = !DILexicalBlockFile(scope: !6377, file: !918, discriminator: 3)
!6428 = !DILocation(line: 912, column: 9, scope: !6427)
!6429 = !DILocalVariable(name: "classes", scope: !6377, file: !918, line: 913, type: !6430)
!6430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 3200, align: 32, elements: !6431)
!6431 = !{!1653, !6432}
!6432 = !DISubrange(count: 50)
!6433 = !DILocation(line: 913, column: 9, scope: !6377)
!6434 = !DILocalVariable(name: "classwords", scope: !6377, file: !918, line: 914, type: !904)
!6435 = !DILocation(line: 914, column: 9, scope: !6377)
!6436 = !DILocation(line: 914, column: 38, scope: !6377)
!6437 = !DILocation(line: 914, column: 42, scope: !6377)
!6438 = !DILocation(line: 914, column: 22, scope: !6377)
!6439 = !DILocation(line: 914, column: 28, scope: !6377)
!6440 = !DILocation(line: 914, column: 53, scope: !6377)
!6441 = !DILocation(line: 916, column: 5, scope: !6377)
!6442 = distinct !{!6442, !6441}
!6443 = !DILocation(line: 916, column: 16, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !6445, file: !918, discriminator: 1)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !918, line: 916, column: 14)
!6446 = distinct !DILexicalBlock(scope: !6377, file: !918, line: 916, column: 8)
!6447 = !DILocation(line: 916, column: 20, scope: !6444)
!6448 = !DILocation(line: 916, column: 25, scope: !6444)
!6449 = !DILocation(line: 916, column: 14, scope: !6444)
!6450 = !DILocation(line: 916, column: 34, scope: !6451)
!6451 = !DILexicalBlockFile(scope: !6452, file: !918, discriminator: 2)
!6452 = distinct !DILexicalBlock(scope: !6445, file: !918, line: 916, column: 32)
!6453 = !DILocation(line: 916, column: 92, scope: !6454)
!6454 = !DILexicalBlockFile(scope: !6451, file: !918, discriminator: 4)
!6455 = !DILocation(line: 916, column: 92, scope: !6451)
!6456 = !DILocation(line: 916, column: 103, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !6446, file: !918, discriminator: 3)
!6458 = !DILocation(line: 917, column: 5, scope: !6377)
!6459 = distinct !{!6459, !6458}
!6460 = !DILocation(line: 917, column: 16, scope: !6461)
!6461 = !DILexicalBlockFile(scope: !6462, file: !918, discriminator: 1)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !918, line: 917, column: 14)
!6463 = distinct !DILexicalBlock(scope: !6377, file: !918, line: 917, column: 8)
!6464 = !DILocation(line: 917, column: 24, scope: !6461)
!6465 = !DILocation(line: 917, column: 14, scope: !6461)
!6466 = !DILocation(line: 917, column: 33, scope: !6467)
!6467 = !DILexicalBlockFile(scope: !6468, file: !918, discriminator: 2)
!6468 = distinct !DILexicalBlock(scope: !6462, file: !918, line: 917, column: 31)
!6469 = !DILocation(line: 917, column: 91, scope: !6470)
!6470 = !DILexicalBlockFile(scope: !6467, file: !918, discriminator: 4)
!6471 = !DILocation(line: 917, column: 91, scope: !6467)
!6472 = !DILocation(line: 917, column: 102, scope: !6473)
!6473 = !DILexicalBlockFile(scope: !6463, file: !918, discriminator: 3)
!6474 = !DILocation(line: 918, column: 12, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6377, file: !918, line: 918, column: 5)
!6476 = !DILocation(line: 918, column: 10, scope: !6475)
!6477 = !DILocation(line: 918, column: 17, scope: !6478)
!6478 = !DILexicalBlockFile(scope: !6479, file: !918, discriminator: 1)
!6479 = distinct !DILexicalBlock(scope: !6475, file: !918, line: 918, column: 5)
!6480 = !DILocation(line: 918, column: 21, scope: !6478)
!6481 = !DILocation(line: 918, column: 19, scope: !6478)
!6482 = !DILocation(line: 918, column: 5, scope: !6478)
!6483 = !DILocalVariable(name: "max1", scope: !6484, file: !918, line: 919, type: !898)
!6484 = distinct !DILexicalBlock(scope: !6479, file: !918, line: 918, column: 38)
!6485 = !DILocation(line: 919, column: 15, scope: !6484)
!6486 = !DILocalVariable(name: "max2", scope: !6484, file: !918, line: 919, type: !898)
!6487 = !DILocation(line: 919, column: 27, scope: !6484)
!6488 = !DILocalVariable(name: "s", scope: !6484, file: !918, line: 920, type: !904)
!6489 = !DILocation(line: 920, column: 13, scope: !6484)
!6490 = !DILocation(line: 920, column: 17, scope: !6484)
!6491 = !DILocation(line: 920, column: 21, scope: !6484)
!6492 = !DILocation(line: 920, column: 29, scope: !6484)
!6493 = !DILocation(line: 920, column: 33, scope: !6484)
!6494 = !DILocation(line: 920, column: 31, scope: !6484)
!6495 = !DILocation(line: 920, column: 27, scope: !6484)
!6496 = !DILocation(line: 921, column: 18, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6484, file: !918, line: 921, column: 9)
!6498 = !DILocation(line: 921, column: 16, scope: !6497)
!6499 = !DILocation(line: 921, column: 14, scope: !6497)
!6500 = !DILocation(line: 921, column: 21, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !6502, file: !918, discriminator: 1)
!6502 = distinct !DILexicalBlock(scope: !6497, file: !918, line: 921, column: 9)
!6503 = !DILocation(line: 921, column: 25, scope: !6501)
!6504 = !DILocation(line: 921, column: 29, scope: !6501)
!6505 = !DILocation(line: 921, column: 27, scope: !6501)
!6506 = !DILocation(line: 921, column: 23, scope: !6501)
!6507 = !DILocation(line: 921, column: 9, scope: !6501)
!6508 = !DILocation(line: 922, column: 22, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6502, file: !918, line: 921, column: 44)
!6510 = !DILocation(line: 922, column: 21, scope: !6509)
!6511 = !DILocation(line: 922, column: 44, scope: !6509)
!6512 = !DILocation(line: 922, column: 48, scope: !6509)
!6513 = !DILocation(line: 922, column: 46, scope: !6509)
!6514 = !DILocation(line: 922, column: 36, scope: !6509)
!6515 = !DILocation(line: 922, column: 31, scope: !6509)
!6516 = !DILocation(line: 922, column: 28, scope: !6509)
!6517 = !DILocation(line: 922, column: 62, scope: !6518)
!6518 = !DILexicalBlockFile(scope: !6509, file: !918, discriminator: 1)
!6519 = !DILocation(line: 922, column: 61, scope: !6518)
!6520 = !DILocation(line: 922, column: 21, scope: !6518)
!6521 = !DILocation(line: 922, column: 84, scope: !6522)
!6522 = !DILexicalBlockFile(scope: !6509, file: !918, discriminator: 2)
!6523 = !DILocation(line: 922, column: 88, scope: !6522)
!6524 = !DILocation(line: 922, column: 86, scope: !6522)
!6525 = !DILocation(line: 922, column: 76, scope: !6522)
!6526 = !DILocation(line: 922, column: 71, scope: !6522)
!6527 = !DILocation(line: 922, column: 21, scope: !6522)
!6528 = !DILocation(line: 922, column: 21, scope: !6529)
!6529 = !DILexicalBlockFile(scope: !6509, file: !918, discriminator: 3)
!6530 = !DILocation(line: 922, column: 20, scope: !6529)
!6531 = !DILocation(line: 922, column: 18, scope: !6529)
!6532 = !DILocation(line: 923, column: 22, scope: !6509)
!6533 = !DILocation(line: 923, column: 21, scope: !6509)
!6534 = !DILocation(line: 923, column: 43, scope: !6509)
!6535 = !DILocation(line: 923, column: 53, scope: !6509)
!6536 = !DILocation(line: 923, column: 57, scope: !6509)
!6537 = !DILocation(line: 923, column: 55, scope: !6509)
!6538 = !DILocation(line: 923, column: 51, scope: !6509)
!6539 = !DILocation(line: 923, column: 36, scope: !6509)
!6540 = !DILocation(line: 923, column: 31, scope: !6509)
!6541 = !DILocation(line: 923, column: 28, scope: !6509)
!6542 = !DILocation(line: 923, column: 71, scope: !6518)
!6543 = !DILocation(line: 923, column: 70, scope: !6518)
!6544 = !DILocation(line: 923, column: 21, scope: !6518)
!6545 = !DILocation(line: 923, column: 92, scope: !6522)
!6546 = !DILocation(line: 923, column: 102, scope: !6522)
!6547 = !DILocation(line: 923, column: 106, scope: !6522)
!6548 = !DILocation(line: 923, column: 104, scope: !6522)
!6549 = !DILocation(line: 923, column: 100, scope: !6522)
!6550 = !DILocation(line: 923, column: 85, scope: !6522)
!6551 = !DILocation(line: 923, column: 80, scope: !6522)
!6552 = !DILocation(line: 923, column: 21, scope: !6522)
!6553 = !DILocation(line: 923, column: 21, scope: !6529)
!6554 = !DILocation(line: 923, column: 20, scope: !6529)
!6555 = !DILocation(line: 923, column: 18, scope: !6529)
!6556 = !DILocation(line: 924, column: 9, scope: !6509)
!6557 = !DILocation(line: 921, column: 38, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !6502, file: !918, discriminator: 2)
!6559 = !DILocation(line: 921, column: 9, scope: !6558)
!6560 = distinct !{!6560, !6561}
!6561 = !DILocation(line: 921, column: 9, scope: !6484)
!6562 = !DILocation(line: 926, column: 16, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6484, file: !918, line: 926, column: 9)
!6564 = !DILocation(line: 926, column: 14, scope: !6563)
!6565 = !DILocation(line: 926, column: 21, scope: !6566)
!6566 = !DILexicalBlockFile(scope: !6567, file: !918, discriminator: 1)
!6567 = distinct !DILexicalBlock(scope: !6563, file: !918, line: 926, column: 9)
!6568 = !DILocation(line: 926, column: 25, scope: !6566)
!6569 = !DILocation(line: 926, column: 29, scope: !6566)
!6570 = !DILocation(line: 926, column: 45, scope: !6566)
!6571 = !DILocation(line: 926, column: 23, scope: !6566)
!6572 = !DILocation(line: 926, column: 9, scope: !6566)
!6573 = !DILocation(line: 927, column: 17, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6567, file: !918, line: 927, column: 17)
!6575 = !DILocation(line: 927, column: 34, scope: !6574)
!6576 = !DILocation(line: 927, column: 24, scope: !6574)
!6577 = !DILocation(line: 927, column: 28, scope: !6574)
!6578 = !DILocation(line: 927, column: 22, scope: !6574)
!6579 = !DILocation(line: 927, column: 40, scope: !6574)
!6580 = !DILocation(line: 927, column: 43, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !6574, file: !918, discriminator: 1)
!6582 = !DILocation(line: 927, column: 60, scope: !6581)
!6583 = !DILocation(line: 927, column: 50, scope: !6581)
!6584 = !DILocation(line: 927, column: 54, scope: !6581)
!6585 = !DILocation(line: 927, column: 48, scope: !6581)
!6586 = !DILocation(line: 927, column: 17, scope: !6581)
!6587 = !DILocation(line: 928, column: 17, scope: !6574)
!6588 = !DILocation(line: 927, column: 64, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6574, file: !918, discriminator: 2)
!6590 = !DILocation(line: 926, column: 51, scope: !6591)
!6591 = !DILexicalBlockFile(scope: !6567, file: !918, discriminator: 2)
!6592 = !DILocation(line: 926, column: 9, scope: !6591)
!6593 = distinct !{!6593, !6594}
!6594 = !DILocation(line: 926, column: 9, scope: !6484)
!6595 = !DILocation(line: 929, column: 25, scope: !6484)
!6596 = !DILocation(line: 929, column: 20, scope: !6484)
!6597 = !DILocation(line: 929, column: 9, scope: !6484)
!6598 = !DILocation(line: 929, column: 23, scope: !6484)
!6599 = !DILocation(line: 930, column: 5, scope: !6484)
!6600 = !DILocation(line: 918, column: 34, scope: !6601)
!6601 = !DILexicalBlockFile(scope: !6479, file: !918, discriminator: 2)
!6602 = !DILocation(line: 918, column: 5, scope: !6601)
!6603 = distinct !{!6603, !6604}
!6604 = !DILocation(line: 918, column: 5, scope: !6377)
!6605 = !DILocation(line: 932, column: 15, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6377, file: !918, line: 932, column: 5)
!6607 = !DILocation(line: 932, column: 10, scope: !6606)
!6608 = !DILocation(line: 932, column: 20, scope: !6609)
!6609 = !DILexicalBlockFile(scope: !6610, file: !918, discriminator: 1)
!6610 = distinct !DILexicalBlock(scope: !6606, file: !918, line: 932, column: 5)
!6611 = !DILocation(line: 932, column: 25, scope: !6609)
!6612 = !DILocation(line: 932, column: 5, scope: !6609)
!6613 = !DILocation(line: 933, column: 11, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6610, file: !918, line: 932, column: 38)
!6615 = !DILocation(line: 934, column: 9, scope: !6614)
!6616 = !DILocation(line: 934, column: 16, scope: !6617)
!6617 = !DILexicalBlockFile(scope: !6614, file: !918, discriminator: 1)
!6618 = !DILocation(line: 934, column: 20, scope: !6617)
!6619 = !DILocation(line: 934, column: 18, scope: !6617)
!6620 = !DILocation(line: 934, column: 9, scope: !6617)
!6621 = !DILocation(line: 935, column: 17, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !918, line: 935, column: 17)
!6623 = distinct !DILexicalBlock(scope: !6614, file: !918, line: 934, column: 32)
!6624 = !DILocation(line: 935, column: 22, scope: !6622)
!6625 = !DILocation(line: 935, column: 17, scope: !6623)
!6626 = !DILocation(line: 936, column: 24, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !918, line: 936, column: 17)
!6628 = !DILocation(line: 936, column: 22, scope: !6627)
!6629 = !DILocation(line: 936, column: 29, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6631, file: !918, discriminator: 1)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !918, line: 936, column: 17)
!6632 = !DILocation(line: 936, column: 33, scope: !6630)
!6633 = !DILocation(line: 936, column: 31, scope: !6630)
!6634 = !DILocation(line: 936, column: 17, scope: !6630)
!6635 = !DILocalVariable(name: "book", scope: !6636, file: !918, line: 937, type: !1740)
!6636 = distinct !DILexicalBlock(scope: !6631, file: !918, line: 936, column: 48)
!6637 = !DILocation(line: 937, column: 43, scope: !6636)
!6638 = !DILocation(line: 937, column: 67, scope: !6636)
!6639 = !DILocation(line: 937, column: 71, scope: !6636)
!6640 = !DILocation(line: 937, column: 51, scope: !6636)
!6641 = !DILocation(line: 937, column: 57, scope: !6636)
!6642 = !DILocalVariable(name: "entry", scope: !6636, file: !918, line: 938, type: !904)
!6643 = !DILocation(line: 938, column: 25, scope: !6636)
!6644 = !DILocation(line: 939, column: 28, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6636, file: !918, line: 939, column: 21)
!6646 = !DILocation(line: 939, column: 26, scope: !6645)
!6647 = !DILocation(line: 939, column: 33, scope: !6648)
!6648 = !DILexicalBlockFile(scope: !6649, file: !918, discriminator: 1)
!6649 = distinct !DILexicalBlock(scope: !6645, file: !918, line: 939, column: 21)
!6650 = !DILocation(line: 939, column: 37, scope: !6648)
!6651 = !DILocation(line: 939, column: 35, scope: !6648)
!6652 = !DILocation(line: 939, column: 21, scope: !6648)
!6653 = !DILocation(line: 940, column: 34, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6649, file: !918, line: 939, column: 54)
!6655 = !DILocation(line: 940, column: 38, scope: !6654)
!6656 = !DILocation(line: 940, column: 31, scope: !6654)
!6657 = !DILocation(line: 941, column: 45, scope: !6654)
!6658 = !DILocation(line: 941, column: 49, scope: !6654)
!6659 = !DILocation(line: 941, column: 47, scope: !6654)
!6660 = !DILocation(line: 941, column: 34, scope: !6654)
!6661 = !DILocation(line: 941, column: 42, scope: !6654)
!6662 = !DILocation(line: 941, column: 31, scope: !6654)
!6663 = !DILocation(line: 942, column: 21, scope: !6654)
!6664 = !DILocation(line: 939, column: 50, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !6649, file: !918, discriminator: 2)
!6666 = !DILocation(line: 939, column: 21, scope: !6665)
!6667 = distinct !{!6667, !6668}
!6668 = !DILocation(line: 939, column: 21, scope: !6636)
!6669 = !DILocation(line: 943, column: 38, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6636, file: !918, line: 943, column: 25)
!6671 = !DILocation(line: 943, column: 42, scope: !6670)
!6672 = !DILocation(line: 943, column: 48, scope: !6670)
!6673 = !DILocation(line: 943, column: 25, scope: !6670)
!6674 = !DILocation(line: 943, column: 25, scope: !6636)
!6675 = !DILocation(line: 944, column: 25, scope: !6670)
!6676 = !DILocation(line: 945, column: 17, scope: !6636)
!6677 = !DILocation(line: 936, column: 44, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !6631, file: !918, discriminator: 2)
!6679 = !DILocation(line: 936, column: 17, scope: !6678)
!6680 = distinct !{!6680, !6681}
!6681 = !DILocation(line: 936, column: 17, scope: !6622)
!6682 = !DILocation(line: 945, column: 17, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6627, file: !918, discriminator: 1)
!6684 = !DILocation(line: 946, column: 20, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6623, file: !918, line: 946, column: 13)
!6686 = !DILocation(line: 946, column: 18, scope: !6685)
!6687 = !DILocation(line: 946, column: 25, scope: !6688)
!6688 = !DILexicalBlockFile(scope: !6689, file: !918, discriminator: 1)
!6689 = distinct !DILexicalBlock(scope: !6685, file: !918, line: 946, column: 13)
!6690 = !DILocation(line: 946, column: 29, scope: !6688)
!6691 = !DILocation(line: 946, column: 27, scope: !6688)
!6692 = !DILocation(line: 946, column: 40, scope: !6688)
!6693 = !DILocation(line: 946, column: 43, scope: !6694)
!6694 = !DILexicalBlockFile(scope: !6689, file: !918, discriminator: 2)
!6695 = !DILocation(line: 946, column: 47, scope: !6694)
!6696 = !DILocation(line: 946, column: 45, scope: !6694)
!6697 = !DILocation(line: 946, column: 13, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !6685, file: !918, discriminator: 3)
!6699 = !DILocation(line: 947, column: 24, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !918, line: 947, column: 17)
!6701 = distinct !DILexicalBlock(scope: !6689, file: !918, line: 946, column: 69)
!6702 = !DILocation(line: 947, column: 22, scope: !6700)
!6703 = !DILocation(line: 947, column: 29, scope: !6704)
!6704 = !DILexicalBlockFile(scope: !6705, file: !918, discriminator: 1)
!6705 = distinct !DILexicalBlock(scope: !6700, file: !918, line: 947, column: 17)
!6706 = !DILocation(line: 947, column: 33, scope: !6704)
!6707 = !DILocation(line: 947, column: 31, scope: !6704)
!6708 = !DILocation(line: 947, column: 17, scope: !6704)
!6709 = !DILocalVariable(name: "nbook", scope: !6710, file: !918, line: 948, type: !904)
!6710 = distinct !DILexicalBlock(scope: !6705, file: !918, line: 947, column: 48)
!6711 = !DILocation(line: 948, column: 25, scope: !6710)
!6712 = !DILocation(line: 948, column: 58, scope: !6710)
!6713 = !DILocation(line: 948, column: 33, scope: !6710)
!6714 = !DILocation(line: 948, column: 54, scope: !6710)
!6715 = !DILocation(line: 948, column: 43, scope: !6710)
!6716 = !DILocation(line: 948, column: 51, scope: !6710)
!6717 = !DILocation(line: 948, column: 37, scope: !6710)
!6718 = !DILocalVariable(name: "book", scope: !6710, file: !918, line: 949, type: !1740)
!6719 = !DILocation(line: 949, column: 43, scope: !6710)
!6720 = !DILocation(line: 949, column: 67, scope: !6710)
!6721 = !DILocation(line: 949, column: 51, scope: !6710)
!6722 = !DILocation(line: 949, column: 57, scope: !6710)
!6723 = !DILocalVariable(name: "buf", scope: !6710, file: !918, line: 950, type: !915)
!6724 = !DILocation(line: 950, column: 28, scope: !6710)
!6725 = !DILocation(line: 950, column: 34, scope: !6710)
!6726 = !DILocation(line: 950, column: 43, scope: !6710)
!6727 = !DILocation(line: 950, column: 51, scope: !6710)
!6728 = !DILocation(line: 950, column: 50, scope: !6710)
!6729 = !DILocation(line: 950, column: 41, scope: !6710)
!6730 = !DILocation(line: 950, column: 55, scope: !6710)
!6731 = !DILocation(line: 950, column: 59, scope: !6710)
!6732 = !DILocation(line: 950, column: 53, scope: !6710)
!6733 = !DILocation(line: 950, column: 67, scope: !6710)
!6734 = !DILocation(line: 950, column: 69, scope: !6710)
!6735 = !DILocation(line: 950, column: 68, scope: !6710)
!6736 = !DILocation(line: 950, column: 65, scope: !6710)
!6737 = !DILocation(line: 951, column: 25, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6710, file: !918, line: 951, column: 25)
!6739 = !DILocation(line: 951, column: 31, scope: !6738)
!6740 = !DILocation(line: 951, column: 25, scope: !6710)
!6741 = !DILocation(line: 952, column: 25, scope: !6738)
!6742 = !DILocation(line: 954, column: 20, scope: !6710)
!6743 = !DILocation(line: 954, column: 24, scope: !6710)
!6744 = !DILocation(line: 954, column: 29, scope: !6710)
!6745 = !DILocation(line: 954, column: 34, scope: !6710)
!6746 = !DILocation(line: 954, column: 37, scope: !6747)
!6747 = !DILexicalBlockFile(scope: !6710, file: !918, discriminator: 1)
!6748 = !DILocation(line: 954, column: 41, scope: !6747)
!6749 = !DILocation(line: 954, column: 46, scope: !6747)
!6750 = !DILocation(line: 954, column: 21, scope: !6747)
!6751 = !DILocation(line: 954, column: 21, scope: !6752)
!6752 = !DILexicalBlockFile(scope: !6710, file: !918, discriminator: 2)
!6753 = !DILocation(line: 954, column: 37, scope: !6754)
!6754 = !DILexicalBlockFile(scope: !6710, file: !918, discriminator: 3)
!6755 = !DILocation(line: 954, column: 21, scope: !6756)
!6756 = !DILexicalBlockFile(scope: !6710, file: !918, discriminator: 4)
!6757 = !DILocation(line: 955, column: 22, scope: !6710)
!6758 = !DILocation(line: 955, column: 30, scope: !6710)
!6759 = !DILocation(line: 955, column: 36, scope: !6710)
!6760 = !DILocation(line: 955, column: 28, scope: !6710)
!6761 = !DILocation(line: 955, column: 21, scope: !6710)
!6762 = !DILocation(line: 955, column: 21, scope: !6747)
!6763 = !DILocation(line: 955, column: 37, scope: !6752)
!6764 = !DILocation(line: 955, column: 21, scope: !6754)
!6765 = !DILocation(line: 957, column: 25, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6710, file: !918, line: 957, column: 25)
!6767 = !DILocation(line: 957, column: 29, scope: !6766)
!6768 = !DILocation(line: 957, column: 34, scope: !6766)
!6769 = !DILocation(line: 957, column: 25, scope: !6710)
!6770 = !DILocation(line: 958, column: 32, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !918, line: 958, column: 25)
!6772 = distinct !DILexicalBlock(scope: !6766, file: !918, line: 957, column: 40)
!6773 = !DILocation(line: 958, column: 30, scope: !6771)
!6774 = !DILocation(line: 958, column: 37, scope: !6775)
!6775 = !DILexicalBlockFile(scope: !6776, file: !918, discriminator: 1)
!6776 = distinct !DILexicalBlock(scope: !6771, file: !918, line: 958, column: 25)
!6777 = !DILocation(line: 958, column: 41, scope: !6775)
!6778 = !DILocation(line: 958, column: 39, scope: !6775)
!6779 = !DILocation(line: 958, column: 25, scope: !6775)
!6780 = !DILocalVariable(name: "l", scope: !6781, file: !918, line: 959, type: !904)
!6781 = distinct !DILexicalBlock(scope: !6776, file: !918, line: 958, column: 72)
!6782 = !DILocation(line: 959, column: 33, scope: !6781)
!6783 = !DILocalVariable(name: "a", scope: !6781, file: !918, line: 960, type: !915)
!6784 = !DILocation(line: 960, column: 36, scope: !6781)
!6785 = !DILocation(line: 960, column: 51, scope: !6781)
!6786 = !DILocation(line: 960, column: 57, scope: !6781)
!6787 = !DILocation(line: 960, column: 66, scope: !6781)
!6788 = !DILocation(line: 960, column: 62, scope: !6781)
!6789 = !DILocation(line: 960, column: 40, scope: !6781)
!6790 = !DILocation(line: 961, column: 34, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6781, file: !918, line: 961, column: 33)
!6792 = !DILocation(line: 961, column: 33, scope: !6781)
!6793 = !DILocation(line: 962, column: 33, scope: !6791)
!6794 = !DILocation(line: 963, column: 36, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6781, file: !918, line: 963, column: 29)
!6796 = !DILocation(line: 963, column: 34, scope: !6795)
!6797 = !DILocation(line: 963, column: 41, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !6799, file: !918, discriminator: 1)
!6799 = distinct !DILexicalBlock(scope: !6795, file: !918, line: 963, column: 29)
!6800 = !DILocation(line: 963, column: 45, scope: !6798)
!6801 = !DILocation(line: 963, column: 51, scope: !6798)
!6802 = !DILocation(line: 963, column: 43, scope: !6798)
!6803 = !DILocation(line: 963, column: 29, scope: !6798)
!6804 = !DILocation(line: 964, column: 49, scope: !6799)
!6805 = !DILocation(line: 964, column: 47, scope: !6799)
!6806 = !DILocation(line: 964, column: 37, scope: !6799)
!6807 = !DILocation(line: 964, column: 41, scope: !6799)
!6808 = !DILocation(line: 964, column: 39, scope: !6799)
!6809 = !DILocation(line: 964, column: 33, scope: !6799)
!6810 = !DILocation(line: 964, column: 44, scope: !6799)
!6811 = !DILocation(line: 963, column: 65, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6799, file: !918, discriminator: 2)
!6813 = !DILocation(line: 963, column: 29, scope: !6812)
!6814 = distinct !{!6814, !6815}
!6815 = !DILocation(line: 963, column: 29, scope: !6781)
!6816 = !DILocation(line: 965, column: 25, scope: !6781)
!6817 = !DILocation(line: 958, column: 53, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !6776, file: !918, discriminator: 2)
!6819 = !DILocation(line: 958, column: 59, scope: !6818)
!6820 = !DILocation(line: 958, column: 50, scope: !6818)
!6821 = !DILocation(line: 958, column: 25, scope: !6818)
!6822 = distinct !{!6822, !6823}
!6823 = !DILocation(line: 958, column: 25, scope: !6772)
!6824 = !DILocation(line: 966, column: 21, scope: !6772)
!6825 = !DILocalVariable(name: "s", scope: !6826, file: !918, line: 967, type: !904)
!6826 = distinct !DILexicalBlock(scope: !6766, file: !918, line: 966, column: 28)
!6827 = !DILocation(line: 967, column: 29, scope: !6826)
!6828 = !DILocation(line: 967, column: 33, scope: !6826)
!6829 = !DILocation(line: 967, column: 37, scope: !6826)
!6830 = !DILocation(line: 967, column: 45, scope: !6826)
!6831 = !DILocation(line: 967, column: 49, scope: !6826)
!6832 = !DILocation(line: 967, column: 47, scope: !6826)
!6833 = !DILocation(line: 967, column: 43, scope: !6826)
!6834 = !DILocalVariable(name: "a1", scope: !6826, file: !918, line: 967, type: !904)
!6835 = !DILocation(line: 967, column: 56, scope: !6826)
!6836 = !DILocalVariable(name: "b1", scope: !6826, file: !918, line: 967, type: !904)
!6837 = !DILocation(line: 967, column: 60, scope: !6826)
!6838 = !DILocation(line: 968, column: 31, scope: !6826)
!6839 = !DILocation(line: 968, column: 35, scope: !6826)
!6840 = !DILocation(line: 968, column: 33, scope: !6826)
!6841 = !DILocation(line: 968, column: 46, scope: !6826)
!6842 = !DILocation(line: 968, column: 44, scope: !6826)
!6843 = !DILocation(line: 968, column: 28, scope: !6826)
!6844 = !DILocation(line: 969, column: 30, scope: !6826)
!6845 = !DILocation(line: 969, column: 34, scope: !6826)
!6846 = !DILocation(line: 969, column: 32, scope: !6826)
!6847 = !DILocation(line: 969, column: 28, scope: !6826)
!6848 = !DILocation(line: 970, column: 29, scope: !6826)
!6849 = !DILocation(line: 970, column: 39, scope: !6826)
!6850 = !DILocation(line: 970, column: 37, scope: !6826)
!6851 = !DILocation(line: 970, column: 27, scope: !6826)
!6852 = !DILocation(line: 971, column: 32, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6826, file: !918, line: 971, column: 25)
!6854 = !DILocation(line: 971, column: 30, scope: !6853)
!6855 = !DILocation(line: 971, column: 37, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6857, file: !918, discriminator: 1)
!6857 = distinct !DILexicalBlock(scope: !6853, file: !918, line: 971, column: 25)
!6858 = !DILocation(line: 971, column: 41, scope: !6856)
!6859 = !DILocation(line: 971, column: 39, scope: !6856)
!6860 = !DILocation(line: 971, column: 25, scope: !6856)
!6861 = !DILocalVariable(name: "dim", scope: !6862, file: !918, line: 972, type: !904)
!6862 = distinct !DILexicalBlock(scope: !6857, file: !918, line: 971, column: 72)
!6863 = !DILocation(line: 972, column: 33, scope: !6862)
!6864 = !DILocalVariable(name: "a2", scope: !6862, file: !918, line: 972, type: !904)
!6865 = !DILocation(line: 972, column: 38, scope: !6862)
!6866 = !DILocation(line: 972, column: 43, scope: !6862)
!6867 = !DILocalVariable(name: "b2", scope: !6862, file: !918, line: 972, type: !904)
!6868 = !DILocation(line: 972, column: 47, scope: !6862)
!6869 = !DILocation(line: 972, column: 52, scope: !6862)
!6870 = !DILocalVariable(name: "vec", scope: !6862, file: !918, line: 973, type: !6871)
!6871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 256, align: 32, elements: !1037)
!6872 = !DILocation(line: 973, column: 35, scope: !6862)
!6873 = !DILocalVariable(name: "pv", scope: !6862, file: !918, line: 973, type: !915)
!6874 = !DILocation(line: 973, column: 44, scope: !6862)
!6875 = !DILocation(line: 973, column: 49, scope: !6862)
!6876 = !DILocation(line: 974, column: 40, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6862, file: !918, line: 974, column: 29)
!6878 = !DILocation(line: 974, column: 46, scope: !6877)
!6879 = !DILocation(line: 974, column: 38, scope: !6877)
!6880 = !DILocation(line: 974, column: 34, scope: !6877)
!6881 = !DILocation(line: 974, column: 62, scope: !6882)
!6882 = !DILexicalBlockFile(scope: !6883, file: !918, discriminator: 1)
!6883 = distinct !DILexicalBlock(scope: !6877, file: !918, line: 974, column: 29)
!6884 = !DILocation(line: 974, column: 29, scope: !6882)
!6885 = !DILocation(line: 975, column: 48, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6883, file: !918, line: 974, column: 68)
!6887 = !DILocation(line: 975, column: 53, scope: !6886)
!6888 = !DILocation(line: 975, column: 51, scope: !6886)
!6889 = !DILocation(line: 975, column: 41, scope: !6886)
!6890 = !DILocation(line: 975, column: 36, scope: !6886)
!6891 = !DILocation(line: 975, column: 39, scope: !6886)
!6892 = !DILocation(line: 976, column: 44, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6886, file: !918, line: 976, column: 37)
!6894 = !DILocation(line: 976, column: 41, scope: !6893)
!6895 = !DILocation(line: 976, column: 56, scope: !6893)
!6896 = !DILocation(line: 976, column: 53, scope: !6893)
!6897 = !DILocation(line: 976, column: 37, scope: !6886)
!6898 = !DILocation(line: 977, column: 40, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6893, file: !918, line: 976, column: 59)
!6900 = !DILocation(line: 978, column: 39, scope: !6899)
!6901 = !DILocation(line: 979, column: 33, scope: !6899)
!6902 = !DILocation(line: 974, column: 29, scope: !6903)
!6903 = !DILexicalBlockFile(scope: !6883, file: !918, discriminator: 2)
!6904 = distinct !{!6904, !6905}
!6905 = !DILocation(line: 974, column: 29, scope: !6862)
!6906 = !DILocation(line: 981, column: 45, scope: !6862)
!6907 = !DILocation(line: 981, column: 51, scope: !6862)
!6908 = !DILocation(line: 981, column: 55, scope: !6862)
!6909 = !DILocation(line: 981, column: 34, scope: !6862)
!6910 = !DILocation(line: 981, column: 32, scope: !6862)
!6911 = !DILocation(line: 982, column: 34, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6862, file: !918, line: 982, column: 33)
!6913 = !DILocation(line: 982, column: 33, scope: !6862)
!6914 = !DILocation(line: 983, column: 33, scope: !6912)
!6915 = !DILocation(line: 984, column: 40, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6862, file: !918, line: 984, column: 29)
!6917 = !DILocation(line: 984, column: 46, scope: !6916)
!6918 = !DILocation(line: 984, column: 38, scope: !6916)
!6919 = !DILocation(line: 984, column: 34, scope: !6916)
!6920 = !DILocation(line: 984, column: 62, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6922, file: !918, discriminator: 1)
!6922 = distinct !DILexicalBlock(scope: !6916, file: !918, line: 984, column: 29)
!6923 = !DILocation(line: 984, column: 29, scope: !6921)
!6924 = !DILocation(line: 985, column: 55, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6922, file: !918, line: 984, column: 68)
!6926 = !DILocation(line: 985, column: 52, scope: !6925)
!6927 = !DILocation(line: 985, column: 40, scope: !6925)
!6928 = !DILocation(line: 985, column: 45, scope: !6925)
!6929 = !DILocation(line: 985, column: 43, scope: !6925)
!6930 = !DILocation(line: 985, column: 33, scope: !6925)
!6931 = !DILocation(line: 985, column: 49, scope: !6925)
!6932 = !DILocation(line: 986, column: 44, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6925, file: !918, line: 986, column: 37)
!6934 = !DILocation(line: 986, column: 41, scope: !6933)
!6935 = !DILocation(line: 986, column: 56, scope: !6933)
!6936 = !DILocation(line: 986, column: 53, scope: !6933)
!6937 = !DILocation(line: 986, column: 37, scope: !6925)
!6938 = !DILocation(line: 987, column: 40, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6933, file: !918, line: 986, column: 59)
!6940 = !DILocation(line: 988, column: 39, scope: !6939)
!6941 = !DILocation(line: 989, column: 33, scope: !6939)
!6942 = !DILocation(line: 984, column: 29, scope: !6943)
!6943 = !DILexicalBlockFile(scope: !6922, file: !918, discriminator: 2)
!6944 = distinct !{!6944, !6945}
!6945 = !DILocation(line: 984, column: 29, scope: !6862)
!6946 = !DILocation(line: 991, column: 25, scope: !6862)
!6947 = !DILocation(line: 971, column: 53, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6857, file: !918, discriminator: 2)
!6949 = !DILocation(line: 971, column: 59, scope: !6948)
!6950 = !DILocation(line: 971, column: 50, scope: !6948)
!6951 = !DILocation(line: 971, column: 25, scope: !6948)
!6952 = distinct !{!6952, !6953}
!6953 = !DILocation(line: 971, column: 25, scope: !6826)
!6954 = !DILocation(line: 993, column: 17, scope: !6710)
!6955 = !DILocation(line: 947, column: 44, scope: !6956)
!6956 = !DILexicalBlockFile(scope: !6705, file: !918, discriminator: 2)
!6957 = !DILocation(line: 947, column: 17, scope: !6956)
!6958 = distinct !{!6958, !6959}
!6959 = !DILocation(line: 947, column: 17, scope: !6701)
!6960 = !DILocation(line: 994, column: 13, scope: !6701)
!6961 = !DILocation(line: 946, column: 60, scope: !6962)
!6962 = !DILexicalBlockFile(scope: !6689, file: !918, discriminator: 4)
!6963 = !DILocation(line: 946, column: 65, scope: !6962)
!6964 = !DILocation(line: 946, column: 13, scope: !6962)
!6965 = distinct !{!6965, !6966}
!6966 = !DILocation(line: 946, column: 13, scope: !6623)
!6967 = !DILocation(line: 934, column: 9, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !6614, file: !918, discriminator: 2)
!6969 = distinct !{!6969, !6615}
!6970 = !DILocation(line: 996, column: 5, scope: !6614)
!6971 = !DILocation(line: 932, column: 34, scope: !6972)
!6972 = !DILexicalBlockFile(scope: !6610, file: !918, discriminator: 2)
!6973 = !DILocation(line: 932, column: 5, scope: !6972)
!6974 = distinct !{!6974, !6975}
!6975 = !DILocation(line: 932, column: 5, scope: !6377)
!6976 = !DILocation(line: 997, column: 5, scope: !6377)
!6977 = !DILocation(line: 998, column: 1, scope: !6377)
!6978 = distinct !DISubprogram(name: "ff_bufqueue_is_full", scope: !1730, file: !1730, line: 60, type: !6979, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!904, !5407}
!6981 = !DILocalVariable(name: "queue", arg: 1, scope: !6978, file: !1730, line: 60, type: !5407)
!6982 = !DILocation(line: 60, column: 58, scope: !6978)
!6983 = !DILocation(line: 62, column: 12, scope: !6978)
!6984 = !DILocation(line: 62, column: 19, scope: !6978)
!6985 = !DILocation(line: 62, column: 29, scope: !6978)
!6986 = !DILocation(line: 62, column: 5, scope: !6978)
!6987 = distinct !DISubprogram(name: "ff_bufqueue_get", scope: !1730, file: !1730, line: 98, type: !6988, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!1031, !5407}
!6990 = !DILocalVariable(name: "queue", arg: 1, scope: !6987, file: !1730, line: 98, type: !5407)
!6991 = !DILocation(line: 98, column: 59, scope: !6987)
!6992 = !DILocalVariable(name: "ret", scope: !6987, file: !1730, line: 100, type: !1031)
!6993 = !DILocation(line: 100, column: 14, scope: !6987)
!6994 = !DILocation(line: 100, column: 33, scope: !6987)
!6995 = !DILocation(line: 100, column: 40, scope: !6987)
!6996 = !DILocation(line: 100, column: 20, scope: !6987)
!6997 = !DILocation(line: 100, column: 27, scope: !6987)
!6998 = !DILocation(line: 101, column: 5, scope: !6987)
!6999 = distinct !{!6999, !6998}
!7000 = !DILocation(line: 101, column: 16, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !7002, file: !1730, discriminator: 1)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !1730, line: 101, column: 14)
!7003 = distinct !DILexicalBlock(scope: !6987, file: !1730, line: 101, column: 8)
!7004 = !DILocation(line: 101, column: 23, scope: !7001)
!7005 = !DILocation(line: 101, column: 15, scope: !7001)
!7006 = !DILocation(line: 101, column: 14, scope: !7001)
!7007 = !DILocation(line: 101, column: 37, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !7009, file: !1730, discriminator: 2)
!7009 = distinct !DILexicalBlock(scope: !7002, file: !1730, line: 101, column: 35)
!7010 = !DILocation(line: 101, column: 100, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !7008, file: !1730, discriminator: 4)
!7012 = !DILocation(line: 101, column: 100, scope: !7008)
!7013 = !DILocation(line: 101, column: 111, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !7003, file: !1730, discriminator: 3)
!7015 = !DILocation(line: 102, column: 5, scope: !6987)
!7016 = !DILocation(line: 102, column: 12, scope: !6987)
!7017 = !DILocation(line: 102, column: 21, scope: !6987)
!7018 = !DILocation(line: 103, column: 18, scope: !6987)
!7019 = !DILocation(line: 103, column: 25, scope: !6987)
!7020 = !DILocation(line: 103, column: 5, scope: !6987)
!7021 = !DILocation(line: 103, column: 12, scope: !6987)
!7022 = !DILocation(line: 103, column: 31, scope: !6987)
!7023 = !DILocation(line: 104, column: 20, scope: !6987)
!7024 = !DILocation(line: 104, column: 27, scope: !6987)
!7025 = !DILocation(line: 104, column: 32, scope: !6987)
!7026 = !DILocation(line: 104, column: 37, scope: !6987)
!7027 = !DILocation(line: 104, column: 19, scope: !6987)
!7028 = !DILocation(line: 104, column: 5, scope: !6987)
!7029 = !DILocation(line: 104, column: 12, scope: !6987)
!7030 = !DILocation(line: 104, column: 17, scope: !6987)
!7031 = !DILocation(line: 105, column: 12, scope: !6987)
!7032 = !DILocation(line: 105, column: 5, scope: !6987)
!7033 = distinct !DISubprogram(name: "get_floor_average", scope: !918, file: !918, line: 749, type: !7034, isLocal: true, isDefinition: true, scopeLine: 750, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!898, !1757, !915, !904}
!7036 = !DILocalVariable(name: "fc", arg: 1, scope: !7033, file: !918, line: 749, type: !1757)
!7037 = !DILocation(line: 749, column: 51, scope: !7033)
!7038 = !DILocalVariable(name: "coeffs", arg: 2, scope: !7033, file: !918, line: 749, type: !915)
!7039 = !DILocation(line: 749, column: 62, scope: !7033)
!7040 = !DILocalVariable(name: "i", arg: 3, scope: !7033, file: !918, line: 749, type: !904)
!7041 = !DILocation(line: 749, column: 74, scope: !7033)
!7042 = !DILocalVariable(name: "begin", scope: !7033, file: !918, line: 751, type: !904)
!7043 = !DILocation(line: 751, column: 9, scope: !7033)
!7044 = !DILocation(line: 751, column: 37, scope: !7033)
!7045 = !DILocation(line: 751, column: 38, scope: !7033)
!7046 = !DILocation(line: 751, column: 42, scope: !7033)
!7047 = !DILocation(line: 751, column: 36, scope: !7033)
!7048 = !DILocation(line: 751, column: 51, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !7033, file: !918, discriminator: 1)
!7050 = !DILocation(line: 751, column: 52, scope: !7049)
!7051 = !DILocation(line: 751, column: 36, scope: !7049)
!7052 = !DILocation(line: 751, column: 36, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !7033, file: !918, discriminator: 2)
!7054 = !DILocation(line: 751, column: 36, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !7033, file: !918, discriminator: 3)
!7056 = !DILocation(line: 751, column: 26, scope: !7055)
!7057 = !DILocation(line: 751, column: 30, scope: !7055)
!7058 = !DILocation(line: 751, column: 64, scope: !7055)
!7059 = !DILocation(line: 751, column: 17, scope: !7055)
!7060 = !DILocation(line: 751, column: 21, scope: !7055)
!7061 = !DILocation(line: 751, column: 70, scope: !7055)
!7062 = !DILocation(line: 751, column: 9, scope: !7055)
!7063 = !DILocalVariable(name: "end", scope: !7033, file: !918, line: 752, type: !904)
!7064 = !DILocation(line: 752, column: 9, scope: !7033)
!7065 = !DILocation(line: 752, column: 35, scope: !7033)
!7066 = !DILocation(line: 752, column: 36, scope: !7033)
!7067 = !DILocation(line: 752, column: 43, scope: !7033)
!7068 = !DILocation(line: 752, column: 47, scope: !7033)
!7069 = !DILocation(line: 752, column: 54, scope: !7033)
!7070 = !DILocation(line: 752, column: 40, scope: !7033)
!7071 = !DILocation(line: 752, column: 34, scope: !7033)
!7072 = !DILocation(line: 752, column: 62, scope: !7049)
!7073 = !DILocation(line: 752, column: 66, scope: !7049)
!7074 = !DILocation(line: 752, column: 73, scope: !7049)
!7075 = !DILocation(line: 752, column: 34, scope: !7049)
!7076 = !DILocation(line: 752, column: 81, scope: !7053)
!7077 = !DILocation(line: 752, column: 82, scope: !7053)
!7078 = !DILocation(line: 752, column: 34, scope: !7053)
!7079 = !DILocation(line: 752, column: 34, scope: !7055)
!7080 = !DILocation(line: 752, column: 24, scope: !7055)
!7081 = !DILocation(line: 752, column: 28, scope: !7055)
!7082 = !DILocation(line: 752, column: 88, scope: !7055)
!7083 = !DILocation(line: 752, column: 15, scope: !7055)
!7084 = !DILocation(line: 752, column: 19, scope: !7055)
!7085 = !DILocation(line: 752, column: 94, scope: !7055)
!7086 = !DILocation(line: 752, column: 9, scope: !7055)
!7087 = !DILocalVariable(name: "j", scope: !7033, file: !918, line: 753, type: !904)
!7088 = !DILocation(line: 753, column: 9, scope: !7033)
!7089 = !DILocalVariable(name: "average", scope: !7033, file: !918, line: 754, type: !898)
!7090 = !DILocation(line: 754, column: 11, scope: !7033)
!7091 = !DILocation(line: 756, column: 14, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7033, file: !918, line: 756, column: 5)
!7093 = !DILocation(line: 756, column: 12, scope: !7092)
!7094 = !DILocation(line: 756, column: 10, scope: !7092)
!7095 = !DILocation(line: 756, column: 21, scope: !7096)
!7096 = !DILexicalBlockFile(scope: !7097, file: !918, discriminator: 1)
!7097 = distinct !DILexicalBlock(scope: !7092, file: !918, line: 756, column: 5)
!7098 = !DILocation(line: 756, column: 25, scope: !7096)
!7099 = !DILocation(line: 756, column: 23, scope: !7096)
!7100 = !DILocation(line: 756, column: 5, scope: !7096)
!7101 = !DILocation(line: 757, column: 32, scope: !7097)
!7102 = !DILocation(line: 757, column: 25, scope: !7097)
!7103 = !DILocation(line: 757, column: 20, scope: !7097)
!7104 = !DILocation(line: 757, column: 17, scope: !7097)
!7105 = !DILocation(line: 757, column: 9, scope: !7097)
!7106 = !DILocation(line: 756, column: 31, scope: !7107)
!7107 = !DILexicalBlockFile(scope: !7097, file: !918, discriminator: 2)
!7108 = !DILocation(line: 756, column: 5, scope: !7107)
!7109 = distinct !{!7109, !7110}
!7110 = !DILocation(line: 756, column: 5, scope: !7033)
!7111 = !DILocation(line: 758, column: 12, scope: !7033)
!7112 = !DILocation(line: 758, column: 23, scope: !7033)
!7113 = !DILocation(line: 758, column: 29, scope: !7033)
!7114 = !DILocation(line: 758, column: 27, scope: !7033)
!7115 = !DILocation(line: 758, column: 22, scope: !7033)
!7116 = !DILocation(line: 758, column: 20, scope: !7033)
!7117 = !DILocation(line: 758, column: 5, scope: !7033)
!7118 = distinct !DISubprogram(name: "render_point", scope: !918, file: !918, line: 788, type: !7119, isLocal: true, isDefinition: true, scopeLine: 789, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!904, !904, !904, !904, !904, !904}
!7121 = !DILocalVariable(name: "x0", arg: 1, scope: !7118, file: !918, line: 788, type: !904)
!7122 = !DILocation(line: 788, column: 29, scope: !7118)
!7123 = !DILocalVariable(name: "y0", arg: 2, scope: !7118, file: !918, line: 788, type: !904)
!7124 = !DILocation(line: 788, column: 37, scope: !7118)
!7125 = !DILocalVariable(name: "x1", arg: 3, scope: !7118, file: !918, line: 788, type: !904)
!7126 = !DILocation(line: 788, column: 45, scope: !7118)
!7127 = !DILocalVariable(name: "y1", arg: 4, scope: !7118, file: !918, line: 788, type: !904)
!7128 = !DILocation(line: 788, column: 53, scope: !7118)
!7129 = !DILocalVariable(name: "x", arg: 5, scope: !7118, file: !918, line: 788, type: !904)
!7130 = !DILocation(line: 788, column: 61, scope: !7118)
!7131 = !DILocation(line: 790, column: 12, scope: !7118)
!7132 = !DILocation(line: 790, column: 18, scope: !7118)
!7133 = !DILocation(line: 790, column: 22, scope: !7118)
!7134 = !DILocation(line: 790, column: 20, scope: !7118)
!7135 = !DILocation(line: 790, column: 29, scope: !7118)
!7136 = !DILocation(line: 790, column: 34, scope: !7118)
!7137 = !DILocation(line: 790, column: 32, scope: !7118)
!7138 = !DILocation(line: 790, column: 26, scope: !7118)
!7139 = !DILocation(line: 790, column: 41, scope: !7118)
!7140 = !DILocation(line: 790, column: 46, scope: !7118)
!7141 = !DILocation(line: 790, column: 44, scope: !7118)
!7142 = !DILocation(line: 790, column: 38, scope: !7118)
!7143 = !DILocation(line: 790, column: 15, scope: !7118)
!7144 = !DILocation(line: 790, column: 5, scope: !7118)
!7145 = distinct !DISubprogram(name: "put_codeword", scope: !918, file: !918, line: 152, type: !7146, isLocal: true, isDefinition: true, scopeLine: 154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!904, !4537, !1740, !904}
!7148 = !DILocalVariable(name: "pb", arg: 1, scope: !7145, file: !918, line: 152, type: !4537)
!7149 = !DILocation(line: 152, column: 47, scope: !7145)
!7150 = !DILocalVariable(name: "cb", arg: 2, scope: !7145, file: !918, line: 152, type: !1740)
!7151 = !DILocation(line: 152, column: 72, scope: !7145)
!7152 = !DILocalVariable(name: "entry", arg: 3, scope: !7145, file: !918, line: 153, type: !904)
!7153 = !DILocation(line: 153, column: 36, scope: !7145)
!7154 = !DILocation(line: 158, column: 9, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7145, file: !918, line: 158, column: 9)
!7156 = !DILocation(line: 158, column: 13, scope: !7155)
!7157 = !DILocation(line: 158, column: 43, scope: !7155)
!7158 = !DILocation(line: 158, column: 28, scope: !7155)
!7159 = !DILocation(line: 158, column: 26, scope: !7155)
!7160 = !DILocation(line: 158, column: 58, scope: !7155)
!7161 = !DILocation(line: 158, column: 49, scope: !7155)
!7162 = !DILocation(line: 158, column: 53, scope: !7155)
!7163 = !DILocation(line: 158, column: 47, scope: !7155)
!7164 = !DILocation(line: 158, column: 9, scope: !7145)
!7165 = !DILocation(line: 159, column: 9, scope: !7155)
!7166 = !DILocation(line: 160, column: 14, scope: !7145)
!7167 = !DILocation(line: 160, column: 27, scope: !7145)
!7168 = !DILocation(line: 160, column: 18, scope: !7145)
!7169 = !DILocation(line: 160, column: 22, scope: !7145)
!7170 = !DILocation(line: 160, column: 49, scope: !7145)
!7171 = !DILocation(line: 160, column: 35, scope: !7145)
!7172 = !DILocation(line: 160, column: 39, scope: !7145)
!7173 = !DILocation(line: 160, column: 5, scope: !7145)
!7174 = !DILocation(line: 161, column: 5, scope: !7145)
!7175 = !DILocation(line: 162, column: 1, scope: !7145)
!7176 = distinct !DISubprogram(name: "put_vector", scope: !918, file: !918, line: 882, type: !7177, isLocal: true, isDefinition: true, scopeLine: 884, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{!915, !1740, !4537, !915}
!7179 = !DILocalVariable(name: "book", arg: 1, scope: !7176, file: !918, line: 882, type: !1740)
!7180 = !DILocation(line: 882, column: 47, scope: !7176)
!7181 = !DILocalVariable(name: "pb", arg: 2, scope: !7176, file: !918, line: 882, type: !4537)
!7182 = !DILocation(line: 882, column: 68, scope: !7176)
!7183 = !DILocalVariable(name: "num", arg: 3, scope: !7176, file: !918, line: 883, type: !915)
!7184 = !DILocation(line: 883, column: 33, scope: !7176)
!7185 = !DILocalVariable(name: "i", scope: !7176, file: !918, line: 885, type: !904)
!7186 = !DILocation(line: 885, column: 9, scope: !7176)
!7187 = !DILocalVariable(name: "entry", scope: !7176, file: !918, line: 885, type: !904)
!7188 = !DILocation(line: 885, column: 12, scope: !7176)
!7189 = !DILocalVariable(name: "distance", scope: !7176, file: !918, line: 886, type: !898)
!7190 = !DILocation(line: 886, column: 11, scope: !7176)
!7191 = !DILocation(line: 887, column: 4, scope: !7176)
!7192 = !DILocation(line: 887, column: 10, scope: !7176)
!7193 = !DILocation(line: 887, column: 5, scope: !7176)
!7194 = !DILocation(line: 887, column: 5, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7176, file: !918, discriminator: 1)
!7196 = !DILocation(line: 887, column: 21, scope: !7197)
!7197 = !DILexicalBlockFile(scope: !7176, file: !918, discriminator: 2)
!7198 = !DILocation(line: 887, column: 5, scope: !7199)
!7199 = !DILexicalBlockFile(scope: !7176, file: !918, discriminator: 3)
!7200 = !DILocation(line: 888, column: 12, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7176, file: !918, line: 888, column: 5)
!7202 = !DILocation(line: 888, column: 10, scope: !7201)
!7203 = !DILocation(line: 888, column: 17, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !7205, file: !918, discriminator: 1)
!7205 = distinct !DILexicalBlock(scope: !7201, file: !918, line: 888, column: 5)
!7206 = !DILocation(line: 888, column: 21, scope: !7204)
!7207 = !DILocation(line: 888, column: 27, scope: !7204)
!7208 = !DILocation(line: 888, column: 19, scope: !7204)
!7209 = !DILocation(line: 888, column: 5, scope: !7204)
!7210 = !DILocalVariable(name: "vec", scope: !7211, file: !918, line: 889, type: !915)
!7211 = distinct !DILexicalBlock(scope: !7205, file: !918, line: 888, column: 42)
!7212 = !DILocation(line: 889, column: 17, scope: !7211)
!7213 = !DILocation(line: 889, column: 23, scope: !7211)
!7214 = !DILocation(line: 889, column: 29, scope: !7211)
!7215 = !DILocation(line: 889, column: 42, scope: !7211)
!7216 = !DILocation(line: 889, column: 46, scope: !7211)
!7217 = !DILocation(line: 889, column: 52, scope: !7211)
!7218 = !DILocation(line: 889, column: 44, scope: !7211)
!7219 = !DILocation(line: 889, column: 40, scope: !7211)
!7220 = !DILocalVariable(name: "d", scope: !7211, file: !918, line: 889, type: !898)
!7221 = !DILocation(line: 889, column: 65, scope: !7211)
!7222 = !DILocation(line: 889, column: 80, scope: !7211)
!7223 = !DILocation(line: 889, column: 69, scope: !7211)
!7224 = !DILocation(line: 889, column: 75, scope: !7211)
!7225 = !DILocalVariable(name: "j", scope: !7211, file: !918, line: 890, type: !904)
!7226 = !DILocation(line: 890, column: 13, scope: !7211)
!7227 = !DILocation(line: 891, column: 25, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7211, file: !918, line: 891, column: 13)
!7229 = !DILocation(line: 891, column: 14, scope: !7228)
!7230 = !DILocation(line: 891, column: 20, scope: !7228)
!7231 = !DILocation(line: 891, column: 13, scope: !7211)
!7232 = !DILocation(line: 892, column: 13, scope: !7228)
!7233 = !DILocation(line: 893, column: 16, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7211, file: !918, line: 893, column: 9)
!7235 = !DILocation(line: 893, column: 14, scope: !7234)
!7236 = !DILocation(line: 893, column: 21, scope: !7237)
!7237 = !DILexicalBlockFile(scope: !7238, file: !918, discriminator: 1)
!7238 = distinct !DILexicalBlock(scope: !7234, file: !918, line: 893, column: 9)
!7239 = !DILocation(line: 893, column: 25, scope: !7237)
!7240 = !DILocation(line: 893, column: 31, scope: !7237)
!7241 = !DILocation(line: 893, column: 23, scope: !7237)
!7242 = !DILocation(line: 893, column: 9, scope: !7237)
!7243 = !DILocation(line: 894, column: 22, scope: !7238)
!7244 = !DILocation(line: 894, column: 18, scope: !7238)
!7245 = !DILocation(line: 894, column: 31, scope: !7238)
!7246 = !DILocation(line: 894, column: 27, scope: !7238)
!7247 = !DILocation(line: 894, column: 25, scope: !7238)
!7248 = !DILocation(line: 894, column: 15, scope: !7238)
!7249 = !DILocation(line: 894, column: 13, scope: !7238)
!7250 = !DILocation(line: 893, column: 45, scope: !7251)
!7251 = !DILexicalBlockFile(scope: !7238, file: !918, discriminator: 2)
!7252 = !DILocation(line: 893, column: 9, scope: !7251)
!7253 = distinct !{!7253, !7254}
!7254 = !DILocation(line: 893, column: 9, scope: !7211)
!7255 = !DILocation(line: 895, column: 13, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7211, file: !918, line: 895, column: 13)
!7257 = !DILocation(line: 895, column: 24, scope: !7256)
!7258 = !DILocation(line: 895, column: 22, scope: !7256)
!7259 = !DILocation(line: 895, column: 13, scope: !7211)
!7260 = !DILocation(line: 896, column: 21, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7256, file: !918, line: 895, column: 27)
!7262 = !DILocation(line: 896, column: 19, scope: !7261)
!7263 = !DILocation(line: 897, column: 24, scope: !7261)
!7264 = !DILocation(line: 897, column: 22, scope: !7261)
!7265 = !DILocation(line: 898, column: 9, scope: !7261)
!7266 = !DILocation(line: 899, column: 5, scope: !7211)
!7267 = !DILocation(line: 888, column: 38, scope: !7268)
!7268 = !DILexicalBlockFile(scope: !7205, file: !918, discriminator: 2)
!7269 = !DILocation(line: 888, column: 5, scope: !7268)
!7270 = distinct !{!7270, !7271}
!7271 = !DILocation(line: 888, column: 5, scope: !7176)
!7272 = !DILocation(line: 900, column: 22, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7176, file: !918, line: 900, column: 9)
!7274 = !DILocation(line: 900, column: 26, scope: !7273)
!7275 = !DILocation(line: 900, column: 32, scope: !7273)
!7276 = !DILocation(line: 900, column: 9, scope: !7273)
!7277 = !DILocation(line: 900, column: 9, scope: !7176)
!7278 = !DILocation(line: 901, column: 9, scope: !7273)
!7279 = !DILocation(line: 902, column: 30, scope: !7176)
!7280 = !DILocation(line: 902, column: 38, scope: !7176)
!7281 = !DILocation(line: 902, column: 44, scope: !7176)
!7282 = !DILocation(line: 902, column: 36, scope: !7176)
!7283 = !DILocation(line: 902, column: 13, scope: !7176)
!7284 = !DILocation(line: 902, column: 19, scope: !7176)
!7285 = !DILocation(line: 902, column: 5, scope: !7176)
!7286 = !DILocation(line: 903, column: 1, scope: !7176)
!7287 = distinct !DISubprogram(name: "ff_bufqueue_discard_all", scope: !1730, file: !1730, line: 111, type: !7288, isLocal: true, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1869)
!7288 = !DISubroutineType(types: !7289)
!7289 = !{null, !5407}
!7290 = !DILocalVariable(name: "queue", arg: 1, scope: !7287, file: !1730, line: 111, type: !5407)
!7291 = !DILocation(line: 111, column: 63, scope: !7287)
!7292 = !DILocation(line: 113, column: 5, scope: !7287)
!7293 = !DILocation(line: 113, column: 12, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !7287, file: !1730, discriminator: 1)
!7295 = !DILocation(line: 113, column: 19, scope: !7294)
!7296 = !DILocation(line: 113, column: 5, scope: !7294)
!7297 = !DILocalVariable(name: "buf", scope: !7298, file: !1730, line: 114, type: !1031)
!7298 = distinct !DILexicalBlock(scope: !7287, file: !1730, line: 113, column: 30)
!7299 = !DILocation(line: 114, column: 18, scope: !7298)
!7300 = !DILocation(line: 114, column: 40, scope: !7298)
!7301 = !DILocation(line: 114, column: 24, scope: !7298)
!7302 = !DILocation(line: 115, column: 9, scope: !7298)
!7303 = !DILocation(line: 113, column: 5, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !7287, file: !1730, discriminator: 2)
!7305 = distinct !{!7305, !7292}
!7306 = !DILocation(line: 117, column: 1, scope: !7287)
