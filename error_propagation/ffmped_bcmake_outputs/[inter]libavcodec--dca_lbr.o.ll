; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--dca_lbr.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--dca_lbr.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.DCALbrDecoder = type { %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [32 x i8]], [32 x i8], [3 x [32 x i8]], [3 x [32 x i8]], [6 x i32], [6 x [12 x [8 x i8]]], [6 x [3 x [64 x i8]]], [6 x [28 x i8]], [6 x [28 x [8 x i8]]], [6 x i32], [6 x [32 x [8 x i8]]], [6 x [8 x [5 x i8]]], i8, [2 x [6 x [3 x [2 x [8 x float]]]]], [32 x float], [6 x [32 x float*]], float*, i32, [20 x i8], [6 x [128 x float]], [128 x float], [64 x float], [5 x [2 x float]], float, [6 x i8], [5 x [32 x [2 x i16]]], [512 x %struct.DCALbrTone], i32, %struct.FFTContext, %struct.AVFloatDSPContext*, %struct.DCADSPContext*, [8 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.DCALbrTone = type { i8, i8, i8, i8, [6 x i8], [6 x i8] }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.DCADSPContext = type { void (i32**, i32*, [32 x i8]*, [2 x i32]*, i64, i64, i64, i64)*, void (i32**, i32**, i32*, i64, i64, i64, i64)*, [2 x void (float*, i32*, float*, i64)*], void (float*, float*, float*, i64)*, [2 x void (%struct.SynthFilterContext*, %struct.FFTContext*, float*, i32**, i32**, float*, i32*, float*, float*, i64, float)*], void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32*, i64)*, [2 x void (%struct.SynthFilterContext*, %struct.DCADCTContext*, i32*, i32**, i32**, i32*, i32*, i32*, i32*, i64)*], void (i32*, i32*, i32, i64)*, void (i32*, i32*, i32*, i64)*, void (i32*, i32*, i32, i64)*, void (i32*, i32*, i32, i64)*, void (i32*, i32, i64)*, void (i32*, i32, i64)*, void (i32*, i32*, i32*, i32*, i64)*, void ([4 x float]*, float**, float*, i64, i64)*, void (float*, float*, [4 x float]*, [2 x float]*, i64)* }
%struct.SynthFilterContext = type { void (%struct.FFTContext*, float*, i32*, float*, float*, float*, float*, float)*, void (%struct.FFTContext*, float*, i32*, float*, float*, float*, float*, float)*, void (%struct.DCADCTContext*, i32*, i32*, i32*, i32*, i32*, i32*)*, void (%struct.DCADCTContext*, i32*, i32*, i32*, i32*, i32*, i32*)* }
%struct.DCADCTContext = type { [2 x void (i32*, i32*)*] }
%struct.DCAExssAsset = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.anon = type { %struct.LBRChunk, %struct.LBRChunk, [5 x %struct.LBRChunk], [3 x %struct.LBRChunk], [3 x %struct.LBRChunk], [3 x %struct.LBRChunk], [3 x %struct.LBRChunk] }
%struct.LBRChunk = type { i32, i32, i8* }
%union.unaligned_32 = type { i32 }
%union.unaligned_16 = type { i16 }
%struct.DCAContext = type { %struct.AVClass*, %struct.AVCodecContext*, [16 x i8], %struct.DCACoreDecoder, %struct.DCAExssParser, [16 x i8], %struct.DCAXllDecoder, %struct.DCALbrDecoder, %struct.DCADSPContext, i32*, i8*, i32, i32, i32, i32 }
%struct.DCACoreDecoder = type { %struct.AVCodecContext*, %struct.GetBitContext, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x i8], [7 x [10 x i8]], [7 x [10 x i32]], [16 x i8], [7 x [64 x i8]], [7 x [64 x i16]], [7 x [64 x i8]], [16 x [7 x [32 x i8]]], [7 x [32 x [2 x i32]]], [7 x i8], [7 x [64 x i32]], i32, i32, [24 x i32], i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [12 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, [7 x [64 x i32*]], i32, i32*, [7 x [32 x i32*]], i32*, [24 x i8], [7 x %struct.DCADSPData], %struct.DCADSPContext*, %struct.DCADCTContext, [2 x %struct.FFTContext], %struct.SynthFilterContext, %struct.AVFloatDSPContext*, %struct.AVFixedDSPContext*, i32, i8*, [32 x i32*], i32, float, [32 x i32], i32, i32, i32, i32, [16 x i8] }
%struct.DCADSPData = type { %union.anon, i32, [28 x i8] }
%union.anon = type { %struct.anon.0 }
%struct.anon.0 = type { [1024 x float], [64 x float] }
%struct.AVFixedDSPContext = type { void (i16*, i32*, i32*, i32*, i32, i8)*, void (i32*, i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32)*, void (i32*, i32*, i32*, i32*, i32)*, i32 (i32*, i32*, i32)*, void (i32*, i32*, i32)* }
%struct.DCAExssParser = type { %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [1 x %struct.DCAExssAsset] }
%struct.DCAXllDecoder = type { %struct.AVCodecContext*, %struct.GetBitContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], [3 x %struct.DCAXllChSet], i32*, i32, i32, i32, i32, i32, i32, i8*, i32, i32, %struct.DCADSPContext*, i32, [32 x i32*] }
%struct.DCAXllChSet = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i32], [16 x i32], [16 x i32], i32, [8 x i32], i32, i32, [2 x %struct.DCAXllBand], i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [8 x i32], [4 x i8], [8 x [8 x i32]], [3 x i32], [3 x i32*], [24 x i8] }
%struct.DCAXllBand = type { i32, [8 x i32], [4 x i32], [8 x i32], i32, [8 x i32], [8 x [16 x i32]], i32, i32, [8 x i32], [8 x i32], [8 x i32*], [8 x i32*] }

@.str = private unnamed_addr constant [23 x i8] c"Invalid LBR sync word\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"LBR decoder not initialized\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Invalid LBR header type\0A\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"LBR frame chunk was truncated\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Invalid LBR checksum\0A\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"Invalid LBR frame chunk ID\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"LBR chunk %#x was truncated\0A\00", align 1
@channel_layouts = internal constant [7 x i16] [i16 4, i16 3, i16 7, i16 1536, i16 1540, i16 1539, i16 1543], align 2
@channel_counts = internal constant [7 x i8] c"\01\02\03\02\03\04\05", align 1
@channel_reorder_lfe = internal constant [7 x [5 x i8]] [[5 x i8] c"\00\FF\FF\FF\FF", [5 x i8] c"\00\01\FF\FF\FF", [5 x i8] c"\00\01\02\FF\FF", [5 x i8] c"\01\02\FF\FF\FF", [5 x i8] c"\02\03\00\FF\FF", [5 x i8] c"\00\01\03\04\FF", [5 x i8] c"\00\01\04\05\02"], align 16
@channel_reorder_nolfe = internal constant [7 x [5 x i8]] [[5 x i8] c"\00\FF\FF\FF\FF", [5 x i8] c"\00\01\FF\FF\FF", [5 x i8] c"\00\01\02\FF\FF", [5 x i8] c"\00\01\FF\FF\FF", [5 x i8] c"\01\02\00\FF\FF", [5 x i8] c"\00\01\02\03\FF", [5 x i8] c"\00\01\03\04\02"], align 16
@lfe_index = internal constant [7 x i8] c"\01\02\03\00\01\02\03", align 1
@ff_dca_lfe_iir = external constant [5 x [4 x float]], align 16
@.str.7 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"Invalid LBR sample rate\0A\00", align 1
@ff_dca_sampling_freqs = external constant [16 x i32], align 16
@.str.11 = private unnamed_addr constant [22 x i8] c"%d Hz LBR sample rate\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"LBR channel mask %#x\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"LBR stream version %#x\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"LBR multi-channel downmix\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%d Hz LFE interpolation\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"LBR band limit %#x\00", align 1
@ff_dca_freq_ranges = external constant [16 x i8], align 16
@.str.17 = private unnamed_addr constant [44 x i8] c"Invalid LBR band limit for frequency range\0A\00", align 1
@ff_dca_avg_g3_freqs = external constant [3 x i16], align 2
@.str.18 = private unnamed_addr constant [51 x i8] c"Invalid number of channels for LBR stereo downmix\0A\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"Embedded LBR stereo downmix\00", align 1
@ff_dca_long_window = external constant [128 x float], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"LFE chunk too short\0A\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"Invalid LFE step size index\0A\00", align 1
@ff_dca_lfe_step_size_24 = external constant [144 x float], align 16
@ff_dca_lfe_delta_index_24 = external constant [32 x i8], align 16
@ff_dca_lfe_step_size_16 = external constant [101 x float], align 16
@ff_dca_lfe_delta_index_16 = external constant [8 x i8], align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"Tonal scale factor chunk too short\0A\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"Tonal group chunk too short\0A\00", align 1
@ff_dca_vlc_tnl_grp = external global [5 x %struct.VLC], align 16
@.str.24 = private unnamed_addr constant [30 x i8] c"Invalid tonal frequency diff\0A\00", align 1
@ff_dca_fst_amp = external constant [44 x i16], align 16
@.str.25 = private unnamed_addr constant [30 x i8] c"Invalid spectral line offset\0A\00", align 1
@ff_dca_vlc_tnl_scf = external global %struct.VLC, align 8
@ff_dca_freq_to_sb = external constant [32 x i8], align 16
@ff_dca_vlc_damp = external global %struct.VLC, align 8
@ff_dca_vlc_dph = external global %struct.VLC, align 8
@ff_dca_ph0_shift = external constant [8 x i8], align 1
@ff_dca_scf_to_grid_1 = external constant [32 x i8], align 16
@ff_dca_grid_1_to_scf = external constant [11 x i8], align 1
@ff_dca_vlc_avg_g3 = external global %struct.VLC, align 8
@.str.26 = private unnamed_addr constant [28 x i8] c"First grid chunk too short\0A\00", align 1
@ff_dca_vlc_fst_rsd_amp = external global %struct.VLC, align 8
@ff_dca_vlc_rsd_apprx = external global %struct.VLC, align 8
@.str.27 = private unnamed_addr constant [31 x i8] c"Invalid scale factor distance\0A\00", align 1
@ff_dca_vlc_rsd_amp = external global %struct.VLC, align 8
@ff_dca_vlc_st_grid = external global %struct.VLC, align 8
@ff_dca_sb_reorder = external constant [8 x [8 x i8]], align 16
@lpc_tab = internal global [16 x float] zeroinitializer, align 16
@ff_dca_vlc_grid_3 = external global %struct.VLC, align 8
@ff_dca_rsd_level_2a = external constant [2 x float], align 4
@ff_dca_rsd_level_2b = external constant [2 x float], align 4
@ff_dca_rsd_pack_5_in_8 = external constant [256 x i16], align 16
@ff_dca_rsd_level_3 = external constant [3 x float], align 4
@ff_dca_rsd_pack_3_in_7 = external constant [128 x [3 x i8]], align 16
@ff_dca_rsd_level_5 = external constant [5 x float], align 16
@ff_dca_vlc_rsd = external global %struct.VLC, align 8
@ff_dca_rsd_level_8 = external constant [8 x float], align 16
@ff_dca_rsd_level_16 = external constant [16 x float], align 16
@.str.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"libavcodec/dca_lbr.c\00", align 1
@ff_dca_scf_to_grid_2 = external constant [32 x i8], align 16
@ff_dca_grid_2_to_scf = external constant [3 x i8], align 1
@ff_dca_vlc_grid_2 = external global %struct.VLC, align 8
@ff_dca_grid_1_weights = external constant [12 x [32 x i8]], align 16
@ff_dca_quant_amp = external constant [57 x float], align 16
@ff_dca_st_coeff = external constant [34 x float], align 16
@ff_dca_bank_coeff = external constant [10 x float], align 16
@ff_dca_synth_env = external constant [32 x float], align 16
@cos_tab = internal global [256 x float] zeroinitializer, align 16
@ff_dca_corr_cf = external constant [32 x [11 x float]], align 16
@init_tables.initialized = internal global i32 0, align 4

; Function Attrs: nounwind uwtable
define i32 @ff_dca_lbr_parse(%struct.DCALbrDecoder* %s, i8* %data, %struct.DCAExssAsset* %asset) #0 !dbg !1061 {
entry:
  %b.addr.i.i.i578 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i578, metadata !2132, metadata !2138), !dbg !2139
  %g.addr.i.i579 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i579, metadata !2156, metadata !2138), !dbg !2157
  %retval.i580 = alloca i32, align 4
  %g.addr.i581 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i581, metadata !2158, metadata !2138), !dbg !2159
  %x.addr.i.i.i.i551 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i.i.i551, metadata !2160, metadata !2138), !dbg !2165
  %b.addr.i.i.i552 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i552, metadata !2175, metadata !2138), !dbg !2176
  %g.addr.i.i553 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i553, metadata !2177, metadata !2138), !dbg !2178
  %retval.i554 = alloca i32, align 4
  %g.addr.i555 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i555, metadata !2179, metadata !2138), !dbg !2180
  %b.addr.i.i.i532 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i532, metadata !2132, metadata !2138), !dbg !2181
  %g.addr.i.i533 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i533, metadata !2156, metadata !2138), !dbg !2186
  %retval.i534 = alloca i32, align 4
  %g.addr.i535 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i535, metadata !2158, metadata !2138), !dbg !2187
  %g.addr.i525 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i525, metadata !2188, metadata !2138), !dbg !2190
  %g.addr.i518 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i518, metadata !2188, metadata !2138), !dbg !2193
  %g.addr.i497 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i497, metadata !2196, metadata !2138), !dbg !2200
  %size.addr.i498 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i498, metadata !2202, metadata !2138), !dbg !2203
  %g.addr.i490 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i490, metadata !2188, metadata !2138), !dbg !2204
  %g.addr.i481 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i481, metadata !2196, metadata !2138), !dbg !2207
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !2202, metadata !2138), !dbg !2212
  %x.addr.i.i.i.i454 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i.i.i454, metadata !2160, metadata !2138), !dbg !2213
  %b.addr.i.i.i455 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i455, metadata !2175, metadata !2138), !dbg !2219
  %g.addr.i.i456 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i456, metadata !2177, metadata !2138), !dbg !2220
  %retval.i457 = alloca i32, align 4
  %g.addr.i458 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i458, metadata !2179, metadata !2138), !dbg !2221
  %g.addr.i442 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i442, metadata !2222, metadata !2138), !dbg !2226
  %buf.addr.i443 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i443, metadata !2228, metadata !2138), !dbg !2229
  %buf_size.addr.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i444, metadata !2230, metadata !2138), !dbg !2231
  %g.addr.i435 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i435, metadata !2188, metadata !2138), !dbg !2232
  %g.addr.i429 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i429, metadata !2188, metadata !2138), !dbg !2236
  %b.addr.i.i.i410 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i410, metadata !2132, metadata !2138), !dbg !2238
  %g.addr.i.i411 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i411, metadata !2156, metadata !2138), !dbg !2243
  %retval.i412 = alloca i32, align 4
  %g.addr.i413 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i413, metadata !2158, metadata !2138), !dbg !2244
  %x.addr.i.i.i.i387 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i.i.i387, metadata !2160, metadata !2138), !dbg !2245
  %b.addr.i.i.i388 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i388, metadata !2175, metadata !2138), !dbg !2250
  %g.addr.i.i389 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i389, metadata !2177, metadata !2138), !dbg !2251
  %retval.i390 = alloca i32, align 4
  %g.addr.i391 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i391, metadata !2179, metadata !2138), !dbg !2252
  %b.addr.i.i.i368 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i368, metadata !2132, metadata !2138), !dbg !2253
  %g.addr.i.i369 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i369, metadata !2156, metadata !2138), !dbg !2257
  %retval.i370 = alloca i32, align 4
  %g.addr.i371 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i371, metadata !2158, metadata !2138), !dbg !2258
  %b.addr.i.i.i351 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i351, metadata !2132, metadata !2138), !dbg !2259
  %g.addr.i.i352 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i352, metadata !2156, metadata !2138), !dbg !2263
  %retval.i353 = alloca i32, align 4
  %g.addr.i354 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i354, metadata !2158, metadata !2138), !dbg !2264
  %x.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i, metadata !2265, metadata !2138), !dbg !2269
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2279, metadata !2138), !dbg !2280
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2281, metadata !2138), !dbg !2282
  %retval.i = alloca i32, align 4
  %g.addr.i346 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i346, metadata !2283, metadata !2138), !dbg !2284
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2222, metadata !2138), !dbg !2285
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !2228, metadata !2138), !dbg !2287
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !2230, metadata !2138), !dbg !2288
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %data.addr = alloca i8*, align 8
  %asset.addr = alloca %struct.DCAExssAsset*, align 8
  %chunk = alloca %struct.anon, align 8
  %gb = alloca %struct.GetByteContext, align 8
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %sf = alloca i32, align 4
  %ret = alloca i32, align 4
  %group = alloca i32, align 4
  %chunk_id = alloca i32, align 4
  %chunk_len = alloca i32, align 4
  %checksum = alloca i32, align 4
  %res = alloca i16, align 2
  %sf_idx = alloca i32, align 4
  %ch1 = alloca i32, align 4
  %ch2 = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !2289, metadata !2138), !dbg !2290
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2291, metadata !2138), !dbg !2292
  store %struct.DCAExssAsset* %asset, %struct.DCAExssAsset** %asset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCAExssAsset** %asset.addr, metadata !2293, metadata !2138), !dbg !2294
  call void @llvm.dbg.declare(metadata %struct.anon* %chunk, metadata !2295, metadata !2138), !dbg !2315
  %0 = bitcast %struct.anon* %chunk to i8*, !dbg !2315
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 304, i32 8, i1 false), !dbg !2315
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gb, metadata !2316, metadata !2138), !dbg !2317
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2318, metadata !2138), !dbg !2319
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2320, metadata !2138), !dbg !2321
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !2322, metadata !2138), !dbg !2323
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !2324, metadata !2138), !dbg !2325
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2326, metadata !2138), !dbg !2327
  call void @llvm.dbg.declare(metadata i32* %group, metadata !2328, metadata !2138), !dbg !2329
  call void @llvm.dbg.declare(metadata i32* %chunk_id, metadata !2330, metadata !2138), !dbg !2331
  call void @llvm.dbg.declare(metadata i32* %chunk_len, metadata !2332, metadata !2138), !dbg !2333
  %1 = load i8*, i8** %data.addr, align 8, !dbg !2334
  %2 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !2335
  %lbr_offset = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %2, i32 0, i32 22, !dbg !2336
  %3 = load i32, i32* %lbr_offset, align 4, !dbg !2336
  %idx.ext = sext i32 %3 to i64, !dbg !2337
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !2337
  %4 = load %struct.DCAExssAsset*, %struct.DCAExssAsset** %asset.addr, align 8, !dbg !2338
  %lbr_size = getelementptr inbounds %struct.DCAExssAsset, %struct.DCAExssAsset* %4, i32 0, i32 23, !dbg !2339
  %5 = load i32, i32* %lbr_size, align 4, !dbg !2339
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2340
  store i8* %add.ptr, i8** %buf.addr.i, align 8, !dbg !2340
  store i32 %5, i32* %buf_size.addr.i, align 4, !dbg !2340
  %6 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2341
  %cmp.i = icmp sge i32 %6, 0, !dbg !2345
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !2346

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i32 137) #10, !dbg !2347
  call void @abort() #11, !dbg !2350
  unreachable, !dbg !2352

bytestream2_init.exit:                            ; preds = %entry
  %7 = load i8*, i8** %buf.addr.i, align 8, !dbg !2353
  %8 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2354
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %8, i32 0, i32 0, !dbg !2355
  store i8* %7, i8** %buffer.i, align 8, !dbg !2356
  %9 = load i8*, i8** %buf.addr.i, align 8, !dbg !2357
  %10 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2358
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %10, i32 0, i32 2, !dbg !2359
  store i8* %9, i8** %buffer_start.i, align 8, !dbg !2360
  %11 = load i8*, i8** %buf.addr.i, align 8, !dbg !2361
  %12 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2362
  %idx.ext.i = sext i32 %12 to i64, !dbg !2363
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !2363
  %13 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2364
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %13, i32 0, i32 1, !dbg !2365
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !2366
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i346, align 8, !dbg !2367
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i346, align 8, !dbg !2368
  %buffer_end.i347 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %14, i32 0, i32 1, !dbg !2370
  %15 = load i8*, i8** %buffer_end.i347, align 8, !dbg !2370
  %16 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i346, align 8, !dbg !2371
  %buffer.i348 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %16, i32 0, i32 0, !dbg !2372
  %17 = load i8*, i8** %buffer.i348, align 8, !dbg !2372
  %sub.ptr.lhs.cast.i = ptrtoint i8* %15 to i64, !dbg !2373
  %sub.ptr.rhs.cast.i = ptrtoint i8* %17 to i64, !dbg !2373
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !2373
  %cmp.i349 = icmp slt i64 %sub.ptr.sub.i, 4, !dbg !2374
  br i1 %cmp.i349, label %if.then.i350, label %if.end.i, !dbg !2375

if.then.i350:                                     ; preds = %bytestream2_init.exit
  %18 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i346, align 8, !dbg !2376
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %18, i32 0, i32 1, !dbg !2379
  %19 = load i8*, i8** %buffer_end1.i, align 8, !dbg !2379
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i346, align 8, !dbg !2380
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 0, !dbg !2381
  store i8* %19, i8** %buffer2.i, align 8, !dbg !2382
  store i32 0, i32* %retval.i, align 4, !dbg !2383
  br label %bytestream2_get_be32.exit, !dbg !2383

if.end.i:                                         ; preds = %bytestream2_init.exit
  %21 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i346, align 8, !dbg !2384
  store %struct.GetByteContext* %21, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2385
  %22 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2386
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %22, i32 0, i32 0, !dbg !2387
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !2388
  %23 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2389
  %24 = load i8*, i8** %23, align 8, !dbg !2390
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %24, i64 4, !dbg !2390
  store i8* %add.ptr.i.i.i, i8** %23, align 8, !dbg !2390
  %25 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2391
  %26 = load i8*, i8** %25, align 8, !dbg !2392
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %26, i64 -4, !dbg !2393
  %27 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !2394
  %l.i.i.i = bitcast %union.unaligned_32* %27 to i32*, !dbg !2394
  %28 = load i32, i32* %l.i.i.i, align 1, !dbg !2394
  store i32 %28, i32* %x.addr.i.i.i.i, align 4, !dbg !2395
  %29 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2396
  %shl.i.i.i.i = shl i32 %29, 8, !dbg !2397
  %and.i.i.i.i = and i32 %shl.i.i.i.i, 65280, !dbg !2398
  %30 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2399
  %shr.i.i.i.i = lshr i32 %30, 8, !dbg !2400
  %and1.i.i.i.i = and i32 %shr.i.i.i.i, 255, !dbg !2401
  %or.i.i.i.i = or i32 %and.i.i.i.i, %and1.i.i.i.i, !dbg !2402
  %shl2.i.i.i.i = shl i32 %or.i.i.i.i, 16, !dbg !2403
  %31 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2404
  %shr3.i.i.i.i = lshr i32 %31, 16, !dbg !2405
  %shl4.i.i.i.i = shl i32 %shr3.i.i.i.i, 8, !dbg !2406
  %and5.i.i.i.i = and i32 %shl4.i.i.i.i, 65280, !dbg !2407
  %32 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2408
  %shr6.i.i.i.i = lshr i32 %32, 16, !dbg !2409
  %shr7.i.i.i.i = lshr i32 %shr6.i.i.i.i, 8, !dbg !2410
  %and8.i.i.i.i = and i32 %shr7.i.i.i.i, 255, !dbg !2411
  %or9.i.i.i.i = or i32 %and5.i.i.i.i, %and8.i.i.i.i, !dbg !2412
  %or10.i.i.i.i = or i32 %shl2.i.i.i.i, %or9.i.i.i.i, !dbg !2413
  store i32 %or10.i.i.i.i, i32* %retval.i, align 4, !dbg !2414
  br label %bytestream2_get_be32.exit, !dbg !2414

bytestream2_get_be32.exit:                        ; preds = %if.then.i350, %if.end.i
  %33 = load i32, i32* %retval.i, align 4, !dbg !2415
  %cmp = icmp ne i32 %33, 176167201, !dbg !2417
  br i1 %cmp, label %if.then, label %if.end, !dbg !2418

if.then:                                          ; preds = %bytestream2_get_be32.exit
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2419
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 0, !dbg !2421
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !2421
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !2419
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)), !dbg !2422
  store i32 -1094995529, i32* %retval, align 4, !dbg !2423
  br label %return, !dbg !2423

if.end:                                           ; preds = %bytestream2_get_be32.exit
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i354, align 8, !dbg !2424
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i354, align 8, !dbg !2425
  %buffer_end.i355 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 1, !dbg !2427
  %38 = load i8*, i8** %buffer_end.i355, align 8, !dbg !2427
  %39 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i354, align 8, !dbg !2428
  %buffer.i356 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %39, i32 0, i32 0, !dbg !2429
  %40 = load i8*, i8** %buffer.i356, align 8, !dbg !2429
  %sub.ptr.lhs.cast.i357 = ptrtoint i8* %38 to i64, !dbg !2430
  %sub.ptr.rhs.cast.i358 = ptrtoint i8* %40 to i64, !dbg !2430
  %sub.ptr.sub.i359 = sub i64 %sub.ptr.lhs.cast.i357, %sub.ptr.rhs.cast.i358, !dbg !2430
  %cmp.i360 = icmp slt i64 %sub.ptr.sub.i359, 1, !dbg !2431
  br i1 %cmp.i360, label %if.then.i363, label %if.end.i367, !dbg !2432

if.then.i363:                                     ; preds = %if.end
  %41 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i354, align 8, !dbg !2433
  %buffer_end1.i361 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %41, i32 0, i32 1, !dbg !2436
  %42 = load i8*, i8** %buffer_end1.i361, align 8, !dbg !2436
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i354, align 8, !dbg !2437
  %buffer2.i362 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 0, !dbg !2438
  store i8* %42, i8** %buffer2.i362, align 8, !dbg !2439
  store i32 0, i32* %retval.i353, align 4, !dbg !2440
  br label %bytestream2_get_byte.exit, !dbg !2440

if.end.i367:                                      ; preds = %if.end
  %44 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i354, align 8, !dbg !2441
  store %struct.GetByteContext* %44, %struct.GetByteContext** %g.addr.i.i352, align 8, !dbg !2442
  %45 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i352, align 8, !dbg !2443
  %buffer.i.i364 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %45, i32 0, i32 0, !dbg !2444
  store i8** %buffer.i.i364, i8*** %b.addr.i.i.i351, align 8, !dbg !2445
  %46 = load i8**, i8*** %b.addr.i.i.i351, align 8, !dbg !2446
  %47 = load i8*, i8** %46, align 8, !dbg !2447
  %add.ptr.i.i.i365 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !2447
  store i8* %add.ptr.i.i.i365, i8** %46, align 8, !dbg !2447
  %48 = load i8**, i8*** %b.addr.i.i.i351, align 8, !dbg !2448
  %49 = load i8*, i8** %48, align 8, !dbg !2449
  %add.ptr1.i.i.i366 = getelementptr inbounds i8, i8* %49, i64 -1, !dbg !2450
  %50 = load i8, i8* %add.ptr1.i.i.i366, align 1, !dbg !2451
  %conv.i.i.i = zext i8 %50 to i32, !dbg !2452
  store i32 %conv.i.i.i, i32* %retval.i353, align 4, !dbg !2453
  br label %bytestream2_get_byte.exit, !dbg !2453

bytestream2_get_byte.exit:                        ; preds = %if.then.i363, %if.end.i367
  %51 = load i32, i32* %retval.i353, align 4, !dbg !2454
  switch i32 %51, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
  ], !dbg !2456

sw.bb:                                            ; preds = %bytestream2_get_byte.exit
  %52 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2457
  %sample_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %52, i32 0, i32 2, !dbg !2460
  %53 = load i32, i32* %sample_rate, align 8, !dbg !2460
  %tobool = icmp ne i32 %53, 0, !dbg !2457
  br i1 %tobool, label %if.end4, label %if.then2, !dbg !2461

if.then2:                                         ; preds = %sw.bb
  %54 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2462
  %avctx3 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %54, i32 0, i32 0, !dbg !2464
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 32, !dbg !2464
  %56 = bitcast %struct.AVCodecContext* %55 to i8*, !dbg !2462
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0)), !dbg !2465
  store i32 -1094995529, i32* %retval, align 4, !dbg !2466
  br label %return, !dbg !2466

if.end4:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !2467

sw.bb5:                                           ; preds = %bytestream2_get_byte.exit
  %57 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2468
  %call6 = call i32 @parse_decoder_init(%struct.DCALbrDecoder* %57, %struct.GetByteContext* %gb), !dbg !2470
  store i32 %call6, i32* %ret, align 4, !dbg !2471
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2472
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !2473

if.then8:                                         ; preds = %sw.bb5
  %58 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2474
  %sample_rate9 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %58, i32 0, i32 2, !dbg !2476
  store i32 0, i32* %sample_rate9, align 8, !dbg !2477
  %59 = load i32, i32* %ret, align 4, !dbg !2478
  store i32 %59, i32* %retval, align 4, !dbg !2479
  br label %return, !dbg !2479

if.end10:                                         ; preds = %sw.bb5
  br label %sw.epilog, !dbg !2480

sw.default:                                       ; preds = %bytestream2_get_byte.exit
  %60 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2481
  %avctx11 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %60, i32 0, i32 0, !dbg !2482
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx11, align 32, !dbg !2482
  %62 = bitcast %struct.AVCodecContext* %61 to i8*, !dbg !2481
  call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0)), !dbg !2483
  store i32 -1094995529, i32* %retval, align 4, !dbg !2484
  br label %return, !dbg !2484

sw.epilog:                                        ; preds = %if.end10, %if.end4
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i371, align 8, !dbg !2485
  %63 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i371, align 8, !dbg !2486
  %buffer_end.i372 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %63, i32 0, i32 1, !dbg !2487
  %64 = load i8*, i8** %buffer_end.i372, align 8, !dbg !2487
  %65 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i371, align 8, !dbg !2488
  %buffer.i373 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %65, i32 0, i32 0, !dbg !2489
  %66 = load i8*, i8** %buffer.i373, align 8, !dbg !2489
  %sub.ptr.lhs.cast.i374 = ptrtoint i8* %64 to i64, !dbg !2490
  %sub.ptr.rhs.cast.i375 = ptrtoint i8* %66 to i64, !dbg !2490
  %sub.ptr.sub.i376 = sub i64 %sub.ptr.lhs.cast.i374, %sub.ptr.rhs.cast.i375, !dbg !2490
  %cmp.i377 = icmp slt i64 %sub.ptr.sub.i376, 1, !dbg !2491
  br i1 %cmp.i377, label %if.then.i380, label %if.end.i385, !dbg !2492

if.then.i380:                                     ; preds = %sw.epilog
  %67 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i371, align 8, !dbg !2493
  %buffer_end1.i378 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %67, i32 0, i32 1, !dbg !2494
  %68 = load i8*, i8** %buffer_end1.i378, align 8, !dbg !2494
  %69 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i371, align 8, !dbg !2495
  %buffer2.i379 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %69, i32 0, i32 0, !dbg !2496
  store i8* %68, i8** %buffer2.i379, align 8, !dbg !2497
  store i32 0, i32* %retval.i370, align 4, !dbg !2498
  br label %bytestream2_get_byte.exit386, !dbg !2498

if.end.i385:                                      ; preds = %sw.epilog
  %70 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i371, align 8, !dbg !2499
  store %struct.GetByteContext* %70, %struct.GetByteContext** %g.addr.i.i369, align 8, !dbg !2500
  %71 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i369, align 8, !dbg !2501
  %buffer.i.i381 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %71, i32 0, i32 0, !dbg !2502
  store i8** %buffer.i.i381, i8*** %b.addr.i.i.i368, align 8, !dbg !2503
  %72 = load i8**, i8*** %b.addr.i.i.i368, align 8, !dbg !2504
  %73 = load i8*, i8** %72, align 8, !dbg !2505
  %add.ptr.i.i.i382 = getelementptr inbounds i8, i8* %73, i64 1, !dbg !2505
  store i8* %add.ptr.i.i.i382, i8** %72, align 8, !dbg !2505
  %74 = load i8**, i8*** %b.addr.i.i.i368, align 8, !dbg !2506
  %75 = load i8*, i8** %74, align 8, !dbg !2507
  %add.ptr1.i.i.i383 = getelementptr inbounds i8, i8* %75, i64 -1, !dbg !2508
  %76 = load i8, i8* %add.ptr1.i.i.i383, align 1, !dbg !2509
  %conv.i.i.i384 = zext i8 %76 to i32, !dbg !2510
  store i32 %conv.i.i.i384, i32* %retval.i370, align 4, !dbg !2511
  br label %bytestream2_get_byte.exit386, !dbg !2511

bytestream2_get_byte.exit386:                     ; preds = %if.then.i380, %if.end.i385
  %77 = load i32, i32* %retval.i370, align 4, !dbg !2512
  store i32 %77, i32* %chunk_id, align 4, !dbg !2513
  %78 = load i32, i32* %chunk_id, align 4, !dbg !2514
  %and = and i32 %78, 128, !dbg !2515
  %tobool13 = icmp ne i32 %and, 0, !dbg !2515
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !2516

cond.true:                                        ; preds = %bytestream2_get_byte.exit386
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2517
  %79 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2518
  %buffer_end.i392 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %79, i32 0, i32 1, !dbg !2520
  %80 = load i8*, i8** %buffer_end.i392, align 8, !dbg !2520
  %81 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2521
  %buffer.i393 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %81, i32 0, i32 0, !dbg !2522
  %82 = load i8*, i8** %buffer.i393, align 8, !dbg !2522
  %sub.ptr.lhs.cast.i394 = ptrtoint i8* %80 to i64, !dbg !2523
  %sub.ptr.rhs.cast.i395 = ptrtoint i8* %82 to i64, !dbg !2523
  %sub.ptr.sub.i396 = sub i64 %sub.ptr.lhs.cast.i394, %sub.ptr.rhs.cast.i395, !dbg !2523
  %cmp.i397 = icmp slt i64 %sub.ptr.sub.i396, 2, !dbg !2524
  br i1 %cmp.i397, label %if.then.i400, label %if.end.i409, !dbg !2525

if.then.i400:                                     ; preds = %cond.true
  %83 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2526
  %buffer_end1.i398 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %83, i32 0, i32 1, !dbg !2529
  %84 = load i8*, i8** %buffer_end1.i398, align 8, !dbg !2529
  %85 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2530
  %buffer2.i399 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %85, i32 0, i32 0, !dbg !2531
  store i8* %84, i8** %buffer2.i399, align 8, !dbg !2532
  store i32 0, i32* %retval.i390, align 4, !dbg !2533
  br label %bytestream2_get_be16.exit, !dbg !2533

if.end.i409:                                      ; preds = %cond.true
  %86 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2534
  store %struct.GetByteContext* %86, %struct.GetByteContext** %g.addr.i.i389, align 8, !dbg !2535
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i389, align 8, !dbg !2536
  %buffer.i.i401 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 0, !dbg !2537
  store i8** %buffer.i.i401, i8*** %b.addr.i.i.i388, align 8, !dbg !2538
  %88 = load i8**, i8*** %b.addr.i.i.i388, align 8, !dbg !2539
  %89 = load i8*, i8** %88, align 8, !dbg !2540
  %add.ptr.i.i.i402 = getelementptr inbounds i8, i8* %89, i64 2, !dbg !2540
  store i8* %add.ptr.i.i.i402, i8** %88, align 8, !dbg !2540
  %90 = load i8**, i8*** %b.addr.i.i.i388, align 8, !dbg !2541
  %91 = load i8*, i8** %90, align 8, !dbg !2542
  %add.ptr1.i.i.i403 = getelementptr inbounds i8, i8* %91, i64 -2, !dbg !2543
  %92 = bitcast i8* %add.ptr1.i.i.i403 to %union.unaligned_16*, !dbg !2544
  %l.i.i.i404 = bitcast %union.unaligned_16* %92 to i16*, !dbg !2544
  %93 = load i16, i16* %l.i.i.i404, align 1, !dbg !2544
  store i16 %93, i16* %x.addr.i.i.i.i387, align 2, !dbg !2545
  %94 = load i16, i16* %x.addr.i.i.i.i387, align 2, !dbg !2546
  %conv.i.i.i.i = zext i16 %94 to i32, !dbg !2546
  %shr.i.i.i.i405 = ashr i32 %conv.i.i.i.i, 8, !dbg !2547
  %95 = load i16, i16* %x.addr.i.i.i.i387, align 2, !dbg !2548
  %conv1.i.i.i.i = zext i16 %95 to i32, !dbg !2548
  %shl.i.i.i.i406 = shl i32 %conv1.i.i.i.i, 8, !dbg !2549
  %or.i.i.i.i407 = or i32 %shr.i.i.i.i405, %shl.i.i.i.i406, !dbg !2550
  %conv2.i.i.i.i = trunc i32 %or.i.i.i.i407 to i16, !dbg !2551
  store i16 %conv2.i.i.i.i, i16* %x.addr.i.i.i.i387, align 2, !dbg !2552
  %96 = load i16, i16* %x.addr.i.i.i.i387, align 2, !dbg !2553
  %conv.i.i.i408 = zext i16 %96 to i32, !dbg !2545
  store i32 %conv.i.i.i408, i32* %retval.i390, align 4, !dbg !2554
  br label %bytestream2_get_be16.exit, !dbg !2554

bytestream2_get_be16.exit:                        ; preds = %if.then.i400, %if.end.i409
  %97 = load i32, i32* %retval.i390, align 4, !dbg !2555
  br label %cond.end, !dbg !2557

cond.false:                                       ; preds = %bytestream2_get_byte.exit386
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i413, align 8, !dbg !2558
  %98 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i413, align 8, !dbg !2559
  %buffer_end.i414 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %98, i32 0, i32 1, !dbg !2560
  %99 = load i8*, i8** %buffer_end.i414, align 8, !dbg !2560
  %100 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i413, align 8, !dbg !2561
  %buffer.i415 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %100, i32 0, i32 0, !dbg !2562
  %101 = load i8*, i8** %buffer.i415, align 8, !dbg !2562
  %sub.ptr.lhs.cast.i416 = ptrtoint i8* %99 to i64, !dbg !2563
  %sub.ptr.rhs.cast.i417 = ptrtoint i8* %101 to i64, !dbg !2563
  %sub.ptr.sub.i418 = sub i64 %sub.ptr.lhs.cast.i416, %sub.ptr.rhs.cast.i417, !dbg !2563
  %cmp.i419 = icmp slt i64 %sub.ptr.sub.i418, 1, !dbg !2564
  br i1 %cmp.i419, label %if.then.i422, label %if.end.i427, !dbg !2565

if.then.i422:                                     ; preds = %cond.false
  %102 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i413, align 8, !dbg !2566
  %buffer_end1.i420 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %102, i32 0, i32 1, !dbg !2567
  %103 = load i8*, i8** %buffer_end1.i420, align 8, !dbg !2567
  %104 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i413, align 8, !dbg !2568
  %buffer2.i421 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %104, i32 0, i32 0, !dbg !2569
  store i8* %103, i8** %buffer2.i421, align 8, !dbg !2570
  store i32 0, i32* %retval.i412, align 4, !dbg !2571
  br label %bytestream2_get_byte.exit428, !dbg !2571

if.end.i427:                                      ; preds = %cond.false
  %105 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i413, align 8, !dbg !2572
  store %struct.GetByteContext* %105, %struct.GetByteContext** %g.addr.i.i411, align 8, !dbg !2573
  %106 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i411, align 8, !dbg !2574
  %buffer.i.i423 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %106, i32 0, i32 0, !dbg !2575
  store i8** %buffer.i.i423, i8*** %b.addr.i.i.i410, align 8, !dbg !2576
  %107 = load i8**, i8*** %b.addr.i.i.i410, align 8, !dbg !2577
  %108 = load i8*, i8** %107, align 8, !dbg !2578
  %add.ptr.i.i.i424 = getelementptr inbounds i8, i8* %108, i64 1, !dbg !2578
  store i8* %add.ptr.i.i.i424, i8** %107, align 8, !dbg !2578
  %109 = load i8**, i8*** %b.addr.i.i.i410, align 8, !dbg !2579
  %110 = load i8*, i8** %109, align 8, !dbg !2580
  %add.ptr1.i.i.i425 = getelementptr inbounds i8, i8* %110, i64 -1, !dbg !2581
  %111 = load i8, i8* %add.ptr1.i.i.i425, align 1, !dbg !2582
  %conv.i.i.i426 = zext i8 %111 to i32, !dbg !2583
  store i32 %conv.i.i.i426, i32* %retval.i412, align 4, !dbg !2584
  br label %bytestream2_get_byte.exit428, !dbg !2584

bytestream2_get_byte.exit428:                     ; preds = %if.then.i422, %if.end.i427
  %112 = load i32, i32* %retval.i412, align 4, !dbg !2585
  br label %cond.end, !dbg !2586

cond.end:                                         ; preds = %bytestream2_get_byte.exit428, %bytestream2_get_be16.exit
  %cond = phi i32 [ %97, %bytestream2_get_be16.exit ], [ %112, %bytestream2_get_byte.exit428 ], !dbg !2587
  store i32 %cond, i32* %chunk_len, align 4, !dbg !2589
  %113 = load i32, i32* %chunk_len, align 4, !dbg !2590
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i429, align 8, !dbg !2591
  %114 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i429, align 8, !dbg !2592
  %buffer_end.i430 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %114, i32 0, i32 1, !dbg !2593
  %115 = load i8*, i8** %buffer_end.i430, align 8, !dbg !2593
  %116 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i429, align 8, !dbg !2594
  %buffer.i431 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %116, i32 0, i32 0, !dbg !2595
  %117 = load i8*, i8** %buffer.i431, align 8, !dbg !2595
  %sub.ptr.lhs.cast.i432 = ptrtoint i8* %115 to i64, !dbg !2596
  %sub.ptr.rhs.cast.i433 = ptrtoint i8* %117 to i64, !dbg !2596
  %sub.ptr.sub.i434 = sub i64 %sub.ptr.lhs.cast.i432, %sub.ptr.rhs.cast.i433, !dbg !2596
  %conv.i = trunc i64 %sub.ptr.sub.i434 to i32, !dbg !2592
  %cmp17 = icmp ugt i32 %113, %conv.i, !dbg !2597
  br i1 %cmp17, label %if.then18, label %if.end26, !dbg !2598

if.then18:                                        ; preds = %cond.end
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i435, align 8, !dbg !2599
  %118 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i435, align 8, !dbg !2600
  %buffer_end.i436 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %118, i32 0, i32 1, !dbg !2601
  %119 = load i8*, i8** %buffer_end.i436, align 8, !dbg !2601
  %120 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i435, align 8, !dbg !2602
  %buffer.i437 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %120, i32 0, i32 0, !dbg !2603
  %121 = load i8*, i8** %buffer.i437, align 8, !dbg !2603
  %sub.ptr.lhs.cast.i438 = ptrtoint i8* %119 to i64, !dbg !2604
  %sub.ptr.rhs.cast.i439 = ptrtoint i8* %121 to i64, !dbg !2604
  %sub.ptr.sub.i440 = sub i64 %sub.ptr.lhs.cast.i438, %sub.ptr.rhs.cast.i439, !dbg !2604
  %conv.i441 = trunc i64 %sub.ptr.sub.i440 to i32, !dbg !2600
  store i32 %conv.i441, i32* %chunk_len, align 4, !dbg !2605
  %122 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2606
  %avctx20 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %122, i32 0, i32 0, !dbg !2607
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 32, !dbg !2607
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !2606
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0)), !dbg !2608
  %125 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2609
  %avctx21 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %125, i32 0, i32 0, !dbg !2611
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx21, align 32, !dbg !2611
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %126, i32 0, i32 135, !dbg !2612
  %127 = load i32, i32* %err_recognition, align 8, !dbg !2612
  %and22 = and i32 %127, 8, !dbg !2613
  %tobool23 = icmp ne i32 %and22, 0, !dbg !2613
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !2614

if.then24:                                        ; preds = %if.then18
  store i32 -1094995529, i32* %retval, align 4, !dbg !2615
  br label %return, !dbg !2615

if.end25:                                         ; preds = %if.then18
  br label %if.end26, !dbg !2616

if.end26:                                         ; preds = %if.end25, %cond.end
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !2617
  %128 = load i8*, i8** %buffer, align 8, !dbg !2617
  %129 = load i32, i32* %chunk_len, align 4, !dbg !2618
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i442, align 8, !dbg !2619
  store i8* %128, i8** %buf.addr.i443, align 8, !dbg !2619
  store i32 %129, i32* %buf_size.addr.i444, align 4, !dbg !2619
  %130 = load i32, i32* %buf_size.addr.i444, align 4, !dbg !2620
  %cmp.i445 = icmp sge i32 %130, 0, !dbg !2621
  br i1 %cmp.i445, label %bytestream2_init.exit453, label %if.then.i446, !dbg !2622

if.then.i446:                                     ; preds = %if.end26
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i32 137) #10, !dbg !2623
  call void @abort() #11, !dbg !2624
  unreachable, !dbg !2625

bytestream2_init.exit453:                         ; preds = %if.end26
  %131 = load i8*, i8** %buf.addr.i443, align 8, !dbg !2626
  %132 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i442, align 8, !dbg !2627
  %buffer.i448 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %132, i32 0, i32 0, !dbg !2628
  store i8* %131, i8** %buffer.i448, align 8, !dbg !2629
  %133 = load i8*, i8** %buf.addr.i443, align 8, !dbg !2630
  %134 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i442, align 8, !dbg !2631
  %buffer_start.i449 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %134, i32 0, i32 2, !dbg !2632
  store i8* %133, i8** %buffer_start.i449, align 8, !dbg !2633
  %135 = load i8*, i8** %buf.addr.i443, align 8, !dbg !2634
  %136 = load i32, i32* %buf_size.addr.i444, align 4, !dbg !2635
  %idx.ext.i450 = sext i32 %136 to i64, !dbg !2636
  %add.ptr.i451 = getelementptr inbounds i8, i8* %135, i64 %idx.ext.i450, !dbg !2636
  %137 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i442, align 8, !dbg !2637
  %buffer_end.i452 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %137, i32 0, i32 1, !dbg !2638
  store i8* %add.ptr.i451, i8** %buffer_end.i452, align 8, !dbg !2639
  %138 = load i32, i32* %chunk_id, align 4, !dbg !2640
  %and27 = and i32 %138, 127, !dbg !2641
  switch i32 %and27, label %sw.default63 [
    i32 4, label %sw.bb28
    i32 6, label %sw.bb62
  ], !dbg !2642

sw.bb28:                                          ; preds = %bytestream2_init.exit453
  %139 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2643
  %avctx29 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %139, i32 0, i32 0, !dbg !2644
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx29, align 32, !dbg !2644
  %err_recognition30 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 135, !dbg !2645
  %141 = load i32, i32* %err_recognition30, align 8, !dbg !2645
  %and31 = and i32 %141, 65537, !dbg !2646
  %tobool32 = icmp ne i32 %and31, 0, !dbg !2646
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !2647

if.then33:                                        ; preds = %sw.bb28
  call void @llvm.dbg.declare(metadata i32* %checksum, metadata !2648, metadata !2138), !dbg !2649
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i458, align 8, !dbg !2650
  %142 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i458, align 8, !dbg !2651
  %buffer_end.i459 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %142, i32 0, i32 1, !dbg !2652
  %143 = load i8*, i8** %buffer_end.i459, align 8, !dbg !2652
  %144 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i458, align 8, !dbg !2653
  %buffer.i460 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %144, i32 0, i32 0, !dbg !2654
  %145 = load i8*, i8** %buffer.i460, align 8, !dbg !2654
  %sub.ptr.lhs.cast.i461 = ptrtoint i8* %143 to i64, !dbg !2655
  %sub.ptr.rhs.cast.i462 = ptrtoint i8* %145 to i64, !dbg !2655
  %sub.ptr.sub.i463 = sub i64 %sub.ptr.lhs.cast.i461, %sub.ptr.rhs.cast.i462, !dbg !2655
  %cmp.i464 = icmp slt i64 %sub.ptr.sub.i463, 2, !dbg !2656
  br i1 %cmp.i464, label %if.then.i467, label %if.end.i479, !dbg !2657

if.then.i467:                                     ; preds = %if.then33
  %146 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i458, align 8, !dbg !2658
  %buffer_end1.i465 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %146, i32 0, i32 1, !dbg !2659
  %147 = load i8*, i8** %buffer_end1.i465, align 8, !dbg !2659
  %148 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i458, align 8, !dbg !2660
  %buffer2.i466 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %148, i32 0, i32 0, !dbg !2661
  store i8* %147, i8** %buffer2.i466, align 8, !dbg !2662
  store i32 0, i32* %retval.i457, align 4, !dbg !2663
  br label %bytestream2_get_be16.exit480, !dbg !2663

if.end.i479:                                      ; preds = %if.then33
  %149 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i458, align 8, !dbg !2664
  store %struct.GetByteContext* %149, %struct.GetByteContext** %g.addr.i.i456, align 8, !dbg !2665
  %150 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i456, align 8, !dbg !2666
  %buffer.i.i468 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %150, i32 0, i32 0, !dbg !2667
  store i8** %buffer.i.i468, i8*** %b.addr.i.i.i455, align 8, !dbg !2668
  %151 = load i8**, i8*** %b.addr.i.i.i455, align 8, !dbg !2669
  %152 = load i8*, i8** %151, align 8, !dbg !2670
  %add.ptr.i.i.i469 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !2670
  store i8* %add.ptr.i.i.i469, i8** %151, align 8, !dbg !2670
  %153 = load i8**, i8*** %b.addr.i.i.i455, align 8, !dbg !2671
  %154 = load i8*, i8** %153, align 8, !dbg !2672
  %add.ptr1.i.i.i470 = getelementptr inbounds i8, i8* %154, i64 -2, !dbg !2673
  %155 = bitcast i8* %add.ptr1.i.i.i470 to %union.unaligned_16*, !dbg !2674
  %l.i.i.i471 = bitcast %union.unaligned_16* %155 to i16*, !dbg !2674
  %156 = load i16, i16* %l.i.i.i471, align 1, !dbg !2674
  store i16 %156, i16* %x.addr.i.i.i.i454, align 2, !dbg !2675
  %157 = load i16, i16* %x.addr.i.i.i.i454, align 2, !dbg !2676
  %conv.i.i.i.i472 = zext i16 %157 to i32, !dbg !2676
  %shr.i.i.i.i473 = ashr i32 %conv.i.i.i.i472, 8, !dbg !2677
  %158 = load i16, i16* %x.addr.i.i.i.i454, align 2, !dbg !2678
  %conv1.i.i.i.i474 = zext i16 %158 to i32, !dbg !2678
  %shl.i.i.i.i475 = shl i32 %conv1.i.i.i.i474, 8, !dbg !2679
  %or.i.i.i.i476 = or i32 %shr.i.i.i.i473, %shl.i.i.i.i475, !dbg !2680
  %conv2.i.i.i.i477 = trunc i32 %or.i.i.i.i476 to i16, !dbg !2681
  store i16 %conv2.i.i.i.i477, i16* %x.addr.i.i.i.i454, align 2, !dbg !2682
  %159 = load i16, i16* %x.addr.i.i.i.i454, align 2, !dbg !2683
  %conv.i.i.i478 = zext i16 %159 to i32, !dbg !2675
  store i32 %conv.i.i.i478, i32* %retval.i457, align 4, !dbg !2684
  br label %bytestream2_get_be16.exit480, !dbg !2684

bytestream2_get_be16.exit480:                     ; preds = %if.then.i467, %if.end.i479
  %160 = load i32, i32* %retval.i457, align 4, !dbg !2685
  store i32 %160, i32* %checksum, align 4, !dbg !2649
  call void @llvm.dbg.declare(metadata i16* %res, metadata !2686, metadata !2138), !dbg !2687
  %161 = load i32, i32* %chunk_id, align 4, !dbg !2688
  %conv = trunc i32 %161 to i16, !dbg !2688
  store i16 %conv, i16* %res, align 2, !dbg !2687
  %162 = load i32, i32* %chunk_len, align 4, !dbg !2689
  %shr = ashr i32 %162, 8, !dbg !2690
  %and35 = and i32 %shr, 255, !dbg !2691
  %163 = load i16, i16* %res, align 2, !dbg !2692
  %conv36 = zext i16 %163 to i32, !dbg !2692
  %add = add nsw i32 %conv36, %and35, !dbg !2692
  %conv37 = trunc i32 %add to i16, !dbg !2692
  store i16 %conv37, i16* %res, align 2, !dbg !2692
  %164 = load i32, i32* %chunk_len, align 4, !dbg !2693
  %and38 = and i32 %164, 255, !dbg !2694
  %165 = load i16, i16* %res, align 2, !dbg !2695
  %conv39 = zext i16 %165 to i32, !dbg !2695
  %add40 = add nsw i32 %conv39, %and38, !dbg !2695
  %conv41 = trunc i32 %add40 to i16, !dbg !2695
  store i16 %conv41, i16* %res, align 2, !dbg !2695
  store i32 0, i32* %i, align 4, !dbg !2696
  br label %for.cond, !dbg !2698

for.cond:                                         ; preds = %for.inc, %bytestream2_get_be16.exit480
  %166 = load i32, i32* %i, align 4, !dbg !2699
  %167 = load i32, i32* %chunk_len, align 4, !dbg !2702
  %sub = sub nsw i32 %167, 2, !dbg !2703
  %cmp42 = icmp slt i32 %166, %sub, !dbg !2704
  br i1 %cmp42, label %for.body, label %for.end, !dbg !2705

for.body:                                         ; preds = %for.cond
  %168 = load i32, i32* %i, align 4, !dbg !2706
  %idxprom = sext i32 %168 to i64, !dbg !2707
  %buffer44 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !2708
  %169 = load i8*, i8** %buffer44, align 8, !dbg !2708
  %arrayidx = getelementptr inbounds i8, i8* %169, i64 %idxprom, !dbg !2707
  %170 = load i8, i8* %arrayidx, align 1, !dbg !2707
  %conv45 = zext i8 %170 to i32, !dbg !2707
  %171 = load i16, i16* %res, align 2, !dbg !2709
  %conv46 = zext i16 %171 to i32, !dbg !2709
  %add47 = add nsw i32 %conv46, %conv45, !dbg !2709
  %conv48 = trunc i32 %add47 to i16, !dbg !2709
  store i16 %conv48, i16* %res, align 2, !dbg !2709
  br label %for.inc, !dbg !2710

for.inc:                                          ; preds = %for.body
  %172 = load i32, i32* %i, align 4, !dbg !2711
  %inc = add nsw i32 %172, 1, !dbg !2711
  store i32 %inc, i32* %i, align 4, !dbg !2711
  br label %for.cond, !dbg !2713, !llvm.loop !2714

for.end:                                          ; preds = %for.cond
  %173 = load i32, i32* %checksum, align 4, !dbg !2716
  %174 = load i16, i16* %res, align 2, !dbg !2718
  %conv49 = zext i16 %174 to i32, !dbg !2718
  %cmp50 = icmp ne i32 %173, %conv49, !dbg !2719
  br i1 %cmp50, label %if.then52, label %if.end60, !dbg !2720

if.then52:                                        ; preds = %for.end
  %175 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2721
  %avctx53 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %175, i32 0, i32 0, !dbg !2723
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx53, align 32, !dbg !2723
  %177 = bitcast %struct.AVCodecContext* %176 to i8*, !dbg !2721
  call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0)), !dbg !2724
  %178 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2725
  %avctx54 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %178, i32 0, i32 0, !dbg !2727
  %179 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 32, !dbg !2727
  %err_recognition55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %179, i32 0, i32 135, !dbg !2728
  %180 = load i32, i32* %err_recognition55, align 8, !dbg !2728
  %and56 = and i32 %180, 8, !dbg !2729
  %tobool57 = icmp ne i32 %and56, 0, !dbg !2729
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !2730

if.then58:                                        ; preds = %if.then52
  store i32 -1094995529, i32* %retval, align 4, !dbg !2731
  br label %return, !dbg !2731

if.end59:                                         ; preds = %if.then52
  br label %if.end60, !dbg !2732

if.end60:                                         ; preds = %if.end59, %for.end
  br label %if.end61, !dbg !2733

if.else:                                          ; preds = %sw.bb28
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i481, align 8, !dbg !2734
  store i32 2, i32* %size.addr.i, align 4, !dbg !2734
  %181 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i481, align 8, !dbg !2735
  %buffer_end.i482 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %181, i32 0, i32 1, !dbg !2736
  %182 = load i8*, i8** %buffer_end.i482, align 8, !dbg !2736
  %183 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i481, align 8, !dbg !2737
  %buffer.i483 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %183, i32 0, i32 0, !dbg !2738
  %184 = load i8*, i8** %buffer.i483, align 8, !dbg !2738
  %sub.ptr.lhs.cast.i484 = ptrtoint i8* %182 to i64, !dbg !2739
  %sub.ptr.rhs.cast.i485 = ptrtoint i8* %184 to i64, !dbg !2739
  %sub.ptr.sub.i486 = sub i64 %sub.ptr.lhs.cast.i484, %sub.ptr.rhs.cast.i485, !dbg !2739
  %185 = load i32, i32* %size.addr.i, align 4, !dbg !2740
  %conv.i487 = zext i32 %185 to i64, !dbg !2741
  %cmp.i488 = icmp sgt i64 %sub.ptr.sub.i486, %conv.i487, !dbg !2742
  br i1 %cmp.i488, label %cond.true.i, label %cond.false.i, !dbg !2743

cond.true.i:                                      ; preds = %if.else
  %186 = load i32, i32* %size.addr.i, align 4, !dbg !2744
  %conv2.i = zext i32 %186 to i64, !dbg !2746
  br label %bytestream2_skip.exit, !dbg !2747

cond.false.i:                                     ; preds = %if.else
  %187 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i481, align 8, !dbg !2748
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %187, i32 0, i32 1, !dbg !2750
  %188 = load i8*, i8** %buffer_end3.i, align 8, !dbg !2750
  %189 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i481, align 8, !dbg !2751
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %189, i32 0, i32 0, !dbg !2752
  %190 = load i8*, i8** %buffer4.i, align 8, !dbg !2752
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %188 to i64, !dbg !2753
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %190 to i64, !dbg !2753
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !2753
  br label %bytestream2_skip.exit, !dbg !2754

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !2755
  %191 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i481, align 8, !dbg !2757
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %191, i32 0, i32 0, !dbg !2758
  %192 = load i8*, i8** %buffer8.i, align 8, !dbg !2759
  %add.ptr.i489 = getelementptr inbounds i8, i8* %192, i64 %cond.i, !dbg !2759
  store i8* %add.ptr.i489, i8** %buffer8.i, align 8, !dbg !2759
  br label %if.end61

if.end61:                                         ; preds = %bytestream2_skip.exit, %if.end60
  br label %sw.epilog65, !dbg !2760

sw.bb62:                                          ; preds = %bytestream2_init.exit453
  br label %sw.epilog65, !dbg !2761

sw.default63:                                     ; preds = %bytestream2_init.exit453
  %193 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2762
  %avctx64 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %193, i32 0, i32 0, !dbg !2763
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx64, align 32, !dbg !2763
  %195 = bitcast %struct.AVCodecContext* %194 to i8*, !dbg !2762
  call void (i8*, i32, i8*, ...) @av_log(i8* %195, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0)), !dbg !2764
  store i32 -1094995529, i32* %retval, align 4, !dbg !2765
  br label %return, !dbg !2765

sw.epilog65:                                      ; preds = %sw.bb62, %if.end61
  %196 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2766
  %quant_levels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %196, i32 0, i32 21, !dbg !2767
  %arraydecay = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %quant_levels, i32 0, i32 0, !dbg !2768
  %197 = bitcast [32 x i8]* %arraydecay to i8*, !dbg !2768
  call void @llvm.memset.p0i8.i64(i8* %197, i8 0, i64 96, i32 4, i1 false), !dbg !2768
  %198 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2769
  %sb_indices = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %198, i32 0, i32 22, !dbg !2770
  %arraydecay66 = getelementptr inbounds [32 x i8], [32 x i8]* %sb_indices, i32 0, i32 0, !dbg !2771
  call void @llvm.memset.p0i8.i64(i8* %arraydecay66, i8 -1, i64 32, i32 4, i1 false), !dbg !2771
  %199 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2772
  %sec_ch_sbms = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %199, i32 0, i32 23, !dbg !2773
  %arraydecay67 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %sec_ch_sbms, i32 0, i32 0, !dbg !2774
  %200 = bitcast [32 x i8]* %arraydecay67 to i8*, !dbg !2774
  call void @llvm.memset.p0i8.i64(i8* %200, i8 0, i64 96, i32 4, i1 false), !dbg !2774
  %201 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2775
  %sec_ch_lrms = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %201, i32 0, i32 24, !dbg !2776
  %arraydecay68 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %sec_ch_lrms, i32 0, i32 0, !dbg !2777
  %202 = bitcast [32 x i8]* %arraydecay68 to i8*, !dbg !2777
  call void @llvm.memset.p0i8.i64(i8* %202, i8 0, i64 96, i32 4, i1 false), !dbg !2777
  %203 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2778
  %ch_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %203, i32 0, i32 25, !dbg !2779
  %arraydecay69 = getelementptr inbounds [6 x i32], [6 x i32]* %ch_pres, i32 0, i32 0, !dbg !2780
  %204 = bitcast i32* %arraydecay69 to i8*, !dbg !2780
  call void @llvm.memset.p0i8.i64(i8* %204, i8 0, i64 24, i32 4, i1 false), !dbg !2780
  %205 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2781
  %grid_1_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %205, i32 0, i32 26, !dbg !2782
  %arraydecay70 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf, i32 0, i32 0, !dbg !2783
  %206 = bitcast [12 x [8 x i8]]* %arraydecay70 to i8*, !dbg !2783
  call void @llvm.memset.p0i8.i64(i8* %206, i8 0, i64 576, i32 4, i1 false), !dbg !2783
  %207 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2784
  %grid_2_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %207, i32 0, i32 27, !dbg !2785
  %arraydecay71 = getelementptr inbounds [6 x [3 x [64 x i8]]], [6 x [3 x [64 x i8]]]* %grid_2_scf, i32 0, i32 0, !dbg !2786
  %208 = bitcast [3 x [64 x i8]]* %arraydecay71 to i8*, !dbg !2786
  call void @llvm.memset.p0i8.i64(i8* %208, i8 0, i64 1152, i32 4, i1 false), !dbg !2786
  %209 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2787
  %grid_3_avg = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %209, i32 0, i32 28, !dbg !2788
  %arraydecay72 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg, i32 0, i32 0, !dbg !2789
  %210 = bitcast [28 x i8]* %arraydecay72 to i8*, !dbg !2789
  call void @llvm.memset.p0i8.i64(i8* %210, i8 0, i64 168, i32 4, i1 false), !dbg !2789
  %211 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2790
  %grid_3_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %211, i32 0, i32 29, !dbg !2791
  %arraydecay73 = getelementptr inbounds [6 x [28 x [8 x i8]]], [6 x [28 x [8 x i8]]]* %grid_3_scf, i32 0, i32 0, !dbg !2792
  %212 = bitcast [28 x [8 x i8]]* %arraydecay73 to i8*, !dbg !2792
  call void @llvm.memset.p0i8.i64(i8* %212, i8 0, i64 1344, i32 4, i1 false), !dbg !2792
  %213 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2793
  %grid_3_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %213, i32 0, i32 30, !dbg !2794
  %arraydecay74 = getelementptr inbounds [6 x i32], [6 x i32]* %grid_3_pres, i32 0, i32 0, !dbg !2795
  %214 = bitcast i32* %arraydecay74 to i8*, !dbg !2795
  call void @llvm.memset.p0i8.i64(i8* %214, i8 0, i64 24, i32 4, i1 false), !dbg !2795
  %215 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2796
  %tonal_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %215, i32 0, i32 45, !dbg !2797
  %arraydecay75 = getelementptr inbounds [6 x i8], [6 x i8]* %tonal_scf, i32 0, i32 0, !dbg !2798
  call void @llvm.memset.p0i8.i64(i8* %arraydecay75, i8 0, i64 6, i32 4, i1 false), !dbg !2798
  %216 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2799
  %lfe_data = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %216, i32 0, i32 42, !dbg !2800
  %arraydecay76 = getelementptr inbounds [64 x float], [64 x float]* %lfe_data, i32 0, i32 0, !dbg !2801
  %217 = bitcast float* %arraydecay76 to i8*, !dbg !2801
  call void @llvm.memset.p0i8.i64(i8* %217, i8 0, i64 256, i32 32, i1 false), !dbg !2801
  %218 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2802
  %part_stereo_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %218, i32 0, i32 33, !dbg !2803
  store i8 0, i8* %part_stereo_pres, align 4, !dbg !2804
  %219 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2805
  %framenum = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %219, i32 0, i32 18, !dbg !2806
  %220 = load i32, i32* %framenum, align 8, !dbg !2806
  %add77 = add nsw i32 %220, 1, !dbg !2807
  %and78 = and i32 %add77, 31, !dbg !2808
  %221 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2809
  %framenum79 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %221, i32 0, i32 18, !dbg !2810
  store i32 %and78, i32* %framenum79, align 8, !dbg !2811
  store i32 0, i32* %ch, align 4, !dbg !2812
  br label %for.cond80, !dbg !2814

for.cond80:                                       ; preds = %for.inc108, %sw.epilog65
  %222 = load i32, i32* %ch, align 4, !dbg !2815
  %223 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2818
  %nchannels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %223, i32 0, i32 7, !dbg !2819
  %224 = load i32, i32* %nchannels, align 4, !dbg !2819
  %cmp81 = icmp slt i32 %222, %224, !dbg !2820
  br i1 %cmp81, label %for.body83, label %for.end110, !dbg !2821

for.body83:                                       ; preds = %for.cond80
  store i32 0, i32* %sb, align 4, !dbg !2822
  br label %for.cond84, !dbg !2825

for.cond84:                                       ; preds = %for.inc105, %for.body83
  %225 = load i32, i32* %sb, align 4, !dbg !2826
  %226 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2829
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %226, i32 0, i32 14, !dbg !2830
  %227 = load i32, i32* %nsubbands, align 8, !dbg !2830
  %div = sdiv i32 %227, 4, !dbg !2831
  %cmp85 = icmp slt i32 %225, %div, !dbg !2832
  br i1 %cmp85, label %for.body87, label %for.end107, !dbg !2833

for.body87:                                       ; preds = %for.cond84
  %228 = load i32, i32* %sb, align 4, !dbg !2834
  %idxprom88 = sext i32 %228 to i64, !dbg !2836
  %229 = load i32, i32* %ch, align 4, !dbg !2837
  %idxprom89 = sext i32 %229 to i64, !dbg !2836
  %230 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2836
  %part_stereo = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %230, i32 0, i32 32, !dbg !2838
  %arrayidx90 = getelementptr inbounds [6 x [8 x [5 x i8]]], [6 x [8 x [5 x i8]]]* %part_stereo, i64 0, i64 %idxprom89, !dbg !2836
  %arrayidx91 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* %arrayidx90, i64 0, i64 %idxprom88, !dbg !2836
  %arrayidx92 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx91, i64 0, i64 4, !dbg !2836
  %231 = load i8, i8* %arrayidx92, align 1, !dbg !2836
  %232 = load i32, i32* %sb, align 4, !dbg !2839
  %idxprom93 = sext i32 %232 to i64, !dbg !2840
  %233 = load i32, i32* %ch, align 4, !dbg !2841
  %idxprom94 = sext i32 %233 to i64, !dbg !2840
  %234 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2840
  %part_stereo95 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %234, i32 0, i32 32, !dbg !2842
  %arrayidx96 = getelementptr inbounds [6 x [8 x [5 x i8]]], [6 x [8 x [5 x i8]]]* %part_stereo95, i64 0, i64 %idxprom94, !dbg !2840
  %arrayidx97 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* %arrayidx96, i64 0, i64 %idxprom93, !dbg !2840
  %arrayidx98 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx97, i64 0, i64 0, !dbg !2840
  store i8 %231, i8* %arrayidx98, align 1, !dbg !2843
  %235 = load i32, i32* %sb, align 4, !dbg !2844
  %idxprom99 = sext i32 %235 to i64, !dbg !2845
  %236 = load i32, i32* %ch, align 4, !dbg !2846
  %idxprom100 = sext i32 %236 to i64, !dbg !2845
  %237 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2845
  %part_stereo101 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %237, i32 0, i32 32, !dbg !2847
  %arrayidx102 = getelementptr inbounds [6 x [8 x [5 x i8]]], [6 x [8 x [5 x i8]]]* %part_stereo101, i64 0, i64 %idxprom100, !dbg !2845
  %arrayidx103 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* %arrayidx102, i64 0, i64 %idxprom99, !dbg !2845
  %arrayidx104 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx103, i64 0, i64 4, !dbg !2845
  store i8 16, i8* %arrayidx104, align 1, !dbg !2848
  br label %for.inc105, !dbg !2849

for.inc105:                                       ; preds = %for.body87
  %238 = load i32, i32* %sb, align 4, !dbg !2850
  %inc106 = add nsw i32 %238, 1, !dbg !2850
  store i32 %inc106, i32* %sb, align 4, !dbg !2850
  br label %for.cond84, !dbg !2852, !llvm.loop !2853

for.end107:                                       ; preds = %for.cond84
  br label %for.inc108, !dbg !2855

for.inc108:                                       ; preds = %for.end107
  %239 = load i32, i32* %ch, align 4, !dbg !2856
  %inc109 = add nsw i32 %239, 1, !dbg !2856
  store i32 %inc109, i32* %ch, align 4, !dbg !2856
  br label %for.cond80, !dbg !2858, !llvm.loop !2859

for.end110:                                       ; preds = %for.cond80
  %240 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2861
  %framenum111 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %240, i32 0, i32 18, !dbg !2862
  %241 = load i32, i32* %framenum111, align 8, !dbg !2862
  %and112 = and i32 %241, 1, !dbg !2863
  %idxprom113 = sext i32 %and112 to i64, !dbg !2864
  %242 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2864
  %lpc_coeff = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %242, i32 0, i32 34, !dbg !2865
  %arrayidx114 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff, i64 0, i64 %idxprom113, !dbg !2864
  %arraydecay115 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx114, i32 0, i32 0, !dbg !2866
  %243 = bitcast [3 x [2 x [8 x float]]]* %arraydecay115 to i8*, !dbg !2866
  call void @llvm.memset.p0i8.i64(i8* %243, i8 0, i64 1152, i32 32, i1 false), !dbg !2866
  store i32 0, i32* %group, align 4, !dbg !2867
  br label %for.cond116, !dbg !2869

for.cond116:                                      ; preds = %for.inc143, %for.end110
  %244 = load i32, i32* %group, align 4, !dbg !2870
  %cmp117 = icmp slt i32 %244, 5, !dbg !2873
  br i1 %cmp117, label %for.body119, label %for.end145, !dbg !2874

for.body119:                                      ; preds = %for.cond116
  store i32 0, i32* %sf, align 4, !dbg !2875
  br label %for.cond120, !dbg !2878

for.cond120:                                      ; preds = %for.inc140, %for.body119
  %245 = load i32, i32* %sf, align 4, !dbg !2879
  %246 = load i32, i32* %group, align 4, !dbg !2882
  %shl = shl i32 1, %246, !dbg !2883
  %cmp121 = icmp slt i32 %245, %shl, !dbg !2884
  br i1 %cmp121, label %for.body123, label %for.end142, !dbg !2885

for.body123:                                      ; preds = %for.cond120
  call void @llvm.dbg.declare(metadata i32* %sf_idx, metadata !2886, metadata !2138), !dbg !2888
  %247 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2889
  %framenum124 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %247, i32 0, i32 18, !dbg !2890
  %248 = load i32, i32* %framenum124, align 8, !dbg !2890
  %249 = load i32, i32* %group, align 4, !dbg !2891
  %shl125 = shl i32 %248, %249, !dbg !2892
  %250 = load i32, i32* %sf, align 4, !dbg !2893
  %add126 = add nsw i32 %shl125, %250, !dbg !2894
  %and127 = and i32 %add126, 31, !dbg !2895
  store i32 %and127, i32* %sf_idx, align 4, !dbg !2888
  %251 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2896
  %ntones = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %251, i32 0, i32 48, !dbg !2897
  %252 = load i32, i32* %ntones, align 4, !dbg !2897
  %conv128 = trunc i32 %252 to i16, !dbg !2896
  %253 = load i32, i32* %sf_idx, align 4, !dbg !2898
  %idxprom129 = sext i32 %253 to i64, !dbg !2899
  %254 = load i32, i32* %group, align 4, !dbg !2900
  %idxprom130 = sext i32 %254 to i64, !dbg !2899
  %255 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2899
  %tonal_bounds = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %255, i32 0, i32 46, !dbg !2901
  %arrayidx131 = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds, i64 0, i64 %idxprom130, !dbg !2899
  %arrayidx132 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx131, i64 0, i64 %idxprom129, !dbg !2899
  %arrayidx133 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx132, i64 0, i64 1, !dbg !2899
  store i16 %conv128, i16* %arrayidx133, align 2, !dbg !2902
  %256 = load i32, i32* %sf_idx, align 4, !dbg !2903
  %idxprom134 = sext i32 %256 to i64, !dbg !2904
  %257 = load i32, i32* %group, align 4, !dbg !2905
  %idxprom135 = sext i32 %257 to i64, !dbg !2904
  %258 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !2904
  %tonal_bounds136 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %258, i32 0, i32 46, !dbg !2906
  %arrayidx137 = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds136, i64 0, i64 %idxprom135, !dbg !2904
  %arrayidx138 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx137, i64 0, i64 %idxprom134, !dbg !2904
  %arrayidx139 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx138, i64 0, i64 0, !dbg !2904
  store i16 %conv128, i16* %arrayidx139, align 2, !dbg !2907
  br label %for.inc140, !dbg !2908

for.inc140:                                       ; preds = %for.body123
  %259 = load i32, i32* %sf, align 4, !dbg !2909
  %inc141 = add nsw i32 %259, 1, !dbg !2909
  store i32 %inc141, i32* %sf, align 4, !dbg !2909
  br label %for.cond120, !dbg !2911, !llvm.loop !2912

for.end142:                                       ; preds = %for.cond120
  br label %for.inc143, !dbg !2914

for.inc143:                                       ; preds = %for.end142
  %260 = load i32, i32* %group, align 4, !dbg !2915
  %inc144 = add nsw i32 %260, 1, !dbg !2915
  store i32 %inc144, i32* %group, align 4, !dbg !2915
  br label %for.cond116, !dbg !2917, !llvm.loop !2918

for.end145:                                       ; preds = %for.cond116
  br label %while.cond, !dbg !2920

while.cond:                                       ; preds = %bytestream2_skip.exit517, %for.end145
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i490, align 8, !dbg !2921
  %261 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i490, align 8, !dbg !2922
  %buffer_end.i491 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %261, i32 0, i32 1, !dbg !2923
  %262 = load i8*, i8** %buffer_end.i491, align 8, !dbg !2923
  %263 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i490, align 8, !dbg !2924
  %buffer.i492 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %263, i32 0, i32 0, !dbg !2925
  %264 = load i8*, i8** %buffer.i492, align 8, !dbg !2925
  %sub.ptr.lhs.cast.i493 = ptrtoint i8* %262 to i64, !dbg !2926
  %sub.ptr.rhs.cast.i494 = ptrtoint i8* %264 to i64, !dbg !2926
  %sub.ptr.sub.i495 = sub i64 %sub.ptr.lhs.cast.i493, %sub.ptr.rhs.cast.i494, !dbg !2926
  %conv.i496 = trunc i64 %sub.ptr.sub.i495 to i32, !dbg !2922
  %cmp147 = icmp ugt i32 %conv.i496, 0, !dbg !2927
  br i1 %cmp147, label %while.body, label %while.end, !dbg !2928

while.body:                                       ; preds = %while.cond
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i581, align 8, !dbg !2929
  %265 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i581, align 8, !dbg !2930
  %buffer_end.i582 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %265, i32 0, i32 1, !dbg !2931
  %266 = load i8*, i8** %buffer_end.i582, align 8, !dbg !2931
  %267 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i581, align 8, !dbg !2932
  %buffer.i583 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %267, i32 0, i32 0, !dbg !2933
  %268 = load i8*, i8** %buffer.i583, align 8, !dbg !2933
  %sub.ptr.lhs.cast.i584 = ptrtoint i8* %266 to i64, !dbg !2934
  %sub.ptr.rhs.cast.i585 = ptrtoint i8* %268 to i64, !dbg !2934
  %sub.ptr.sub.i586 = sub i64 %sub.ptr.lhs.cast.i584, %sub.ptr.rhs.cast.i585, !dbg !2934
  %cmp.i587 = icmp slt i64 %sub.ptr.sub.i586, 1, !dbg !2935
  br i1 %cmp.i587, label %if.then.i590, label %if.end.i595, !dbg !2936

if.then.i590:                                     ; preds = %while.body
  %269 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i581, align 8, !dbg !2937
  %buffer_end1.i588 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %269, i32 0, i32 1, !dbg !2938
  %270 = load i8*, i8** %buffer_end1.i588, align 8, !dbg !2938
  %271 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i581, align 8, !dbg !2939
  %buffer2.i589 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %271, i32 0, i32 0, !dbg !2940
  store i8* %270, i8** %buffer2.i589, align 8, !dbg !2941
  store i32 0, i32* %retval.i580, align 4, !dbg !2942
  br label %bytestream2_get_byte.exit596, !dbg !2942

if.end.i595:                                      ; preds = %while.body
  %272 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i581, align 8, !dbg !2943
  store %struct.GetByteContext* %272, %struct.GetByteContext** %g.addr.i.i579, align 8, !dbg !2944
  %273 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i579, align 8, !dbg !2945
  %buffer.i.i591 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %273, i32 0, i32 0, !dbg !2946
  store i8** %buffer.i.i591, i8*** %b.addr.i.i.i578, align 8, !dbg !2947
  %274 = load i8**, i8*** %b.addr.i.i.i578, align 8, !dbg !2948
  %275 = load i8*, i8** %274, align 8, !dbg !2949
  %add.ptr.i.i.i592 = getelementptr inbounds i8, i8* %275, i64 1, !dbg !2949
  store i8* %add.ptr.i.i.i592, i8** %274, align 8, !dbg !2949
  %276 = load i8**, i8*** %b.addr.i.i.i578, align 8, !dbg !2950
  %277 = load i8*, i8** %276, align 8, !dbg !2951
  %add.ptr1.i.i.i593 = getelementptr inbounds i8, i8* %277, i64 -1, !dbg !2952
  %278 = load i8, i8* %add.ptr1.i.i.i593, align 1, !dbg !2953
  %conv.i.i.i594 = zext i8 %278 to i32, !dbg !2954
  store i32 %conv.i.i.i594, i32* %retval.i580, align 4, !dbg !2955
  br label %bytestream2_get_byte.exit596, !dbg !2955

bytestream2_get_byte.exit596:                     ; preds = %if.then.i590, %if.end.i595
  %279 = load i32, i32* %retval.i580, align 4, !dbg !2956
  store i32 %279, i32* %chunk_id, align 4, !dbg !2957
  %280 = load i32, i32* %chunk_id, align 4, !dbg !2958
  %and150 = and i32 %280, 128, !dbg !2959
  %tobool151 = icmp ne i32 %and150, 0, !dbg !2959
  br i1 %tobool151, label %cond.true152, label %cond.false154, !dbg !2960

cond.true152:                                     ; preds = %bytestream2_get_byte.exit596
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i555, align 8, !dbg !2961
  %281 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i555, align 8, !dbg !2962
  %buffer_end.i556 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %281, i32 0, i32 1, !dbg !2963
  %282 = load i8*, i8** %buffer_end.i556, align 8, !dbg !2963
  %283 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i555, align 8, !dbg !2964
  %buffer.i557 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %283, i32 0, i32 0, !dbg !2965
  %284 = load i8*, i8** %buffer.i557, align 8, !dbg !2965
  %sub.ptr.lhs.cast.i558 = ptrtoint i8* %282 to i64, !dbg !2966
  %sub.ptr.rhs.cast.i559 = ptrtoint i8* %284 to i64, !dbg !2966
  %sub.ptr.sub.i560 = sub i64 %sub.ptr.lhs.cast.i558, %sub.ptr.rhs.cast.i559, !dbg !2966
  %cmp.i561 = icmp slt i64 %sub.ptr.sub.i560, 2, !dbg !2967
  br i1 %cmp.i561, label %if.then.i564, label %if.end.i576, !dbg !2968

if.then.i564:                                     ; preds = %cond.true152
  %285 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i555, align 8, !dbg !2969
  %buffer_end1.i562 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %285, i32 0, i32 1, !dbg !2970
  %286 = load i8*, i8** %buffer_end1.i562, align 8, !dbg !2970
  %287 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i555, align 8, !dbg !2971
  %buffer2.i563 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %287, i32 0, i32 0, !dbg !2972
  store i8* %286, i8** %buffer2.i563, align 8, !dbg !2973
  store i32 0, i32* %retval.i554, align 4, !dbg !2974
  br label %bytestream2_get_be16.exit577, !dbg !2974

if.end.i576:                                      ; preds = %cond.true152
  %288 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i555, align 8, !dbg !2975
  store %struct.GetByteContext* %288, %struct.GetByteContext** %g.addr.i.i553, align 8, !dbg !2976
  %289 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i553, align 8, !dbg !2977
  %buffer.i.i565 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %289, i32 0, i32 0, !dbg !2978
  store i8** %buffer.i.i565, i8*** %b.addr.i.i.i552, align 8, !dbg !2979
  %290 = load i8**, i8*** %b.addr.i.i.i552, align 8, !dbg !2980
  %291 = load i8*, i8** %290, align 8, !dbg !2981
  %add.ptr.i.i.i566 = getelementptr inbounds i8, i8* %291, i64 2, !dbg !2981
  store i8* %add.ptr.i.i.i566, i8** %290, align 8, !dbg !2981
  %292 = load i8**, i8*** %b.addr.i.i.i552, align 8, !dbg !2982
  %293 = load i8*, i8** %292, align 8, !dbg !2983
  %add.ptr1.i.i.i567 = getelementptr inbounds i8, i8* %293, i64 -2, !dbg !2984
  %294 = bitcast i8* %add.ptr1.i.i.i567 to %union.unaligned_16*, !dbg !2985
  %l.i.i.i568 = bitcast %union.unaligned_16* %294 to i16*, !dbg !2985
  %295 = load i16, i16* %l.i.i.i568, align 1, !dbg !2985
  store i16 %295, i16* %x.addr.i.i.i.i551, align 2, !dbg !2986
  %296 = load i16, i16* %x.addr.i.i.i.i551, align 2, !dbg !2987
  %conv.i.i.i.i569 = zext i16 %296 to i32, !dbg !2987
  %shr.i.i.i.i570 = ashr i32 %conv.i.i.i.i569, 8, !dbg !2988
  %297 = load i16, i16* %x.addr.i.i.i.i551, align 2, !dbg !2989
  %conv1.i.i.i.i571 = zext i16 %297 to i32, !dbg !2989
  %shl.i.i.i.i572 = shl i32 %conv1.i.i.i.i571, 8, !dbg !2990
  %or.i.i.i.i573 = or i32 %shr.i.i.i.i570, %shl.i.i.i.i572, !dbg !2991
  %conv2.i.i.i.i574 = trunc i32 %or.i.i.i.i573 to i16, !dbg !2992
  store i16 %conv2.i.i.i.i574, i16* %x.addr.i.i.i.i551, align 2, !dbg !2993
  %298 = load i16, i16* %x.addr.i.i.i.i551, align 2, !dbg !2994
  %conv.i.i.i575 = zext i16 %298 to i32, !dbg !2986
  store i32 %conv.i.i.i575, i32* %retval.i554, align 4, !dbg !2995
  br label %bytestream2_get_be16.exit577, !dbg !2995

bytestream2_get_be16.exit577:                     ; preds = %if.then.i564, %if.end.i576
  %299 = load i32, i32* %retval.i554, align 4, !dbg !2996
  br label %cond.end156, !dbg !2997

cond.false154:                                    ; preds = %bytestream2_get_byte.exit596
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i535, align 8, !dbg !2998
  %300 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i535, align 8, !dbg !2999
  %buffer_end.i536 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %300, i32 0, i32 1, !dbg !3000
  %301 = load i8*, i8** %buffer_end.i536, align 8, !dbg !3000
  %302 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i535, align 8, !dbg !3001
  %buffer.i537 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %302, i32 0, i32 0, !dbg !3002
  %303 = load i8*, i8** %buffer.i537, align 8, !dbg !3002
  %sub.ptr.lhs.cast.i538 = ptrtoint i8* %301 to i64, !dbg !3003
  %sub.ptr.rhs.cast.i539 = ptrtoint i8* %303 to i64, !dbg !3003
  %sub.ptr.sub.i540 = sub i64 %sub.ptr.lhs.cast.i538, %sub.ptr.rhs.cast.i539, !dbg !3003
  %cmp.i541 = icmp slt i64 %sub.ptr.sub.i540, 1, !dbg !3004
  br i1 %cmp.i541, label %if.then.i544, label %if.end.i549, !dbg !3005

if.then.i544:                                     ; preds = %cond.false154
  %304 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i535, align 8, !dbg !3006
  %buffer_end1.i542 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %304, i32 0, i32 1, !dbg !3007
  %305 = load i8*, i8** %buffer_end1.i542, align 8, !dbg !3007
  %306 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i535, align 8, !dbg !3008
  %buffer2.i543 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %306, i32 0, i32 0, !dbg !3009
  store i8* %305, i8** %buffer2.i543, align 8, !dbg !3010
  store i32 0, i32* %retval.i534, align 4, !dbg !3011
  br label %bytestream2_get_byte.exit550, !dbg !3011

if.end.i549:                                      ; preds = %cond.false154
  %307 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i535, align 8, !dbg !3012
  store %struct.GetByteContext* %307, %struct.GetByteContext** %g.addr.i.i533, align 8, !dbg !3013
  %308 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i533, align 8, !dbg !3014
  %buffer.i.i545 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %308, i32 0, i32 0, !dbg !3015
  store i8** %buffer.i.i545, i8*** %b.addr.i.i.i532, align 8, !dbg !3016
  %309 = load i8**, i8*** %b.addr.i.i.i532, align 8, !dbg !3017
  %310 = load i8*, i8** %309, align 8, !dbg !3018
  %add.ptr.i.i.i546 = getelementptr inbounds i8, i8* %310, i64 1, !dbg !3018
  store i8* %add.ptr.i.i.i546, i8** %309, align 8, !dbg !3018
  %311 = load i8**, i8*** %b.addr.i.i.i532, align 8, !dbg !3019
  %312 = load i8*, i8** %311, align 8, !dbg !3020
  %add.ptr1.i.i.i547 = getelementptr inbounds i8, i8* %312, i64 -1, !dbg !3021
  %313 = load i8, i8* %add.ptr1.i.i.i547, align 1, !dbg !3022
  %conv.i.i.i548 = zext i8 %313 to i32, !dbg !3023
  store i32 %conv.i.i.i548, i32* %retval.i534, align 4, !dbg !3024
  br label %bytestream2_get_byte.exit550, !dbg !3024

bytestream2_get_byte.exit550:                     ; preds = %if.then.i544, %if.end.i549
  %314 = load i32, i32* %retval.i534, align 4, !dbg !3025
  br label %cond.end156, !dbg !3026

cond.end156:                                      ; preds = %bytestream2_get_byte.exit550, %bytestream2_get_be16.exit577
  %cond157 = phi i32 [ %299, %bytestream2_get_be16.exit577 ], [ %314, %bytestream2_get_byte.exit550 ], !dbg !3027
  store i32 %cond157, i32* %chunk_len, align 4, !dbg !3029
  %315 = load i32, i32* %chunk_id, align 4, !dbg !3030
  %and158 = and i32 %315, 127, !dbg !3030
  store i32 %and158, i32* %chunk_id, align 4, !dbg !3030
  %316 = load i32, i32* %chunk_len, align 4, !dbg !3031
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !3032
  %317 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !3033
  %buffer_end.i526 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %317, i32 0, i32 1, !dbg !3034
  %318 = load i8*, i8** %buffer_end.i526, align 8, !dbg !3034
  %319 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i525, align 8, !dbg !3035
  %buffer.i527 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %319, i32 0, i32 0, !dbg !3036
  %320 = load i8*, i8** %buffer.i527, align 8, !dbg !3036
  %sub.ptr.lhs.cast.i528 = ptrtoint i8* %318 to i64, !dbg !3037
  %sub.ptr.rhs.cast.i529 = ptrtoint i8* %320 to i64, !dbg !3037
  %sub.ptr.sub.i530 = sub i64 %sub.ptr.lhs.cast.i528, %sub.ptr.rhs.cast.i529, !dbg !3037
  %conv.i531 = trunc i64 %sub.ptr.sub.i530 to i32, !dbg !3033
  %cmp160 = icmp ugt i32 %316, %conv.i531, !dbg !3038
  br i1 %cmp160, label %if.then162, label %if.end171, !dbg !3039

if.then162:                                       ; preds = %cond.end156
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i518, align 8, !dbg !3040
  %321 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i518, align 8, !dbg !3041
  %buffer_end.i519 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %321, i32 0, i32 1, !dbg !3042
  %322 = load i8*, i8** %buffer_end.i519, align 8, !dbg !3042
  %323 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i518, align 8, !dbg !3043
  %buffer.i520 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %323, i32 0, i32 0, !dbg !3044
  %324 = load i8*, i8** %buffer.i520, align 8, !dbg !3044
  %sub.ptr.lhs.cast.i521 = ptrtoint i8* %322 to i64, !dbg !3045
  %sub.ptr.rhs.cast.i522 = ptrtoint i8* %324 to i64, !dbg !3045
  %sub.ptr.sub.i523 = sub i64 %sub.ptr.lhs.cast.i521, %sub.ptr.rhs.cast.i522, !dbg !3045
  %conv.i524 = trunc i64 %sub.ptr.sub.i523 to i32, !dbg !3041
  store i32 %conv.i524, i32* %chunk_len, align 4, !dbg !3046
  %325 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3047
  %avctx164 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %325, i32 0, i32 0, !dbg !3048
  %326 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx164, align 32, !dbg !3048
  %327 = bitcast %struct.AVCodecContext* %326 to i8*, !dbg !3047
  %328 = load i32, i32* %chunk_id, align 4, !dbg !3049
  call void (i8*, i32, i8*, ...) @av_log(i8* %327, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i32 %328), !dbg !3050
  %329 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3051
  %avctx165 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %329, i32 0, i32 0, !dbg !3053
  %330 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx165, align 32, !dbg !3053
  %err_recognition166 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %330, i32 0, i32 135, !dbg !3054
  %331 = load i32, i32* %err_recognition166, align 8, !dbg !3054
  %and167 = and i32 %331, 8, !dbg !3055
  %tobool168 = icmp ne i32 %and167, 0, !dbg !3055
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !3056

if.then169:                                       ; preds = %if.then162
  store i32 -1094995529, i32* %retval, align 4, !dbg !3057
  br label %return, !dbg !3057

if.end170:                                        ; preds = %if.then162
  br label %if.end171, !dbg !3058

if.end171:                                        ; preds = %if.end170, %cond.end156
  %332 = load i32, i32* %chunk_id, align 4, !dbg !3059
  switch i32 %332, label %sw.epilog251 [
    i32 10, label %sw.bb172
    i32 14, label %sw.bb176
    i32 16, label %sw.bb176
    i32 22, label %sw.bb176
    i32 17, label %sw.bb182
    i32 18, label %sw.bb182
    i32 19, label %sw.bb182
    i32 20, label %sw.bb182
    i32 21, label %sw.bb182
    i32 23, label %sw.bb196
    i32 24, label %sw.bb196
    i32 25, label %sw.bb196
    i32 26, label %sw.bb196
    i32 27, label %sw.bb196
    i32 48, label %sw.bb211
    i32 49, label %sw.bb211
    i32 50, label %sw.bb211
    i32 64, label %sw.bb221
    i32 65, label %sw.bb221
    i32 66, label %sw.bb221
    i32 80, label %sw.bb231
    i32 81, label %sw.bb231
    i32 82, label %sw.bb231
    i32 96, label %sw.bb241
    i32 97, label %sw.bb241
    i32 98, label %sw.bb241
  ], !dbg !3060

sw.bb172:                                         ; preds = %if.end171
  %333 = load i32, i32* %chunk_len, align 4, !dbg !3061
  %lfe = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 0, !dbg !3063
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %lfe, i32 0, i32 1, !dbg !3064
  store i32 %333, i32* %len, align 4, !dbg !3065
  %buffer173 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3066
  %334 = load i8*, i8** %buffer173, align 8, !dbg !3066
  %lfe174 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 0, !dbg !3067
  %data175 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %lfe174, i32 0, i32 2, !dbg !3068
  store i8* %334, i8** %data175, align 8, !dbg !3069
  br label %sw.epilog251, !dbg !3070

sw.bb176:                                         ; preds = %if.end171, %if.end171, %if.end171
  %335 = load i32, i32* %chunk_id, align 4, !dbg !3071
  %tonal = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 1, !dbg !3072
  %id = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %tonal, i32 0, i32 0, !dbg !3073
  store i32 %335, i32* %id, align 8, !dbg !3074
  %336 = load i32, i32* %chunk_len, align 4, !dbg !3075
  %tonal177 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 1, !dbg !3076
  %len178 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %tonal177, i32 0, i32 1, !dbg !3077
  store i32 %336, i32* %len178, align 4, !dbg !3078
  %buffer179 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3079
  %337 = load i8*, i8** %buffer179, align 8, !dbg !3079
  %tonal180 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 1, !dbg !3080
  %data181 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %tonal180, i32 0, i32 2, !dbg !3081
  store i8* %337, i8** %data181, align 8, !dbg !3082
  br label %sw.epilog251, !dbg !3083

sw.bb182:                                         ; preds = %if.end171, %if.end171, %if.end171, %if.end171, %if.end171
  %338 = load i32, i32* %chunk_id, align 4, !dbg !3084
  %sub183 = sub nsw i32 21, %338, !dbg !3085
  store i32 %sub183, i32* %i, align 4, !dbg !3086
  %339 = load i32, i32* %i, align 4, !dbg !3087
  %340 = load i32, i32* %i, align 4, !dbg !3088
  %idxprom184 = sext i32 %340 to i64, !dbg !3089
  %tonal_grp = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3090
  %arrayidx185 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp, i64 0, i64 %idxprom184, !dbg !3089
  %id186 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx185, i32 0, i32 0, !dbg !3091
  store i32 %339, i32* %id186, align 8, !dbg !3092
  %341 = load i32, i32* %chunk_len, align 4, !dbg !3093
  %342 = load i32, i32* %i, align 4, !dbg !3094
  %idxprom187 = sext i32 %342 to i64, !dbg !3095
  %tonal_grp188 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3096
  %arrayidx189 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp188, i64 0, i64 %idxprom187, !dbg !3095
  %len190 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx189, i32 0, i32 1, !dbg !3097
  store i32 %341, i32* %len190, align 4, !dbg !3098
  %buffer191 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3099
  %343 = load i8*, i8** %buffer191, align 8, !dbg !3099
  %344 = load i32, i32* %i, align 4, !dbg !3100
  %idxprom192 = sext i32 %344 to i64, !dbg !3101
  %tonal_grp193 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3102
  %arrayidx194 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp193, i64 0, i64 %idxprom192, !dbg !3101
  %data195 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx194, i32 0, i32 2, !dbg !3103
  store i8* %343, i8** %data195, align 8, !dbg !3104
  br label %sw.epilog251, !dbg !3105

sw.bb196:                                         ; preds = %if.end171, %if.end171, %if.end171, %if.end171, %if.end171
  %345 = load i32, i32* %chunk_id, align 4, !dbg !3106
  %sub197 = sub nsw i32 27, %345, !dbg !3107
  store i32 %sub197, i32* %i, align 4, !dbg !3108
  %346 = load i32, i32* %i, align 4, !dbg !3109
  %347 = load i32, i32* %i, align 4, !dbg !3110
  %idxprom198 = sext i32 %347 to i64, !dbg !3111
  %tonal_grp199 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3112
  %arrayidx200 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp199, i64 0, i64 %idxprom198, !dbg !3111
  %id201 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx200, i32 0, i32 0, !dbg !3113
  store i32 %346, i32* %id201, align 8, !dbg !3114
  %348 = load i32, i32* %chunk_len, align 4, !dbg !3115
  %349 = load i32, i32* %i, align 4, !dbg !3116
  %idxprom202 = sext i32 %349 to i64, !dbg !3117
  %tonal_grp203 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3118
  %arrayidx204 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp203, i64 0, i64 %idxprom202, !dbg !3117
  %len205 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx204, i32 0, i32 1, !dbg !3119
  store i32 %348, i32* %len205, align 4, !dbg !3120
  %buffer206 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3121
  %350 = load i8*, i8** %buffer206, align 8, !dbg !3121
  %351 = load i32, i32* %i, align 4, !dbg !3122
  %idxprom207 = sext i32 %351 to i64, !dbg !3123
  %tonal_grp208 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3124
  %arrayidx209 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp208, i64 0, i64 %idxprom207, !dbg !3123
  %data210 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx209, i32 0, i32 2, !dbg !3125
  store i8* %350, i8** %data210, align 8, !dbg !3126
  br label %sw.epilog251, !dbg !3127

sw.bb211:                                         ; preds = %if.end171, %if.end171, %if.end171
  %352 = load i32, i32* %chunk_id, align 4, !dbg !3128
  %sub212 = sub nsw i32 %352, 48, !dbg !3129
  store i32 %sub212, i32* %i, align 4, !dbg !3130
  %353 = load i32, i32* %chunk_len, align 4, !dbg !3131
  %354 = load i32, i32* %i, align 4, !dbg !3132
  %idxprom213 = sext i32 %354 to i64, !dbg !3133
  %grid1 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 3, !dbg !3134
  %arrayidx214 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %grid1, i64 0, i64 %idxprom213, !dbg !3133
  %len215 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx214, i32 0, i32 1, !dbg !3135
  store i32 %353, i32* %len215, align 4, !dbg !3136
  %buffer216 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3137
  %355 = load i8*, i8** %buffer216, align 8, !dbg !3137
  %356 = load i32, i32* %i, align 4, !dbg !3138
  %idxprom217 = sext i32 %356 to i64, !dbg !3139
  %grid1218 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 3, !dbg !3140
  %arrayidx219 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %grid1218, i64 0, i64 %idxprom217, !dbg !3139
  %data220 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx219, i32 0, i32 2, !dbg !3141
  store i8* %355, i8** %data220, align 8, !dbg !3142
  br label %sw.epilog251, !dbg !3143

sw.bb221:                                         ; preds = %if.end171, %if.end171, %if.end171
  %357 = load i32, i32* %chunk_id, align 4, !dbg !3144
  %sub222 = sub nsw i32 %357, 64, !dbg !3145
  store i32 %sub222, i32* %i, align 4, !dbg !3146
  %358 = load i32, i32* %chunk_len, align 4, !dbg !3147
  %359 = load i32, i32* %i, align 4, !dbg !3148
  %idxprom223 = sext i32 %359 to i64, !dbg !3149
  %hr_grid = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 4, !dbg !3150
  %arrayidx224 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %hr_grid, i64 0, i64 %idxprom223, !dbg !3149
  %len225 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx224, i32 0, i32 1, !dbg !3151
  store i32 %358, i32* %len225, align 4, !dbg !3152
  %buffer226 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3153
  %360 = load i8*, i8** %buffer226, align 8, !dbg !3153
  %361 = load i32, i32* %i, align 4, !dbg !3154
  %idxprom227 = sext i32 %361 to i64, !dbg !3155
  %hr_grid228 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 4, !dbg !3156
  %arrayidx229 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %hr_grid228, i64 0, i64 %idxprom227, !dbg !3155
  %data230 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx229, i32 0, i32 2, !dbg !3157
  store i8* %360, i8** %data230, align 8, !dbg !3158
  br label %sw.epilog251, !dbg !3159

sw.bb231:                                         ; preds = %if.end171, %if.end171, %if.end171
  %362 = load i32, i32* %chunk_id, align 4, !dbg !3160
  %sub232 = sub nsw i32 %362, 80, !dbg !3161
  store i32 %sub232, i32* %i, align 4, !dbg !3162
  %363 = load i32, i32* %chunk_len, align 4, !dbg !3163
  %364 = load i32, i32* %i, align 4, !dbg !3164
  %idxprom233 = sext i32 %364 to i64, !dbg !3165
  %ts1 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 5, !dbg !3166
  %arrayidx234 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts1, i64 0, i64 %idxprom233, !dbg !3165
  %len235 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx234, i32 0, i32 1, !dbg !3167
  store i32 %363, i32* %len235, align 4, !dbg !3168
  %buffer236 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3169
  %365 = load i8*, i8** %buffer236, align 8, !dbg !3169
  %366 = load i32, i32* %i, align 4, !dbg !3170
  %idxprom237 = sext i32 %366 to i64, !dbg !3171
  %ts1238 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 5, !dbg !3172
  %arrayidx239 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts1238, i64 0, i64 %idxprom237, !dbg !3171
  %data240 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx239, i32 0, i32 2, !dbg !3173
  store i8* %365, i8** %data240, align 8, !dbg !3174
  br label %sw.epilog251, !dbg !3175

sw.bb241:                                         ; preds = %if.end171, %if.end171, %if.end171
  %367 = load i32, i32* %chunk_id, align 4, !dbg !3176
  %sub242 = sub nsw i32 %367, 96, !dbg !3177
  store i32 %sub242, i32* %i, align 4, !dbg !3178
  %368 = load i32, i32* %chunk_len, align 4, !dbg !3179
  %369 = load i32, i32* %i, align 4, !dbg !3180
  %idxprom243 = sext i32 %369 to i64, !dbg !3181
  %ts2 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 6, !dbg !3182
  %arrayidx244 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts2, i64 0, i64 %idxprom243, !dbg !3181
  %len245 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx244, i32 0, i32 1, !dbg !3183
  store i32 %368, i32* %len245, align 4, !dbg !3184
  %buffer246 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !3185
  %370 = load i8*, i8** %buffer246, align 8, !dbg !3185
  %371 = load i32, i32* %i, align 4, !dbg !3186
  %idxprom247 = sext i32 %371 to i64, !dbg !3187
  %ts2248 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 6, !dbg !3188
  %arrayidx249 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts2248, i64 0, i64 %idxprom247, !dbg !3187
  %data250 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx249, i32 0, i32 2, !dbg !3189
  store i8* %370, i8** %data250, align 8, !dbg !3190
  br label %sw.epilog251, !dbg !3191

sw.epilog251:                                     ; preds = %if.end171, %sw.bb241, %sw.bb231, %sw.bb221, %sw.bb211, %sw.bb196, %sw.bb182, %sw.bb176, %sw.bb172
  %372 = load i32, i32* %chunk_len, align 4, !dbg !3192
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i497, align 8, !dbg !3193
  store i32 %372, i32* %size.addr.i498, align 4, !dbg !3193
  %373 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i497, align 8, !dbg !3194
  %buffer_end.i499 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %373, i32 0, i32 1, !dbg !3195
  %374 = load i8*, i8** %buffer_end.i499, align 8, !dbg !3195
  %375 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i497, align 8, !dbg !3196
  %buffer.i500 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %375, i32 0, i32 0, !dbg !3197
  %376 = load i8*, i8** %buffer.i500, align 8, !dbg !3197
  %sub.ptr.lhs.cast.i501 = ptrtoint i8* %374 to i64, !dbg !3198
  %sub.ptr.rhs.cast.i502 = ptrtoint i8* %376 to i64, !dbg !3198
  %sub.ptr.sub.i503 = sub i64 %sub.ptr.lhs.cast.i501, %sub.ptr.rhs.cast.i502, !dbg !3198
  %377 = load i32, i32* %size.addr.i498, align 4, !dbg !3199
  %conv.i504 = zext i32 %377 to i64, !dbg !3200
  %cmp.i505 = icmp sgt i64 %sub.ptr.sub.i503, %conv.i504, !dbg !3201
  br i1 %cmp.i505, label %cond.true.i507, label %cond.false.i513, !dbg !3202

cond.true.i507:                                   ; preds = %sw.epilog251
  %378 = load i32, i32* %size.addr.i498, align 4, !dbg !3203
  %conv2.i506 = zext i32 %378 to i64, !dbg !3204
  br label %bytestream2_skip.exit517, !dbg !3205

cond.false.i513:                                  ; preds = %sw.epilog251
  %379 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i497, align 8, !dbg !3206
  %buffer_end3.i508 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %379, i32 0, i32 1, !dbg !3207
  %380 = load i8*, i8** %buffer_end3.i508, align 8, !dbg !3207
  %381 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i497, align 8, !dbg !3208
  %buffer4.i509 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %381, i32 0, i32 0, !dbg !3209
  %382 = load i8*, i8** %buffer4.i509, align 8, !dbg !3209
  %sub.ptr.lhs.cast5.i510 = ptrtoint i8* %380 to i64, !dbg !3210
  %sub.ptr.rhs.cast6.i511 = ptrtoint i8* %382 to i64, !dbg !3210
  %sub.ptr.sub7.i512 = sub i64 %sub.ptr.lhs.cast5.i510, %sub.ptr.rhs.cast6.i511, !dbg !3210
  br label %bytestream2_skip.exit517, !dbg !3211

bytestream2_skip.exit517:                         ; preds = %cond.true.i507, %cond.false.i513
  %cond.i514 = phi i64 [ %conv2.i506, %cond.true.i507 ], [ %sub.ptr.sub7.i512, %cond.false.i513 ], !dbg !3212
  %383 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i497, align 8, !dbg !3213
  %buffer8.i515 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %383, i32 0, i32 0, !dbg !3214
  %384 = load i8*, i8** %buffer8.i515, align 8, !dbg !3215
  %add.ptr.i516 = getelementptr inbounds i8, i8* %384, i64 %cond.i514, !dbg !3215
  store i8* %add.ptr.i516, i8** %buffer8.i515, align 8, !dbg !3215
  br label %while.cond, !dbg !3216, !llvm.loop !3217

while.end:                                        ; preds = %while.cond
  %385 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3218
  %lfe252 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 0, !dbg !3219
  %call253 = call i32 @parse_lfe_chunk(%struct.DCALbrDecoder* %385, %struct.LBRChunk* %lfe252), !dbg !3220
  store i32 %call253, i32* %ret, align 4, !dbg !3221
  %386 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3222
  %tonal254 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 1, !dbg !3223
  %call255 = call i32 @parse_tonal_chunk(%struct.DCALbrDecoder* %386, %struct.LBRChunk* %tonal254), !dbg !3224
  %387 = load i32, i32* %ret, align 4, !dbg !3225
  %or = or i32 %387, %call255, !dbg !3225
  store i32 %or, i32* %ret, align 4, !dbg !3225
  store i32 0, i32* %i, align 4, !dbg !3226
  br label %for.cond256, !dbg !3228

for.cond256:                                      ; preds = %for.inc265, %while.end
  %388 = load i32, i32* %i, align 4, !dbg !3229
  %cmp257 = icmp slt i32 %388, 5, !dbg !3232
  br i1 %cmp257, label %for.body259, label %for.end267, !dbg !3233

for.body259:                                      ; preds = %for.cond256
  %389 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3234
  %390 = load i32, i32* %i, align 4, !dbg !3235
  %idxprom260 = sext i32 %390 to i64, !dbg !3236
  %tonal_grp261 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 2, !dbg !3237
  %arrayidx262 = getelementptr inbounds [5 x %struct.LBRChunk], [5 x %struct.LBRChunk]* %tonal_grp261, i64 0, i64 %idxprom260, !dbg !3236
  %call263 = call i32 @parse_tonal_group(%struct.DCALbrDecoder* %389, %struct.LBRChunk* %arrayidx262), !dbg !3238
  %391 = load i32, i32* %ret, align 4, !dbg !3239
  %or264 = or i32 %391, %call263, !dbg !3239
  store i32 %or264, i32* %ret, align 4, !dbg !3239
  br label %for.inc265, !dbg !3240

for.inc265:                                       ; preds = %for.body259
  %392 = load i32, i32* %i, align 4, !dbg !3241
  %inc266 = add nsw i32 %392, 1, !dbg !3241
  store i32 %inc266, i32* %i, align 4, !dbg !3241
  br label %for.cond256, !dbg !3243, !llvm.loop !3244

for.end267:                                       ; preds = %for.cond256
  store i32 0, i32* %i, align 4, !dbg !3246
  br label %for.cond268, !dbg !3248

for.cond268:                                      ; preds = %for.inc335, %for.end267
  %393 = load i32, i32* %i, align 4, !dbg !3249
  %394 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3252
  %nchannels269 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %394, i32 0, i32 7, !dbg !3253
  %395 = load i32, i32* %nchannels269, align 4, !dbg !3253
  %add270 = add nsw i32 %395, 1, !dbg !3254
  %div271 = sdiv i32 %add270, 2, !dbg !3255
  %cmp272 = icmp slt i32 %393, %div271, !dbg !3256
  br i1 %cmp272, label %for.body274, label %for.end337, !dbg !3257

for.body274:                                      ; preds = %for.cond268
  call void @llvm.dbg.declare(metadata i32* %ch1, metadata !3258, metadata !2138), !dbg !3260
  %396 = load i32, i32* %i, align 4, !dbg !3261
  %mul = mul nsw i32 %396, 2, !dbg !3262
  store i32 %mul, i32* %ch1, align 4, !dbg !3260
  call void @llvm.dbg.declare(metadata i32* %ch2, metadata !3263, metadata !2138), !dbg !3264
  %397 = load i32, i32* %ch1, align 4, !dbg !3265
  %add275 = add nsw i32 %397, 1, !dbg !3266
  %398 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3267
  %nchannels276 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %398, i32 0, i32 7, !dbg !3268
  %399 = load i32, i32* %nchannels276, align 4, !dbg !3268
  %sub277 = sub nsw i32 %399, 1, !dbg !3269
  %cmp278 = icmp sgt i32 %add275, %sub277, !dbg !3270
  br i1 %cmp278, label %cond.true280, label %cond.false283, !dbg !3271

cond.true280:                                     ; preds = %for.body274
  %400 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3272
  %nchannels281 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %400, i32 0, i32 7, !dbg !3274
  %401 = load i32, i32* %nchannels281, align 4, !dbg !3274
  %sub282 = sub nsw i32 %401, 1, !dbg !3275
  br label %cond.end285, !dbg !3276

cond.false283:                                    ; preds = %for.body274
  %402 = load i32, i32* %ch1, align 4, !dbg !3277
  %add284 = add nsw i32 %402, 1, !dbg !3279
  br label %cond.end285, !dbg !3280

cond.end285:                                      ; preds = %cond.false283, %cond.true280
  %cond286 = phi i32 [ %sub282, %cond.true280 ], [ %add284, %cond.false283 ], !dbg !3281
  store i32 %cond286, i32* %ch2, align 4, !dbg !3283
  %403 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3284
  %404 = load i32, i32* %i, align 4, !dbg !3286
  %idxprom287 = sext i32 %404 to i64, !dbg !3287
  %grid1288 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 3, !dbg !3288
  %arrayidx289 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %grid1288, i64 0, i64 %idxprom287, !dbg !3287
  %405 = load i32, i32* %ch1, align 4, !dbg !3289
  %406 = load i32, i32* %ch2, align 4, !dbg !3290
  %call290 = call i32 @parse_grid_1_chunk(%struct.DCALbrDecoder* %403, %struct.LBRChunk* %arrayidx289, i32 %405, i32 %406), !dbg !3291
  %cmp291 = icmp slt i32 %call290, 0, !dbg !3292
  br i1 %cmp291, label %if.then299, label %lor.lhs.false, !dbg !3293

lor.lhs.false:                                    ; preds = %cond.end285
  %407 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3294
  %408 = load i32, i32* %i, align 4, !dbg !3295
  %idxprom293 = sext i32 %408 to i64, !dbg !3296
  %hr_grid294 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 4, !dbg !3297
  %arrayidx295 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %hr_grid294, i64 0, i64 %idxprom293, !dbg !3296
  %409 = load i32, i32* %ch1, align 4, !dbg !3298
  %410 = load i32, i32* %ch2, align 4, !dbg !3299
  %call296 = call i32 @parse_high_res_grid(%struct.DCALbrDecoder* %407, %struct.LBRChunk* %arrayidx295, i32 %409, i32 %410), !dbg !3300
  %cmp297 = icmp slt i32 %call296, 0, !dbg !3301
  br i1 %cmp297, label %if.then299, label %if.end300, !dbg !3302

if.then299:                                       ; preds = %lor.lhs.false, %cond.end285
  store i32 -1, i32* %ret, align 4, !dbg !3303
  br label %for.inc335, !dbg !3305

if.end300:                                        ; preds = %lor.lhs.false
  %411 = load i32, i32* %i, align 4, !dbg !3306
  %idxprom301 = sext i32 %411 to i64, !dbg !3308
  %grid1302 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 3, !dbg !3309
  %arrayidx303 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %grid1302, i64 0, i64 %idxprom301, !dbg !3308
  %len304 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx303, i32 0, i32 1, !dbg !3310
  %412 = load i32, i32* %len304, align 4, !dbg !3310
  %tobool305 = icmp ne i32 %412, 0, !dbg !3308
  br i1 %tobool305, label %lor.lhs.false306, label %if.then318, !dbg !3311

lor.lhs.false306:                                 ; preds = %if.end300
  %413 = load i32, i32* %i, align 4, !dbg !3312
  %idxprom307 = sext i32 %413 to i64, !dbg !3314
  %hr_grid308 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 4, !dbg !3315
  %arrayidx309 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %hr_grid308, i64 0, i64 %idxprom307, !dbg !3314
  %len310 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx309, i32 0, i32 1, !dbg !3316
  %414 = load i32, i32* %len310, align 4, !dbg !3316
  %tobool311 = icmp ne i32 %414, 0, !dbg !3314
  br i1 %tobool311, label %lor.lhs.false312, label %if.then318, !dbg !3317

lor.lhs.false312:                                 ; preds = %lor.lhs.false306
  %415 = load i32, i32* %i, align 4, !dbg !3318
  %idxprom313 = sext i32 %415 to i64, !dbg !3320
  %ts1314 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 5, !dbg !3321
  %arrayidx315 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts1314, i64 0, i64 %idxprom313, !dbg !3320
  %len316 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %arrayidx315, i32 0, i32 1, !dbg !3322
  %416 = load i32, i32* %len316, align 4, !dbg !3322
  %tobool317 = icmp ne i32 %416, 0, !dbg !3320
  br i1 %tobool317, label %if.end319, label %if.then318, !dbg !3323

if.then318:                                       ; preds = %lor.lhs.false312, %lor.lhs.false306, %if.end300
  br label %for.inc335, !dbg !3324

if.end319:                                        ; preds = %lor.lhs.false312
  %417 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3325
  %418 = load i32, i32* %i, align 4, !dbg !3327
  %idxprom320 = sext i32 %418 to i64, !dbg !3328
  %ts1321 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 5, !dbg !3329
  %arrayidx322 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts1321, i64 0, i64 %idxprom320, !dbg !3328
  %419 = load i32, i32* %ch1, align 4, !dbg !3330
  %420 = load i32, i32* %ch2, align 4, !dbg !3331
  %call323 = call i32 @parse_ts1_chunk(%struct.DCALbrDecoder* %417, %struct.LBRChunk* %arrayidx322, i32 %419, i32 %420), !dbg !3332
  %cmp324 = icmp slt i32 %call323, 0, !dbg !3333
  br i1 %cmp324, label %if.then333, label %lor.lhs.false326, !dbg !3334

lor.lhs.false326:                                 ; preds = %if.end319
  %421 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3335
  %422 = load i32, i32* %i, align 4, !dbg !3336
  %idxprom327 = sext i32 %422 to i64, !dbg !3337
  %ts2328 = getelementptr inbounds %struct.anon, %struct.anon* %chunk, i32 0, i32 6, !dbg !3338
  %arrayidx329 = getelementptr inbounds [3 x %struct.LBRChunk], [3 x %struct.LBRChunk]* %ts2328, i64 0, i64 %idxprom327, !dbg !3337
  %423 = load i32, i32* %ch1, align 4, !dbg !3339
  %424 = load i32, i32* %ch2, align 4, !dbg !3340
  %call330 = call i32 @parse_ts2_chunk(%struct.DCALbrDecoder* %421, %struct.LBRChunk* %arrayidx329, i32 %423, i32 %424), !dbg !3341
  %cmp331 = icmp slt i32 %call330, 0, !dbg !3342
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !3343

if.then333:                                       ; preds = %lor.lhs.false326, %if.end319
  store i32 -1, i32* %ret, align 4, !dbg !3344
  br label %for.inc335, !dbg !3346

if.end334:                                        ; preds = %lor.lhs.false326
  br label %for.inc335, !dbg !3347

for.inc335:                                       ; preds = %if.end334, %if.then333, %if.then318, %if.then299
  %425 = load i32, i32* %i, align 4, !dbg !3348
  %inc336 = add nsw i32 %425, 1, !dbg !3348
  store i32 %inc336, i32* %i, align 4, !dbg !3348
  br label %for.cond268, !dbg !3350, !llvm.loop !3351

for.end337:                                       ; preds = %for.cond268
  %426 = load i32, i32* %ret, align 4, !dbg !3353
  %cmp338 = icmp slt i32 %426, 0, !dbg !3355
  br i1 %cmp338, label %land.lhs.true, label %if.end345, !dbg !3356

land.lhs.true:                                    ; preds = %for.end337
  %427 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3357
  %avctx340 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %427, i32 0, i32 0, !dbg !3359
  %428 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx340, align 32, !dbg !3359
  %err_recognition341 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %428, i32 0, i32 135, !dbg !3360
  %429 = load i32, i32* %err_recognition341, align 8, !dbg !3360
  %and342 = and i32 %429, 8, !dbg !3361
  %tobool343 = icmp ne i32 %and342, 0, !dbg !3361
  br i1 %tobool343, label %if.then344, label %if.end345, !dbg !3362

if.then344:                                       ; preds = %land.lhs.true
  store i32 -1094995529, i32* %retval, align 4, !dbg !3363
  br label %return, !dbg !3363

if.end345:                                        ; preds = %land.lhs.true, %for.end337
  store i32 0, i32* %retval, align 4, !dbg !3364
  br label %return, !dbg !3364

return:                                           ; preds = %if.end345, %if.then344, %if.then169, %sw.default63, %if.then58, %if.then24, %sw.default, %if.then8, %if.then2, %if.then
  %430 = load i32, i32* %retval, align 4, !dbg !3365
  ret i32 %430, !dbg !3365
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @parse_decoder_init(%struct.DCALbrDecoder* %s, %struct.GetByteContext* %gb) #0 !dbg !3366 {
entry:
  %b.addr.i.i.i319 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i319, metadata !3369, metadata !2138), !dbg !3371
  %g.addr.i.i320 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i320, metadata !3378, metadata !2138), !dbg !3379
  %retval.i321 = alloca i32, align 4
  %g.addr.i322 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i322, metadata !3380, metadata !2138), !dbg !3381
  %b.addr.i.i.i299 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i299, metadata !3369, metadata !2138), !dbg !3382
  %g.addr.i.i300 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i300, metadata !3378, metadata !2138), !dbg !3386
  %retval.i301 = alloca i32, align 4
  %g.addr.i302 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i302, metadata !3380, metadata !2138), !dbg !3387
  %b.addr.i.i.i280 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i280, metadata !2132, metadata !2138), !dbg !3388
  %g.addr.i.i281 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i281, metadata !2156, metadata !2138), !dbg !3392
  %retval.i282 = alloca i32, align 4
  %g.addr.i283 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i283, metadata !2158, metadata !2138), !dbg !3393
  %b.addr.i.i.i261 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i261, metadata !2132, metadata !2138), !dbg !3394
  %g.addr.i.i262 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i262, metadata !2156, metadata !2138), !dbg !3398
  %retval.i263 = alloca i32, align 4
  %g.addr.i264 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i264, metadata !2158, metadata !2138), !dbg !3399
  %b.addr.i.i.i241 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i241, metadata !3369, metadata !2138), !dbg !3400
  %g.addr.i.i242 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i242, metadata !3378, metadata !2138), !dbg !3404
  %retval.i243 = alloca i32, align 4
  %g.addr.i244 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i244, metadata !3380, metadata !2138), !dbg !3405
  %b.addr.i.i.i223 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i223, metadata !3369, metadata !2138), !dbg !3406
  %g.addr.i.i224 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i224, metadata !3378, metadata !2138), !dbg !3410
  %retval.i225 = alloca i32, align 4
  %g.addr.i226 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i226, metadata !3380, metadata !2138), !dbg !3411
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2132, metadata !2138), !dbg !3412
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2156, metadata !2138), !dbg !3416
  %retval.i = alloca i32, align 4
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2158, metadata !2138), !dbg !3417
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %gb.addr = alloca %struct.GetByteContext*, align 8
  %old_rate = alloca i32, align 4
  %old_band_limit = alloca i32, align 4
  %old_nchannels = alloca i32, align 4
  %version = alloca i32, align 4
  %bit_rate_hi = alloca i32, align 4
  %sr_code = alloca i32, align 4
  %dca = alloca %struct.DCAContext*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !3418, metadata !2138), !dbg !3419
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %gb.addr, metadata !3420, metadata !2138), !dbg !3421
  call void @llvm.dbg.declare(metadata i32* %old_rate, metadata !3422, metadata !2138), !dbg !3423
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3424
  %sample_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 2, !dbg !3425
  %1 = load i32, i32* %sample_rate, align 8, !dbg !3425
  store i32 %1, i32* %old_rate, align 4, !dbg !3423
  call void @llvm.dbg.declare(metadata i32* %old_band_limit, metadata !3426, metadata !2138), !dbg !3427
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3428
  %band_limit = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 10, !dbg !3429
  %3 = load i32, i32* %band_limit, align 8, !dbg !3429
  store i32 %3, i32* %old_band_limit, align 4, !dbg !3427
  call void @llvm.dbg.declare(metadata i32* %old_nchannels, metadata !3430, metadata !2138), !dbg !3431
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3432
  %nchannels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 7, !dbg !3433
  %5 = load i32, i32* %nchannels, align 4, !dbg !3433
  store i32 %5, i32* %old_nchannels, align 4, !dbg !3431
  call void @llvm.dbg.declare(metadata i32* %version, metadata !3434, metadata !2138), !dbg !3435
  call void @llvm.dbg.declare(metadata i32* %bit_rate_hi, metadata !3436, metadata !2138), !dbg !3437
  call void @llvm.dbg.declare(metadata i32* %sr_code, metadata !3438, metadata !2138), !dbg !3439
  %6 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3440
  store %struct.GetByteContext* %6, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3441
  %7 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3442
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %7, i32 0, i32 1, !dbg !3443
  %8 = load i8*, i8** %buffer_end.i, align 8, !dbg !3443
  %9 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3444
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %9, i32 0, i32 0, !dbg !3445
  %10 = load i8*, i8** %buffer.i, align 8, !dbg !3445
  %sub.ptr.lhs.cast.i = ptrtoint i8* %8 to i64, !dbg !3446
  %sub.ptr.rhs.cast.i = ptrtoint i8* %10 to i64, !dbg !3446
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !3446
  %cmp.i = icmp slt i64 %sub.ptr.sub.i, 1, !dbg !3447
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3448

if.then.i:                                        ; preds = %entry
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3449
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 1, !dbg !3450
  %12 = load i8*, i8** %buffer_end1.i, align 8, !dbg !3450
  %13 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3451
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %13, i32 0, i32 0, !dbg !3452
  store i8* %12, i8** %buffer2.i, align 8, !dbg !3453
  store i32 0, i32* %retval.i, align 4, !dbg !3454
  br label %bytestream2_get_byte.exit, !dbg !3454

if.end.i:                                         ; preds = %entry
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3455
  store %struct.GetByteContext* %14, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !3456
  %15 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !3457
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %15, i32 0, i32 0, !dbg !3458
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !3459
  %16 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !3460
  %17 = load i8*, i8** %16, align 8, !dbg !3461
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %17, i64 1, !dbg !3461
  store i8* %add.ptr.i.i.i, i8** %16, align 8, !dbg !3461
  %18 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !3462
  %19 = load i8*, i8** %18, align 8, !dbg !3463
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %19, i64 -1, !dbg !3464
  %20 = load i8, i8* %add.ptr1.i.i.i, align 1, !dbg !3465
  %conv.i.i.i = zext i8 %20 to i32, !dbg !3466
  store i32 %conv.i.i.i, i32* %retval.i, align 4, !dbg !3467
  br label %bytestream2_get_byte.exit, !dbg !3467

bytestream2_get_byte.exit:                        ; preds = %if.then.i, %if.end.i
  %21 = load i32, i32* %retval.i, align 4, !dbg !3468
  store i32 %21, i32* %sr_code, align 4, !dbg !3469
  %22 = load i32, i32* %sr_code, align 4, !dbg !3470
  %conv = zext i32 %22 to i64, !dbg !3470
  %cmp = icmp uge i64 %conv, 16, !dbg !3472
  br i1 %cmp, label %if.then, label %if.end, !dbg !3473

if.then:                                          ; preds = %bytestream2_get_byte.exit
  %23 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3474
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %23, i32 0, i32 0, !dbg !3476
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3476
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !3474
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0)), !dbg !3477
  store i32 -1094995529, i32* %retval, align 4, !dbg !3478
  br label %return, !dbg !3478

if.end:                                           ; preds = %bytestream2_get_byte.exit
  %26 = load i32, i32* %sr_code, align 4, !dbg !3479
  %idxprom = zext i32 %26 to i64, !dbg !3480
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @ff_dca_sampling_freqs, i64 0, i64 %idxprom, !dbg !3480
  %27 = load i32, i32* %arrayidx, align 4, !dbg !3480
  %28 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3481
  %sample_rate2 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %28, i32 0, i32 2, !dbg !3482
  store i32 %27, i32* %sample_rate2, align 8, !dbg !3483
  %29 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3484
  %sample_rate3 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %29, i32 0, i32 2, !dbg !3486
  %30 = load i32, i32* %sample_rate3, align 8, !dbg !3486
  %cmp4 = icmp sgt i32 %30, 48000, !dbg !3487
  br i1 %cmp4, label %if.then6, label %if.end9, !dbg !3488

if.then6:                                         ; preds = %if.end
  %31 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3489
  %avctx7 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %31, i32 0, i32 0, !dbg !3491
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 32, !dbg !3491
  %33 = bitcast %struct.AVCodecContext* %32 to i8*, !dbg !3489
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3492
  %sample_rate8 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 2, !dbg !3493
  %35 = load i32, i32* %sample_rate8, align 8, !dbg !3493
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %33, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i32 0, i32 0), i32 %35), !dbg !3494
  store i32 -1163346256, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

if.end9:                                          ; preds = %if.end
  %36 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3496
  store %struct.GetByteContext* %36, %struct.GetByteContext** %g.addr.i226, align 8, !dbg !3497
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i226, align 8, !dbg !3498
  %buffer_end.i227 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 1, !dbg !3500
  %38 = load i8*, i8** %buffer_end.i227, align 8, !dbg !3500
  %39 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i226, align 8, !dbg !3501
  %buffer.i228 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %39, i32 0, i32 0, !dbg !3502
  %40 = load i8*, i8** %buffer.i228, align 8, !dbg !3502
  %sub.ptr.lhs.cast.i229 = ptrtoint i8* %38 to i64, !dbg !3503
  %sub.ptr.rhs.cast.i230 = ptrtoint i8* %40 to i64, !dbg !3503
  %sub.ptr.sub.i231 = sub i64 %sub.ptr.lhs.cast.i229, %sub.ptr.rhs.cast.i230, !dbg !3503
  %cmp.i232 = icmp slt i64 %sub.ptr.sub.i231, 2, !dbg !3504
  br i1 %cmp.i232, label %if.then.i235, label %if.end.i240, !dbg !3505

if.then.i235:                                     ; preds = %if.end9
  %41 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i226, align 8, !dbg !3506
  %buffer_end1.i233 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %41, i32 0, i32 1, !dbg !3509
  %42 = load i8*, i8** %buffer_end1.i233, align 8, !dbg !3509
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i226, align 8, !dbg !3510
  %buffer2.i234 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 0, !dbg !3511
  store i8* %42, i8** %buffer2.i234, align 8, !dbg !3512
  store i32 0, i32* %retval.i225, align 4, !dbg !3513
  br label %bytestream2_get_le16.exit, !dbg !3513

if.end.i240:                                      ; preds = %if.end9
  %44 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i226, align 8, !dbg !3514
  store %struct.GetByteContext* %44, %struct.GetByteContext** %g.addr.i.i224, align 8, !dbg !3515
  %45 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i224, align 8, !dbg !3516
  %buffer.i.i236 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %45, i32 0, i32 0, !dbg !3517
  store i8** %buffer.i.i236, i8*** %b.addr.i.i.i223, align 8, !dbg !3518
  %46 = load i8**, i8*** %b.addr.i.i.i223, align 8, !dbg !3519
  %47 = load i8*, i8** %46, align 8, !dbg !3520
  %add.ptr.i.i.i237 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !3520
  store i8* %add.ptr.i.i.i237, i8** %46, align 8, !dbg !3520
  %48 = load i8**, i8*** %b.addr.i.i.i223, align 8, !dbg !3521
  %49 = load i8*, i8** %48, align 8, !dbg !3522
  %add.ptr1.i.i.i238 = getelementptr inbounds i8, i8* %49, i64 -2, !dbg !3523
  %50 = bitcast i8* %add.ptr1.i.i.i238 to %union.unaligned_16*, !dbg !3524
  %l.i.i.i = bitcast %union.unaligned_16* %50 to i16*, !dbg !3524
  %51 = load i16, i16* %l.i.i.i, align 1, !dbg !3524
  %conv.i.i.i239 = zext i16 %51 to i32, !dbg !3525
  store i32 %conv.i.i.i239, i32* %retval.i225, align 4, !dbg !3526
  br label %bytestream2_get_le16.exit, !dbg !3526

bytestream2_get_le16.exit:                        ; preds = %if.then.i235, %if.end.i240
  %52 = load i32, i32* %retval.i225, align 4, !dbg !3527
  %53 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3529
  %ch_mask = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %53, i32 0, i32 3, !dbg !3530
  store i32 %52, i32* %ch_mask, align 4, !dbg !3531
  %54 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3532
  %ch_mask11 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %54, i32 0, i32 3, !dbg !3534
  %55 = load i32, i32* %ch_mask11, align 4, !dbg !3534
  %and = and i32 %55, 7, !dbg !3535
  %tobool = icmp ne i32 %and, 0, !dbg !3535
  br i1 %tobool, label %if.end15, label %if.then12, !dbg !3536

if.then12:                                        ; preds = %bytestream2_get_le16.exit
  %56 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3537
  %avctx13 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %56, i32 0, i32 0, !dbg !3539
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx13, align 32, !dbg !3539
  %58 = bitcast %struct.AVCodecContext* %57 to i8*, !dbg !3537
  %59 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3540
  %ch_mask14 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %59, i32 0, i32 3, !dbg !3541
  %60 = load i32, i32* %ch_mask14, align 4, !dbg !3541
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %58, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0), i32 %60), !dbg !3542
  store i32 -1163346256, i32* %retval, align 4, !dbg !3543
  br label %return, !dbg !3543

if.end15:                                         ; preds = %bytestream2_get_le16.exit
  %61 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3544
  %ch_mask16 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %61, i32 0, i32 3, !dbg !3546
  %62 = load i32, i32* %ch_mask16, align 4, !dbg !3546
  %and17 = and i32 %62, 65520, !dbg !3547
  %tobool18 = icmp ne i32 %and17, 0, !dbg !3547
  br i1 %tobool18, label %land.lhs.true, label %if.end25, !dbg !3548

land.lhs.true:                                    ; preds = %if.end15
  %63 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3549
  %warned = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %63, i32 0, i32 20, !dbg !3551
  %64 = load i32, i32* %warned, align 16, !dbg !3551
  %and19 = and i32 %64, 1, !dbg !3552
  %tobool20 = icmp ne i32 %and19, 0, !dbg !3552
  br i1 %tobool20, label %if.end25, label %if.then21, !dbg !3553

if.then21:                                        ; preds = %land.lhs.true
  %65 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3554
  %avctx22 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %65, i32 0, i32 0, !dbg !3556
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx22, align 32, !dbg !3556
  %67 = bitcast %struct.AVCodecContext* %66 to i8*, !dbg !3554
  %68 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3557
  %ch_mask23 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %68, i32 0, i32 3, !dbg !3558
  %69 = load i32, i32* %ch_mask23, align 4, !dbg !3558
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %67, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0), i32 %69), !dbg !3559
  %70 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3560
  %warned24 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %70, i32 0, i32 20, !dbg !3561
  %71 = load i32, i32* %warned24, align 16, !dbg !3562
  %or = or i32 %71, 1, !dbg !3562
  store i32 %or, i32* %warned24, align 16, !dbg !3562
  br label %if.end25, !dbg !3563

if.end25:                                         ; preds = %if.then21, %land.lhs.true, %if.end15
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3564
  store %struct.GetByteContext* %72, %struct.GetByteContext** %g.addr.i244, align 8, !dbg !3565
  %73 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i244, align 8, !dbg !3566
  %buffer_end.i245 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %73, i32 0, i32 1, !dbg !3567
  %74 = load i8*, i8** %buffer_end.i245, align 8, !dbg !3567
  %75 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i244, align 8, !dbg !3568
  %buffer.i246 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %75, i32 0, i32 0, !dbg !3569
  %76 = load i8*, i8** %buffer.i246, align 8, !dbg !3569
  %sub.ptr.lhs.cast.i247 = ptrtoint i8* %74 to i64, !dbg !3570
  %sub.ptr.rhs.cast.i248 = ptrtoint i8* %76 to i64, !dbg !3570
  %sub.ptr.sub.i249 = sub i64 %sub.ptr.lhs.cast.i247, %sub.ptr.rhs.cast.i248, !dbg !3570
  %cmp.i250 = icmp slt i64 %sub.ptr.sub.i249, 2, !dbg !3571
  br i1 %cmp.i250, label %if.then.i253, label %if.end.i259, !dbg !3572

if.then.i253:                                     ; preds = %if.end25
  %77 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i244, align 8, !dbg !3573
  %buffer_end1.i251 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %77, i32 0, i32 1, !dbg !3574
  %78 = load i8*, i8** %buffer_end1.i251, align 8, !dbg !3574
  %79 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i244, align 8, !dbg !3575
  %buffer2.i252 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %79, i32 0, i32 0, !dbg !3576
  store i8* %78, i8** %buffer2.i252, align 8, !dbg !3577
  store i32 0, i32* %retval.i243, align 4, !dbg !3578
  br label %bytestream2_get_le16.exit260, !dbg !3578

if.end.i259:                                      ; preds = %if.end25
  %80 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i244, align 8, !dbg !3579
  store %struct.GetByteContext* %80, %struct.GetByteContext** %g.addr.i.i242, align 8, !dbg !3580
  %81 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i242, align 8, !dbg !3581
  %buffer.i.i254 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %81, i32 0, i32 0, !dbg !3582
  store i8** %buffer.i.i254, i8*** %b.addr.i.i.i241, align 8, !dbg !3583
  %82 = load i8**, i8*** %b.addr.i.i.i241, align 8, !dbg !3584
  %83 = load i8*, i8** %82, align 8, !dbg !3585
  %add.ptr.i.i.i255 = getelementptr inbounds i8, i8* %83, i64 2, !dbg !3585
  store i8* %add.ptr.i.i.i255, i8** %82, align 8, !dbg !3585
  %84 = load i8**, i8*** %b.addr.i.i.i241, align 8, !dbg !3586
  %85 = load i8*, i8** %84, align 8, !dbg !3587
  %add.ptr1.i.i.i256 = getelementptr inbounds i8, i8* %85, i64 -2, !dbg !3588
  %86 = bitcast i8* %add.ptr1.i.i.i256 to %union.unaligned_16*, !dbg !3589
  %l.i.i.i257 = bitcast %union.unaligned_16* %86 to i16*, !dbg !3589
  %87 = load i16, i16* %l.i.i.i257, align 1, !dbg !3589
  %conv.i.i.i258 = zext i16 %87 to i32, !dbg !3590
  store i32 %conv.i.i.i258, i32* %retval.i243, align 4, !dbg !3591
  br label %bytestream2_get_le16.exit260, !dbg !3591

bytestream2_get_le16.exit260:                     ; preds = %if.then.i253, %if.end.i259
  %88 = load i32, i32* %retval.i243, align 4, !dbg !3592
  store i32 %88, i32* %version, align 4, !dbg !3593
  %89 = load i32, i32* %version, align 4, !dbg !3594
  %and27 = and i32 %89, 65280, !dbg !3596
  %cmp28 = icmp ne i32 %and27, 2048, !dbg !3597
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !3598

if.then30:                                        ; preds = %bytestream2_get_le16.exit260
  %90 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3599
  %avctx31 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %90, i32 0, i32 0, !dbg !3601
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 32, !dbg !3601
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !3599
  %93 = load i32, i32* %version, align 4, !dbg !3602
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %92, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0), i32 %93), !dbg !3603
  store i32 -1163346256, i32* %retval, align 4, !dbg !3604
  br label %return, !dbg !3604

if.end32:                                         ; preds = %bytestream2_get_le16.exit260
  %94 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3605
  store %struct.GetByteContext* %94, %struct.GetByteContext** %g.addr.i264, align 8, !dbg !3606
  %95 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i264, align 8, !dbg !3607
  %buffer_end.i265 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %95, i32 0, i32 1, !dbg !3608
  %96 = load i8*, i8** %buffer_end.i265, align 8, !dbg !3608
  %97 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i264, align 8, !dbg !3609
  %buffer.i266 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %97, i32 0, i32 0, !dbg !3610
  %98 = load i8*, i8** %buffer.i266, align 8, !dbg !3610
  %sub.ptr.lhs.cast.i267 = ptrtoint i8* %96 to i64, !dbg !3611
  %sub.ptr.rhs.cast.i268 = ptrtoint i8* %98 to i64, !dbg !3611
  %sub.ptr.sub.i269 = sub i64 %sub.ptr.lhs.cast.i267, %sub.ptr.rhs.cast.i268, !dbg !3611
  %cmp.i270 = icmp slt i64 %sub.ptr.sub.i269, 1, !dbg !3612
  br i1 %cmp.i270, label %if.then.i273, label %if.end.i278, !dbg !3613

if.then.i273:                                     ; preds = %if.end32
  %99 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i264, align 8, !dbg !3614
  %buffer_end1.i271 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %99, i32 0, i32 1, !dbg !3615
  %100 = load i8*, i8** %buffer_end1.i271, align 8, !dbg !3615
  %101 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i264, align 8, !dbg !3616
  %buffer2.i272 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %101, i32 0, i32 0, !dbg !3617
  store i8* %100, i8** %buffer2.i272, align 8, !dbg !3618
  store i32 0, i32* %retval.i263, align 4, !dbg !3619
  br label %bytestream2_get_byte.exit279, !dbg !3619

if.end.i278:                                      ; preds = %if.end32
  %102 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i264, align 8, !dbg !3620
  store %struct.GetByteContext* %102, %struct.GetByteContext** %g.addr.i.i262, align 8, !dbg !3621
  %103 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i262, align 8, !dbg !3622
  %buffer.i.i274 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %103, i32 0, i32 0, !dbg !3623
  store i8** %buffer.i.i274, i8*** %b.addr.i.i.i261, align 8, !dbg !3624
  %104 = load i8**, i8*** %b.addr.i.i.i261, align 8, !dbg !3625
  %105 = load i8*, i8** %104, align 8, !dbg !3626
  %add.ptr.i.i.i275 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !3626
  store i8* %add.ptr.i.i.i275, i8** %104, align 8, !dbg !3626
  %106 = load i8**, i8*** %b.addr.i.i.i261, align 8, !dbg !3627
  %107 = load i8*, i8** %106, align 8, !dbg !3628
  %add.ptr1.i.i.i276 = getelementptr inbounds i8, i8* %107, i64 -1, !dbg !3629
  %108 = load i8, i8* %add.ptr1.i.i.i276, align 1, !dbg !3630
  %conv.i.i.i277 = zext i8 %108 to i32, !dbg !3631
  store i32 %conv.i.i.i277, i32* %retval.i263, align 4, !dbg !3632
  br label %bytestream2_get_byte.exit279, !dbg !3632

bytestream2_get_byte.exit279:                     ; preds = %if.then.i273, %if.end.i278
  %109 = load i32, i32* %retval.i263, align 4, !dbg !3633
  %110 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3634
  %flags = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %110, i32 0, i32 4, !dbg !3635
  store i32 %109, i32* %flags, align 16, !dbg !3636
  %111 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3637
  %flags34 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %111, i32 0, i32 4, !dbg !3639
  %112 = load i32, i32* %flags34, align 16, !dbg !3639
  %and35 = and i32 %112, 64, !dbg !3640
  %tobool36 = icmp ne i32 %and35, 0, !dbg !3640
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !3641

if.then37:                                        ; preds = %bytestream2_get_byte.exit279
  %113 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3642
  %avctx38 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %113, i32 0, i32 0, !dbg !3644
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx38, align 32, !dbg !3644
  %115 = bitcast %struct.AVCodecContext* %114 to i8*, !dbg !3642
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i32 0, i32 0)), !dbg !3645
  store i32 -1163346256, i32* %retval, align 4, !dbg !3646
  br label %return, !dbg !3646

if.end39:                                         ; preds = %bytestream2_get_byte.exit279
  %116 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3647
  %flags40 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %116, i32 0, i32 4, !dbg !3649
  %117 = load i32, i32* %flags40, align 16, !dbg !3649
  %and41 = and i32 %117, 2, !dbg !3650
  %tobool42 = icmp ne i32 %and41, 0, !dbg !3650
  br i1 %tobool42, label %land.lhs.true43, label %if.end59, !dbg !3651

land.lhs.true43:                                  ; preds = %if.end39
  %118 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3652
  %sample_rate44 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %118, i32 0, i32 2, !dbg !3654
  %119 = load i32, i32* %sample_rate44, align 8, !dbg !3654
  %cmp45 = icmp ne i32 %119, 48000, !dbg !3655
  br i1 %cmp45, label %if.then47, label %if.end59, !dbg !3656

if.then47:                                        ; preds = %land.lhs.true43
  %120 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3657
  %warned48 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %120, i32 0, i32 20, !dbg !3660
  %121 = load i32, i32* %warned48, align 16, !dbg !3660
  %and49 = and i32 %121, 2, !dbg !3661
  %tobool50 = icmp ne i32 %and49, 0, !dbg !3661
  br i1 %tobool50, label %if.end56, label %if.then51, !dbg !3662

if.then51:                                        ; preds = %if.then47
  %122 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3663
  %avctx52 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %122, i32 0, i32 0, !dbg !3665
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx52, align 32, !dbg !3665
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !3663
  %125 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3666
  %sample_rate53 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %125, i32 0, i32 2, !dbg !3667
  %126 = load i32, i32* %sample_rate53, align 8, !dbg !3667
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %124, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 %126), !dbg !3668
  %127 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3669
  %warned54 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %127, i32 0, i32 20, !dbg !3670
  %128 = load i32, i32* %warned54, align 16, !dbg !3671
  %or55 = or i32 %128, 2, !dbg !3671
  store i32 %or55, i32* %warned54, align 16, !dbg !3671
  br label %if.end56, !dbg !3672

if.end56:                                         ; preds = %if.then51, %if.then47
  %129 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3673
  %flags57 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %129, i32 0, i32 4, !dbg !3674
  %130 = load i32, i32* %flags57, align 16, !dbg !3675
  %and58 = and i32 %130, -3, !dbg !3675
  store i32 %and58, i32* %flags57, align 16, !dbg !3675
  br label %if.end59, !dbg !3676

if.end59:                                         ; preds = %if.end56, %land.lhs.true43, %if.end39
  %131 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3677
  store %struct.GetByteContext* %131, %struct.GetByteContext** %g.addr.i283, align 8, !dbg !3678
  %132 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i283, align 8, !dbg !3679
  %buffer_end.i284 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %132, i32 0, i32 1, !dbg !3680
  %133 = load i8*, i8** %buffer_end.i284, align 8, !dbg !3680
  %134 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i283, align 8, !dbg !3681
  %buffer.i285 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %134, i32 0, i32 0, !dbg !3682
  %135 = load i8*, i8** %buffer.i285, align 8, !dbg !3682
  %sub.ptr.lhs.cast.i286 = ptrtoint i8* %133 to i64, !dbg !3683
  %sub.ptr.rhs.cast.i287 = ptrtoint i8* %135 to i64, !dbg !3683
  %sub.ptr.sub.i288 = sub i64 %sub.ptr.lhs.cast.i286, %sub.ptr.rhs.cast.i287, !dbg !3683
  %cmp.i289 = icmp slt i64 %sub.ptr.sub.i288, 1, !dbg !3684
  br i1 %cmp.i289, label %if.then.i292, label %if.end.i297, !dbg !3685

if.then.i292:                                     ; preds = %if.end59
  %136 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i283, align 8, !dbg !3686
  %buffer_end1.i290 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %136, i32 0, i32 1, !dbg !3687
  %137 = load i8*, i8** %buffer_end1.i290, align 8, !dbg !3687
  %138 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i283, align 8, !dbg !3688
  %buffer2.i291 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %138, i32 0, i32 0, !dbg !3689
  store i8* %137, i8** %buffer2.i291, align 8, !dbg !3690
  store i32 0, i32* %retval.i282, align 4, !dbg !3691
  br label %bytestream2_get_byte.exit298, !dbg !3691

if.end.i297:                                      ; preds = %if.end59
  %139 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i283, align 8, !dbg !3692
  store %struct.GetByteContext* %139, %struct.GetByteContext** %g.addr.i.i281, align 8, !dbg !3693
  %140 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i281, align 8, !dbg !3694
  %buffer.i.i293 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %140, i32 0, i32 0, !dbg !3695
  store i8** %buffer.i.i293, i8*** %b.addr.i.i.i280, align 8, !dbg !3696
  %141 = load i8**, i8*** %b.addr.i.i.i280, align 8, !dbg !3697
  %142 = load i8*, i8** %141, align 8, !dbg !3698
  %add.ptr.i.i.i294 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !3698
  store i8* %add.ptr.i.i.i294, i8** %141, align 8, !dbg !3698
  %143 = load i8**, i8*** %b.addr.i.i.i280, align 8, !dbg !3699
  %144 = load i8*, i8** %143, align 8, !dbg !3700
  %add.ptr1.i.i.i295 = getelementptr inbounds i8, i8* %144, i64 -1, !dbg !3701
  %145 = load i8, i8* %add.ptr1.i.i.i295, align 1, !dbg !3702
  %conv.i.i.i296 = zext i8 %145 to i32, !dbg !3703
  store i32 %conv.i.i.i296, i32* %retval.i282, align 4, !dbg !3704
  br label %bytestream2_get_byte.exit298, !dbg !3704

bytestream2_get_byte.exit298:                     ; preds = %if.then.i292, %if.end.i297
  %146 = load i32, i32* %retval.i282, align 4, !dbg !3705
  store i32 %146, i32* %bit_rate_hi, align 4, !dbg !3706
  %147 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3707
  store %struct.GetByteContext* %147, %struct.GetByteContext** %g.addr.i322, align 8, !dbg !3708
  %148 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i322, align 8, !dbg !3709
  %buffer_end.i323 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %148, i32 0, i32 1, !dbg !3710
  %149 = load i8*, i8** %buffer_end.i323, align 8, !dbg !3710
  %150 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i322, align 8, !dbg !3711
  %buffer.i324 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %150, i32 0, i32 0, !dbg !3712
  %151 = load i8*, i8** %buffer.i324, align 8, !dbg !3712
  %sub.ptr.lhs.cast.i325 = ptrtoint i8* %149 to i64, !dbg !3713
  %sub.ptr.rhs.cast.i326 = ptrtoint i8* %151 to i64, !dbg !3713
  %sub.ptr.sub.i327 = sub i64 %sub.ptr.lhs.cast.i325, %sub.ptr.rhs.cast.i326, !dbg !3713
  %cmp.i328 = icmp slt i64 %sub.ptr.sub.i327, 2, !dbg !3714
  br i1 %cmp.i328, label %if.then.i331, label %if.end.i337, !dbg !3715

if.then.i331:                                     ; preds = %bytestream2_get_byte.exit298
  %152 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i322, align 8, !dbg !3716
  %buffer_end1.i329 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %152, i32 0, i32 1, !dbg !3717
  %153 = load i8*, i8** %buffer_end1.i329, align 8, !dbg !3717
  %154 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i322, align 8, !dbg !3718
  %buffer2.i330 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %154, i32 0, i32 0, !dbg !3719
  store i8* %153, i8** %buffer2.i330, align 8, !dbg !3720
  store i32 0, i32* %retval.i321, align 4, !dbg !3721
  br label %bytestream2_get_le16.exit338, !dbg !3721

if.end.i337:                                      ; preds = %bytestream2_get_byte.exit298
  %155 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i322, align 8, !dbg !3722
  store %struct.GetByteContext* %155, %struct.GetByteContext** %g.addr.i.i320, align 8, !dbg !3723
  %156 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i320, align 8, !dbg !3724
  %buffer.i.i332 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %156, i32 0, i32 0, !dbg !3725
  store i8** %buffer.i.i332, i8*** %b.addr.i.i.i319, align 8, !dbg !3726
  %157 = load i8**, i8*** %b.addr.i.i.i319, align 8, !dbg !3727
  %158 = load i8*, i8** %157, align 8, !dbg !3728
  %add.ptr.i.i.i333 = getelementptr inbounds i8, i8* %158, i64 2, !dbg !3728
  store i8* %add.ptr.i.i.i333, i8** %157, align 8, !dbg !3728
  %159 = load i8**, i8*** %b.addr.i.i.i319, align 8, !dbg !3729
  %160 = load i8*, i8** %159, align 8, !dbg !3730
  %add.ptr1.i.i.i334 = getelementptr inbounds i8, i8* %160, i64 -2, !dbg !3731
  %161 = bitcast i8* %add.ptr1.i.i.i334 to %union.unaligned_16*, !dbg !3732
  %l.i.i.i335 = bitcast %union.unaligned_16* %161 to i16*, !dbg !3732
  %162 = load i16, i16* %l.i.i.i335, align 1, !dbg !3732
  %conv.i.i.i336 = zext i16 %162 to i32, !dbg !3733
  store i32 %conv.i.i.i336, i32* %retval.i321, align 4, !dbg !3734
  br label %bytestream2_get_le16.exit338, !dbg !3734

bytestream2_get_le16.exit338:                     ; preds = %if.then.i331, %if.end.i337
  %163 = load i32, i32* %retval.i321, align 4, !dbg !3735
  %164 = load i32, i32* %bit_rate_hi, align 4, !dbg !3736
  %and62 = and i32 %164, 15, !dbg !3737
  %shl = shl i32 %and62, 16, !dbg !3738
  %or63 = or i32 %163, %shl, !dbg !3739
  %165 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3740
  %bit_rate_orig = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %165, i32 0, i32 5, !dbg !3741
  store i32 %or63, i32* %bit_rate_orig, align 4, !dbg !3742
  %166 = load %struct.GetByteContext*, %struct.GetByteContext** %gb.addr, align 8, !dbg !3743
  store %struct.GetByteContext* %166, %struct.GetByteContext** %g.addr.i302, align 8, !dbg !3744
  %167 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i302, align 8, !dbg !3745
  %buffer_end.i303 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %167, i32 0, i32 1, !dbg !3746
  %168 = load i8*, i8** %buffer_end.i303, align 8, !dbg !3746
  %169 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i302, align 8, !dbg !3747
  %buffer.i304 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %169, i32 0, i32 0, !dbg !3748
  %170 = load i8*, i8** %buffer.i304, align 8, !dbg !3748
  %sub.ptr.lhs.cast.i305 = ptrtoint i8* %168 to i64, !dbg !3749
  %sub.ptr.rhs.cast.i306 = ptrtoint i8* %170 to i64, !dbg !3749
  %sub.ptr.sub.i307 = sub i64 %sub.ptr.lhs.cast.i305, %sub.ptr.rhs.cast.i306, !dbg !3749
  %cmp.i308 = icmp slt i64 %sub.ptr.sub.i307, 2, !dbg !3750
  br i1 %cmp.i308, label %if.then.i311, label %if.end.i317, !dbg !3751

if.then.i311:                                     ; preds = %bytestream2_get_le16.exit338
  %171 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i302, align 8, !dbg !3752
  %buffer_end1.i309 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %171, i32 0, i32 1, !dbg !3753
  %172 = load i8*, i8** %buffer_end1.i309, align 8, !dbg !3753
  %173 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i302, align 8, !dbg !3754
  %buffer2.i310 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %173, i32 0, i32 0, !dbg !3755
  store i8* %172, i8** %buffer2.i310, align 8, !dbg !3756
  store i32 0, i32* %retval.i301, align 4, !dbg !3757
  br label %bytestream2_get_le16.exit318, !dbg !3757

if.end.i317:                                      ; preds = %bytestream2_get_le16.exit338
  %174 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i302, align 8, !dbg !3758
  store %struct.GetByteContext* %174, %struct.GetByteContext** %g.addr.i.i300, align 8, !dbg !3759
  %175 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i300, align 8, !dbg !3760
  %buffer.i.i312 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %175, i32 0, i32 0, !dbg !3761
  store i8** %buffer.i.i312, i8*** %b.addr.i.i.i299, align 8, !dbg !3762
  %176 = load i8**, i8*** %b.addr.i.i.i299, align 8, !dbg !3763
  %177 = load i8*, i8** %176, align 8, !dbg !3764
  %add.ptr.i.i.i313 = getelementptr inbounds i8, i8* %177, i64 2, !dbg !3764
  store i8* %add.ptr.i.i.i313, i8** %176, align 8, !dbg !3764
  %178 = load i8**, i8*** %b.addr.i.i.i299, align 8, !dbg !3765
  %179 = load i8*, i8** %178, align 8, !dbg !3766
  %add.ptr1.i.i.i314 = getelementptr inbounds i8, i8* %179, i64 -2, !dbg !3767
  %180 = bitcast i8* %add.ptr1.i.i.i314 to %union.unaligned_16*, !dbg !3768
  %l.i.i.i315 = bitcast %union.unaligned_16* %180 to i16*, !dbg !3768
  %181 = load i16, i16* %l.i.i.i315, align 1, !dbg !3768
  %conv.i.i.i316 = zext i16 %181 to i32, !dbg !3769
  store i32 %conv.i.i.i316, i32* %retval.i301, align 4, !dbg !3770
  br label %bytestream2_get_le16.exit318, !dbg !3770

bytestream2_get_le16.exit318:                     ; preds = %if.then.i311, %if.end.i317
  %182 = load i32, i32* %retval.i301, align 4, !dbg !3771
  %183 = load i32, i32* %bit_rate_hi, align 4, !dbg !3772
  %and65 = and i32 %183, 240, !dbg !3773
  %shl66 = shl i32 %and65, 12, !dbg !3774
  %or67 = or i32 %182, %shl66, !dbg !3775
  %184 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3776
  %bit_rate_scaled = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %184, i32 0, i32 6, !dbg !3777
  store i32 %or67, i32* %bit_rate_scaled, align 8, !dbg !3778
  %185 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3779
  %ch_mask68 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %185, i32 0, i32 3, !dbg !3780
  %186 = load i32, i32* %ch_mask68, align 4, !dbg !3780
  %and69 = and i32 %186, -9, !dbg !3781
  %call70 = call i32 @ff_dca_count_chs_for_mask(i32 %and69), !dbg !3782
  %187 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3783
  %nchannels_total = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %187, i32 0, i32 8, !dbg !3784
  store i32 %call70, i32* %nchannels_total, align 32, !dbg !3785
  %188 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3786
  %nchannels_total71 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %188, i32 0, i32 8, !dbg !3787
  %189 = load i32, i32* %nchannels_total71, align 32, !dbg !3787
  %cmp72 = icmp sgt i32 %189, 6, !dbg !3788
  br i1 %cmp72, label %cond.true, label %cond.false, !dbg !3789

cond.true:                                        ; preds = %bytestream2_get_le16.exit318
  br label %cond.end, !dbg !3790

cond.false:                                       ; preds = %bytestream2_get_le16.exit318
  %190 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3792
  %nchannels_total74 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %190, i32 0, i32 8, !dbg !3794
  %191 = load i32, i32* %nchannels_total74, align 32, !dbg !3794
  br label %cond.end, !dbg !3795

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 6, %cond.true ], [ %191, %cond.false ], !dbg !3796
  %192 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3798
  %nchannels75 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %192, i32 0, i32 7, !dbg !3799
  store i32 %cond, i32* %nchannels75, align 4, !dbg !3800
  %193 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3801
  %flags76 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %193, i32 0, i32 4, !dbg !3802
  %194 = load i32, i32* %flags76, align 16, !dbg !3802
  %and77 = and i32 %194, 28, !dbg !3803
  switch i32 %and77, label %sw.default [
    i32 20, label %sw.bb
    i32 8, label %sw.bb79
    i32 16, label %sw.bb81
  ], !dbg !3804

sw.bb:                                            ; preds = %cond.end
  %195 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3805
  %band_limit78 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %195, i32 0, i32 10, !dbg !3807
  store i32 0, i32* %band_limit78, align 8, !dbg !3808
  br label %sw.epilog, !dbg !3809

sw.bb79:                                          ; preds = %cond.end
  %196 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3810
  %band_limit80 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %196, i32 0, i32 10, !dbg !3811
  store i32 1, i32* %band_limit80, align 8, !dbg !3812
  br label %sw.epilog, !dbg !3813

sw.bb81:                                          ; preds = %cond.end
  %197 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3814
  %band_limit82 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %197, i32 0, i32 10, !dbg !3815
  store i32 2, i32* %band_limit82, align 8, !dbg !3816
  br label %sw.epilog, !dbg !3817

sw.default:                                       ; preds = %cond.end
  %198 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3818
  %avctx83 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %198, i32 0, i32 0, !dbg !3819
  %199 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx83, align 32, !dbg !3819
  %200 = bitcast %struct.AVCodecContext* %199 to i8*, !dbg !3818
  %201 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3820
  %flags84 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %201, i32 0, i32 4, !dbg !3821
  %202 = load i32, i32* %flags84, align 16, !dbg !3821
  %and85 = and i32 %202, 28, !dbg !3822
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %200, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i32 %and85), !dbg !3823
  store i32 -1163346256, i32* %retval, align 4, !dbg !3824
  br label %return, !dbg !3824

sw.epilog:                                        ; preds = %sw.bb81, %sw.bb79, %sw.bb
  %203 = load i32, i32* %sr_code, align 4, !dbg !3825
  %idxprom86 = zext i32 %203 to i64, !dbg !3826
  %arrayidx87 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_dca_freq_ranges, i64 0, i64 %idxprom86, !dbg !3826
  %204 = load i8, i8* %arrayidx87, align 1, !dbg !3826
  %conv88 = zext i8 %204 to i32, !dbg !3826
  %205 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3827
  %freq_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %205, i32 0, i32 9, !dbg !3828
  store i32 %conv88, i32* %freq_range, align 4, !dbg !3829
  %206 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3830
  %bit_rate_orig89 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %206, i32 0, i32 5, !dbg !3832
  %207 = load i32, i32* %bit_rate_orig89, align 4, !dbg !3832
  %208 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3833
  %nchannels_total90 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %208, i32 0, i32 8, !dbg !3834
  %209 = load i32, i32* %nchannels_total90, align 32, !dbg !3834
  %add = add nsw i32 %209, 2, !dbg !3835
  %mul = mul nsw i32 44000, %add, !dbg !3836
  %cmp91 = icmp sge i32 %207, %mul, !dbg !3837
  br i1 %cmp91, label %if.then93, label %if.else, !dbg !3838

if.then93:                                        ; preds = %sw.epilog
  %210 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3839
  %res_profile = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %210, i32 0, i32 13, !dbg !3840
  store i32 2, i32* %res_profile, align 4, !dbg !3841
  br label %if.end105, !dbg !3839

if.else:                                          ; preds = %sw.epilog
  %211 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3842
  %bit_rate_orig94 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %211, i32 0, i32 5, !dbg !3844
  %212 = load i32, i32* %bit_rate_orig94, align 4, !dbg !3844
  %213 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3845
  %nchannels_total95 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %213, i32 0, i32 8, !dbg !3846
  %214 = load i32, i32* %nchannels_total95, align 32, !dbg !3846
  %add96 = add nsw i32 %214, 2, !dbg !3847
  %mul97 = mul nsw i32 25000, %add96, !dbg !3848
  %cmp98 = icmp sge i32 %212, %mul97, !dbg !3849
  br i1 %cmp98, label %if.then100, label %if.else102, !dbg !3850

if.then100:                                       ; preds = %if.else
  %215 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3851
  %res_profile101 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %215, i32 0, i32 13, !dbg !3852
  store i32 1, i32* %res_profile101, align 4, !dbg !3853
  br label %if.end104, !dbg !3851

if.else102:                                       ; preds = %if.else
  %216 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3854
  %res_profile103 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %216, i32 0, i32 13, !dbg !3855
  store i32 0, i32* %res_profile103, align 4, !dbg !3856
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then100
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then93
  %217 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3857
  %sample_rate106 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %217, i32 0, i32 2, !dbg !3858
  %218 = load i32, i32* %sample_rate106, align 8, !dbg !3858
  %219 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3859
  %band_limit107 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %219, i32 0, i32 10, !dbg !3860
  %220 = load i32, i32* %band_limit107, align 8, !dbg !3860
  %shr = ashr i32 %218, %220, !dbg !3861
  %221 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3862
  %limited_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %221, i32 0, i32 11, !dbg !3863
  store i32 %shr, i32* %limited_rate, align 4, !dbg !3864
  %222 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3865
  %freq_range108 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %222, i32 0, i32 9, !dbg !3866
  %223 = load i32, i32* %freq_range108, align 4, !dbg !3866
  %224 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3867
  %band_limit109 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %224, i32 0, i32 10, !dbg !3868
  %225 = load i32, i32* %band_limit109, align 8, !dbg !3868
  %sub = sub nsw i32 %223, %225, !dbg !3869
  %226 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3870
  %limited_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %226, i32 0, i32 12, !dbg !3871
  store i32 %sub, i32* %limited_range, align 16, !dbg !3872
  %227 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3873
  %limited_range110 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %227, i32 0, i32 12, !dbg !3875
  %228 = load i32, i32* %limited_range110, align 16, !dbg !3875
  %cmp111 = icmp slt i32 %228, 0, !dbg !3876
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !3877

if.then113:                                       ; preds = %if.end105
  %229 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3878
  %avctx114 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %229, i32 0, i32 0, !dbg !3880
  %230 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx114, align 32, !dbg !3880
  %231 = bitcast %struct.AVCodecContext* %230 to i8*, !dbg !3878
  call void (i8*, i32, i8*, ...) @av_log(i8* %231, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i32 0, i32 0)), !dbg !3881
  store i32 -1094995529, i32* %retval, align 4, !dbg !3882
  br label %return, !dbg !3882

if.end115:                                        ; preds = %if.end105
  %232 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3883
  %limited_range116 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %232, i32 0, i32 12, !dbg !3884
  %233 = load i32, i32* %limited_range116, align 16, !dbg !3884
  %shl117 = shl i32 8, %233, !dbg !3885
  %234 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3886
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %234, i32 0, i32 14, !dbg !3887
  store i32 %shl117, i32* %nsubbands, align 8, !dbg !3888
  %235 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3889
  %nsubbands118 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %235, i32 0, i32 14, !dbg !3890
  %236 = load i32, i32* %nsubbands118, align 8, !dbg !3890
  %237 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3891
  %res_profile119 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %237, i32 0, i32 13, !dbg !3892
  %238 = load i32, i32* %res_profile119, align 4, !dbg !3892
  %idxprom120 = sext i32 %238 to i64, !dbg !3893
  %arrayidx121 = getelementptr inbounds [3 x i16], [3 x i16]* @ff_dca_avg_g3_freqs, i64 0, i64 %idxprom120, !dbg !3893
  %239 = load i16, i16* %arrayidx121, align 2, !dbg !3893
  %conv122 = zext i16 %239 to i32, !dbg !3893
  %mul123 = mul nsw i32 %236, %conv122, !dbg !3894
  %240 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3895
  %limited_rate124 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %240, i32 0, i32 11, !dbg !3896
  %241 = load i32, i32* %limited_rate124, align 4, !dbg !3896
  %div = sdiv i32 %241, 2, !dbg !3897
  %div125 = sdiv i32 %mul123, %div, !dbg !3898
  %242 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3899
  %g3_avg_only_start_sb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %242, i32 0, i32 15, !dbg !3900
  store i32 %div125, i32* %g3_avg_only_start_sb, align 4, !dbg !3901
  %243 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3902
  %g3_avg_only_start_sb126 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %243, i32 0, i32 15, !dbg !3904
  %244 = load i32, i32* %g3_avg_only_start_sb126, align 4, !dbg !3904
  %245 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3905
  %nsubbands127 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %245, i32 0, i32 14, !dbg !3906
  %246 = load i32, i32* %nsubbands127, align 8, !dbg !3906
  %cmp128 = icmp sgt i32 %244, %246, !dbg !3907
  br i1 %cmp128, label %if.then130, label %if.end133, !dbg !3908

if.then130:                                       ; preds = %if.end115
  %247 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3909
  %nsubbands131 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %247, i32 0, i32 14, !dbg !3910
  %248 = load i32, i32* %nsubbands131, align 8, !dbg !3910
  %249 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3911
  %g3_avg_only_start_sb132 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %249, i32 0, i32 15, !dbg !3912
  store i32 %248, i32* %g3_avg_only_start_sb132, align 4, !dbg !3913
  br label %if.end133, !dbg !3911

if.end133:                                        ; preds = %if.then130, %if.end115
  %250 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3914
  %nsubbands134 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %250, i32 0, i32 14, !dbg !3915
  %251 = load i32, i32* %nsubbands134, align 8, !dbg !3915
  %mul135 = mul nsw i32 %251, 2000, !dbg !3916
  %252 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3917
  %limited_rate136 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %252, i32 0, i32 11, !dbg !3918
  %253 = load i32, i32* %limited_rate136, align 4, !dbg !3918
  %div137 = sdiv i32 %253, 2, !dbg !3919
  %div138 = sdiv i32 %mul135, %div137, !dbg !3920
  %254 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3921
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %254, i32 0, i32 16, !dbg !3922
  store i32 %div138, i32* %min_mono_subband, align 32, !dbg !3923
  %255 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3924
  %min_mono_subband139 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %255, i32 0, i32 16, !dbg !3926
  %256 = load i32, i32* %min_mono_subband139, align 32, !dbg !3926
  %257 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3927
  %nsubbands140 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %257, i32 0, i32 14, !dbg !3928
  %258 = load i32, i32* %nsubbands140, align 8, !dbg !3928
  %cmp141 = icmp sgt i32 %256, %258, !dbg !3929
  br i1 %cmp141, label %if.then143, label %if.end146, !dbg !3930

if.then143:                                       ; preds = %if.end133
  %259 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3931
  %nsubbands144 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %259, i32 0, i32 14, !dbg !3932
  %260 = load i32, i32* %nsubbands144, align 8, !dbg !3932
  %261 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3933
  %min_mono_subband145 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %261, i32 0, i32 16, !dbg !3934
  store i32 %260, i32* %min_mono_subband145, align 32, !dbg !3935
  br label %if.end146, !dbg !3933

if.end146:                                        ; preds = %if.then143, %if.end133
  %262 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3936
  %nsubbands147 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %262, i32 0, i32 14, !dbg !3937
  %263 = load i32, i32* %nsubbands147, align 8, !dbg !3937
  %mul148 = mul nsw i32 %263, 14000, !dbg !3938
  %264 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3939
  %limited_rate149 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %264, i32 0, i32 11, !dbg !3940
  %265 = load i32, i32* %limited_rate149, align 4, !dbg !3940
  %div150 = sdiv i32 %265, 2, !dbg !3941
  %div151 = sdiv i32 %mul148, %div150, !dbg !3942
  %266 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3943
  %max_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %266, i32 0, i32 17, !dbg !3944
  store i32 %div151, i32* %max_mono_subband, align 4, !dbg !3945
  %267 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3946
  %max_mono_subband152 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %267, i32 0, i32 17, !dbg !3948
  %268 = load i32, i32* %max_mono_subband152, align 4, !dbg !3948
  %269 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3949
  %nsubbands153 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %269, i32 0, i32 14, !dbg !3950
  %270 = load i32, i32* %nsubbands153, align 8, !dbg !3950
  %cmp154 = icmp sgt i32 %268, %270, !dbg !3951
  br i1 %cmp154, label %if.then156, label %if.end159, !dbg !3952

if.then156:                                       ; preds = %if.end146
  %271 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3953
  %nsubbands157 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %271, i32 0, i32 14, !dbg !3954
  %272 = load i32, i32* %nsubbands157, align 8, !dbg !3954
  %273 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3955
  %max_mono_subband158 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %273, i32 0, i32 17, !dbg !3956
  store i32 %272, i32* %max_mono_subband158, align 4, !dbg !3957
  br label %if.end159, !dbg !3955

if.end159:                                        ; preds = %if.then156, %if.end146
  %274 = load i32, i32* %old_rate, align 4, !dbg !3958
  %275 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3960
  %sample_rate160 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %275, i32 0, i32 2, !dbg !3961
  %276 = load i32, i32* %sample_rate160, align 8, !dbg !3961
  %cmp161 = icmp ne i32 %274, %276, !dbg !3962
  br i1 %cmp161, label %land.lhs.true166, label %lor.lhs.false, !dbg !3963

lor.lhs.false:                                    ; preds = %if.end159
  %277 = load i32, i32* %old_band_limit, align 4, !dbg !3964
  %278 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3966
  %band_limit163 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %278, i32 0, i32 10, !dbg !3967
  %279 = load i32, i32* %band_limit163, align 8, !dbg !3967
  %cmp164 = icmp ne i32 %277, %279, !dbg !3968
  br i1 %cmp164, label %land.lhs.true166, label %if.end171, !dbg !3969

land.lhs.true166:                                 ; preds = %lor.lhs.false, %if.end159
  %280 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3970
  %call167 = call i32 @init_sample_rate(%struct.DCALbrDecoder* %280), !dbg !3972
  %cmp168 = icmp slt i32 %call167, 0, !dbg !3973
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !3974

if.then170:                                       ; preds = %land.lhs.true166
  store i32 -12, i32* %retval, align 4, !dbg !3975
  br label %return, !dbg !3975

if.end171:                                        ; preds = %land.lhs.true166, %lor.lhs.false
  %281 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !3976
  %flags172 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %281, i32 0, i32 4, !dbg !3978
  %282 = load i32, i32* %flags172, align 16, !dbg !3978
  %and173 = and i32 %282, 32, !dbg !3979
  %tobool174 = icmp ne i32 %and173, 0, !dbg !3979
  br i1 %tobool174, label %if.then175, label %if.end204, !dbg !3980

if.then175:                                       ; preds = %if.end171
  call void @llvm.dbg.declare(metadata %struct.DCAContext** %dca, metadata !3981, metadata !2138), !dbg !4286
  %283 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4287
  %avctx176 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %283, i32 0, i32 0, !dbg !4288
  %284 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx176, align 32, !dbg !4288
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %284, i32 0, i32 6, !dbg !4289
  %285 = load i8*, i8** %priv_data, align 8, !dbg !4289
  %286 = bitcast i8* %285 to %struct.DCAContext*, !dbg !4287
  store %struct.DCAContext* %286, %struct.DCAContext** %dca, align 8, !dbg !4286
  %287 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4290
  %nchannels_total177 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %287, i32 0, i32 8, !dbg !4292
  %288 = load i32, i32* %nchannels_total177, align 32, !dbg !4292
  %cmp178 = icmp slt i32 %288, 3, !dbg !4293
  br i1 %cmp178, label %if.then184, label %lor.lhs.false180, !dbg !4294

lor.lhs.false180:                                 ; preds = %if.then175
  %289 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4295
  %nchannels_total181 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %289, i32 0, i32 8, !dbg !4297
  %290 = load i32, i32* %nchannels_total181, align 32, !dbg !4297
  %cmp182 = icmp sgt i32 %290, 30, !dbg !4298
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !4299

if.then184:                                       ; preds = %lor.lhs.false180, %if.then175
  %291 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4300
  %avctx185 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %291, i32 0, i32 0, !dbg !4302
  %292 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx185, align 32, !dbg !4302
  %293 = bitcast %struct.AVCodecContext* %292 to i8*, !dbg !4300
  call void (i8*, i32, i8*, ...) @av_log(i8* %293, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i32 0, i32 0)), !dbg !4303
  store i32 -1094995529, i32* %retval, align 4, !dbg !4304
  br label %return, !dbg !4304

if.end186:                                        ; preds = %lor.lhs.false180
  %294 = load %struct.DCAContext*, %struct.DCAContext** %dca, align 8, !dbg !4305
  %request_channel_layout = getelementptr inbounds %struct.DCAContext, %struct.DCAContext* %294, i32 0, i32 13, !dbg !4307
  %295 = load i32, i32* %request_channel_layout, align 8, !dbg !4307
  %cmp187 = icmp ne i32 %295, 6, !dbg !4308
  br i1 %cmp187, label %land.lhs.true189, label %if.end197, !dbg !4309

land.lhs.true189:                                 ; preds = %if.end186
  %296 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4310
  %warned190 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %296, i32 0, i32 20, !dbg !4312
  %297 = load i32, i32* %warned190, align 16, !dbg !4312
  %and191 = and i32 %297, 4, !dbg !4313
  %tobool192 = icmp ne i32 %and191, 0, !dbg !4313
  br i1 %tobool192, label %if.end197, label %if.then193, !dbg !4314

if.then193:                                       ; preds = %land.lhs.true189
  %298 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4315
  %avctx194 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %298, i32 0, i32 0, !dbg !4317
  %299 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx194, align 32, !dbg !4317
  %300 = bitcast %struct.AVCodecContext* %299 to i8*, !dbg !4315
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %300, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i32 0, i32 0)), !dbg !4318
  %301 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4319
  %warned195 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %301, i32 0, i32 20, !dbg !4320
  %302 = load i32, i32* %warned195, align 16, !dbg !4321
  %or196 = or i32 %302, 4, !dbg !4321
  store i32 %or196, i32* %warned195, align 16, !dbg !4321
  br label %if.end197, !dbg !4322

if.end197:                                        ; preds = %if.then193, %land.lhs.true189, %if.end186
  %303 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4323
  %nchannels_total198 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %303, i32 0, i32 8, !dbg !4324
  %304 = load i32, i32* %nchannels_total198, align 32, !dbg !4325
  %add199 = add nsw i32 %304, 2, !dbg !4325
  store i32 %add199, i32* %nchannels_total198, align 32, !dbg !4325
  %305 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4326
  %nchannels200 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %305, i32 0, i32 7, !dbg !4327
  store i32 2, i32* %nchannels200, align 4, !dbg !4328
  %306 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4329
  %ch_mask201 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %306, i32 0, i32 3, !dbg !4330
  store i32 2, i32* %ch_mask201, align 4, !dbg !4331
  %307 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4332
  %flags202 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %307, i32 0, i32 4, !dbg !4333
  %308 = load i32, i32* %flags202, align 16, !dbg !4334
  %and203 = and i32 %308, -3, !dbg !4334
  store i32 %and203, i32* %flags202, align 16, !dbg !4334
  br label %if.end204, !dbg !4335

if.end204:                                        ; preds = %if.end197, %if.end171
  %309 = load i32, i32* %old_rate, align 4, !dbg !4336
  %310 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4338
  %sample_rate205 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %310, i32 0, i32 2, !dbg !4339
  %311 = load i32, i32* %sample_rate205, align 8, !dbg !4339
  %cmp206 = icmp ne i32 %309, %311, !dbg !4340
  br i1 %cmp206, label %if.then216, label %lor.lhs.false208, !dbg !4341

lor.lhs.false208:                                 ; preds = %if.end204
  %312 = load i32, i32* %old_band_limit, align 4, !dbg !4342
  %313 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4344
  %band_limit209 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %313, i32 0, i32 10, !dbg !4345
  %314 = load i32, i32* %band_limit209, align 8, !dbg !4345
  %cmp210 = icmp ne i32 %312, %314, !dbg !4346
  br i1 %cmp210, label %if.then216, label %lor.lhs.false212, !dbg !4347

lor.lhs.false212:                                 ; preds = %lor.lhs.false208
  %315 = load i32, i32* %old_nchannels, align 4, !dbg !4348
  %316 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4349
  %nchannels213 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %316, i32 0, i32 7, !dbg !4350
  %317 = load i32, i32* %nchannels213, align 4, !dbg !4350
  %cmp214 = icmp ne i32 %315, %317, !dbg !4351
  br i1 %cmp214, label %if.then216, label %if.end222, !dbg !4352

if.then216:                                       ; preds = %lor.lhs.false212, %lor.lhs.false208, %if.end204
  %318 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4353
  %call217 = call i32 @alloc_sample_buffer(%struct.DCALbrDecoder* %318), !dbg !4356
  %cmp218 = icmp slt i32 %call217, 0, !dbg !4357
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !4358

if.then220:                                       ; preds = %if.then216
  store i32 -12, i32* %retval, align 4, !dbg !4359
  br label %return, !dbg !4359

if.end221:                                        ; preds = %if.then216
  %319 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4360
  call void @ff_dca_lbr_flush(%struct.DCALbrDecoder* %319), !dbg !4361
  br label %if.end222, !dbg !4362

if.end222:                                        ; preds = %if.end221, %lor.lhs.false212
  store i32 0, i32* %retval, align 4, !dbg !4363
  br label %return, !dbg !4363

return:                                           ; preds = %if.end222, %if.then220, %if.then184, %if.then170, %if.then113, %sw.default, %if.then37, %if.then30, %if.then12, %if.then6, %if.then
  %320 = load i32, i32* %retval, align 4, !dbg !4364
  ret i32 %320, !dbg !4364
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_lfe_chunk(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk) #0 !dbg !4365 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !4369, metadata !2138), !dbg !4370
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !4371, metadata !2138), !dbg !4372
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4373
  %flags = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 4, !dbg !4375
  %1 = load i32, i32* %flags, align 16, !dbg !4375
  %and = and i32 %1, 2, !dbg !4376
  %tobool = icmp ne i32 %and, 0, !dbg !4376
  br i1 %tobool, label %if.end, label %if.then, !dbg !4377

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4378
  br label %return, !dbg !4378

if.end:                                           ; preds = %entry
  %2 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4379
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %2, i32 0, i32 1, !dbg !4381
  %3 = load i32, i32* %len, align 4, !dbg !4381
  %tobool1 = icmp ne i32 %3, 0, !dbg !4379
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4382

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4383
  br label %return, !dbg !4383

if.end3:                                          ; preds = %if.end
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4384
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 1, !dbg !4386
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4387
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 2, !dbg !4388
  %6 = load i8*, i8** %data, align 8, !dbg !4388
  %7 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4389
  %len4 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %7, i32 0, i32 1, !dbg !4390
  %8 = load i32, i32* %len4, align 4, !dbg !4390
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %6, i32 %8), !dbg !4391
  %cmp = icmp slt i32 %call, 0, !dbg !4392
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4393

if.then5:                                         ; preds = %if.end3
  store i32 -1, i32* %retval, align 4, !dbg !4394
  br label %return, !dbg !4394

if.end6:                                          ; preds = %if.end3
  %9 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4395
  %len7 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %9, i32 0, i32 1, !dbg !4397
  %10 = load i32, i32* %len7, align 4, !dbg !4397
  %cmp8 = icmp sge i32 %10, 52, !dbg !4398
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !4399

if.then9:                                         ; preds = %if.end6
  %11 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4400
  %call10 = call i32 @parse_lfe_24(%struct.DCALbrDecoder* %11), !dbg !4401
  store i32 %call10, i32* %retval, align 4, !dbg !4402
  br label %return, !dbg !4402

if.end11:                                         ; preds = %if.end6
  %12 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4403
  %len12 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %12, i32 0, i32 1, !dbg !4405
  %13 = load i32, i32* %len12, align 4, !dbg !4405
  %cmp13 = icmp sge i32 %13, 35, !dbg !4406
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !4407

if.then14:                                        ; preds = %if.end11
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4408
  %call15 = call i32 @parse_lfe_16(%struct.DCALbrDecoder* %14), !dbg !4409
  store i32 %call15, i32* %retval, align 4, !dbg !4410
  br label %return, !dbg !4410

if.end16:                                         ; preds = %if.end11
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4411
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 0, !dbg !4412
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4412
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !4411
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i32 0, i32 0)), !dbg !4413
  store i32 -1, i32* %retval, align 4, !dbg !4414
  br label %return, !dbg !4414

return:                                           ; preds = %if.end16, %if.then14, %if.then9, %if.then5, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !4415
  ret i32 %18, !dbg !4415
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_tonal_chunk(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk) #0 !dbg !4416 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  %sb = alloca i32, align 4
  %group = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !4417, metadata !2138), !dbg !4418
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !4419, metadata !2138), !dbg !4420
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !4421, metadata !2138), !dbg !4422
  call void @llvm.dbg.declare(metadata i32* %group, metadata !4423, metadata !2138), !dbg !4424
  %0 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4425
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %0, i32 0, i32 1, !dbg !4427
  %1 = load i32, i32* %len, align 4, !dbg !4427
  %tobool = icmp ne i32 %1, 0, !dbg !4425
  br i1 %tobool, label %if.end, label %if.then, !dbg !4428

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4429
  br label %return, !dbg !4429

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4430
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 1, !dbg !4432
  %3 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4433
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %3, i32 0, i32 2, !dbg !4434
  %4 = load i8*, i8** %data, align 8, !dbg !4434
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4435
  %len1 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 1, !dbg !4436
  %6 = load i32, i32* %len1, align 4, !dbg !4436
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !4437
  %cmp = icmp slt i32 %call, 0, !dbg !4438
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4439

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4440
  br label %return, !dbg !4440

if.end3:                                          ; preds = %if.end
  %7 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4441
  %id = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %7, i32 0, i32 0, !dbg !4443
  %8 = load i32, i32* %id, align 8, !dbg !4443
  %cmp4 = icmp eq i32 %8, 14, !dbg !4444
  br i1 %cmp4, label %if.then7, label %lor.lhs.false, !dbg !4445

lor.lhs.false:                                    ; preds = %if.end3
  %9 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4446
  %id5 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %9, i32 0, i32 0, !dbg !4448
  %10 = load i32, i32* %id5, align 8, !dbg !4448
  %cmp6 = icmp eq i32 %10, 22, !dbg !4449
  br i1 %cmp6, label %if.then7, label %if.end16, !dbg !4450

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  %11 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4451
  %gb8 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %11, i32 0, i32 1, !dbg !4454
  %call9 = call i32 @get_bits_left(%struct.GetBitContext* %gb8), !dbg !4455
  %cmp10 = icmp slt i32 %call9, 36, !dbg !4456
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4457

if.then11:                                        ; preds = %if.then7
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4458
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 0, !dbg !4460
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4460
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !4458
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i32 0, i32 0)), !dbg !4461
  store i32 -1, i32* %retval, align 4, !dbg !4462
  br label %return, !dbg !4462

if.end12:                                         ; preds = %if.then7
  store i32 0, i32* %sb, align 4, !dbg !4463
  br label %for.cond, !dbg !4465

for.cond:                                         ; preds = %for.inc, %if.end12
  %15 = load i32, i32* %sb, align 4, !dbg !4466
  %cmp13 = icmp slt i32 %15, 6, !dbg !4469
  br i1 %cmp13, label %for.body, label %for.end, !dbg !4470

for.body:                                         ; preds = %for.cond
  %16 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4471
  %gb14 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %16, i32 0, i32 1, !dbg !4472
  %call15 = call i32 @get_bits(%struct.GetBitContext* %gb14, i32 6), !dbg !4473
  %conv = trunc i32 %call15 to i8, !dbg !4473
  %17 = load i32, i32* %sb, align 4, !dbg !4474
  %idxprom = sext i32 %17 to i64, !dbg !4475
  %18 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4475
  %tonal_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %18, i32 0, i32 45, !dbg !4476
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %tonal_scf, i64 0, i64 %idxprom, !dbg !4475
  store i8 %conv, i8* %arrayidx, align 1, !dbg !4477
  br label %for.inc, !dbg !4475

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %sb, align 4, !dbg !4478
  %inc = add nsw i32 %19, 1, !dbg !4478
  store i32 %inc, i32* %sb, align 4, !dbg !4478
  br label %for.cond, !dbg !4480, !llvm.loop !4481

for.end:                                          ; preds = %for.cond
  br label %if.end16, !dbg !4483

if.end16:                                         ; preds = %for.end, %lor.lhs.false
  %20 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4484
  %id17 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %20, i32 0, i32 0, !dbg !4486
  %21 = load i32, i32* %id17, align 8, !dbg !4486
  %cmp18 = icmp eq i32 %21, 16, !dbg !4487
  br i1 %cmp18, label %if.then24, label %lor.lhs.false20, !dbg !4488

lor.lhs.false20:                                  ; preds = %if.end16
  %22 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4489
  %id21 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %22, i32 0, i32 0, !dbg !4491
  %23 = load i32, i32* %id21, align 8, !dbg !4491
  %cmp22 = icmp eq i32 %23, 22, !dbg !4492
  br i1 %cmp22, label %if.then24, label %if.end37, !dbg !4493

if.then24:                                        ; preds = %lor.lhs.false20, %if.end16
  store i32 0, i32* %group, align 4, !dbg !4494
  br label %for.cond25, !dbg !4496

for.cond25:                                       ; preds = %for.inc34, %if.then24
  %24 = load i32, i32* %group, align 4, !dbg !4497
  %cmp26 = icmp slt i32 %24, 5, !dbg !4500
  br i1 %cmp26, label %for.body28, label %for.end36, !dbg !4501

for.body28:                                       ; preds = %for.cond25
  %25 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4502
  %26 = load i32, i32* %group, align 4, !dbg !4504
  %call29 = call i32 @parse_tonal(%struct.DCALbrDecoder* %25, i32 %26), !dbg !4505
  %cmp30 = icmp slt i32 %call29, 0, !dbg !4506
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4507

if.then32:                                        ; preds = %for.body28
  store i32 -1, i32* %retval, align 4, !dbg !4508
  br label %return, !dbg !4508

if.end33:                                         ; preds = %for.body28
  br label %for.inc34, !dbg !4509

for.inc34:                                        ; preds = %if.end33
  %27 = load i32, i32* %group, align 4, !dbg !4511
  %inc35 = add nsw i32 %27, 1, !dbg !4511
  store i32 %inc35, i32* %group, align 4, !dbg !4511
  br label %for.cond25, !dbg !4513, !llvm.loop !4514

for.end36:                                        ; preds = %for.cond25
  br label %if.end37, !dbg !4516

if.end37:                                         ; preds = %for.end36, %lor.lhs.false20
  store i32 0, i32* %retval, align 4, !dbg !4518
  br label %return, !dbg !4518

return:                                           ; preds = %if.end37, %if.then32, %if.then11, %if.then2, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !4519
  ret i32 %28, !dbg !4519
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_tonal_group(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk) #0 !dbg !4520 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !4521, metadata !2138), !dbg !4522
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !4523, metadata !2138), !dbg !4524
  %0 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4525
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %0, i32 0, i32 1, !dbg !4527
  %1 = load i32, i32* %len, align 4, !dbg !4527
  %tobool = icmp ne i32 %1, 0, !dbg !4525
  br i1 %tobool, label %if.end, label %if.then, !dbg !4528

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4530
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 1, !dbg !4532
  %3 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4533
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %3, i32 0, i32 2, !dbg !4534
  %4 = load i8*, i8** %data, align 8, !dbg !4534
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4535
  %len1 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 1, !dbg !4536
  %6 = load i32, i32* %len1, align 4, !dbg !4536
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !4537
  %cmp = icmp slt i32 %call, 0, !dbg !4538
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4539

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4540
  br label %return, !dbg !4540

if.end3:                                          ; preds = %if.end
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4541
  %8 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4542
  %id = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %8, i32 0, i32 0, !dbg !4543
  %9 = load i32, i32* %id, align 8, !dbg !4543
  %call4 = call i32 @parse_tonal(%struct.DCALbrDecoder* %7, i32 %9), !dbg !4544
  store i32 %call4, i32* %retval, align 4, !dbg !4545
  br label %return, !dbg !4545

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4546
  ret i32 %10, !dbg !4546
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_grid_1_chunk(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk, i32 %ch1, i32 %ch2) #0 !dbg !4547 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %sf = alloca i32, align 4
  %nsubbands = alloca i32, align 4
  %min_v = alloca [2 x i32], align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !4550, metadata !2138), !dbg !4551
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !4552, metadata !2138), !dbg !4553
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !4554, metadata !2138), !dbg !4555
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !4556, metadata !2138), !dbg !4557
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4558, metadata !2138), !dbg !4559
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !4560, metadata !2138), !dbg !4561
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !4562, metadata !2138), !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %nsubbands, metadata !4564, metadata !2138), !dbg !4565
  %0 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4566
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %0, i32 0, i32 1, !dbg !4568
  %1 = load i32, i32* %len, align 4, !dbg !4568
  %tobool = icmp ne i32 %1, 0, !dbg !4566
  br i1 %tobool, label %if.end, label %if.then, !dbg !4569

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4570
  br label %return, !dbg !4570

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4571
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 1, !dbg !4573
  %3 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4574
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %3, i32 0, i32 2, !dbg !4575
  %4 = load i8*, i8** %data, align 8, !dbg !4575
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4576
  %len1 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 1, !dbg !4577
  %6 = load i32, i32* %len1, align 4, !dbg !4577
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !4578
  %cmp = icmp slt i32 %call, 0, !dbg !4579
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4580

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4581
  br label %return, !dbg !4581

if.end3:                                          ; preds = %if.end
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4582
  %nsubbands4 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 14, !dbg !4583
  %8 = load i32, i32* %nsubbands4, align 8, !dbg !4583
  %sub = sub nsw i32 %8, 1, !dbg !4584
  %idxprom = sext i32 %sub to i64, !dbg !4585
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_scf_to_grid_1, i64 0, i64 %idxprom, !dbg !4585
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4585
  %conv = zext i8 %9 to i32, !dbg !4585
  %add = add nsw i32 %conv, 1, !dbg !4586
  store i32 %add, i32* %nsubbands, align 4, !dbg !4587
  store i32 2, i32* %sb, align 4, !dbg !4588
  br label %for.cond, !dbg !4590

for.cond:                                         ; preds = %for.inc, %if.end3
  %10 = load i32, i32* %sb, align 4, !dbg !4591
  %11 = load i32, i32* %nsubbands, align 4, !dbg !4594
  %cmp5 = icmp slt i32 %10, %11, !dbg !4595
  br i1 %cmp5, label %for.body, label %for.end, !dbg !4596

for.body:                                         ; preds = %for.cond
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4597
  %13 = load i32, i32* %sb, align 4, !dbg !4600
  %idxprom7 = sext i32 %13 to i64, !dbg !4601
  %14 = load i32, i32* %ch1.addr, align 4, !dbg !4602
  %idxprom8 = sext i32 %14 to i64, !dbg !4601
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4601
  %grid_1_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 26, !dbg !4603
  %arrayidx9 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf, i64 0, i64 %idxprom8, !dbg !4601
  %arrayidx10 = getelementptr inbounds [12 x [8 x i8]], [12 x [8 x i8]]* %arrayidx9, i64 0, i64 %idxprom7, !dbg !4601
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx10, i32 0, i32 0, !dbg !4601
  %call11 = call i32 @parse_scale_factors(%struct.DCALbrDecoder* %12, i8* %arraydecay), !dbg !4604
  %cmp12 = icmp slt i32 %call11, 0, !dbg !4605
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !4606

if.then14:                                        ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !4607
  br label %return, !dbg !4607

if.end15:                                         ; preds = %for.body
  %16 = load i32, i32* %ch1.addr, align 4, !dbg !4608
  %17 = load i32, i32* %ch2.addr, align 4, !dbg !4610
  %cmp16 = icmp ne i32 %16, %17, !dbg !4611
  br i1 %cmp16, label %land.lhs.true, label %if.end34, !dbg !4612

land.lhs.true:                                    ; preds = %if.end15
  %18 = load i32, i32* %sb, align 4, !dbg !4613
  %idxprom18 = sext i32 %18 to i64, !dbg !4615
  %arrayidx19 = getelementptr inbounds [11 x i8], [11 x i8]* @ff_dca_grid_1_to_scf, i64 0, i64 %idxprom18, !dbg !4615
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !4615
  %conv20 = zext i8 %19 to i32, !dbg !4615
  %20 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4616
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %20, i32 0, i32 16, !dbg !4617
  %21 = load i32, i32* %min_mono_subband, align 32, !dbg !4617
  %cmp21 = icmp slt i32 %conv20, %21, !dbg !4618
  br i1 %cmp21, label %land.lhs.true23, label %if.end34, !dbg !4619

land.lhs.true23:                                  ; preds = %land.lhs.true
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4620
  %23 = load i32, i32* %sb, align 4, !dbg !4621
  %idxprom24 = sext i32 %23 to i64, !dbg !4622
  %24 = load i32, i32* %ch2.addr, align 4, !dbg !4623
  %idxprom25 = sext i32 %24 to i64, !dbg !4622
  %25 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4622
  %grid_1_scf26 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %25, i32 0, i32 26, !dbg !4624
  %arrayidx27 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf26, i64 0, i64 %idxprom25, !dbg !4622
  %arrayidx28 = getelementptr inbounds [12 x [8 x i8]], [12 x [8 x i8]]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !4622
  %arraydecay29 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx28, i32 0, i32 0, !dbg !4622
  %call30 = call i32 @parse_scale_factors(%struct.DCALbrDecoder* %22, i8* %arraydecay29), !dbg !4625
  %cmp31 = icmp slt i32 %call30, 0, !dbg !4626
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4627

if.then33:                                        ; preds = %land.lhs.true23
  store i32 -1, i32* %retval, align 4, !dbg !4629
  br label %return, !dbg !4629

if.end34:                                         ; preds = %land.lhs.true23, %land.lhs.true, %if.end15
  br label %for.inc, !dbg !4630

for.inc:                                          ; preds = %if.end34
  %26 = load i32, i32* %sb, align 4, !dbg !4631
  %inc = add nsw i32 %26, 1, !dbg !4631
  store i32 %inc, i32* %sb, align 4, !dbg !4631
  br label %for.cond, !dbg !4633, !llvm.loop !4634

for.end:                                          ; preds = %for.cond
  %27 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4636
  %gb35 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %27, i32 0, i32 1, !dbg !4638
  %call36 = call i32 @get_bits_left(%struct.GetBitContext* %gb35), !dbg !4639
  %cmp37 = icmp slt i32 %call36, 1, !dbg !4640
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4641

if.then39:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !4642
  br label %return, !dbg !4642

if.end40:                                         ; preds = %for.end
  store i32 0, i32* %sb, align 4, !dbg !4643
  br label %for.cond41, !dbg !4645

for.cond41:                                       ; preds = %for.inc84, %if.end40
  %28 = load i32, i32* %sb, align 4, !dbg !4646
  %29 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4649
  %nsubbands42 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %29, i32 0, i32 14, !dbg !4650
  %30 = load i32, i32* %nsubbands42, align 8, !dbg !4650
  %sub43 = sub nsw i32 %30, 4, !dbg !4651
  %cmp44 = icmp slt i32 %28, %sub43, !dbg !4652
  br i1 %cmp44, label %for.body46, label %for.end86, !dbg !4653

for.body46:                                       ; preds = %for.cond41
  %31 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4654
  %gb47 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %31, i32 0, i32 1, !dbg !4656
  %call48 = call i32 @parse_vlc(%struct.GetBitContext* %gb47, %struct.VLC* @ff_dca_vlc_avg_g3, i32 2), !dbg !4657
  %sub49 = sub nsw i32 %call48, 16, !dbg !4658
  %conv50 = trunc i32 %sub49 to i8, !dbg !4657
  %32 = load i32, i32* %sb, align 4, !dbg !4659
  %idxprom51 = sext i32 %32 to i64, !dbg !4660
  %33 = load i32, i32* %ch1.addr, align 4, !dbg !4661
  %idxprom52 = sext i32 %33 to i64, !dbg !4660
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4660
  %grid_3_avg = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 28, !dbg !4662
  %arrayidx53 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg, i64 0, i64 %idxprom52, !dbg !4660
  %arrayidx54 = getelementptr inbounds [28 x i8], [28 x i8]* %arrayidx53, i64 0, i64 %idxprom51, !dbg !4660
  store i8 %conv50, i8* %arrayidx54, align 1, !dbg !4663
  %35 = load i32, i32* %ch1.addr, align 4, !dbg !4664
  %36 = load i32, i32* %ch2.addr, align 4, !dbg !4666
  %cmp55 = icmp ne i32 %35, %36, !dbg !4667
  br i1 %cmp55, label %if.then57, label %if.end83, !dbg !4668

if.then57:                                        ; preds = %for.body46
  %37 = load i32, i32* %sb, align 4, !dbg !4669
  %add58 = add nsw i32 %37, 4, !dbg !4672
  %38 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4673
  %min_mono_subband59 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %38, i32 0, i32 16, !dbg !4674
  %39 = load i32, i32* %min_mono_subband59, align 32, !dbg !4674
  %cmp60 = icmp slt i32 %add58, %39, !dbg !4675
  br i1 %cmp60, label %if.then62, label %if.else, !dbg !4676

if.then62:                                        ; preds = %if.then57
  %40 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4677
  %gb63 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %40, i32 0, i32 1, !dbg !4678
  %call64 = call i32 @parse_vlc(%struct.GetBitContext* %gb63, %struct.VLC* @ff_dca_vlc_avg_g3, i32 2), !dbg !4679
  %sub65 = sub nsw i32 %call64, 16, !dbg !4680
  %conv66 = trunc i32 %sub65 to i8, !dbg !4679
  %41 = load i32, i32* %sb, align 4, !dbg !4681
  %idxprom67 = sext i32 %41 to i64, !dbg !4682
  %42 = load i32, i32* %ch2.addr, align 4, !dbg !4683
  %idxprom68 = sext i32 %42 to i64, !dbg !4682
  %43 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4682
  %grid_3_avg69 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %43, i32 0, i32 28, !dbg !4684
  %arrayidx70 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg69, i64 0, i64 %idxprom68, !dbg !4682
  %arrayidx71 = getelementptr inbounds [28 x i8], [28 x i8]* %arrayidx70, i64 0, i64 %idxprom67, !dbg !4682
  store i8 %conv66, i8* %arrayidx71, align 1, !dbg !4685
  br label %if.end82, !dbg !4682

if.else:                                          ; preds = %if.then57
  %44 = load i32, i32* %sb, align 4, !dbg !4686
  %idxprom72 = sext i32 %44 to i64, !dbg !4687
  %45 = load i32, i32* %ch1.addr, align 4, !dbg !4688
  %idxprom73 = sext i32 %45 to i64, !dbg !4687
  %46 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4687
  %grid_3_avg74 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %46, i32 0, i32 28, !dbg !4689
  %arrayidx75 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg74, i64 0, i64 %idxprom73, !dbg !4687
  %arrayidx76 = getelementptr inbounds [28 x i8], [28 x i8]* %arrayidx75, i64 0, i64 %idxprom72, !dbg !4687
  %47 = load i8, i8* %arrayidx76, align 1, !dbg !4687
  %48 = load i32, i32* %sb, align 4, !dbg !4690
  %idxprom77 = sext i32 %48 to i64, !dbg !4691
  %49 = load i32, i32* %ch2.addr, align 4, !dbg !4692
  %idxprom78 = sext i32 %49 to i64, !dbg !4691
  %50 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4691
  %grid_3_avg79 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %50, i32 0, i32 28, !dbg !4693
  %arrayidx80 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg79, i64 0, i64 %idxprom78, !dbg !4691
  %arrayidx81 = getelementptr inbounds [28 x i8], [28 x i8]* %arrayidx80, i64 0, i64 %idxprom77, !dbg !4691
  store i8 %47, i8* %arrayidx81, align 1, !dbg !4694
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.then62
  br label %if.end83, !dbg !4695

if.end83:                                         ; preds = %if.end82, %for.body46
  br label %for.inc84, !dbg !4696

for.inc84:                                        ; preds = %if.end83
  %51 = load i32, i32* %sb, align 4, !dbg !4697
  %inc85 = add nsw i32 %51, 1, !dbg !4697
  store i32 %inc85, i32* %sb, align 4, !dbg !4697
  br label %for.cond41, !dbg !4699, !llvm.loop !4700

for.end86:                                        ; preds = %for.cond41
  %52 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4702
  %gb87 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %52, i32 0, i32 1, !dbg !4704
  %call88 = call i32 @get_bits_left(%struct.GetBitContext* %gb87), !dbg !4705
  %cmp89 = icmp slt i32 %call88, 0, !dbg !4706
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4707

if.then91:                                        ; preds = %for.end86
  %53 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4708
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %53, i32 0, i32 0, !dbg !4710
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4710
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !4708
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i32 0, i32 0)), !dbg !4711
  store i32 -1, i32* %retval, align 4, !dbg !4712
  br label %return, !dbg !4712

if.end92:                                         ; preds = %for.end86
  %56 = load i32, i32* %ch1.addr, align 4, !dbg !4713
  %57 = load i32, i32* %ch2.addr, align 4, !dbg !4715
  %cmp93 = icmp ne i32 %56, %57, !dbg !4716
  br i1 %cmp93, label %if.then95, label %if.end152, !dbg !4717

if.then95:                                        ; preds = %if.end92
  call void @llvm.dbg.declare(metadata [2 x i32]* %min_v, metadata !4718, metadata !2138), !dbg !4720
  %58 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4721
  %gb96 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %58, i32 0, i32 1, !dbg !4723
  %call97 = call i32 @ensure_bits(%struct.GetBitContext* %gb96, i32 8), !dbg !4724
  %tobool98 = icmp ne i32 %call97, 0, !dbg !4724
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !4725

if.then99:                                        ; preds = %if.then95
  store i32 0, i32* %retval, align 4, !dbg !4726
  br label %return, !dbg !4726

if.end100:                                        ; preds = %if.then95
  %59 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4727
  %gb101 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %59, i32 0, i32 1, !dbg !4728
  %call102 = call i32 @get_bits(%struct.GetBitContext* %gb101, i32 4), !dbg !4729
  %arrayidx103 = getelementptr inbounds [2 x i32], [2 x i32]* %min_v, i64 0, i64 0, !dbg !4730
  store i32 %call102, i32* %arrayidx103, align 4, !dbg !4731
  %60 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4732
  %gb104 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %60, i32 0, i32 1, !dbg !4733
  %call105 = call i32 @get_bits(%struct.GetBitContext* %gb104, i32 4), !dbg !4734
  %arrayidx106 = getelementptr inbounds [2 x i32], [2 x i32]* %min_v, i64 0, i64 1, !dbg !4735
  store i32 %call105, i32* %arrayidx106, align 4, !dbg !4736
  %61 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4737
  %nsubbands107 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %61, i32 0, i32 14, !dbg !4738
  %62 = load i32, i32* %nsubbands107, align 8, !dbg !4738
  %63 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4739
  %min_mono_subband108 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %63, i32 0, i32 16, !dbg !4740
  %64 = load i32, i32* %min_mono_subband108, align 32, !dbg !4740
  %sub109 = sub nsw i32 %62, %64, !dbg !4741
  %add110 = add nsw i32 %sub109, 3, !dbg !4742
  %div = sdiv i32 %add110, 4, !dbg !4743
  store i32 %div, i32* %nsubbands, align 4, !dbg !4744
  store i32 0, i32* %sb, align 4, !dbg !4745
  br label %for.cond111, !dbg !4747

for.cond111:                                      ; preds = %for.inc141, %if.end100
  %65 = load i32, i32* %sb, align 4, !dbg !4748
  %66 = load i32, i32* %nsubbands, align 4, !dbg !4751
  %cmp112 = icmp slt i32 %65, %66, !dbg !4752
  br i1 %cmp112, label %for.body114, label %for.end143, !dbg !4753

for.body114:                                      ; preds = %for.cond111
  %67 = load i32, i32* %ch1.addr, align 4, !dbg !4754
  store i32 %67, i32* %ch, align 4, !dbg !4756
  br label %for.cond115, !dbg !4757

for.cond115:                                      ; preds = %for.inc138, %for.body114
  %68 = load i32, i32* %ch, align 4, !dbg !4758
  %69 = load i32, i32* %ch2.addr, align 4, !dbg !4761
  %cmp116 = icmp sle i32 %68, %69, !dbg !4762
  br i1 %cmp116, label %for.body118, label %for.end140, !dbg !4763

for.body118:                                      ; preds = %for.cond115
  store i32 1, i32* %sf, align 4, !dbg !4764
  br label %for.cond119, !dbg !4766

for.cond119:                                      ; preds = %for.inc135, %for.body118
  %70 = load i32, i32* %sf, align 4, !dbg !4767
  %cmp120 = icmp sle i32 %70, 4, !dbg !4770
  br i1 %cmp120, label %for.body122, label %for.end137, !dbg !4771

for.body122:                                      ; preds = %for.cond119
  %71 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4772
  %gb123 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %71, i32 0, i32 1, !dbg !4773
  %72 = load i32, i32* %ch, align 4, !dbg !4774
  %73 = load i32, i32* %ch1.addr, align 4, !dbg !4775
  %sub124 = sub nsw i32 %72, %73, !dbg !4776
  %idxprom125 = sext i32 %sub124 to i64, !dbg !4777
  %arrayidx126 = getelementptr inbounds [2 x i32], [2 x i32]* %min_v, i64 0, i64 %idxprom125, !dbg !4777
  %74 = load i32, i32* %arrayidx126, align 4, !dbg !4777
  %call127 = call i32 @parse_st_code(%struct.GetBitContext* %gb123, i32 %74), !dbg !4778
  %conv128 = trunc i32 %call127 to i8, !dbg !4778
  %75 = load i32, i32* %sf, align 4, !dbg !4779
  %idxprom129 = sext i32 %75 to i64, !dbg !4780
  %76 = load i32, i32* %sb, align 4, !dbg !4781
  %idxprom130 = sext i32 %76 to i64, !dbg !4780
  %77 = load i32, i32* %ch, align 4, !dbg !4782
  %idxprom131 = sext i32 %77 to i64, !dbg !4780
  %78 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4780
  %part_stereo = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %78, i32 0, i32 32, !dbg !4783
  %arrayidx132 = getelementptr inbounds [6 x [8 x [5 x i8]]], [6 x [8 x [5 x i8]]]* %part_stereo, i64 0, i64 %idxprom131, !dbg !4780
  %arrayidx133 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* %arrayidx132, i64 0, i64 %idxprom130, !dbg !4780
  %arrayidx134 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx133, i64 0, i64 %idxprom129, !dbg !4780
  store i8 %conv128, i8* %arrayidx134, align 1, !dbg !4784
  br label %for.inc135, !dbg !4780

for.inc135:                                       ; preds = %for.body122
  %79 = load i32, i32* %sf, align 4, !dbg !4785
  %inc136 = add nsw i32 %79, 1, !dbg !4785
  store i32 %inc136, i32* %sf, align 4, !dbg !4785
  br label %for.cond119, !dbg !4787, !llvm.loop !4788

for.end137:                                       ; preds = %for.cond119
  br label %for.inc138, !dbg !4790

for.inc138:                                       ; preds = %for.end137
  %80 = load i32, i32* %ch, align 4, !dbg !4792
  %inc139 = add nsw i32 %80, 1, !dbg !4792
  store i32 %inc139, i32* %ch, align 4, !dbg !4792
  br label %for.cond115, !dbg !4794, !llvm.loop !4795

for.end140:                                       ; preds = %for.cond115
  br label %for.inc141, !dbg !4797

for.inc141:                                       ; preds = %for.end140
  %81 = load i32, i32* %sb, align 4, !dbg !4799
  %inc142 = add nsw i32 %81, 1, !dbg !4799
  store i32 %inc142, i32* %sb, align 4, !dbg !4799
  br label %for.cond111, !dbg !4801, !llvm.loop !4802

for.end143:                                       ; preds = %for.cond111
  %82 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4804
  %gb144 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %82, i32 0, i32 1, !dbg !4806
  %call145 = call i32 @get_bits_left(%struct.GetBitContext* %gb144), !dbg !4807
  %cmp146 = icmp sge i32 %call145, 0, !dbg !4808
  br i1 %cmp146, label %if.then148, label %if.end151, !dbg !4809

if.then148:                                       ; preds = %for.end143
  %83 = load i32, i32* %ch1.addr, align 4, !dbg !4810
  %shl = shl i32 1, %83, !dbg !4811
  %84 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4812
  %part_stereo_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %84, i32 0, i32 33, !dbg !4813
  %85 = load i8, i8* %part_stereo_pres, align 4, !dbg !4814
  %conv149 = zext i8 %85 to i32, !dbg !4814
  %or = or i32 %conv149, %shl, !dbg !4814
  %conv150 = trunc i32 %or to i8, !dbg !4814
  store i8 %conv150, i8* %part_stereo_pres, align 4, !dbg !4814
  br label %if.end151, !dbg !4812

if.end151:                                        ; preds = %if.then148, %for.end143
  br label %if.end152, !dbg !4815

if.end152:                                        ; preds = %if.end151, %if.end92
  store i32 0, i32* %retval, align 4, !dbg !4816
  br label %return, !dbg !4816

return:                                           ; preds = %if.end152, %if.then99, %if.then91, %if.then39, %if.then33, %if.then14, %if.then2, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !4817
  ret i32 %86, !dbg !4817
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_high_res_grid(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk, i32 %ch1, i32 %ch2) #0 !dbg !4818 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %quant_levels = alloca [32 x i32], align 16
  %sb = alloca i32, align 4
  %ch = alloca i32, align 4
  %ol = alloca i32, align 4
  %st = alloca i32, align 4
  %max_sb = alloca i32, align 4
  %profile = alloca i32, align 4
  %f = alloca i32, align 4
  %a = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !4819, metadata !2138), !dbg !4820
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !4821, metadata !2138), !dbg !4822
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !4823, metadata !2138), !dbg !4824
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !4825, metadata !2138), !dbg !4826
  call void @llvm.dbg.declare(metadata [32 x i32]* %quant_levels, metadata !4827, metadata !2138), !dbg !4828
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !4829, metadata !2138), !dbg !4830
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4831, metadata !2138), !dbg !4832
  call void @llvm.dbg.declare(metadata i32* %ol, metadata !4833, metadata !2138), !dbg !4834
  call void @llvm.dbg.declare(metadata i32* %st, metadata !4835, metadata !2138), !dbg !4836
  call void @llvm.dbg.declare(metadata i32* %max_sb, metadata !4837, metadata !2138), !dbg !4838
  call void @llvm.dbg.declare(metadata i32* %profile, metadata !4839, metadata !2138), !dbg !4840
  %0 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4841
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %0, i32 0, i32 1, !dbg !4843
  %1 = load i32, i32* %len, align 4, !dbg !4843
  %tobool = icmp ne i32 %1, 0, !dbg !4841
  br i1 %tobool, label %if.end, label %if.then, !dbg !4844

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4845
  br label %return, !dbg !4845

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4846
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 1, !dbg !4848
  %3 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4849
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %3, i32 0, i32 2, !dbg !4850
  %4 = load i8*, i8** %data, align 8, !dbg !4850
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !4851
  %len1 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 1, !dbg !4852
  %6 = load i32, i32* %len1, align 4, !dbg !4852
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !4853
  %cmp = icmp slt i32 %call, 0, !dbg !4854
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4855

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4856
  br label %return, !dbg !4856

if.end3:                                          ; preds = %if.end
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4857
  %gb4 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 1, !dbg !4858
  %call5 = call i32 @get_bits(%struct.GetBitContext* %gb4, i32 8), !dbg !4859
  store i32 %call5, i32* %profile, align 4, !dbg !4860
  %8 = load i32, i32* %profile, align 4, !dbg !4861
  %shr = ashr i32 %8, 3, !dbg !4862
  %and = and i32 %shr, 7, !dbg !4863
  store i32 %and, i32* %ol, align 4, !dbg !4864
  %9 = load i32, i32* %profile, align 4, !dbg !4865
  %shr6 = ashr i32 %9, 6, !dbg !4866
  store i32 %shr6, i32* %st, align 4, !dbg !4867
  %10 = load i32, i32* %profile, align 4, !dbg !4868
  %and7 = and i32 %10, 7, !dbg !4869
  store i32 %and7, i32* %max_sb, align 4, !dbg !4870
  store i32 0, i32* %sb, align 4, !dbg !4871
  br label %for.cond, !dbg !4873

for.cond:                                         ; preds = %for.inc, %if.end3
  %11 = load i32, i32* %sb, align 4, !dbg !4874
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4877
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 14, !dbg !4878
  %13 = load i32, i32* %nsubbands, align 8, !dbg !4878
  %cmp8 = icmp slt i32 %11, %13, !dbg !4879
  br i1 %cmp8, label %for.body, label %for.end, !dbg !4880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %f, metadata !4881, metadata !2138), !dbg !4883
  %14 = load i32, i32* %sb, align 4, !dbg !4884
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4885
  %limited_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 11, !dbg !4886
  %16 = load i32, i32* %limited_rate, align 4, !dbg !4886
  %mul = mul nsw i32 %14, %16, !dbg !4887
  %17 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4888
  %nsubbands9 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %17, i32 0, i32 14, !dbg !4889
  %18 = load i32, i32* %nsubbands9, align 8, !dbg !4889
  %div = sdiv i32 %mul, %18, !dbg !4890
  store i32 %div, i32* %f, align 4, !dbg !4883
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4891, metadata !2138), !dbg !4892
  %19 = load i32, i32* %f, align 4, !dbg !4893
  %mul10 = mul nsw i32 12, %19, !dbg !4894
  %div11 = sdiv i32 %mul10, 1000, !dbg !4895
  %add = add nsw i32 %div11, 100, !dbg !4896
  %20 = load i32, i32* %st, align 4, !dbg !4897
  %mul12 = mul nsw i32 40, %20, !dbg !4898
  %add13 = add nsw i32 %add, %mul12, !dbg !4899
  %div14 = sdiv i32 18000, %add13, !dbg !4900
  %21 = load i32, i32* %ol, align 4, !dbg !4901
  %mul15 = mul nsw i32 20, %21, !dbg !4902
  %add16 = add nsw i32 %div14, %mul15, !dbg !4903
  store i32 %add16, i32* %a, align 4, !dbg !4892
  %22 = load i32, i32* %a, align 4, !dbg !4904
  %cmp17 = icmp sle i32 %22, 95, !dbg !4906
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !4907

if.then18:                                        ; preds = %for.body
  %23 = load i32, i32* %sb, align 4, !dbg !4908
  %idxprom = sext i32 %23 to i64, !dbg !4909
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom, !dbg !4909
  store i32 1, i32* %arrayidx, align 4, !dbg !4910
  br label %if.end39, !dbg !4909

if.else:                                          ; preds = %for.body
  %24 = load i32, i32* %a, align 4, !dbg !4911
  %cmp19 = icmp sle i32 %24, 140, !dbg !4913
  br i1 %cmp19, label %if.then20, label %if.else23, !dbg !4914

if.then20:                                        ; preds = %if.else
  %25 = load i32, i32* %sb, align 4, !dbg !4915
  %idxprom21 = sext i32 %25 to i64, !dbg !4916
  %arrayidx22 = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom21, !dbg !4916
  store i32 2, i32* %arrayidx22, align 4, !dbg !4917
  br label %if.end38, !dbg !4916

if.else23:                                        ; preds = %if.else
  %26 = load i32, i32* %a, align 4, !dbg !4918
  %cmp24 = icmp sle i32 %26, 180, !dbg !4920
  br i1 %cmp24, label %if.then25, label %if.else28, !dbg !4921

if.then25:                                        ; preds = %if.else23
  %27 = load i32, i32* %sb, align 4, !dbg !4922
  %idxprom26 = sext i32 %27 to i64, !dbg !4923
  %arrayidx27 = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom26, !dbg !4923
  store i32 3, i32* %arrayidx27, align 4, !dbg !4924
  br label %if.end37, !dbg !4923

if.else28:                                        ; preds = %if.else23
  %28 = load i32, i32* %a, align 4, !dbg !4925
  %cmp29 = icmp sle i32 %28, 230, !dbg !4927
  br i1 %cmp29, label %if.then30, label %if.else33, !dbg !4928

if.then30:                                        ; preds = %if.else28
  %29 = load i32, i32* %sb, align 4, !dbg !4929
  %idxprom31 = sext i32 %29 to i64, !dbg !4930
  %arrayidx32 = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom31, !dbg !4930
  store i32 4, i32* %arrayidx32, align 4, !dbg !4931
  br label %if.end36, !dbg !4930

if.else33:                                        ; preds = %if.else28
  %30 = load i32, i32* %sb, align 4, !dbg !4932
  %idxprom34 = sext i32 %30 to i64, !dbg !4933
  %arrayidx35 = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom34, !dbg !4933
  store i32 5, i32* %arrayidx35, align 4, !dbg !4934
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then30
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then25
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then20
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then18
  br label %for.inc, !dbg !4935

for.inc:                                          ; preds = %if.end39
  %31 = load i32, i32* %sb, align 4, !dbg !4936
  %inc = add nsw i32 %31, 1, !dbg !4936
  store i32 %inc, i32* %sb, align 4, !dbg !4936
  br label %for.cond, !dbg !4938, !llvm.loop !4939

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !4941
  br label %for.cond40, !dbg !4943

for.cond40:                                       ; preds = %for.inc55, %for.end
  %32 = load i32, i32* %sb, align 4, !dbg !4944
  %cmp41 = icmp slt i32 %32, 8, !dbg !4947
  br i1 %cmp41, label %for.body42, label %for.end57, !dbg !4948

for.body42:                                       ; preds = %for.cond40
  %33 = load i32, i32* %sb, align 4, !dbg !4949
  %idxprom43 = sext i32 %33 to i64, !dbg !4950
  %34 = load i32, i32* %max_sb, align 4, !dbg !4951
  %idxprom44 = sext i32 %34 to i64, !dbg !4950
  %arrayidx45 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @ff_dca_sb_reorder, i64 0, i64 %idxprom44, !dbg !4950
  %arrayidx46 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx45, i64 0, i64 %idxprom43, !dbg !4950
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !4950
  %idxprom47 = zext i8 %35 to i64, !dbg !4952
  %arrayidx48 = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom47, !dbg !4952
  %36 = load i32, i32* %arrayidx48, align 4, !dbg !4952
  %conv = trunc i32 %36 to i8, !dbg !4952
  %37 = load i32, i32* %sb, align 4, !dbg !4953
  %idxprom49 = sext i32 %37 to i64, !dbg !4954
  %38 = load i32, i32* %ch1.addr, align 4, !dbg !4955
  %div50 = sdiv i32 %38, 2, !dbg !4956
  %idxprom51 = sext i32 %div50 to i64, !dbg !4954
  %39 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4954
  %quant_levels52 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %39, i32 0, i32 21, !dbg !4957
  %arrayidx53 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %quant_levels52, i64 0, i64 %idxprom51, !dbg !4954
  %arrayidx54 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx53, i64 0, i64 %idxprom49, !dbg !4954
  store i8 %conv, i8* %arrayidx54, align 1, !dbg !4958
  br label %for.inc55, !dbg !4954

for.inc55:                                        ; preds = %for.body42
  %40 = load i32, i32* %sb, align 4, !dbg !4959
  %inc56 = add nsw i32 %40, 1, !dbg !4959
  store i32 %inc56, i32* %sb, align 4, !dbg !4959
  br label %for.cond40, !dbg !4961, !llvm.loop !4962

for.end57:                                        ; preds = %for.cond40
  br label %for.cond58, !dbg !4964

for.cond58:                                       ; preds = %for.inc72, %for.end57
  %41 = load i32, i32* %sb, align 4, !dbg !4965
  %42 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4969
  %nsubbands59 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %42, i32 0, i32 14, !dbg !4970
  %43 = load i32, i32* %nsubbands59, align 8, !dbg !4970
  %cmp60 = icmp slt i32 %41, %43, !dbg !4971
  br i1 %cmp60, label %for.body62, label %for.end74, !dbg !4972

for.body62:                                       ; preds = %for.cond58
  %44 = load i32, i32* %sb, align 4, !dbg !4973
  %idxprom63 = sext i32 %44 to i64, !dbg !4974
  %arrayidx64 = getelementptr inbounds [32 x i32], [32 x i32]* %quant_levels, i64 0, i64 %idxprom63, !dbg !4974
  %45 = load i32, i32* %arrayidx64, align 4, !dbg !4974
  %conv65 = trunc i32 %45 to i8, !dbg !4974
  %46 = load i32, i32* %sb, align 4, !dbg !4975
  %idxprom66 = sext i32 %46 to i64, !dbg !4976
  %47 = load i32, i32* %ch1.addr, align 4, !dbg !4977
  %div67 = sdiv i32 %47, 2, !dbg !4978
  %idxprom68 = sext i32 %div67 to i64, !dbg !4976
  %48 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4976
  %quant_levels69 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %48, i32 0, i32 21, !dbg !4979
  %arrayidx70 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %quant_levels69, i64 0, i64 %idxprom68, !dbg !4976
  %arrayidx71 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx70, i64 0, i64 %idxprom66, !dbg !4976
  store i8 %conv65, i8* %arrayidx71, align 1, !dbg !4980
  br label %for.inc72, !dbg !4976

for.inc72:                                        ; preds = %for.body62
  %49 = load i32, i32* %sb, align 4, !dbg !4981
  %inc73 = add nsw i32 %49, 1, !dbg !4981
  store i32 %inc73, i32* %sb, align 4, !dbg !4981
  br label %for.cond58, !dbg !4983, !llvm.loop !4984

for.end74:                                        ; preds = %for.cond58
  %50 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4985
  %51 = load i32, i32* %ch1.addr, align 4, !dbg !4987
  %52 = load i32, i32* %ch2.addr, align 4, !dbg !4988
  %call75 = call i32 @parse_lpc(%struct.DCALbrDecoder* %50, i32 %51, i32 %52, i32 0, i32 2), !dbg !4989
  %cmp76 = icmp slt i32 %call75, 0, !dbg !4990
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !4991

if.then78:                                        ; preds = %for.end74
  store i32 -1, i32* %retval, align 4, !dbg !4992
  br label %return, !dbg !4992

if.end79:                                         ; preds = %for.end74
  %53 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !4993
  %54 = load i32, i32* %ch1.addr, align 4, !dbg !4995
  %55 = load i32, i32* %ch2.addr, align 4, !dbg !4996
  %call80 = call i32 @parse_ts(%struct.DCALbrDecoder* %53, i32 %54, i32 %55, i32 0, i32 2, i32 0), !dbg !4997
  %cmp81 = icmp slt i32 %call80, 0, !dbg !4998
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4999

if.then83:                                        ; preds = %if.end79
  store i32 -1, i32* %retval, align 4, !dbg !5000
  br label %return, !dbg !5000

if.end84:                                         ; preds = %if.end79
  store i32 0, i32* %sb, align 4, !dbg !5001
  br label %for.cond85, !dbg !5003

for.cond85:                                       ; preds = %for.inc105, %if.end84
  %56 = load i32, i32* %sb, align 4, !dbg !5004
  %cmp86 = icmp slt i32 %56, 2, !dbg !5007
  br i1 %cmp86, label %for.body88, label %for.end107, !dbg !5008

for.body88:                                       ; preds = %for.cond85
  %57 = load i32, i32* %ch1.addr, align 4, !dbg !5009
  store i32 %57, i32* %ch, align 4, !dbg !5011
  br label %for.cond89, !dbg !5012

for.cond89:                                       ; preds = %for.inc102, %for.body88
  %58 = load i32, i32* %ch, align 4, !dbg !5013
  %59 = load i32, i32* %ch2.addr, align 4, !dbg !5016
  %cmp90 = icmp sle i32 %58, %59, !dbg !5017
  br i1 %cmp90, label %for.body92, label %for.end104, !dbg !5018

for.body92:                                       ; preds = %for.cond89
  %60 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5019
  %61 = load i32, i32* %sb, align 4, !dbg !5021
  %idxprom93 = sext i32 %61 to i64, !dbg !5022
  %62 = load i32, i32* %ch, align 4, !dbg !5023
  %idxprom94 = sext i32 %62 to i64, !dbg !5022
  %63 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5022
  %grid_1_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %63, i32 0, i32 26, !dbg !5024
  %arrayidx95 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf, i64 0, i64 %idxprom94, !dbg !5022
  %arrayidx96 = getelementptr inbounds [12 x [8 x i8]], [12 x [8 x i8]]* %arrayidx95, i64 0, i64 %idxprom93, !dbg !5022
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx96, i32 0, i32 0, !dbg !5022
  %call97 = call i32 @parse_scale_factors(%struct.DCALbrDecoder* %60, i8* %arraydecay), !dbg !5025
  %cmp98 = icmp slt i32 %call97, 0, !dbg !5026
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !5027

if.then100:                                       ; preds = %for.body92
  store i32 -1, i32* %retval, align 4, !dbg !5028
  br label %return, !dbg !5028

if.end101:                                        ; preds = %for.body92
  br label %for.inc102, !dbg !5029

for.inc102:                                       ; preds = %if.end101
  %64 = load i32, i32* %ch, align 4, !dbg !5031
  %inc103 = add nsw i32 %64, 1, !dbg !5031
  store i32 %inc103, i32* %ch, align 4, !dbg !5031
  br label %for.cond89, !dbg !5033, !llvm.loop !5034

for.end104:                                       ; preds = %for.cond89
  br label %for.inc105, !dbg !5036

for.inc105:                                       ; preds = %for.end104
  %65 = load i32, i32* %sb, align 4, !dbg !5038
  %inc106 = add nsw i32 %65, 1, !dbg !5038
  store i32 %inc106, i32* %sb, align 4, !dbg !5038
  br label %for.cond85, !dbg !5040, !llvm.loop !5041

for.end107:                                       ; preds = %for.cond85
  store i32 0, i32* %retval, align 4, !dbg !5043
  br label %return, !dbg !5043

return:                                           ; preds = %for.end107, %if.then100, %if.then83, %if.then78, %if.then2, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !5044
  ret i32 %66, !dbg !5044
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_ts1_chunk(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk, i32 %ch1, i32 %ch2) #0 !dbg !5045 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !5046, metadata !2138), !dbg !5047
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !5048, metadata !2138), !dbg !5049
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !5050, metadata !2138), !dbg !5051
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !5052, metadata !2138), !dbg !5053
  %0 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !5054
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %0, i32 0, i32 1, !dbg !5056
  %1 = load i32, i32* %len, align 4, !dbg !5056
  %tobool = icmp ne i32 %1, 0, !dbg !5054
  br i1 %tobool, label %if.end, label %if.then, !dbg !5057

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5058
  br label %return, !dbg !5058

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5059
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 1, !dbg !5061
  %3 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !5062
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %3, i32 0, i32 2, !dbg !5063
  %4 = load i8*, i8** %data, align 8, !dbg !5063
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !5064
  %len1 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 1, !dbg !5065
  %6 = load i32, i32* %len1, align 4, !dbg !5065
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !5066
  %cmp = icmp slt i32 %call, 0, !dbg !5067
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5068

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !5069
  br label %return, !dbg !5069

if.end3:                                          ; preds = %if.end
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5070
  %8 = load i32, i32* %ch1.addr, align 4, !dbg !5072
  %9 = load i32, i32* %ch2.addr, align 4, !dbg !5073
  %call4 = call i32 @parse_lpc(%struct.DCALbrDecoder* %7, i32 %8, i32 %9, i32 2, i32 3), !dbg !5074
  %cmp5 = icmp slt i32 %call4, 0, !dbg !5075
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5076

if.then6:                                         ; preds = %if.end3
  store i32 -1, i32* %retval, align 4, !dbg !5077
  br label %return, !dbg !5077

if.end7:                                          ; preds = %if.end3
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5078
  %11 = load i32, i32* %ch1.addr, align 4, !dbg !5080
  %12 = load i32, i32* %ch2.addr, align 4, !dbg !5081
  %call8 = call i32 @parse_ts(%struct.DCALbrDecoder* %10, i32 %11, i32 %12, i32 2, i32 4, i32 0), !dbg !5082
  %cmp9 = icmp slt i32 %call8, 0, !dbg !5083
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5084

if.then10:                                        ; preds = %if.end7
  store i32 -1, i32* %retval, align 4, !dbg !5085
  br label %return, !dbg !5085

if.end11:                                         ; preds = %if.end7
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5086
  %14 = load i32, i32* %ch1.addr, align 4, !dbg !5088
  %15 = load i32, i32* %ch2.addr, align 4, !dbg !5089
  %call12 = call i32 @parse_grid_2(%struct.DCALbrDecoder* %13, i32 %14, i32 %15, i32 0, i32 1, i32 0), !dbg !5090
  %cmp13 = icmp slt i32 %call12, 0, !dbg !5091
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5092

if.then14:                                        ; preds = %if.end11
  store i32 -1, i32* %retval, align 4, !dbg !5093
  br label %return, !dbg !5093

if.end15:                                         ; preds = %if.end11
  %16 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5094
  %17 = load i32, i32* %ch1.addr, align 4, !dbg !5096
  %18 = load i32, i32* %ch2.addr, align 4, !dbg !5097
  %call16 = call i32 @parse_ts(%struct.DCALbrDecoder* %16, i32 %17, i32 %18, i32 4, i32 6, i32 0), !dbg !5098
  %cmp17 = icmp slt i32 %call16, 0, !dbg !5099
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5100

if.then18:                                        ; preds = %if.end15
  store i32 -1, i32* %retval, align 4, !dbg !5101
  br label %return, !dbg !5101

if.end19:                                         ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !5102
  br label %return, !dbg !5102

return:                                           ; preds = %if.end19, %if.then18, %if.then14, %if.then10, %if.then6, %if.then2, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !5103
  ret i32 %19, !dbg !5103
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_ts2_chunk(%struct.DCALbrDecoder* %s, %struct.LBRChunk* %chunk, i32 %ch1, i32 %ch2) #0 !dbg !5104 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %chunk.addr = alloca %struct.LBRChunk*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !5105, metadata !2138), !dbg !5106
  store %struct.LBRChunk* %chunk, %struct.LBRChunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LBRChunk** %chunk.addr, metadata !5107, metadata !2138), !dbg !5108
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !5109, metadata !2138), !dbg !5110
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !5111, metadata !2138), !dbg !5112
  %0 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !5113
  %len = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %0, i32 0, i32 1, !dbg !5115
  %1 = load i32, i32* %len, align 4, !dbg !5115
  %tobool = icmp ne i32 %1, 0, !dbg !5113
  br i1 %tobool, label %if.end, label %if.then, !dbg !5116

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5117
  br label %return, !dbg !5117

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5118
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 1, !dbg !5120
  %3 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !5121
  %data = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %3, i32 0, i32 2, !dbg !5122
  %4 = load i8*, i8** %data, align 8, !dbg !5122
  %5 = load %struct.LBRChunk*, %struct.LBRChunk** %chunk.addr, align 8, !dbg !5123
  %len1 = getelementptr inbounds %struct.LBRChunk, %struct.LBRChunk* %5, i32 0, i32 1, !dbg !5124
  %6 = load i32, i32* %len1, align 4, !dbg !5124
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %4, i32 %6), !dbg !5125
  %cmp = icmp slt i32 %call, 0, !dbg !5126
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5127

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !5128
  br label %return, !dbg !5128

if.end3:                                          ; preds = %if.end
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5129
  %8 = load i32, i32* %ch1.addr, align 4, !dbg !5131
  %9 = load i32, i32* %ch2.addr, align 4, !dbg !5132
  %call4 = call i32 @parse_grid_2(%struct.DCALbrDecoder* %7, i32 %8, i32 %9, i32 1, i32 3, i32 0), !dbg !5133
  %cmp5 = icmp slt i32 %call4, 0, !dbg !5134
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5135

if.then6:                                         ; preds = %if.end3
  store i32 -1, i32* %retval, align 4, !dbg !5136
  br label %return, !dbg !5136

if.end7:                                          ; preds = %if.end3
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5137
  %11 = load i32, i32* %ch1.addr, align 4, !dbg !5139
  %12 = load i32, i32* %ch2.addr, align 4, !dbg !5140
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5141
  %max_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %13, i32 0, i32 17, !dbg !5142
  %14 = load i32, i32* %max_mono_subband, align 4, !dbg !5142
  %call8 = call i32 @parse_ts(%struct.DCALbrDecoder* %10, i32 %11, i32 %12, i32 6, i32 %14, i32 0), !dbg !5143
  %cmp9 = icmp slt i32 %call8, 0, !dbg !5144
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5145

if.then10:                                        ; preds = %if.end7
  store i32 -1, i32* %retval, align 4, !dbg !5146
  br label %return, !dbg !5146

if.end11:                                         ; preds = %if.end7
  %15 = load i32, i32* %ch1.addr, align 4, !dbg !5147
  %16 = load i32, i32* %ch2.addr, align 4, !dbg !5149
  %cmp12 = icmp ne i32 %15, %16, !dbg !5150
  br i1 %cmp12, label %if.then13, label %if.end22, !dbg !5151

if.then13:                                        ; preds = %if.end11
  %17 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5152
  %18 = load i32, i32* %ch2.addr, align 4, !dbg !5155
  %call14 = call i32 @parse_grid_1_sec_ch(%struct.DCALbrDecoder* %17, i32 %18), !dbg !5156
  %cmp15 = icmp slt i32 %call14, 0, !dbg !5157
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !5158

if.then16:                                        ; preds = %if.then13
  store i32 -1, i32* %retval, align 4, !dbg !5159
  br label %return, !dbg !5159

if.end17:                                         ; preds = %if.then13
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5160
  %20 = load i32, i32* %ch1.addr, align 4, !dbg !5162
  %21 = load i32, i32* %ch2.addr, align 4, !dbg !5163
  %call18 = call i32 @parse_grid_2(%struct.DCALbrDecoder* %19, i32 %20, i32 %21, i32 0, i32 3, i32 1), !dbg !5164
  %cmp19 = icmp slt i32 %call18, 0, !dbg !5165
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5166

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !5167
  br label %return, !dbg !5167

if.end21:                                         ; preds = %if.end17
  br label %if.end22, !dbg !5168

if.end22:                                         ; preds = %if.end21, %if.end11
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5169
  %23 = load i32, i32* %ch1.addr, align 4, !dbg !5171
  %24 = load i32, i32* %ch2.addr, align 4, !dbg !5172
  %25 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5173
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %25, i32 0, i32 16, !dbg !5174
  %26 = load i32, i32* %min_mono_subband, align 32, !dbg !5174
  %27 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5175
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %27, i32 0, i32 14, !dbg !5176
  %28 = load i32, i32* %nsubbands, align 8, !dbg !5176
  %call23 = call i32 @parse_ts(%struct.DCALbrDecoder* %22, i32 %23, i32 %24, i32 %26, i32 %28, i32 1), !dbg !5177
  %cmp24 = icmp slt i32 %call23, 0, !dbg !5178
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5179

if.then25:                                        ; preds = %if.end22
  store i32 -1, i32* %retval, align 4, !dbg !5180
  br label %return, !dbg !5180

if.end26:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !5181
  br label %return, !dbg !5181

return:                                           ; preds = %if.end26, %if.then25, %if.then20, %if.then16, %if.then10, %if.then6, %if.then2, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !5182
  ret i32 %29, !dbg !5182
}

; Function Attrs: nounwind uwtable
define i32 @ff_dca_lbr_filter_frame(%struct.DCALbrDecoder* %s, %struct.AVFrame* %frame) #0 !dbg !5183 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %nchannels = alloca i32, align 4
  %ch_conf = alloca i32, align 4
  %reorder = alloca i8*, align 8
  %ch1 = alloca i32, align 4
  %ch2 = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !5186, metadata !2138), !dbg !5187
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !5188, metadata !2138), !dbg !5189
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !5190, metadata !2138), !dbg !5191
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5192
  %avctx1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 0, !dbg !5193
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !5193
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !5191
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5194, metadata !2138), !dbg !5195
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5196, metadata !2138), !dbg !5197
  call void @llvm.dbg.declare(metadata i32* %nchannels, metadata !5198, metadata !2138), !dbg !5199
  call void @llvm.dbg.declare(metadata i32* %ch_conf, metadata !5200, metadata !2138), !dbg !5201
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5202
  %ch_mask = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 3, !dbg !5203
  %3 = load i32, i32* %ch_mask, align 4, !dbg !5203
  %and = and i32 %3, 7, !dbg !5204
  %sub = sub nsw i32 %and, 1, !dbg !5205
  store i32 %sub, i32* %ch_conf, align 4, !dbg !5201
  call void @llvm.dbg.declare(metadata i8** %reorder, metadata !5206, metadata !2138), !dbg !5208
  %4 = load i32, i32* %ch_conf, align 4, !dbg !5209
  %idxprom = sext i32 %4 to i64, !dbg !5210
  %arrayidx = getelementptr inbounds [7 x i16], [7 x i16]* @channel_layouts, i64 0, i64 %idxprom, !dbg !5210
  %5 = load i16, i16* %arrayidx, align 2, !dbg !5210
  %conv = zext i16 %5 to i64, !dbg !5210
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5211
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 89, !dbg !5212
  store i64 %conv, i64* %channel_layout, align 8, !dbg !5213
  %7 = load i32, i32* %ch_conf, align 4, !dbg !5214
  %idxprom2 = sext i32 %7 to i64, !dbg !5215
  %arrayidx3 = getelementptr inbounds [7 x i8], [7 x i8]* @channel_counts, i64 0, i64 %idxprom2, !dbg !5215
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !5215
  %conv4 = zext i8 %8 to i32, !dbg !5215
  store i32 %conv4, i32* %nchannels, align 4, !dbg !5216
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5217
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 83, !dbg !5218
  store i32 %conv4, i32* %channels, align 4, !dbg !5219
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5220
  %sample_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 2, !dbg !5221
  %11 = load i32, i32* %sample_rate, align 8, !dbg !5221
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5222
  %sample_rate5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 82, !dbg !5223
  store i32 %11, i32* %sample_rate5, align 8, !dbg !5224
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5225
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 84, !dbg !5226
  store i32 8, i32* %sample_fmt, align 8, !dbg !5227
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5228
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 143, !dbg !5229
  store i32 0, i32* %bits_per_raw_sample, align 4, !dbg !5230
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5231
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 153, !dbg !5232
  store i32 70, i32* %profile, align 4, !dbg !5233
  %16 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5234
  %bit_rate_scaled = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %16, i32 0, i32 6, !dbg !5235
  %17 = load i32, i32* %bit_rate_scaled, align 8, !dbg !5235
  %conv6 = sext i32 %17 to i64, !dbg !5234
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5236
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 9, !dbg !5237
  store i64 %conv6, i64* %bit_rate, align 8, !dbg !5238
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5239
  %flags = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %19, i32 0, i32 4, !dbg !5241
  %20 = load i32, i32* %flags, align 16, !dbg !5241
  %and7 = and i32 %20, 2, !dbg !5242
  %tobool = icmp ne i32 %and7, 0, !dbg !5242
  br i1 %tobool, label %if.then, label %if.else, !dbg !5243

if.then:                                          ; preds = %entry
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5244
  %channel_layout8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 89, !dbg !5246
  %22 = load i64, i64* %channel_layout8, align 8, !dbg !5247
  %or = or i64 %22, 8, !dbg !5247
  store i64 %or, i64* %channel_layout8, align 8, !dbg !5247
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5248
  %channels9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 83, !dbg !5249
  %24 = load i32, i32* %channels9, align 4, !dbg !5250
  %inc = add nsw i32 %24, 1, !dbg !5250
  store i32 %inc, i32* %channels9, align 4, !dbg !5250
  %25 = load i32, i32* %ch_conf, align 4, !dbg !5251
  %idxprom10 = sext i32 %25 to i64, !dbg !5252
  %arrayidx11 = getelementptr inbounds [7 x [5 x i8]], [7 x [5 x i8]]* @channel_reorder_lfe, i64 0, i64 %idxprom10, !dbg !5252
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx11, i32 0, i32 0, !dbg !5252
  store i8* %arraydecay, i8** %reorder, align 8, !dbg !5253
  br label %if.end, !dbg !5254

if.else:                                          ; preds = %entry
  %26 = load i32, i32* %ch_conf, align 4, !dbg !5255
  %idxprom12 = sext i32 %26 to i64, !dbg !5257
  %arrayidx13 = getelementptr inbounds [7 x [5 x i8]], [7 x [5 x i8]]* @channel_reorder_nolfe, i64 0, i64 %idxprom12, !dbg !5257
  %arraydecay14 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx13, i32 0, i32 0, !dbg !5257
  store i8* %arraydecay14, i8** %reorder, align 8, !dbg !5258
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %27 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5259
  %freq_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %27, i32 0, i32 9, !dbg !5260
  %28 = load i32, i32* %freq_range, align 4, !dbg !5260
  %shl = shl i32 1024, %28, !dbg !5261
  %29 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5262
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 5, !dbg !5263
  store i32 %shl, i32* %nb_samples, align 8, !dbg !5264
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5265
  %31 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5267
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %30, %struct.AVFrame* %31, i32 0), !dbg !5268
  store i32 %call, i32* %ret, align 4, !dbg !5269
  %cmp = icmp slt i32 %call, 0, !dbg !5270
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !5271

if.then16:                                        ; preds = %if.end
  %32 = load i32, i32* %ret, align 4, !dbg !5272
  store i32 %32, i32* %retval, align 4, !dbg !5273
  br label %return, !dbg !5273

if.end17:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5274
  br label %for.cond, !dbg !5276

for.cond:                                         ; preds = %for.inc, %if.end17
  %33 = load i32, i32* %i, align 4, !dbg !5277
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5280
  %nchannels18 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 7, !dbg !5281
  %35 = load i32, i32* %nchannels18, align 4, !dbg !5281
  %add = add nsw i32 %35, 1, !dbg !5282
  %div = sdiv i32 %add, 2, !dbg !5283
  %cmp19 = icmp slt i32 %33, %div, !dbg !5284
  br i1 %cmp19, label %for.body, label %for.end, !dbg !5285

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ch1, metadata !5286, metadata !2138), !dbg !5288
  %36 = load i32, i32* %i, align 4, !dbg !5289
  %mul = mul nsw i32 %36, 2, !dbg !5290
  store i32 %mul, i32* %ch1, align 4, !dbg !5288
  call void @llvm.dbg.declare(metadata i32* %ch2, metadata !5291, metadata !2138), !dbg !5292
  %37 = load i32, i32* %ch1, align 4, !dbg !5293
  %add21 = add nsw i32 %37, 1, !dbg !5294
  %38 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5295
  %nchannels22 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %38, i32 0, i32 7, !dbg !5296
  %39 = load i32, i32* %nchannels22, align 4, !dbg !5296
  %sub23 = sub nsw i32 %39, 1, !dbg !5297
  %cmp24 = icmp sgt i32 %add21, %sub23, !dbg !5298
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !5299

cond.true:                                        ; preds = %for.body
  %40 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5300
  %nchannels26 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %40, i32 0, i32 7, !dbg !5302
  %41 = load i32, i32* %nchannels26, align 4, !dbg !5302
  %sub27 = sub nsw i32 %41, 1, !dbg !5303
  br label %cond.end, !dbg !5304

cond.false:                                       ; preds = %for.body
  %42 = load i32, i32* %ch1, align 4, !dbg !5305
  %add28 = add nsw i32 %42, 1, !dbg !5307
  br label %cond.end, !dbg !5308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub27, %cond.true ], [ %add28, %cond.false ], !dbg !5309
  store i32 %cond, i32* %ch2, align 4, !dbg !5311
  %43 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5312
  %44 = load i32, i32* %ch1, align 4, !dbg !5313
  %45 = load i32, i32* %ch2, align 4, !dbg !5314
  call void @decode_grid(%struct.DCALbrDecoder* %43, i32 %44, i32 %45), !dbg !5315
  %46 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5316
  %47 = load i32, i32* %ch1, align 4, !dbg !5317
  %48 = load i32, i32* %ch2, align 4, !dbg !5318
  call void @random_ts(%struct.DCALbrDecoder* %46, i32 %47, i32 %48), !dbg !5319
  %49 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5320
  %50 = load i32, i32* %ch1, align 4, !dbg !5321
  %51 = load i32, i32* %ch2, align 4, !dbg !5322
  call void @filter_ts(%struct.DCALbrDecoder* %49, i32 %50, i32 %51), !dbg !5323
  %52 = load i32, i32* %ch1, align 4, !dbg !5324
  %53 = load i32, i32* %ch2, align 4, !dbg !5326
  %cmp29 = icmp ne i32 %52, %53, !dbg !5327
  br i1 %cmp29, label %land.lhs.true, label %if.end36, !dbg !5328

land.lhs.true:                                    ; preds = %cond.end
  %54 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5329
  %part_stereo_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %54, i32 0, i32 33, !dbg !5331
  %55 = load i8, i8* %part_stereo_pres, align 4, !dbg !5331
  %conv31 = zext i8 %55 to i32, !dbg !5329
  %56 = load i32, i32* %ch1, align 4, !dbg !5332
  %shl32 = shl i32 1, %56, !dbg !5333
  %and33 = and i32 %conv31, %shl32, !dbg !5334
  %tobool34 = icmp ne i32 %and33, 0, !dbg !5334
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !5335

if.then35:                                        ; preds = %land.lhs.true
  %57 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5336
  %58 = load i32, i32* %ch1, align 4, !dbg !5337
  %59 = load i32, i32* %ch2, align 4, !dbg !5338
  call void @decode_part_stereo(%struct.DCALbrDecoder* %57, i32 %58, i32 %59), !dbg !5339
  br label %if.end36, !dbg !5339

if.end36:                                         ; preds = %if.then35, %land.lhs.true, %cond.end
  %60 = load i32, i32* %ch1, align 4, !dbg !5340
  %61 = load i32, i32* %nchannels, align 4, !dbg !5342
  %cmp37 = icmp slt i32 %60, %61, !dbg !5343
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !5344

if.then39:                                        ; preds = %if.end36
  %62 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5345
  %63 = load i32, i32* %ch1, align 4, !dbg !5346
  %64 = load i32, i32* %ch1, align 4, !dbg !5347
  %idxprom40 = sext i32 %64 to i64, !dbg !5348
  %65 = load i8*, i8** %reorder, align 8, !dbg !5348
  %arrayidx41 = getelementptr inbounds i8, i8* %65, i64 %idxprom40, !dbg !5348
  %66 = load i8, i8* %arrayidx41, align 1, !dbg !5348
  %idxprom42 = sext i8 %66 to i64, !dbg !5349
  %67 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5349
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %67, i32 0, i32 2, !dbg !5350
  %68 = load i8**, i8*** %extended_data, align 8, !dbg !5350
  %arrayidx43 = getelementptr inbounds i8*, i8** %68, i64 %idxprom42, !dbg !5349
  %69 = load i8*, i8** %arrayidx43, align 8, !dbg !5349
  %70 = bitcast i8* %69 to float*, !dbg !5351
  call void @transform_channel(%struct.DCALbrDecoder* %62, i32 %63, float* %70), !dbg !5352
  br label %if.end44, !dbg !5352

if.end44:                                         ; preds = %if.then39, %if.end36
  %71 = load i32, i32* %ch1, align 4, !dbg !5353
  %72 = load i32, i32* %ch2, align 4, !dbg !5355
  %cmp45 = icmp ne i32 %71, %72, !dbg !5356
  br i1 %cmp45, label %land.lhs.true47, label %if.end56, !dbg !5357

land.lhs.true47:                                  ; preds = %if.end44
  %73 = load i32, i32* %ch2, align 4, !dbg !5358
  %74 = load i32, i32* %nchannels, align 4, !dbg !5360
  %cmp48 = icmp slt i32 %73, %74, !dbg !5361
  br i1 %cmp48, label %if.then50, label %if.end56, !dbg !5362

if.then50:                                        ; preds = %land.lhs.true47
  %75 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5363
  %76 = load i32, i32* %ch2, align 4, !dbg !5364
  %77 = load i32, i32* %ch2, align 4, !dbg !5365
  %idxprom51 = sext i32 %77 to i64, !dbg !5366
  %78 = load i8*, i8** %reorder, align 8, !dbg !5366
  %arrayidx52 = getelementptr inbounds i8, i8* %78, i64 %idxprom51, !dbg !5366
  %79 = load i8, i8* %arrayidx52, align 1, !dbg !5366
  %idxprom53 = sext i8 %79 to i64, !dbg !5367
  %80 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5367
  %extended_data54 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %80, i32 0, i32 2, !dbg !5368
  %81 = load i8**, i8*** %extended_data54, align 8, !dbg !5368
  %arrayidx55 = getelementptr inbounds i8*, i8** %81, i64 %idxprom53, !dbg !5367
  %82 = load i8*, i8** %arrayidx55, align 8, !dbg !5367
  %83 = bitcast i8* %82 to float*, !dbg !5369
  call void @transform_channel(%struct.DCALbrDecoder* %75, i32 %76, float* %83), !dbg !5370
  br label %if.end56, !dbg !5370

if.end56:                                         ; preds = %if.then50, %land.lhs.true47, %if.end44
  br label %for.inc, !dbg !5371

for.inc:                                          ; preds = %if.end56
  %84 = load i32, i32* %i, align 4, !dbg !5372
  %inc57 = add nsw i32 %84, 1, !dbg !5372
  store i32 %inc57, i32* %i, align 4, !dbg !5372
  br label %for.cond, !dbg !5374, !llvm.loop !5375

for.end:                                          ; preds = %for.cond
  %85 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5377
  %flags58 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %85, i32 0, i32 4, !dbg !5379
  %86 = load i32, i32* %flags58, align 16, !dbg !5379
  %and59 = and i32 %86, 2, !dbg !5380
  %tobool60 = icmp ne i32 %and59, 0, !dbg !5380
  br i1 %tobool60, label %if.then61, label %if.end72, !dbg !5381

if.then61:                                        ; preds = %for.end
  %87 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5382
  %dcadsp = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %87, i32 0, i32 51, !dbg !5384
  %88 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 16, !dbg !5384
  %lfe_iir = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %88, i32 0, i32 16, !dbg !5385
  %89 = load void (float*, float*, [4 x float]*, [2 x float]*, i64)*, void (float*, float*, [4 x float]*, [2 x float]*, i64)** %lfe_iir, align 8, !dbg !5385
  %90 = load i32, i32* %ch_conf, align 4, !dbg !5386
  %idxprom62 = sext i32 %90 to i64, !dbg !5387
  %arrayidx63 = getelementptr inbounds [7 x i8], [7 x i8]* @lfe_index, i64 0, i64 %idxprom62, !dbg !5387
  %91 = load i8, i8* %arrayidx63, align 1, !dbg !5387
  %idxprom64 = zext i8 %91 to i64, !dbg !5388
  %92 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5388
  %extended_data65 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %92, i32 0, i32 2, !dbg !5389
  %93 = load i8**, i8*** %extended_data65, align 8, !dbg !5389
  %arrayidx66 = getelementptr inbounds i8*, i8** %93, i64 %idxprom64, !dbg !5388
  %94 = load i8*, i8** %arrayidx66, align 8, !dbg !5388
  %95 = bitcast i8* %94 to float*, !dbg !5390
  %96 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5391
  %lfe_data = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %96, i32 0, i32 42, !dbg !5392
  %arraydecay67 = getelementptr inbounds [64 x float], [64 x float]* %lfe_data, i32 0, i32 0, !dbg !5391
  %97 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5393
  %lfe_history = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %97, i32 0, i32 43, !dbg !5394
  %arraydecay68 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %lfe_history, i32 0, i32 0, !dbg !5393
  %98 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5395
  %freq_range69 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %98, i32 0, i32 9, !dbg !5396
  %99 = load i32, i32* %freq_range69, align 4, !dbg !5396
  %shl70 = shl i32 16, %99, !dbg !5397
  %conv71 = sext i32 %shl70 to i64, !dbg !5398
  call void %89(float* %95, float* %arraydecay67, [4 x float]* getelementptr inbounds ([5 x [4 x float]], [5 x [4 x float]]* @ff_dca_lfe_iir, i32 0, i32 0), [2 x float]* %arraydecay68, i64 %conv71), !dbg !5382
  br label %if.end72, !dbg !5399

if.end72:                                         ; preds = %if.then61, %for.end
  %100 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !5400
  %call73 = call i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame* %100, i32 0), !dbg !5402
  store i32 %call73, i32* %ret, align 4, !dbg !5403
  %cmp74 = icmp slt i32 %call73, 0, !dbg !5404
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !5405

if.then76:                                        ; preds = %if.end72
  %101 = load i32, i32* %ret, align 4, !dbg !5406
  store i32 %101, i32* %retval, align 4, !dbg !5407
  br label %return, !dbg !5407

if.end77:                                         ; preds = %if.end72
  store i32 0, i32* %retval, align 4, !dbg !5408
  br label %return, !dbg !5408

return:                                           ; preds = %if.end77, %if.then76, %if.then16
  %102 = load i32, i32* %retval, align 4, !dbg !5409
  ret i32 %102, !dbg !5409
}

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @decode_grid(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2) #0 !dbg !5410 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %g1_sb = alloca i32, align 4
  %g1_scf_a = alloca i8*, align 8
  %g1_scf_b = alloca i8*, align 8
  %w1 = alloca i32, align 4
  %w2 = alloca i32, align 4
  %hr_scf = alloca i8*, align 8
  %scf = alloca i32, align 4
  %g3_scf = alloca i8*, align 8
  %g3_avg = alloca i32, align 4
  %scf62 = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !5413, metadata !2138), !dbg !5414
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !5415, metadata !2138), !dbg !5416
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !5417, metadata !2138), !dbg !5418
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5419, metadata !2138), !dbg !5420
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5421, metadata !2138), !dbg !5422
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !5423, metadata !2138), !dbg !5424
  %0 = load i32, i32* %ch1.addr, align 4, !dbg !5425
  store i32 %0, i32* %ch, align 4, !dbg !5427
  br label %for.cond, !dbg !5428

for.cond:                                         ; preds = %for.inc87, %entry
  %1 = load i32, i32* %ch, align 4, !dbg !5429
  %2 = load i32, i32* %ch2.addr, align 4, !dbg !5432
  %cmp = icmp sle i32 %1, %2, !dbg !5433
  br i1 %cmp, label %for.body, label %for.end89, !dbg !5434

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !5435
  br label %for.cond1, !dbg !5438

for.cond1:                                        ; preds = %for.inc84, %for.body
  %3 = load i32, i32* %sb, align 4, !dbg !5439
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5442
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 14, !dbg !5443
  %5 = load i32, i32* %nsubbands, align 8, !dbg !5443
  %cmp2 = icmp slt i32 %3, %5, !dbg !5444
  br i1 %cmp2, label %for.body3, label %for.end86, !dbg !5445

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %g1_sb, metadata !5446, metadata !2138), !dbg !5448
  %6 = load i32, i32* %sb, align 4, !dbg !5449
  %idxprom = sext i32 %6 to i64, !dbg !5450
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_scf_to_grid_1, i64 0, i64 %idxprom, !dbg !5450
  %7 = load i8, i8* %arrayidx, align 1, !dbg !5450
  %conv = zext i8 %7 to i32, !dbg !5450
  store i32 %conv, i32* %g1_sb, align 4, !dbg !5448
  call void @llvm.dbg.declare(metadata i8** %g1_scf_a, metadata !5451, metadata !2138), !dbg !5452
  %8 = load i32, i32* %g1_sb, align 4, !dbg !5453
  %idxprom4 = sext i32 %8 to i64, !dbg !5454
  %9 = load i32, i32* %ch, align 4, !dbg !5455
  %idxprom5 = sext i32 %9 to i64, !dbg !5454
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5454
  %grid_1_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 26, !dbg !5456
  %arrayidx6 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf, i64 0, i64 %idxprom5, !dbg !5454
  %arrayidx7 = getelementptr inbounds [12 x [8 x i8]], [12 x [8 x i8]]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !5454
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx7, i32 0, i32 0, !dbg !5454
  store i8* %arraydecay, i8** %g1_scf_a, align 8, !dbg !5452
  call void @llvm.dbg.declare(metadata i8** %g1_scf_b, metadata !5457, metadata !2138), !dbg !5458
  %11 = load i32, i32* %g1_sb, align 4, !dbg !5459
  %add = add nsw i32 %11, 1, !dbg !5460
  %idxprom8 = sext i32 %add to i64, !dbg !5461
  %12 = load i32, i32* %ch, align 4, !dbg !5462
  %idxprom9 = sext i32 %12 to i64, !dbg !5461
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5461
  %grid_1_scf10 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %13, i32 0, i32 26, !dbg !5463
  %arrayidx11 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf10, i64 0, i64 %idxprom9, !dbg !5461
  %arrayidx12 = getelementptr inbounds [12 x [8 x i8]], [12 x [8 x i8]]* %arrayidx11, i64 0, i64 %idxprom8, !dbg !5461
  %arraydecay13 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx12, i32 0, i32 0, !dbg !5461
  store i8* %arraydecay13, i8** %g1_scf_b, align 8, !dbg !5458
  call void @llvm.dbg.declare(metadata i32* %w1, metadata !5464, metadata !2138), !dbg !5465
  %14 = load i32, i32* %sb, align 4, !dbg !5466
  %idxprom14 = sext i32 %14 to i64, !dbg !5467
  %15 = load i32, i32* %g1_sb, align 4, !dbg !5468
  %idxprom15 = sext i32 %15 to i64, !dbg !5467
  %arrayidx16 = getelementptr inbounds [12 x [32 x i8]], [12 x [32 x i8]]* @ff_dca_grid_1_weights, i64 0, i64 %idxprom15, !dbg !5467
  %arrayidx17 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !5467
  %16 = load i8, i8* %arrayidx17, align 1, !dbg !5467
  %conv18 = zext i8 %16 to i32, !dbg !5467
  store i32 %conv18, i32* %w1, align 4, !dbg !5465
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !5469, metadata !2138), !dbg !5470
  %17 = load i32, i32* %sb, align 4, !dbg !5471
  %idxprom19 = sext i32 %17 to i64, !dbg !5472
  %18 = load i32, i32* %g1_sb, align 4, !dbg !5473
  %add20 = add nsw i32 %18, 1, !dbg !5474
  %idxprom21 = sext i32 %add20 to i64, !dbg !5472
  %arrayidx22 = getelementptr inbounds [12 x [32 x i8]], [12 x [32 x i8]]* @ff_dca_grid_1_weights, i64 0, i64 %idxprom21, !dbg !5472
  %arrayidx23 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !5472
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !5472
  %conv24 = zext i8 %19 to i32, !dbg !5472
  store i32 %conv24, i32* %w2, align 4, !dbg !5470
  call void @llvm.dbg.declare(metadata i8** %hr_scf, metadata !5475, metadata !2138), !dbg !5476
  %20 = load i32, i32* %sb, align 4, !dbg !5477
  %idxprom25 = sext i32 %20 to i64, !dbg !5478
  %21 = load i32, i32* %ch, align 4, !dbg !5479
  %idxprom26 = sext i32 %21 to i64, !dbg !5478
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5478
  %high_res_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %22, i32 0, i32 31, !dbg !5480
  %arrayidx27 = getelementptr inbounds [6 x [32 x [8 x i8]]], [6 x [32 x [8 x i8]]]* %high_res_scf, i64 0, i64 %idxprom26, !dbg !5478
  %arrayidx28 = getelementptr inbounds [32 x [8 x i8]], [32 x [8 x i8]]* %arrayidx27, i64 0, i64 %idxprom25, !dbg !5478
  %arraydecay29 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx28, i32 0, i32 0, !dbg !5478
  store i8* %arraydecay29, i8** %hr_scf, align 8, !dbg !5476
  %23 = load i32, i32* %sb, align 4, !dbg !5481
  %cmp30 = icmp slt i32 %23, 4, !dbg !5483
  br i1 %cmp30, label %if.then, label %if.else, !dbg !5484

if.then:                                          ; preds = %for.body3
  store i32 0, i32* %i, align 4, !dbg !5485
  br label %for.cond32, !dbg !5488

for.cond32:                                       ; preds = %for.inc, %if.then
  %24 = load i32, i32* %i, align 4, !dbg !5489
  %cmp33 = icmp slt i32 %24, 8, !dbg !5492
  br i1 %cmp33, label %for.body35, label %for.end, !dbg !5493

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %scf, metadata !5494, metadata !2138), !dbg !5496
  %25 = load i32, i32* %w1, align 4, !dbg !5497
  %26 = load i32, i32* %i, align 4, !dbg !5498
  %idxprom36 = sext i32 %26 to i64, !dbg !5499
  %27 = load i8*, i8** %g1_scf_a, align 8, !dbg !5499
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 %idxprom36, !dbg !5499
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !5499
  %conv38 = zext i8 %28 to i32, !dbg !5499
  %mul = mul nsw i32 %25, %conv38, !dbg !5500
  %29 = load i32, i32* %w2, align 4, !dbg !5501
  %30 = load i32, i32* %i, align 4, !dbg !5502
  %idxprom39 = sext i32 %30 to i64, !dbg !5503
  %31 = load i8*, i8** %g1_scf_b, align 8, !dbg !5503
  %arrayidx40 = getelementptr inbounds i8, i8* %31, i64 %idxprom39, !dbg !5503
  %32 = load i8, i8* %arrayidx40, align 1, !dbg !5503
  %conv41 = zext i8 %32 to i32, !dbg !5503
  %mul42 = mul nsw i32 %29, %conv41, !dbg !5504
  %add43 = add nsw i32 %mul, %mul42, !dbg !5505
  store i32 %add43, i32* %scf, align 4, !dbg !5496
  %33 = load i32, i32* %scf, align 4, !dbg !5506
  %shr = ashr i32 %33, 7, !dbg !5507
  %conv44 = trunc i32 %shr to i8, !dbg !5506
  %34 = load i32, i32* %i, align 4, !dbg !5508
  %idxprom45 = sext i32 %34 to i64, !dbg !5509
  %35 = load i8*, i8** %hr_scf, align 8, !dbg !5509
  %arrayidx46 = getelementptr inbounds i8, i8* %35, i64 %idxprom45, !dbg !5509
  store i8 %conv44, i8* %arrayidx46, align 1, !dbg !5510
  br label %for.inc, !dbg !5511

for.inc:                                          ; preds = %for.body35
  %36 = load i32, i32* %i, align 4, !dbg !5512
  %inc = add nsw i32 %36, 1, !dbg !5512
  store i32 %inc, i32* %i, align 4, !dbg !5512
  br label %for.cond32, !dbg !5514, !llvm.loop !5515

for.end:                                          ; preds = %for.cond32
  br label %if.end, !dbg !5517

if.else:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata i8** %g3_scf, metadata !5518, metadata !2138), !dbg !5520
  %37 = load i32, i32* %sb, align 4, !dbg !5521
  %sub = sub nsw i32 %37, 4, !dbg !5522
  %idxprom47 = sext i32 %sub to i64, !dbg !5523
  %38 = load i32, i32* %ch, align 4, !dbg !5524
  %idxprom48 = sext i32 %38 to i64, !dbg !5523
  %39 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5523
  %grid_3_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %39, i32 0, i32 29, !dbg !5525
  %arrayidx49 = getelementptr inbounds [6 x [28 x [8 x i8]]], [6 x [28 x [8 x i8]]]* %grid_3_scf, i64 0, i64 %idxprom48, !dbg !5523
  %arrayidx50 = getelementptr inbounds [28 x [8 x i8]], [28 x [8 x i8]]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !5523
  %arraydecay51 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx50, i32 0, i32 0, !dbg !5523
  store i8* %arraydecay51, i8** %g3_scf, align 8, !dbg !5520
  call void @llvm.dbg.declare(metadata i32* %g3_avg, metadata !5526, metadata !2138), !dbg !5527
  %40 = load i32, i32* %sb, align 4, !dbg !5528
  %sub52 = sub nsw i32 %40, 4, !dbg !5529
  %idxprom53 = sext i32 %sub52 to i64, !dbg !5530
  %41 = load i32, i32* %ch, align 4, !dbg !5531
  %idxprom54 = sext i32 %41 to i64, !dbg !5530
  %42 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5530
  %grid_3_avg = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %42, i32 0, i32 28, !dbg !5532
  %arrayidx55 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg, i64 0, i64 %idxprom54, !dbg !5530
  %arrayidx56 = getelementptr inbounds [28 x i8], [28 x i8]* %arrayidx55, i64 0, i64 %idxprom53, !dbg !5530
  %43 = load i8, i8* %arrayidx56, align 1, !dbg !5530
  %conv57 = sext i8 %43 to i32, !dbg !5530
  store i32 %conv57, i32* %g3_avg, align 4, !dbg !5527
  store i32 0, i32* %i, align 4, !dbg !5533
  br label %for.cond58, !dbg !5535

for.cond58:                                       ; preds = %for.inc81, %if.else
  %44 = load i32, i32* %i, align 4, !dbg !5536
  %cmp59 = icmp slt i32 %44, 8, !dbg !5539
  br i1 %cmp59, label %for.body61, label %for.end83, !dbg !5540

for.body61:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata i32* %scf62, metadata !5541, metadata !2138), !dbg !5543
  %45 = load i32, i32* %w1, align 4, !dbg !5544
  %46 = load i32, i32* %i, align 4, !dbg !5545
  %idxprom63 = sext i32 %46 to i64, !dbg !5546
  %47 = load i8*, i8** %g1_scf_a, align 8, !dbg !5546
  %arrayidx64 = getelementptr inbounds i8, i8* %47, i64 %idxprom63, !dbg !5546
  %48 = load i8, i8* %arrayidx64, align 1, !dbg !5546
  %conv65 = zext i8 %48 to i32, !dbg !5546
  %mul66 = mul nsw i32 %45, %conv65, !dbg !5547
  %49 = load i32, i32* %w2, align 4, !dbg !5548
  %50 = load i32, i32* %i, align 4, !dbg !5549
  %idxprom67 = sext i32 %50 to i64, !dbg !5550
  %51 = load i8*, i8** %g1_scf_b, align 8, !dbg !5550
  %arrayidx68 = getelementptr inbounds i8, i8* %51, i64 %idxprom67, !dbg !5550
  %52 = load i8, i8* %arrayidx68, align 1, !dbg !5550
  %conv69 = zext i8 %52 to i32, !dbg !5550
  %mul70 = mul nsw i32 %49, %conv69, !dbg !5551
  %add71 = add nsw i32 %mul66, %mul70, !dbg !5552
  store i32 %add71, i32* %scf62, align 4, !dbg !5543
  %53 = load i32, i32* %scf62, align 4, !dbg !5553
  %shr72 = ashr i32 %53, 7, !dbg !5554
  %54 = load i32, i32* %g3_avg, align 4, !dbg !5555
  %sub73 = sub nsw i32 %shr72, %54, !dbg !5556
  %55 = load i32, i32* %i, align 4, !dbg !5557
  %idxprom74 = sext i32 %55 to i64, !dbg !5558
  %56 = load i8*, i8** %g3_scf, align 8, !dbg !5558
  %arrayidx75 = getelementptr inbounds i8, i8* %56, i64 %idxprom74, !dbg !5558
  %57 = load i8, i8* %arrayidx75, align 1, !dbg !5558
  %conv76 = sext i8 %57 to i32, !dbg !5558
  %sub77 = sub nsw i32 %sub73, %conv76, !dbg !5559
  %conv78 = trunc i32 %sub77 to i8, !dbg !5560
  %58 = load i32, i32* %i, align 4, !dbg !5561
  %idxprom79 = sext i32 %58 to i64, !dbg !5562
  %59 = load i8*, i8** %hr_scf, align 8, !dbg !5562
  %arrayidx80 = getelementptr inbounds i8, i8* %59, i64 %idxprom79, !dbg !5562
  store i8 %conv78, i8* %arrayidx80, align 1, !dbg !5563
  br label %for.inc81, !dbg !5564

for.inc81:                                        ; preds = %for.body61
  %60 = load i32, i32* %i, align 4, !dbg !5565
  %inc82 = add nsw i32 %60, 1, !dbg !5565
  store i32 %inc82, i32* %i, align 4, !dbg !5565
  br label %for.cond58, !dbg !5567, !llvm.loop !5568

for.end83:                                        ; preds = %for.cond58
  br label %if.end

if.end:                                           ; preds = %for.end83, %for.end
  br label %for.inc84, !dbg !5570

for.inc84:                                        ; preds = %if.end
  %61 = load i32, i32* %sb, align 4, !dbg !5571
  %inc85 = add nsw i32 %61, 1, !dbg !5571
  store i32 %inc85, i32* %sb, align 4, !dbg !5571
  br label %for.cond1, !dbg !5573, !llvm.loop !5574

for.end86:                                        ; preds = %for.cond1
  br label %for.inc87, !dbg !5576

for.inc87:                                        ; preds = %for.end86
  %62 = load i32, i32* %ch, align 4, !dbg !5577
  %inc88 = add nsw i32 %62, 1, !dbg !5577
  store i32 %inc88, i32* %ch, align 4, !dbg !5577
  br label %for.cond, !dbg !5579, !llvm.loop !5580

for.end89:                                        ; preds = %for.cond
  ret void, !dbg !5582
}

; Function Attrs: nounwind uwtable
define internal void @random_ts(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2) #0 !dbg !5583 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %samples = alloca float*, align 8
  %accum = alloca [8 x float], align 16
  %other = alloca float*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !5584, metadata !2138), !dbg !5585
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !5586, metadata !2138), !dbg !5587
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !5588, metadata !2138), !dbg !5589
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5590, metadata !2138), !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5592, metadata !2138), !dbg !5593
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5594, metadata !2138), !dbg !5595
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5596, metadata !2138), !dbg !5597
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !5598, metadata !2138), !dbg !5599
  %0 = load i32, i32* %ch1.addr, align 4, !dbg !5600
  store i32 %0, i32* %ch, align 4, !dbg !5602
  br label %for.cond, !dbg !5603

for.cond:                                         ; preds = %for.inc70, %entry
  %1 = load i32, i32* %ch, align 4, !dbg !5604
  %2 = load i32, i32* %ch2.addr, align 4, !dbg !5607
  %cmp = icmp sle i32 %1, %2, !dbg !5608
  br i1 %cmp, label %for.body, label %for.end72, !dbg !5609

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !5610
  br label %for.cond1, !dbg !5613

for.cond1:                                        ; preds = %for.inc67, %for.body
  %3 = load i32, i32* %sb, align 4, !dbg !5614
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5617
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 14, !dbg !5618
  %5 = load i32, i32* %nsubbands, align 8, !dbg !5618
  %cmp2 = icmp slt i32 %3, %5, !dbg !5619
  br i1 %cmp2, label %for.body3, label %for.end69, !dbg !5620

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata float** %samples, metadata !5621, metadata !2138), !dbg !5623
  %6 = load i32, i32* %sb, align 4, !dbg !5624
  %idxprom = sext i32 %6 to i64, !dbg !5625
  %7 = load i32, i32* %ch, align 4, !dbg !5626
  %idxprom4 = sext i32 %7 to i64, !dbg !5625
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5625
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 36, !dbg !5627
  %arrayidx = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom4, !dbg !5625
  %arrayidx5 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx, i64 0, i64 %idxprom, !dbg !5625
  %9 = load float*, float** %arrayidx5, align 8, !dbg !5625
  store float* %9, float** %samples, align 8, !dbg !5623
  %10 = load i32, i32* %ch, align 4, !dbg !5628
  %idxprom6 = sext i32 %10 to i64, !dbg !5630
  %11 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5630
  %ch_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %11, i32 0, i32 25, !dbg !5631
  %arrayidx7 = getelementptr inbounds [6 x i32], [6 x i32]* %ch_pres, i64 0, i64 %idxprom6, !dbg !5630
  %12 = load i32, i32* %arrayidx7, align 4, !dbg !5630
  %13 = load i32, i32* %sb, align 4, !dbg !5632
  %shl = shl i32 1, %13, !dbg !5633
  %and = and i32 %12, %shl, !dbg !5634
  %tobool = icmp ne i32 %and, 0, !dbg !5634
  br i1 %tobool, label %if.then, label %if.end, !dbg !5635

if.then:                                          ; preds = %for.body3
  br label %for.inc67, !dbg !5636

if.end:                                           ; preds = %for.body3
  %14 = load i32, i32* %sb, align 4, !dbg !5637
  %cmp8 = icmp slt i32 %14, 2, !dbg !5639
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !5640

if.then9:                                         ; preds = %if.end
  %15 = load float*, float** %samples, align 8, !dbg !5641
  %16 = bitcast float* %15 to i8*, !dbg !5643
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 512, i32 4, i1 false), !dbg !5643
  br label %if.end66, !dbg !5644

if.else:                                          ; preds = %if.end
  %17 = load i32, i32* %sb, align 4, !dbg !5645
  %cmp10 = icmp slt i32 %17, 10, !dbg !5648
  br i1 %cmp10, label %if.then11, label %if.else17, !dbg !5645

if.then11:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !5649
  br label %for.cond12, !dbg !5652

for.cond12:                                       ; preds = %for.inc, %if.then11
  %18 = load i32, i32* %i, align 4, !dbg !5653
  %cmp13 = icmp slt i32 %18, 128, !dbg !5656
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !5657

for.body14:                                       ; preds = %for.cond12
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5658
  %20 = load i32, i32* %sb, align 4, !dbg !5659
  %call = call float @lbr_rand(%struct.DCALbrDecoder* %19, i32 %20), !dbg !5660
  %21 = load i32, i32* %i, align 4, !dbg !5661
  %idxprom15 = sext i32 %21 to i64, !dbg !5662
  %22 = load float*, float** %samples, align 8, !dbg !5662
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 %idxprom15, !dbg !5662
  store float %call, float* %arrayidx16, align 4, !dbg !5663
  br label %for.inc, !dbg !5662

for.inc:                                          ; preds = %for.body14
  %23 = load i32, i32* %i, align 4, !dbg !5664
  %inc = add nsw i32 %23, 1, !dbg !5664
  store i32 %inc, i32* %i, align 4, !dbg !5664
  br label %for.cond12, !dbg !5666, !llvm.loop !5667

for.end:                                          ; preds = %for.cond12
  br label %if.end65, !dbg !5669

if.else17:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !5670
  br label %for.cond18, !dbg !5673

for.cond18:                                       ; preds = %for.inc62, %if.else17
  %24 = load i32, i32* %i, align 4, !dbg !5674
  %cmp19 = icmp slt i32 %24, 16, !dbg !5677
  br i1 %cmp19, label %for.body20, label %for.end64, !dbg !5678

for.body20:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata [8 x float]* %accum, metadata !5679, metadata !2138), !dbg !5682
  %25 = bitcast [8 x float]* %accum to i8*, !dbg !5682
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 32, i32 16, i1 false), !dbg !5682
  store i32 2, i32* %k, align 4, !dbg !5683
  br label %for.cond21, !dbg !5685

for.cond21:                                       ; preds = %for.inc44, %for.body20
  %26 = load i32, i32* %k, align 4, !dbg !5686
  %cmp22 = icmp slt i32 %26, 6, !dbg !5689
  br i1 %cmp22, label %for.body23, label %for.end46, !dbg !5690

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata float** %other, metadata !5691, metadata !2138), !dbg !5693
  %27 = load i32, i32* %i, align 4, !dbg !5694
  %mul = mul nsw i32 %27, 8, !dbg !5695
  %idxprom24 = sext i32 %mul to i64, !dbg !5696
  %28 = load i32, i32* %k, align 4, !dbg !5697
  %idxprom25 = sext i32 %28 to i64, !dbg !5696
  %29 = load i32, i32* %ch, align 4, !dbg !5698
  %idxprom26 = sext i32 %29 to i64, !dbg !5696
  %30 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5696
  %time_samples27 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %30, i32 0, i32 36, !dbg !5699
  %arrayidx28 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples27, i64 0, i64 %idxprom26, !dbg !5696
  %arrayidx29 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx28, i64 0, i64 %idxprom25, !dbg !5696
  %31 = load float*, float** %arrayidx29, align 8, !dbg !5696
  %arrayidx30 = getelementptr inbounds float, float* %31, i64 %idxprom24, !dbg !5696
  store float* %arrayidx30, float** %other, align 8, !dbg !5693
  store i32 0, i32* %j, align 4, !dbg !5700
  br label %for.cond31, !dbg !5702

for.cond31:                                       ; preds = %for.inc41, %for.body23
  %32 = load i32, i32* %j, align 4, !dbg !5703
  %cmp32 = icmp slt i32 %32, 8, !dbg !5706
  br i1 %cmp32, label %for.body33, label %for.end43, !dbg !5707

for.body33:                                       ; preds = %for.cond31
  %33 = load i32, i32* %j, align 4, !dbg !5708
  %idxprom34 = sext i32 %33 to i64, !dbg !5709
  %34 = load float*, float** %other, align 8, !dbg !5709
  %arrayidx35 = getelementptr inbounds float, float* %34, i64 %idxprom34, !dbg !5709
  %35 = load float, float* %arrayidx35, align 4, !dbg !5709
  %conv = fpext float %35 to double, !dbg !5709
  %call36 = call double @fabs(double %conv) #1, !dbg !5710
  %36 = load i32, i32* %j, align 4, !dbg !5711
  %idxprom37 = sext i32 %36 to i64, !dbg !5712
  %arrayidx38 = getelementptr inbounds [8 x float], [8 x float]* %accum, i64 0, i64 %idxprom37, !dbg !5712
  %37 = load float, float* %arrayidx38, align 4, !dbg !5713
  %conv39 = fpext float %37 to double, !dbg !5713
  %add = fadd double %conv39, %call36, !dbg !5713
  %conv40 = fptrunc double %add to float, !dbg !5713
  store float %conv40, float* %arrayidx38, align 4, !dbg !5713
  br label %for.inc41, !dbg !5712

for.inc41:                                        ; preds = %for.body33
  %38 = load i32, i32* %j, align 4, !dbg !5714
  %inc42 = add nsw i32 %38, 1, !dbg !5714
  store i32 %inc42, i32* %j, align 4, !dbg !5714
  br label %for.cond31, !dbg !5716, !llvm.loop !5717

for.end43:                                        ; preds = %for.cond31
  br label %for.inc44, !dbg !5719

for.inc44:                                        ; preds = %for.end43
  %39 = load i32, i32* %k, align 4, !dbg !5720
  %inc45 = add nsw i32 %39, 1, !dbg !5720
  store i32 %inc45, i32* %k, align 4, !dbg !5720
  br label %for.cond21, !dbg !5722, !llvm.loop !5723

for.end46:                                        ; preds = %for.cond21
  store i32 0, i32* %j, align 4, !dbg !5725
  br label %for.cond47, !dbg !5727

for.cond47:                                       ; preds = %for.inc59, %for.end46
  %40 = load i32, i32* %j, align 4, !dbg !5728
  %cmp48 = icmp slt i32 %40, 8, !dbg !5731
  br i1 %cmp48, label %for.body50, label %for.end61, !dbg !5732

for.body50:                                       ; preds = %for.cond47
  %41 = load i32, i32* %j, align 4, !dbg !5733
  %idxprom51 = sext i32 %41 to i64, !dbg !5734
  %arrayidx52 = getelementptr inbounds [8 x float], [8 x float]* %accum, i64 0, i64 %idxprom51, !dbg !5734
  %42 = load float, float* %arrayidx52, align 4, !dbg !5734
  %mul53 = fmul float %42, 2.500000e-01, !dbg !5735
  %add54 = fadd float %mul53, 5.000000e-01, !dbg !5736
  %43 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5737
  %44 = load i32, i32* %sb, align 4, !dbg !5738
  %call55 = call float @lbr_rand(%struct.DCALbrDecoder* %43, i32 %44), !dbg !5739
  %mul56 = fmul float %add54, %call55, !dbg !5740
  %45 = load i32, i32* %j, align 4, !dbg !5741
  %idxprom57 = sext i32 %45 to i64, !dbg !5742
  %46 = load float*, float** %samples, align 8, !dbg !5742
  %arrayidx58 = getelementptr inbounds float, float* %46, i64 %idxprom57, !dbg !5742
  store float %mul56, float* %arrayidx58, align 4, !dbg !5743
  br label %for.inc59, !dbg !5742

for.inc59:                                        ; preds = %for.body50
  %47 = load i32, i32* %j, align 4, !dbg !5744
  %inc60 = add nsw i32 %47, 1, !dbg !5744
  store i32 %inc60, i32* %j, align 4, !dbg !5744
  br label %for.cond47, !dbg !5746, !llvm.loop !5747

for.end61:                                        ; preds = %for.cond47
  br label %for.inc62, !dbg !5749

for.inc62:                                        ; preds = %for.end61
  %48 = load i32, i32* %i, align 4, !dbg !5750
  %inc63 = add nsw i32 %48, 1, !dbg !5750
  store i32 %inc63, i32* %i, align 4, !dbg !5750
  %49 = load float*, float** %samples, align 8, !dbg !5752
  %add.ptr = getelementptr inbounds float, float* %49, i64 8, !dbg !5752
  store float* %add.ptr, float** %samples, align 8, !dbg !5752
  br label %for.cond18, !dbg !5753, !llvm.loop !5754

for.end64:                                        ; preds = %for.cond18
  br label %if.end65

if.end65:                                         ; preds = %for.end64, %for.end
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then9
  br label %for.inc67, !dbg !5756

for.inc67:                                        ; preds = %if.end66, %if.then
  %50 = load i32, i32* %sb, align 4, !dbg !5757
  %inc68 = add nsw i32 %50, 1, !dbg !5757
  store i32 %inc68, i32* %sb, align 4, !dbg !5757
  br label %for.cond1, !dbg !5759, !llvm.loop !5760

for.end69:                                        ; preds = %for.cond1
  br label %for.inc70, !dbg !5762

for.inc70:                                        ; preds = %for.end69
  %51 = load i32, i32* %ch, align 4, !dbg !5763
  %inc71 = add nsw i32 %51, 1, !dbg !5763
  store i32 %inc71, i32* %ch, align 4, !dbg !5763
  br label %for.cond, !dbg !5765, !llvm.loop !5766

for.end72:                                        ; preds = %for.cond
  ret void, !dbg !5768
}

; Function Attrs: nounwind uwtable
define internal void @filter_ts(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2) #0 !dbg !5769 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sb = alloca i32, align 4
  %ch = alloca i32, align 4
  %samples = alloca float*, align 8
  %hr_scf = alloca i8*, align 8
  %scf = alloca i32, align 4
  %g2_scf = alloca i8*, align 8
  %scf41 = alloca i32, align 4
  %samples_l = alloca float*, align 8
  %samples_r = alloca float*, align 8
  %ch2_pres = alloca i32, align 4
  %sbms = alloca i32, align 4
  %lrms = alloca i32, align 4
  %tmp = alloca float, align 4
  %tmp131 = alloca float, align 4
  %tmp191 = alloca float, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !5770, metadata !2138), !dbg !5771
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !5772, metadata !2138), !dbg !5773
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !5774, metadata !2138), !dbg !5775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5776, metadata !2138), !dbg !5777
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5778, metadata !2138), !dbg !5779
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !5780, metadata !2138), !dbg !5781
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5782, metadata !2138), !dbg !5783
  store i32 0, i32* %sb, align 4, !dbg !5784
  br label %for.cond, !dbg !5786

for.cond:                                         ; preds = %for.inc220, %entry
  %0 = load i32, i32* %sb, align 4, !dbg !5787
  %1 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5790
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %1, i32 0, i32 14, !dbg !5791
  %2 = load i32, i32* %nsubbands, align 8, !dbg !5791
  %cmp = icmp slt i32 %0, %2, !dbg !5792
  br i1 %cmp, label %for.body, label %for.end222, !dbg !5793

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ch1.addr, align 4, !dbg !5794
  store i32 %3, i32* %ch, align 4, !dbg !5797
  br label %for.cond1, !dbg !5798

for.cond1:                                        ; preds = %for.inc65, %for.body
  %4 = load i32, i32* %ch, align 4, !dbg !5799
  %5 = load i32, i32* %ch2.addr, align 4, !dbg !5802
  %cmp2 = icmp sle i32 %4, %5, !dbg !5803
  br i1 %cmp2, label %for.body3, label %for.end67, !dbg !5804

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata float** %samples, metadata !5805, metadata !2138), !dbg !5807
  %6 = load i32, i32* %sb, align 4, !dbg !5808
  %idxprom = sext i32 %6 to i64, !dbg !5809
  %7 = load i32, i32* %ch, align 4, !dbg !5810
  %idxprom4 = sext i32 %7 to i64, !dbg !5809
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5809
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 36, !dbg !5811
  %arrayidx = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom4, !dbg !5809
  %arrayidx5 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx, i64 0, i64 %idxprom, !dbg !5809
  %9 = load float*, float** %arrayidx5, align 8, !dbg !5809
  store float* %9, float** %samples, align 8, !dbg !5807
  call void @llvm.dbg.declare(metadata i8** %hr_scf, metadata !5812, metadata !2138), !dbg !5813
  %10 = load i32, i32* %sb, align 4, !dbg !5814
  %idxprom6 = sext i32 %10 to i64, !dbg !5815
  %11 = load i32, i32* %ch, align 4, !dbg !5816
  %idxprom7 = sext i32 %11 to i64, !dbg !5815
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5815
  %high_res_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 31, !dbg !5817
  %arrayidx8 = getelementptr inbounds [6 x [32 x [8 x i8]]], [6 x [32 x [8 x i8]]]* %high_res_scf, i64 0, i64 %idxprom7, !dbg !5815
  %arrayidx9 = getelementptr inbounds [32 x [8 x i8]], [32 x [8 x i8]]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !5815
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx9, i32 0, i32 0, !dbg !5815
  store i8* %arraydecay, i8** %hr_scf, align 8, !dbg !5813
  %13 = load i32, i32* %sb, align 4, !dbg !5818
  %cmp10 = icmp slt i32 %13, 4, !dbg !5820
  br i1 %cmp10, label %if.then, label %if.else, !dbg !5821

if.then:                                          ; preds = %for.body3
  store i32 0, i32* %i, align 4, !dbg !5822
  br label %for.cond11, !dbg !5825

for.cond11:                                       ; preds = %for.inc27, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !5826
  %cmp12 = icmp slt i32 %14, 8, !dbg !5829
  br i1 %cmp12, label %for.body13, label %for.end29, !dbg !5830

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i32* %scf, metadata !5831, metadata !2138), !dbg !5833
  %15 = load i32, i32* %i, align 4, !dbg !5834
  %idxprom14 = sext i32 %15 to i64, !dbg !5835
  %16 = load i8*, i8** %hr_scf, align 8, !dbg !5835
  %arrayidx15 = getelementptr inbounds i8, i8* %16, i64 %idxprom14, !dbg !5835
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !5835
  %conv = zext i8 %17 to i32, !dbg !5835
  store i32 %conv, i32* %scf, align 4, !dbg !5833
  %18 = load i32, i32* %scf, align 4, !dbg !5836
  %cmp16 = icmp ugt i32 %18, 56, !dbg !5838
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !5839

if.then18:                                        ; preds = %for.body13
  store i32 56, i32* %scf, align 4, !dbg !5840
  br label %if.end, !dbg !5841

if.end:                                           ; preds = %if.then18, %for.body13
  store i32 0, i32* %j, align 4, !dbg !5842
  br label %for.cond19, !dbg !5844

for.cond19:                                       ; preds = %for.inc, %if.end
  %19 = load i32, i32* %j, align 4, !dbg !5845
  %cmp20 = icmp slt i32 %19, 16, !dbg !5848
  br i1 %cmp20, label %for.body22, label %for.end, !dbg !5849

for.body22:                                       ; preds = %for.cond19
  %20 = load i32, i32* %scf, align 4, !dbg !5850
  %idxprom23 = zext i32 %20 to i64, !dbg !5851
  %arrayidx24 = getelementptr inbounds [57 x float], [57 x float]* @ff_dca_quant_amp, i64 0, i64 %idxprom23, !dbg !5851
  %21 = load float, float* %arrayidx24, align 4, !dbg !5851
  %22 = load i32, i32* %j, align 4, !dbg !5852
  %idxprom25 = sext i32 %22 to i64, !dbg !5853
  %23 = load float*, float** %samples, align 8, !dbg !5853
  %arrayidx26 = getelementptr inbounds float, float* %23, i64 %idxprom25, !dbg !5853
  %24 = load float, float* %arrayidx26, align 4, !dbg !5854
  %mul = fmul float %24, %21, !dbg !5854
  store float %mul, float* %arrayidx26, align 4, !dbg !5854
  br label %for.inc, !dbg !5853

for.inc:                                          ; preds = %for.body22
  %25 = load i32, i32* %j, align 4, !dbg !5855
  %inc = add nsw i32 %25, 1, !dbg !5855
  store i32 %inc, i32* %j, align 4, !dbg !5855
  br label %for.cond19, !dbg !5857, !llvm.loop !5858

for.end:                                          ; preds = %for.cond19
  br label %for.inc27, !dbg !5860

for.inc27:                                        ; preds = %for.end
  %26 = load i32, i32* %i, align 4, !dbg !5861
  %inc28 = add nsw i32 %26, 1, !dbg !5861
  store i32 %inc28, i32* %i, align 4, !dbg !5861
  %27 = load float*, float** %samples, align 8, !dbg !5863
  %add.ptr = getelementptr inbounds float, float* %27, i64 16, !dbg !5863
  store float* %add.ptr, float** %samples, align 8, !dbg !5863
  br label %for.cond11, !dbg !5864, !llvm.loop !5865

for.end29:                                        ; preds = %for.cond11
  br label %if.end64, !dbg !5867

if.else:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata i8** %g2_scf, metadata !5868, metadata !2138), !dbg !5870
  %28 = load i32, i32* %sb, align 4, !dbg !5871
  %idxprom30 = sext i32 %28 to i64, !dbg !5872
  %arrayidx31 = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_scf_to_grid_2, i64 0, i64 %idxprom30, !dbg !5872
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !5872
  %idxprom32 = zext i8 %29 to i64, !dbg !5873
  %30 = load i32, i32* %ch, align 4, !dbg !5874
  %idxprom33 = sext i32 %30 to i64, !dbg !5873
  %31 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5873
  %grid_2_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %31, i32 0, i32 27, !dbg !5875
  %arrayidx34 = getelementptr inbounds [6 x [3 x [64 x i8]]], [6 x [3 x [64 x i8]]]* %grid_2_scf, i64 0, i64 %idxprom33, !dbg !5873
  %arrayidx35 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx34, i64 0, i64 %idxprom32, !dbg !5873
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx35, i32 0, i32 0, !dbg !5873
  store i8* %arraydecay36, i8** %g2_scf, align 8, !dbg !5870
  store i32 0, i32* %i, align 4, !dbg !5876
  br label %for.cond37, !dbg !5878

for.cond37:                                       ; preds = %for.inc60, %if.else
  %32 = load i32, i32* %i, align 4, !dbg !5879
  %cmp38 = icmp slt i32 %32, 64, !dbg !5882
  br i1 %cmp38, label %for.body40, label %for.end63, !dbg !5883

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i32* %scf41, metadata !5884, metadata !2138), !dbg !5886
  %33 = load i32, i32* %i, align 4, !dbg !5887
  %div = sdiv i32 %33, 8, !dbg !5888
  %idxprom42 = sext i32 %div to i64, !dbg !5889
  %34 = load i8*, i8** %hr_scf, align 8, !dbg !5889
  %arrayidx43 = getelementptr inbounds i8, i8* %34, i64 %idxprom42, !dbg !5889
  %35 = load i8, i8* %arrayidx43, align 1, !dbg !5889
  %conv44 = zext i8 %35 to i32, !dbg !5889
  %36 = load i32, i32* %i, align 4, !dbg !5890
  %idxprom45 = sext i32 %36 to i64, !dbg !5891
  %37 = load i8*, i8** %g2_scf, align 8, !dbg !5891
  %arrayidx46 = getelementptr inbounds i8, i8* %37, i64 %idxprom45, !dbg !5891
  %38 = load i8, i8* %arrayidx46, align 1, !dbg !5891
  %conv47 = zext i8 %38 to i32, !dbg !5891
  %sub = sub nsw i32 %conv44, %conv47, !dbg !5892
  store i32 %sub, i32* %scf41, align 4, !dbg !5886
  %39 = load i32, i32* %scf41, align 4, !dbg !5893
  %cmp48 = icmp ugt i32 %39, 56, !dbg !5895
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !5896

if.then50:                                        ; preds = %for.body40
  store i32 56, i32* %scf41, align 4, !dbg !5897
  br label %if.end51, !dbg !5898

if.end51:                                         ; preds = %if.then50, %for.body40
  %40 = load i32, i32* %scf41, align 4, !dbg !5899
  %idxprom52 = zext i32 %40 to i64, !dbg !5900
  %arrayidx53 = getelementptr inbounds [57 x float], [57 x float]* @ff_dca_quant_amp, i64 0, i64 %idxprom52, !dbg !5900
  %41 = load float, float* %arrayidx53, align 4, !dbg !5900
  %42 = load float*, float** %samples, align 8, !dbg !5901
  %arrayidx54 = getelementptr inbounds float, float* %42, i64 0, !dbg !5901
  %43 = load float, float* %arrayidx54, align 4, !dbg !5902
  %mul55 = fmul float %43, %41, !dbg !5902
  store float %mul55, float* %arrayidx54, align 4, !dbg !5902
  %44 = load i32, i32* %scf41, align 4, !dbg !5903
  %idxprom56 = zext i32 %44 to i64, !dbg !5904
  %arrayidx57 = getelementptr inbounds [57 x float], [57 x float]* @ff_dca_quant_amp, i64 0, i64 %idxprom56, !dbg !5904
  %45 = load float, float* %arrayidx57, align 4, !dbg !5904
  %46 = load float*, float** %samples, align 8, !dbg !5905
  %arrayidx58 = getelementptr inbounds float, float* %46, i64 1, !dbg !5905
  %47 = load float, float* %arrayidx58, align 4, !dbg !5906
  %mul59 = fmul float %47, %45, !dbg !5906
  store float %mul59, float* %arrayidx58, align 4, !dbg !5906
  br label %for.inc60, !dbg !5907

for.inc60:                                        ; preds = %if.end51
  %48 = load i32, i32* %i, align 4, !dbg !5908
  %inc61 = add nsw i32 %48, 1, !dbg !5908
  store i32 %inc61, i32* %i, align 4, !dbg !5908
  %49 = load float*, float** %samples, align 8, !dbg !5910
  %add.ptr62 = getelementptr inbounds float, float* %49, i64 2, !dbg !5910
  store float* %add.ptr62, float** %samples, align 8, !dbg !5910
  br label %for.cond37, !dbg !5911, !llvm.loop !5912

for.end63:                                        ; preds = %for.cond37
  br label %if.end64

if.end64:                                         ; preds = %for.end63, %for.end29
  br label %for.inc65, !dbg !5914

for.inc65:                                        ; preds = %if.end64
  %50 = load i32, i32* %ch, align 4, !dbg !5915
  %inc66 = add nsw i32 %50, 1, !dbg !5915
  store i32 %inc66, i32* %ch, align 4, !dbg !5915
  br label %for.cond1, !dbg !5917, !llvm.loop !5918

for.end67:                                        ; preds = %for.cond1
  %51 = load i32, i32* %ch1.addr, align 4, !dbg !5920
  %52 = load i32, i32* %ch2.addr, align 4, !dbg !5922
  %cmp68 = icmp ne i32 %51, %52, !dbg !5923
  br i1 %cmp68, label %if.then70, label %if.end215, !dbg !5924

if.then70:                                        ; preds = %for.end67
  call void @llvm.dbg.declare(metadata float** %samples_l, metadata !5925, metadata !2138), !dbg !5927
  %53 = load i32, i32* %sb, align 4, !dbg !5928
  %idxprom71 = sext i32 %53 to i64, !dbg !5929
  %54 = load i32, i32* %ch1.addr, align 4, !dbg !5930
  %idxprom72 = sext i32 %54 to i64, !dbg !5929
  %55 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5929
  %time_samples73 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %55, i32 0, i32 36, !dbg !5931
  %arrayidx74 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples73, i64 0, i64 %idxprom72, !dbg !5929
  %arrayidx75 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx74, i64 0, i64 %idxprom71, !dbg !5929
  %56 = load float*, float** %arrayidx75, align 8, !dbg !5929
  store float* %56, float** %samples_l, align 8, !dbg !5927
  call void @llvm.dbg.declare(metadata float** %samples_r, metadata !5932, metadata !2138), !dbg !5933
  %57 = load i32, i32* %sb, align 4, !dbg !5934
  %idxprom76 = sext i32 %57 to i64, !dbg !5935
  %58 = load i32, i32* %ch2.addr, align 4, !dbg !5936
  %idxprom77 = sext i32 %58 to i64, !dbg !5935
  %59 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5935
  %time_samples78 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %59, i32 0, i32 36, !dbg !5937
  %arrayidx79 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples78, i64 0, i64 %idxprom77, !dbg !5935
  %arrayidx80 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx79, i64 0, i64 %idxprom76, !dbg !5935
  %60 = load float*, float** %arrayidx80, align 8, !dbg !5935
  store float* %60, float** %samples_r, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata i32* %ch2_pres, metadata !5938, metadata !2138), !dbg !5939
  %61 = load i32, i32* %ch2.addr, align 4, !dbg !5940
  %idxprom81 = sext i32 %61 to i64, !dbg !5941
  %62 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5941
  %ch_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %62, i32 0, i32 25, !dbg !5942
  %arrayidx82 = getelementptr inbounds [6 x i32], [6 x i32]* %ch_pres, i64 0, i64 %idxprom81, !dbg !5941
  %63 = load i32, i32* %arrayidx82, align 4, !dbg !5941
  %64 = load i32, i32* %sb, align 4, !dbg !5943
  %shl = shl i32 1, %64, !dbg !5944
  %and = and i32 %63, %shl, !dbg !5945
  store i32 %and, i32* %ch2_pres, align 4, !dbg !5939
  store i32 0, i32* %i, align 4, !dbg !5946
  br label %for.cond83, !dbg !5948

for.cond83:                                       ; preds = %for.inc212, %if.then70
  %65 = load i32, i32* %i, align 4, !dbg !5949
  %cmp84 = icmp slt i32 %65, 8, !dbg !5952
  br i1 %cmp84, label %for.body86, label %for.end214, !dbg !5953

for.body86:                                       ; preds = %for.cond83
  call void @llvm.dbg.declare(metadata i32* %sbms, metadata !5954, metadata !2138), !dbg !5956
  %66 = load i32, i32* %sb, align 4, !dbg !5957
  %idxprom87 = sext i32 %66 to i64, !dbg !5958
  %67 = load i32, i32* %ch1.addr, align 4, !dbg !5959
  %div88 = sdiv i32 %67, 2, !dbg !5960
  %idxprom89 = sext i32 %div88 to i64, !dbg !5958
  %68 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5958
  %sec_ch_sbms = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %68, i32 0, i32 23, !dbg !5961
  %arrayidx90 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %sec_ch_sbms, i64 0, i64 %idxprom89, !dbg !5958
  %arrayidx91 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx90, i64 0, i64 %idxprom87, !dbg !5958
  %69 = load i8, i8* %arrayidx91, align 1, !dbg !5958
  %conv92 = zext i8 %69 to i32, !dbg !5958
  %70 = load i32, i32* %i, align 4, !dbg !5962
  %shr = ashr i32 %conv92, %70, !dbg !5963
  %and93 = and i32 %shr, 1, !dbg !5964
  store i32 %and93, i32* %sbms, align 4, !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %lrms, metadata !5965, metadata !2138), !dbg !5966
  %71 = load i32, i32* %sb, align 4, !dbg !5967
  %idxprom94 = sext i32 %71 to i64, !dbg !5968
  %72 = load i32, i32* %ch1.addr, align 4, !dbg !5969
  %div95 = sdiv i32 %72, 2, !dbg !5970
  %idxprom96 = sext i32 %div95 to i64, !dbg !5968
  %73 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5968
  %sec_ch_lrms = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %73, i32 0, i32 24, !dbg !5971
  %arrayidx97 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %sec_ch_lrms, i64 0, i64 %idxprom96, !dbg !5968
  %arrayidx98 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx97, i64 0, i64 %idxprom94, !dbg !5968
  %74 = load i8, i8* %arrayidx98, align 1, !dbg !5968
  %conv99 = zext i8 %74 to i32, !dbg !5968
  %75 = load i32, i32* %i, align 4, !dbg !5972
  %shr100 = ashr i32 %conv99, %75, !dbg !5973
  %and101 = and i32 %shr100, 1, !dbg !5974
  store i32 %and101, i32* %lrms, align 4, !dbg !5966
  %76 = load i32, i32* %sb, align 4, !dbg !5975
  %77 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !5977
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %77, i32 0, i32 16, !dbg !5978
  %78 = load i32, i32* %min_mono_subband, align 32, !dbg !5978
  %cmp102 = icmp sge i32 %76, %78, !dbg !5979
  br i1 %cmp102, label %if.then104, label %if.else181, !dbg !5980

if.then104:                                       ; preds = %for.body86
  %79 = load i32, i32* %lrms, align 4, !dbg !5981
  %tobool = icmp ne i32 %79, 0, !dbg !5981
  br i1 %tobool, label %land.lhs.true, label %if.else144, !dbg !5984

land.lhs.true:                                    ; preds = %if.then104
  %80 = load i32, i32* %ch2_pres, align 4, !dbg !5985
  %tobool105 = icmp ne i32 %80, 0, !dbg !5985
  br i1 %tobool105, label %if.then106, label %if.else144, !dbg !5987

if.then106:                                       ; preds = %land.lhs.true
  %81 = load i32, i32* %sbms, align 4, !dbg !5988
  %tobool107 = icmp ne i32 %81, 0, !dbg !5988
  br i1 %tobool107, label %if.then108, label %if.else125, !dbg !5991

if.then108:                                       ; preds = %if.then106
  store i32 0, i32* %j, align 4, !dbg !5992
  br label %for.cond109, !dbg !5995

for.cond109:                                      ; preds = %for.inc122, %if.then108
  %82 = load i32, i32* %j, align 4, !dbg !5996
  %cmp110 = icmp slt i32 %82, 16, !dbg !5999
  br i1 %cmp110, label %for.body112, label %for.end124, !dbg !6000

for.body112:                                      ; preds = %for.cond109
  call void @llvm.dbg.declare(metadata float* %tmp, metadata !6001, metadata !2138), !dbg !6003
  %83 = load i32, i32* %j, align 4, !dbg !6004
  %idxprom113 = sext i32 %83 to i64, !dbg !6005
  %84 = load float*, float** %samples_l, align 8, !dbg !6005
  %arrayidx114 = getelementptr inbounds float, float* %84, i64 %idxprom113, !dbg !6005
  %85 = load float, float* %arrayidx114, align 4, !dbg !6005
  store float %85, float* %tmp, align 4, !dbg !6003
  %86 = load i32, i32* %j, align 4, !dbg !6006
  %idxprom115 = sext i32 %86 to i64, !dbg !6007
  %87 = load float*, float** %samples_r, align 8, !dbg !6007
  %arrayidx116 = getelementptr inbounds float, float* %87, i64 %idxprom115, !dbg !6007
  %88 = load float, float* %arrayidx116, align 4, !dbg !6007
  %89 = load i32, i32* %j, align 4, !dbg !6008
  %idxprom117 = sext i32 %89 to i64, !dbg !6009
  %90 = load float*, float** %samples_l, align 8, !dbg !6009
  %arrayidx118 = getelementptr inbounds float, float* %90, i64 %idxprom117, !dbg !6009
  store float %88, float* %arrayidx118, align 4, !dbg !6010
  %91 = load float, float* %tmp, align 4, !dbg !6011
  %sub119 = fsub float -0.000000e+00, %91, !dbg !6012
  %92 = load i32, i32* %j, align 4, !dbg !6013
  %idxprom120 = sext i32 %92 to i64, !dbg !6014
  %93 = load float*, float** %samples_r, align 8, !dbg !6014
  %arrayidx121 = getelementptr inbounds float, float* %93, i64 %idxprom120, !dbg !6014
  store float %sub119, float* %arrayidx121, align 4, !dbg !6015
  br label %for.inc122, !dbg !6016

for.inc122:                                       ; preds = %for.body112
  %94 = load i32, i32* %j, align 4, !dbg !6017
  %inc123 = add nsw i32 %94, 1, !dbg !6017
  store i32 %inc123, i32* %j, align 4, !dbg !6017
  br label %for.cond109, !dbg !6019, !llvm.loop !6020

for.end124:                                       ; preds = %for.cond109
  br label %if.end143, !dbg !6022

if.else125:                                       ; preds = %if.then106
  store i32 0, i32* %j, align 4, !dbg !6023
  br label %for.cond126, !dbg !6026

for.cond126:                                      ; preds = %for.inc140, %if.else125
  %95 = load i32, i32* %j, align 4, !dbg !6027
  %cmp127 = icmp slt i32 %95, 16, !dbg !6030
  br i1 %cmp127, label %for.body129, label %for.end142, !dbg !6031

for.body129:                                      ; preds = %for.cond126
  call void @llvm.dbg.declare(metadata float* %tmp131, metadata !6032, metadata !2138), !dbg !6034
  %96 = load i32, i32* %j, align 4, !dbg !6035
  %idxprom132 = sext i32 %96 to i64, !dbg !6036
  %97 = load float*, float** %samples_l, align 8, !dbg !6036
  %arrayidx133 = getelementptr inbounds float, float* %97, i64 %idxprom132, !dbg !6036
  %98 = load float, float* %arrayidx133, align 4, !dbg !6036
  store float %98, float* %tmp131, align 4, !dbg !6034
  %99 = load i32, i32* %j, align 4, !dbg !6037
  %idxprom134 = sext i32 %99 to i64, !dbg !6038
  %100 = load float*, float** %samples_r, align 8, !dbg !6038
  %arrayidx135 = getelementptr inbounds float, float* %100, i64 %idxprom134, !dbg !6038
  %101 = load float, float* %arrayidx135, align 4, !dbg !6038
  %102 = load i32, i32* %j, align 4, !dbg !6039
  %idxprom136 = sext i32 %102 to i64, !dbg !6040
  %103 = load float*, float** %samples_l, align 8, !dbg !6040
  %arrayidx137 = getelementptr inbounds float, float* %103, i64 %idxprom136, !dbg !6040
  store float %101, float* %arrayidx137, align 4, !dbg !6041
  %104 = load float, float* %tmp131, align 4, !dbg !6042
  %105 = load i32, i32* %j, align 4, !dbg !6043
  %idxprom138 = sext i32 %105 to i64, !dbg !6044
  %106 = load float*, float** %samples_r, align 8, !dbg !6044
  %arrayidx139 = getelementptr inbounds float, float* %106, i64 %idxprom138, !dbg !6044
  store float %104, float* %arrayidx139, align 4, !dbg !6045
  br label %for.inc140, !dbg !6046

for.inc140:                                       ; preds = %for.body129
  %107 = load i32, i32* %j, align 4, !dbg !6047
  %inc141 = add nsw i32 %107, 1, !dbg !6047
  store i32 %inc141, i32* %j, align 4, !dbg !6047
  br label %for.cond126, !dbg !6049, !llvm.loop !6050

for.end142:                                       ; preds = %for.cond126
  br label %if.end143

if.end143:                                        ; preds = %for.end142, %for.end124
  br label %if.end180, !dbg !6052

if.else144:                                       ; preds = %land.lhs.true, %if.then104
  %108 = load i32, i32* %ch2_pres, align 4, !dbg !6053
  %tobool145 = icmp ne i32 %108, 0, !dbg !6053
  br i1 %tobool145, label %if.end179, label %if.then146, !dbg !6056

if.then146:                                       ; preds = %if.else144
  %109 = load i32, i32* %sbms, align 4, !dbg !6057
  %tobool147 = icmp ne i32 %109, 0, !dbg !6057
  br i1 %tobool147, label %land.lhs.true148, label %if.else166, !dbg !6060

land.lhs.true148:                                 ; preds = %if.then146
  %110 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6061
  %part_stereo_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %110, i32 0, i32 33, !dbg !6063
  %111 = load i8, i8* %part_stereo_pres, align 4, !dbg !6063
  %conv149 = zext i8 %111 to i32, !dbg !6061
  %112 = load i32, i32* %ch1.addr, align 4, !dbg !6064
  %shl150 = shl i32 1, %112, !dbg !6065
  %and151 = and i32 %conv149, %shl150, !dbg !6066
  %tobool152 = icmp ne i32 %and151, 0, !dbg !6066
  br i1 %tobool152, label %if.then153, label %if.else166, !dbg !6067

if.then153:                                       ; preds = %land.lhs.true148
  store i32 0, i32* %j, align 4, !dbg !6068
  br label %for.cond154, !dbg !6071

for.cond154:                                      ; preds = %for.inc163, %if.then153
  %113 = load i32, i32* %j, align 4, !dbg !6072
  %cmp155 = icmp slt i32 %113, 16, !dbg !6075
  br i1 %cmp155, label %for.body157, label %for.end165, !dbg !6076

for.body157:                                      ; preds = %for.cond154
  %114 = load i32, i32* %j, align 4, !dbg !6077
  %idxprom158 = sext i32 %114 to i64, !dbg !6078
  %115 = load float*, float** %samples_l, align 8, !dbg !6078
  %arrayidx159 = getelementptr inbounds float, float* %115, i64 %idxprom158, !dbg !6078
  %116 = load float, float* %arrayidx159, align 4, !dbg !6078
  %sub160 = fsub float -0.000000e+00, %116, !dbg !6079
  %117 = load i32, i32* %j, align 4, !dbg !6080
  %idxprom161 = sext i32 %117 to i64, !dbg !6081
  %118 = load float*, float** %samples_r, align 8, !dbg !6081
  %arrayidx162 = getelementptr inbounds float, float* %118, i64 %idxprom161, !dbg !6081
  store float %sub160, float* %arrayidx162, align 4, !dbg !6082
  br label %for.inc163, !dbg !6081

for.inc163:                                       ; preds = %for.body157
  %119 = load i32, i32* %j, align 4, !dbg !6083
  %inc164 = add nsw i32 %119, 1, !dbg !6083
  store i32 %inc164, i32* %j, align 4, !dbg !6083
  br label %for.cond154, !dbg !6085, !llvm.loop !6086

for.end165:                                       ; preds = %for.cond154
  br label %if.end178, !dbg !6088

if.else166:                                       ; preds = %land.lhs.true148, %if.then146
  store i32 0, i32* %j, align 4, !dbg !6089
  br label %for.cond167, !dbg !6092

for.cond167:                                      ; preds = %for.inc175, %if.else166
  %120 = load i32, i32* %j, align 4, !dbg !6093
  %cmp168 = icmp slt i32 %120, 16, !dbg !6096
  br i1 %cmp168, label %for.body170, label %for.end177, !dbg !6097

for.body170:                                      ; preds = %for.cond167
  %121 = load i32, i32* %j, align 4, !dbg !6098
  %idxprom171 = sext i32 %121 to i64, !dbg !6099
  %122 = load float*, float** %samples_l, align 8, !dbg !6099
  %arrayidx172 = getelementptr inbounds float, float* %122, i64 %idxprom171, !dbg !6099
  %123 = load float, float* %arrayidx172, align 4, !dbg !6099
  %124 = load i32, i32* %j, align 4, !dbg !6100
  %idxprom173 = sext i32 %124 to i64, !dbg !6101
  %125 = load float*, float** %samples_r, align 8, !dbg !6101
  %arrayidx174 = getelementptr inbounds float, float* %125, i64 %idxprom173, !dbg !6101
  store float %123, float* %arrayidx174, align 4, !dbg !6102
  br label %for.inc175, !dbg !6101

for.inc175:                                       ; preds = %for.body170
  %126 = load i32, i32* %j, align 4, !dbg !6103
  %inc176 = add nsw i32 %126, 1, !dbg !6103
  store i32 %inc176, i32* %j, align 4, !dbg !6103
  br label %for.cond167, !dbg !6105, !llvm.loop !6106

for.end177:                                       ; preds = %for.cond167
  br label %if.end178

if.end178:                                        ; preds = %for.end177, %for.end165
  br label %if.end179, !dbg !6108

if.end179:                                        ; preds = %if.end178, %if.else144
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end143
  br label %if.end209, !dbg !6109

if.else181:                                       ; preds = %for.body86
  %127 = load i32, i32* %sbms, align 4, !dbg !6110
  %tobool182 = icmp ne i32 %127, 0, !dbg !6110
  br i1 %tobool182, label %land.lhs.true183, label %if.end208, !dbg !6113

land.lhs.true183:                                 ; preds = %if.else181
  %128 = load i32, i32* %ch2_pres, align 4, !dbg !6114
  %tobool184 = icmp ne i32 %128, 0, !dbg !6114
  br i1 %tobool184, label %if.then185, label %if.end208, !dbg !6116

if.then185:                                       ; preds = %land.lhs.true183
  store i32 0, i32* %j, align 4, !dbg !6117
  br label %for.cond186, !dbg !6120

for.cond186:                                      ; preds = %for.inc205, %if.then185
  %129 = load i32, i32* %j, align 4, !dbg !6121
  %cmp187 = icmp slt i32 %129, 16, !dbg !6124
  br i1 %cmp187, label %for.body189, label %for.end207, !dbg !6125

for.body189:                                      ; preds = %for.cond186
  call void @llvm.dbg.declare(metadata float* %tmp191, metadata !6126, metadata !2138), !dbg !6128
  %130 = load i32, i32* %j, align 4, !dbg !6129
  %idxprom192 = sext i32 %130 to i64, !dbg !6130
  %131 = load float*, float** %samples_l, align 8, !dbg !6130
  %arrayidx193 = getelementptr inbounds float, float* %131, i64 %idxprom192, !dbg !6130
  %132 = load float, float* %arrayidx193, align 4, !dbg !6130
  store float %132, float* %tmp191, align 4, !dbg !6128
  %133 = load float, float* %tmp191, align 4, !dbg !6131
  %134 = load i32, i32* %j, align 4, !dbg !6132
  %idxprom194 = sext i32 %134 to i64, !dbg !6133
  %135 = load float*, float** %samples_r, align 8, !dbg !6133
  %arrayidx195 = getelementptr inbounds float, float* %135, i64 %idxprom194, !dbg !6133
  %136 = load float, float* %arrayidx195, align 4, !dbg !6133
  %add = fadd float %133, %136, !dbg !6134
  %mul196 = fmul float %add, 5.000000e-01, !dbg !6135
  %137 = load i32, i32* %j, align 4, !dbg !6136
  %idxprom197 = sext i32 %137 to i64, !dbg !6137
  %138 = load float*, float** %samples_l, align 8, !dbg !6137
  %arrayidx198 = getelementptr inbounds float, float* %138, i64 %idxprom197, !dbg !6137
  store float %mul196, float* %arrayidx198, align 4, !dbg !6138
  %139 = load float, float* %tmp191, align 4, !dbg !6139
  %140 = load i32, i32* %j, align 4, !dbg !6140
  %idxprom199 = sext i32 %140 to i64, !dbg !6141
  %141 = load float*, float** %samples_r, align 8, !dbg !6141
  %arrayidx200 = getelementptr inbounds float, float* %141, i64 %idxprom199, !dbg !6141
  %142 = load float, float* %arrayidx200, align 4, !dbg !6141
  %sub201 = fsub float %139, %142, !dbg !6142
  %mul202 = fmul float %sub201, 5.000000e-01, !dbg !6143
  %143 = load i32, i32* %j, align 4, !dbg !6144
  %idxprom203 = sext i32 %143 to i64, !dbg !6145
  %144 = load float*, float** %samples_r, align 8, !dbg !6145
  %arrayidx204 = getelementptr inbounds float, float* %144, i64 %idxprom203, !dbg !6145
  store float %mul202, float* %arrayidx204, align 4, !dbg !6146
  br label %for.inc205, !dbg !6147

for.inc205:                                       ; preds = %for.body189
  %145 = load i32, i32* %j, align 4, !dbg !6148
  %inc206 = add nsw i32 %145, 1, !dbg !6148
  store i32 %inc206, i32* %j, align 4, !dbg !6148
  br label %for.cond186, !dbg !6150, !llvm.loop !6151

for.end207:                                       ; preds = %for.cond186
  br label %if.end208, !dbg !6153

if.end208:                                        ; preds = %for.end207, %land.lhs.true183, %if.else181
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end180
  %146 = load float*, float** %samples_l, align 8, !dbg !6154
  %add.ptr210 = getelementptr inbounds float, float* %146, i64 16, !dbg !6154
  store float* %add.ptr210, float** %samples_l, align 8, !dbg !6154
  %147 = load float*, float** %samples_r, align 8, !dbg !6155
  %add.ptr211 = getelementptr inbounds float, float* %147, i64 16, !dbg !6155
  store float* %add.ptr211, float** %samples_r, align 8, !dbg !6155
  br label %for.inc212, !dbg !6156

for.inc212:                                       ; preds = %if.end209
  %148 = load i32, i32* %i, align 4, !dbg !6157
  %inc213 = add nsw i32 %148, 1, !dbg !6157
  store i32 %inc213, i32* %i, align 4, !dbg !6157
  br label %for.cond83, !dbg !6159, !llvm.loop !6160

for.end214:                                       ; preds = %for.cond83
  br label %if.end215, !dbg !6162

if.end215:                                        ; preds = %for.end214, %for.end67
  %149 = load i32, i32* %sb, align 4, !dbg !6163
  %cmp216 = icmp slt i32 %149, 3, !dbg !6165
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !6166

if.then218:                                       ; preds = %if.end215
  %150 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6167
  %151 = load i32, i32* %ch1.addr, align 4, !dbg !6168
  %152 = load i32, i32* %ch2.addr, align 4, !dbg !6169
  %153 = load i32, i32* %sb, align 4, !dbg !6170
  call void @synth_lpc(%struct.DCALbrDecoder* %150, i32 %151, i32 %152, i32 %153), !dbg !6171
  br label %if.end219, !dbg !6171

if.end219:                                        ; preds = %if.then218, %if.end215
  br label %for.inc220, !dbg !6172

for.inc220:                                       ; preds = %if.end219
  %154 = load i32, i32* %sb, align 4, !dbg !6173
  %inc221 = add nsw i32 %154, 1, !dbg !6173
  store i32 %inc221, i32* %sb, align 4, !dbg !6173
  br label %for.cond, !dbg !6175, !llvm.loop !6176

for.end222:                                       ; preds = %for.cond
  ret void, !dbg !6178
}

; Function Attrs: nounwind uwtable
define internal void @decode_part_stereo(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2) #0 !dbg !6179 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %sf = alloca i32, align 4
  %pt_st = alloca i8*, align 8
  %samples = alloca float*, align 8
  %prev = alloca float, align 4
  %next = alloca float, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6180, metadata !2138), !dbg !6181
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !6182, metadata !2138), !dbg !6183
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !6184, metadata !2138), !dbg !6185
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6186, metadata !2138), !dbg !6187
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6188, metadata !2138), !dbg !6189
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6190, metadata !2138), !dbg !6191
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !6192, metadata !2138), !dbg !6193
  %0 = load i32, i32* %ch1.addr, align 4, !dbg !6194
  store i32 %0, i32* %ch, align 4, !dbg !6196
  br label %for.cond, !dbg !6197

for.cond:                                         ; preds = %for.inc40, %entry
  %1 = load i32, i32* %ch, align 4, !dbg !6198
  %2 = load i32, i32* %ch2.addr, align 4, !dbg !6201
  %cmp = icmp sle i32 %1, %2, !dbg !6202
  br i1 %cmp, label %for.body, label %for.end42, !dbg !6203

for.body:                                         ; preds = %for.cond
  %3 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6204
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %3, i32 0, i32 16, !dbg !6207
  %4 = load i32, i32* %min_mono_subband, align 32, !dbg !6207
  store i32 %4, i32* %sb, align 4, !dbg !6208
  br label %for.cond1, !dbg !6209

for.cond1:                                        ; preds = %for.inc37, %for.body
  %5 = load i32, i32* %sb, align 4, !dbg !6210
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6213
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 14, !dbg !6214
  %7 = load i32, i32* %nsubbands, align 8, !dbg !6214
  %cmp2 = icmp slt i32 %5, %7, !dbg !6215
  br i1 %cmp2, label %for.body3, label %for.end39, !dbg !6216

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i8** %pt_st, metadata !6217, metadata !2138), !dbg !6219
  %8 = load i32, i32* %sb, align 4, !dbg !6220
  %9 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6221
  %min_mono_subband4 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %9, i32 0, i32 16, !dbg !6222
  %10 = load i32, i32* %min_mono_subband4, align 32, !dbg !6222
  %sub = sub nsw i32 %8, %10, !dbg !6223
  %div = sdiv i32 %sub, 4, !dbg !6224
  %idxprom = sext i32 %div to i64, !dbg !6225
  %11 = load i32, i32* %ch, align 4, !dbg !6226
  %idxprom5 = sext i32 %11 to i64, !dbg !6225
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6225
  %part_stereo = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 32, !dbg !6227
  %arrayidx = getelementptr inbounds [6 x [8 x [5 x i8]]], [6 x [8 x [5 x i8]]]* %part_stereo, i64 0, i64 %idxprom5, !dbg !6225
  %arrayidx6 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* %arrayidx, i64 0, i64 %idxprom, !dbg !6225
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx6, i32 0, i32 0, !dbg !6225
  store i8* %arraydecay, i8** %pt_st, align 8, !dbg !6219
  call void @llvm.dbg.declare(metadata float** %samples, metadata !6228, metadata !2138), !dbg !6229
  %13 = load i32, i32* %sb, align 4, !dbg !6230
  %idxprom7 = sext i32 %13 to i64, !dbg !6231
  %14 = load i32, i32* %ch, align 4, !dbg !6232
  %idxprom8 = sext i32 %14 to i64, !dbg !6231
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6231
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 36, !dbg !6233
  %arrayidx9 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom8, !dbg !6231
  %arrayidx10 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx9, i64 0, i64 %idxprom7, !dbg !6231
  %16 = load float*, float** %arrayidx10, align 8, !dbg !6231
  store float* %16, float** %samples, align 8, !dbg !6229
  %17 = load i32, i32* %ch2.addr, align 4, !dbg !6234
  %idxprom11 = sext i32 %17 to i64, !dbg !6236
  %18 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6236
  %ch_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %18, i32 0, i32 25, !dbg !6237
  %arrayidx12 = getelementptr inbounds [6 x i32], [6 x i32]* %ch_pres, i64 0, i64 %idxprom11, !dbg !6236
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !6236
  %20 = load i32, i32* %sb, align 4, !dbg !6238
  %shl = shl i32 1, %20, !dbg !6239
  %and = and i32 %19, %shl, !dbg !6240
  %tobool = icmp ne i32 %and, 0, !dbg !6240
  br i1 %tobool, label %if.then, label %if.end, !dbg !6241

if.then:                                          ; preds = %for.body3
  br label %for.inc37, !dbg !6242

if.end:                                           ; preds = %for.body3
  store i32 1, i32* %sf, align 4, !dbg !6243
  br label %for.cond13, !dbg !6245

for.cond13:                                       ; preds = %for.inc34, %if.end
  %21 = load i32, i32* %sf, align 4, !dbg !6246
  %cmp14 = icmp sle i32 %21, 4, !dbg !6249
  br i1 %cmp14, label %for.body15, label %for.end36, !dbg !6250

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata float* %prev, metadata !6251, metadata !2138), !dbg !6253
  %22 = load i32, i32* %sf, align 4, !dbg !6254
  %sub16 = sub nsw i32 %22, 1, !dbg !6255
  %idxprom17 = sext i32 %sub16 to i64, !dbg !6256
  %23 = load i8*, i8** %pt_st, align 8, !dbg !6256
  %arrayidx18 = getelementptr inbounds i8, i8* %23, i64 %idxprom17, !dbg !6256
  %24 = load i8, i8* %arrayidx18, align 1, !dbg !6256
  %idxprom19 = zext i8 %24 to i64, !dbg !6257
  %arrayidx20 = getelementptr inbounds [34 x float], [34 x float]* @ff_dca_st_coeff, i64 0, i64 %idxprom19, !dbg !6257
  %25 = load float, float* %arrayidx20, align 4, !dbg !6257
  store float %25, float* %prev, align 4, !dbg !6253
  call void @llvm.dbg.declare(metadata float* %next, metadata !6258, metadata !2138), !dbg !6259
  %26 = load i32, i32* %sf, align 4, !dbg !6260
  %idxprom21 = sext i32 %26 to i64, !dbg !6261
  %27 = load i8*, i8** %pt_st, align 8, !dbg !6261
  %arrayidx22 = getelementptr inbounds i8, i8* %27, i64 %idxprom21, !dbg !6261
  %28 = load i8, i8* %arrayidx22, align 1, !dbg !6261
  %idxprom23 = zext i8 %28 to i64, !dbg !6262
  %arrayidx24 = getelementptr inbounds [34 x float], [34 x float]* @ff_dca_st_coeff, i64 0, i64 %idxprom23, !dbg !6262
  %29 = load float, float* %arrayidx24, align 4, !dbg !6262
  store float %29, float* %next, align 4, !dbg !6259
  store i32 0, i32* %i, align 4, !dbg !6263
  br label %for.cond25, !dbg !6265

for.cond25:                                       ; preds = %for.inc, %for.body15
  %30 = load i32, i32* %i, align 4, !dbg !6266
  %cmp26 = icmp slt i32 %30, 32, !dbg !6269
  br i1 %cmp26, label %for.body27, label %for.end, !dbg !6270

for.body27:                                       ; preds = %for.cond25
  %31 = load i32, i32* %i, align 4, !dbg !6271
  %sub28 = sub nsw i32 32, %31, !dbg !6272
  %conv = sitofp i32 %sub28 to float, !dbg !6273
  %32 = load float, float* %prev, align 4, !dbg !6274
  %mul = fmul float %conv, %32, !dbg !6275
  %33 = load i32, i32* %i, align 4, !dbg !6276
  %conv29 = sitofp i32 %33 to float, !dbg !6276
  %34 = load float, float* %next, align 4, !dbg !6277
  %mul30 = fmul float %conv29, %34, !dbg !6278
  %add = fadd float %mul, %mul30, !dbg !6279
  %35 = load i32, i32* %i, align 4, !dbg !6280
  %idxprom31 = sext i32 %35 to i64, !dbg !6281
  %36 = load float*, float** %samples, align 8, !dbg !6281
  %arrayidx32 = getelementptr inbounds float, float* %36, i64 %idxprom31, !dbg !6281
  %37 = load float, float* %arrayidx32, align 4, !dbg !6282
  %mul33 = fmul float %37, %add, !dbg !6282
  store float %mul33, float* %arrayidx32, align 4, !dbg !6282
  br label %for.inc, !dbg !6281

for.inc:                                          ; preds = %for.body27
  %38 = load i32, i32* %i, align 4, !dbg !6283
  %inc = add nsw i32 %38, 1, !dbg !6283
  store i32 %inc, i32* %i, align 4, !dbg !6283
  br label %for.cond25, !dbg !6285, !llvm.loop !6286

for.end:                                          ; preds = %for.cond25
  br label %for.inc34, !dbg !6288

for.inc34:                                        ; preds = %for.end
  %39 = load i32, i32* %sf, align 4, !dbg !6289
  %inc35 = add nsw i32 %39, 1, !dbg !6289
  store i32 %inc35, i32* %sf, align 4, !dbg !6289
  %40 = load float*, float** %samples, align 8, !dbg !6291
  %add.ptr = getelementptr inbounds float, float* %40, i64 32, !dbg !6291
  store float* %add.ptr, float** %samples, align 8, !dbg !6291
  br label %for.cond13, !dbg !6292, !llvm.loop !6293

for.end36:                                        ; preds = %for.cond13
  br label %for.inc37, !dbg !6295

for.inc37:                                        ; preds = %for.end36, %if.then
  %41 = load i32, i32* %sb, align 4, !dbg !6296
  %inc38 = add nsw i32 %41, 1, !dbg !6296
  store i32 %inc38, i32* %sb, align 4, !dbg !6296
  br label %for.cond1, !dbg !6298, !llvm.loop !6299

for.end39:                                        ; preds = %for.cond1
  br label %for.inc40, !dbg !6301

for.inc40:                                        ; preds = %for.end39
  %42 = load i32, i32* %ch, align 4, !dbg !6302
  %inc41 = add nsw i32 %42, 1, !dbg !6302
  store i32 %inc41, i32* %ch, align 4, !dbg !6302
  br label %for.cond, !dbg !6304, !llvm.loop !6305

for.end42:                                        ; preds = %for.cond
  ret void, !dbg !6307
}

; Function Attrs: nounwind uwtable
define internal void @transform_channel(%struct.DCALbrDecoder* %s, i32 %ch, float* %output) #0 !dbg !6308 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch.addr = alloca i32, align 4
  %output.addr = alloca float*, align 8
  %la_values = alloca [32 x [4 x float]], align 32
  %values = alloca [4 x float]*, align 8
  %la_result = alloca [64 x [4 x float]], align 32
  %result = alloca [4 x float]*, align 8
  %sf = alloca i32, align 4
  %sb = alloca i32, align 4
  %nsubbands = alloca i32, align 4
  %noutsubbands = alloca i32, align 4
  %samples = alloca float*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6311, metadata !2138), !dbg !6312
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !6313, metadata !2138), !dbg !6314
  store float* %output, float** %output.addr, align 8
  call void @llvm.dbg.declare(metadata float** %output.addr, metadata !6315, metadata !2138), !dbg !6316
  call void @llvm.dbg.declare(metadata [32 x [4 x float]]* %la_values, metadata !6317, metadata !2138), !dbg !6320
  call void @llvm.dbg.declare(metadata [4 x float]** %values, metadata !6321, metadata !2138), !dbg !6322
  %arraydecay = getelementptr inbounds [32 x [4 x float]], [32 x [4 x float]]* %la_values, i32 0, i32 0, !dbg !6323
  store [4 x float]* %arraydecay, [4 x float]** %values, align 8, !dbg !6322
  call void @llvm.dbg.declare(metadata [64 x [4 x float]]* %la_result, metadata !6324, metadata !2138), !dbg !6327
  call void @llvm.dbg.declare(metadata [4 x float]** %result, metadata !6328, metadata !2138), !dbg !6329
  %arraydecay1 = getelementptr inbounds [64 x [4 x float]], [64 x [4 x float]]* %la_result, i32 0, i32 0, !dbg !6330
  store [4 x float]* %arraydecay1, [4 x float]** %result, align 8, !dbg !6329
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !6331, metadata !2138), !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6333, metadata !2138), !dbg !6334
  call void @llvm.dbg.declare(metadata i32* %nsubbands, metadata !6335, metadata !2138), !dbg !6336
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6337
  %nsubbands2 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 14, !dbg !6338
  %1 = load i32, i32* %nsubbands2, align 8, !dbg !6338
  store i32 %1, i32* %nsubbands, align 4, !dbg !6336
  call void @llvm.dbg.declare(metadata i32* %noutsubbands, metadata !6339, metadata !2138), !dbg !6340
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6341
  %freq_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 9, !dbg !6342
  %3 = load i32, i32* %freq_range, align 4, !dbg !6342
  %shl = shl i32 8, %3, !dbg !6343
  store i32 %shl, i32* %noutsubbands, align 4, !dbg !6340
  %4 = load i32, i32* %nsubbands, align 4, !dbg !6344
  %5 = load i32, i32* %noutsubbands, align 4, !dbg !6346
  %cmp = icmp slt i32 %4, %5, !dbg !6347
  br i1 %cmp, label %if.then, label %if.end, !dbg !6348

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %nsubbands, align 4, !dbg !6349
  %idxprom = sext i32 %6 to i64, !dbg !6350
  %7 = load [4 x float]*, [4 x float]** %values, align 8, !dbg !6350
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %7, i64 %idxprom, !dbg !6350
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i32 0, i32 0, !dbg !6351
  %8 = bitcast float* %arraydecay3 to i8*, !dbg !6351
  %9 = load i32, i32* %noutsubbands, align 4, !dbg !6352
  %10 = load i32, i32* %nsubbands, align 4, !dbg !6353
  %sub = sub nsw i32 %9, %10, !dbg !6354
  %conv = sext i32 %sub to i64, !dbg !6355
  %mul = mul i64 %conv, 16, !dbg !6356
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %mul, i32 4, i1 false), !dbg !6351
  br label %if.end, !dbg !6351

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %sf, align 4, !dbg !6357
  br label %for.cond, !dbg !6359

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %sf, align 4, !dbg !6360
  %cmp4 = icmp slt i32 %11, 32, !dbg !6363
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6364

for.body:                                         ; preds = %for.cond
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6365
  %dcadsp = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 51, !dbg !6367
  %13 = load %struct.DCADSPContext*, %struct.DCADSPContext** %dcadsp, align 16, !dbg !6367
  %lbr_bank = getelementptr inbounds %struct.DCADSPContext, %struct.DCADSPContext* %13, i32 0, i32 15, !dbg !6368
  %14 = load void ([4 x float]*, float**, float*, i64, i64)*, void ([4 x float]*, float**, float*, i64, i64)** %lbr_bank, align 8, !dbg !6368
  %15 = load [4 x float]*, [4 x float]** %values, align 8, !dbg !6369
  %16 = load i32, i32* %ch.addr, align 4, !dbg !6370
  %idxprom6 = sext i32 %16 to i64, !dbg !6371
  %17 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6371
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %17, i32 0, i32 36, !dbg !6372
  %arrayidx7 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom6, !dbg !6371
  %arraydecay8 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx7, i32 0, i32 0, !dbg !6371
  %18 = load i32, i32* %sf, align 4, !dbg !6373
  %mul9 = mul nsw i32 %18, 4, !dbg !6374
  %conv10 = sext i32 %mul9 to i64, !dbg !6373
  %19 = load i32, i32* %nsubbands, align 4, !dbg !6375
  %conv11 = sext i32 %19 to i64, !dbg !6375
  call void %14([4 x float]* %15, float** %arraydecay8, float* getelementptr inbounds ([10 x float], [10 x float]* @ff_dca_bank_coeff, i32 0, i32 0), i64 %conv10, i64 %conv11), !dbg !6365
  %20 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6376
  %21 = load i32, i32* %ch.addr, align 4, !dbg !6377
  %22 = load [4 x float]*, [4 x float]** %values, align 8, !dbg !6378
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 0, !dbg !6378
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx12, i32 0, i32 0, !dbg !6378
  %23 = load i32, i32* %sf, align 4, !dbg !6379
  call void @base_func_synth(%struct.DCALbrDecoder* %20, i32 %21, float* %arraydecay13, i32 %23), !dbg !6380
  %24 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6381
  %imdct = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %24, i32 0, i32 49, !dbg !6382
  %imdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %imdct, i32 0, i32 10, !dbg !6383
  %25 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_calc, align 8, !dbg !6383
  %26 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6384
  %imdct14 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %26, i32 0, i32 49, !dbg !6385
  %27 = load [4 x float]*, [4 x float]** %result, align 8, !dbg !6386
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 0, !dbg !6386
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx15, i32 0, i32 0, !dbg !6386
  %28 = load [4 x float]*, [4 x float]** %values, align 8, !dbg !6387
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %28, i64 0, !dbg !6387
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx17, i32 0, i32 0, !dbg !6387
  call void %25(%struct.FFTContext* %imdct14, float* %arraydecay16, float* %arraydecay18), !dbg !6381
  %29 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6388
  %fdsp = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %29, i32 0, i32 50, !dbg !6389
  %30 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !6389
  %vector_fmul_add = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %30, i32 0, i32 6, !dbg !6390
  %31 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_add, align 8, !dbg !6390
  %32 = load float*, float** %output.addr, align 8, !dbg !6391
  %33 = load [4 x float]*, [4 x float]** %result, align 8, !dbg !6392
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %33, i64 0, !dbg !6392
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i32 0, i32 0, !dbg !6392
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6393
  %window = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 41, !dbg !6394
  %arraydecay21 = getelementptr inbounds [128 x float], [128 x float]* %window, i32 0, i32 0, !dbg !6393
  %35 = load i32, i32* %ch.addr, align 4, !dbg !6395
  %idxprom22 = sext i32 %35 to i64, !dbg !6396
  %36 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6396
  %history = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %36, i32 0, i32 40, !dbg !6397
  %arrayidx23 = getelementptr inbounds [6 x [128 x float]], [6 x [128 x float]]* %history, i64 0, i64 %idxprom22, !dbg !6396
  %arraydecay24 = getelementptr inbounds [128 x float], [128 x float]* %arrayidx23, i32 0, i32 0, !dbg !6396
  %37 = load i32, i32* %noutsubbands, align 4, !dbg !6398
  %mul25 = mul nsw i32 %37, 4, !dbg !6399
  call void %31(float* %32, float* %arraydecay20, float* %arraydecay21, float* %arraydecay24, i32 %mul25), !dbg !6388
  %38 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6400
  %fdsp26 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %38, i32 0, i32 50, !dbg !6401
  %39 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp26, align 8, !dbg !6401
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %39, i32 0, i32 7, !dbg !6402
  %40 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !6402
  %41 = load i32, i32* %ch.addr, align 4, !dbg !6403
  %idxprom27 = sext i32 %41 to i64, !dbg !6404
  %42 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6404
  %history28 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %42, i32 0, i32 40, !dbg !6405
  %arrayidx29 = getelementptr inbounds [6 x [128 x float]], [6 x [128 x float]]* %history28, i64 0, i64 %idxprom27, !dbg !6404
  %arraydecay30 = getelementptr inbounds [128 x float], [128 x float]* %arrayidx29, i32 0, i32 0, !dbg !6404
  %43 = load i32, i32* %noutsubbands, align 4, !dbg !6406
  %idxprom31 = sext i32 %43 to i64, !dbg !6407
  %44 = load [4 x float]*, [4 x float]** %result, align 8, !dbg !6407
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %44, i64 %idxprom31, !dbg !6407
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx32, i32 0, i32 0, !dbg !6407
  %45 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6408
  %window34 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %45, i32 0, i32 41, !dbg !6409
  %arraydecay35 = getelementptr inbounds [128 x float], [128 x float]* %window34, i32 0, i32 0, !dbg !6408
  %46 = load i32, i32* %noutsubbands, align 4, !dbg !6410
  %mul36 = mul nsw i32 %46, 4, !dbg !6411
  call void %40(float* %arraydecay30, float* %arraydecay33, float* %arraydecay35, i32 %mul36), !dbg !6400
  %47 = load i32, i32* %noutsubbands, align 4, !dbg !6412
  %mul37 = mul nsw i32 %47, 4, !dbg !6413
  %48 = load float*, float** %output.addr, align 8, !dbg !6414
  %idx.ext = sext i32 %mul37 to i64, !dbg !6414
  %add.ptr = getelementptr inbounds float, float* %48, i64 %idx.ext, !dbg !6414
  store float* %add.ptr, float** %output.addr, align 8, !dbg !6414
  br label %for.inc, !dbg !6415

for.inc:                                          ; preds = %for.body
  %49 = load i32, i32* %sf, align 4, !dbg !6416
  %inc = add nsw i32 %49, 1, !dbg !6416
  store i32 %inc, i32* %sf, align 4, !dbg !6416
  br label %for.cond, !dbg !6418, !llvm.loop !6419

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !6421
  br label %for.cond38, !dbg !6423

for.cond38:                                       ; preds = %for.inc49, %for.end
  %50 = load i32, i32* %sb, align 4, !dbg !6424
  %51 = load i32, i32* %nsubbands, align 4, !dbg !6427
  %cmp39 = icmp slt i32 %50, %51, !dbg !6428
  br i1 %cmp39, label %for.body41, label %for.end51, !dbg !6429

for.body41:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata float** %samples, metadata !6430, metadata !2138), !dbg !6432
  %52 = load i32, i32* %sb, align 4, !dbg !6433
  %idxprom42 = sext i32 %52 to i64, !dbg !6434
  %53 = load i32, i32* %ch.addr, align 4, !dbg !6435
  %idxprom43 = sext i32 %53 to i64, !dbg !6434
  %54 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6434
  %time_samples44 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %54, i32 0, i32 36, !dbg !6436
  %arrayidx45 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples44, i64 0, i64 %idxprom43, !dbg !6434
  %arrayidx46 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx45, i64 0, i64 %idxprom42, !dbg !6434
  %55 = load float*, float** %arrayidx46, align 8, !dbg !6434
  %add.ptr47 = getelementptr inbounds float, float* %55, i64 -8, !dbg !6437
  store float* %add.ptr47, float** %samples, align 8, !dbg !6432
  %56 = load float*, float** %samples, align 8, !dbg !6438
  %57 = bitcast float* %56 to i8*, !dbg !6439
  %58 = load float*, float** %samples, align 8, !dbg !6440
  %add.ptr48 = getelementptr inbounds float, float* %58, i64 128, !dbg !6441
  %59 = bitcast float* %add.ptr48 to i8*, !dbg !6439
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %59, i64 32, i32 4, i1 false), !dbg !6439
  br label %for.inc49, !dbg !6442

for.inc49:                                        ; preds = %for.body41
  %60 = load i32, i32* %sb, align 4, !dbg !6443
  %inc50 = add nsw i32 %60, 1, !dbg !6443
  store i32 %inc50, i32* %sb, align 4, !dbg !6443
  br label %for.cond38, !dbg !6445, !llvm.loop !6446

for.end51:                                        ; preds = %for.cond38
  ret void, !dbg !6448
}

declare i32 @ff_side_data_update_matrix_encoding(%struct.AVFrame*, i32) #3

; Function Attrs: cold nounwind optsize uwtable
define void @ff_dca_lbr_flush(%struct.DCALbrDecoder* %s) #4 !dbg !6449 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %samples = alloca float*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6452, metadata !2138), !dbg !6453
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6454, metadata !2138), !dbg !6455
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6456, metadata !2138), !dbg !6457
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6458
  %sample_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 2, !dbg !6460
  %1 = load i32, i32* %sample_rate, align 8, !dbg !6460
  %tobool = icmp ne i32 %1, 0, !dbg !6458
  br i1 %tobool, label %if.end, label %if.then, !dbg !6461

if.then:                                          ; preds = %entry
  br label %for.end12, !dbg !6462

if.end:                                           ; preds = %entry
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6463
  %part_stereo = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 32, !dbg !6464
  %arraydecay = getelementptr inbounds [6 x [8 x [5 x i8]]], [6 x [8 x [5 x i8]]]* %part_stereo, i32 0, i32 0, !dbg !6465
  %3 = bitcast [8 x [5 x i8]]* %arraydecay to i8*, !dbg !6465
  call void @llvm.memset.p0i8.i64(i8* %3, i8 16, i64 240, i32 4, i1 false), !dbg !6465
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6466
  %lpc_coeff = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 34, !dbg !6467
  %arraydecay1 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff, i32 0, i32 0, !dbg !6468
  %5 = bitcast [6 x [3 x [2 x [8 x float]]]]* %arraydecay1 to i8*, !dbg !6468
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 2304, i32 32, i1 false), !dbg !6468
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6469
  %history = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 40, !dbg !6470
  %arraydecay2 = getelementptr inbounds [6 x [128 x float]], [6 x [128 x float]]* %history, i32 0, i32 0, !dbg !6471
  %7 = bitcast [128 x float]* %arraydecay2 to i8*, !dbg !6471
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 3072, i32 32, i1 false), !dbg !6471
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6472
  %tonal_bounds = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 46, !dbg !6473
  %arraydecay3 = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds, i32 0, i32 0, !dbg !6474
  %9 = bitcast [32 x [2 x i16]]* %arraydecay3 to i8*, !dbg !6474
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 640, i32 2, i1 false), !dbg !6474
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6475
  %lfe_history = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 43, !dbg !6476
  %arraydecay4 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %lfe_history, i32 0, i32 0, !dbg !6477
  %11 = bitcast [2 x float]* %arraydecay4 to i8*, !dbg !6477
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 40, i32 32, i1 false), !dbg !6477
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6478
  %framenum = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 18, !dbg !6479
  store i32 0, i32* %framenum, align 8, !dbg !6480
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6481
  %ntones = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %13, i32 0, i32 48, !dbg !6482
  store i32 0, i32* %ntones, align 4, !dbg !6483
  store i32 0, i32* %ch, align 4, !dbg !6484
  br label %for.cond, !dbg !6486

for.cond:                                         ; preds = %for.inc10, %if.end
  %14 = load i32, i32* %ch, align 4, !dbg !6487
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6490
  %nchannels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 7, !dbg !6491
  %16 = load i32, i32* %nchannels, align 4, !dbg !6491
  %cmp = icmp slt i32 %14, %16, !dbg !6492
  br i1 %cmp, label %for.body, label %for.end12, !dbg !6493

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !6494
  br label %for.cond5, !dbg !6497

for.cond5:                                        ; preds = %for.inc, %for.body
  %17 = load i32, i32* %sb, align 4, !dbg !6498
  %18 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6501
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %18, i32 0, i32 14, !dbg !6502
  %19 = load i32, i32* %nsubbands, align 8, !dbg !6502
  %cmp6 = icmp slt i32 %17, %19, !dbg !6503
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !6504

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata float** %samples, metadata !6505, metadata !2138), !dbg !6507
  %20 = load i32, i32* %sb, align 4, !dbg !6508
  %idxprom = sext i32 %20 to i64, !dbg !6509
  %21 = load i32, i32* %ch, align 4, !dbg !6510
  %idxprom8 = sext i32 %21 to i64, !dbg !6509
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6509
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %22, i32 0, i32 36, !dbg !6511
  %arrayidx = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom8, !dbg !6509
  %arrayidx9 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6509
  %23 = load float*, float** %arrayidx9, align 8, !dbg !6509
  %add.ptr = getelementptr inbounds float, float* %23, i64 -8, !dbg !6512
  store float* %add.ptr, float** %samples, align 8, !dbg !6507
  %24 = load float*, float** %samples, align 8, !dbg !6513
  %25 = bitcast float* %24 to i8*, !dbg !6514
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 32, i32 4, i1 false), !dbg !6514
  br label %for.inc, !dbg !6515

for.inc:                                          ; preds = %for.body7
  %26 = load i32, i32* %sb, align 4, !dbg !6516
  %inc = add nsw i32 %26, 1, !dbg !6516
  store i32 %inc, i32* %sb, align 4, !dbg !6516
  br label %for.cond5, !dbg !6518, !llvm.loop !6519

for.end:                                          ; preds = %for.cond5
  br label %for.inc10, !dbg !6521

for.inc10:                                        ; preds = %for.end
  %27 = load i32, i32* %ch, align 4, !dbg !6522
  %inc11 = add nsw i32 %27, 1, !dbg !6522
  store i32 %inc11, i32* %ch, align 4, !dbg !6522
  br label %for.cond, !dbg !6524, !llvm.loop !6525

for.end12:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !6527
}

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_dca_lbr_init(%struct.DCALbrDecoder* %s) #4 !dbg !6528 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6531, metadata !2138), !dbg !6532
  call void @init_tables(), !dbg !6533
  %call = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 0), !dbg !6534
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6536
  %fdsp = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 50, !dbg !6537
  store %struct.AVFloatDSPContext* %call, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !6538
  %tobool = icmp ne %struct.AVFloatDSPContext* %call, null, !dbg !6538
  br i1 %tobool, label %if.end, label %if.then, !dbg !6539

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6540
  br label %return, !dbg !6540

if.end:                                           ; preds = %entry
  %1 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6541
  %lbr_rand = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %1, i32 0, i32 19, !dbg !6542
  store i32 1, i32* %lbr_rand, align 4, !dbg !6543
  store i32 0, i32* %retval, align 4, !dbg !6544
  br label %return, !dbg !6544

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !6545
  ret i32 %2, !dbg !6545
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @init_tables() #4 !dbg !1054 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6546, metadata !2138), !dbg !6547
  %0 = load i32, i32* @init_tables.initialized, align 4, !dbg !6548
  %tobool = icmp ne i32 %0, 0, !dbg !6548
  br i1 %tobool, label %if.then, label %if.end, !dbg !6550

if.then:                                          ; preds = %entry
  br label %return, !dbg !6551

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6552
  br label %for.cond, !dbg !6554

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !6555
  %cmp = icmp slt i32 %1, 256, !dbg !6558
  br i1 %cmp, label %for.body, label %for.end, !dbg !6559

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !6560
  %conv = sitofp i32 %2 to double, !dbg !6560
  %mul = fmul double 0x400921FB54442D18, %conv, !dbg !6561
  %div = fdiv double %mul, 1.280000e+02, !dbg !6562
  %call = call double @cos(double %div) #10, !dbg !6563
  %conv1 = fptrunc double %call to float, !dbg !6563
  %3 = load i32, i32* %i, align 4, !dbg !6564
  %idxprom = sext i32 %3 to i64, !dbg !6565
  %arrayidx = getelementptr inbounds [256 x float], [256 x float]* @cos_tab, i64 0, i64 %idxprom, !dbg !6565
  store float %conv1, float* %arrayidx, align 4, !dbg !6566
  br label %for.inc, !dbg !6565

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !6567
  %inc = add nsw i32 %4, 1, !dbg !6567
  store i32 %inc, i32* %i, align 4, !dbg !6567
  br label %for.cond, !dbg !6569, !llvm.loop !6570

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6572
  br label %for.cond2, !dbg !6574

for.cond2:                                        ; preds = %for.inc16, %for.end
  %5 = load i32, i32* %i, align 4, !dbg !6575
  %cmp3 = icmp slt i32 %5, 16, !dbg !6578
  br i1 %cmp3, label %for.body5, label %for.end18, !dbg !6579

for.body5:                                        ; preds = %for.cond2
  %6 = load i32, i32* %i, align 4, !dbg !6580
  %sub = sub nsw i32 %6, 8, !dbg !6581
  %conv6 = sitofp i32 %sub to double, !dbg !6582
  %7 = load i32, i32* %i, align 4, !dbg !6583
  %cmp7 = icmp slt i32 %7, 8, !dbg !6584
  %cond = select i1 %cmp7, i32 17, i32 15, !dbg !6585
  %conv9 = sitofp i32 %cond to double, !dbg !6586
  %div10 = fdiv double 0x400921FB54442D18, %conv9, !dbg !6587
  %mul11 = fmul double %conv6, %div10, !dbg !6588
  %call12 = call double @sin(double %mul11) #10, !dbg !6589
  %conv13 = fptrunc double %call12 to float, !dbg !6589
  %8 = load i32, i32* %i, align 4, !dbg !6590
  %idxprom14 = sext i32 %8 to i64, !dbg !6591
  %arrayidx15 = getelementptr inbounds [16 x float], [16 x float]* @lpc_tab, i64 0, i64 %idxprom14, !dbg !6591
  store float %conv13, float* %arrayidx15, align 4, !dbg !6592
  br label %for.inc16, !dbg !6591

for.inc16:                                        ; preds = %for.body5
  %9 = load i32, i32* %i, align 4, !dbg !6593
  %inc17 = add nsw i32 %9, 1, !dbg !6593
  store i32 %inc17, i32* %i, align 4, !dbg !6593
  br label %for.cond2, !dbg !6595, !llvm.loop !6596

for.end18:                                        ; preds = %for.cond2
  store i32 1, i32* @init_tables.initialized, align 4, !dbg !6598
  br label %return, !dbg !6599

return:                                           ; preds = %for.end18, %if.then
  ret void, !dbg !6600
}

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #3

; Function Attrs: cold nounwind optsize uwtable
define void @ff_dca_lbr_close(%struct.DCALbrDecoder* %s) #4 !dbg !6602 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6603, metadata !2138), !dbg !6604
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6605
  %sample_rate = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 2, !dbg !6606
  store i32 0, i32* %sample_rate, align 8, !dbg !6607
  %1 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6608
  %ts_buffer = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %1, i32 0, i32 37, !dbg !6609
  %2 = bitcast float** %ts_buffer to i8*, !dbg !6610
  call void @av_freep(i8* %2), !dbg !6611
  %3 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6612
  %ts_size = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %3, i32 0, i32 38, !dbg !6613
  store i32 0, i32* %ts_size, align 8, !dbg !6614
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6615
  %fdsp = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 50, !dbg !6616
  %5 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !6617
  call void @av_freep(i8* %5), !dbg !6618
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6619
  %imdct = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 49, !dbg !6620
  call void @ff_mdct_end(%struct.FFTContext* %imdct), !dbg !6621
  ret void, !dbg !6622
}

declare void @av_freep(i8*) #3

declare void @ff_mdct_end(%struct.FFTContext*) #3

; Function Attrs: noreturn nounwind
declare void @abort() #5

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_dca_count_chs_for_mask(i32 %mask) #6 !dbg !6623 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6626, metadata !2138), !dbg !6631
  %mask.addr = alloca i32, align 4
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !6633, metadata !2138), !dbg !6634
  %0 = load i32, i32* %mask.addr, align 4, !dbg !6635
  %and = and i32 %0, 65535, !dbg !6636
  %1 = load i32, i32* %mask.addr, align 4, !dbg !6637
  %and1 = and i32 %1, 44646, !dbg !6638
  %shl = shl i32 %and1, 16, !dbg !6639
  %or = or i32 %and, %shl, !dbg !6640
  store i32 %or, i32* %x.addr.i, align 4, !dbg !6641
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !6642
  %shr.i = lshr i32 %2, 1, !dbg !6643
  %and.i = and i32 %shr.i, 1431655765, !dbg !6644
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !6645
  %sub.i = sub i32 %3, %and.i, !dbg !6645
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !6645
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !6646
  %and1.i = and i32 %4, 858993459, !dbg !6647
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !6648
  %shr2.i = lshr i32 %5, 2, !dbg !6649
  %and3.i = and i32 %shr2.i, 858993459, !dbg !6650
  %add.i = add i32 %and1.i, %and3.i, !dbg !6651
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !6652
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !6653
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !6654
  %shr4.i = lshr i32 %7, 4, !dbg !6655
  %add5.i = add i32 %6, %shr4.i, !dbg !6656
  %and6.i = and i32 %add5.i, 252645135, !dbg !6657
  store i32 %and6.i, i32* %x.addr.i, align 4, !dbg !6658
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !6659
  %shr7.i = lshr i32 %8, 8, !dbg !6660
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6661
  %add8.i = add i32 %9, %shr7.i, !dbg !6661
  store i32 %add8.i, i32* %x.addr.i, align 4, !dbg !6661
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6662
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6663
  %shr9.i = lshr i32 %11, 16, !dbg !6664
  %add10.i = add i32 %10, %shr9.i, !dbg !6665
  %and11.i = and i32 %add10.i, 63, !dbg !6666
  ret i32 %and11.i, !dbg !6667
}

; Function Attrs: nounwind uwtable
define internal i32 @init_sample_rate(%struct.DCALbrDecoder* %s) #0 !dbg !6668 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %scale = alloca double, align 8
  %i = alloca i32, align 4
  %br_per_ch = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6669, metadata !2138), !dbg !6670
  call void @llvm.dbg.declare(metadata double* %scale, metadata !6671, metadata !2138), !dbg !6672
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6673
  %limited_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 12, !dbg !6674
  %1 = load i32, i32* %limited_range, align 16, !dbg !6674
  %sub = sub nsw i32 2, %1, !dbg !6675
  %shl = shl i32 1, %sub, !dbg !6676
  %conv = sitofp i32 %shl to double, !dbg !6677
  %call = call double @sqrt(double %conv) #10, !dbg !6678
  %mul = fmul double 0xBEE0000000000000, %call, !dbg !6679
  store double %mul, double* %scale, align 8, !dbg !6672
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6680, metadata !2138), !dbg !6681
  call void @llvm.dbg.declare(metadata i32* %br_per_ch, metadata !6682, metadata !2138), !dbg !6683
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6684
  %bit_rate_scaled = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 6, !dbg !6685
  %3 = load i32, i32* %bit_rate_scaled, align 8, !dbg !6685
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6686
  %nchannels_total = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 8, !dbg !6687
  %5 = load i32, i32* %nchannels_total, align 32, !dbg !6687
  %div = sdiv i32 %3, %5, !dbg !6688
  store i32 %div, i32* %br_per_ch, align 4, !dbg !6683
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6689
  %imdct = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 49, !dbg !6690
  call void @ff_mdct_end(%struct.FFTContext* %imdct), !dbg !6691
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6692
  %imdct1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 49, !dbg !6694
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6695
  %freq_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 9, !dbg !6696
  %9 = load i32, i32* %freq_range, align 4, !dbg !6696
  %add = add nsw i32 %9, 6, !dbg !6697
  %10 = load double, double* %scale, align 8, !dbg !6698
  %call2 = call i32 @ff_mdct_init(%struct.FFTContext* %imdct1, i32 %add, i32 1, double %10), !dbg !6699
  %cmp = icmp slt i32 %call2, 0, !dbg !6700
  br i1 %cmp, label %if.then, label %if.end, !dbg !6701

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6702
  br label %return, !dbg !6702

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6703
  br label %for.cond, !dbg !6705

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !6706
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6709
  %freq_range4 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 9, !dbg !6710
  %13 = load i32, i32* %freq_range4, align 4, !dbg !6710
  %shl5 = shl i32 32, %13, !dbg !6711
  %cmp6 = icmp slt i32 %11, %shl5, !dbg !6712
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6713

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !6714
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6715
  %freq_range8 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 9, !dbg !6716
  %16 = load i32, i32* %freq_range8, align 4, !dbg !6716
  %sub9 = sub nsw i32 2, %16, !dbg !6717
  %shl10 = shl i32 %14, %sub9, !dbg !6718
  %idxprom = sext i32 %shl10 to i64, !dbg !6719
  %arrayidx = getelementptr inbounds [128 x float], [128 x float]* @ff_dca_long_window, i64 0, i64 %idxprom, !dbg !6719
  %17 = load float, float* %arrayidx, align 4, !dbg !6719
  %18 = load i32, i32* %i, align 4, !dbg !6720
  %idxprom11 = sext i32 %18 to i64, !dbg !6721
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6721
  %window = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %19, i32 0, i32 41, !dbg !6722
  %arrayidx12 = getelementptr inbounds [128 x float], [128 x float]* %window, i64 0, i64 %idxprom11, !dbg !6721
  store float %17, float* %arrayidx12, align 4, !dbg !6723
  br label %for.inc, !dbg !6721

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !6724
  %inc = add nsw i32 %20, 1, !dbg !6724
  store i32 %inc, i32* %i, align 4, !dbg !6724
  br label %for.cond, !dbg !6726, !llvm.loop !6727

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %br_per_ch, align 4, !dbg !6729
  %cmp13 = icmp slt i32 %21, 14000, !dbg !6731
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !6732

if.then15:                                        ; preds = %for.end
  store double 8.500000e-01, double* %scale, align 8, !dbg !6733
  br label %if.end25, !dbg !6734

if.else:                                          ; preds = %for.end
  %22 = load i32, i32* %br_per_ch, align 4, !dbg !6735
  %cmp16 = icmp slt i32 %22, 32000, !dbg !6737
  br i1 %cmp16, label %if.then18, label %if.else23, !dbg !6738

if.then18:                                        ; preds = %if.else
  %23 = load i32, i32* %br_per_ch, align 4, !dbg !6739
  %sub19 = sub nsw i32 %23, 14000, !dbg !6740
  %conv20 = sitofp i32 %sub19 to double, !dbg !6741
  %mul21 = fmul double %conv20, 0x3EE179EC9CBD821E, !dbg !6742
  %add22 = fadd double %mul21, 8.500000e-01, !dbg !6743
  store double %add22, double* %scale, align 8, !dbg !6744
  br label %if.end24, !dbg !6745

if.else23:                                        ; preds = %if.else
  store double 1.000000e+00, double* %scale, align 8, !dbg !6746
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then18
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then15
  %24 = load double, double* %scale, align 8, !dbg !6747
  %mul26 = fmul double %24, 0x3E00000000200000, !dbg !6747
  store double %mul26, double* %scale, align 8, !dbg !6747
  store i32 0, i32* %i, align 4, !dbg !6748
  br label %for.cond27, !dbg !6750

for.cond27:                                       ; preds = %for.inc57, %if.end25
  %25 = load i32, i32* %i, align 4, !dbg !6751
  %26 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6754
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %26, i32 0, i32 14, !dbg !6755
  %27 = load i32, i32* %nsubbands, align 8, !dbg !6755
  %cmp28 = icmp slt i32 %25, %27, !dbg !6756
  br i1 %cmp28, label %for.body30, label %for.end59, !dbg !6757

for.body30:                                       ; preds = %for.cond27
  %28 = load i32, i32* %i, align 4, !dbg !6758
  %cmp31 = icmp slt i32 %28, 2, !dbg !6761
  br i1 %cmp31, label %if.then33, label %if.else36, !dbg !6762

if.then33:                                        ; preds = %for.body30
  %29 = load i32, i32* %i, align 4, !dbg !6763
  %idxprom34 = sext i32 %29 to i64, !dbg !6764
  %30 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6764
  %sb_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %30, i32 0, i32 35, !dbg !6765
  %arrayidx35 = getelementptr inbounds [32 x float], [32 x float]* %sb_scf, i64 0, i64 %idxprom34, !dbg !6764
  store float 0.000000e+00, float* %arrayidx35, align 4, !dbg !6766
  br label %if.end56, !dbg !6764

if.else36:                                        ; preds = %for.body30
  %31 = load i32, i32* %i, align 4, !dbg !6767
  %cmp37 = icmp slt i32 %31, 5, !dbg !6769
  br i1 %cmp37, label %if.then39, label %if.else49, !dbg !6770

if.then39:                                        ; preds = %if.else36
  %32 = load i32, i32* %i, align 4, !dbg !6771
  %sub40 = sub nsw i32 %32, 1, !dbg !6772
  %conv41 = sitofp i32 %sub40 to double, !dbg !6773
  %mul42 = fmul double %conv41, 2.500000e-01, !dbg !6774
  %mul43 = fmul double %mul42, 7.850000e-01, !dbg !6775
  %33 = load double, double* %scale, align 8, !dbg !6776
  %mul44 = fmul double %mul43, %33, !dbg !6777
  %conv45 = fptrunc double %mul44 to float, !dbg !6773
  %34 = load i32, i32* %i, align 4, !dbg !6778
  %idxprom46 = sext i32 %34 to i64, !dbg !6779
  %35 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6779
  %sb_scf47 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %35, i32 0, i32 35, !dbg !6780
  %arrayidx48 = getelementptr inbounds [32 x float], [32 x float]* %sb_scf47, i64 0, i64 %idxprom46, !dbg !6779
  store float %conv45, float* %arrayidx48, align 4, !dbg !6781
  br label %if.end55, !dbg !6779

if.else49:                                        ; preds = %if.else36
  %36 = load double, double* %scale, align 8, !dbg !6782
  %mul50 = fmul double 7.850000e-01, %36, !dbg !6783
  %conv51 = fptrunc double %mul50 to float, !dbg !6784
  %37 = load i32, i32* %i, align 4, !dbg !6785
  %idxprom52 = sext i32 %37 to i64, !dbg !6786
  %38 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6786
  %sb_scf53 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %38, i32 0, i32 35, !dbg !6787
  %arrayidx54 = getelementptr inbounds [32 x float], [32 x float]* %sb_scf53, i64 0, i64 %idxprom52, !dbg !6786
  store float %conv51, float* %arrayidx54, align 4, !dbg !6788
  br label %if.end55

if.end55:                                         ; preds = %if.else49, %if.then39
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then33
  br label %for.inc57, !dbg !6789

for.inc57:                                        ; preds = %if.end56
  %39 = load i32, i32* %i, align 4, !dbg !6790
  %inc58 = add nsw i32 %39, 1, !dbg !6790
  store i32 %inc58, i32* %i, align 4, !dbg !6790
  br label %for.cond27, !dbg !6792, !llvm.loop !6793

for.end59:                                        ; preds = %for.cond27
  %40 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6795
  %freq_range60 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %40, i32 0, i32 9, !dbg !6796
  %41 = load i32, i32* %freq_range60, align 4, !dbg !6796
  %shl61 = shl i32 16, %41, !dbg !6797
  %conv62 = sitofp i32 %shl61 to double, !dbg !6798
  %mul63 = fmul double %conv62, 0x3EE069DE41A2D800, !dbg !6799
  %conv64 = fptrunc double %mul63 to float, !dbg !6798
  %42 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6800
  %lfe_scale = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %42, i32 0, i32 44, !dbg !6801
  store float %conv64, float* %lfe_scale, align 8, !dbg !6802
  store i32 0, i32* %retval, align 4, !dbg !6803
  br label %return, !dbg !6803

return:                                           ; preds = %for.end59, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !6804
  ret i32 %43, !dbg !6804
}

; Function Attrs: nounwind uwtable
define internal i32 @alloc_sample_buffer(%struct.DCALbrDecoder* %s) #0 !dbg !6805 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %nchsamples = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %ptr = alloca float*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6806, metadata !2138), !dbg !6807
  call void @llvm.dbg.declare(metadata i32* %nchsamples, metadata !6808, metadata !2138), !dbg !6809
  store i32 144, i32* %nchsamples, align 4, !dbg !6809
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !6810, metadata !2138), !dbg !6811
  %0 = load i32, i32* %nchsamples, align 4, !dbg !6812
  %1 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6813
  %nchannels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %1, i32 0, i32 7, !dbg !6814
  %2 = load i32, i32* %nchannels, align 4, !dbg !6814
  %mul = mul nsw i32 %0, %2, !dbg !6815
  %3 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6816
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %3, i32 0, i32 14, !dbg !6817
  %4 = load i32, i32* %nsubbands, align 8, !dbg !6817
  %mul1 = mul nsw i32 %mul, %4, !dbg !6818
  store i32 %mul1, i32* %nsamples, align 4, !dbg !6811
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6819, metadata !2138), !dbg !6820
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6821, metadata !2138), !dbg !6822
  call void @llvm.dbg.declare(metadata float** %ptr, metadata !6823, metadata !2138), !dbg !6824
  %5 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6825
  %ts_buffer = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %5, i32 0, i32 37, !dbg !6826
  %6 = bitcast float** %ts_buffer to i8*, !dbg !6827
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6828
  %ts_size = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 38, !dbg !6829
  %8 = load i32, i32* %nsamples, align 4, !dbg !6830
  %conv = sext i32 %8 to i64, !dbg !6830
  %mul2 = mul i64 %conv, 4, !dbg !6831
  call void @av_fast_mallocz(i8* %6, i32* %ts_size, i64 %mul2), !dbg !6832
  %9 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6833
  %ts_buffer3 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %9, i32 0, i32 37, !dbg !6835
  %10 = load float*, float** %ts_buffer3, align 32, !dbg !6835
  %tobool = icmp ne float* %10, null, !dbg !6833
  br i1 %tobool, label %if.end, label %if.then, !dbg !6836

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6837
  br label %return, !dbg !6837

if.end:                                           ; preds = %entry
  %11 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6838
  %ts_buffer4 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %11, i32 0, i32 37, !dbg !6839
  %12 = load float*, float** %ts_buffer4, align 32, !dbg !6839
  %add.ptr = getelementptr inbounds float, float* %12, i64 8, !dbg !6840
  store float* %add.ptr, float** %ptr, align 8, !dbg !6841
  store i32 0, i32* %ch, align 4, !dbg !6842
  br label %for.cond, !dbg !6844

for.cond:                                         ; preds = %for.inc15, %if.end
  %13 = load i32, i32* %ch, align 4, !dbg !6845
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6848
  %nchannels5 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 7, !dbg !6849
  %15 = load i32, i32* %nchannels5, align 4, !dbg !6849
  %cmp = icmp slt i32 %13, %15, !dbg !6850
  br i1 %cmp, label %for.body, label %for.end17, !dbg !6851

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !6852
  br label %for.cond7, !dbg !6855

for.cond7:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %sb, align 4, !dbg !6856
  %17 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6859
  %nsubbands8 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %17, i32 0, i32 14, !dbg !6860
  %18 = load i32, i32* %nsubbands8, align 8, !dbg !6860
  %cmp9 = icmp slt i32 %16, %18, !dbg !6861
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !6862

for.body11:                                       ; preds = %for.cond7
  %19 = load float*, float** %ptr, align 8, !dbg !6863
  %20 = load i32, i32* %sb, align 4, !dbg !6865
  %idxprom = sext i32 %20 to i64, !dbg !6866
  %21 = load i32, i32* %ch, align 4, !dbg !6867
  %idxprom12 = sext i32 %21 to i64, !dbg !6866
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6866
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %22, i32 0, i32 36, !dbg !6868
  %arrayidx = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom12, !dbg !6866
  %arrayidx13 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx, i64 0, i64 %idxprom, !dbg !6866
  store float* %19, float** %arrayidx13, align 8, !dbg !6869
  %23 = load i32, i32* %nchsamples, align 4, !dbg !6870
  %24 = load float*, float** %ptr, align 8, !dbg !6871
  %idx.ext = sext i32 %23 to i64, !dbg !6871
  %add.ptr14 = getelementptr inbounds float, float* %24, i64 %idx.ext, !dbg !6871
  store float* %add.ptr14, float** %ptr, align 8, !dbg !6871
  br label %for.inc, !dbg !6872

for.inc:                                          ; preds = %for.body11
  %25 = load i32, i32* %sb, align 4, !dbg !6873
  %inc = add nsw i32 %25, 1, !dbg !6873
  store i32 %inc, i32* %sb, align 4, !dbg !6873
  br label %for.cond7, !dbg !6875, !llvm.loop !6876

for.end:                                          ; preds = %for.cond7
  br label %for.inc15, !dbg !6878

for.inc15:                                        ; preds = %for.end
  %26 = load i32, i32* %ch, align 4, !dbg !6879
  %inc16 = add nsw i32 %26, 1, !dbg !6879
  store i32 %inc16, i32* %ch, align 4, !dbg !6879
  br label %for.cond, !dbg !6881, !llvm.loop !6882

for.end17:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6884
  br label %return, !dbg !6884

return:                                           ; preds = %for.end17, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !6885
  ret i32 %27, !dbg !6885
}

; Function Attrs: nounwind
declare double @sqrt(double) #7

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #3

declare void @av_fast_mallocz(i8*, i32*, i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #6 !dbg !6886 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6890, metadata !2138), !dbg !6891
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6892, metadata !2138), !dbg !6893
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !6894, metadata !2138), !dbg !6895
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !6896
  %cmp = icmp sgt i32 %0, 268435455, !dbg !6898
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6899

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !6900
  %cmp1 = icmp slt i32 %1, 0, !dbg !6902
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6903

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !6904
  br label %if.end, !dbg !6905

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6906
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !6907
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !6908
  %mul = mul nsw i32 %4, 8, !dbg !6909
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !6910
  ret i32 %call, !dbg !6911
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_lfe_24(%struct.DCALbrDecoder* %s) #0 !dbg !6912 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6913, metadata !2138), !dbg !6917
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6922, metadata !2138), !dbg !6923
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6924, metadata !2138), !dbg !6925
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %step_max = alloca i32, align 4
  %i = alloca i32, align 4
  %ps = alloca i32, align 4
  %si = alloca i32, align 4
  %code = alloca i32, align 4
  %step_i = alloca i32, align 4
  %step = alloca float, align 4
  %value = alloca float, align 4
  %delta = alloca float, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !6926, metadata !2138), !dbg !6927
  call void @llvm.dbg.declare(metadata i32* %step_max, metadata !6928, metadata !2138), !dbg !6929
  store i32 143, i32* %step_max, align 4, !dbg !6929
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6930, metadata !2138), !dbg !6931
  call void @llvm.dbg.declare(metadata i32* %ps, metadata !6932, metadata !2138), !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %si, metadata !6934, metadata !2138), !dbg !6935
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6936, metadata !2138), !dbg !6937
  call void @llvm.dbg.declare(metadata i32* %step_i, metadata !6938, metadata !2138), !dbg !6939
  call void @llvm.dbg.declare(metadata float* %step, metadata !6940, metadata !2138), !dbg !6941
  call void @llvm.dbg.declare(metadata float* %value, metadata !6942, metadata !2138), !dbg !6943
  call void @llvm.dbg.declare(metadata float* %delta, metadata !6944, metadata !2138), !dbg !6945
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6946
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 1, !dbg !6947
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 24), !dbg !6948
  store i32 %call, i32* %ps, align 4, !dbg !6949
  %1 = load i32, i32* %ps, align 4, !dbg !6950
  %shr = ashr i32 %1, 23, !dbg !6951
  store i32 %shr, i32* %si, align 4, !dbg !6952
  %2 = load i32, i32* %ps, align 4, !dbg !6953
  %and = and i32 %2, 8388607, !dbg !6954
  %3 = load i32, i32* %si, align 4, !dbg !6955
  %sub = sub nsw i32 0, %3, !dbg !6956
  %xor = xor i32 %and, %sub, !dbg !6957
  %4 = load i32, i32* %si, align 4, !dbg !6958
  %add = add nsw i32 %xor, %4, !dbg !6959
  %conv = sitofp i32 %add to float, !dbg !6960
  %mul = fmul float %conv, 0x3E80000020000000, !dbg !6961
  store float %mul, float* %value, align 4, !dbg !6962
  %5 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6963
  %gb1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %5, i32 0, i32 1, !dbg !6964
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 8), !dbg !6965
  store i32 %call2, i32* %step_i, align 4, !dbg !6966
  %6 = load i32, i32* %step_i, align 4, !dbg !6967
  %7 = load i32, i32* %step_max, align 4, !dbg !6969
  %cmp = icmp sgt i32 %6, %7, !dbg !6970
  br i1 %cmp, label %if.then, label %if.end, !dbg !6971

if.then:                                          ; preds = %entry
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6972
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 0, !dbg !6974
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !6974
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !6972
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i32 0, i32 0)), !dbg !6975
  store i32 -1, i32* %retval, align 4, !dbg !6976
  br label %return, !dbg !6976

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %step_i, align 4, !dbg !6977
  %idxprom = sext i32 %11 to i64, !dbg !6978
  %arrayidx = getelementptr inbounds [144 x float], [144 x float]* @ff_dca_lfe_step_size_24, i64 0, i64 %idxprom, !dbg !6978
  %12 = load float, float* %arrayidx, align 4, !dbg !6978
  store float %12, float* %step, align 4, !dbg !6979
  store i32 0, i32* %i, align 4, !dbg !6980
  br label %for.cond, !dbg !6981

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !6982
  %cmp4 = icmp slt i32 %13, 64, !dbg !6984
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6985

for.body:                                         ; preds = %for.cond
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !6986
  %gb6 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 1, !dbg !6987
  %call7 = call i32 @get_bits(%struct.GetBitContext* %gb6, i32 6), !dbg !6988
  store i32 %call7, i32* %code, align 4, !dbg !6989
  %15 = load float, float* %step, align 4, !dbg !6990
  %mul8 = fmul float %15, 3.125000e-02, !dbg !6991
  store float %mul8, float* %delta, align 4, !dbg !6992
  %16 = load i32, i32* %code, align 4, !dbg !6993
  %and9 = and i32 %16, 16, !dbg !6995
  %tobool = icmp ne i32 %and9, 0, !dbg !6995
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !6996

if.then10:                                        ; preds = %for.body
  %17 = load float, float* %step, align 4, !dbg !6997
  %18 = load float, float* %delta, align 4, !dbg !6998
  %add11 = fadd float %18, %17, !dbg !6998
  store float %add11, float* %delta, align 4, !dbg !6998
  br label %if.end12, !dbg !6999

if.end12:                                         ; preds = %if.then10, %for.body
  %19 = load i32, i32* %code, align 4, !dbg !7000
  %and13 = and i32 %19, 8, !dbg !7002
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7002
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !7003

if.then15:                                        ; preds = %if.end12
  %20 = load float, float* %step, align 4, !dbg !7004
  %mul16 = fmul float %20, 5.000000e-01, !dbg !7005
  %21 = load float, float* %delta, align 4, !dbg !7006
  %add17 = fadd float %21, %mul16, !dbg !7006
  store float %add17, float* %delta, align 4, !dbg !7006
  br label %if.end18, !dbg !7007

if.end18:                                         ; preds = %if.then15, %if.end12
  %22 = load i32, i32* %code, align 4, !dbg !7008
  %and19 = and i32 %22, 4, !dbg !7010
  %tobool20 = icmp ne i32 %and19, 0, !dbg !7010
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !7011

if.then21:                                        ; preds = %if.end18
  %23 = load float, float* %step, align 4, !dbg !7012
  %mul22 = fmul float %23, 2.500000e-01, !dbg !7013
  %24 = load float, float* %delta, align 4, !dbg !7014
  %add23 = fadd float %24, %mul22, !dbg !7014
  store float %add23, float* %delta, align 4, !dbg !7014
  br label %if.end24, !dbg !7015

if.end24:                                         ; preds = %if.then21, %if.end18
  %25 = load i32, i32* %code, align 4, !dbg !7016
  %and25 = and i32 %25, 2, !dbg !7018
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7018
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !7019

if.then27:                                        ; preds = %if.end24
  %26 = load float, float* %step, align 4, !dbg !7020
  %mul28 = fmul float %26, 1.250000e-01, !dbg !7021
  %27 = load float, float* %delta, align 4, !dbg !7022
  %add29 = fadd float %27, %mul28, !dbg !7022
  store float %add29, float* %delta, align 4, !dbg !7022
  br label %if.end30, !dbg !7023

if.end30:                                         ; preds = %if.then27, %if.end24
  %28 = load i32, i32* %code, align 4, !dbg !7024
  %and31 = and i32 %28, 1, !dbg !7026
  %tobool32 = icmp ne i32 %and31, 0, !dbg !7026
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !7027

if.then33:                                        ; preds = %if.end30
  %29 = load float, float* %step, align 4, !dbg !7028
  %mul34 = fmul float %29, 6.250000e-02, !dbg !7029
  %30 = load float, float* %delta, align 4, !dbg !7030
  %add35 = fadd float %30, %mul34, !dbg !7030
  store float %add35, float* %delta, align 4, !dbg !7030
  br label %if.end36, !dbg !7031

if.end36:                                         ; preds = %if.then33, %if.end30
  %31 = load i32, i32* %code, align 4, !dbg !7032
  %and37 = and i32 %31, 32, !dbg !7034
  %tobool38 = icmp ne i32 %and37, 0, !dbg !7034
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !7035

if.then39:                                        ; preds = %if.end36
  %32 = load float, float* %delta, align 4, !dbg !7036
  %33 = load float, float* %value, align 4, !dbg !7038
  %sub40 = fsub float %33, %32, !dbg !7038
  store float %sub40, float* %value, align 4, !dbg !7038
  %34 = load float, float* %value, align 4, !dbg !7039
  %cmp41 = fcmp olt float %34, -3.000000e+00, !dbg !7041
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !7042

if.then43:                                        ; preds = %if.then39
  store float -3.000000e+00, float* %value, align 4, !dbg !7043
  br label %if.end44, !dbg !7044

if.end44:                                         ; preds = %if.then43, %if.then39
  br label %if.end50, !dbg !7045

if.else:                                          ; preds = %if.end36
  %35 = load float, float* %delta, align 4, !dbg !7046
  %36 = load float, float* %value, align 4, !dbg !7048
  %add45 = fadd float %36, %35, !dbg !7048
  store float %add45, float* %value, align 4, !dbg !7048
  %37 = load float, float* %value, align 4, !dbg !7049
  %cmp46 = fcmp ogt float %37, 3.000000e+00, !dbg !7051
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !7052

if.then48:                                        ; preds = %if.else
  store float 3.000000e+00, float* %value, align 4, !dbg !7053
  br label %if.end49, !dbg !7054

if.end49:                                         ; preds = %if.then48, %if.else
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end44
  %38 = load i32, i32* %code, align 4, !dbg !7055
  %and51 = and i32 %38, 31, !dbg !7056
  %idxprom52 = sext i32 %and51 to i64, !dbg !7057
  %arrayidx53 = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_lfe_delta_index_24, i64 0, i64 %idxprom52, !dbg !7057
  %39 = load i8, i8* %arrayidx53, align 1, !dbg !7057
  %conv54 = sext i8 %39 to i32, !dbg !7057
  %40 = load i32, i32* %step_i, align 4, !dbg !7058
  %add55 = add nsw i32 %40, %conv54, !dbg !7058
  store i32 %add55, i32* %step_i, align 4, !dbg !7058
  %41 = load i32, i32* %step_i, align 4, !dbg !7059
  %42 = load i32, i32* %step_max, align 4, !dbg !7060
  store i32 %41, i32* %a.addr.i, align 4, !dbg !7061
  store i32 0, i32* %amin.addr.i, align 4, !dbg !7061
  store i32 %42, i32* %amax.addr.i, align 4, !dbg !7061
  %43 = load i32, i32* %a.addr.i, align 4, !dbg !7062
  %44 = load i32, i32* %amin.addr.i, align 4, !dbg !7064
  %cmp.i = icmp slt i32 %43, %44, !dbg !7065
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7066

if.then.i:                                        ; preds = %if.end50
  %45 = load i32, i32* %amin.addr.i, align 4, !dbg !7067
  store i32 %45, i32* %retval.i, align 4, !dbg !7069
  br label %av_clip_c.exit, !dbg !7069

if.else.i:                                        ; preds = %if.end50
  %46 = load i32, i32* %a.addr.i, align 4, !dbg !7070
  %47 = load i32, i32* %amax.addr.i, align 4, !dbg !7072
  %cmp1.i = icmp sgt i32 %46, %47, !dbg !7073
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7074

if.then2.i:                                       ; preds = %if.else.i
  %48 = load i32, i32* %amax.addr.i, align 4, !dbg !7075
  store i32 %48, i32* %retval.i, align 4, !dbg !7077
  br label %av_clip_c.exit, !dbg !7077

if.else3.i:                                       ; preds = %if.else.i
  %49 = load i32, i32* %a.addr.i, align 4, !dbg !7078
  store i32 %49, i32* %retval.i, align 4, !dbg !7079
  br label %av_clip_c.exit, !dbg !7079

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %50 = load i32, i32* %retval.i, align 4, !dbg !7080
  store i32 %50, i32* %step_i, align 4, !dbg !7081
  %51 = load i32, i32* %step_i, align 4, !dbg !7082
  %idxprom57 = sext i32 %51 to i64, !dbg !7083
  %arrayidx58 = getelementptr inbounds [144 x float], [144 x float]* @ff_dca_lfe_step_size_24, i64 0, i64 %idxprom57, !dbg !7083
  %52 = load float, float* %arrayidx58, align 4, !dbg !7083
  store float %52, float* %step, align 4, !dbg !7084
  %53 = load float, float* %value, align 4, !dbg !7085
  %54 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7086
  %lfe_scale = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %54, i32 0, i32 44, !dbg !7087
  %55 = load float, float* %lfe_scale, align 8, !dbg !7087
  %mul59 = fmul float %53, %55, !dbg !7088
  %56 = load i32, i32* %i, align 4, !dbg !7089
  %idxprom60 = sext i32 %56 to i64, !dbg !7090
  %57 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7090
  %lfe_data = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %57, i32 0, i32 42, !dbg !7091
  %arrayidx61 = getelementptr inbounds [64 x float], [64 x float]* %lfe_data, i64 0, i64 %idxprom60, !dbg !7090
  store float %mul59, float* %arrayidx61, align 4, !dbg !7092
  br label %for.inc, !dbg !7093

for.inc:                                          ; preds = %av_clip_c.exit
  %58 = load i32, i32* %i, align 4, !dbg !7094
  %inc = add nsw i32 %58, 1, !dbg !7094
  store i32 %inc, i32* %i, align 4, !dbg !7094
  br label %for.cond, !dbg !7096, !llvm.loop !7097

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7099
  br label %return, !dbg !7099

return:                                           ; preds = %for.end, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !7100
  ret i32 %59, !dbg !7100
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_lfe_16(%struct.DCALbrDecoder* %s) #0 !dbg !7101 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6913, metadata !2138), !dbg !7102
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6922, metadata !2138), !dbg !7107
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6924, metadata !2138), !dbg !7108
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %step_max = alloca i32, align 4
  %i = alloca i32, align 4
  %ps = alloca i32, align 4
  %si = alloca i32, align 4
  %code = alloca i32, align 4
  %step_i = alloca i32, align 4
  %step = alloca float, align 4
  %value = alloca float, align 4
  %delta = alloca float, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !7109, metadata !2138), !dbg !7110
  call void @llvm.dbg.declare(metadata i32* %step_max, metadata !7111, metadata !2138), !dbg !7112
  store i32 100, i32* %step_max, align 4, !dbg !7112
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7113, metadata !2138), !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %ps, metadata !7115, metadata !2138), !dbg !7116
  call void @llvm.dbg.declare(metadata i32* %si, metadata !7117, metadata !2138), !dbg !7118
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7119, metadata !2138), !dbg !7120
  call void @llvm.dbg.declare(metadata i32* %step_i, metadata !7121, metadata !2138), !dbg !7122
  call void @llvm.dbg.declare(metadata float* %step, metadata !7123, metadata !2138), !dbg !7124
  call void @llvm.dbg.declare(metadata float* %value, metadata !7125, metadata !2138), !dbg !7126
  call void @llvm.dbg.declare(metadata float* %delta, metadata !7127, metadata !2138), !dbg !7128
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7129
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 1, !dbg !7130
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !7131
  store i32 %call, i32* %ps, align 4, !dbg !7132
  %1 = load i32, i32* %ps, align 4, !dbg !7133
  %shr = ashr i32 %1, 15, !dbg !7134
  store i32 %shr, i32* %si, align 4, !dbg !7135
  %2 = load i32, i32* %ps, align 4, !dbg !7136
  %and = and i32 %2, 32767, !dbg !7137
  %3 = load i32, i32* %si, align 4, !dbg !7138
  %sub = sub nsw i32 0, %3, !dbg !7139
  %xor = xor i32 %and, %sub, !dbg !7140
  %4 = load i32, i32* %si, align 4, !dbg !7141
  %add = add nsw i32 %xor, %4, !dbg !7142
  %conv = sitofp i32 %add to float, !dbg !7143
  %mul = fmul float %conv, 0x3F00002000000000, !dbg !7144
  store float %mul, float* %value, align 4, !dbg !7145
  %5 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7146
  %gb1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %5, i32 0, i32 1, !dbg !7147
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 8), !dbg !7148
  store i32 %call2, i32* %step_i, align 4, !dbg !7149
  %6 = load i32, i32* %step_i, align 4, !dbg !7150
  %7 = load i32, i32* %step_max, align 4, !dbg !7152
  %cmp = icmp sgt i32 %6, %7, !dbg !7153
  br i1 %cmp, label %if.then, label %if.end, !dbg !7154

if.then:                                          ; preds = %entry
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7155
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 0, !dbg !7157
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !7157
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !7155
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i32 0, i32 0)), !dbg !7158
  store i32 -1, i32* %retval, align 4, !dbg !7159
  br label %return, !dbg !7159

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %step_i, align 4, !dbg !7160
  %idxprom = sext i32 %11 to i64, !dbg !7161
  %arrayidx = getelementptr inbounds [101 x float], [101 x float]* @ff_dca_lfe_step_size_16, i64 0, i64 %idxprom, !dbg !7161
  %12 = load float, float* %arrayidx, align 4, !dbg !7161
  store float %12, float* %step, align 4, !dbg !7162
  store i32 0, i32* %i, align 4, !dbg !7163
  br label %for.cond, !dbg !7164

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !7165
  %cmp4 = icmp slt i32 %13, 64, !dbg !7167
  br i1 %cmp4, label %for.body, label %for.end, !dbg !7168

for.body:                                         ; preds = %for.cond
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7169
  %gb6 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 1, !dbg !7170
  %call7 = call i32 @get_bits(%struct.GetBitContext* %gb6, i32 4), !dbg !7171
  store i32 %call7, i32* %code, align 4, !dbg !7172
  %15 = load float, float* %step, align 4, !dbg !7173
  %mul8 = fmul float %15, 1.250000e-01, !dbg !7174
  store float %mul8, float* %delta, align 4, !dbg !7175
  %16 = load i32, i32* %code, align 4, !dbg !7176
  %and9 = and i32 %16, 4, !dbg !7178
  %tobool = icmp ne i32 %and9, 0, !dbg !7178
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !7179

if.then10:                                        ; preds = %for.body
  %17 = load float, float* %step, align 4, !dbg !7180
  %18 = load float, float* %delta, align 4, !dbg !7181
  %add11 = fadd float %18, %17, !dbg !7181
  store float %add11, float* %delta, align 4, !dbg !7181
  br label %if.end12, !dbg !7182

if.end12:                                         ; preds = %if.then10, %for.body
  %19 = load i32, i32* %code, align 4, !dbg !7183
  %and13 = and i32 %19, 2, !dbg !7185
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7185
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !7186

if.then15:                                        ; preds = %if.end12
  %20 = load float, float* %step, align 4, !dbg !7187
  %mul16 = fmul float %20, 5.000000e-01, !dbg !7188
  %21 = load float, float* %delta, align 4, !dbg !7189
  %add17 = fadd float %21, %mul16, !dbg !7189
  store float %add17, float* %delta, align 4, !dbg !7189
  br label %if.end18, !dbg !7190

if.end18:                                         ; preds = %if.then15, %if.end12
  %22 = load i32, i32* %code, align 4, !dbg !7191
  %and19 = and i32 %22, 1, !dbg !7193
  %tobool20 = icmp ne i32 %and19, 0, !dbg !7193
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !7194

if.then21:                                        ; preds = %if.end18
  %23 = load float, float* %step, align 4, !dbg !7195
  %mul22 = fmul float %23, 2.500000e-01, !dbg !7196
  %24 = load float, float* %delta, align 4, !dbg !7197
  %add23 = fadd float %24, %mul22, !dbg !7197
  store float %add23, float* %delta, align 4, !dbg !7197
  br label %if.end24, !dbg !7198

if.end24:                                         ; preds = %if.then21, %if.end18
  %25 = load i32, i32* %code, align 4, !dbg !7199
  %and25 = and i32 %25, 8, !dbg !7201
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7201
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !7202

if.then27:                                        ; preds = %if.end24
  %26 = load float, float* %delta, align 4, !dbg !7203
  %27 = load float, float* %value, align 4, !dbg !7205
  %sub28 = fsub float %27, %26, !dbg !7205
  store float %sub28, float* %value, align 4, !dbg !7205
  %28 = load float, float* %value, align 4, !dbg !7206
  %cmp29 = fcmp olt float %28, -3.000000e+00, !dbg !7208
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7209

if.then31:                                        ; preds = %if.then27
  store float -3.000000e+00, float* %value, align 4, !dbg !7210
  br label %if.end32, !dbg !7211

if.end32:                                         ; preds = %if.then31, %if.then27
  br label %if.end38, !dbg !7212

if.else:                                          ; preds = %if.end24
  %29 = load float, float* %delta, align 4, !dbg !7213
  %30 = load float, float* %value, align 4, !dbg !7215
  %add33 = fadd float %30, %29, !dbg !7215
  store float %add33, float* %value, align 4, !dbg !7215
  %31 = load float, float* %value, align 4, !dbg !7216
  %cmp34 = fcmp ogt float %31, 3.000000e+00, !dbg !7218
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !7219

if.then36:                                        ; preds = %if.else
  store float 3.000000e+00, float* %value, align 4, !dbg !7220
  br label %if.end37, !dbg !7221

if.end37:                                         ; preds = %if.then36, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end32
  %32 = load i32, i32* %code, align 4, !dbg !7222
  %and39 = and i32 %32, 7, !dbg !7223
  %idxprom40 = sext i32 %and39 to i64, !dbg !7224
  %arrayidx41 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_dca_lfe_delta_index_16, i64 0, i64 %idxprom40, !dbg !7224
  %33 = load i8, i8* %arrayidx41, align 1, !dbg !7224
  %conv42 = sext i8 %33 to i32, !dbg !7224
  %34 = load i32, i32* %step_i, align 4, !dbg !7225
  %add43 = add nsw i32 %34, %conv42, !dbg !7225
  store i32 %add43, i32* %step_i, align 4, !dbg !7225
  %35 = load i32, i32* %step_i, align 4, !dbg !7226
  %36 = load i32, i32* %step_max, align 4, !dbg !7227
  store i32 %35, i32* %a.addr.i, align 4, !dbg !7228
  store i32 0, i32* %amin.addr.i, align 4, !dbg !7228
  store i32 %36, i32* %amax.addr.i, align 4, !dbg !7228
  %37 = load i32, i32* %a.addr.i, align 4, !dbg !7229
  %38 = load i32, i32* %amin.addr.i, align 4, !dbg !7230
  %cmp.i = icmp slt i32 %37, %38, !dbg !7231
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7232

if.then.i:                                        ; preds = %if.end38
  %39 = load i32, i32* %amin.addr.i, align 4, !dbg !7233
  store i32 %39, i32* %retval.i, align 4, !dbg !7234
  br label %av_clip_c.exit, !dbg !7234

if.else.i:                                        ; preds = %if.end38
  %40 = load i32, i32* %a.addr.i, align 4, !dbg !7235
  %41 = load i32, i32* %amax.addr.i, align 4, !dbg !7236
  %cmp1.i = icmp sgt i32 %40, %41, !dbg !7237
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7238

if.then2.i:                                       ; preds = %if.else.i
  %42 = load i32, i32* %amax.addr.i, align 4, !dbg !7239
  store i32 %42, i32* %retval.i, align 4, !dbg !7240
  br label %av_clip_c.exit, !dbg !7240

if.else3.i:                                       ; preds = %if.else.i
  %43 = load i32, i32* %a.addr.i, align 4, !dbg !7241
  store i32 %43, i32* %retval.i, align 4, !dbg !7242
  br label %av_clip_c.exit, !dbg !7242

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %44 = load i32, i32* %retval.i, align 4, !dbg !7243
  store i32 %44, i32* %step_i, align 4, !dbg !7244
  %45 = load i32, i32* %step_i, align 4, !dbg !7245
  %idxprom45 = sext i32 %45 to i64, !dbg !7246
  %arrayidx46 = getelementptr inbounds [101 x float], [101 x float]* @ff_dca_lfe_step_size_16, i64 0, i64 %idxprom45, !dbg !7246
  %46 = load float, float* %arrayidx46, align 4, !dbg !7246
  store float %46, float* %step, align 4, !dbg !7247
  %47 = load float, float* %value, align 4, !dbg !7248
  %48 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7249
  %lfe_scale = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %48, i32 0, i32 44, !dbg !7250
  %49 = load float, float* %lfe_scale, align 8, !dbg !7250
  %mul47 = fmul float %47, %49, !dbg !7251
  %50 = load i32, i32* %i, align 4, !dbg !7252
  %idxprom48 = sext i32 %50 to i64, !dbg !7253
  %51 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7253
  %lfe_data = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %51, i32 0, i32 42, !dbg !7254
  %arrayidx49 = getelementptr inbounds [64 x float], [64 x float]* %lfe_data, i64 0, i64 %idxprom48, !dbg !7253
  store float %mul47, float* %arrayidx49, align 4, !dbg !7255
  br label %for.inc, !dbg !7256

for.inc:                                          ; preds = %av_clip_c.exit
  %52 = load i32, i32* %i, align 4, !dbg !7257
  %inc = add nsw i32 %52, 1, !dbg !7257
  store i32 %inc, i32* %i, align 4, !dbg !7257
  br label %for.cond, !dbg !7259, !llvm.loop !7260

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7262
  br label %return, !dbg !7262

return:                                           ; preds = %for.end, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !7263
  ret i32 %53, !dbg !7263
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #6 !dbg !7264 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7265, metadata !2138), !dbg !7266
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7267, metadata !2138), !dbg !7268
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !7269, metadata !2138), !dbg !7270
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !7271, metadata !2138), !dbg !7272
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7273, metadata !2138), !dbg !7274
  store i32 0, i32* %ret, align 4, !dbg !7274
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !7275
  %cmp = icmp sge i32 %0, 2147483135, !dbg !7277
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7278

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !7279
  %cmp1 = icmp slt i32 %1, 0, !dbg !7281
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !7282

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !7283
  %tobool = icmp ne i8* %2, null, !dbg !7283
  br i1 %tobool, label %if.end, label %if.then, !dbg !7285

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !7286
  store i8* null, i8** %buffer.addr, align 8, !dbg !7288
  store i32 -1094995529, i32* %ret, align 4, !dbg !7289
  br label %if.end, !dbg !7290

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !7291
  %add = add nsw i32 %3, 7, !dbg !7292
  %shr = ashr i32 %add, 3, !dbg !7293
  store i32 %shr, i32* %buffer_size, align 4, !dbg !7294
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !7295
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7296
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !7297
  store i8* %4, i8** %buffer3, align 8, !dbg !7298
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !7299
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7300
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !7301
  store i32 %6, i32* %size_in_bits, align 4, !dbg !7302
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !7303
  %add4 = add nsw i32 %8, 8, !dbg !7304
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7305
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !7306
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !7307
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !7308
  %11 = load i32, i32* %buffer_size, align 4, !dbg !7309
  %idx.ext = sext i32 %11 to i64, !dbg !7310
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7310
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7311
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !7312
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !7313
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7314
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !7315
  store i32 0, i32* %index, align 8, !dbg !7316
  %14 = load i32, i32* %ret, align 4, !dbg !7317
  ret i32 %14, !dbg !7318
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #6 !dbg !7319 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7322, metadata !2138), !dbg !7323
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7324, metadata !2138), !dbg !7325
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7326, metadata !2138), !dbg !7327
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7328, metadata !2138), !dbg !7329
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7330
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7331
  %1 = load i32, i32* %index, align 8, !dbg !7331
  store i32 %1, i32* %re_index, align 4, !dbg !7329
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7332, metadata !2138), !dbg !7333
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7334, metadata !2138), !dbg !7335
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7336
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7337
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7337
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7335
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7338
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7339
  %5 = load i8*, i8** %buffer, align 8, !dbg !7339
  %6 = load i32, i32* %re_index, align 4, !dbg !7340
  %shr = lshr i32 %6, 3, !dbg !7341
  %idx.ext = zext i32 %shr to i64, !dbg !7342
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7342
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7343
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7343
  %8 = load i32, i32* %l, align 1, !dbg !7343
  %9 = load i32, i32* %re_index, align 4, !dbg !7344
  %and = and i32 %9, 7, !dbg !7345
  %shr4 = lshr i32 %8, %and, !dbg !7346
  store i32 %shr4, i32* %re_cache, align 4, !dbg !7347
  %10 = load i32, i32* %re_cache, align 4, !dbg !7348
  %11 = load i32, i32* %n.addr, align 4, !dbg !7349
  %call = call i32 @zero_extend(i32 %10, i32 %11) #1, !dbg !7350
  store i32 %call, i32* %tmp, align 4, !dbg !7351
  %12 = load i32, i32* %re_size_plus8, align 4, !dbg !7352
  %13 = load i32, i32* %re_index, align 4, !dbg !7353
  %14 = load i32, i32* %n.addr, align 4, !dbg !7354
  %add = add i32 %13, %14, !dbg !7355
  %cmp = icmp ugt i32 %12, %add, !dbg !7356
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7357

cond.true:                                        ; preds = %entry
  %15 = load i32, i32* %re_index, align 4, !dbg !7358
  %16 = load i32, i32* %n.addr, align 4, !dbg !7360
  %add5 = add i32 %15, %16, !dbg !7361
  br label %cond.end, !dbg !7362

cond.false:                                       ; preds = %entry
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !7363
  br label %cond.end, !dbg !7365

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add5, %cond.true ], [ %17, %cond.false ], !dbg !7366
  store i32 %cond, i32* %re_index, align 4, !dbg !7368
  %18 = load i32, i32* %re_index, align 4, !dbg !7369
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7370
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %19, i32 0, i32 2, !dbg !7371
  store i32 %18, i32* %index6, align 8, !dbg !7372
  %20 = load i32, i32* %tmp, align 4, !dbg !7373
  ret i32 %20, !dbg !7374
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @zero_extend(i32 %val, i32 %bits) #8 !dbg !7375 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7379, metadata !2138), !dbg !7380
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7381, metadata !2138), !dbg !7382
  %0 = load i32, i32* %val.addr, align 4, !dbg !7383
  %1 = load i32, i32* %bits.addr, align 4, !dbg !7384
  %conv = zext i32 %1 to i64, !dbg !7384
  %sub = sub i64 32, %conv, !dbg !7385
  %sh_prom = trunc i64 %sub to i32, !dbg !7386
  %shl = shl i32 %0, %sh_prom, !dbg !7386
  %2 = load i32, i32* %bits.addr, align 4, !dbg !7387
  %conv1 = zext i32 %2 to i64, !dbg !7387
  %sub2 = sub i64 32, %conv1, !dbg !7388
  %sh_prom3 = trunc i64 %sub2 to i32, !dbg !7389
  %shr = lshr i32 %shl, %sh_prom3, !dbg !7389
  ret i32 %shr, !dbg !7390
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #6 !dbg !7391 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7394, metadata !2138), !dbg !7395
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7396
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !7397
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !7397
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7398
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !7399
  %sub = sub nsw i32 %1, %call, !dbg !7400
  ret i32 %sub, !dbg !7401
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_tonal(%struct.DCALbrDecoder* %s, i32 %group) #0 !dbg !7402 {
entry:
  %s.addr.i185 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i185, metadata !7405, metadata !2138), !dbg !7409
  %n.addr.i186 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i186, metadata !7417, metadata !2138), !dbg !7418
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !7405, metadata !2138), !dbg !7419
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !7417, metadata !2138), !dbg !7421
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7422, metadata !2138), !dbg !7426
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %group.addr = alloca i32, align 4
  %amp = alloca [32 x i32], align 16
  %phs = alloca [32 x i32], align 16
  %diff = alloca i32, align 4
  %main_amp = alloca i32, align 4
  %shift = alloca i32, align 4
  %sf = alloca i32, align 4
  %sf_idx = alloca i32, align 4
  %ch = alloca i32, align 4
  %main_ch = alloca i32, align 4
  %freq = alloca i32, align 4
  %ch_nbits = alloca i32, align 4
  %t = alloca %struct.DCALbrTone*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !7428, metadata !2138), !dbg !7429
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !7430, metadata !2138), !dbg !7431
  call void @llvm.dbg.declare(metadata [32 x i32]* %amp, metadata !7432, metadata !2138), !dbg !7434
  call void @llvm.dbg.declare(metadata [32 x i32]* %phs, metadata !7435, metadata !2138), !dbg !7436
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7437, metadata !2138), !dbg !7438
  call void @llvm.dbg.declare(metadata i32* %main_amp, metadata !7439, metadata !2138), !dbg !7440
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7441, metadata !2138), !dbg !7442
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !7443, metadata !2138), !dbg !7444
  call void @llvm.dbg.declare(metadata i32* %sf_idx, metadata !7445, metadata !2138), !dbg !7446
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7447, metadata !2138), !dbg !7448
  call void @llvm.dbg.declare(metadata i32* %main_ch, metadata !7449, metadata !2138), !dbg !7450
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !7451, metadata !2138), !dbg !7452
  call void @llvm.dbg.declare(metadata i32* %ch_nbits, metadata !7453, metadata !2138), !dbg !7454
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7455
  %nchannels_total = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 8, !dbg !7456
  %1 = load i32, i32* %nchannels_total, align 32, !dbg !7456
  store i32 %1, i32* %x.addr.i, align 4, !dbg !7457
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !7458
  %sub.i = sub nsw i32 %2, 1, !dbg !7459
  %shl.i = shl i32 %sub.i, 1, !dbg !7460
  %or.i = or i32 %shl.i, 1, !dbg !7461
  %3 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #10, !dbg !7462
  %sub1.i = sub nsw i32 31, %3, !dbg !7463
  store i32 %sub1.i, i32* %ch_nbits, align 4, !dbg !7454
  store i32 0, i32* %sf, align 4, !dbg !7464
  br label %for.cond, !dbg !7465

for.cond:                                         ; preds = %for.inc180, %entry
  %4 = load i32, i32* %sf, align 4, !dbg !7466
  %5 = load i32, i32* %group.addr, align 4, !dbg !7468
  %shl = shl i32 1, %5, !dbg !7469
  %cmp = icmp slt i32 %4, %shl, !dbg !7470
  br i1 %cmp, label %for.body, label %for.end184, !dbg !7471

for.body:                                         ; preds = %for.cond
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7472
  %framenum = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 18, !dbg !7473
  %7 = load i32, i32* %framenum, align 8, !dbg !7473
  %8 = load i32, i32* %group.addr, align 4, !dbg !7474
  %shl1 = shl i32 %7, %8, !dbg !7475
  %9 = load i32, i32* %sf, align 4, !dbg !7476
  %add = add nsw i32 %shl1, %9, !dbg !7477
  %and = and i32 %add, 31, !dbg !7478
  store i32 %and, i32* %sf_idx, align 4, !dbg !7479
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7480
  %ntones = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 48, !dbg !7481
  %11 = load i32, i32* %ntones, align 4, !dbg !7481
  %conv = trunc i32 %11 to i16, !dbg !7480
  %12 = load i32, i32* %sf_idx, align 4, !dbg !7482
  %idxprom = sext i32 %12 to i64, !dbg !7483
  %13 = load i32, i32* %group.addr, align 4, !dbg !7484
  %idxprom2 = sext i32 %13 to i64, !dbg !7483
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7483
  %tonal_bounds = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 46, !dbg !7485
  %arrayidx = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds, i64 0, i64 %idxprom2, !dbg !7483
  %arrayidx3 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx, i64 0, i64 %idxprom, !dbg !7483
  %arrayidx4 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx3, i64 0, i64 0, !dbg !7483
  store i16 %conv, i16* %arrayidx4, align 2, !dbg !7486
  store i32 1, i32* %freq, align 4, !dbg !7487
  br label %for.cond5, !dbg !7488

for.cond5:                                        ; preds = %for.inc169, %for.body
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7489
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 1, !dbg !7491
  %call6 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !7492
  %cmp7 = icmp slt i32 %call6, 1, !dbg !7493
  br i1 %cmp7, label %if.then, label %if.end, !dbg !7494

if.then:                                          ; preds = %for.cond5
  %16 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7495
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %16, i32 0, i32 0, !dbg !7497
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !7497
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !7495
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i32 0, i32 0)), !dbg !7498
  store i32 -1, i32* %retval, align 4, !dbg !7499
  br label %return, !dbg !7499

if.end:                                           ; preds = %for.cond5
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7500
  %gb9 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %19, i32 0, i32 1, !dbg !7501
  %20 = load i32, i32* %group.addr, align 4, !dbg !7502
  %idxprom10 = sext i32 %20 to i64, !dbg !7503
  %arrayidx11 = getelementptr inbounds [5 x %struct.VLC], [5 x %struct.VLC]* @ff_dca_vlc_tnl_grp, i64 0, i64 %idxprom10, !dbg !7503
  %call12 = call i32 @parse_vlc(%struct.GetBitContext* %gb9, %struct.VLC* %arrayidx11, i32 2), !dbg !7504
  store i32 %call12, i32* %diff, align 4, !dbg !7505
  %21 = load i32, i32* %diff, align 4, !dbg !7506
  %conv13 = zext i32 %21 to i64, !dbg !7506
  %cmp14 = icmp uge i64 %conv13, 44, !dbg !7508
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !7509

if.then16:                                        ; preds = %if.end
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7510
  %avctx17 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %22, i32 0, i32 0, !dbg !7512
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx17, align 32, !dbg !7512
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !7510
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0)), !dbg !7513
  store i32 -1, i32* %retval, align 4, !dbg !7514
  br label %return, !dbg !7514

if.end18:                                         ; preds = %if.end
  %25 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7515
  %gb19 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %25, i32 0, i32 1, !dbg !7516
  %26 = load i32, i32* %diff, align 4, !dbg !7517
  %shr = lshr i32 %26, 2, !dbg !7518
  store %struct.GetBitContext* %gb19, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7519
  store i32 %shr, i32* %n.addr.i, align 4, !dbg !7519
  %27 = load i32, i32* %n.addr.i, align 4, !dbg !7520
  %tobool.i = icmp ne i32 %27, 0, !dbg !7520
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !7520

cond.true.i:                                      ; preds = %if.end18
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7521
  %29 = load i32, i32* %n.addr.i, align 4, !dbg !7523
  %call.i = call i32 @get_bits(%struct.GetBitContext* %28, i32 %29) #10, !dbg !7524
  br label %get_bitsz.exit, !dbg !7525

cond.false.i:                                     ; preds = %if.end18
  br label %get_bitsz.exit, !dbg !7526

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !7528
  %30 = load i32, i32* %diff, align 4, !dbg !7530
  %idxprom21 = zext i32 %30 to i64, !dbg !7531
  %arrayidx22 = getelementptr inbounds [44 x i16], [44 x i16]* @ff_dca_fst_amp, i64 0, i64 %idxprom21, !dbg !7531
  %31 = load i16, i16* %arrayidx22, align 2, !dbg !7531
  %conv23 = zext i16 %31 to i32, !dbg !7531
  %add24 = add nsw i32 %cond.i, %conv23, !dbg !7532
  store i32 %add24, i32* %diff, align 4, !dbg !7533
  %32 = load i32, i32* %diff, align 4, !dbg !7534
  %cmp25 = icmp ule i32 %32, 1, !dbg !7536
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7537

if.then27:                                        ; preds = %get_bitsz.exit
  br label %for.end171, !dbg !7538

if.end28:                                         ; preds = %get_bitsz.exit
  %33 = load i32, i32* %diff, align 4, !dbg !7539
  %sub = sub i32 %33, 2, !dbg !7540
  %34 = load i32, i32* %freq, align 4, !dbg !7541
  %add29 = add i32 %34, %sub, !dbg !7541
  store i32 %add29, i32* %freq, align 4, !dbg !7541
  %35 = load i32, i32* %freq, align 4, !dbg !7542
  %36 = load i32, i32* %group.addr, align 4, !dbg !7544
  %sub30 = sub nsw i32 5, %36, !dbg !7545
  %shr31 = ashr i32 %35, %sub30, !dbg !7546
  %37 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7547
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %37, i32 0, i32 14, !dbg !7548
  %38 = load i32, i32* %nsubbands, align 8, !dbg !7548
  %mul = mul nsw i32 %38, 4, !dbg !7549
  %sub32 = sub nsw i32 %mul, 6, !dbg !7550
  %cmp33 = icmp sgt i32 %shr31, %sub32, !dbg !7551
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !7552

if.then35:                                        ; preds = %if.end28
  %39 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7553
  %avctx36 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %39, i32 0, i32 0, !dbg !7555
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx36, align 32, !dbg !7555
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !7553
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i32 0, i32 0)), !dbg !7556
  store i32 -1, i32* %retval, align 4, !dbg !7557
  br label %return, !dbg !7557

if.end37:                                         ; preds = %if.end28
  %42 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7558
  %gb38 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %42, i32 0, i32 1, !dbg !7559
  %43 = load i32, i32* %ch_nbits, align 4, !dbg !7560
  store %struct.GetBitContext* %gb38, %struct.GetBitContext** %s.addr.i185, align 8, !dbg !7561
  store i32 %43, i32* %n.addr.i186, align 4, !dbg !7561
  %44 = load i32, i32* %n.addr.i186, align 4, !dbg !7562
  %tobool.i187 = icmp ne i32 %44, 0, !dbg !7562
  br i1 %tobool.i187, label %cond.true.i189, label %cond.false.i190, !dbg !7562

cond.true.i189:                                   ; preds = %if.end37
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i185, align 8, !dbg !7563
  %46 = load i32, i32* %n.addr.i186, align 4, !dbg !7564
  %call.i188 = call i32 @get_bits(%struct.GetBitContext* %45, i32 %46) #10, !dbg !7565
  br label %get_bitsz.exit192, !dbg !7566

cond.false.i190:                                  ; preds = %if.end37
  br label %get_bitsz.exit192, !dbg !7567

get_bitsz.exit192:                                ; preds = %cond.true.i189, %cond.false.i190
  %cond.i191 = phi i32 [ %call.i188, %cond.true.i189 ], [ 0, %cond.false.i190 ], !dbg !7568
  store i32 %cond.i191, i32* %main_ch, align 4, !dbg !7569
  %47 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7570
  %gb40 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %47, i32 0, i32 1, !dbg !7571
  %call41 = call i32 @parse_vlc(%struct.GetBitContext* %gb40, %struct.VLC* @ff_dca_vlc_tnl_scf, i32 2), !dbg !7572
  %48 = load i32, i32* %freq, align 4, !dbg !7573
  %49 = load i32, i32* %group.addr, align 4, !dbg !7574
  %sub42 = sub nsw i32 7, %49, !dbg !7575
  %shr43 = ashr i32 %48, %sub42, !dbg !7576
  %idxprom44 = sext i32 %shr43 to i64, !dbg !7577
  %arrayidx45 = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_freq_to_sb, i64 0, i64 %idxprom44, !dbg !7577
  %50 = load i8, i8* %arrayidx45, align 1, !dbg !7577
  %idxprom46 = zext i8 %50 to i64, !dbg !7578
  %51 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7578
  %tonal_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %51, i32 0, i32 45, !dbg !7579
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %tonal_scf, i64 0, i64 %idxprom46, !dbg !7578
  %52 = load i8, i8* %arrayidx47, align 1, !dbg !7578
  %conv48 = zext i8 %52 to i32, !dbg !7578
  %add49 = add nsw i32 %call41, %conv48, !dbg !7580
  %53 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7581
  %limited_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %53, i32 0, i32 12, !dbg !7582
  %54 = load i32, i32* %limited_range, align 16, !dbg !7582
  %add50 = add nsw i32 %add49, %54, !dbg !7583
  %sub51 = sub nsw i32 %add50, 2, !dbg !7584
  store i32 %sub51, i32* %main_amp, align 4, !dbg !7585
  %55 = load i32, i32* %main_amp, align 4, !dbg !7586
  %cmp52 = icmp ult i32 %55, 56, !dbg !7587
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !7586

cond.true:                                        ; preds = %get_bitsz.exit192
  %56 = load i32, i32* %main_amp, align 4, !dbg !7588
  br label %cond.end, !dbg !7590

cond.false:                                       ; preds = %get_bitsz.exit192
  br label %cond.end, !dbg !7591

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ 0, %cond.false ], !dbg !7593
  %57 = load i32, i32* %main_ch, align 4, !dbg !7595
  %idxprom54 = sext i32 %57 to i64, !dbg !7596
  %arrayidx55 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom54, !dbg !7596
  store i32 %cond, i32* %arrayidx55, align 4, !dbg !7597
  %58 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7598
  %gb56 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %58, i32 0, i32 1, !dbg !7599
  %call57 = call i32 @get_bits(%struct.GetBitContext* %gb56, i32 3), !dbg !7600
  %59 = load i32, i32* %main_ch, align 4, !dbg !7601
  %idxprom58 = sext i32 %59 to i64, !dbg !7602
  %arrayidx59 = getelementptr inbounds [32 x i32], [32 x i32]* %phs, i64 0, i64 %idxprom58, !dbg !7602
  store i32 %call57, i32* %arrayidx59, align 4, !dbg !7603
  store i32 0, i32* %ch, align 4, !dbg !7604
  br label %for.cond60, !dbg !7606

for.cond60:                                       ; preds = %for.inc, %cond.end
  %60 = load i32, i32* %ch, align 4, !dbg !7607
  %61 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7610
  %nchannels_total61 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %61, i32 0, i32 8, !dbg !7611
  %62 = load i32, i32* %nchannels_total61, align 32, !dbg !7611
  %cmp62 = icmp slt i32 %60, %62, !dbg !7612
  br i1 %cmp62, label %for.body64, label %for.end, !dbg !7613

for.body64:                                       ; preds = %for.cond60
  %63 = load i32, i32* %ch, align 4, !dbg !7614
  %64 = load i32, i32* %main_ch, align 4, !dbg !7617
  %cmp65 = icmp eq i32 %63, %64, !dbg !7618
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !7619

if.then67:                                        ; preds = %for.body64
  br label %for.inc, !dbg !7620

if.end68:                                         ; preds = %for.body64
  %65 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7621
  %gb69 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %65, i32 0, i32 1, !dbg !7623
  %call70 = call i32 @get_bits1(%struct.GetBitContext* %gb69), !dbg !7624
  %tobool = icmp ne i32 %call70, 0, !dbg !7624
  br i1 %tobool, label %if.then71, label %if.else, !dbg !7625

if.then71:                                        ; preds = %if.end68
  %66 = load i32, i32* %main_ch, align 4, !dbg !7626
  %idxprom72 = sext i32 %66 to i64, !dbg !7628
  %arrayidx73 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom72, !dbg !7628
  %67 = load i32, i32* %arrayidx73, align 4, !dbg !7628
  %68 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7629
  %gb74 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %68, i32 0, i32 1, !dbg !7630
  %call75 = call i32 @parse_vlc(%struct.GetBitContext* %gb74, %struct.VLC* @ff_dca_vlc_damp, i32 1), !dbg !7631
  %sub76 = sub i32 %67, %call75, !dbg !7632
  %69 = load i32, i32* %ch, align 4, !dbg !7633
  %idxprom77 = sext i32 %69 to i64, !dbg !7634
  %arrayidx78 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom77, !dbg !7634
  store i32 %sub76, i32* %arrayidx78, align 4, !dbg !7635
  %70 = load i32, i32* %main_ch, align 4, !dbg !7636
  %idxprom79 = sext i32 %70 to i64, !dbg !7637
  %arrayidx80 = getelementptr inbounds [32 x i32], [32 x i32]* %phs, i64 0, i64 %idxprom79, !dbg !7637
  %71 = load i32, i32* %arrayidx80, align 4, !dbg !7637
  %72 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7638
  %gb81 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %72, i32 0, i32 1, !dbg !7639
  %call82 = call i32 @parse_vlc(%struct.GetBitContext* %gb81, %struct.VLC* @ff_dca_vlc_dph, i32 1), !dbg !7640
  %sub83 = sub i32 %71, %call82, !dbg !7641
  %73 = load i32, i32* %ch, align 4, !dbg !7642
  %idxprom84 = sext i32 %73 to i64, !dbg !7643
  %arrayidx85 = getelementptr inbounds [32 x i32], [32 x i32]* %phs, i64 0, i64 %idxprom84, !dbg !7643
  store i32 %sub83, i32* %arrayidx85, align 4, !dbg !7644
  br label %if.end90, !dbg !7645

if.else:                                          ; preds = %if.end68
  %74 = load i32, i32* %ch, align 4, !dbg !7646
  %idxprom86 = sext i32 %74 to i64, !dbg !7648
  %arrayidx87 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom86, !dbg !7648
  store i32 0, i32* %arrayidx87, align 4, !dbg !7649
  %75 = load i32, i32* %ch, align 4, !dbg !7650
  %idxprom88 = sext i32 %75 to i64, !dbg !7651
  %arrayidx89 = getelementptr inbounds [32 x i32], [32 x i32]* %phs, i64 0, i64 %idxprom88, !dbg !7651
  store i32 0, i32* %arrayidx89, align 4, !dbg !7652
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.then71
  br label %for.inc, !dbg !7653

for.inc:                                          ; preds = %if.end90, %if.then67
  %76 = load i32, i32* %ch, align 4, !dbg !7654
  %inc = add nsw i32 %76, 1, !dbg !7654
  store i32 %inc, i32* %ch, align 4, !dbg !7654
  br label %for.cond60, !dbg !7656, !llvm.loop !7657

for.end:                                          ; preds = %for.cond60
  %77 = load i32, i32* %main_ch, align 4, !dbg !7659
  %idxprom91 = sext i32 %77 to i64, !dbg !7661
  %arrayidx92 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom91, !dbg !7661
  %78 = load i32, i32* %arrayidx92, align 4, !dbg !7661
  %tobool93 = icmp ne i32 %78, 0, !dbg !7661
  br i1 %tobool93, label %if.then94, label %if.end168, !dbg !7662

if.then94:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.DCALbrTone** %t, metadata !7663, metadata !2138), !dbg !7666
  %79 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7667
  %ntones95 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %79, i32 0, i32 48, !dbg !7668
  %80 = load i32, i32* %ntones95, align 4, !dbg !7668
  %idxprom96 = sext i32 %80 to i64, !dbg !7669
  %81 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7669
  %tones = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %81, i32 0, i32 47, !dbg !7670
  %arrayidx97 = getelementptr inbounds [512 x %struct.DCALbrTone], [512 x %struct.DCALbrTone]* %tones, i64 0, i64 %idxprom96, !dbg !7669
  store %struct.DCALbrTone* %arrayidx97, %struct.DCALbrTone** %t, align 8, !dbg !7666
  %82 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7671
  %ntones98 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %82, i32 0, i32 48, !dbg !7672
  %83 = load i32, i32* %ntones98, align 4, !dbg !7672
  %add99 = add nsw i32 %83, 1, !dbg !7673
  %and100 = and i32 %add99, 511, !dbg !7674
  %84 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7675
  %ntones101 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %84, i32 0, i32 48, !dbg !7676
  store i32 %and100, i32* %ntones101, align 4, !dbg !7677
  %85 = load i32, i32* %freq, align 4, !dbg !7678
  %86 = load i32, i32* %group.addr, align 4, !dbg !7679
  %sub102 = sub nsw i32 5, %86, !dbg !7680
  %shr103 = ashr i32 %85, %sub102, !dbg !7681
  %conv104 = trunc i32 %shr103 to i8, !dbg !7678
  %87 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7682
  %x_freq = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %87, i32 0, i32 0, !dbg !7683
  store i8 %conv104, i8* %x_freq, align 1, !dbg !7684
  %88 = load i32, i32* %freq, align 4, !dbg !7685
  %89 = load i32, i32* %group.addr, align 4, !dbg !7686
  %sub105 = sub nsw i32 5, %89, !dbg !7687
  %shl106 = shl i32 1, %sub105, !dbg !7688
  %sub107 = sub nsw i32 %shl106, 1, !dbg !7689
  %and108 = and i32 %88, %sub107, !dbg !7690
  %90 = load i32, i32* %group.addr, align 4, !dbg !7691
  %shl109 = shl i32 %and108, %90, !dbg !7692
  %conv110 = trunc i32 %shl109 to i8, !dbg !7693
  %91 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7694
  %f_delt = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %91, i32 0, i32 1, !dbg !7695
  store i8 %conv110, i8* %f_delt, align 1, !dbg !7696
  %92 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7697
  %x_freq111 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %92, i32 0, i32 0, !dbg !7698
  %93 = load i8, i8* %x_freq111, align 1, !dbg !7698
  %conv112 = zext i8 %93 to i32, !dbg !7697
  %and113 = and i32 %conv112, 1, !dbg !7699
  %mul114 = mul nsw i32 %and113, 128, !dbg !7700
  %sub115 = sub nsw i32 256, %mul114, !dbg !7701
  %94 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7702
  %f_delt116 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %94, i32 0, i32 1, !dbg !7703
  %95 = load i8, i8* %f_delt116, align 1, !dbg !7703
  %conv117 = zext i8 %95 to i32, !dbg !7702
  %mul118 = mul nsw i32 %conv117, 4, !dbg !7704
  %sub119 = sub nsw i32 %sub115, %mul118, !dbg !7705
  %conv120 = trunc i32 %sub119 to i8, !dbg !7706
  %96 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7707
  %ph_rot = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %96, i32 0, i32 2, !dbg !7708
  store i8 %conv120, i8* %ph_rot, align 1, !dbg !7709
  %97 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7710
  %x_freq121 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %97, i32 0, i32 0, !dbg !7711
  %98 = load i8, i8* %x_freq121, align 1, !dbg !7711
  %conv122 = zext i8 %98 to i32, !dbg !7710
  %and123 = and i32 %conv122, 3, !dbg !7712
  %mul124 = mul nsw i32 %and123, 2, !dbg !7713
  %99 = load i32, i32* %freq, align 4, !dbg !7714
  %and125 = and i32 %99, 1, !dbg !7715
  %add126 = add nsw i32 %mul124, %and125, !dbg !7716
  %idxprom127 = sext i32 %add126 to i64, !dbg !7717
  %arrayidx128 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_dca_ph0_shift, i64 0, i64 %idxprom127, !dbg !7717
  %100 = load i8, i8* %arrayidx128, align 1, !dbg !7717
  %conv129 = sext i8 %100 to i32, !dbg !7717
  %101 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7718
  %ph_rot130 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %101, i32 0, i32 2, !dbg !7719
  %102 = load i8, i8* %ph_rot130, align 1, !dbg !7719
  %conv131 = zext i8 %102 to i32, !dbg !7718
  %103 = load i32, i32* %group.addr, align 4, !dbg !7720
  %sub132 = sub nsw i32 5, %103, !dbg !7721
  %shl133 = shl i32 %conv131, %sub132, !dbg !7722
  %104 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7723
  %ph_rot134 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %104, i32 0, i32 2, !dbg !7724
  %105 = load i8, i8* %ph_rot134, align 1, !dbg !7724
  %conv135 = zext i8 %105 to i32, !dbg !7723
  %sub136 = sub nsw i32 %shl133, %conv135, !dbg !7725
  %sub137 = sub nsw i32 %conv129, %sub136, !dbg !7726
  store i32 %sub137, i32* %shift, align 4, !dbg !7727
  store i32 0, i32* %ch, align 4, !dbg !7728
  br label %for.cond138, !dbg !7730

for.cond138:                                      ; preds = %for.inc165, %if.then94
  %106 = load i32, i32* %ch, align 4, !dbg !7731
  %107 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7734
  %nchannels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %107, i32 0, i32 7, !dbg !7735
  %108 = load i32, i32* %nchannels, align 4, !dbg !7735
  %cmp139 = icmp slt i32 %106, %108, !dbg !7736
  br i1 %cmp139, label %for.body141, label %for.end167, !dbg !7737

for.body141:                                      ; preds = %for.cond138
  %109 = load i32, i32* %ch, align 4, !dbg !7738
  %idxprom142 = sext i32 %109 to i64, !dbg !7740
  %arrayidx143 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom142, !dbg !7740
  %110 = load i32, i32* %arrayidx143, align 4, !dbg !7740
  %cmp144 = icmp ult i32 %110, 56, !dbg !7741
  br i1 %cmp144, label %cond.true146, label %cond.false149, !dbg !7740

cond.true146:                                     ; preds = %for.body141
  %111 = load i32, i32* %ch, align 4, !dbg !7742
  %idxprom147 = sext i32 %111 to i64, !dbg !7744
  %arrayidx148 = getelementptr inbounds [32 x i32], [32 x i32]* %amp, i64 0, i64 %idxprom147, !dbg !7744
  %112 = load i32, i32* %arrayidx148, align 4, !dbg !7744
  br label %cond.end150, !dbg !7745

cond.false149:                                    ; preds = %for.body141
  br label %cond.end150, !dbg !7746

cond.end150:                                      ; preds = %cond.false149, %cond.true146
  %cond151 = phi i32 [ %112, %cond.true146 ], [ 0, %cond.false149 ], !dbg !7748
  %conv152 = trunc i32 %cond151 to i8, !dbg !7748
  %113 = load i32, i32* %ch, align 4, !dbg !7750
  %idxprom153 = sext i32 %113 to i64, !dbg !7751
  %114 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7751
  %amp154 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %114, i32 0, i32 4, !dbg !7752
  %arrayidx155 = getelementptr inbounds [6 x i8], [6 x i8]* %amp154, i64 0, i64 %idxprom153, !dbg !7751
  store i8 %conv152, i8* %arrayidx155, align 1, !dbg !7753
  %115 = load i32, i32* %ch, align 4, !dbg !7754
  %idxprom156 = sext i32 %115 to i64, !dbg !7755
  %arrayidx157 = getelementptr inbounds [32 x i32], [32 x i32]* %phs, i64 0, i64 %idxprom156, !dbg !7755
  %116 = load i32, i32* %arrayidx157, align 4, !dbg !7755
  %mul158 = mul i32 %116, 32, !dbg !7756
  %sub159 = sub i32 128, %mul158, !dbg !7757
  %117 = load i32, i32* %shift, align 4, !dbg !7758
  %add160 = add i32 %sub159, %117, !dbg !7759
  %conv161 = trunc i32 %add160 to i8, !dbg !7760
  %118 = load i32, i32* %ch, align 4, !dbg !7761
  %idxprom162 = sext i32 %118 to i64, !dbg !7762
  %119 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !7762
  %phs163 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %119, i32 0, i32 5, !dbg !7763
  %arrayidx164 = getelementptr inbounds [6 x i8], [6 x i8]* %phs163, i64 0, i64 %idxprom162, !dbg !7762
  store i8 %conv161, i8* %arrayidx164, align 1, !dbg !7764
  br label %for.inc165, !dbg !7765

for.inc165:                                       ; preds = %cond.end150
  %120 = load i32, i32* %ch, align 4, !dbg !7766
  %inc166 = add nsw i32 %120, 1, !dbg !7766
  store i32 %inc166, i32* %ch, align 4, !dbg !7766
  br label %for.cond138, !dbg !7768, !llvm.loop !7769

for.end167:                                       ; preds = %for.cond138
  br label %if.end168, !dbg !7771

if.end168:                                        ; preds = %for.end167, %for.end
  br label %for.inc169, !dbg !7772

for.inc169:                                       ; preds = %if.end168
  %121 = load i32, i32* %freq, align 4, !dbg !7773
  %inc170 = add nsw i32 %121, 1, !dbg !7773
  store i32 %inc170, i32* %freq, align 4, !dbg !7773
  br label %for.cond5, !dbg !7775, !llvm.loop !7776

for.end171:                                       ; preds = %if.then27
  %122 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7778
  %ntones172 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %122, i32 0, i32 48, !dbg !7779
  %123 = load i32, i32* %ntones172, align 4, !dbg !7779
  %conv173 = trunc i32 %123 to i16, !dbg !7778
  %124 = load i32, i32* %sf_idx, align 4, !dbg !7780
  %idxprom174 = sext i32 %124 to i64, !dbg !7781
  %125 = load i32, i32* %group.addr, align 4, !dbg !7782
  %idxprom175 = sext i32 %125 to i64, !dbg !7781
  %126 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !7781
  %tonal_bounds176 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %126, i32 0, i32 46, !dbg !7783
  %arrayidx177 = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds176, i64 0, i64 %idxprom175, !dbg !7781
  %arrayidx178 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx177, i64 0, i64 %idxprom174, !dbg !7781
  %arrayidx179 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx178, i64 0, i64 1, !dbg !7781
  store i16 %conv173, i16* %arrayidx179, align 2, !dbg !7784
  br label %for.inc180, !dbg !7785

for.inc180:                                       ; preds = %for.end171
  %127 = load i32, i32* %diff, align 4, !dbg !7786
  %tobool181 = icmp ne i32 %127, 0, !dbg !7786
  %cond182 = select i1 %tobool181, i32 8, i32 1, !dbg !7786
  %128 = load i32, i32* %sf, align 4, !dbg !7788
  %add183 = add nsw i32 %128, %cond182, !dbg !7788
  store i32 %add183, i32* %sf, align 4, !dbg !7788
  br label %for.cond, !dbg !7789, !llvm.loop !7790

for.end184:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7792
  br label %return, !dbg !7792

return:                                           ; preds = %for.end184, %if.then35, %if.then16, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !7793
  ret i32 %129, !dbg !7793
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #6 !dbg !7794 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7799, metadata !2138), !dbg !7800
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7801
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7802
  %1 = load i32, i32* %index, align 8, !dbg !7802
  ret i32 %1, !dbg !7803
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @parse_vlc(%struct.GetBitContext* %s, %struct.VLC* %vlc, i32 %max_depth) #6 !dbg !7804 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !7818, metadata !2138), !dbg !7822
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !7824, metadata !2138), !dbg !7825
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !7826, metadata !2138), !dbg !7827
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !7828, metadata !2138), !dbg !7829
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !7830, metadata !2138), !dbg !7831
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !7832, metadata !2138), !dbg !7833
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !7834, metadata !2138), !dbg !7835
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !7836, metadata !2138), !dbg !7837
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !7838, metadata !2138), !dbg !7840
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !7841, metadata !2138), !dbg !7842
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !7843, metadata !2138), !dbg !7844
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %vlc.addr = alloca %struct.VLC*, align 8
  %max_depth.addr = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7845, metadata !2138), !dbg !7846
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !7847, metadata !2138), !dbg !7848
  store i32 %max_depth, i32* %max_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr, metadata !7849, metadata !2138), !dbg !7850
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7851, metadata !2138), !dbg !7852
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7853
  %1 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !7854
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %1, i32 0, i32 1, !dbg !7855
  %2 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !7855
  %3 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !7856
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %3, i32 0, i32 0, !dbg !7857
  %4 = load i32, i32* %bits, align 8, !dbg !7857
  %5 = load i32, i32* %max_depth.addr, align 4, !dbg !7858
  store %struct.GetBitContext* %0, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7859
  store [2 x i16]* %2, [2 x i16]** %table.addr.i, align 8, !dbg !7859
  store i32 %4, i32* %bits.addr.i, align 4, !dbg !7859
  store i32 %5, i32* %max_depth.addr.i, align 4, !dbg !7859
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7860
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !7861
  %7 = load i32, i32* %index.i, align 8, !dbg !7861
  store i32 %7, i32* %re_index.i, align 4, !dbg !7833
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7862
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 4, !dbg !7863
  %9 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !7863
  store i32 %9, i32* %re_size_plus8.i, align 4, !dbg !7837
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7864
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !7865
  %11 = load i8*, i8** %buffer.i, align 8, !dbg !7865
  %12 = load i32, i32* %re_index.i, align 4, !dbg !7866
  %shr.i = lshr i32 %12, 3, !dbg !7867
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !7868
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !7868
  %13 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !7869
  %l.i = bitcast %union.unaligned_32* %13 to i32*, !dbg !7869
  %14 = load i32, i32* %l.i, align 1, !dbg !7869
  %15 = load i32, i32* %re_index.i, align 4, !dbg !7870
  %and.i = and i32 %15, 7, !dbg !7871
  %shr1.i = lshr i32 %14, %and.i, !dbg !7872
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !7873
  %16 = load i32, i32* %re_cache.i, align 4, !dbg !7874
  %17 = load i32, i32* %bits.addr.i, align 4, !dbg !7876
  %call.i = call i32 @zero_extend(i32 %16, i32 %17) #1, !dbg !7877
  store i32 %call.i, i32* %index2.i, align 4, !dbg !7878
  %18 = load i32, i32* %index2.i, align 4, !dbg !7879
  %idxprom.i = zext i32 %18 to i64, !dbg !7880
  %19 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7880
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 %idxprom.i, !dbg !7880
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !7880
  %20 = load i16, i16* %arrayidx3.i, align 2, !dbg !7880
  %conv.i = sext i16 %20 to i32, !dbg !7880
  store i32 %conv.i, i32* %code.i, align 4, !dbg !7881
  %21 = load i32, i32* %index2.i, align 4, !dbg !7882
  %idxprom4.i = zext i32 %21 to i64, !dbg !7883
  %22 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7883
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %22, i64 %idxprom4.i, !dbg !7883
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !7883
  %23 = load i16, i16* %arrayidx6.i, align 2, !dbg !7883
  %conv7.i = sext i16 %23 to i32, !dbg !7883
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !7884
  %24 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7885
  %cmp.i = icmp sgt i32 %24, 1, !dbg !7886
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !7887

land.lhs.true.i:                                  ; preds = %entry
  %25 = load i32, i32* %n.i, align 4, !dbg !7888
  %cmp9.i = icmp slt i32 %25, 0, !dbg !7891
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !7892

if.then.i:                                        ; preds = %land.lhs.true.i
  %26 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7893
  %27 = load i32, i32* %re_index.i, align 4, !dbg !7896
  %28 = load i32, i32* %bits.addr.i, align 4, !dbg !7897
  %add.i = add i32 %27, %28, !dbg !7898
  %cmp11.i = icmp ugt i32 %26, %add.i, !dbg !7899
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !7900

cond.true.i:                                      ; preds = %if.then.i
  %29 = load i32, i32* %re_index.i, align 4, !dbg !7901
  %30 = load i32, i32* %bits.addr.i, align 4, !dbg !7903
  %add13.i = add i32 %29, %30, !dbg !7904
  br label %cond.end.i, !dbg !7905

cond.false.i:                                     ; preds = %if.then.i
  %31 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7906
  br label %cond.end.i, !dbg !7908

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %31, %cond.false.i ], !dbg !7909
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !7911
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7912
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %32, i32 0, i32 0, !dbg !7913
  %33 = load i8*, i8** %buffer14.i, align 8, !dbg !7913
  %34 = load i32, i32* %re_index.i, align 4, !dbg !7914
  %shr15.i = lshr i32 %34, 3, !dbg !7915
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !7916
  %add.ptr17.i = getelementptr inbounds i8, i8* %33, i64 %idx.ext16.i, !dbg !7916
  %35 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !7917
  %l18.i = bitcast %union.unaligned_32* %35 to i32*, !dbg !7917
  %36 = load i32, i32* %l18.i, align 1, !dbg !7917
  %37 = load i32, i32* %re_index.i, align 4, !dbg !7918
  %and19.i = and i32 %37, 7, !dbg !7919
  %shr20.i = lshr i32 %36, %and19.i, !dbg !7920
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !7921
  %38 = load i32, i32* %n.i, align 4, !dbg !7922
  %sub.i = sub nsw i32 0, %38, !dbg !7923
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !7924
  %39 = load i32, i32* %re_cache.i, align 4, !dbg !7925
  %40 = load i32, i32* %nb_bits.i, align 4, !dbg !7926
  %call21.i = call i32 @zero_extend(i32 %39, i32 %40) #1, !dbg !7927
  %41 = load i32, i32* %code.i, align 4, !dbg !7928
  %add22.i = add i32 %call21.i, %41, !dbg !7929
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !7930
  %42 = load i32, i32* %index2.i, align 4, !dbg !7931
  %idxprom23.i = zext i32 %42 to i64, !dbg !7932
  %43 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7932
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %43, i64 %idxprom23.i, !dbg !7932
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !7932
  %44 = load i16, i16* %arrayidx25.i, align 2, !dbg !7932
  %conv26.i = sext i16 %44 to i32, !dbg !7932
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !7933
  %45 = load i32, i32* %index2.i, align 4, !dbg !7934
  %idxprom27.i = zext i32 %45 to i64, !dbg !7935
  %46 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7935
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %46, i64 %idxprom27.i, !dbg !7935
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !7935
  %47 = load i16, i16* %arrayidx29.i, align 2, !dbg !7935
  %conv30.i = sext i16 %47 to i32, !dbg !7935
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !7936
  %48 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7937
  %cmp31.i = icmp sgt i32 %48, 2, !dbg !7938
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !7939

land.lhs.true33.i:                                ; preds = %cond.end.i
  %49 = load i32, i32* %n.i, align 4, !dbg !7940
  %cmp34.i = icmp slt i32 %49, 0, !dbg !7943
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !7944

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %50 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7945
  %51 = load i32, i32* %re_index.i, align 4, !dbg !7948
  %52 = load i32, i32* %nb_bits.i, align 4, !dbg !7949
  %add37.i = add i32 %51, %52, !dbg !7950
  %cmp38.i = icmp ugt i32 %50, %add37.i, !dbg !7951
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !7952

cond.true40.i:                                    ; preds = %if.then36.i
  %53 = load i32, i32* %re_index.i, align 4, !dbg !7953
  %54 = load i32, i32* %nb_bits.i, align 4, !dbg !7955
  %add41.i = add i32 %53, %54, !dbg !7956
  br label %cond.end43.i, !dbg !7957

cond.false42.i:                                   ; preds = %if.then36.i
  %55 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7958
  br label %cond.end43.i, !dbg !7960

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %55, %cond.false42.i ], !dbg !7961
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !7963
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7964
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %56, i32 0, i32 0, !dbg !7965
  %57 = load i8*, i8** %buffer45.i, align 8, !dbg !7965
  %58 = load i32, i32* %re_index.i, align 4, !dbg !7966
  %shr46.i = lshr i32 %58, 3, !dbg !7967
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !7968
  %add.ptr48.i = getelementptr inbounds i8, i8* %57, i64 %idx.ext47.i, !dbg !7968
  %59 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !7969
  %l49.i = bitcast %union.unaligned_32* %59 to i32*, !dbg !7969
  %60 = load i32, i32* %l49.i, align 1, !dbg !7969
  %61 = load i32, i32* %re_index.i, align 4, !dbg !7970
  %and50.i = and i32 %61, 7, !dbg !7971
  %shr51.i = lshr i32 %60, %and50.i, !dbg !7972
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !7973
  %62 = load i32, i32* %n.i, align 4, !dbg !7974
  %sub52.i = sub nsw i32 0, %62, !dbg !7975
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !7976
  %63 = load i32, i32* %re_cache.i, align 4, !dbg !7977
  %64 = load i32, i32* %nb_bits.i, align 4, !dbg !7978
  %call53.i = call i32 @zero_extend(i32 %63, i32 %64) #1, !dbg !7979
  %65 = load i32, i32* %code.i, align 4, !dbg !7980
  %add54.i = add i32 %call53.i, %65, !dbg !7981
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !7982
  %66 = load i32, i32* %index2.i, align 4, !dbg !7983
  %idxprom55.i = zext i32 %66 to i64, !dbg !7984
  %67 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7984
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %67, i64 %idxprom55.i, !dbg !7984
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !7984
  %68 = load i16, i16* %arrayidx57.i, align 2, !dbg !7984
  %conv58.i = sext i16 %68 to i32, !dbg !7984
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !7985
  %69 = load i32, i32* %index2.i, align 4, !dbg !7986
  %idxprom59.i = zext i32 %69 to i64, !dbg !7987
  %70 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7987
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %70, i64 %idxprom59.i, !dbg !7987
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !7987
  %71 = load i16, i16* %arrayidx61.i, align 2, !dbg !7987
  %conv62.i = sext i16 %71 to i32, !dbg !7987
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !7988
  br label %if.end.i, !dbg !7989

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !7990

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %entry
  %72 = load i32, i32* %n.i, align 4, !dbg !7992
  %73 = load i32, i32* %re_cache.i, align 4, !dbg !7995
  %shr65.i = lshr i32 %73, %72, !dbg !7995
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !7995
  %74 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7996
  %75 = load i32, i32* %re_index.i, align 4, !dbg !7997
  %76 = load i32, i32* %n.i, align 4, !dbg !7998
  %add66.i = add i32 %75, %76, !dbg !7999
  %cmp67.i = icmp ugt i32 %74, %add66.i, !dbg !8000
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !8001

cond.true69.i:                                    ; preds = %if.end63.i
  %77 = load i32, i32* %re_index.i, align 4, !dbg !8002
  %78 = load i32, i32* %n.i, align 4, !dbg !8004
  %add70.i = add i32 %77, %78, !dbg !8005
  br label %get_vlc2.exit, !dbg !8006

cond.false71.i:                                   ; preds = %if.end63.i
  %79 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8007
  br label %get_vlc2.exit, !dbg !8009

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %79, %cond.false71.i ], !dbg !8010
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !8012
  %80 = load i32, i32* %re_index.i, align 4, !dbg !8013
  %81 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8014
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %81, i32 0, i32 2, !dbg !8015
  store i32 %80, i32* %index75.i, align 8, !dbg !8016
  %82 = load i32, i32* %code.i, align 4, !dbg !8017
  store i32 %82, i32* %v, align 4, !dbg !7852
  %83 = load i32, i32* %v, align 4, !dbg !8018
  %cmp = icmp sgt i32 %83, 0, !dbg !8020
  br i1 %cmp, label %if.then, label %if.end, !dbg !8021

if.then:                                          ; preds = %get_vlc2.exit
  %84 = load i32, i32* %v, align 4, !dbg !8022
  %sub = sub nsw i32 %84, 1, !dbg !8023
  store i32 %sub, i32* %retval, align 4, !dbg !8024
  br label %return, !dbg !8024

if.end:                                           ; preds = %get_vlc2.exit
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8025
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8026
  %call1 = call i32 @get_bits(%struct.GetBitContext* %86, i32 3), !dbg !8027
  %add = add i32 %call1, 1, !dbg !8028
  %call2 = call i32 @get_bits(%struct.GetBitContext* %85, i32 %add), !dbg !8029
  store i32 %call2, i32* %retval, align 4, !dbg !8031
  br label %return, !dbg !8031

return:                                           ; preds = %if.end, %if.then
  %87 = load i32, i32* %retval, align 4, !dbg !8032
  ret i32 %87, !dbg !8032
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #6 !dbg !8033 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8036, metadata !2138), !dbg !8037
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8038, metadata !2138), !dbg !8039
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8040
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8041
  %1 = load i32, i32* %index1, align 8, !dbg !8041
  store i32 %1, i32* %index, align 4, !dbg !8039
  call void @llvm.dbg.declare(metadata i8* %result, metadata !8042, metadata !2138), !dbg !8043
  %2 = load i32, i32* %index, align 4, !dbg !8044
  %shr = lshr i32 %2, 3, !dbg !8045
  %idxprom = zext i32 %shr to i64, !dbg !8046
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8046
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !8047
  %4 = load i8*, i8** %buffer, align 8, !dbg !8047
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8046
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8046
  store i8 %5, i8* %result, align 1, !dbg !8043
  %6 = load i32, i32* %index, align 4, !dbg !8048
  %and = and i32 %6, 7, !dbg !8049
  %7 = load i8, i8* %result, align 1, !dbg !8050
  %conv = zext i8 %7 to i32, !dbg !8050
  %shr2 = ashr i32 %conv, %and, !dbg !8050
  %conv3 = trunc i32 %shr2 to i8, !dbg !8050
  store i8 %conv3, i8* %result, align 1, !dbg !8050
  %8 = load i8, i8* %result, align 1, !dbg !8051
  %conv4 = zext i8 %8 to i32, !dbg !8051
  %and5 = and i32 %conv4, 1, !dbg !8051
  %conv6 = trunc i32 %and5 to i8, !dbg !8051
  store i8 %conv6, i8* %result, align 1, !dbg !8051
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8052
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !8054
  %10 = load i32, i32* %index7, align 8, !dbg !8054
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8055
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !8056
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8056
  %cmp = icmp slt i32 %10, %12, !dbg !8057
  br i1 %cmp, label %if.then, label %if.end, !dbg !8058

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !8059
  %inc = add i32 %13, 1, !dbg !8059
  store i32 %inc, i32* %index, align 4, !dbg !8059
  br label %if.end, !dbg !8060

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !8061
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8062
  %index9 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8063
  store i32 %14, i32* %index9, align 8, !dbg !8064
  %16 = load i8, i8* %result, align 1, !dbg !8065
  %conv10 = zext i8 %16 to i32, !dbg !8065
  ret i32 %conv10, !dbg !8066
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind uwtable
define internal i32 @parse_scale_factors(%struct.DCALbrDecoder* %s, i8* %scf) #0 !dbg !8067 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %scf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %sf = alloca i32, align 4
  %prev = alloca i32, align 4
  %next = alloca i32, align 4
  %dist = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !8070, metadata !2138), !dbg !8071
  store i8* %scf, i8** %scf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scf.addr, metadata !8072, metadata !2138), !dbg !8073
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8074, metadata !2138), !dbg !8075
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !8076, metadata !2138), !dbg !8077
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !8078, metadata !2138), !dbg !8079
  call void @llvm.dbg.declare(metadata i32* %next, metadata !8080, metadata !2138), !dbg !8081
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !8082, metadata !2138), !dbg !8083
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8084
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 1, !dbg !8086
  %call = call i32 @ensure_bits(%struct.GetBitContext* %gb, i32 20), !dbg !8087
  %tobool = icmp ne i32 %call, 0, !dbg !8087
  br i1 %tobool, label %if.then, label %if.end, !dbg !8088

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8089
  br label %return, !dbg !8089

if.end:                                           ; preds = %entry
  %1 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8090
  %gb1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %1, i32 0, i32 1, !dbg !8091
  %call2 = call i32 @parse_vlc(%struct.GetBitContext* %gb1, %struct.VLC* @ff_dca_vlc_fst_rsd_amp, i32 2), !dbg !8092
  store i32 %call2, i32* %prev, align 4, !dbg !8093
  store i32 0, i32* %sf, align 4, !dbg !8094
  br label %for.cond, !dbg !8096

for.cond:                                         ; preds = %for.inc107, %if.end
  %2 = load i32, i32* %sf, align 4, !dbg !8097
  %cmp = icmp slt i32 %2, 7, !dbg !8100
  br i1 %cmp, label %for.body, label %for.end109, !dbg !8101

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %prev, align 4, !dbg !8102
  %conv = trunc i32 %3 to i8, !dbg !8102
  %4 = load i32, i32* %sf, align 4, !dbg !8104
  %idxprom = sext i32 %4 to i64, !dbg !8105
  %5 = load i8*, i8** %scf.addr, align 8, !dbg !8105
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !8105
  store i8 %conv, i8* %arrayidx, align 1, !dbg !8106
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8107
  %gb3 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 1, !dbg !8109
  %call4 = call i32 @ensure_bits(%struct.GetBitContext* %gb3, i32 20), !dbg !8110
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8110
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8111

if.then6:                                         ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !8112
  br label %return, !dbg !8112

if.end7:                                          ; preds = %for.body
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8113
  %gb8 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 1, !dbg !8114
  %call9 = call i32 @parse_vlc(%struct.GetBitContext* %gb8, %struct.VLC* @ff_dca_vlc_rsd_apprx, i32 1), !dbg !8115
  %add = add nsw i32 %call9, 1, !dbg !8116
  store i32 %add, i32* %dist, align 4, !dbg !8117
  %8 = load i32, i32* %dist, align 4, !dbg !8118
  %9 = load i32, i32* %sf, align 4, !dbg !8120
  %sub = sub nsw i32 7, %9, !dbg !8121
  %cmp10 = icmp sgt i32 %8, %sub, !dbg !8122
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8123

if.then12:                                        ; preds = %if.end7
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8124
  %avctx = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 0, !dbg !8126
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !8126
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !8124
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0)), !dbg !8127
  store i32 -1, i32* %retval, align 4, !dbg !8128
  br label %return, !dbg !8128

if.end13:                                         ; preds = %if.end7
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8129
  %gb14 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %13, i32 0, i32 1, !dbg !8131
  %call15 = call i32 @ensure_bits(%struct.GetBitContext* %gb14, i32 20), !dbg !8132
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8132
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8133

if.then17:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !8134
  br label %return, !dbg !8134

if.end18:                                         ; preds = %if.end13
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8135
  %gb19 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 1, !dbg !8136
  %call20 = call i32 @parse_vlc(%struct.GetBitContext* %gb19, %struct.VLC* @ff_dca_vlc_rsd_amp, i32 2), !dbg !8137
  store i32 %call20, i32* %next, align 4, !dbg !8138
  %15 = load i32, i32* %next, align 4, !dbg !8139
  %and = and i32 %15, 1, !dbg !8141
  %tobool21 = icmp ne i32 %and, 0, !dbg !8141
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !8142

if.then22:                                        ; preds = %if.end18
  %16 = load i32, i32* %prev, align 4, !dbg !8143
  %17 = load i32, i32* %next, align 4, !dbg !8144
  %add23 = add nsw i32 %17, 1, !dbg !8145
  %shr = ashr i32 %add23, 1, !dbg !8146
  %add24 = add nsw i32 %16, %shr, !dbg !8147
  store i32 %add24, i32* %next, align 4, !dbg !8148
  br label %if.end27, !dbg !8149

if.else:                                          ; preds = %if.end18
  %18 = load i32, i32* %prev, align 4, !dbg !8150
  %19 = load i32, i32* %next, align 4, !dbg !8151
  %shr25 = ashr i32 %19, 1, !dbg !8152
  %sub26 = sub nsw i32 %18, %shr25, !dbg !8153
  store i32 %sub26, i32* %next, align 4, !dbg !8154
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then22
  %20 = load i32, i32* %dist, align 4, !dbg !8155
  switch i32 %20, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb47
  ], !dbg !8156

sw.bb:                                            ; preds = %if.end27
  %21 = load i32, i32* %next, align 4, !dbg !8157
  %22 = load i32, i32* %prev, align 4, !dbg !8160
  %cmp28 = icmp sgt i32 %21, %22, !dbg !8161
  br i1 %cmp28, label %if.then30, label %if.else38, !dbg !8162

if.then30:                                        ; preds = %sw.bb
  %23 = load i32, i32* %prev, align 4, !dbg !8163
  %24 = load i32, i32* %next, align 4, !dbg !8164
  %25 = load i32, i32* %prev, align 4, !dbg !8165
  %sub31 = sub nsw i32 %24, %25, !dbg !8166
  %shr32 = ashr i32 %sub31, 1, !dbg !8167
  %add33 = add nsw i32 %23, %shr32, !dbg !8168
  %conv34 = trunc i32 %add33 to i8, !dbg !8163
  %26 = load i32, i32* %sf, align 4, !dbg !8169
  %add35 = add nsw i32 %26, 1, !dbg !8170
  %idxprom36 = sext i32 %add35 to i64, !dbg !8171
  %27 = load i8*, i8** %scf.addr, align 8, !dbg !8171
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 %idxprom36, !dbg !8171
  store i8 %conv34, i8* %arrayidx37, align 1, !dbg !8172
  br label %if.end46, !dbg !8171

if.else38:                                        ; preds = %sw.bb
  %28 = load i32, i32* %prev, align 4, !dbg !8173
  %29 = load i32, i32* %prev, align 4, !dbg !8174
  %30 = load i32, i32* %next, align 4, !dbg !8175
  %sub39 = sub nsw i32 %29, %30, !dbg !8176
  %shr40 = ashr i32 %sub39, 1, !dbg !8177
  %sub41 = sub nsw i32 %28, %shr40, !dbg !8178
  %conv42 = trunc i32 %sub41 to i8, !dbg !8173
  %31 = load i32, i32* %sf, align 4, !dbg !8179
  %add43 = add nsw i32 %31, 1, !dbg !8180
  %idxprom44 = sext i32 %add43 to i64, !dbg !8181
  %32 = load i8*, i8** %scf.addr, align 8, !dbg !8181
  %arrayidx45 = getelementptr inbounds i8, i8* %32, i64 %idxprom44, !dbg !8181
  store i8 %conv42, i8* %arrayidx45, align 1, !dbg !8182
  br label %if.end46

if.end46:                                         ; preds = %if.else38, %if.then30
  br label %sw.epilog, !dbg !8183

sw.bb47:                                          ; preds = %if.end27
  %33 = load i32, i32* %next, align 4, !dbg !8184
  %34 = load i32, i32* %prev, align 4, !dbg !8186
  %cmp48 = icmp sgt i32 %33, %34, !dbg !8187
  br i1 %cmp48, label %if.then50, label %if.else72, !dbg !8188

if.then50:                                        ; preds = %sw.bb47
  %35 = load i32, i32* %prev, align 4, !dbg !8189
  %36 = load i32, i32* %next, align 4, !dbg !8191
  %37 = load i32, i32* %prev, align 4, !dbg !8192
  %sub51 = sub nsw i32 %36, %37, !dbg !8193
  %shr52 = ashr i32 %sub51, 2, !dbg !8194
  %add53 = add nsw i32 %35, %shr52, !dbg !8195
  %conv54 = trunc i32 %add53 to i8, !dbg !8189
  %38 = load i32, i32* %sf, align 4, !dbg !8196
  %add55 = add nsw i32 %38, 1, !dbg !8197
  %idxprom56 = sext i32 %add55 to i64, !dbg !8198
  %39 = load i8*, i8** %scf.addr, align 8, !dbg !8198
  %arrayidx57 = getelementptr inbounds i8, i8* %39, i64 %idxprom56, !dbg !8198
  store i8 %conv54, i8* %arrayidx57, align 1, !dbg !8199
  %40 = load i32, i32* %prev, align 4, !dbg !8200
  %41 = load i32, i32* %next, align 4, !dbg !8201
  %42 = load i32, i32* %prev, align 4, !dbg !8202
  %sub58 = sub nsw i32 %41, %42, !dbg !8203
  %shr59 = ashr i32 %sub58, 1, !dbg !8204
  %add60 = add nsw i32 %40, %shr59, !dbg !8205
  %conv61 = trunc i32 %add60 to i8, !dbg !8200
  %43 = load i32, i32* %sf, align 4, !dbg !8206
  %add62 = add nsw i32 %43, 2, !dbg !8207
  %idxprom63 = sext i32 %add62 to i64, !dbg !8208
  %44 = load i8*, i8** %scf.addr, align 8, !dbg !8208
  %arrayidx64 = getelementptr inbounds i8, i8* %44, i64 %idxprom63, !dbg !8208
  store i8 %conv61, i8* %arrayidx64, align 1, !dbg !8209
  %45 = load i32, i32* %prev, align 4, !dbg !8210
  %46 = load i32, i32* %next, align 4, !dbg !8211
  %47 = load i32, i32* %prev, align 4, !dbg !8212
  %sub65 = sub nsw i32 %46, %47, !dbg !8213
  %mul = mul nsw i32 %sub65, 3, !dbg !8214
  %shr66 = ashr i32 %mul, 2, !dbg !8215
  %add67 = add nsw i32 %45, %shr66, !dbg !8216
  %conv68 = trunc i32 %add67 to i8, !dbg !8210
  %48 = load i32, i32* %sf, align 4, !dbg !8217
  %add69 = add nsw i32 %48, 3, !dbg !8218
  %idxprom70 = sext i32 %add69 to i64, !dbg !8219
  %49 = load i8*, i8** %scf.addr, align 8, !dbg !8219
  %arrayidx71 = getelementptr inbounds i8, i8* %49, i64 %idxprom70, !dbg !8219
  store i8 %conv68, i8* %arrayidx71, align 1, !dbg !8220
  br label %if.end95, !dbg !8221

if.else72:                                        ; preds = %sw.bb47
  %50 = load i32, i32* %prev, align 4, !dbg !8222
  %51 = load i32, i32* %prev, align 4, !dbg !8224
  %52 = load i32, i32* %next, align 4, !dbg !8225
  %sub73 = sub nsw i32 %51, %52, !dbg !8226
  %shr74 = ashr i32 %sub73, 2, !dbg !8227
  %sub75 = sub nsw i32 %50, %shr74, !dbg !8228
  %conv76 = trunc i32 %sub75 to i8, !dbg !8222
  %53 = load i32, i32* %sf, align 4, !dbg !8229
  %add77 = add nsw i32 %53, 1, !dbg !8230
  %idxprom78 = sext i32 %add77 to i64, !dbg !8231
  %54 = load i8*, i8** %scf.addr, align 8, !dbg !8231
  %arrayidx79 = getelementptr inbounds i8, i8* %54, i64 %idxprom78, !dbg !8231
  store i8 %conv76, i8* %arrayidx79, align 1, !dbg !8232
  %55 = load i32, i32* %prev, align 4, !dbg !8233
  %56 = load i32, i32* %prev, align 4, !dbg !8234
  %57 = load i32, i32* %next, align 4, !dbg !8235
  %sub80 = sub nsw i32 %56, %57, !dbg !8236
  %shr81 = ashr i32 %sub80, 1, !dbg !8237
  %sub82 = sub nsw i32 %55, %shr81, !dbg !8238
  %conv83 = trunc i32 %sub82 to i8, !dbg !8233
  %58 = load i32, i32* %sf, align 4, !dbg !8239
  %add84 = add nsw i32 %58, 2, !dbg !8240
  %idxprom85 = sext i32 %add84 to i64, !dbg !8241
  %59 = load i8*, i8** %scf.addr, align 8, !dbg !8241
  %arrayidx86 = getelementptr inbounds i8, i8* %59, i64 %idxprom85, !dbg !8241
  store i8 %conv83, i8* %arrayidx86, align 1, !dbg !8242
  %60 = load i32, i32* %prev, align 4, !dbg !8243
  %61 = load i32, i32* %prev, align 4, !dbg !8244
  %62 = load i32, i32* %next, align 4, !dbg !8245
  %sub87 = sub nsw i32 %61, %62, !dbg !8246
  %mul88 = mul nsw i32 %sub87, 3, !dbg !8247
  %shr89 = ashr i32 %mul88, 2, !dbg !8248
  %sub90 = sub nsw i32 %60, %shr89, !dbg !8249
  %conv91 = trunc i32 %sub90 to i8, !dbg !8243
  %63 = load i32, i32* %sf, align 4, !dbg !8250
  %add92 = add nsw i32 %63, 3, !dbg !8251
  %idxprom93 = sext i32 %add92 to i64, !dbg !8252
  %64 = load i8*, i8** %scf.addr, align 8, !dbg !8252
  %arrayidx94 = getelementptr inbounds i8, i8* %64, i64 %idxprom93, !dbg !8252
  store i8 %conv91, i8* %arrayidx94, align 1, !dbg !8253
  br label %if.end95

if.end95:                                         ; preds = %if.else72, %if.then50
  br label %sw.epilog, !dbg !8254

sw.default:                                       ; preds = %if.end27
  store i32 1, i32* %i, align 4, !dbg !8255
  br label %for.cond96, !dbg !8257

for.cond96:                                       ; preds = %for.inc, %sw.default
  %65 = load i32, i32* %i, align 4, !dbg !8258
  %66 = load i32, i32* %dist, align 4, !dbg !8261
  %cmp97 = icmp slt i32 %65, %66, !dbg !8262
  br i1 %cmp97, label %for.body99, label %for.end, !dbg !8263

for.body99:                                       ; preds = %for.cond96
  %67 = load i32, i32* %prev, align 4, !dbg !8264
  %68 = load i32, i32* %next, align 4, !dbg !8265
  %69 = load i32, i32* %prev, align 4, !dbg !8266
  %sub100 = sub nsw i32 %68, %69, !dbg !8267
  %70 = load i32, i32* %i, align 4, !dbg !8268
  %mul101 = mul nsw i32 %sub100, %70, !dbg !8269
  %71 = load i32, i32* %dist, align 4, !dbg !8270
  %div = sdiv i32 %mul101, %71, !dbg !8271
  %add102 = add nsw i32 %67, %div, !dbg !8272
  %conv103 = trunc i32 %add102 to i8, !dbg !8264
  %72 = load i32, i32* %sf, align 4, !dbg !8273
  %73 = load i32, i32* %i, align 4, !dbg !8274
  %add104 = add nsw i32 %72, %73, !dbg !8275
  %idxprom105 = sext i32 %add104 to i64, !dbg !8276
  %74 = load i8*, i8** %scf.addr, align 8, !dbg !8276
  %arrayidx106 = getelementptr inbounds i8, i8* %74, i64 %idxprom105, !dbg !8276
  store i8 %conv103, i8* %arrayidx106, align 1, !dbg !8277
  br label %for.inc, !dbg !8276

for.inc:                                          ; preds = %for.body99
  %75 = load i32, i32* %i, align 4, !dbg !8278
  %inc = add nsw i32 %75, 1, !dbg !8278
  store i32 %inc, i32* %i, align 4, !dbg !8278
  br label %for.cond96, !dbg !8280, !llvm.loop !8281

for.end:                                          ; preds = %for.cond96
  br label %sw.epilog, !dbg !8283

sw.epilog:                                        ; preds = %for.end, %if.end95, %if.end46
  %76 = load i32, i32* %next, align 4, !dbg !8284
  store i32 %76, i32* %prev, align 4, !dbg !8285
  br label %for.inc107, !dbg !8286

for.inc107:                                       ; preds = %sw.epilog
  %77 = load i32, i32* %dist, align 4, !dbg !8287
  %78 = load i32, i32* %sf, align 4, !dbg !8289
  %add108 = add nsw i32 %78, %77, !dbg !8289
  store i32 %add108, i32* %sf, align 4, !dbg !8289
  br label %for.cond, !dbg !8290, !llvm.loop !8291

for.end109:                                       ; preds = %for.cond
  %79 = load i32, i32* %next, align 4, !dbg !8293
  %conv110 = trunc i32 %79 to i8, !dbg !8293
  %80 = load i32, i32* %sf, align 4, !dbg !8294
  %idxprom111 = sext i32 %80 to i64, !dbg !8295
  %81 = load i8*, i8** %scf.addr, align 8, !dbg !8295
  %arrayidx112 = getelementptr inbounds i8, i8* %81, i64 %idxprom111, !dbg !8295
  store i8 %conv110, i8* %arrayidx112, align 1, !dbg !8296
  store i32 0, i32* %retval, align 4, !dbg !8297
  br label %return, !dbg !8297

return:                                           ; preds = %for.end109, %if.then17, %if.then12, %if.then6, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !8298
  ret i32 %82, !dbg !8298
}

; Function Attrs: nounwind uwtable
define internal i32 @ensure_bits(%struct.GetBitContext* %s, i32 %n) #0 !dbg !8299 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %left = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8300, metadata !2138), !dbg !8301
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8302, metadata !2138), !dbg !8303
  call void @llvm.dbg.declare(metadata i32* %left, metadata !8304, metadata !2138), !dbg !8305
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8306
  %call = call i32 @get_bits_left(%struct.GetBitContext* %0), !dbg !8307
  store i32 %call, i32* %left, align 4, !dbg !8305
  %1 = load i32, i32* %left, align 4, !dbg !8308
  %cmp = icmp slt i32 %1, 0, !dbg !8310
  br i1 %cmp, label %if.then, label %if.end, !dbg !8311

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8312
  br label %return, !dbg !8312

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %left, align 4, !dbg !8313
  %3 = load i32, i32* %n.addr, align 4, !dbg !8315
  %cmp1 = icmp slt i32 %2, %3, !dbg !8316
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8317

if.then2:                                         ; preds = %if.end
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8318
  %5 = load i32, i32* %left, align 4, !dbg !8320
  call void @skip_bits_long(%struct.GetBitContext* %4, i32 %5), !dbg !8321
  store i32 1, i32* %retval, align 4, !dbg !8322
  br label %return, !dbg !8322

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8323
  br label %return, !dbg !8323

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8324
  ret i32 %6, !dbg !8324
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_st_code(%struct.GetBitContext* %s, i32 %min_v) #0 !dbg !8325 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %min_v.addr = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8326, metadata !2138), !dbg !8327
  store i32 %min_v, i32* %min_v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_v.addr, metadata !8328, metadata !2138), !dbg !8329
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8330, metadata !2138), !dbg !8331
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8332
  %call = call i32 @parse_vlc(%struct.GetBitContext* %0, %struct.VLC* @ff_dca_vlc_st_grid, i32 2), !dbg !8333
  %1 = load i32, i32* %min_v.addr, align 4, !dbg !8334
  %add = add nsw i32 %call, %1, !dbg !8335
  store i32 %add, i32* %v, align 4, !dbg !8331
  %2 = load i32, i32* %v, align 4, !dbg !8336
  %and = and i32 %2, 1, !dbg !8338
  %tobool = icmp ne i32 %and, 0, !dbg !8338
  br i1 %tobool, label %if.then, label %if.else, !dbg !8339

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %v, align 4, !dbg !8340
  %shr = lshr i32 %3, 1, !dbg !8341
  %add1 = add i32 16, %shr, !dbg !8342
  store i32 %add1, i32* %v, align 4, !dbg !8343
  br label %if.end, !dbg !8344

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %v, align 4, !dbg !8345
  %shr2 = lshr i32 %4, 1, !dbg !8346
  %sub = sub i32 16, %shr2, !dbg !8347
  store i32 %sub, i32* %v, align 4, !dbg !8348
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %v, align 4, !dbg !8349
  %conv = zext i32 %5 to i64, !dbg !8349
  %cmp = icmp uge i64 %conv, 34, !dbg !8351
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !8352

if.then4:                                         ; preds = %if.end
  store i32 16, i32* %v, align 4, !dbg !8353
  br label %if.end5, !dbg !8354

if.end5:                                          ; preds = %if.then4, %if.end
  %6 = load i32, i32* %v, align 4, !dbg !8355
  ret i32 %6, !dbg !8356
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #6 !dbg !8357 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !6913, metadata !2138), !dbg !8360
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !6922, metadata !2138), !dbg !8362
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !6924, metadata !2138), !dbg !8363
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8364, metadata !2138), !dbg !8365
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8366, metadata !2138), !dbg !8367
  %0 = load i32, i32* %n.addr, align 4, !dbg !8368
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8369
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !8370
  %2 = load i32, i32* %index, align 8, !dbg !8370
  %sub = sub nsw i32 0, %2, !dbg !8371
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8372
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !8373
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8373
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8374
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !8375
  %6 = load i32, i32* %index1, align 8, !dbg !8375
  %sub2 = sub nsw i32 %4, %6, !dbg !8376
  store i32 %0, i32* %a.addr.i, align 4, !dbg !8377
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !8377
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !8377
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !8378
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !8379
  %cmp.i = icmp slt i32 %7, %8, !dbg !8380
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8381

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !8382
  store i32 %9, i32* %retval.i, align 4, !dbg !8383
  br label %av_clip_c.exit, !dbg !8383

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !8384
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !8385
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !8386
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8387

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !8388
  store i32 %12, i32* %retval.i, align 4, !dbg !8389
  br label %av_clip_c.exit, !dbg !8389

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !8390
  store i32 %13, i32* %retval.i, align 4, !dbg !8391
  br label %av_clip_c.exit, !dbg !8391

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !8392
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8393
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8394
  %16 = load i32, i32* %index3, align 8, !dbg !8395
  %add = add nsw i32 %16, %14, !dbg !8395
  store i32 %add, i32* %index3, align 8, !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_lpc(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2, i32 %start_sb, i32 %end_sb) #0 !dbg !8397 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %start_sb.addr = alloca i32, align 4
  %end_sb.addr = alloca i32, align 4
  %f = alloca i32, align 4
  %i = alloca i32, align 4
  %sb = alloca i32, align 4
  %ch = alloca i32, align 4
  %codes = alloca [16 x i32], align 16
  %ncodes = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !8400, metadata !2138), !dbg !8401
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !8402, metadata !2138), !dbg !8403
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !8404, metadata !2138), !dbg !8405
  store i32 %start_sb, i32* %start_sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_sb.addr, metadata !8406, metadata !2138), !dbg !8407
  store i32 %end_sb, i32* %end_sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_sb.addr, metadata !8408, metadata !2138), !dbg !8409
  call void @llvm.dbg.declare(metadata i32* %f, metadata !8410, metadata !2138), !dbg !8411
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8412
  %framenum = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 18, !dbg !8413
  %1 = load i32, i32* %framenum, align 8, !dbg !8413
  %and = and i32 %1, 1, !dbg !8414
  store i32 %and, i32* %f, align 4, !dbg !8411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8415, metadata !2138), !dbg !8416
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !8417, metadata !2138), !dbg !8418
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8419, metadata !2138), !dbg !8420
  call void @llvm.dbg.declare(metadata [16 x i32]* %codes, metadata !8421, metadata !2138), !dbg !8422
  %2 = load i32, i32* %start_sb.addr, align 4, !dbg !8423
  store i32 %2, i32* %sb, align 4, !dbg !8425
  br label %for.cond, !dbg !8426

for.cond:                                         ; preds = %for.inc34, %entry
  %3 = load i32, i32* %sb, align 4, !dbg !8427
  %4 = load i32, i32* %end_sb.addr, align 4, !dbg !8430
  %cmp = icmp slt i32 %3, %4, !dbg !8431
  br i1 %cmp, label %for.body, label %for.end36, !dbg !8432

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ncodes, metadata !8433, metadata !2138), !dbg !8435
  %5 = load i32, i32* %sb, align 4, !dbg !8436
  %cmp1 = icmp slt i32 %5, 2, !dbg !8437
  %conv = zext i1 %cmp1 to i32, !dbg !8437
  %add = add nsw i32 1, %conv, !dbg !8438
  %mul = mul nsw i32 8, %add, !dbg !8439
  store i32 %mul, i32* %ncodes, align 4, !dbg !8435
  %6 = load i32, i32* %ch1.addr, align 4, !dbg !8440
  store i32 %6, i32* %ch, align 4, !dbg !8442
  br label %for.cond2, !dbg !8443

for.cond2:                                        ; preds = %for.inc31, %for.body
  %7 = load i32, i32* %ch, align 4, !dbg !8444
  %8 = load i32, i32* %ch2.addr, align 4, !dbg !8447
  %cmp3 = icmp sle i32 %7, %8, !dbg !8448
  br i1 %cmp3, label %for.body5, label %for.end33, !dbg !8449

for.body5:                                        ; preds = %for.cond2
  %9 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8450
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %9, i32 0, i32 1, !dbg !8453
  %10 = load i32, i32* %ncodes, align 4, !dbg !8454
  %mul6 = mul nsw i32 4, %10, !dbg !8455
  %call = call i32 @ensure_bits(%struct.GetBitContext* %gb, i32 %mul6), !dbg !8456
  %tobool = icmp ne i32 %call, 0, !dbg !8456
  br i1 %tobool, label %if.then, label %if.end, !dbg !8457

if.then:                                          ; preds = %for.body5
  store i32 0, i32* %retval, align 4, !dbg !8458
  br label %return, !dbg !8458

if.end:                                           ; preds = %for.body5
  store i32 0, i32* %i, align 4, !dbg !8459
  br label %for.cond7, !dbg !8461

for.cond7:                                        ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !8462
  %12 = load i32, i32* %ncodes, align 4, !dbg !8465
  %cmp8 = icmp slt i32 %11, %12, !dbg !8466
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !8467

for.body10:                                       ; preds = %for.cond7
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8468
  %gb11 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %13, i32 0, i32 1, !dbg !8469
  %call12 = call i32 @get_bits(%struct.GetBitContext* %gb11, i32 4), !dbg !8470
  %14 = load i32, i32* %i, align 4, !dbg !8471
  %idxprom = sext i32 %14 to i64, !dbg !8472
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %codes, i64 0, i64 %idxprom, !dbg !8472
  store i32 %call12, i32* %arrayidx, align 4, !dbg !8473
  br label %for.inc, !dbg !8472

for.inc:                                          ; preds = %for.body10
  %15 = load i32, i32* %i, align 4, !dbg !8474
  %inc = add nsw i32 %15, 1, !dbg !8474
  store i32 %inc, i32* %i, align 4, !dbg !8474
  br label %for.cond7, !dbg !8476, !llvm.loop !8477

for.end:                                          ; preds = %for.cond7
  store i32 0, i32* %i, align 4, !dbg !8479
  br label %for.cond13, !dbg !8481

for.cond13:                                       ; preds = %for.inc28, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !8482
  %17 = load i32, i32* %ncodes, align 4, !dbg !8485
  %div = sdiv i32 %17, 8, !dbg !8486
  %cmp14 = icmp slt i32 %16, %div, !dbg !8487
  br i1 %cmp14, label %for.body16, label %for.end30, !dbg !8488

for.body16:                                       ; preds = %for.cond13
  %18 = load i32, i32* %i, align 4, !dbg !8489
  %idxprom17 = sext i32 %18 to i64, !dbg !8490
  %19 = load i32, i32* %sb, align 4, !dbg !8491
  %idxprom18 = sext i32 %19 to i64, !dbg !8490
  %20 = load i32, i32* %ch, align 4, !dbg !8492
  %idxprom19 = sext i32 %20 to i64, !dbg !8490
  %21 = load i32, i32* %f, align 4, !dbg !8493
  %idxprom20 = sext i32 %21 to i64, !dbg !8490
  %22 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8490
  %lpc_coeff = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %22, i32 0, i32 34, !dbg !8494
  %arrayidx21 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff, i64 0, i64 %idxprom20, !dbg !8490
  %arrayidx22 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !8490
  %arrayidx23 = getelementptr inbounds [3 x [2 x [8 x float]]], [3 x [2 x [8 x float]]]* %arrayidx22, i64 0, i64 %idxprom18, !dbg !8490
  %arrayidx24 = getelementptr inbounds [2 x [8 x float]], [2 x [8 x float]]* %arrayidx23, i64 0, i64 %idxprom17, !dbg !8490
  %arraydecay = getelementptr inbounds [8 x float], [8 x float]* %arrayidx24, i32 0, i32 0, !dbg !8490
  %23 = load i32, i32* %i, align 4, !dbg !8495
  %mul25 = mul nsw i32 %23, 8, !dbg !8496
  %idxprom26 = sext i32 %mul25 to i64, !dbg !8497
  %arrayidx27 = getelementptr inbounds [16 x i32], [16 x i32]* %codes, i64 0, i64 %idxprom26, !dbg !8497
  call void @convert_lpc(float* %arraydecay, i32* %arrayidx27), !dbg !8498
  br label %for.inc28, !dbg !8498

for.inc28:                                        ; preds = %for.body16
  %24 = load i32, i32* %i, align 4, !dbg !8499
  %inc29 = add nsw i32 %24, 1, !dbg !8499
  store i32 %inc29, i32* %i, align 4, !dbg !8499
  br label %for.cond13, !dbg !8501, !llvm.loop !8502

for.end30:                                        ; preds = %for.cond13
  br label %for.inc31, !dbg !8504

for.inc31:                                        ; preds = %for.end30
  %25 = load i32, i32* %ch, align 4, !dbg !8505
  %inc32 = add nsw i32 %25, 1, !dbg !8505
  store i32 %inc32, i32* %ch, align 4, !dbg !8505
  br label %for.cond2, !dbg !8507, !llvm.loop !8508

for.end33:                                        ; preds = %for.cond2
  br label %for.inc34, !dbg !8510

for.inc34:                                        ; preds = %for.end33
  %26 = load i32, i32* %sb, align 4, !dbg !8511
  %inc35 = add nsw i32 %26, 1, !dbg !8511
  store i32 %inc35, i32* %sb, align 4, !dbg !8511
  br label %for.cond, !dbg !8513, !llvm.loop !8514

for.end36:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8516
  br label %return, !dbg !8516

return:                                           ; preds = %for.end36, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8517
  ret i32 %27, !dbg !8517
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_ts(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2, i32 %start_sb, i32 %end_sb, i32 %flag) #0 !dbg !8518 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %start_sb.addr = alloca i32, align 4
  %end_sb.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %sb = alloca i32, align 4
  %sb_g3 = alloca i32, align 4
  %sb_reorder = alloca i32, align 4
  %quant_level = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !8521, metadata !2138), !dbg !8522
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !8523, metadata !2138), !dbg !8524
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !8525, metadata !2138), !dbg !8526
  store i32 %start_sb, i32* %start_sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_sb.addr, metadata !8527, metadata !2138), !dbg !8528
  store i32 %end_sb, i32* %end_sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_sb.addr, metadata !8529, metadata !2138), !dbg !8530
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8531, metadata !2138), !dbg !8532
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !8533, metadata !2138), !dbg !8534
  call void @llvm.dbg.declare(metadata i32* %sb_g3, metadata !8535, metadata !2138), !dbg !8536
  call void @llvm.dbg.declare(metadata i32* %sb_reorder, metadata !8537, metadata !2138), !dbg !8538
  call void @llvm.dbg.declare(metadata i32* %quant_level, metadata !8539, metadata !2138), !dbg !8540
  %0 = load i32, i32* %start_sb.addr, align 4, !dbg !8541
  store i32 %0, i32* %sb, align 4, !dbg !8543
  br label %for.cond, !dbg !8544

for.cond:                                         ; preds = %for.inc107, %entry
  %1 = load i32, i32* %sb, align 4, !dbg !8545
  %2 = load i32, i32* %end_sb.addr, align 4, !dbg !8548
  %cmp = icmp slt i32 %1, %2, !dbg !8549
  br i1 %cmp, label %for.body, label %for.end109, !dbg !8550

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %sb, align 4, !dbg !8551
  %cmp1 = icmp slt i32 %3, 6, !dbg !8554
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8555

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %sb, align 4, !dbg !8556
  store i32 %4, i32* %sb_reorder, align 4, !dbg !8558
  br label %if.end18, !dbg !8559

if.else:                                          ; preds = %for.body
  %5 = load i32, i32* %flag.addr, align 4, !dbg !8560
  %tobool = icmp ne i32 %5, 0, !dbg !8560
  br i1 %tobool, label %land.lhs.true, label %if.else4, !dbg !8563

land.lhs.true:                                    ; preds = %if.else
  %6 = load i32, i32* %sb, align 4, !dbg !8564
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8566
  %max_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 17, !dbg !8567
  %8 = load i32, i32* %max_mono_subband, align 4, !dbg !8567
  %cmp2 = icmp slt i32 %6, %8, !dbg !8568
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !8569

if.then3:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %sb, align 4, !dbg !8570
  %idxprom = sext i32 %9 to i64, !dbg !8572
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8572
  %sb_indices = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 22, !dbg !8573
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %sb_indices, i64 0, i64 %idxprom, !dbg !8572
  %11 = load i8, i8* %arrayidx, align 1, !dbg !8572
  %conv = zext i8 %11 to i32, !dbg !8572
  store i32 %conv, i32* %sb_reorder, align 4, !dbg !8574
  br label %if.end17, !dbg !8575

if.else4:                                         ; preds = %land.lhs.true, %if.else
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8576
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 1, !dbg !8579
  %call = call i32 @ensure_bits(%struct.GetBitContext* %gb, i32 28), !dbg !8580
  %tobool5 = icmp ne i32 %call, 0, !dbg !8580
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !8581

if.then6:                                         ; preds = %if.else4
  br label %for.end109, !dbg !8582

if.end:                                           ; preds = %if.else4
  %13 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8583
  %gb7 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %13, i32 0, i32 1, !dbg !8584
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8585
  %limited_range = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 12, !dbg !8586
  %15 = load i32, i32* %limited_range, align 16, !dbg !8586
  %add = add nsw i32 %15, 3, !dbg !8587
  %call8 = call i32 @get_bits(%struct.GetBitContext* %gb7, i32 %add), !dbg !8588
  store i32 %call8, i32* %sb_reorder, align 4, !dbg !8589
  %16 = load i32, i32* %sb_reorder, align 4, !dbg !8590
  %cmp9 = icmp slt i32 %16, 6, !dbg !8592
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !8593

if.then11:                                        ; preds = %if.end
  store i32 6, i32* %sb_reorder, align 4, !dbg !8594
  br label %if.end12, !dbg !8595

if.end12:                                         ; preds = %if.then11, %if.end
  %17 = load i32, i32* %sb_reorder, align 4, !dbg !8596
  %conv13 = trunc i32 %17 to i8, !dbg !8596
  %18 = load i32, i32* %sb, align 4, !dbg !8597
  %idxprom14 = sext i32 %18 to i64, !dbg !8598
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8598
  %sb_indices15 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %19, i32 0, i32 22, !dbg !8599
  %arrayidx16 = getelementptr inbounds [32 x i8], [32 x i8]* %sb_indices15, i64 0, i64 %idxprom14, !dbg !8598
  store i8 %conv13, i8* %arrayidx16, align 1, !dbg !8600
  br label %if.end17

if.end17:                                         ; preds = %if.end12, %if.then3
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %20 = load i32, i32* %sb_reorder, align 4, !dbg !8601
  %21 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8603
  %nsubbands = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %21, i32 0, i32 14, !dbg !8604
  %22 = load i32, i32* %nsubbands, align 8, !dbg !8604
  %cmp19 = icmp sge i32 %20, %22, !dbg !8605
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !8606

if.then21:                                        ; preds = %if.end18
  store i32 -1, i32* %retval, align 4, !dbg !8607
  br label %return, !dbg !8607

if.end22:                                         ; preds = %if.end18
  %23 = load i32, i32* %sb, align 4, !dbg !8608
  %cmp23 = icmp eq i32 %23, 12, !dbg !8610
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !8611

if.then25:                                        ; preds = %if.end22
  store i32 0, i32* %sb_g3, align 4, !dbg !8612
  br label %for.cond26, !dbg !8615

for.cond26:                                       ; preds = %for.inc, %if.then25
  %24 = load i32, i32* %sb_g3, align 4, !dbg !8616
  %25 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8619
  %g3_avg_only_start_sb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %25, i32 0, i32 15, !dbg !8620
  %26 = load i32, i32* %g3_avg_only_start_sb, align 4, !dbg !8620
  %sub = sub nsw i32 %26, 4, !dbg !8621
  %cmp27 = icmp slt i32 %24, %sub, !dbg !8622
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !8623

for.body29:                                       ; preds = %for.cond26
  %27 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8624
  %28 = load i32, i32* %ch1.addr, align 4, !dbg !8625
  %29 = load i32, i32* %ch2.addr, align 4, !dbg !8626
  %30 = load i32, i32* %sb_g3, align 4, !dbg !8627
  %31 = load i32, i32* %flag.addr, align 4, !dbg !8628
  call void @parse_grid_3(%struct.DCALbrDecoder* %27, i32 %28, i32 %29, i32 %30, i32 %31), !dbg !8629
  br label %for.inc, !dbg !8629

for.inc:                                          ; preds = %for.body29
  %32 = load i32, i32* %sb_g3, align 4, !dbg !8630
  %inc = add nsw i32 %32, 1, !dbg !8630
  store i32 %inc, i32* %sb_g3, align 4, !dbg !8630
  br label %for.cond26, !dbg !8632, !llvm.loop !8633

for.end:                                          ; preds = %for.cond26
  br label %if.end39, !dbg !8635

if.else30:                                        ; preds = %if.end22
  %33 = load i32, i32* %sb, align 4, !dbg !8636
  %cmp31 = icmp slt i32 %33, 12, !dbg !8639
  br i1 %cmp31, label %land.lhs.true33, label %if.end38, !dbg !8640

land.lhs.true33:                                  ; preds = %if.else30
  %34 = load i32, i32* %sb_reorder, align 4, !dbg !8641
  %cmp34 = icmp sge i32 %34, 4, !dbg !8643
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !8644

if.then36:                                        ; preds = %land.lhs.true33
  %35 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8645
  %36 = load i32, i32* %ch1.addr, align 4, !dbg !8647
  %37 = load i32, i32* %ch2.addr, align 4, !dbg !8648
  %38 = load i32, i32* %sb_reorder, align 4, !dbg !8649
  %sub37 = sub nsw i32 %38, 4, !dbg !8650
  %39 = load i32, i32* %flag.addr, align 4, !dbg !8651
  call void @parse_grid_3(%struct.DCALbrDecoder* %35, i32 %36, i32 %37, i32 %sub37, i32 %39), !dbg !8652
  br label %if.end38, !dbg !8653

if.end38:                                         ; preds = %if.then36, %land.lhs.true33, %if.else30
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %for.end
  %40 = load i32, i32* %ch1.addr, align 4, !dbg !8654
  %41 = load i32, i32* %ch2.addr, align 4, !dbg !8656
  %cmp40 = icmp ne i32 %40, %41, !dbg !8657
  br i1 %cmp40, label %if.then42, label %if.end75, !dbg !8658

if.then42:                                        ; preds = %if.end39
  %42 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8659
  %gb43 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %42, i32 0, i32 1, !dbg !8662
  %call44 = call i32 @ensure_bits(%struct.GetBitContext* %gb43, i32 20), !dbg !8663
  %tobool45 = icmp ne i32 %call44, 0, !dbg !8663
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !8664

if.then46:                                        ; preds = %if.then42
  br label %for.end109, !dbg !8665

if.end47:                                         ; preds = %if.then42
  %43 = load i32, i32* %flag.addr, align 4, !dbg !8666
  %tobool48 = icmp ne i32 %43, 0, !dbg !8666
  br i1 %tobool48, label %lor.lhs.false, label %if.then52, !dbg !8668

lor.lhs.false:                                    ; preds = %if.end47
  %44 = load i32, i32* %sb_reorder, align 4, !dbg !8669
  %45 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8671
  %max_mono_subband49 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %45, i32 0, i32 17, !dbg !8672
  %46 = load i32, i32* %max_mono_subband49, align 4, !dbg !8672
  %cmp50 = icmp sge i32 %44, %46, !dbg !8673
  br i1 %cmp50, label %if.then52, label %if.end60, !dbg !8674

if.then52:                                        ; preds = %lor.lhs.false, %if.end47
  %47 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8675
  %gb53 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %47, i32 0, i32 1, !dbg !8676
  %call54 = call i32 @get_bits(%struct.GetBitContext* %gb53, i32 8), !dbg !8677
  %conv55 = trunc i32 %call54 to i8, !dbg !8677
  %48 = load i32, i32* %sb_reorder, align 4, !dbg !8678
  %idxprom56 = sext i32 %48 to i64, !dbg !8679
  %49 = load i32, i32* %ch1.addr, align 4, !dbg !8680
  %div = sdiv i32 %49, 2, !dbg !8681
  %idxprom57 = sext i32 %div to i64, !dbg !8679
  %50 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8679
  %sec_ch_sbms = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %50, i32 0, i32 23, !dbg !8682
  %arrayidx58 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %sec_ch_sbms, i64 0, i64 %idxprom57, !dbg !8679
  %arrayidx59 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx58, i64 0, i64 %idxprom56, !dbg !8679
  store i8 %conv55, i8* %arrayidx59, align 1, !dbg !8683
  br label %if.end60, !dbg !8679

if.end60:                                         ; preds = %if.then52, %lor.lhs.false
  %51 = load i32, i32* %flag.addr, align 4, !dbg !8684
  %tobool61 = icmp ne i32 %51, 0, !dbg !8684
  br i1 %tobool61, label %land.lhs.true62, label %if.end74, !dbg !8686

land.lhs.true62:                                  ; preds = %if.end60
  %52 = load i32, i32* %sb_reorder, align 4, !dbg !8687
  %53 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8689
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %53, i32 0, i32 16, !dbg !8690
  %54 = load i32, i32* %min_mono_subband, align 32, !dbg !8690
  %cmp63 = icmp sge i32 %52, %54, !dbg !8691
  br i1 %cmp63, label %if.then65, label %if.end74, !dbg !8692

if.then65:                                        ; preds = %land.lhs.true62
  %55 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8693
  %gb66 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %55, i32 0, i32 1, !dbg !8694
  %call67 = call i32 @get_bits(%struct.GetBitContext* %gb66, i32 8), !dbg !8695
  %conv68 = trunc i32 %call67 to i8, !dbg !8695
  %56 = load i32, i32* %sb_reorder, align 4, !dbg !8696
  %idxprom69 = sext i32 %56 to i64, !dbg !8697
  %57 = load i32, i32* %ch1.addr, align 4, !dbg !8698
  %div70 = sdiv i32 %57, 2, !dbg !8699
  %idxprom71 = sext i32 %div70 to i64, !dbg !8697
  %58 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8697
  %sec_ch_lrms = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %58, i32 0, i32 24, !dbg !8700
  %arrayidx72 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %sec_ch_lrms, i64 0, i64 %idxprom71, !dbg !8697
  %arrayidx73 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx72, i64 0, i64 %idxprom69, !dbg !8697
  store i8 %conv68, i8* %arrayidx73, align 1, !dbg !8701
  br label %if.end74, !dbg !8697

if.end74:                                         ; preds = %if.then65, %land.lhs.true62, %if.end60
  br label %if.end75, !dbg !8702

if.end75:                                         ; preds = %if.end74, %if.end39
  %59 = load i32, i32* %sb, align 4, !dbg !8703
  %idxprom76 = sext i32 %59 to i64, !dbg !8704
  %60 = load i32, i32* %ch1.addr, align 4, !dbg !8705
  %div77 = sdiv i32 %60, 2, !dbg !8706
  %idxprom78 = sext i32 %div77 to i64, !dbg !8704
  %61 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8704
  %quant_levels = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %61, i32 0, i32 21, !dbg !8707
  %arrayidx79 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* %quant_levels, i64 0, i64 %idxprom78, !dbg !8704
  %arrayidx80 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx79, i64 0, i64 %idxprom76, !dbg !8704
  %62 = load i8, i8* %arrayidx80, align 1, !dbg !8704
  %conv81 = zext i8 %62 to i32, !dbg !8704
  store i32 %conv81, i32* %quant_level, align 4, !dbg !8708
  %63 = load i32, i32* %quant_level, align 4, !dbg !8709
  %tobool82 = icmp ne i32 %63, 0, !dbg !8709
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !8711

if.then83:                                        ; preds = %if.end75
  store i32 -1, i32* %retval, align 4, !dbg !8712
  br label %return, !dbg !8712

if.end84:                                         ; preds = %if.end75
  %64 = load i32, i32* %sb, align 4, !dbg !8713
  %65 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8715
  %max_mono_subband85 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %65, i32 0, i32 17, !dbg !8716
  %66 = load i32, i32* %max_mono_subband85, align 4, !dbg !8716
  %cmp86 = icmp slt i32 %64, %66, !dbg !8717
  br i1 %cmp86, label %land.lhs.true88, label %if.else101, !dbg !8718

land.lhs.true88:                                  ; preds = %if.end84
  %67 = load i32, i32* %sb_reorder, align 4, !dbg !8719
  %68 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8721
  %min_mono_subband89 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %68, i32 0, i32 16, !dbg !8722
  %69 = load i32, i32* %min_mono_subband89, align 32, !dbg !8722
  %cmp90 = icmp sge i32 %67, %69, !dbg !8723
  br i1 %cmp90, label %if.then92, label %if.else101, !dbg !8724

if.then92:                                        ; preds = %land.lhs.true88
  %70 = load i32, i32* %flag.addr, align 4, !dbg !8725
  %tobool93 = icmp ne i32 %70, 0, !dbg !8725
  br i1 %tobool93, label %if.else95, label %if.then94, !dbg !8728

if.then94:                                        ; preds = %if.then92
  %71 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8729
  %72 = load i32, i32* %ch1.addr, align 4, !dbg !8730
  %73 = load i32, i32* %sb_reorder, align 4, !dbg !8731
  %74 = load i32, i32* %quant_level, align 4, !dbg !8732
  call void @parse_ch(%struct.DCALbrDecoder* %71, i32 %72, i32 %73, i32 %74, i32 0), !dbg !8733
  br label %if.end100, !dbg !8733

if.else95:                                        ; preds = %if.then92
  %75 = load i32, i32* %ch1.addr, align 4, !dbg !8734
  %76 = load i32, i32* %ch2.addr, align 4, !dbg !8736
  %cmp96 = icmp ne i32 %75, %76, !dbg !8737
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !8738

if.then98:                                        ; preds = %if.else95
  %77 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8739
  %78 = load i32, i32* %ch2.addr, align 4, !dbg !8740
  %79 = load i32, i32* %sb_reorder, align 4, !dbg !8741
  %80 = load i32, i32* %quant_level, align 4, !dbg !8742
  call void @parse_ch(%struct.DCALbrDecoder* %77, i32 %78, i32 %79, i32 %80, i32 1), !dbg !8743
  br label %if.end99, !dbg !8743

if.end99:                                         ; preds = %if.then98, %if.else95
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then94
  br label %if.end106, !dbg !8744

if.else101:                                       ; preds = %land.lhs.true88, %if.end84
  %81 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8745
  %82 = load i32, i32* %ch1.addr, align 4, !dbg !8747
  %83 = load i32, i32* %sb_reorder, align 4, !dbg !8748
  %84 = load i32, i32* %quant_level, align 4, !dbg !8749
  call void @parse_ch(%struct.DCALbrDecoder* %81, i32 %82, i32 %83, i32 %84, i32 0), !dbg !8750
  %85 = load i32, i32* %ch1.addr, align 4, !dbg !8751
  %86 = load i32, i32* %ch2.addr, align 4, !dbg !8753
  %cmp102 = icmp ne i32 %85, %86, !dbg !8754
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !8755

if.then104:                                       ; preds = %if.else101
  %87 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8756
  %88 = load i32, i32* %ch2.addr, align 4, !dbg !8757
  %89 = load i32, i32* %sb_reorder, align 4, !dbg !8758
  %90 = load i32, i32* %quant_level, align 4, !dbg !8759
  call void @parse_ch(%struct.DCALbrDecoder* %87, i32 %88, i32 %89, i32 %90, i32 0), !dbg !8760
  br label %if.end105, !dbg !8760

if.end105:                                        ; preds = %if.then104, %if.else101
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end100
  br label %for.inc107, !dbg !8761

for.inc107:                                       ; preds = %if.end106
  %91 = load i32, i32* %sb, align 4, !dbg !8762
  %inc108 = add nsw i32 %91, 1, !dbg !8762
  store i32 %inc108, i32* %sb, align 4, !dbg !8762
  br label %for.cond, !dbg !8764, !llvm.loop !8765

for.end109:                                       ; preds = %if.then46, %if.then6, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8767
  br label %return, !dbg !8767

return:                                           ; preds = %for.end109, %if.then83, %if.then21
  %92 = load i32, i32* %retval, align 4, !dbg !8768
  ret i32 %92, !dbg !8768
}

; Function Attrs: nounwind uwtable
define internal void @convert_lpc(float* %coeff, i32* %codes) #0 !dbg !8769 {
entry:
  %coeff.addr = alloca float*, align 8
  %codes.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %rc = alloca float, align 4
  %tmp1 = alloca float, align 4
  %tmp2 = alloca float, align 4
  store float* %coeff, float** %coeff.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coeff.addr, metadata !8772, metadata !2138), !dbg !8773
  store i32* %codes, i32** %codes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %codes.addr, metadata !8774, metadata !2138), !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8776, metadata !2138), !dbg !8777
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8778, metadata !2138), !dbg !8779
  store i32 0, i32* %i, align 4, !dbg !8780
  br label %for.cond, !dbg !8782

for.cond:                                         ; preds = %for.inc22, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8783
  %cmp = icmp slt i32 %0, 8, !dbg !8786
  br i1 %cmp, label %for.body, label %for.end24, !dbg !8787

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %rc, metadata !8788, metadata !2138), !dbg !8790
  %1 = load i32, i32* %i, align 4, !dbg !8791
  %idxprom = sext i32 %1 to i64, !dbg !8792
  %2 = load i32*, i32** %codes.addr, align 8, !dbg !8792
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !8792
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8792
  %idxprom1 = sext i32 %3 to i64, !dbg !8793
  %arrayidx2 = getelementptr inbounds [16 x float], [16 x float]* @lpc_tab, i64 0, i64 %idxprom1, !dbg !8793
  %4 = load float, float* %arrayidx2, align 4, !dbg !8793
  store float %4, float* %rc, align 4, !dbg !8790
  store i32 0, i32* %j, align 4, !dbg !8794
  br label %for.cond3, !dbg !8796

for.cond3:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !8797
  %6 = load i32, i32* %i, align 4, !dbg !8800
  %add = add nsw i32 %6, 1, !dbg !8801
  %div = sdiv i32 %add, 2, !dbg !8802
  %cmp4 = icmp slt i32 %5, %div, !dbg !8803
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !8804

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata float* %tmp1, metadata !8805, metadata !2138), !dbg !8807
  %7 = load i32, i32* %j, align 4, !dbg !8808
  %idxprom6 = sext i32 %7 to i64, !dbg !8809
  %8 = load float*, float** %coeff.addr, align 8, !dbg !8809
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 %idxprom6, !dbg !8809
  %9 = load float, float* %arrayidx7, align 4, !dbg !8809
  store float %9, float* %tmp1, align 4, !dbg !8807
  call void @llvm.dbg.declare(metadata float* %tmp2, metadata !8810, metadata !2138), !dbg !8811
  %10 = load i32, i32* %i, align 4, !dbg !8812
  %11 = load i32, i32* %j, align 4, !dbg !8813
  %sub = sub nsw i32 %10, %11, !dbg !8814
  %sub8 = sub nsw i32 %sub, 1, !dbg !8815
  %idxprom9 = sext i32 %sub8 to i64, !dbg !8816
  %12 = load float*, float** %coeff.addr, align 8, !dbg !8816
  %arrayidx10 = getelementptr inbounds float, float* %12, i64 %idxprom9, !dbg !8816
  %13 = load float, float* %arrayidx10, align 4, !dbg !8816
  store float %13, float* %tmp2, align 4, !dbg !8811
  %14 = load float, float* %tmp1, align 4, !dbg !8817
  %15 = load float, float* %rc, align 4, !dbg !8818
  %16 = load float, float* %tmp2, align 4, !dbg !8819
  %mul = fmul float %15, %16, !dbg !8820
  %add11 = fadd float %14, %mul, !dbg !8821
  %17 = load i32, i32* %j, align 4, !dbg !8822
  %idxprom12 = sext i32 %17 to i64, !dbg !8823
  %18 = load float*, float** %coeff.addr, align 8, !dbg !8823
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 %idxprom12, !dbg !8823
  store float %add11, float* %arrayidx13, align 4, !dbg !8824
  %19 = load float, float* %tmp2, align 4, !dbg !8825
  %20 = load float, float* %rc, align 4, !dbg !8826
  %21 = load float, float* %tmp1, align 4, !dbg !8827
  %mul14 = fmul float %20, %21, !dbg !8828
  %add15 = fadd float %19, %mul14, !dbg !8829
  %22 = load i32, i32* %i, align 4, !dbg !8830
  %23 = load i32, i32* %j, align 4, !dbg !8831
  %sub16 = sub nsw i32 %22, %23, !dbg !8832
  %sub17 = sub nsw i32 %sub16, 1, !dbg !8833
  %idxprom18 = sext i32 %sub17 to i64, !dbg !8834
  %24 = load float*, float** %coeff.addr, align 8, !dbg !8834
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 %idxprom18, !dbg !8834
  store float %add15, float* %arrayidx19, align 4, !dbg !8835
  br label %for.inc, !dbg !8836

for.inc:                                          ; preds = %for.body5
  %25 = load i32, i32* %j, align 4, !dbg !8837
  %inc = add nsw i32 %25, 1, !dbg !8837
  store i32 %inc, i32* %j, align 4, !dbg !8837
  br label %for.cond3, !dbg !8839, !llvm.loop !8840

for.end:                                          ; preds = %for.cond3
  %26 = load float, float* %rc, align 4, !dbg !8842
  %27 = load i32, i32* %i, align 4, !dbg !8843
  %idxprom20 = sext i32 %27 to i64, !dbg !8844
  %28 = load float*, float** %coeff.addr, align 8, !dbg !8844
  %arrayidx21 = getelementptr inbounds float, float* %28, i64 %idxprom20, !dbg !8844
  store float %26, float* %arrayidx21, align 4, !dbg !8845
  br label %for.inc22, !dbg !8846

for.inc22:                                        ; preds = %for.end
  %29 = load i32, i32* %i, align 4, !dbg !8847
  %inc23 = add nsw i32 %29, 1, !dbg !8847
  store i32 %inc23, i32* %i, align 4, !dbg !8847
  br label %for.cond, !dbg !8849, !llvm.loop !8850

for.end24:                                        ; preds = %for.cond
  ret void, !dbg !8852
}

; Function Attrs: nounwind uwtable
define internal void @parse_grid_3(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2, i32 %sb, i32 %flag) #0 !dbg !8853 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !8856, metadata !2138), !dbg !8857
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !8858, metadata !2138), !dbg !8859
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !8860, metadata !2138), !dbg !8861
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !8862, metadata !2138), !dbg !8863
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8864, metadata !2138), !dbg !8865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8866, metadata !2138), !dbg !8867
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8868, metadata !2138), !dbg !8869
  %0 = load i32, i32* %ch1.addr, align 4, !dbg !8870
  store i32 %0, i32* %ch, align 4, !dbg !8872
  br label %for.cond, !dbg !8873

for.cond:                                         ; preds = %for.inc24, %entry
  %1 = load i32, i32* %ch, align 4, !dbg !8874
  %2 = load i32, i32* %ch2.addr, align 4, !dbg !8877
  %cmp = icmp sle i32 %1, %2, !dbg !8878
  br i1 %cmp, label %for.body, label %for.end26, !dbg !8879

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ch, align 4, !dbg !8880
  %4 = load i32, i32* %ch1.addr, align 4, !dbg !8883
  %cmp1 = icmp ne i32 %3, %4, !dbg !8884
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !8885

land.rhs:                                         ; preds = %for.body
  %5 = load i32, i32* %sb.addr, align 4, !dbg !8886
  %add = add nsw i32 %5, 4, !dbg !8888
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8889
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 16, !dbg !8890
  %7 = load i32, i32* %min_mono_subband, align 32, !dbg !8890
  %cmp2 = icmp sge i32 %add, %7, !dbg !8891
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %8 = phi i1 [ false, %for.body ], [ %cmp2, %land.rhs ]
  %land.ext = zext i1 %8 to i32, !dbg !8892
  %9 = load i32, i32* %flag.addr, align 4, !dbg !8894
  %cmp3 = icmp ne i32 %land.ext, %9, !dbg !8895
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8896

if.then:                                          ; preds = %land.end
  br label %for.inc24, !dbg !8897

if.end:                                           ; preds = %land.end
  %10 = load i32, i32* %ch, align 4, !dbg !8898
  %idxprom = sext i32 %10 to i64, !dbg !8900
  %11 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8900
  %grid_3_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %11, i32 0, i32 30, !dbg !8901
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %grid_3_pres, i64 0, i64 %idxprom, !dbg !8900
  %12 = load i32, i32* %arrayidx, align 4, !dbg !8900
  %13 = load i32, i32* %sb.addr, align 4, !dbg !8902
  %shl = shl i32 1, %13, !dbg !8903
  %and = and i32 %12, %shl, !dbg !8904
  %tobool = icmp ne i32 %and, 0, !dbg !8904
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !8905

if.then4:                                         ; preds = %if.end
  br label %for.inc24, !dbg !8906

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8907
  br label %for.cond6, !dbg !8909

for.cond6:                                        ; preds = %for.inc, %if.end5
  %14 = load i32, i32* %i, align 4, !dbg !8910
  %cmp7 = icmp slt i32 %14, 8, !dbg !8913
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !8914

for.body8:                                        ; preds = %for.cond6
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8915
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 1, !dbg !8918
  %call = call i32 @ensure_bits(%struct.GetBitContext* %gb, i32 20), !dbg !8919
  %tobool9 = icmp ne i32 %call, 0, !dbg !8919
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8920

if.then10:                                        ; preds = %for.body8
  br label %for.end26, !dbg !8921

if.end11:                                         ; preds = %for.body8
  %16 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8922
  %gb12 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %16, i32 0, i32 1, !dbg !8923
  %call13 = call i32 @parse_vlc(%struct.GetBitContext* %gb12, %struct.VLC* @ff_dca_vlc_grid_3, i32 2), !dbg !8924
  %sub = sub nsw i32 %call13, 16, !dbg !8925
  %conv = trunc i32 %sub to i8, !dbg !8924
  %17 = load i32, i32* %i, align 4, !dbg !8926
  %idxprom14 = sext i32 %17 to i64, !dbg !8927
  %18 = load i32, i32* %sb.addr, align 4, !dbg !8928
  %idxprom15 = sext i32 %18 to i64, !dbg !8927
  %19 = load i32, i32* %ch, align 4, !dbg !8929
  %idxprom16 = sext i32 %19 to i64, !dbg !8927
  %20 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8927
  %grid_3_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %20, i32 0, i32 29, !dbg !8930
  %arrayidx17 = getelementptr inbounds [6 x [28 x [8 x i8]]], [6 x [28 x [8 x i8]]]* %grid_3_scf, i64 0, i64 %idxprom16, !dbg !8927
  %arrayidx18 = getelementptr inbounds [28 x [8 x i8]], [28 x [8 x i8]]* %arrayidx17, i64 0, i64 %idxprom15, !dbg !8927
  %arrayidx19 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx18, i64 0, i64 %idxprom14, !dbg !8927
  store i8 %conv, i8* %arrayidx19, align 1, !dbg !8931
  br label %for.inc, !dbg !8932

for.inc:                                          ; preds = %if.end11
  %21 = load i32, i32* %i, align 4, !dbg !8933
  %inc = add nsw i32 %21, 1, !dbg !8933
  store i32 %inc, i32* %i, align 4, !dbg !8933
  br label %for.cond6, !dbg !8935, !llvm.loop !8936

for.end:                                          ; preds = %for.cond6
  %22 = load i32, i32* %sb.addr, align 4, !dbg !8938
  %shl20 = shl i32 1, %22, !dbg !8939
  %23 = load i32, i32* %ch, align 4, !dbg !8940
  %idxprom21 = sext i32 %23 to i64, !dbg !8941
  %24 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8941
  %grid_3_pres22 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %24, i32 0, i32 30, !dbg !8942
  %arrayidx23 = getelementptr inbounds [6 x i32], [6 x i32]* %grid_3_pres22, i64 0, i64 %idxprom21, !dbg !8941
  %25 = load i32, i32* %arrayidx23, align 4, !dbg !8943
  %or = or i32 %25, %shl20, !dbg !8943
  store i32 %or, i32* %arrayidx23, align 4, !dbg !8943
  br label %for.inc24, !dbg !8944

for.inc24:                                        ; preds = %for.end, %if.then4, %if.then
  %26 = load i32, i32* %ch, align 4, !dbg !8945
  %inc25 = add nsw i32 %26, 1, !dbg !8945
  store i32 %inc25, i32* %ch, align 4, !dbg !8945
  br label %for.cond, !dbg !8947, !llvm.loop !8948

for.end26:                                        ; preds = %if.then10, %for.cond
  ret void, !dbg !8950
}

; Function Attrs: nounwind uwtable
define internal void @parse_ch(%struct.DCALbrDecoder* %s, i32 %ch, i32 %sb, i32 %quant_level, i32 %flag) #0 !dbg !8951 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !7818, metadata !2138), !dbg !8952
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !7824, metadata !2138), !dbg !8957
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !7826, metadata !2138), !dbg !8958
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !7828, metadata !2138), !dbg !8959
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !7830, metadata !2138), !dbg !8960
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !7832, metadata !2138), !dbg !8961
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !7834, metadata !2138), !dbg !8962
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !7836, metadata !2138), !dbg !8963
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !7838, metadata !2138), !dbg !8964
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !7841, metadata !2138), !dbg !8965
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !7843, metadata !2138), !dbg !8966
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch.addr = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %quant_level.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %samples = alloca float*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %nblocks = alloca i32, align 4
  %coding_method = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !8967, metadata !2138), !dbg !8968
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !8969, metadata !2138), !dbg !8970
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !8971, metadata !2138), !dbg !8972
  store i32 %quant_level, i32* %quant_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quant_level.addr, metadata !8973, metadata !2138), !dbg !8974
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8975, metadata !2138), !dbg !8976
  call void @llvm.dbg.declare(metadata float** %samples, metadata !8977, metadata !2138), !dbg !8978
  %0 = load i32, i32* %sb.addr, align 4, !dbg !8979
  %idxprom = sext i32 %0 to i64, !dbg !8980
  %1 = load i32, i32* %ch.addr, align 4, !dbg !8981
  %idxprom1 = sext i32 %1 to i64, !dbg !8980
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8980
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 36, !dbg !8982
  %arrayidx = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom1, !dbg !8980
  %arrayidx2 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx, i64 0, i64 %idxprom, !dbg !8980
  %3 = load float*, float** %arrayidx2, align 8, !dbg !8980
  store float* %3, float** %samples, align 8, !dbg !8978
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8983, metadata !2138), !dbg !8984
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8985, metadata !2138), !dbg !8986
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8987, metadata !2138), !dbg !8988
  call void @llvm.dbg.declare(metadata i32* %nblocks, metadata !8989, metadata !2138), !dbg !8990
  call void @llvm.dbg.declare(metadata i32* %coding_method, metadata !8991, metadata !2138), !dbg !8992
  %4 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8993
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %4, i32 0, i32 1, !dbg !8995
  %call = call i32 @ensure_bits(%struct.GetBitContext* %gb, i32 20), !dbg !8996
  %tobool = icmp ne i32 %call, 0, !dbg !8996
  br i1 %tobool, label %if.then, label %if.end, !dbg !8997

if.then:                                          ; preds = %entry
  br label %return, !dbg !8998

if.end:                                           ; preds = %entry
  %5 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !8999
  %gb3 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %5, i32 0, i32 1, !dbg !9000
  %call4 = call i32 @get_bits1(%struct.GetBitContext* %gb3), !dbg !9001
  store i32 %call4, i32* %coding_method, align 4, !dbg !9002
  %6 = load i32, i32* %quant_level.addr, align 4, !dbg !9003
  switch i32 %6, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb87
    i32 4, label %sw.bb126
    i32 5, label %sw.bb146
  ], !dbg !9004

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9005
  %gb5 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 1, !dbg !9006
  %call6 = call i32 @get_bits_left(%struct.GetBitContext* %gb5), !dbg !9007
  %div = sdiv i32 %call6, 8, !dbg !9008
  %cmp = icmp sgt i32 %div, 16, !dbg !9009
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9010

cond.true:                                        ; preds = %sw.bb
  br label %cond.end, !dbg !9011

cond.false:                                       ; preds = %sw.bb
  %8 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9013
  %gb7 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %8, i32 0, i32 1, !dbg !9015
  %call8 = call i32 @get_bits_left(%struct.GetBitContext* %gb7), !dbg !9016
  %div9 = sdiv i32 %call8, 8, !dbg !9017
  br label %cond.end, !dbg !9018

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 16, %cond.true ], [ %div9, %cond.false ], !dbg !9019
  store i32 %cond, i32* %nblocks, align 4, !dbg !9021
  store i32 0, i32* %i, align 4, !dbg !9022
  br label %for.cond, !dbg !9024

for.cond:                                         ; preds = %for.inc20, %cond.end
  %9 = load i32, i32* %i, align 4, !dbg !9025
  %10 = load i32, i32* %nblocks, align 4, !dbg !9028
  %cmp10 = icmp slt i32 %9, %10, !dbg !9029
  br i1 %cmp10, label %for.body, label %for.end22, !dbg !9030

for.body:                                         ; preds = %for.cond
  %11 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9031
  %gb11 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %11, i32 0, i32 1, !dbg !9033
  %call12 = call i32 @get_bits(%struct.GetBitContext* %gb11, i32 8), !dbg !9034
  store i32 %call12, i32* %code, align 4, !dbg !9035
  store i32 0, i32* %j, align 4, !dbg !9036
  br label %for.cond13, !dbg !9038

for.cond13:                                       ; preds = %for.inc, %for.body
  %12 = load i32, i32* %j, align 4, !dbg !9039
  %cmp14 = icmp slt i32 %12, 8, !dbg !9042
  br i1 %cmp14, label %for.body15, label %for.end, !dbg !9043

for.body15:                                       ; preds = %for.cond13
  %13 = load i32, i32* %code, align 4, !dbg !9044
  %14 = load i32, i32* %j, align 4, !dbg !9045
  %shr = ashr i32 %13, %14, !dbg !9046
  %and = and i32 %shr, 1, !dbg !9047
  %idxprom16 = sext i32 %and to i64, !dbg !9048
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* @ff_dca_rsd_level_2a, i64 0, i64 %idxprom16, !dbg !9048
  %15 = load float, float* %arrayidx17, align 4, !dbg !9048
  %16 = load i32, i32* %j, align 4, !dbg !9049
  %idxprom18 = sext i32 %16 to i64, !dbg !9050
  %17 = load float*, float** %samples, align 8, !dbg !9050
  %arrayidx19 = getelementptr inbounds float, float* %17, i64 %idxprom18, !dbg !9050
  store float %15, float* %arrayidx19, align 4, !dbg !9051
  br label %for.inc, !dbg !9050

for.inc:                                          ; preds = %for.body15
  %18 = load i32, i32* %j, align 4, !dbg !9052
  %inc = add nsw i32 %18, 1, !dbg !9052
  store i32 %inc, i32* %j, align 4, !dbg !9052
  br label %for.cond13, !dbg !9054, !llvm.loop !9055

for.end:                                          ; preds = %for.cond13
  br label %for.inc20, !dbg !9057

for.inc20:                                        ; preds = %for.end
  %19 = load i32, i32* %i, align 4, !dbg !9058
  %inc21 = add nsw i32 %19, 1, !dbg !9058
  store i32 %inc21, i32* %i, align 4, !dbg !9058
  %20 = load float*, float** %samples, align 8, !dbg !9060
  %add.ptr = getelementptr inbounds float, float* %20, i64 8, !dbg !9060
  store float* %add.ptr, float** %samples, align 8, !dbg !9060
  br label %for.cond, !dbg !9061, !llvm.loop !9062

for.end22:                                        ; preds = %for.cond
  %21 = load i32, i32* %nblocks, align 4, !dbg !9064
  %mul = mul nsw i32 %21, 8, !dbg !9065
  store i32 %mul, i32* %i, align 4, !dbg !9066
  br label %sw.epilog, !dbg !9067

sw.bb23:                                          ; preds = %if.end
  %22 = load i32, i32* %coding_method, align 4, !dbg !9068
  %tobool24 = icmp ne i32 %22, 0, !dbg !9068
  br i1 %tobool24, label %if.then25, label %if.else48, !dbg !9070

if.then25:                                        ; preds = %sw.bb23
  store i32 0, i32* %i, align 4, !dbg !9071
  br label %for.cond26, !dbg !9074

for.cond26:                                       ; preds = %for.inc45, %if.then25
  %23 = load i32, i32* %i, align 4, !dbg !9075
  %cmp27 = icmp slt i32 %23, 128, !dbg !9078
  br i1 %cmp27, label %land.rhs, label %land.end, !dbg !9079

land.rhs:                                         ; preds = %for.cond26
  %24 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9080
  %gb28 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %24, i32 0, i32 1, !dbg !9082
  %call29 = call i32 @get_bits_left(%struct.GetBitContext* %gb28), !dbg !9083
  %cmp30 = icmp sge i32 %call29, 2, !dbg !9084
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond26
  %25 = phi i1 [ false, %for.cond26 ], [ %cmp30, %land.rhs ]
  br i1 %25, label %for.body31, label %for.end47, !dbg !9085

for.body31:                                       ; preds = %land.end
  %26 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9087
  %gb32 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %26, i32 0, i32 1, !dbg !9090
  %call33 = call i32 @get_bits1(%struct.GetBitContext* %gb32), !dbg !9091
  %tobool34 = icmp ne i32 %call33, 0, !dbg !9091
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !9092

if.then35:                                        ; preds = %for.body31
  %27 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9093
  %gb36 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %27, i32 0, i32 1, !dbg !9094
  %call37 = call i32 @get_bits1(%struct.GetBitContext* %gb36), !dbg !9095
  %idxprom38 = zext i32 %call37 to i64, !dbg !9096
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* @ff_dca_rsd_level_2b, i64 0, i64 %idxprom38, !dbg !9096
  %28 = load float, float* %arrayidx39, align 4, !dbg !9096
  %29 = load i32, i32* %i, align 4, !dbg !9097
  %idxprom40 = sext i32 %29 to i64, !dbg !9098
  %30 = load float*, float** %samples, align 8, !dbg !9098
  %arrayidx41 = getelementptr inbounds float, float* %30, i64 %idxprom40, !dbg !9098
  store float %28, float* %arrayidx41, align 4, !dbg !9099
  br label %if.end44, !dbg !9098

if.else:                                          ; preds = %for.body31
  %31 = load i32, i32* %i, align 4, !dbg !9100
  %idxprom42 = sext i32 %31 to i64, !dbg !9101
  %32 = load float*, float** %samples, align 8, !dbg !9101
  %arrayidx43 = getelementptr inbounds float, float* %32, i64 %idxprom42, !dbg !9101
  store float 0.000000e+00, float* %arrayidx43, align 4, !dbg !9102
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then35
  br label %for.inc45, !dbg !9103

for.inc45:                                        ; preds = %if.end44
  %33 = load i32, i32* %i, align 4, !dbg !9104
  %inc46 = add nsw i32 %33, 1, !dbg !9104
  store i32 %inc46, i32* %i, align 4, !dbg !9104
  br label %for.cond26, !dbg !9106, !llvm.loop !9107

for.end47:                                        ; preds = %land.end
  br label %if.end86, !dbg !9109

if.else48:                                        ; preds = %sw.bb23
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9110
  %gb49 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 1, !dbg !9112
  %call50 = call i32 @get_bits_left(%struct.GetBitContext* %gb49), !dbg !9113
  %div51 = sdiv i32 %call50, 8, !dbg !9114
  %cmp52 = icmp sgt i32 %div51, 26, !dbg !9115
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !9116

cond.true53:                                      ; preds = %if.else48
  br label %cond.end58, !dbg !9117

cond.false54:                                     ; preds = %if.else48
  %35 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9119
  %gb55 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %35, i32 0, i32 1, !dbg !9121
  %call56 = call i32 @get_bits_left(%struct.GetBitContext* %gb55), !dbg !9122
  %div57 = sdiv i32 %call56, 8, !dbg !9123
  br label %cond.end58, !dbg !9124

cond.end58:                                       ; preds = %cond.false54, %cond.true53
  %cond59 = phi i32 [ 26, %cond.true53 ], [ %div57, %cond.false54 ], !dbg !9125
  store i32 %cond59, i32* %nblocks, align 4, !dbg !9127
  store i32 0, i32* %i, align 4, !dbg !9128
  br label %for.cond60, !dbg !9130

for.cond60:                                       ; preds = %for.inc81, %cond.end58
  %36 = load i32, i32* %i, align 4, !dbg !9131
  %37 = load i32, i32* %nblocks, align 4, !dbg !9134
  %cmp61 = icmp slt i32 %36, %37, !dbg !9135
  br i1 %cmp61, label %for.body62, label %for.end84, !dbg !9136

for.body62:                                       ; preds = %for.cond60
  %38 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9137
  %gb63 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %38, i32 0, i32 1, !dbg !9139
  %call64 = call i32 @get_bits(%struct.GetBitContext* %gb63, i32 8), !dbg !9140
  %idxprom65 = zext i32 %call64 to i64, !dbg !9141
  %arrayidx66 = getelementptr inbounds [256 x i16], [256 x i16]* @ff_dca_rsd_pack_5_in_8, i64 0, i64 %idxprom65, !dbg !9141
  %39 = load i16, i16* %arrayidx66, align 2, !dbg !9141
  %conv = zext i16 %39 to i32, !dbg !9141
  store i32 %conv, i32* %code, align 4, !dbg !9142
  store i32 0, i32* %j, align 4, !dbg !9143
  br label %for.cond67, !dbg !9145

for.cond67:                                       ; preds = %for.inc78, %for.body62
  %40 = load i32, i32* %j, align 4, !dbg !9146
  %cmp68 = icmp slt i32 %40, 5, !dbg !9149
  br i1 %cmp68, label %for.body70, label %for.end80, !dbg !9150

for.body70:                                       ; preds = %for.cond67
  %41 = load i32, i32* %code, align 4, !dbg !9151
  %42 = load i32, i32* %j, align 4, !dbg !9152
  %mul71 = mul nsw i32 %42, 2, !dbg !9153
  %shr72 = ashr i32 %41, %mul71, !dbg !9154
  %and73 = and i32 %shr72, 3, !dbg !9155
  %idxprom74 = sext i32 %and73 to i64, !dbg !9156
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* @ff_dca_rsd_level_3, i64 0, i64 %idxprom74, !dbg !9156
  %43 = load float, float* %arrayidx75, align 4, !dbg !9156
  %44 = load i32, i32* %j, align 4, !dbg !9157
  %idxprom76 = sext i32 %44 to i64, !dbg !9158
  %45 = load float*, float** %samples, align 8, !dbg !9158
  %arrayidx77 = getelementptr inbounds float, float* %45, i64 %idxprom76, !dbg !9158
  store float %43, float* %arrayidx77, align 4, !dbg !9159
  br label %for.inc78, !dbg !9158

for.inc78:                                        ; preds = %for.body70
  %46 = load i32, i32* %j, align 4, !dbg !9160
  %inc79 = add nsw i32 %46, 1, !dbg !9160
  store i32 %inc79, i32* %j, align 4, !dbg !9160
  br label %for.cond67, !dbg !9162, !llvm.loop !9163

for.end80:                                        ; preds = %for.cond67
  br label %for.inc81, !dbg !9165

for.inc81:                                        ; preds = %for.end80
  %47 = load i32, i32* %i, align 4, !dbg !9166
  %inc82 = add nsw i32 %47, 1, !dbg !9166
  store i32 %inc82, i32* %i, align 4, !dbg !9166
  %48 = load float*, float** %samples, align 8, !dbg !9168
  %add.ptr83 = getelementptr inbounds float, float* %48, i64 5, !dbg !9168
  store float* %add.ptr83, float** %samples, align 8, !dbg !9168
  br label %for.cond60, !dbg !9169, !llvm.loop !9170

for.end84:                                        ; preds = %for.cond60
  %49 = load i32, i32* %nblocks, align 4, !dbg !9172
  %mul85 = mul nsw i32 %49, 5, !dbg !9173
  store i32 %mul85, i32* %i, align 4, !dbg !9174
  br label %if.end86

if.end86:                                         ; preds = %for.end84, %for.end47
  br label %sw.epilog, !dbg !9175

sw.bb87:                                          ; preds = %if.end
  %50 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9176
  %gb88 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %50, i32 0, i32 1, !dbg !9177
  %call89 = call i32 @get_bits_left(%struct.GetBitContext* %gb88), !dbg !9178
  %div90 = sdiv i32 %call89, 7, !dbg !9179
  %cmp91 = icmp sgt i32 %div90, 43, !dbg !9180
  br i1 %cmp91, label %cond.true93, label %cond.false94, !dbg !9181

cond.true93:                                      ; preds = %sw.bb87
  br label %cond.end98, !dbg !9182

cond.false94:                                     ; preds = %sw.bb87
  %51 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9183
  %gb95 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %51, i32 0, i32 1, !dbg !9184
  %call96 = call i32 @get_bits_left(%struct.GetBitContext* %gb95), !dbg !9185
  %div97 = sdiv i32 %call96, 7, !dbg !9186
  br label %cond.end98, !dbg !9187

cond.end98:                                       ; preds = %cond.false94, %cond.true93
  %cond99 = phi i32 [ 43, %cond.true93 ], [ %div97, %cond.false94 ], !dbg !9188
  store i32 %cond99, i32* %nblocks, align 4, !dbg !9189
  store i32 0, i32* %i, align 4, !dbg !9190
  br label %for.cond100, !dbg !9192

for.cond100:                                      ; preds = %for.inc121, %cond.end98
  %52 = load i32, i32* %i, align 4, !dbg !9193
  %53 = load i32, i32* %nblocks, align 4, !dbg !9196
  %cmp101 = icmp slt i32 %52, %53, !dbg !9197
  br i1 %cmp101, label %for.body103, label %for.end124, !dbg !9198

for.body103:                                      ; preds = %for.cond100
  %54 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9199
  %gb104 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %54, i32 0, i32 1, !dbg !9201
  %call105 = call i32 @get_bits(%struct.GetBitContext* %gb104, i32 7), !dbg !9202
  store i32 %call105, i32* %code, align 4, !dbg !9203
  store i32 0, i32* %j, align 4, !dbg !9204
  br label %for.cond106, !dbg !9206

for.cond106:                                      ; preds = %for.inc118, %for.body103
  %55 = load i32, i32* %j, align 4, !dbg !9207
  %cmp107 = icmp slt i32 %55, 3, !dbg !9210
  br i1 %cmp107, label %for.body109, label %for.end120, !dbg !9211

for.body109:                                      ; preds = %for.cond106
  %56 = load i32, i32* %j, align 4, !dbg !9212
  %idxprom110 = sext i32 %56 to i64, !dbg !9213
  %57 = load i32, i32* %code, align 4, !dbg !9214
  %idxprom111 = sext i32 %57 to i64, !dbg !9213
  %arrayidx112 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @ff_dca_rsd_pack_3_in_7, i64 0, i64 %idxprom111, !dbg !9213
  %arrayidx113 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx112, i64 0, i64 %idxprom110, !dbg !9213
  %58 = load i8, i8* %arrayidx113, align 1, !dbg !9213
  %idxprom114 = zext i8 %58 to i64, !dbg !9215
  %arrayidx115 = getelementptr inbounds [5 x float], [5 x float]* @ff_dca_rsd_level_5, i64 0, i64 %idxprom114, !dbg !9215
  %59 = load float, float* %arrayidx115, align 4, !dbg !9215
  %60 = load i32, i32* %j, align 4, !dbg !9216
  %idxprom116 = sext i32 %60 to i64, !dbg !9217
  %61 = load float*, float** %samples, align 8, !dbg !9217
  %arrayidx117 = getelementptr inbounds float, float* %61, i64 %idxprom116, !dbg !9217
  store float %59, float* %arrayidx117, align 4, !dbg !9218
  br label %for.inc118, !dbg !9217

for.inc118:                                       ; preds = %for.body109
  %62 = load i32, i32* %j, align 4, !dbg !9219
  %inc119 = add nsw i32 %62, 1, !dbg !9219
  store i32 %inc119, i32* %j, align 4, !dbg !9219
  br label %for.cond106, !dbg !9221, !llvm.loop !9222

for.end120:                                       ; preds = %for.cond106
  br label %for.inc121, !dbg !9224

for.inc121:                                       ; preds = %for.end120
  %63 = load i32, i32* %i, align 4, !dbg !9225
  %inc122 = add nsw i32 %63, 1, !dbg !9225
  store i32 %inc122, i32* %i, align 4, !dbg !9225
  %64 = load float*, float** %samples, align 8, !dbg !9227
  %add.ptr123 = getelementptr inbounds float, float* %64, i64 3, !dbg !9227
  store float* %add.ptr123, float** %samples, align 8, !dbg !9227
  br label %for.cond100, !dbg !9228, !llvm.loop !9229

for.end124:                                       ; preds = %for.cond100
  %65 = load i32, i32* %nblocks, align 4, !dbg !9231
  %mul125 = mul nsw i32 %65, 3, !dbg !9232
  store i32 %mul125, i32* %i, align 4, !dbg !9233
  br label %sw.epilog, !dbg !9234

sw.bb126:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9235
  br label %for.cond127, !dbg !9236

for.cond127:                                      ; preds = %for.inc143, %sw.bb126
  %66 = load i32, i32* %i, align 4, !dbg !9237
  %cmp128 = icmp slt i32 %66, 128, !dbg !9239
  br i1 %cmp128, label %land.rhs130, label %land.end135, !dbg !9240

land.rhs130:                                      ; preds = %for.cond127
  %67 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9241
  %gb131 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %67, i32 0, i32 1, !dbg !9243
  %call132 = call i32 @get_bits_left(%struct.GetBitContext* %gb131), !dbg !9244
  %cmp133 = icmp sge i32 %call132, 6, !dbg !9245
  br label %land.end135

land.end135:                                      ; preds = %land.rhs130, %for.cond127
  %68 = phi i1 [ false, %for.cond127 ], [ %cmp133, %land.rhs130 ]
  br i1 %68, label %for.body136, label %for.end145, !dbg !9246

for.body136:                                      ; preds = %land.end135
  %69 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9248
  %gb137 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %69, i32 0, i32 1, !dbg !9249
  %70 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @ff_dca_vlc_rsd, i32 0, i32 1), align 8, !dbg !9250
  store %struct.GetBitContext* %gb137, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9251
  store [2 x i16]* %70, [2 x i16]** %table.addr.i, align 8, !dbg !9251
  store i32 6, i32* %bits.addr.i, align 4, !dbg !9251
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !9251
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9252
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %71, i32 0, i32 2, !dbg !9253
  %72 = load i32, i32* %index.i, align 8, !dbg !9253
  store i32 %72, i32* %re_index.i, align 4, !dbg !8961
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9254
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %73, i32 0, i32 4, !dbg !9255
  %74 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9255
  store i32 %74, i32* %re_size_plus8.i, align 4, !dbg !8963
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9256
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %75, i32 0, i32 0, !dbg !9257
  %76 = load i8*, i8** %buffer.i, align 8, !dbg !9257
  %77 = load i32, i32* %re_index.i, align 4, !dbg !9258
  %shr.i = lshr i32 %77, 3, !dbg !9259
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9260
  %add.ptr.i = getelementptr inbounds i8, i8* %76, i64 %idx.ext.i, !dbg !9260
  %78 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9261
  %l.i = bitcast %union.unaligned_32* %78 to i32*, !dbg !9261
  %79 = load i32, i32* %l.i, align 1, !dbg !9261
  %80 = load i32, i32* %re_index.i, align 4, !dbg !9262
  %and.i = and i32 %80, 7, !dbg !9263
  %shr1.i = lshr i32 %79, %and.i, !dbg !9264
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !9265
  %81 = load i32, i32* %re_cache.i, align 4, !dbg !9266
  %82 = load i32, i32* %bits.addr.i, align 4, !dbg !9267
  %call.i = call i32 @zero_extend(i32 %81, i32 %82) #1, !dbg !9268
  store i32 %call.i, i32* %index2.i, align 4, !dbg !9269
  %83 = load i32, i32* %index2.i, align 4, !dbg !9270
  %idxprom.i = zext i32 %83 to i64, !dbg !9271
  %84 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9271
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %84, i64 %idxprom.i, !dbg !9271
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9271
  %85 = load i16, i16* %arrayidx3.i, align 2, !dbg !9271
  %conv.i = sext i16 %85 to i32, !dbg !9271
  store i32 %conv.i, i32* %code.i, align 4, !dbg !9272
  %86 = load i32, i32* %index2.i, align 4, !dbg !9273
  %idxprom4.i = zext i32 %86 to i64, !dbg !9274
  %87 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9274
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %87, i64 %idxprom4.i, !dbg !9274
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !9274
  %88 = load i16, i16* %arrayidx6.i, align 2, !dbg !9274
  %conv7.i = sext i16 %88 to i32, !dbg !9274
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !9275
  %89 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9276
  %cmp.i = icmp sgt i32 %89, 1, !dbg !9277
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !9278

land.lhs.true.i:                                  ; preds = %for.body136
  %90 = load i32, i32* %n.i, align 4, !dbg !9279
  %cmp9.i = icmp slt i32 %90, 0, !dbg !9280
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !9281

if.then.i:                                        ; preds = %land.lhs.true.i
  %91 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9282
  %92 = load i32, i32* %re_index.i, align 4, !dbg !9283
  %93 = load i32, i32* %bits.addr.i, align 4, !dbg !9284
  %add.i = add i32 %92, %93, !dbg !9285
  %cmp11.i = icmp ugt i32 %91, %add.i, !dbg !9286
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !9287

cond.true.i:                                      ; preds = %if.then.i
  %94 = load i32, i32* %re_index.i, align 4, !dbg !9288
  %95 = load i32, i32* %bits.addr.i, align 4, !dbg !9289
  %add13.i = add i32 %94, %95, !dbg !9290
  br label %cond.end.i, !dbg !9291

cond.false.i:                                     ; preds = %if.then.i
  %96 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9292
  br label %cond.end.i, !dbg !9293

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %96, %cond.false.i ], !dbg !9294
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9295
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9296
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %97, i32 0, i32 0, !dbg !9297
  %98 = load i8*, i8** %buffer14.i, align 8, !dbg !9297
  %99 = load i32, i32* %re_index.i, align 4, !dbg !9298
  %shr15.i = lshr i32 %99, 3, !dbg !9299
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !9300
  %add.ptr17.i = getelementptr inbounds i8, i8* %98, i64 %idx.ext16.i, !dbg !9300
  %100 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !9301
  %l18.i = bitcast %union.unaligned_32* %100 to i32*, !dbg !9301
  %101 = load i32, i32* %l18.i, align 1, !dbg !9301
  %102 = load i32, i32* %re_index.i, align 4, !dbg !9302
  %and19.i = and i32 %102, 7, !dbg !9303
  %shr20.i = lshr i32 %101, %and19.i, !dbg !9304
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !9305
  %103 = load i32, i32* %n.i, align 4, !dbg !9306
  %sub.i = sub nsw i32 0, %103, !dbg !9307
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9308
  %104 = load i32, i32* %re_cache.i, align 4, !dbg !9309
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !9310
  %call21.i = call i32 @zero_extend(i32 %104, i32 %105) #1, !dbg !9311
  %106 = load i32, i32* %code.i, align 4, !dbg !9312
  %add22.i = add i32 %call21.i, %106, !dbg !9313
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !9314
  %107 = load i32, i32* %index2.i, align 4, !dbg !9315
  %idxprom23.i = zext i32 %107 to i64, !dbg !9316
  %108 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9316
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %108, i64 %idxprom23.i, !dbg !9316
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !9316
  %109 = load i16, i16* %arrayidx25.i, align 2, !dbg !9316
  %conv26.i = sext i16 %109 to i32, !dbg !9316
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !9317
  %110 = load i32, i32* %index2.i, align 4, !dbg !9318
  %idxprom27.i = zext i32 %110 to i64, !dbg !9319
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9319
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom27.i, !dbg !9319
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !9319
  %112 = load i16, i16* %arrayidx29.i, align 2, !dbg !9319
  %conv30.i = sext i16 %112 to i32, !dbg !9319
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !9320
  %113 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9321
  %cmp31.i = icmp sgt i32 %113, 2, !dbg !9322
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !9323

land.lhs.true33.i:                                ; preds = %cond.end.i
  %114 = load i32, i32* %n.i, align 4, !dbg !9324
  %cmp34.i = icmp slt i32 %114, 0, !dbg !9325
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !9326

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9327
  %116 = load i32, i32* %re_index.i, align 4, !dbg !9328
  %117 = load i32, i32* %nb_bits.i, align 4, !dbg !9329
  %add37.i = add i32 %116, %117, !dbg !9330
  %cmp38.i = icmp ugt i32 %115, %add37.i, !dbg !9331
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !9332

cond.true40.i:                                    ; preds = %if.then36.i
  %118 = load i32, i32* %re_index.i, align 4, !dbg !9333
  %119 = load i32, i32* %nb_bits.i, align 4, !dbg !9334
  %add41.i = add i32 %118, %119, !dbg !9335
  br label %cond.end43.i, !dbg !9336

cond.false42.i:                                   ; preds = %if.then36.i
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9337
  br label %cond.end43.i, !dbg !9338

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %120, %cond.false42.i ], !dbg !9339
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !9340
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9341
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %121, i32 0, i32 0, !dbg !9342
  %122 = load i8*, i8** %buffer45.i, align 8, !dbg !9342
  %123 = load i32, i32* %re_index.i, align 4, !dbg !9343
  %shr46.i = lshr i32 %123, 3, !dbg !9344
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !9345
  %add.ptr48.i = getelementptr inbounds i8, i8* %122, i64 %idx.ext47.i, !dbg !9345
  %124 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !9346
  %l49.i = bitcast %union.unaligned_32* %124 to i32*, !dbg !9346
  %125 = load i32, i32* %l49.i, align 1, !dbg !9346
  %126 = load i32, i32* %re_index.i, align 4, !dbg !9347
  %and50.i = and i32 %126, 7, !dbg !9348
  %shr51.i = lshr i32 %125, %and50.i, !dbg !9349
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !9350
  %127 = load i32, i32* %n.i, align 4, !dbg !9351
  %sub52.i = sub nsw i32 0, %127, !dbg !9352
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !9353
  %128 = load i32, i32* %re_cache.i, align 4, !dbg !9354
  %129 = load i32, i32* %nb_bits.i, align 4, !dbg !9355
  %call53.i = call i32 @zero_extend(i32 %128, i32 %129) #1, !dbg !9356
  %130 = load i32, i32* %code.i, align 4, !dbg !9357
  %add54.i = add i32 %call53.i, %130, !dbg !9358
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !9359
  %131 = load i32, i32* %index2.i, align 4, !dbg !9360
  %idxprom55.i = zext i32 %131 to i64, !dbg !9361
  %132 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9361
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %132, i64 %idxprom55.i, !dbg !9361
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !9361
  %133 = load i16, i16* %arrayidx57.i, align 2, !dbg !9361
  %conv58.i = sext i16 %133 to i32, !dbg !9361
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !9362
  %134 = load i32, i32* %index2.i, align 4, !dbg !9363
  %idxprom59.i = zext i32 %134 to i64, !dbg !9364
  %135 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9364
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %135, i64 %idxprom59.i, !dbg !9364
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !9364
  %136 = load i16, i16* %arrayidx61.i, align 2, !dbg !9364
  %conv62.i = sext i16 %136 to i32, !dbg !9364
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !9365
  br label %if.end.i, !dbg !9366

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !9367

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body136
  %137 = load i32, i32* %n.i, align 4, !dbg !9368
  %138 = load i32, i32* %re_cache.i, align 4, !dbg !9369
  %shr65.i = lshr i32 %138, %137, !dbg !9369
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !9369
  %139 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9370
  %140 = load i32, i32* %re_index.i, align 4, !dbg !9371
  %141 = load i32, i32* %n.i, align 4, !dbg !9372
  %add66.i = add i32 %140, %141, !dbg !9373
  %cmp67.i = icmp ugt i32 %139, %add66.i, !dbg !9374
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !9375

cond.true69.i:                                    ; preds = %if.end63.i
  %142 = load i32, i32* %re_index.i, align 4, !dbg !9376
  %143 = load i32, i32* %n.i, align 4, !dbg !9377
  %add70.i = add i32 %142, %143, !dbg !9378
  br label %get_vlc2.exit, !dbg !9379

cond.false71.i:                                   ; preds = %if.end63.i
  %144 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9380
  br label %get_vlc2.exit, !dbg !9381

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %144, %cond.false71.i ], !dbg !9382
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !9383
  %145 = load i32, i32* %re_index.i, align 4, !dbg !9384
  %146 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9385
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %146, i32 0, i32 2, !dbg !9386
  store i32 %145, i32* %index75.i, align 8, !dbg !9387
  %147 = load i32, i32* %code.i, align 4, !dbg !9388
  %idxprom139 = sext i32 %147 to i64, !dbg !9389
  %arrayidx140 = getelementptr inbounds [8 x float], [8 x float]* @ff_dca_rsd_level_8, i64 0, i64 %idxprom139, !dbg !9389
  %148 = load float, float* %arrayidx140, align 4, !dbg !9389
  %149 = load i32, i32* %i, align 4, !dbg !9390
  %idxprom141 = sext i32 %149 to i64, !dbg !9391
  %150 = load float*, float** %samples, align 8, !dbg !9391
  %arrayidx142 = getelementptr inbounds float, float* %150, i64 %idxprom141, !dbg !9391
  store float %148, float* %arrayidx142, align 4, !dbg !9392
  br label %for.inc143, !dbg !9391

for.inc143:                                       ; preds = %get_vlc2.exit
  %151 = load i32, i32* %i, align 4, !dbg !9393
  %inc144 = add nsw i32 %151, 1, !dbg !9393
  store i32 %inc144, i32* %i, align 4, !dbg !9393
  br label %for.cond127, !dbg !9395, !llvm.loop !9396

for.end145:                                       ; preds = %land.end135
  br label %sw.epilog, !dbg !9398

sw.bb146:                                         ; preds = %if.end
  %152 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9399
  %gb147 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %152, i32 0, i32 1, !dbg !9400
  %call148 = call i32 @get_bits_left(%struct.GetBitContext* %gb147), !dbg !9401
  %div149 = sdiv i32 %call148, 4, !dbg !9402
  %cmp150 = icmp sgt i32 %div149, 128, !dbg !9403
  br i1 %cmp150, label %cond.true152, label %cond.false153, !dbg !9404

cond.true152:                                     ; preds = %sw.bb146
  br label %cond.end157, !dbg !9405

cond.false153:                                    ; preds = %sw.bb146
  %153 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9406
  %gb154 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %153, i32 0, i32 1, !dbg !9407
  %call155 = call i32 @get_bits_left(%struct.GetBitContext* %gb154), !dbg !9408
  %div156 = sdiv i32 %call155, 4, !dbg !9409
  br label %cond.end157, !dbg !9410

cond.end157:                                      ; preds = %cond.false153, %cond.true152
  %cond158 = phi i32 [ 128, %cond.true152 ], [ %div156, %cond.false153 ], !dbg !9411
  store i32 %cond158, i32* %nblocks, align 4, !dbg !9412
  store i32 0, i32* %i, align 4, !dbg !9413
  br label %for.cond159, !dbg !9415

for.cond159:                                      ; preds = %for.inc169, %cond.end157
  %154 = load i32, i32* %i, align 4, !dbg !9416
  %155 = load i32, i32* %nblocks, align 4, !dbg !9419
  %cmp160 = icmp slt i32 %154, %155, !dbg !9420
  br i1 %cmp160, label %for.body162, label %for.end171, !dbg !9421

for.body162:                                      ; preds = %for.cond159
  %156 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9422
  %gb163 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %156, i32 0, i32 1, !dbg !9423
  %call164 = call i32 @get_bits(%struct.GetBitContext* %gb163, i32 4), !dbg !9424
  %idxprom165 = zext i32 %call164 to i64, !dbg !9425
  %arrayidx166 = getelementptr inbounds [16 x float], [16 x float]* @ff_dca_rsd_level_16, i64 0, i64 %idxprom165, !dbg !9425
  %157 = load float, float* %arrayidx166, align 4, !dbg !9425
  %158 = load i32, i32* %i, align 4, !dbg !9426
  %idxprom167 = sext i32 %158 to i64, !dbg !9427
  %159 = load float*, float** %samples, align 8, !dbg !9427
  %arrayidx168 = getelementptr inbounds float, float* %159, i64 %idxprom167, !dbg !9427
  store float %157, float* %arrayidx168, align 4, !dbg !9428
  br label %for.inc169, !dbg !9427

for.inc169:                                       ; preds = %for.body162
  %160 = load i32, i32* %i, align 4, !dbg !9429
  %inc170 = add nsw i32 %160, 1, !dbg !9429
  store i32 %inc170, i32* %i, align 4, !dbg !9429
  br label %for.cond159, !dbg !9431, !llvm.loop !9432

for.end171:                                       ; preds = %for.cond159
  br label %sw.epilog, !dbg !9434

sw.default:                                       ; preds = %if.end
  br label %do.body, !dbg !9435, !llvm.loop !9436

do.body:                                          ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0), i32 680), !dbg !9437
  call void @abort() #11, !dbg !9442
  unreachable, !dbg !9444

do.end:                                           ; No predecessors!
  br label %sw.epilog, !dbg !9445

sw.epilog:                                        ; preds = %do.end, %for.end171, %for.end145, %for.end124, %if.end86, %for.end22
  %161 = load i32, i32* %flag.addr, align 4, !dbg !9446
  %tobool172 = icmp ne i32 %161, 0, !dbg !9446
  br i1 %tobool172, label %land.lhs.true, label %if.end178, !dbg !9448

land.lhs.true:                                    ; preds = %sw.epilog
  %162 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9449
  %gb173 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %162, i32 0, i32 1, !dbg !9451
  %call174 = call i32 @get_bits_left(%struct.GetBitContext* %gb173), !dbg !9452
  %cmp175 = icmp slt i32 %call174, 20, !dbg !9453
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !9454

if.then177:                                       ; preds = %land.lhs.true
  br label %return, !dbg !9455

if.end178:                                        ; preds = %land.lhs.true, %sw.epilog
  br label %for.cond179, !dbg !9456

for.cond179:                                      ; preds = %for.inc191, %if.end178
  %163 = load i32, i32* %i, align 4, !dbg !9457
  %cmp180 = icmp slt i32 %163, 128, !dbg !9461
  br i1 %cmp180, label %for.body182, label %for.end193, !dbg !9462

for.body182:                                      ; preds = %for.cond179
  %164 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9463
  %165 = load i32, i32* %sb.addr, align 4, !dbg !9464
  %call183 = call float @lbr_rand(%struct.DCALbrDecoder* %164, i32 %165), !dbg !9465
  %166 = load i32, i32* %i, align 4, !dbg !9466
  %idxprom184 = sext i32 %166 to i64, !dbg !9467
  %167 = load i32, i32* %sb.addr, align 4, !dbg !9468
  %idxprom185 = sext i32 %167 to i64, !dbg !9467
  %168 = load i32, i32* %ch.addr, align 4, !dbg !9469
  %idxprom186 = sext i32 %168 to i64, !dbg !9467
  %169 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9467
  %time_samples187 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %169, i32 0, i32 36, !dbg !9470
  %arrayidx188 = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples187, i64 0, i64 %idxprom186, !dbg !9467
  %arrayidx189 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx188, i64 0, i64 %idxprom185, !dbg !9467
  %170 = load float*, float** %arrayidx189, align 8, !dbg !9467
  %arrayidx190 = getelementptr inbounds float, float* %170, i64 %idxprom184, !dbg !9467
  store float %call183, float* %arrayidx190, align 4, !dbg !9471
  br label %for.inc191, !dbg !9467

for.inc191:                                       ; preds = %for.body182
  %171 = load i32, i32* %i, align 4, !dbg !9472
  %inc192 = add nsw i32 %171, 1, !dbg !9472
  store i32 %inc192, i32* %i, align 4, !dbg !9472
  br label %for.cond179, !dbg !9474, !llvm.loop !9475

for.end193:                                       ; preds = %for.cond179
  %172 = load i32, i32* %sb.addr, align 4, !dbg !9476
  %shl = shl i32 1, %172, !dbg !9477
  %173 = load i32, i32* %ch.addr, align 4, !dbg !9478
  %idxprom194 = sext i32 %173 to i64, !dbg !9479
  %174 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9479
  %ch_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %174, i32 0, i32 25, !dbg !9480
  %arrayidx195 = getelementptr inbounds [6 x i32], [6 x i32]* %ch_pres, i64 0, i64 %idxprom194, !dbg !9479
  %175 = load i32, i32* %arrayidx195, align 4, !dbg !9481
  %or = or i32 %175, %shl, !dbg !9481
  store i32 %or, i32* %arrayidx195, align 4, !dbg !9481
  br label %return, !dbg !9482

return:                                           ; preds = %for.end193, %if.then177, %if.then
  ret void, !dbg !9483
}

; Function Attrs: nounwind uwtable
define internal float @lbr_rand(%struct.DCALbrDecoder* %s, i32 %sb) #0 !dbg !9485 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %sb.addr = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !9488, metadata !2138), !dbg !9489
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !9490, metadata !2138), !dbg !9491
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9492
  %lbr_rand = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 19, !dbg !9493
  %1 = load i32, i32* %lbr_rand, align 4, !dbg !9493
  %mul = mul i32 1103515245, %1, !dbg !9494
  %add = add i32 %mul, 12345, !dbg !9495
  %2 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9496
  %lbr_rand1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %2, i32 0, i32 19, !dbg !9497
  store i32 %add, i32* %lbr_rand1, align 4, !dbg !9498
  %3 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9499
  %lbr_rand2 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %3, i32 0, i32 19, !dbg !9500
  %4 = load i32, i32* %lbr_rand2, align 4, !dbg !9500
  %conv = sitofp i32 %4 to float, !dbg !9499
  %5 = load i32, i32* %sb.addr, align 4, !dbg !9501
  %idxprom = sext i32 %5 to i64, !dbg !9502
  %6 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9502
  %sb_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %6, i32 0, i32 35, !dbg !9503
  %arrayidx = getelementptr inbounds [32 x float], [32 x float]* %sb_scf, i64 0, i64 %idxprom, !dbg !9502
  %7 = load float, float* %arrayidx, align 4, !dbg !9502
  %mul3 = fmul float %conv, %7, !dbg !9504
  ret float %mul3, !dbg !9505
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_grid_2(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2, i32 %start_sb, i32 %end_sb, i32 %flag) #0 !dbg !9506 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %start_sb.addr = alloca i32, align 4
  %end_sb.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sb = alloca i32, align 4
  %ch = alloca i32, align 4
  %nsubbands = alloca i32, align 4
  %g2_scf = alloca i8*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !9507, metadata !2138), !dbg !9508
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !9509, metadata !2138), !dbg !9510
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !9511, metadata !2138), !dbg !9512
  store i32 %start_sb, i32* %start_sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_sb.addr, metadata !9513, metadata !2138), !dbg !9514
  store i32 %end_sb, i32* %end_sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_sb.addr, metadata !9515, metadata !2138), !dbg !9516
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9517, metadata !2138), !dbg !9518
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9519, metadata !2138), !dbg !9520
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9521, metadata !2138), !dbg !9522
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !9523, metadata !2138), !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9525, metadata !2138), !dbg !9526
  call void @llvm.dbg.declare(metadata i32* %nsubbands, metadata !9527, metadata !2138), !dbg !9528
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9529
  %nsubbands1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 14, !dbg !9530
  %1 = load i32, i32* %nsubbands1, align 8, !dbg !9530
  %sub = sub nsw i32 %1, 1, !dbg !9531
  %idxprom = sext i32 %sub to i64, !dbg !9532
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_scf_to_grid_2, i64 0, i64 %idxprom, !dbg !9532
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9532
  %conv = zext i8 %2 to i32, !dbg !9532
  %add = add nsw i32 %conv, 1, !dbg !9533
  store i32 %add, i32* %nsubbands, align 4, !dbg !9534
  %3 = load i32, i32* %end_sb.addr, align 4, !dbg !9535
  %4 = load i32, i32* %nsubbands, align 4, !dbg !9537
  %cmp = icmp sgt i32 %3, %4, !dbg !9538
  br i1 %cmp, label %if.then, label %if.end, !dbg !9539

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %nsubbands, align 4, !dbg !9540
  store i32 %5, i32* %end_sb.addr, align 4, !dbg !9541
  br label %if.end, !dbg !9542

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %start_sb.addr, align 4, !dbg !9543
  store i32 %6, i32* %sb, align 4, !dbg !9545
  br label %for.cond, !dbg !9546

for.cond:                                         ; preds = %for.inc67, %if.end
  %7 = load i32, i32* %sb, align 4, !dbg !9547
  %8 = load i32, i32* %end_sb.addr, align 4, !dbg !9550
  %cmp3 = icmp slt i32 %7, %8, !dbg !9551
  br i1 %cmp3, label %for.body, label %for.end69, !dbg !9552

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %ch1.addr, align 4, !dbg !9553
  store i32 %9, i32* %ch, align 4, !dbg !9556
  br label %for.cond5, !dbg !9557

for.cond5:                                        ; preds = %for.inc64, %for.body
  %10 = load i32, i32* %ch, align 4, !dbg !9558
  %11 = load i32, i32* %ch2.addr, align 4, !dbg !9561
  %cmp6 = icmp sle i32 %10, %11, !dbg !9562
  br i1 %cmp6, label %for.body8, label %for.end66, !dbg !9563

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i8** %g2_scf, metadata !9564, metadata !2138), !dbg !9566
  %12 = load i32, i32* %sb, align 4, !dbg !9567
  %idxprom9 = sext i32 %12 to i64, !dbg !9568
  %13 = load i32, i32* %ch, align 4, !dbg !9569
  %idxprom10 = sext i32 %13 to i64, !dbg !9568
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9568
  %grid_2_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 27, !dbg !9570
  %arrayidx11 = getelementptr inbounds [6 x [3 x [64 x i8]]], [6 x [3 x [64 x i8]]]* %grid_2_scf, i64 0, i64 %idxprom10, !dbg !9568
  %arrayidx12 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx11, i64 0, i64 %idxprom9, !dbg !9568
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx12, i32 0, i32 0, !dbg !9568
  store i8* %arraydecay, i8** %g2_scf, align 8, !dbg !9566
  %15 = load i32, i32* %ch, align 4, !dbg !9571
  %16 = load i32, i32* %ch1.addr, align 4, !dbg !9573
  %cmp13 = icmp ne i32 %15, %16, !dbg !9574
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !9575

land.rhs:                                         ; preds = %for.body8
  %17 = load i32, i32* %sb, align 4, !dbg !9576
  %idxprom15 = sext i32 %17 to i64, !dbg !9578
  %arrayidx16 = getelementptr inbounds [3 x i8], [3 x i8]* @ff_dca_grid_2_to_scf, i64 0, i64 %idxprom15, !dbg !9578
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !9578
  %conv17 = zext i8 %18 to i32, !dbg !9578
  %19 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9579
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %19, i32 0, i32 16, !dbg !9580
  %20 = load i32, i32* %min_mono_subband, align 32, !dbg !9580
  %cmp18 = icmp sge i32 %conv17, %20, !dbg !9581
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body8
  %21 = phi i1 [ false, %for.body8 ], [ %cmp18, %land.rhs ]
  %land.ext = zext i1 %21 to i32, !dbg !9582
  %22 = load i32, i32* %flag.addr, align 4, !dbg !9584
  %cmp20 = icmp ne i32 %land.ext, %22, !dbg !9585
  br i1 %cmp20, label %if.then22, label %if.end31, !dbg !9586

if.then22:                                        ; preds = %land.end
  %23 = load i32, i32* %flag.addr, align 4, !dbg !9587
  %tobool = icmp ne i32 %23, 0, !dbg !9587
  br i1 %tobool, label %if.end30, label %if.then23, !dbg !9590

if.then23:                                        ; preds = %if.then22
  %24 = load i8*, i8** %g2_scf, align 8, !dbg !9591
  %25 = load i32, i32* %sb, align 4, !dbg !9592
  %idxprom24 = sext i32 %25 to i64, !dbg !9593
  %26 = load i32, i32* %ch1.addr, align 4, !dbg !9594
  %idxprom25 = sext i32 %26 to i64, !dbg !9593
  %27 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9593
  %grid_2_scf26 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %27, i32 0, i32 27, !dbg !9595
  %arrayidx27 = getelementptr inbounds [6 x [3 x [64 x i8]]], [6 x [3 x [64 x i8]]]* %grid_2_scf26, i64 0, i64 %idxprom25, !dbg !9593
  %arrayidx28 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !9593
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx28, i32 0, i32 0, !dbg !9596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %arraydecay29, i64 64, i32 1, i1 false), !dbg !9596
  br label %if.end30, !dbg !9596

if.end30:                                         ; preds = %if.then23, %if.then22
  br label %for.inc64, !dbg !9597

if.end31:                                         ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !9598
  br label %for.cond32, !dbg !9600

for.cond32:                                       ; preds = %for.inc61, %if.end31
  %28 = load i32, i32* %i, align 4, !dbg !9601
  %cmp33 = icmp slt i32 %28, 8, !dbg !9604
  br i1 %cmp33, label %for.body35, label %for.end63, !dbg !9605

for.body35:                                       ; preds = %for.cond32
  %29 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9606
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %29, i32 0, i32 1, !dbg !9609
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !9610
  %cmp36 = icmp slt i32 %call, 1, !dbg !9611
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !9612

if.then38:                                        ; preds = %for.body35
  %30 = load i8*, i8** %g2_scf, align 8, !dbg !9613
  %31 = load i32, i32* %i, align 4, !dbg !9615
  %mul = mul nsw i32 %31, 8, !dbg !9616
  %sub39 = sub nsw i32 64, %mul, !dbg !9617
  %conv40 = sext i32 %sub39 to i64, !dbg !9618
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 %conv40, i32 1, i1 false), !dbg !9619
  br label %for.end63, !dbg !9620

if.end41:                                         ; preds = %for.body35
  %32 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9621
  %gb42 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %32, i32 0, i32 1, !dbg !9623
  %call43 = call i32 @get_bits1(%struct.GetBitContext* %gb42), !dbg !9624
  %tobool44 = icmp ne i32 %call43, 0, !dbg !9624
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !9625

if.then45:                                        ; preds = %if.end41
  store i32 0, i32* %j, align 4, !dbg !9626
  br label %for.cond46, !dbg !9629

for.cond46:                                       ; preds = %for.inc, %if.then45
  %33 = load i32, i32* %j, align 4, !dbg !9630
  %cmp47 = icmp slt i32 %33, 8, !dbg !9633
  br i1 %cmp47, label %for.body49, label %for.end, !dbg !9634

for.body49:                                       ; preds = %for.cond46
  %34 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9635
  %gb50 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %34, i32 0, i32 1, !dbg !9638
  %call51 = call i32 @ensure_bits(%struct.GetBitContext* %gb50, i32 20), !dbg !9639
  %tobool52 = icmp ne i32 %call51, 0, !dbg !9639
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !9640

if.then53:                                        ; preds = %for.body49
  br label %for.end, !dbg !9641

if.end54:                                         ; preds = %for.body49
  %35 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9642
  %gb55 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %35, i32 0, i32 1, !dbg !9643
  %call56 = call i32 @parse_vlc(%struct.GetBitContext* %gb55, %struct.VLC* @ff_dca_vlc_grid_2, i32 2), !dbg !9644
  %conv57 = trunc i32 %call56 to i8, !dbg !9644
  %36 = load i32, i32* %j, align 4, !dbg !9645
  %idxprom58 = sext i32 %36 to i64, !dbg !9646
  %37 = load i8*, i8** %g2_scf, align 8, !dbg !9646
  %arrayidx59 = getelementptr inbounds i8, i8* %37, i64 %idxprom58, !dbg !9646
  store i8 %conv57, i8* %arrayidx59, align 1, !dbg !9647
  br label %for.inc, !dbg !9648

for.inc:                                          ; preds = %if.end54
  %38 = load i32, i32* %j, align 4, !dbg !9649
  %inc = add nsw i32 %38, 1, !dbg !9649
  store i32 %inc, i32* %j, align 4, !dbg !9649
  br label %for.cond46, !dbg !9651, !llvm.loop !9652

for.end:                                          ; preds = %if.then53, %for.cond46
  br label %if.end60, !dbg !9654

if.else:                                          ; preds = %if.end41
  %39 = load i8*, i8** %g2_scf, align 8, !dbg !9655
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 8, i32 1, i1 false), !dbg !9657
  br label %if.end60

if.end60:                                         ; preds = %if.else, %for.end
  br label %for.inc61, !dbg !9658

for.inc61:                                        ; preds = %if.end60
  %40 = load i32, i32* %i, align 4, !dbg !9659
  %inc62 = add nsw i32 %40, 1, !dbg !9659
  store i32 %inc62, i32* %i, align 4, !dbg !9659
  %41 = load i8*, i8** %g2_scf, align 8, !dbg !9661
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 8, !dbg !9661
  store i8* %add.ptr, i8** %g2_scf, align 8, !dbg !9661
  br label %for.cond32, !dbg !9662, !llvm.loop !9663

for.end63:                                        ; preds = %if.then38, %for.cond32
  br label %for.inc64, !dbg !9665

for.inc64:                                        ; preds = %for.end63, %if.end30
  %42 = load i32, i32* %ch, align 4, !dbg !9666
  %inc65 = add nsw i32 %42, 1, !dbg !9666
  store i32 %inc65, i32* %ch, align 4, !dbg !9666
  br label %for.cond5, !dbg !9668, !llvm.loop !9669

for.end66:                                        ; preds = %for.cond5
  br label %for.inc67, !dbg !9671

for.inc67:                                        ; preds = %for.end66
  %43 = load i32, i32* %sb, align 4, !dbg !9672
  %inc68 = add nsw i32 %43, 1, !dbg !9672
  store i32 %inc68, i32* %sb, align 4, !dbg !9672
  br label %for.cond, !dbg !9674, !llvm.loop !9675

for.end69:                                        ; preds = %for.cond
  ret i32 0, !dbg !9677
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @parse_grid_1_sec_ch(%struct.DCALbrDecoder* %s, i32 %ch2) #0 !dbg !9678 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch2.addr = alloca i32, align 4
  %sb = alloca i32, align 4
  %nsubbands = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !9679, metadata !2138), !dbg !9680
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !9681, metadata !2138), !dbg !9682
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !9683, metadata !2138), !dbg !9684
  call void @llvm.dbg.declare(metadata i32* %nsubbands, metadata !9685, metadata !2138), !dbg !9686
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9687
  %nsubbands1 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 14, !dbg !9688
  %1 = load i32, i32* %nsubbands1, align 8, !dbg !9688
  %sub = sub nsw i32 %1, 1, !dbg !9689
  %idxprom = sext i32 %sub to i64, !dbg !9690
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @ff_dca_scf_to_grid_1, i64 0, i64 %idxprom, !dbg !9690
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9690
  %conv = zext i8 %2 to i32, !dbg !9690
  %add = add nsw i32 %conv, 1, !dbg !9691
  store i32 %add, i32* %nsubbands, align 4, !dbg !9692
  store i32 2, i32* %sb, align 4, !dbg !9693
  br label %for.cond, !dbg !9695

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %sb, align 4, !dbg !9696
  %4 = load i32, i32* %nsubbands, align 4, !dbg !9699
  %cmp = icmp slt i32 %3, %4, !dbg !9700
  br i1 %cmp, label %for.body, label %for.end, !dbg !9701

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %sb, align 4, !dbg !9702
  %idxprom3 = sext i32 %5 to i64, !dbg !9705
  %arrayidx4 = getelementptr inbounds [11 x i8], [11 x i8]* @ff_dca_grid_1_to_scf, i64 0, i64 %idxprom3, !dbg !9705
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !9705
  %conv5 = zext i8 %6 to i32, !dbg !9705
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9706
  %min_mono_subband = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 16, !dbg !9707
  %8 = load i32, i32* %min_mono_subband, align 32, !dbg !9707
  %cmp6 = icmp sge i32 %conv5, %8, !dbg !9708
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !9709

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9710
  %10 = load i32, i32* %sb, align 4, !dbg !9712
  %idxprom8 = sext i32 %10 to i64, !dbg !9713
  %11 = load i32, i32* %ch2.addr, align 4, !dbg !9714
  %idxprom9 = sext i32 %11 to i64, !dbg !9713
  %12 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9713
  %grid_1_scf = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %12, i32 0, i32 26, !dbg !9715
  %arrayidx10 = getelementptr inbounds [6 x [12 x [8 x i8]]], [6 x [12 x [8 x i8]]]* %grid_1_scf, i64 0, i64 %idxprom9, !dbg !9713
  %arrayidx11 = getelementptr inbounds [12 x [8 x i8]], [12 x [8 x i8]]* %arrayidx10, i64 0, i64 %idxprom8, !dbg !9713
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx11, i32 0, i32 0, !dbg !9713
  %call = call i32 @parse_scale_factors(%struct.DCALbrDecoder* %9, i8* %arraydecay), !dbg !9716
  %cmp12 = icmp slt i32 %call, 0, !dbg !9717
  br i1 %cmp12, label %if.then, label %if.end, !dbg !9718

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !9720
  br label %return, !dbg !9720

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !9721

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %sb, align 4, !dbg !9722
  %inc = add nsw i32 %13, 1, !dbg !9722
  store i32 %inc, i32* %sb, align 4, !dbg !9722
  br label %for.cond, !dbg !9724, !llvm.loop !9725

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !9727
  br label %for.cond14, !dbg !9729

for.cond14:                                       ; preds = %for.inc37, %for.end
  %14 = load i32, i32* %sb, align 4, !dbg !9730
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9733
  %nsubbands15 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %15, i32 0, i32 14, !dbg !9734
  %16 = load i32, i32* %nsubbands15, align 8, !dbg !9734
  %sub16 = sub nsw i32 %16, 4, !dbg !9735
  %cmp17 = icmp slt i32 %14, %sub16, !dbg !9736
  br i1 %cmp17, label %for.body19, label %for.end39, !dbg !9737

for.body19:                                       ; preds = %for.cond14
  %17 = load i32, i32* %sb, align 4, !dbg !9738
  %add20 = add nsw i32 %17, 4, !dbg !9741
  %18 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9742
  %min_mono_subband21 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %18, i32 0, i32 16, !dbg !9743
  %19 = load i32, i32* %min_mono_subband21, align 32, !dbg !9743
  %cmp22 = icmp sge i32 %add20, %19, !dbg !9744
  br i1 %cmp22, label %if.then24, label %if.end36, !dbg !9745

if.then24:                                        ; preds = %for.body19
  %20 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9746
  %gb = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %20, i32 0, i32 1, !dbg !9749
  %call25 = call i32 @ensure_bits(%struct.GetBitContext* %gb, i32 20), !dbg !9750
  %tobool = icmp ne i32 %call25, 0, !dbg !9750
  br i1 %tobool, label %if.then26, label %if.end27, !dbg !9751

if.then26:                                        ; preds = %if.then24
  store i32 0, i32* %retval, align 4, !dbg !9752
  br label %return, !dbg !9752

if.end27:                                         ; preds = %if.then24
  %21 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9753
  %gb28 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %21, i32 0, i32 1, !dbg !9754
  %call29 = call i32 @parse_vlc(%struct.GetBitContext* %gb28, %struct.VLC* @ff_dca_vlc_avg_g3, i32 2), !dbg !9755
  %sub30 = sub nsw i32 %call29, 16, !dbg !9756
  %conv31 = trunc i32 %sub30 to i8, !dbg !9755
  %22 = load i32, i32* %sb, align 4, !dbg !9757
  %idxprom32 = sext i32 %22 to i64, !dbg !9758
  %23 = load i32, i32* %ch2.addr, align 4, !dbg !9759
  %idxprom33 = sext i32 %23 to i64, !dbg !9758
  %24 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9758
  %grid_3_avg = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %24, i32 0, i32 28, !dbg !9760
  %arrayidx34 = getelementptr inbounds [6 x [28 x i8]], [6 x [28 x i8]]* %grid_3_avg, i64 0, i64 %idxprom33, !dbg !9758
  %arrayidx35 = getelementptr inbounds [28 x i8], [28 x i8]* %arrayidx34, i64 0, i64 %idxprom32, !dbg !9758
  store i8 %conv31, i8* %arrayidx35, align 1, !dbg !9761
  br label %if.end36, !dbg !9762

if.end36:                                         ; preds = %if.end27, %for.body19
  br label %for.inc37, !dbg !9763

for.inc37:                                        ; preds = %if.end36
  %25 = load i32, i32* %sb, align 4, !dbg !9764
  %inc38 = add nsw i32 %25, 1, !dbg !9764
  store i32 %inc38, i32* %sb, align 4, !dbg !9764
  br label %for.cond14, !dbg !9766, !llvm.loop !9767

for.end39:                                        ; preds = %for.cond14
  store i32 0, i32* %retval, align 4, !dbg !9769
  br label %return, !dbg !9769

return:                                           ; preds = %for.end39, %if.then26, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !9770
  ret i32 %26, !dbg !9770
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #9

; Function Attrs: nounwind uwtable
define internal void @synth_lpc(%struct.DCALbrDecoder* %s, i32 %ch1, i32 %ch2, i32 %sb) #0 !dbg !9771 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch1.addr = alloca i32, align 4
  %ch2.addr = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %f = alloca i32, align 4
  %ch = alloca i32, align 4
  %samples = alloca float*, align 8
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !9774, metadata !2138), !dbg !9775
  store i32 %ch1, i32* %ch1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch1.addr, metadata !9776, metadata !2138), !dbg !9777
  store i32 %ch2, i32* %ch2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch2.addr, metadata !9778, metadata !2138), !dbg !9779
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !9780, metadata !2138), !dbg !9781
  call void @llvm.dbg.declare(metadata i32* %f, metadata !9782, metadata !2138), !dbg !9783
  %0 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9784
  %framenum = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %0, i32 0, i32 18, !dbg !9785
  %1 = load i32, i32* %framenum, align 8, !dbg !9785
  %and = and i32 %1, 1, !dbg !9786
  store i32 %and, i32* %f, align 4, !dbg !9783
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !9787, metadata !2138), !dbg !9788
  %2 = load i32, i32* %ch1.addr, align 4, !dbg !9789
  store i32 %2, i32* %ch, align 4, !dbg !9791
  br label %for.cond, !dbg !9792

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %ch, align 4, !dbg !9793
  %4 = load i32, i32* %ch2.addr, align 4, !dbg !9796
  %cmp = icmp sle i32 %3, %4, !dbg !9797
  br i1 %cmp, label %for.body, label %for.end, !dbg !9798

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %samples, metadata !9799, metadata !2138), !dbg !9801
  %5 = load i32, i32* %sb.addr, align 4, !dbg !9802
  %idxprom = sext i32 %5 to i64, !dbg !9803
  %6 = load i32, i32* %ch, align 4, !dbg !9804
  %idxprom1 = sext i32 %6 to i64, !dbg !9803
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9803
  %time_samples = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 36, !dbg !9805
  %arrayidx = getelementptr inbounds [6 x [32 x float*]], [6 x [32 x float*]]* %time_samples, i64 0, i64 %idxprom1, !dbg !9803
  %arrayidx2 = getelementptr inbounds [32 x float*], [32 x float*]* %arrayidx, i64 0, i64 %idxprom, !dbg !9803
  %8 = load float*, float** %arrayidx2, align 8, !dbg !9803
  store float* %8, float** %samples, align 8, !dbg !9801
  %9 = load i32, i32* %ch, align 4, !dbg !9806
  %idxprom3 = sext i32 %9 to i64, !dbg !9808
  %10 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9808
  %ch_pres = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %10, i32 0, i32 25, !dbg !9809
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* %ch_pres, i64 0, i64 %idxprom3, !dbg !9808
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !9808
  %12 = load i32, i32* %sb.addr, align 4, !dbg !9810
  %shl = shl i32 1, %12, !dbg !9811
  %and5 = and i32 %11, %shl, !dbg !9812
  %tobool = icmp ne i32 %and5, 0, !dbg !9812
  br i1 %tobool, label %if.end, label %if.then, !dbg !9813

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9814

if.end:                                           ; preds = %for.body
  %13 = load i32, i32* %sb.addr, align 4, !dbg !9815
  %cmp6 = icmp slt i32 %13, 2, !dbg !9817
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !9818

if.then7:                                         ; preds = %if.end
  %14 = load float*, float** %samples, align 8, !dbg !9819
  %15 = load i32, i32* %sb.addr, align 4, !dbg !9821
  %idxprom8 = sext i32 %15 to i64, !dbg !9822
  %16 = load i32, i32* %ch, align 4, !dbg !9823
  %idxprom9 = sext i32 %16 to i64, !dbg !9822
  %17 = load i32, i32* %f, align 4, !dbg !9824
  %xor = xor i32 %17, 1, !dbg !9825
  %idxprom10 = sext i32 %xor to i64, !dbg !9822
  %18 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9822
  %lpc_coeff = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %18, i32 0, i32 34, !dbg !9826
  %arrayidx11 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff, i64 0, i64 %idxprom10, !dbg !9822
  %arrayidx12 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx11, i64 0, i64 %idxprom9, !dbg !9822
  %arrayidx13 = getelementptr inbounds [3 x [2 x [8 x float]]], [3 x [2 x [8 x float]]]* %arrayidx12, i64 0, i64 %idxprom8, !dbg !9822
  %arrayidx14 = getelementptr inbounds [2 x [8 x float]], [2 x [8 x float]]* %arrayidx13, i64 0, i64 1, !dbg !9822
  %arraydecay = getelementptr inbounds [8 x float], [8 x float]* %arrayidx14, i32 0, i32 0, !dbg !9822
  call void @predict(float* %14, float* %arraydecay, i32 16), !dbg !9827
  %19 = load float*, float** %samples, align 8, !dbg !9828
  %add.ptr = getelementptr inbounds float, float* %19, i64 16, !dbg !9829
  %20 = load i32, i32* %sb.addr, align 4, !dbg !9830
  %idxprom15 = sext i32 %20 to i64, !dbg !9831
  %21 = load i32, i32* %ch, align 4, !dbg !9832
  %idxprom16 = sext i32 %21 to i64, !dbg !9831
  %22 = load i32, i32* %f, align 4, !dbg !9833
  %idxprom17 = sext i32 %22 to i64, !dbg !9831
  %23 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9831
  %lpc_coeff18 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %23, i32 0, i32 34, !dbg !9834
  %arrayidx19 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff18, i64 0, i64 %idxprom17, !dbg !9831
  %arrayidx20 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx19, i64 0, i64 %idxprom16, !dbg !9831
  %arrayidx21 = getelementptr inbounds [3 x [2 x [8 x float]]], [3 x [2 x [8 x float]]]* %arrayidx20, i64 0, i64 %idxprom15, !dbg !9831
  %arrayidx22 = getelementptr inbounds [2 x [8 x float]], [2 x [8 x float]]* %arrayidx21, i64 0, i64 0, !dbg !9831
  %arraydecay23 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx22, i32 0, i32 0, !dbg !9831
  call void @predict(float* %add.ptr, float* %arraydecay23, i32 64), !dbg !9835
  %24 = load float*, float** %samples, align 8, !dbg !9836
  %add.ptr24 = getelementptr inbounds float, float* %24, i64 80, !dbg !9837
  %25 = load i32, i32* %sb.addr, align 4, !dbg !9838
  %idxprom25 = sext i32 %25 to i64, !dbg !9839
  %26 = load i32, i32* %ch, align 4, !dbg !9840
  %idxprom26 = sext i32 %26 to i64, !dbg !9839
  %27 = load i32, i32* %f, align 4, !dbg !9841
  %idxprom27 = sext i32 %27 to i64, !dbg !9839
  %28 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9839
  %lpc_coeff28 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %28, i32 0, i32 34, !dbg !9842
  %arrayidx29 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff28, i64 0, i64 %idxprom27, !dbg !9839
  %arrayidx30 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx29, i64 0, i64 %idxprom26, !dbg !9839
  %arrayidx31 = getelementptr inbounds [3 x [2 x [8 x float]]], [3 x [2 x [8 x float]]]* %arrayidx30, i64 0, i64 %idxprom25, !dbg !9839
  %arrayidx32 = getelementptr inbounds [2 x [8 x float]], [2 x [8 x float]]* %arrayidx31, i64 0, i64 1, !dbg !9839
  %arraydecay33 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx32, i32 0, i32 0, !dbg !9839
  call void @predict(float* %add.ptr24, float* %arraydecay33, i32 48), !dbg !9843
  br label %if.end54, !dbg !9844

if.else:                                          ; preds = %if.end
  %29 = load float*, float** %samples, align 8, !dbg !9845
  %30 = load i32, i32* %sb.addr, align 4, !dbg !9847
  %idxprom34 = sext i32 %30 to i64, !dbg !9848
  %31 = load i32, i32* %ch, align 4, !dbg !9849
  %idxprom35 = sext i32 %31 to i64, !dbg !9848
  %32 = load i32, i32* %f, align 4, !dbg !9850
  %xor36 = xor i32 %32, 1, !dbg !9851
  %idxprom37 = sext i32 %xor36 to i64, !dbg !9848
  %33 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9848
  %lpc_coeff38 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %33, i32 0, i32 34, !dbg !9852
  %arrayidx39 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff38, i64 0, i64 %idxprom37, !dbg !9848
  %arrayidx40 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx39, i64 0, i64 %idxprom35, !dbg !9848
  %arrayidx41 = getelementptr inbounds [3 x [2 x [8 x float]]], [3 x [2 x [8 x float]]]* %arrayidx40, i64 0, i64 %idxprom34, !dbg !9848
  %arrayidx42 = getelementptr inbounds [2 x [8 x float]], [2 x [8 x float]]* %arrayidx41, i64 0, i64 0, !dbg !9848
  %arraydecay43 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx42, i32 0, i32 0, !dbg !9848
  call void @predict(float* %29, float* %arraydecay43, i32 16), !dbg !9853
  %34 = load float*, float** %samples, align 8, !dbg !9854
  %add.ptr44 = getelementptr inbounds float, float* %34, i64 16, !dbg !9855
  %35 = load i32, i32* %sb.addr, align 4, !dbg !9856
  %idxprom45 = sext i32 %35 to i64, !dbg !9857
  %36 = load i32, i32* %ch, align 4, !dbg !9858
  %idxprom46 = sext i32 %36 to i64, !dbg !9857
  %37 = load i32, i32* %f, align 4, !dbg !9859
  %idxprom47 = sext i32 %37 to i64, !dbg !9857
  %38 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9857
  %lpc_coeff48 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %38, i32 0, i32 34, !dbg !9860
  %arrayidx49 = getelementptr inbounds [2 x [6 x [3 x [2 x [8 x float]]]]], [2 x [6 x [3 x [2 x [8 x float]]]]]* %lpc_coeff48, i64 0, i64 %idxprom47, !dbg !9857
  %arrayidx50 = getelementptr inbounds [6 x [3 x [2 x [8 x float]]]], [6 x [3 x [2 x [8 x float]]]]* %arrayidx49, i64 0, i64 %idxprom46, !dbg !9857
  %arrayidx51 = getelementptr inbounds [3 x [2 x [8 x float]]], [3 x [2 x [8 x float]]]* %arrayidx50, i64 0, i64 %idxprom45, !dbg !9857
  %arrayidx52 = getelementptr inbounds [2 x [8 x float]], [2 x [8 x float]]* %arrayidx51, i64 0, i64 0, !dbg !9857
  %arraydecay53 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx52, i32 0, i32 0, !dbg !9857
  call void @predict(float* %add.ptr44, float* %arraydecay53, i32 112), !dbg !9861
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then7
  br label %for.inc, !dbg !9862

for.inc:                                          ; preds = %if.end54, %if.then
  %39 = load i32, i32* %ch, align 4, !dbg !9863
  %inc = add nsw i32 %39, 1, !dbg !9863
  store i32 %inc, i32* %ch, align 4, !dbg !9863
  br label %for.cond, !dbg !9865, !llvm.loop !9866

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9868
}

; Function Attrs: nounwind uwtable
define internal void @predict(float* %samples, float* %coeff, i32 %nsamples) #0 !dbg !9869 {
entry:
  %samples.addr = alloca float*, align 8
  %coeff.addr = alloca float*, align 8
  %nsamples.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %res = alloca float, align 4
  store float* %samples, float** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata float** %samples.addr, metadata !9872, metadata !2138), !dbg !9873
  store float* %coeff, float** %coeff.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coeff.addr, metadata !9874, metadata !2138), !dbg !9875
  store i32 %nsamples, i32* %nsamples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nsamples.addr, metadata !9876, metadata !2138), !dbg !9877
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9878, metadata !2138), !dbg !9879
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9880, metadata !2138), !dbg !9881
  store i32 0, i32* %i, align 4, !dbg !9882
  br label %for.cond, !dbg !9884

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9885
  %1 = load i32, i32* %nsamples.addr, align 4, !dbg !9888
  %cmp = icmp slt i32 %0, %1, !dbg !9889
  br i1 %cmp, label %for.body, label %for.end12, !dbg !9890

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %res, metadata !9891, metadata !2138), !dbg !9893
  store float 0.000000e+00, float* %res, align 4, !dbg !9893
  store i32 0, i32* %j, align 4, !dbg !9894
  br label %for.cond1, !dbg !9896

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %j, align 4, !dbg !9897
  %cmp2 = icmp slt i32 %2, 8, !dbg !9900
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !9901

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %j, align 4, !dbg !9902
  %idxprom = sext i32 %3 to i64, !dbg !9903
  %4 = load float*, float** %coeff.addr, align 8, !dbg !9903
  %arrayidx = getelementptr inbounds float, float* %4, i64 %idxprom, !dbg !9903
  %5 = load float, float* %arrayidx, align 4, !dbg !9903
  %6 = load i32, i32* %i, align 4, !dbg !9904
  %7 = load i32, i32* %j, align 4, !dbg !9905
  %sub = sub nsw i32 %6, %7, !dbg !9906
  %sub4 = sub nsw i32 %sub, 1, !dbg !9907
  %idxprom5 = sext i32 %sub4 to i64, !dbg !9908
  %8 = load float*, float** %samples.addr, align 8, !dbg !9908
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %idxprom5, !dbg !9908
  %9 = load float, float* %arrayidx6, align 4, !dbg !9908
  %mul = fmul float %5, %9, !dbg !9909
  %10 = load float, float* %res, align 4, !dbg !9910
  %add = fadd float %10, %mul, !dbg !9910
  store float %add, float* %res, align 4, !dbg !9910
  br label %for.inc, !dbg !9911

for.inc:                                          ; preds = %for.body3
  %11 = load i32, i32* %j, align 4, !dbg !9912
  %inc = add nsw i32 %11, 1, !dbg !9912
  store i32 %inc, i32* %j, align 4, !dbg !9912
  br label %for.cond1, !dbg !9914, !llvm.loop !9915

for.end:                                          ; preds = %for.cond1
  %12 = load float, float* %res, align 4, !dbg !9917
  %13 = load i32, i32* %i, align 4, !dbg !9918
  %idxprom7 = sext i32 %13 to i64, !dbg !9919
  %14 = load float*, float** %samples.addr, align 8, !dbg !9919
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 %idxprom7, !dbg !9919
  %15 = load float, float* %arrayidx8, align 4, !dbg !9920
  %sub9 = fsub float %15, %12, !dbg !9920
  store float %sub9, float* %arrayidx8, align 4, !dbg !9920
  br label %for.inc10, !dbg !9921

for.inc10:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4, !dbg !9922
  %inc11 = add nsw i32 %16, 1, !dbg !9922
  store i32 %inc11, i32* %i, align 4, !dbg !9922
  br label %for.cond, !dbg !9924, !llvm.loop !9925

for.end12:                                        ; preds = %for.cond
  ret void, !dbg !9927
}

; Function Attrs: nounwind uwtable
define internal void @base_func_synth(%struct.DCALbrDecoder* %s, i32 %ch, float* %values, i32 %sf) #0 !dbg !9928 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch.addr = alloca i32, align 4
  %values.addr = alloca float*, align 8
  %sf.addr = alloca i32, align 4
  %group = alloca i32, align 4
  %group_sf = alloca i32, align 4
  %synth_idx = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !9931, metadata !2138), !dbg !9932
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9933, metadata !2138), !dbg !9934
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !9935, metadata !2138), !dbg !9936
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !9937, metadata !2138), !dbg !9938
  call void @llvm.dbg.declare(metadata i32* %group, metadata !9939, metadata !2138), !dbg !9940
  store i32 0, i32* %group, align 4, !dbg !9941
  br label %for.cond, !dbg !9943

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %group, align 4, !dbg !9944
  %cmp = icmp slt i32 %0, 5, !dbg !9947
  br i1 %cmp, label %for.body, label %for.end, !dbg !9948

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %group_sf, metadata !9949, metadata !2138), !dbg !9951
  %1 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9952
  %framenum = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %1, i32 0, i32 18, !dbg !9953
  %2 = load i32, i32* %framenum, align 8, !dbg !9953
  %3 = load i32, i32* %group, align 4, !dbg !9954
  %shl = shl i32 %2, %3, !dbg !9955
  %4 = load i32, i32* %sf.addr, align 4, !dbg !9956
  %sub = sub nsw i32 %4, 22, !dbg !9957
  %5 = load i32, i32* %group, align 4, !dbg !9958
  %sub1 = sub nsw i32 5, %5, !dbg !9959
  %shr = ashr i32 %sub, %sub1, !dbg !9960
  %add = add nsw i32 %shl, %shr, !dbg !9961
  store i32 %add, i32* %group_sf, align 4, !dbg !9951
  call void @llvm.dbg.declare(metadata i32* %synth_idx, metadata !9962, metadata !2138), !dbg !9963
  %6 = load i32, i32* %sf.addr, align 4, !dbg !9964
  %sub2 = sub nsw i32 %6, 22, !dbg !9965
  %and = and i32 %sub2, 31, !dbg !9966
  %7 = load i32, i32* %group, align 4, !dbg !9967
  %shl3 = shl i32 %and, %7, !dbg !9968
  %and4 = and i32 %shl3, 31, !dbg !9969
  %8 = load i32, i32* %group, align 4, !dbg !9970
  %shl5 = shl i32 1, %8, !dbg !9971
  %add6 = add nsw i32 %and4, %shl5, !dbg !9972
  %sub7 = sub nsw i32 %add6, 1, !dbg !9973
  store i32 %sub7, i32* %synth_idx, align 4, !dbg !9963
  %9 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9974
  %10 = load i32, i32* %ch.addr, align 4, !dbg !9975
  %11 = load float*, float** %values.addr, align 8, !dbg !9976
  %12 = load i32, i32* %group, align 4, !dbg !9977
  %13 = load i32, i32* %group_sf, align 4, !dbg !9978
  %sub8 = sub nsw i32 %13, 1, !dbg !9979
  %and9 = and i32 %sub8, 31, !dbg !9980
  %14 = load i32, i32* %synth_idx, align 4, !dbg !9981
  %sub10 = sub nsw i32 30, %14, !dbg !9982
  call void @synth_tones(%struct.DCALbrDecoder* %9, i32 %10, float* %11, i32 %12, i32 %and9, i32 %sub10), !dbg !9983
  %15 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !9984
  %16 = load i32, i32* %ch.addr, align 4, !dbg !9985
  %17 = load float*, float** %values.addr, align 8, !dbg !9986
  %18 = load i32, i32* %group, align 4, !dbg !9987
  %19 = load i32, i32* %group_sf, align 4, !dbg !9988
  %and11 = and i32 %19, 31, !dbg !9989
  %20 = load i32, i32* %synth_idx, align 4, !dbg !9990
  call void @synth_tones(%struct.DCALbrDecoder* %15, i32 %16, float* %17, i32 %18, i32 %and11, i32 %20), !dbg !9991
  br label %for.inc, !dbg !9992

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %group, align 4, !dbg !9993
  %inc = add nsw i32 %21, 1, !dbg !9993
  store i32 %inc, i32* %group, align 4, !dbg !9993
  br label %for.cond, !dbg !9995, !llvm.loop !9996

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9998
}

; Function Attrs: nounwind uwtable
define internal void @synth_tones(%struct.DCALbrDecoder* %s, i32 %ch, float* %values, i32 %group, i32 %group_sf, i32 %synth_idx) #0 !dbg !9999 {
entry:
  %s.addr = alloca %struct.DCALbrDecoder*, align 8
  %ch.addr = alloca i32, align 4
  %values.addr = alloca float*, align 8
  %group.addr = alloca i32, align 4
  %group_sf.addr = alloca i32, align 4
  %synth_idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %count = alloca i32, align 4
  %t = alloca %struct.DCALbrTone*, align 8
  %amp19 = alloca float, align 4
  %c = alloca float, align 4
  %s34 = alloca float, align 4
  %cf = alloca float*, align 8
  %x_freq = alloca i32, align 4
  store %struct.DCALbrDecoder* %s, %struct.DCALbrDecoder** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DCALbrDecoder** %s.addr, metadata !10002, metadata !2138), !dbg !10003
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !10004, metadata !2138), !dbg !10005
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !10006, metadata !2138), !dbg !10007
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !10008, metadata !2138), !dbg !10009
  store i32 %group_sf, i32* %group_sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_sf.addr, metadata !10010, metadata !2138), !dbg !10011
  store i32 %synth_idx, i32* %synth_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %synth_idx.addr, metadata !10012, metadata !2138), !dbg !10013
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10014, metadata !2138), !dbg !10015
  call void @llvm.dbg.declare(metadata i32* %start, metadata !10016, metadata !2138), !dbg !10017
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10018, metadata !2138), !dbg !10019
  %0 = load i32, i32* %synth_idx.addr, align 4, !dbg !10020
  %cmp = icmp slt i32 %0, 0, !dbg !10022
  br i1 %cmp, label %if.then, label %if.end, !dbg !10023

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !10024

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %group_sf.addr, align 4, !dbg !10025
  %idxprom = sext i32 %1 to i64, !dbg !10026
  %2 = load i32, i32* %group.addr, align 4, !dbg !10027
  %idxprom1 = sext i32 %2 to i64, !dbg !10026
  %3 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !10026
  %tonal_bounds = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %3, i32 0, i32 46, !dbg !10028
  %arrayidx = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds, i64 0, i64 %idxprom1, !dbg !10026
  %arrayidx2 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx, i64 0, i64 %idxprom, !dbg !10026
  %arrayidx3 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx2, i64 0, i64 0, !dbg !10026
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !10026
  %conv = zext i16 %4 to i32, !dbg !10026
  store i32 %conv, i32* %start, align 4, !dbg !10029
  %5 = load i32, i32* %group_sf.addr, align 4, !dbg !10030
  %idxprom4 = sext i32 %5 to i64, !dbg !10031
  %6 = load i32, i32* %group.addr, align 4, !dbg !10032
  %idxprom5 = sext i32 %6 to i64, !dbg !10031
  %7 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !10031
  %tonal_bounds6 = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %7, i32 0, i32 46, !dbg !10033
  %arrayidx7 = getelementptr inbounds [5 x [32 x [2 x i16]]], [5 x [32 x [2 x i16]]]* %tonal_bounds6, i64 0, i64 %idxprom5, !dbg !10031
  %arrayidx8 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx7, i64 0, i64 %idxprom4, !dbg !10031
  %arrayidx9 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx8, i64 0, i64 1, !dbg !10031
  %8 = load i16, i16* %arrayidx9, align 2, !dbg !10031
  %conv10 = zext i16 %8 to i32, !dbg !10031
  %9 = load i32, i32* %start, align 4, !dbg !10034
  %sub = sub nsw i32 %conv10, %9, !dbg !10035
  %and = and i32 %sub, 511, !dbg !10036
  store i32 %and, i32* %count, align 4, !dbg !10037
  store i32 0, i32* %i, align 4, !dbg !10038
  br label %for.cond, !dbg !10040

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !10041
  %11 = load i32, i32* %count, align 4, !dbg !10044
  %cmp11 = icmp slt i32 %10, %11, !dbg !10045
  br i1 %cmp11, label %for.body, label %for.end, !dbg !10046

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DCALbrTone** %t, metadata !10047, metadata !2138), !dbg !10049
  %12 = load i32, i32* %start, align 4, !dbg !10050
  %13 = load i32, i32* %i, align 4, !dbg !10051
  %add = add nsw i32 %12, %13, !dbg !10052
  %and13 = and i32 %add, 511, !dbg !10053
  %idxprom14 = sext i32 %and13 to i64, !dbg !10054
  %14 = load %struct.DCALbrDecoder*, %struct.DCALbrDecoder** %s.addr, align 8, !dbg !10054
  %tones = getelementptr inbounds %struct.DCALbrDecoder, %struct.DCALbrDecoder* %14, i32 0, i32 47, !dbg !10055
  %arrayidx15 = getelementptr inbounds [512 x %struct.DCALbrTone], [512 x %struct.DCALbrTone]* %tones, i64 0, i64 %idxprom14, !dbg !10054
  store %struct.DCALbrTone* %arrayidx15, %struct.DCALbrTone** %t, align 8, !dbg !10049
  %15 = load i32, i32* %ch.addr, align 4, !dbg !10056
  %idxprom16 = sext i32 %15 to i64, !dbg !10058
  %16 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10058
  %amp = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %16, i32 0, i32 4, !dbg !10059
  %arrayidx17 = getelementptr inbounds [6 x i8], [6 x i8]* %amp, i64 0, i64 %idxprom16, !dbg !10058
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !10058
  %tobool = icmp ne i8 %17, 0, !dbg !10058
  br i1 %tobool, label %if.then18, label %if.end167, !dbg !10060

if.then18:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %amp19, metadata !10061, metadata !2138), !dbg !10063
  %18 = load i32, i32* %synth_idx.addr, align 4, !dbg !10064
  %idxprom20 = sext i32 %18 to i64, !dbg !10065
  %arrayidx21 = getelementptr inbounds [32 x float], [32 x float]* @ff_dca_synth_env, i64 0, i64 %idxprom20, !dbg !10065
  %19 = load float, float* %arrayidx21, align 4, !dbg !10065
  %20 = load i32, i32* %ch.addr, align 4, !dbg !10066
  %idxprom22 = sext i32 %20 to i64, !dbg !10067
  %21 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10067
  %amp23 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %21, i32 0, i32 4, !dbg !10068
  %arrayidx24 = getelementptr inbounds [6 x i8], [6 x i8]* %amp23, i64 0, i64 %idxprom22, !dbg !10067
  %22 = load i8, i8* %arrayidx24, align 1, !dbg !10067
  %idxprom25 = zext i8 %22 to i64, !dbg !10069
  %arrayidx26 = getelementptr inbounds [57 x float], [57 x float]* @ff_dca_quant_amp, i64 0, i64 %idxprom25, !dbg !10069
  %23 = load float, float* %arrayidx26, align 4, !dbg !10069
  %mul = fmul float %19, %23, !dbg !10070
  store float %mul, float* %amp19, align 4, !dbg !10063
  call void @llvm.dbg.declare(metadata float* %c, metadata !10071, metadata !2138), !dbg !10072
  %24 = load float, float* %amp19, align 4, !dbg !10073
  %25 = load i32, i32* %ch.addr, align 4, !dbg !10074
  %idxprom27 = sext i32 %25 to i64, !dbg !10075
  %26 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10075
  %phs = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %26, i32 0, i32 5, !dbg !10076
  %arrayidx28 = getelementptr inbounds [6 x i8], [6 x i8]* %phs, i64 0, i64 %idxprom27, !dbg !10075
  %27 = load i8, i8* %arrayidx28, align 1, !dbg !10075
  %conv29 = zext i8 %27 to i32, !dbg !10077
  %and30 = and i32 %conv29, 255, !dbg !10078
  %idxprom31 = sext i32 %and30 to i64, !dbg !10079
  %arrayidx32 = getelementptr inbounds [256 x float], [256 x float]* @cos_tab, i64 0, i64 %idxprom31, !dbg !10079
  %28 = load float, float* %arrayidx32, align 4, !dbg !10079
  %mul33 = fmul float %24, %28, !dbg !10080
  store float %mul33, float* %c, align 4, !dbg !10072
  call void @llvm.dbg.declare(metadata float* %s34, metadata !10081, metadata !2138), !dbg !10082
  %29 = load float, float* %amp19, align 4, !dbg !10083
  %30 = load i32, i32* %ch.addr, align 4, !dbg !10084
  %idxprom35 = sext i32 %30 to i64, !dbg !10085
  %31 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10085
  %phs36 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %31, i32 0, i32 5, !dbg !10086
  %arrayidx37 = getelementptr inbounds [6 x i8], [6 x i8]* %phs36, i64 0, i64 %idxprom35, !dbg !10085
  %32 = load i8, i8* %arrayidx37, align 1, !dbg !10085
  %conv38 = zext i8 %32 to i32, !dbg !10085
  %add39 = add nsw i32 %conv38, 64, !dbg !10087
  %and40 = and i32 %add39, 255, !dbg !10088
  %idxprom41 = sext i32 %and40 to i64, !dbg !10089
  %arrayidx42 = getelementptr inbounds [256 x float], [256 x float]* @cos_tab, i64 0, i64 %idxprom41, !dbg !10089
  %33 = load float, float* %arrayidx42, align 4, !dbg !10089
  %mul43 = fmul float %29, %33, !dbg !10090
  store float %mul43, float* %s34, align 4, !dbg !10082
  call void @llvm.dbg.declare(metadata float** %cf, metadata !10091, metadata !2138), !dbg !10092
  %34 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10093
  %f_delt = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %34, i32 0, i32 1, !dbg !10094
  %35 = load i8, i8* %f_delt, align 1, !dbg !10094
  %idxprom44 = zext i8 %35 to i64, !dbg !10095
  %arrayidx45 = getelementptr inbounds [32 x [11 x float]], [32 x [11 x float]]* @ff_dca_corr_cf, i64 0, i64 %idxprom44, !dbg !10095
  %arraydecay = getelementptr inbounds [11 x float], [11 x float]* %arrayidx45, i32 0, i32 0, !dbg !10095
  store float* %arraydecay, float** %cf, align 8, !dbg !10092
  call void @llvm.dbg.declare(metadata i32* %x_freq, metadata !10096, metadata !2138), !dbg !10097
  %36 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10098
  %x_freq46 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %36, i32 0, i32 0, !dbg !10099
  %37 = load i8, i8* %x_freq46, align 1, !dbg !10099
  %conv47 = zext i8 %37 to i32, !dbg !10098
  store i32 %conv47, i32* %x_freq, align 4, !dbg !10097
  %38 = load i32, i32* %x_freq, align 4, !dbg !10100
  switch i32 %38, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb48
    i32 2, label %sw.bb67
    i32 3, label %sw.bb81
    i32 4, label %sw.bb91
  ], !dbg !10101

sw.bb:                                            ; preds = %if.then18
  br label %p0, !dbg !10102

sw.bb48:                                          ; preds = %if.then18
  %39 = load float*, float** %cf, align 8, !dbg !10104
  %arrayidx49 = getelementptr inbounds float, float* %39, i64 0, !dbg !10104
  %40 = load float, float* %arrayidx49, align 4, !dbg !10104
  %41 = load float, float* %s34, align 4, !dbg !10105
  %sub50 = fsub float -0.000000e+00, %41, !dbg !10106
  %mul51 = fmul float %40, %sub50, !dbg !10107
  %42 = load float*, float** %values.addr, align 8, !dbg !10108
  %arrayidx52 = getelementptr inbounds float, float* %42, i64 3, !dbg !10108
  %43 = load float, float* %arrayidx52, align 4, !dbg !10109
  %add53 = fadd float %43, %mul51, !dbg !10109
  store float %add53, float* %arrayidx52, align 4, !dbg !10109
  %44 = load float*, float** %cf, align 8, !dbg !10110
  %arrayidx54 = getelementptr inbounds float, float* %44, i64 1, !dbg !10110
  %45 = load float, float* %arrayidx54, align 4, !dbg !10110
  %46 = load float, float* %c, align 4, !dbg !10111
  %mul55 = fmul float %45, %46, !dbg !10112
  %47 = load float*, float** %values.addr, align 8, !dbg !10113
  %arrayidx56 = getelementptr inbounds float, float* %47, i64 2, !dbg !10113
  %48 = load float, float* %arrayidx56, align 4, !dbg !10114
  %add57 = fadd float %48, %mul55, !dbg !10114
  store float %add57, float* %arrayidx56, align 4, !dbg !10114
  %49 = load float*, float** %cf, align 8, !dbg !10115
  %arrayidx58 = getelementptr inbounds float, float* %49, i64 2, !dbg !10115
  %50 = load float, float* %arrayidx58, align 4, !dbg !10115
  %51 = load float, float* %s34, align 4, !dbg !10116
  %mul59 = fmul float %50, %51, !dbg !10117
  %52 = load float*, float** %values.addr, align 8, !dbg !10118
  %arrayidx60 = getelementptr inbounds float, float* %52, i64 1, !dbg !10118
  %53 = load float, float* %arrayidx60, align 4, !dbg !10119
  %add61 = fadd float %53, %mul59, !dbg !10119
  store float %add61, float* %arrayidx60, align 4, !dbg !10119
  %54 = load float*, float** %cf, align 8, !dbg !10120
  %arrayidx62 = getelementptr inbounds float, float* %54, i64 3, !dbg !10120
  %55 = load float, float* %arrayidx62, align 4, !dbg !10120
  %56 = load float, float* %c, align 4, !dbg !10121
  %sub63 = fsub float -0.000000e+00, %56, !dbg !10122
  %mul64 = fmul float %55, %sub63, !dbg !10123
  %57 = load float*, float** %values.addr, align 8, !dbg !10124
  %arrayidx65 = getelementptr inbounds float, float* %57, i64 0, !dbg !10124
  %58 = load float, float* %arrayidx65, align 4, !dbg !10125
  %add66 = fadd float %58, %mul64, !dbg !10125
  store float %add66, float* %arrayidx65, align 4, !dbg !10125
  br label %p1, !dbg !10126

sw.bb67:                                          ; preds = %if.then18
  %59 = load float*, float** %cf, align 8, !dbg !10127
  %arrayidx68 = getelementptr inbounds float, float* %59, i64 0, !dbg !10127
  %60 = load float, float* %arrayidx68, align 4, !dbg !10127
  %61 = load float, float* %s34, align 4, !dbg !10128
  %sub69 = fsub float -0.000000e+00, %61, !dbg !10129
  %mul70 = fmul float %60, %sub69, !dbg !10130
  %62 = load float*, float** %values.addr, align 8, !dbg !10131
  %arrayidx71 = getelementptr inbounds float, float* %62, i64 2, !dbg !10131
  %63 = load float, float* %arrayidx71, align 4, !dbg !10132
  %add72 = fadd float %63, %mul70, !dbg !10132
  store float %add72, float* %arrayidx71, align 4, !dbg !10132
  %64 = load float*, float** %cf, align 8, !dbg !10133
  %arrayidx73 = getelementptr inbounds float, float* %64, i64 1, !dbg !10133
  %65 = load float, float* %arrayidx73, align 4, !dbg !10133
  %66 = load float, float* %c, align 4, !dbg !10134
  %mul74 = fmul float %65, %66, !dbg !10135
  %67 = load float*, float** %values.addr, align 8, !dbg !10136
  %arrayidx75 = getelementptr inbounds float, float* %67, i64 1, !dbg !10136
  %68 = load float, float* %arrayidx75, align 4, !dbg !10137
  %add76 = fadd float %68, %mul74, !dbg !10137
  store float %add76, float* %arrayidx75, align 4, !dbg !10137
  %69 = load float*, float** %cf, align 8, !dbg !10138
  %arrayidx77 = getelementptr inbounds float, float* %69, i64 2, !dbg !10138
  %70 = load float, float* %arrayidx77, align 4, !dbg !10138
  %71 = load float, float* %s34, align 4, !dbg !10139
  %mul78 = fmul float %70, %71, !dbg !10140
  %72 = load float*, float** %values.addr, align 8, !dbg !10141
  %arrayidx79 = getelementptr inbounds float, float* %72, i64 0, !dbg !10141
  %73 = load float, float* %arrayidx79, align 4, !dbg !10142
  %add80 = fadd float %73, %mul78, !dbg !10142
  store float %add80, float* %arrayidx79, align 4, !dbg !10142
  br label %p2, !dbg !10143

sw.bb81:                                          ; preds = %if.then18
  %74 = load float*, float** %cf, align 8, !dbg !10144
  %arrayidx82 = getelementptr inbounds float, float* %74, i64 0, !dbg !10144
  %75 = load float, float* %arrayidx82, align 4, !dbg !10144
  %76 = load float, float* %s34, align 4, !dbg !10145
  %sub83 = fsub float -0.000000e+00, %76, !dbg !10146
  %mul84 = fmul float %75, %sub83, !dbg !10147
  %77 = load float*, float** %values.addr, align 8, !dbg !10148
  %arrayidx85 = getelementptr inbounds float, float* %77, i64 1, !dbg !10148
  %78 = load float, float* %arrayidx85, align 4, !dbg !10149
  %add86 = fadd float %78, %mul84, !dbg !10149
  store float %add86, float* %arrayidx85, align 4, !dbg !10149
  %79 = load float*, float** %cf, align 8, !dbg !10150
  %arrayidx87 = getelementptr inbounds float, float* %79, i64 1, !dbg !10150
  %80 = load float, float* %arrayidx87, align 4, !dbg !10150
  %81 = load float, float* %c, align 4, !dbg !10151
  %mul88 = fmul float %80, %81, !dbg !10152
  %82 = load float*, float** %values.addr, align 8, !dbg !10153
  %arrayidx89 = getelementptr inbounds float, float* %82, i64 0, !dbg !10153
  %83 = load float, float* %arrayidx89, align 4, !dbg !10154
  %add90 = fadd float %83, %mul88, !dbg !10154
  store float %add90, float* %arrayidx89, align 4, !dbg !10154
  br label %p3, !dbg !10155

sw.bb91:                                          ; preds = %if.then18
  %84 = load float*, float** %cf, align 8, !dbg !10156
  %arrayidx92 = getelementptr inbounds float, float* %84, i64 0, !dbg !10156
  %85 = load float, float* %arrayidx92, align 4, !dbg !10156
  %86 = load float, float* %s34, align 4, !dbg !10157
  %sub93 = fsub float -0.000000e+00, %86, !dbg !10158
  %mul94 = fmul float %85, %sub93, !dbg !10159
  %87 = load float*, float** %values.addr, align 8, !dbg !10160
  %arrayidx95 = getelementptr inbounds float, float* %87, i64 0, !dbg !10160
  %88 = load float, float* %arrayidx95, align 4, !dbg !10161
  %add96 = fadd float %88, %mul94, !dbg !10161
  store float %add96, float* %arrayidx95, align 4, !dbg !10161
  br label %p4, !dbg !10162

sw.epilog:                                        ; preds = %if.then18
  %89 = load float*, float** %cf, align 8, !dbg !10163
  %arrayidx97 = getelementptr inbounds float, float* %89, i64 0, !dbg !10163
  %90 = load float, float* %arrayidx97, align 4, !dbg !10163
  %91 = load float, float* %s34, align 4, !dbg !10164
  %sub98 = fsub float -0.000000e+00, %91, !dbg !10165
  %mul99 = fmul float %90, %sub98, !dbg !10166
  %92 = load i32, i32* %x_freq, align 4, !dbg !10167
  %sub100 = sub nsw i32 %92, 5, !dbg !10168
  %idxprom101 = sext i32 %sub100 to i64, !dbg !10169
  %93 = load float*, float** %values.addr, align 8, !dbg !10169
  %arrayidx102 = getelementptr inbounds float, float* %93, i64 %idxprom101, !dbg !10169
  %94 = load float, float* %arrayidx102, align 4, !dbg !10170
  %add103 = fadd float %94, %mul99, !dbg !10170
  store float %add103, float* %arrayidx102, align 4, !dbg !10170
  br label %p4, !dbg !10169

p4:                                               ; preds = %sw.epilog, %sw.bb91
  %95 = load float*, float** %cf, align 8, !dbg !10171
  %arrayidx104 = getelementptr inbounds float, float* %95, i64 1, !dbg !10171
  %96 = load float, float* %arrayidx104, align 4, !dbg !10171
  %97 = load float, float* %c, align 4, !dbg !10172
  %mul105 = fmul float %96, %97, !dbg !10173
  %98 = load i32, i32* %x_freq, align 4, !dbg !10174
  %sub106 = sub nsw i32 %98, 4, !dbg !10175
  %idxprom107 = sext i32 %sub106 to i64, !dbg !10176
  %99 = load float*, float** %values.addr, align 8, !dbg !10176
  %arrayidx108 = getelementptr inbounds float, float* %99, i64 %idxprom107, !dbg !10176
  %100 = load float, float* %arrayidx108, align 4, !dbg !10177
  %add109 = fadd float %100, %mul105, !dbg !10177
  store float %add109, float* %arrayidx108, align 4, !dbg !10177
  br label %p3, !dbg !10176

p3:                                               ; preds = %p4, %sw.bb81
  %101 = load float*, float** %cf, align 8, !dbg !10178
  %arrayidx110 = getelementptr inbounds float, float* %101, i64 2, !dbg !10178
  %102 = load float, float* %arrayidx110, align 4, !dbg !10178
  %103 = load float, float* %s34, align 4, !dbg !10179
  %mul111 = fmul float %102, %103, !dbg !10180
  %104 = load i32, i32* %x_freq, align 4, !dbg !10181
  %sub112 = sub nsw i32 %104, 3, !dbg !10182
  %idxprom113 = sext i32 %sub112 to i64, !dbg !10183
  %105 = load float*, float** %values.addr, align 8, !dbg !10183
  %arrayidx114 = getelementptr inbounds float, float* %105, i64 %idxprom113, !dbg !10183
  %106 = load float, float* %arrayidx114, align 4, !dbg !10184
  %add115 = fadd float %106, %mul111, !dbg !10184
  store float %add115, float* %arrayidx114, align 4, !dbg !10184
  br label %p2, !dbg !10183

p2:                                               ; preds = %p3, %sw.bb67
  %107 = load float*, float** %cf, align 8, !dbg !10185
  %arrayidx116 = getelementptr inbounds float, float* %107, i64 3, !dbg !10185
  %108 = load float, float* %arrayidx116, align 4, !dbg !10185
  %109 = load float, float* %c, align 4, !dbg !10186
  %sub117 = fsub float -0.000000e+00, %109, !dbg !10187
  %mul118 = fmul float %108, %sub117, !dbg !10188
  %110 = load i32, i32* %x_freq, align 4, !dbg !10189
  %sub119 = sub nsw i32 %110, 2, !dbg !10190
  %idxprom120 = sext i32 %sub119 to i64, !dbg !10191
  %111 = load float*, float** %values.addr, align 8, !dbg !10191
  %arrayidx121 = getelementptr inbounds float, float* %111, i64 %idxprom120, !dbg !10191
  %112 = load float, float* %arrayidx121, align 4, !dbg !10192
  %add122 = fadd float %112, %mul118, !dbg !10192
  store float %add122, float* %arrayidx121, align 4, !dbg !10192
  br label %p1, !dbg !10191

p1:                                               ; preds = %p2, %sw.bb48
  %113 = load float*, float** %cf, align 8, !dbg !10193
  %arrayidx123 = getelementptr inbounds float, float* %113, i64 4, !dbg !10193
  %114 = load float, float* %arrayidx123, align 4, !dbg !10193
  %115 = load float, float* %s34, align 4, !dbg !10194
  %sub124 = fsub float -0.000000e+00, %115, !dbg !10195
  %mul125 = fmul float %114, %sub124, !dbg !10196
  %116 = load i32, i32* %x_freq, align 4, !dbg !10197
  %sub126 = sub nsw i32 %116, 1, !dbg !10198
  %idxprom127 = sext i32 %sub126 to i64, !dbg !10199
  %117 = load float*, float** %values.addr, align 8, !dbg !10199
  %arrayidx128 = getelementptr inbounds float, float* %117, i64 %idxprom127, !dbg !10199
  %118 = load float, float* %arrayidx128, align 4, !dbg !10200
  %add129 = fadd float %118, %mul125, !dbg !10200
  store float %add129, float* %arrayidx128, align 4, !dbg !10200
  br label %p0, !dbg !10199

p0:                                               ; preds = %p1, %sw.bb
  %119 = load float*, float** %cf, align 8, !dbg !10201
  %arrayidx130 = getelementptr inbounds float, float* %119, i64 5, !dbg !10201
  %120 = load float, float* %arrayidx130, align 4, !dbg !10201
  %121 = load float, float* %c, align 4, !dbg !10202
  %mul131 = fmul float %120, %121, !dbg !10203
  %122 = load i32, i32* %x_freq, align 4, !dbg !10204
  %idxprom132 = sext i32 %122 to i64, !dbg !10205
  %123 = load float*, float** %values.addr, align 8, !dbg !10205
  %arrayidx133 = getelementptr inbounds float, float* %123, i64 %idxprom132, !dbg !10205
  %124 = load float, float* %arrayidx133, align 4, !dbg !10206
  %add134 = fadd float %124, %mul131, !dbg !10206
  store float %add134, float* %arrayidx133, align 4, !dbg !10206
  %125 = load float*, float** %cf, align 8, !dbg !10207
  %arrayidx135 = getelementptr inbounds float, float* %125, i64 6, !dbg !10207
  %126 = load float, float* %arrayidx135, align 4, !dbg !10207
  %127 = load float, float* %s34, align 4, !dbg !10208
  %mul136 = fmul float %126, %127, !dbg !10209
  %128 = load i32, i32* %x_freq, align 4, !dbg !10210
  %add137 = add nsw i32 %128, 1, !dbg !10211
  %idxprom138 = sext i32 %add137 to i64, !dbg !10212
  %129 = load float*, float** %values.addr, align 8, !dbg !10212
  %arrayidx139 = getelementptr inbounds float, float* %129, i64 %idxprom138, !dbg !10212
  %130 = load float, float* %arrayidx139, align 4, !dbg !10213
  %add140 = fadd float %130, %mul136, !dbg !10213
  store float %add140, float* %arrayidx139, align 4, !dbg !10213
  %131 = load float*, float** %cf, align 8, !dbg !10214
  %arrayidx141 = getelementptr inbounds float, float* %131, i64 7, !dbg !10214
  %132 = load float, float* %arrayidx141, align 4, !dbg !10214
  %133 = load float, float* %c, align 4, !dbg !10215
  %sub142 = fsub float -0.000000e+00, %133, !dbg !10216
  %mul143 = fmul float %132, %sub142, !dbg !10217
  %134 = load i32, i32* %x_freq, align 4, !dbg !10218
  %add144 = add nsw i32 %134, 2, !dbg !10219
  %idxprom145 = sext i32 %add144 to i64, !dbg !10220
  %135 = load float*, float** %values.addr, align 8, !dbg !10220
  %arrayidx146 = getelementptr inbounds float, float* %135, i64 %idxprom145, !dbg !10220
  %136 = load float, float* %arrayidx146, align 4, !dbg !10221
  %add147 = fadd float %136, %mul143, !dbg !10221
  store float %add147, float* %arrayidx146, align 4, !dbg !10221
  %137 = load float*, float** %cf, align 8, !dbg !10222
  %arrayidx148 = getelementptr inbounds float, float* %137, i64 8, !dbg !10222
  %138 = load float, float* %arrayidx148, align 4, !dbg !10222
  %139 = load float, float* %s34, align 4, !dbg !10223
  %sub149 = fsub float -0.000000e+00, %139, !dbg !10224
  %mul150 = fmul float %138, %sub149, !dbg !10225
  %140 = load i32, i32* %x_freq, align 4, !dbg !10226
  %add151 = add nsw i32 %140, 3, !dbg !10227
  %idxprom152 = sext i32 %add151 to i64, !dbg !10228
  %141 = load float*, float** %values.addr, align 8, !dbg !10228
  %arrayidx153 = getelementptr inbounds float, float* %141, i64 %idxprom152, !dbg !10228
  %142 = load float, float* %arrayidx153, align 4, !dbg !10229
  %add154 = fadd float %142, %mul150, !dbg !10229
  store float %add154, float* %arrayidx153, align 4, !dbg !10229
  %143 = load float*, float** %cf, align 8, !dbg !10230
  %arrayidx155 = getelementptr inbounds float, float* %143, i64 9, !dbg !10230
  %144 = load float, float* %arrayidx155, align 4, !dbg !10230
  %145 = load float, float* %c, align 4, !dbg !10231
  %mul156 = fmul float %144, %145, !dbg !10232
  %146 = load i32, i32* %x_freq, align 4, !dbg !10233
  %add157 = add nsw i32 %146, 4, !dbg !10234
  %idxprom158 = sext i32 %add157 to i64, !dbg !10235
  %147 = load float*, float** %values.addr, align 8, !dbg !10235
  %arrayidx159 = getelementptr inbounds float, float* %147, i64 %idxprom158, !dbg !10235
  %148 = load float, float* %arrayidx159, align 4, !dbg !10236
  %add160 = fadd float %148, %mul156, !dbg !10236
  store float %add160, float* %arrayidx159, align 4, !dbg !10236
  %149 = load float*, float** %cf, align 8, !dbg !10237
  %arrayidx161 = getelementptr inbounds float, float* %149, i64 10, !dbg !10237
  %150 = load float, float* %arrayidx161, align 4, !dbg !10237
  %151 = load float, float* %s34, align 4, !dbg !10238
  %mul162 = fmul float %150, %151, !dbg !10239
  %152 = load i32, i32* %x_freq, align 4, !dbg !10240
  %add163 = add nsw i32 %152, 5, !dbg !10241
  %idxprom164 = sext i32 %add163 to i64, !dbg !10242
  %153 = load float*, float** %values.addr, align 8, !dbg !10242
  %arrayidx165 = getelementptr inbounds float, float* %153, i64 %idxprom164, !dbg !10242
  %154 = load float, float* %arrayidx165, align 4, !dbg !10243
  %add166 = fadd float %154, %mul162, !dbg !10243
  store float %add166, float* %arrayidx165, align 4, !dbg !10243
  br label %if.end167, !dbg !10244

if.end167:                                        ; preds = %p0, %for.body
  %155 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10245
  %ph_rot = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %155, i32 0, i32 2, !dbg !10246
  %156 = load i8, i8* %ph_rot, align 1, !dbg !10246
  %conv168 = zext i8 %156 to i32, !dbg !10245
  %157 = load i32, i32* %ch.addr, align 4, !dbg !10247
  %idxprom169 = sext i32 %157 to i64, !dbg !10248
  %158 = load %struct.DCALbrTone*, %struct.DCALbrTone** %t, align 8, !dbg !10248
  %phs170 = getelementptr inbounds %struct.DCALbrTone, %struct.DCALbrTone* %158, i32 0, i32 5, !dbg !10249
  %arrayidx171 = getelementptr inbounds [6 x i8], [6 x i8]* %phs170, i64 0, i64 %idxprom169, !dbg !10248
  %159 = load i8, i8* %arrayidx171, align 1, !dbg !10250
  %conv172 = zext i8 %159 to i32, !dbg !10250
  %add173 = add nsw i32 %conv172, %conv168, !dbg !10250
  %conv174 = trunc i32 %add173 to i8, !dbg !10250
  store i8 %conv174, i8* %arrayidx171, align 1, !dbg !10250
  br label %for.inc, !dbg !10251

for.inc:                                          ; preds = %if.end167
  %160 = load i32, i32* %i, align 4, !dbg !10252
  %inc = add nsw i32 %160, 1, !dbg !10252
  store i32 %inc, i32* %i, align 4, !dbg !10252
  br label %for.cond, !dbg !10254, !llvm.loop !10255

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10257
}

; Function Attrs: nounwind
declare double @cos(double) #7

; Function Attrs: nounwind
declare double @sin(double) #7

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1058, !1059}
!llvm.ident = !{!1060}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1003, globals: !1028)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--dca_lbr.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893, !897, !930, !943, !954, !973}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "LBRChunkTypes", file: !898, line: 47, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/dca_lbr.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!899 = !{!900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929}
!900 = !DIEnumerator(name: "LBR_CHUNK_NULL", value: 0)
!901 = !DIEnumerator(name: "LBR_CHUNK_PAD", value: 1)
!902 = !DIEnumerator(name: "LBR_CHUNK_FRAME", value: 4)
!903 = !DIEnumerator(name: "LBR_CHUNK_FRAME_NO_CSUM", value: 6)
!904 = !DIEnumerator(name: "LBR_CHUNK_LFE", value: 10)
!905 = !DIEnumerator(name: "LBR_CHUNK_ECS", value: 11)
!906 = !DIEnumerator(name: "LBR_CHUNK_RESERVED_1", value: 12)
!907 = !DIEnumerator(name: "LBR_CHUNK_RESERVED_2", value: 13)
!908 = !DIEnumerator(name: "LBR_CHUNK_SCF", value: 14)
!909 = !DIEnumerator(name: "LBR_CHUNK_TONAL", value: 16)
!910 = !DIEnumerator(name: "LBR_CHUNK_TONAL_GRP_1", value: 17)
!911 = !DIEnumerator(name: "LBR_CHUNK_TONAL_GRP_2", value: 18)
!912 = !DIEnumerator(name: "LBR_CHUNK_TONAL_GRP_3", value: 19)
!913 = !DIEnumerator(name: "LBR_CHUNK_TONAL_GRP_4", value: 20)
!914 = !DIEnumerator(name: "LBR_CHUNK_TONAL_GRP_5", value: 21)
!915 = !DIEnumerator(name: "LBR_CHUNK_TONAL_SCF", value: 22)
!916 = !DIEnumerator(name: "LBR_CHUNK_TONAL_SCF_GRP_1", value: 23)
!917 = !DIEnumerator(name: "LBR_CHUNK_TONAL_SCF_GRP_2", value: 24)
!918 = !DIEnumerator(name: "LBR_CHUNK_TONAL_SCF_GRP_3", value: 25)
!919 = !DIEnumerator(name: "LBR_CHUNK_TONAL_SCF_GRP_4", value: 26)
!920 = !DIEnumerator(name: "LBR_CHUNK_TONAL_SCF_GRP_5", value: 27)
!921 = !DIEnumerator(name: "LBR_CHUNK_RES_GRID_LR", value: 48)
!922 = !DIEnumerator(name: "LBR_CHUNK_RES_GRID_LR_LAST", value: 63)
!923 = !DIEnumerator(name: "LBR_CHUNK_RES_GRID_HR", value: 64)
!924 = !DIEnumerator(name: "LBR_CHUNK_RES_GRID_HR_LAST", value: 79)
!925 = !DIEnumerator(name: "LBR_CHUNK_RES_TS_1", value: 80)
!926 = !DIEnumerator(name: "LBR_CHUNK_RES_TS_1_LAST", value: 95)
!927 = !DIEnumerator(name: "LBR_CHUNK_RES_TS_2", value: 96)
!928 = !DIEnumerator(name: "LBR_CHUNK_RES_TS_2_LAST", value: 111)
!929 = !DIEnumerator(name: "LBR_CHUNK_EXTENSION", value: 127)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "LBRFlags", file: !898, line: 33, size: 32, align: 32, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942}
!932 = !DIEnumerator(name: "LBR_FLAG_24_BIT", value: 1)
!933 = !DIEnumerator(name: "LBR_FLAG_LFE_PRESENT", value: 2)
!934 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_2_3", value: 4)
!935 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_1_2", value: 8)
!936 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_1_3", value: 12)
!937 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_1_4", value: 16)
!938 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_1_8", value: 24)
!939 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_NONE", value: 20)
!940 = !DIEnumerator(name: "LBR_FLAG_BAND_LIMIT_MASK", value: 28)
!941 = !DIEnumerator(name: "LBR_FLAG_DMIX_STEREO", value: 32)
!942 = !DIEnumerator(name: "LBR_FLAG_DMIX_MULTI_CH", value: 64)
!943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMatrixEncoding", file: !944, line: 114, size: 32, align: 32, elements: !945)
!944 = !DIFile(filename: "./libavutil/channel_layout.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953}
!946 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NONE", value: 0)
!947 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBY", value: 1)
!948 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLII", value: 2)
!949 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIX", value: 3)
!950 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DPLIIZ", value: 4)
!951 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYEX", value: 5)
!952 = !DIEnumerator(name: "AV_MATRIX_ENCODING_DOLBYHEADPHONE", value: 6)
!953 = !DIEnumerator(name: "AV_MATRIX_ENCODING_NB", value: 7)
!954 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCASpeakerPair", file: !955, line: 137, size: 32, align: 32, elements: !956)
!955 = !DIFile(filename: "libavcodec/dca.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!956 = !{!957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972}
!957 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_C", value: 1)
!958 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LR", value: 2)
!959 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LsRs", value: 4)
!960 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LFE1", value: 8)
!961 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_Cs", value: 16)
!962 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LhRh", value: 32)
!963 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LsrRsr", value: 64)
!964 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_Ch", value: 128)
!965 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_Oh", value: 256)
!966 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LcRc", value: 512)
!967 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LwRw", value: 1024)
!968 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LssRss", value: 2048)
!969 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LFE2", value: 4096)
!970 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LhsRhs", value: 8192)
!971 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_Chr", value: 16384)
!972 = !DIEnumerator(name: "DCA_SPEAKER_PAIR_LhrRhr", value: 32768)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DCASpeakerMask", file: !955, line: 91, size: 32, align: 32, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002}
!975 = !DIEnumerator(name: "DCA_SPEAKER_MASK_C", value: 1)
!976 = !DIEnumerator(name: "DCA_SPEAKER_MASK_L", value: 2)
!977 = !DIEnumerator(name: "DCA_SPEAKER_MASK_R", value: 4)
!978 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Ls", value: 8)
!979 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rs", value: 16)
!980 = !DIEnumerator(name: "DCA_SPEAKER_MASK_LFE1", value: 32)
!981 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Cs", value: 64)
!982 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lsr", value: 128)
!983 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rsr", value: 256)
!984 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lss", value: 512)
!985 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rss", value: 1024)
!986 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lc", value: 2048)
!987 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rc", value: 4096)
!988 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lh", value: 8192)
!989 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Ch", value: 16384)
!990 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rh", value: 32768)
!991 = !DIEnumerator(name: "DCA_SPEAKER_MASK_LFE2", value: 65536)
!992 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lw", value: 131072)
!993 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rw", value: 262144)
!994 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Oh", value: 524288)
!995 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lhs", value: 1048576)
!996 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rhs", value: 2097152)
!997 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Chr", value: 4194304)
!998 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Lhr", value: 8388608)
!999 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rhr", value: 16777216)
!1000 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Cl", value: 33554432)
!1001 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Ll", value: 67108864)
!1002 = !DIEnumerator(name: "DCA_SPEAKER_MASK_Rl", value: 134217728)
!1003 = !{!1004, !1005, !1006, !1008, !1009, !1017, !1021}
!1004 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1005 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1012, line: 221, size: 32, align: 8, elements: !1013)
!1012 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1013 = !{!1014}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1011, file: !1012, line: 221, baseType: !1015, size: 32, align: 32)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1016, line: 51, baseType: !1005)
!1016 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1016, line: 48, baseType: !1020)
!1020 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1012, line: 222, size: 16, align: 8, elements: !1024)
!1024 = !{!1025}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1023, file: !1012, line: 222, baseType: !1026, size: 16, align: 16)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1016, line: 49, baseType: !1027)
!1027 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1028 = !{!1029, !1033, !1038, !1040, !1047, !1048, !1052, !1053}
!1029 = distinct !DIGlobalVariable(name: "lpc_tab", scope: !0, file: !898, line: 124, type: !1030, isLocal: true, isDefinition: true, variable: [16 x float]* @lpc_tab)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 512, align: 32, elements: !1031)
!1031 = !{!1032}
!1032 = !DISubrange(count: 16)
!1033 = distinct !DIGlobalVariable(name: "channel_layouts", scope: !0, file: !898, line: 113, type: !1034, isLocal: true, isDefinition: true, variable: [7 x i16]* @channel_layouts)
!1034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1035, size: 112, align: 16, elements: !1036)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1036 = !{!1037}
!1037 = !DISubrange(count: 7)
!1038 = distinct !DIGlobalVariable(name: "channel_counts", scope: !0, file: !898, line: 109, type: !1039, isLocal: true, isDefinition: true, variable: [7 x i8]* @channel_counts)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 56, align: 8, elements: !1036)
!1040 = distinct !DIGlobalVariable(name: "channel_reorder_lfe", scope: !0, file: !898, line: 95, type: !1041, isLocal: true, isDefinition: true, variable: [7 x [5 x i8]]* @channel_reorder_lfe)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 280, align: 8, elements: !1045)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1016, line: 36, baseType: !1044)
!1044 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1045 = !{!1037, !1046}
!1046 = !DISubrange(count: 5)
!1047 = distinct !DIGlobalVariable(name: "channel_reorder_nolfe", scope: !0, file: !898, line: 85, type: !1041, isLocal: true, isDefinition: true, variable: [7 x [5 x i8]]* @channel_reorder_nolfe)
!1048 = distinct !DIGlobalVariable(name: "cos_tab", scope: !0, file: !898, line: 123, type: !1049, isLocal: true, isDefinition: true, variable: [256 x float]* @cos_tab)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 8192, align: 32, elements: !1050)
!1050 = !{!1051}
!1051 = !DISubrange(count: 256)
!1052 = distinct !DIGlobalVariable(name: "lfe_index", scope: !0, file: !898, line: 105, type: !1039, isLocal: true, isDefinition: true, variable: [7 x i8]* @lfe_index)
!1053 = distinct !DIGlobalVariable(name: "initialized", scope: !1054, file: !898, line: 128, type: !1004, isLocal: true, isDefinition: true, variable: i32* @init_tables.initialized)
!1054 = distinct !DISubprogram(name: "init_tables", scope: !898, file: !898, line: 126, type: !1055, isLocal: true, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null}
!1057 = !{}
!1058 = !{i32 2, !"Dwarf Version", i32 4}
!1059 = !{i32 2, !"Debug Info Version", i32 3}
!1060 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1061 = distinct !DISubprogram(name: "ff_dca_lbr_parse", scope: !898, file: !898, line: 1143, type: !1062, isLocal: false, isDefinition: true, scopeLine: 1144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!1004, !1064, !1195, !2097}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCALbrDecoder", file: !1066, line: 127, baseType: !1067)
!1066 = !DIFile(filename: "libavcodec/dca_lbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCALbrDecoder", file: !1066, line: 58, size: 178944, align: 256, elements: !1068)
!1068 = !{!1069, !1788, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1822, !1825, !1826, !1827, !1831, !1835, !1839, !1843, !1846, !1847, !1850, !1853, !1854, !1858, !1860, !1863, !1864, !1865, !1869, !1872, !1875, !1878, !1879, !1881, !1884, !1897, !1898, !1943, !1988}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1067, file: !1066, line: 59, baseType: !1070, size: 64, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1073)
!1073 = !{!1074, !1118, !1119, !1120, !1387, !1388, !1389, !1390, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1543, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1726, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1072, file: !35, line: 1561, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1079)
!1079 = !{!1080, !1084, !1088, !1092, !1093, !1094, !1095, !1099, !1105, !1107, !1111}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1078, file: !4, line: 72, baseType: !1081, size: 64, align: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1078, file: !4, line: 78, baseType: !1085, size: 64, align: 64, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!1081, !1008}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1078, file: !4, line: 85, baseType: !1089, size: 64, align: 64, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1078, file: !4, line: 93, baseType: !1004, size: 32, align: 32, offset: 192)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1078, file: !4, line: 99, baseType: !1004, size: 32, align: 32, offset: 224)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1078, file: !4, line: 108, baseType: !1004, size: 32, align: 32, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1078, file: !4, line: 113, baseType: !1096, size: 64, align: 64, offset: 320)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!1008, !1008, !1008}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1078, file: !4, line: 123, baseType: !1100, size: 64, align: 64, offset: 384)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!1103, !1103}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1078, file: !4, line: 130, baseType: !1106, size: 32, align: 32, offset: 448)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1078, file: !4, line: 136, baseType: !1108, size: 64, align: 64, offset: 512)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!1106, !1008}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1078, file: !4, line: 142, baseType: !1112, size: 64, align: 64, offset: 576)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!1004, !1115, !1008, !1081, !1004}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64, align: 64)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1072, file: !35, line: 1562, baseType: !1004, size: 32, align: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1072, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1072, file: !35, line: 1565, baseType: !1121, size: 64, align: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129, !1130, !1139, !1142, !1145, !1148, !1153, !1154, !1155, !1163, !1164, !1165, !1167, !1171, !1177, !1186, !1190, !1191, !1239, !1358, !1362, !1363, !1367, !1371, !1376, !1380, !1381, !1382}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1123, file: !35, line: 3475, baseType: !1081, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1123, file: !35, line: 3480, baseType: !1081, size: 64, align: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1123, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1123, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1123, file: !35, line: 3487, baseType: !1004, size: 32, align: 32, offset: 192)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1123, file: !35, line: 3488, baseType: !1131, size: 64, align: 64, offset: 256)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1134, line: 61, baseType: !1135)
!1134 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1134, line: 58, size: 64, align: 32, elements: !1136)
!1136 = !{!1137, !1138}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1135, file: !1134, line: 59, baseType: !1004, size: 32, align: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1135, file: !1134, line: 60, baseType: !1004, size: 32, align: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1123, file: !35, line: 3489, baseType: !1140, size: 64, align: 64, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1123, file: !35, line: 3490, baseType: !1143, size: 64, align: 64, offset: 384)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1123, file: !35, line: 3491, baseType: !1146, size: 64, align: 64, offset: 448)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1123, file: !35, line: 3492, baseType: !1149, size: 64, align: 64, offset: 512)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1016, line: 55, baseType: !1152)
!1152 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1123, file: !35, line: 3493, baseType: !1019, size: 8, align: 8, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1123, file: !35, line: 3494, baseType: !1075, size: 64, align: 64, offset: 640)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1123, file: !35, line: 3495, baseType: !1156, size: 64, align: 64, offset: 704)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1160)
!1160 = !{!1161, !1162}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1159, file: !35, line: 3402, baseType: !1004, size: 32, align: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1159, file: !35, line: 3403, baseType: !1081, size: 64, align: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1123, file: !35, line: 3507, baseType: !1081, size: 64, align: 64, offset: 768)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1123, file: !35, line: 3516, baseType: !1004, size: 32, align: 32, offset: 832)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1123, file: !35, line: 3517, baseType: !1166, size: 64, align: 64, offset: 896)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1123, file: !35, line: 3527, baseType: !1168, size: 64, align: 64, offset: 960)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64, align: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1004, !1070}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1123, file: !35, line: 3535, baseType: !1172, size: 64, align: 64, offset: 1024)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!1004, !1070, !1175}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1123, file: !35, line: 3541, baseType: !1178, size: 64, align: 64, offset: 1088)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1182, line: 223, size: 128, align: 64, elements: !1183)
!1182 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1183 = !{!1184, !1185}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1181, file: !1182, line: 224, baseType: !1017, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1181, file: !1182, line: 225, baseType: !1017, size: 64, align: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1123, file: !35, line: 3549, baseType: !1187, size: 64, align: 64, offset: 1152)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !1166}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1123, file: !35, line: 3551, baseType: !1168, size: 64, align: 64, offset: 1216)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1123, file: !35, line: 3552, baseType: !1192, size: 64, align: 64, offset: 1280)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64, align: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!1004, !1070, !1195, !1004, !1196}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1236}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1198, file: !35, line: 3921, baseType: !1026, size: 16, align: 16)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1198, file: !35, line: 3922, baseType: !1015, size: 32, align: 32, offset: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1198, file: !35, line: 3923, baseType: !1015, size: 32, align: 32, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1198, file: !35, line: 3924, baseType: !1005, size: 32, align: 32, offset: 96)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1198, file: !35, line: 3925, baseType: !1205, size: 64, align: 64, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215, !1225, !1229, !1231, !1232, !1234, !1235}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1208, file: !35, line: 3886, baseType: !1004, size: 32, align: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1208, file: !35, line: 3887, baseType: !1004, size: 32, align: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1208, file: !35, line: 3888, baseType: !1004, size: 32, align: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1208, file: !35, line: 3889, baseType: !1004, size: 32, align: 32, offset: 96)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1208, file: !35, line: 3890, baseType: !1004, size: 32, align: 32, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1208, file: !35, line: 3897, baseType: !1216, size: 768, align: 64, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1218)
!1218 = !{!1219, !1223}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1217, file: !35, line: 3855, baseType: !1220, size: 512, align: 64)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1195, size: 512, align: 64, elements: !1221)
!1221 = !{!1222}
!1222 = !DISubrange(count: 8)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1217, file: !35, line: 3857, baseType: !1224, size: 256, align: 32, offset: 512)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 256, align: 32, elements: !1221)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1208, file: !35, line: 3903, baseType: !1226, size: 256, align: 64, offset: 960)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1195, size: 256, align: 64, elements: !1227)
!1227 = !{!1228}
!1228 = !DISubrange(count: 4)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1208, file: !35, line: 3904, baseType: !1230, size: 128, align: 32, offset: 1216)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 128, align: 32, elements: !1227)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1208, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1208, file: !35, line: 3908, baseType: !1233, size: 64, align: 64, offset: 1408)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1208, file: !35, line: 3915, baseType: !1233, size: 64, align: 64, offset: 1472)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1208, file: !35, line: 3917, baseType: !1004, size: 32, align: 32, offset: 1536)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1198, file: !35, line: 3926, baseType: !1237, size: 64, align: 64, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1016, line: 40, baseType: !1238)
!1238 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1123, file: !35, line: 3564, baseType: !1240, size: 64, align: 64, offset: 1344)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!1004, !1070, !1243, !1277, !1357}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1246)
!1246 = !{!1247, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1273, !1274, !1275, !1276}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1245, file: !35, line: 1451, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1250, line: 94, baseType: !1251)
!1250 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1250, line: 81, size: 192, align: 64, elements: !1252)
!1252 = !{!1253, !1257, !1258}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1251, file: !1250, line: 82, baseType: !1254, size: 64, align: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1250, line: 73, baseType: !1256)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1250, line: 73, flags: DIFlagFwdDecl)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1251, file: !1250, line: 89, baseType: !1195, size: 64, align: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1251, file: !1250, line: 93, baseType: !1004, size: 32, align: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1245, file: !35, line: 1461, baseType: !1237, size: 64, align: 64, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1245, file: !35, line: 1467, baseType: !1237, size: 64, align: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1245, file: !35, line: 1468, baseType: !1195, size: 64, align: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1245, file: !35, line: 1469, baseType: !1004, size: 32, align: 32, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1245, file: !35, line: 1470, baseType: !1004, size: 32, align: 32, offset: 288)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1245, file: !35, line: 1474, baseType: !1004, size: 32, align: 32, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1245, file: !35, line: 1479, baseType: !1266, size: 64, align: 64, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1269)
!1269 = !{!1270, !1271, !1272}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1268, file: !35, line: 1412, baseType: !1195, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1268, file: !35, line: 1413, baseType: !1004, size: 32, align: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1268, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1245, file: !35, line: 1480, baseType: !1004, size: 32, align: 32, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1245, file: !35, line: 1486, baseType: !1237, size: 64, align: 64, offset: 512)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1245, file: !35, line: 1488, baseType: !1237, size: 64, align: 64, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1245, file: !35, line: 1497, baseType: !1237, size: 64, align: 64, offset: 640)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1311, !1313, !1314, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1345, !1346, !1347, !1348, !1349, !1350, !1353, !1354, !1355, !1356}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1280, file: !758, line: 282, baseType: !1220, size: 512, align: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1280, file: !758, line: 299, baseType: !1224, size: 256, align: 32, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1280, file: !758, line: 315, baseType: !1285, size: 64, align: 64, offset: 768)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1280, file: !758, line: 326, baseType: !1004, size: 32, align: 32, offset: 832)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1280, file: !758, line: 326, baseType: !1004, size: 32, align: 32, offset: 864)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1280, file: !758, line: 334, baseType: !1004, size: 32, align: 32, offset: 896)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1280, file: !758, line: 341, baseType: !1004, size: 32, align: 32, offset: 928)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1280, file: !758, line: 346, baseType: !1004, size: 32, align: 32, offset: 960)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1280, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1280, file: !758, line: 356, baseType: !1133, size: 64, align: 32, offset: 1024)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1280, file: !758, line: 361, baseType: !1237, size: 64, align: 64, offset: 1088)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1280, file: !758, line: 369, baseType: !1237, size: 64, align: 64, offset: 1152)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1280, file: !758, line: 377, baseType: !1237, size: 64, align: 64, offset: 1216)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1280, file: !758, line: 382, baseType: !1004, size: 32, align: 32, offset: 1280)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1280, file: !758, line: 386, baseType: !1004, size: 32, align: 32, offset: 1312)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1280, file: !758, line: 391, baseType: !1004, size: 32, align: 32, offset: 1344)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1280, file: !758, line: 396, baseType: !1008, size: 64, align: 64, offset: 1408)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1280, file: !758, line: 403, baseType: !1301, size: 512, align: 64, offset: 1472)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 512, align: 64, elements: !1221)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1280, file: !758, line: 410, baseType: !1004, size: 32, align: 32, offset: 1984)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1280, file: !758, line: 415, baseType: !1004, size: 32, align: 32, offset: 2016)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1280, file: !758, line: 420, baseType: !1004, size: 32, align: 32, offset: 2048)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1280, file: !758, line: 425, baseType: !1004, size: 32, align: 32, offset: 2080)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1280, file: !758, line: 435, baseType: !1237, size: 64, align: 64, offset: 2112)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1280, file: !758, line: 440, baseType: !1004, size: 32, align: 32, offset: 2176)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1280, file: !758, line: 445, baseType: !1151, size: 64, align: 64, offset: 2240)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1280, file: !758, line: 459, baseType: !1310, size: 512, align: 64, offset: 2304)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 512, align: 64, elements: !1221)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1280, file: !758, line: 473, baseType: !1312, size: 64, align: 64, offset: 2816)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1280, file: !758, line: 477, baseType: !1004, size: 32, align: 32, offset: 2880)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1280, file: !758, line: 479, baseType: !1315, size: 64, align: 64, offset: 2944)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1328}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1318, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1318, file: !758, line: 203, baseType: !1195, size: 64, align: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1318, file: !758, line: 204, baseType: !1004, size: 32, align: 32, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1318, file: !758, line: 205, baseType: !1324, size: 64, align: 64, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1326, line: 86, baseType: !1327)
!1326 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1327 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1326, line: 86, flags: DIFlagFwdDecl)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1318, file: !758, line: 206, baseType: !1248, size: 64, align: 64, offset: 256)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1280, file: !758, line: 480, baseType: !1004, size: 32, align: 32, offset: 3008)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1280, file: !758, line: 505, baseType: !1004, size: 32, align: 32, offset: 3040)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1280, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1280, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1280, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1280, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1280, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1280, file: !758, line: 532, baseType: !1237, size: 64, align: 64, offset: 3264)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1280, file: !758, line: 539, baseType: !1237, size: 64, align: 64, offset: 3328)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1280, file: !758, line: 547, baseType: !1237, size: 64, align: 64, offset: 3392)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1280, file: !758, line: 554, baseType: !1324, size: 64, align: 64, offset: 3456)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1280, file: !758, line: 563, baseType: !1004, size: 32, align: 32, offset: 3520)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1280, file: !758, line: 572, baseType: !1004, size: 32, align: 32, offset: 3552)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1280, file: !758, line: 581, baseType: !1004, size: 32, align: 32, offset: 3584)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1280, file: !758, line: 588, baseType: !1344, size: 64, align: 64, offset: 3648)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1280, file: !758, line: 593, baseType: !1004, size: 32, align: 32, offset: 3712)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1280, file: !758, line: 596, baseType: !1004, size: 32, align: 32, offset: 3744)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1280, file: !758, line: 599, baseType: !1248, size: 64, align: 64, offset: 3776)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1280, file: !758, line: 605, baseType: !1248, size: 64, align: 64, offset: 3840)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1280, file: !758, line: 616, baseType: !1248, size: 64, align: 64, offset: 3904)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1280, file: !758, line: 626, baseType: !1351, size: 64, align: 64, offset: 3968)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1352, line: 216, baseType: !1152)
!1352 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1280, file: !758, line: 627, baseType: !1351, size: 64, align: 64, offset: 4032)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1280, file: !758, line: 628, baseType: !1351, size: 64, align: 64, offset: 4096)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1280, file: !758, line: 629, baseType: !1351, size: 64, align: 64, offset: 4160)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1280, file: !758, line: 645, baseType: !1248, size: 64, align: 64, offset: 4224)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1123, file: !35, line: 3566, baseType: !1359, size: 64, align: 64, offset: 1408)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!1004, !1070, !1008, !1357, !1243}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1123, file: !35, line: 3567, baseType: !1168, size: 64, align: 64, offset: 1472)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1123, file: !35, line: 3576, baseType: !1364, size: 64, align: 64, offset: 1536)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64, align: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!1004, !1070, !1277}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1123, file: !35, line: 3577, baseType: !1368, size: 64, align: 64, offset: 1600)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64, align: 64)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!1004, !1070, !1243}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1123, file: !35, line: 3584, baseType: !1372, size: 64, align: 64, offset: 1664)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64, align: 64)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{!1004, !1070, !1375}
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64, align: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1123, file: !35, line: 3589, baseType: !1377, size: 64, align: 64, offset: 1728)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64, align: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1070}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1123, file: !35, line: 3594, baseType: !1004, size: 32, align: 32, offset: 1792)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1123, file: !35, line: 3600, baseType: !1081, size: 64, align: 64, offset: 1856)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1123, file: !35, line: 3609, baseType: !1383, size: 64, align: 64, offset: 1920)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64, align: 64)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1072, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1072, file: !35, line: 1581, baseType: !1005, size: 32, align: 32, offset: 224)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1072, file: !35, line: 1583, baseType: !1008, size: 64, align: 64, offset: 256)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1072, file: !35, line: 1591, baseType: !1391, size: 64, align: 64, offset: 320)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1182, line: 129, size: 1664, align: 64, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1416, !1417, !1423, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1392, file: !1182, line: 136, baseType: !1004, size: 32, align: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1392, file: !1182, line: 151, baseType: !1004, size: 32, align: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1392, file: !1182, line: 157, baseType: !1004, size: 32, align: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1392, file: !1182, line: 159, baseType: !1375, size: 64, align: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1392, file: !1182, line: 161, baseType: !1399, size: 64, align: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64, align: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1182, line: 117, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1182, line: 100, size: 832, align: 64, elements: !1402)
!1402 = !{!1403, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1401, file: !1182, line: 105, baseType: !1404, size: 256, align: 64)
!1404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 256, align: 64, elements: !1227)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1250, line: 238, baseType: !1407)
!1407 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1250, line: 238, flags: DIFlagFwdDecl)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1401, file: !1182, line: 110, baseType: !1004, size: 32, align: 32, offset: 256)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1401, file: !1182, line: 111, baseType: !1004, size: 32, align: 32, offset: 288)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1401, file: !1182, line: 111, baseType: !1004, size: 32, align: 32, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1401, file: !1182, line: 112, baseType: !1224, size: 256, align: 32, offset: 352)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1401, file: !1182, line: 113, baseType: !1230, size: 128, align: 32, offset: 608)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1401, file: !1182, line: 114, baseType: !1004, size: 32, align: 32, offset: 736)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1401, file: !1182, line: 115, baseType: !1004, size: 32, align: 32, offset: 768)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1401, file: !1182, line: 116, baseType: !1004, size: 32, align: 32, offset: 800)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1392, file: !1182, line: 163, baseType: !1008, size: 64, align: 64, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1392, file: !1182, line: 165, baseType: !1418, size: 128, align: 64, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1182, line: 122, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1182, line: 119, size: 128, align: 64, elements: !1420)
!1420 = !{!1421, !1422}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1419, file: !1182, line: 120, baseType: !1243, size: 64, align: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1419, file: !1182, line: 121, baseType: !1375, size: 64, align: 64, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1392, file: !1182, line: 166, baseType: !1424, size: 128, align: 64, offset: 448)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1182, line: 127, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1182, line: 124, size: 128, align: 64, elements: !1426)
!1426 = !{!1427, !1500}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1425, file: !1182, line: 125, baseType: !1428, size: 64, align: 64)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1432)
!1432 = !{!1433, !1434, !1458, !1462, !1463, !1497, !1498, !1499}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1431, file: !35, line: 5751, baseType: !1075, size: 64, align: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1431, file: !35, line: 5756, baseType: !1435, size: 64, align: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1438)
!1438 = !{!1439, !1440, !1443, !1444, !1445, !1449, !1453, !1457}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1437, file: !35, line: 5797, baseType: !1081, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1437, file: !35, line: 5804, baseType: !1441, size: 64, align: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64, align: 64)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1437, file: !35, line: 5815, baseType: !1075, size: 64, align: 64, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1437, file: !35, line: 5825, baseType: !1004, size: 32, align: 32, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1437, file: !35, line: 5826, baseType: !1446, size: 64, align: 64, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64, align: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!1004, !1429}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1437, file: !35, line: 5827, baseType: !1450, size: 64, align: 64, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64, align: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!1004, !1429, !1243}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1437, file: !35, line: 5828, baseType: !1454, size: 64, align: 64, offset: 384)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{null, !1429}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1437, file: !35, line: 5829, baseType: !1454, size: 64, align: 64, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1431, file: !35, line: 5762, baseType: !1459, size: 64, align: 64, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64, align: 64)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1461)
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1431, file: !35, line: 5768, baseType: !1008, size: 64, align: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1431, file: !35, line: 5775, baseType: !1464, size: 64, align: 64, offset: 256)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1466, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1466, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1466, file: !35, line: 3948, baseType: !1015, size: 32, align: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1466, file: !35, line: 3958, baseType: !1195, size: 64, align: 64, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1466, file: !35, line: 3962, baseType: !1004, size: 32, align: 32, offset: 192)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1466, file: !35, line: 3968, baseType: !1004, size: 32, align: 32, offset: 224)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1466, file: !35, line: 3973, baseType: !1237, size: 64, align: 64, offset: 256)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1466, file: !35, line: 3986, baseType: !1004, size: 32, align: 32, offset: 320)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1466, file: !35, line: 3999, baseType: !1004, size: 32, align: 32, offset: 352)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1466, file: !35, line: 4004, baseType: !1004, size: 32, align: 32, offset: 384)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1466, file: !35, line: 4005, baseType: !1004, size: 32, align: 32, offset: 416)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1466, file: !35, line: 4010, baseType: !1004, size: 32, align: 32, offset: 448)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1466, file: !35, line: 4011, baseType: !1004, size: 32, align: 32, offset: 480)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1466, file: !35, line: 4020, baseType: !1133, size: 64, align: 32, offset: 512)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1466, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1466, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1466, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1466, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1466, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1466, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1466, file: !35, line: 4039, baseType: !1004, size: 32, align: 32, offset: 768)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1466, file: !35, line: 4046, baseType: !1151, size: 64, align: 64, offset: 832)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1466, file: !35, line: 4050, baseType: !1004, size: 32, align: 32, offset: 896)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1466, file: !35, line: 4054, baseType: !1004, size: 32, align: 32, offset: 928)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1466, file: !35, line: 4061, baseType: !1004, size: 32, align: 32, offset: 960)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1466, file: !35, line: 4065, baseType: !1004, size: 32, align: 32, offset: 992)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1466, file: !35, line: 4073, baseType: !1004, size: 32, align: 32, offset: 1024)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1466, file: !35, line: 4080, baseType: !1004, size: 32, align: 32, offset: 1056)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1466, file: !35, line: 4084, baseType: !1004, size: 32, align: 32, offset: 1088)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1431, file: !35, line: 5781, baseType: !1464, size: 64, align: 64, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1431, file: !35, line: 5787, baseType: !1133, size: 64, align: 32, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1431, file: !35, line: 5793, baseType: !1133, size: 64, align: 32, offset: 448)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1425, file: !1182, line: 126, baseType: !1004, size: 32, align: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1392, file: !1182, line: 172, baseType: !1243, size: 64, align: 64, offset: 576)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1392, file: !1182, line: 177, baseType: !1195, size: 64, align: 64, offset: 640)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1392, file: !1182, line: 178, baseType: !1005, size: 32, align: 32, offset: 704)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1392, file: !1182, line: 180, baseType: !1008, size: 64, align: 64, offset: 768)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1392, file: !1182, line: 185, baseType: !1004, size: 32, align: 32, offset: 832)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1392, file: !1182, line: 190, baseType: !1008, size: 64, align: 64, offset: 896)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1392, file: !1182, line: 195, baseType: !1004, size: 32, align: 32, offset: 960)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1392, file: !1182, line: 200, baseType: !1243, size: 64, align: 64, offset: 1024)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1392, file: !1182, line: 201, baseType: !1004, size: 32, align: 32, offset: 1088)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1392, file: !1182, line: 202, baseType: !1375, size: 64, align: 64, offset: 1152)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1392, file: !1182, line: 203, baseType: !1004, size: 32, align: 32, offset: 1216)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1392, file: !1182, line: 205, baseType: !1004, size: 32, align: 32, offset: 1248)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1392, file: !1182, line: 206, baseType: !1004, size: 32, align: 32, offset: 1280)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1392, file: !1182, line: 209, baseType: !1351, size: 64, align: 64, offset: 1344)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1392, file: !1182, line: 212, baseType: !1351, size: 64, align: 64, offset: 1408)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1392, file: !1182, line: 213, baseType: !1375, size: 64, align: 64, offset: 1472)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1392, file: !1182, line: 215, baseType: !1004, size: 32, align: 32, offset: 1536)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1392, file: !1182, line: 217, baseType: !1004, size: 32, align: 32, offset: 1568)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1392, file: !1182, line: 220, baseType: !1004, size: 32, align: 32, offset: 1600)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1072, file: !35, line: 1598, baseType: !1008, size: 64, align: 64, offset: 384)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1072, file: !35, line: 1606, baseType: !1237, size: 64, align: 64, offset: 448)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1072, file: !35, line: 1614, baseType: !1004, size: 32, align: 32, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1072, file: !35, line: 1622, baseType: !1004, size: 32, align: 32, offset: 544)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1072, file: !35, line: 1628, baseType: !1004, size: 32, align: 32, offset: 576)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1072, file: !35, line: 1636, baseType: !1004, size: 32, align: 32, offset: 608)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1072, file: !35, line: 1643, baseType: !1004, size: 32, align: 32, offset: 640)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1072, file: !35, line: 1657, baseType: !1195, size: 64, align: 64, offset: 704)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1072, file: !35, line: 1658, baseType: !1004, size: 32, align: 32, offset: 768)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1072, file: !35, line: 1679, baseType: !1133, size: 64, align: 32, offset: 800)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1072, file: !35, line: 1688, baseType: !1004, size: 32, align: 32, offset: 864)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1072, file: !35, line: 1712, baseType: !1004, size: 32, align: 32, offset: 896)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1072, file: !35, line: 1729, baseType: !1004, size: 32, align: 32, offset: 928)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1072, file: !35, line: 1729, baseType: !1004, size: 32, align: 32, offset: 960)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1072, file: !35, line: 1744, baseType: !1004, size: 32, align: 32, offset: 992)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1072, file: !35, line: 1744, baseType: !1004, size: 32, align: 32, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1072, file: !35, line: 1751, baseType: !1004, size: 32, align: 32, offset: 1056)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1072, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1072, file: !35, line: 1791, baseType: !1539, size: 64, align: 64, offset: 1152)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64, align: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1542, !1277, !1357, !1004, !1004, !1004}
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1072, file: !35, line: 1808, baseType: !1544, size: 64, align: 64, offset: 1216)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!494, !1542, !1140}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1072, file: !35, line: 1816, baseType: !1004, size: 32, align: 32, offset: 1280)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1072, file: !35, line: 1825, baseType: !1007, size: 32, align: 32, offset: 1312)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1072, file: !35, line: 1830, baseType: !1004, size: 32, align: 32, offset: 1344)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1072, file: !35, line: 1838, baseType: !1007, size: 32, align: 32, offset: 1376)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1072, file: !35, line: 1846, baseType: !1004, size: 32, align: 32, offset: 1408)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1072, file: !35, line: 1851, baseType: !1004, size: 32, align: 32, offset: 1440)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1072, file: !35, line: 1861, baseType: !1007, size: 32, align: 32, offset: 1472)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1072, file: !35, line: 1868, baseType: !1007, size: 32, align: 32, offset: 1504)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1072, file: !35, line: 1875, baseType: !1007, size: 32, align: 32, offset: 1536)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1072, file: !35, line: 1882, baseType: !1007, size: 32, align: 32, offset: 1568)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1072, file: !35, line: 1889, baseType: !1007, size: 32, align: 32, offset: 1600)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1072, file: !35, line: 1896, baseType: !1007, size: 32, align: 32, offset: 1632)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1072, file: !35, line: 1903, baseType: !1007, size: 32, align: 32, offset: 1664)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1072, file: !35, line: 1910, baseType: !1004, size: 32, align: 32, offset: 1696)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1072, file: !35, line: 1915, baseType: !1004, size: 32, align: 32, offset: 1728)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1072, file: !35, line: 1926, baseType: !1357, size: 64, align: 64, offset: 1792)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1072, file: !35, line: 1935, baseType: !1133, size: 64, align: 32, offset: 1856)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1072, file: !35, line: 1942, baseType: !1004, size: 32, align: 32, offset: 1920)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1072, file: !35, line: 1948, baseType: !1004, size: 32, align: 32, offset: 1952)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1072, file: !35, line: 1954, baseType: !1004, size: 32, align: 32, offset: 1984)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1072, file: !35, line: 1960, baseType: !1004, size: 32, align: 32, offset: 2016)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1072, file: !35, line: 1984, baseType: !1004, size: 32, align: 32, offset: 2048)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1072, file: !35, line: 1991, baseType: !1004, size: 32, align: 32, offset: 2080)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1072, file: !35, line: 1996, baseType: !1004, size: 32, align: 32, offset: 2112)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1072, file: !35, line: 2004, baseType: !1004, size: 32, align: 32, offset: 2144)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1072, file: !35, line: 2011, baseType: !1004, size: 32, align: 32, offset: 2176)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1072, file: !35, line: 2018, baseType: !1004, size: 32, align: 32, offset: 2208)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1072, file: !35, line: 2027, baseType: !1004, size: 32, align: 32, offset: 2240)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1072, file: !35, line: 2034, baseType: !1004, size: 32, align: 32, offset: 2272)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1072, file: !35, line: 2044, baseType: !1004, size: 32, align: 32, offset: 2304)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1072, file: !35, line: 2054, baseType: !1578, size: 64, align: 64, offset: 2368)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1072, file: !35, line: 2061, baseType: !1578, size: 64, align: 64, offset: 2432)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1072, file: !35, line: 2066, baseType: !1004, size: 32, align: 32, offset: 2496)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1072, file: !35, line: 2070, baseType: !1004, size: 32, align: 32, offset: 2528)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1072, file: !35, line: 2078, baseType: !1004, size: 32, align: 32, offset: 2560)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1072, file: !35, line: 2085, baseType: !1004, size: 32, align: 32, offset: 2592)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1072, file: !35, line: 2092, baseType: !1004, size: 32, align: 32, offset: 2624)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1072, file: !35, line: 2099, baseType: !1004, size: 32, align: 32, offset: 2656)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1072, file: !35, line: 2106, baseType: !1004, size: 32, align: 32, offset: 2688)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1072, file: !35, line: 2113, baseType: !1004, size: 32, align: 32, offset: 2720)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1072, file: !35, line: 2120, baseType: !1004, size: 32, align: 32, offset: 2752)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1072, file: !35, line: 2125, baseType: !1004, size: 32, align: 32, offset: 2784)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1072, file: !35, line: 2133, baseType: !1004, size: 32, align: 32, offset: 2816)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1072, file: !35, line: 2140, baseType: !1004, size: 32, align: 32, offset: 2848)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1072, file: !35, line: 2145, baseType: !1004, size: 32, align: 32, offset: 2880)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1072, file: !35, line: 2153, baseType: !1004, size: 32, align: 32, offset: 2912)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1072, file: !35, line: 2158, baseType: !1004, size: 32, align: 32, offset: 2944)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1072, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1072, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1072, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1072, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1072, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1072, file: !35, line: 2203, baseType: !1004, size: 32, align: 32, offset: 3136)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1072, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1072, file: !35, line: 2212, baseType: !1004, size: 32, align: 32, offset: 3200)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1072, file: !35, line: 2213, baseType: !1004, size: 32, align: 32, offset: 3232)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1072, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1072, file: !35, line: 2232, baseType: !1004, size: 32, align: 32, offset: 3296)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1072, file: !35, line: 2243, baseType: !1004, size: 32, align: 32, offset: 3328)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1072, file: !35, line: 2249, baseType: !1004, size: 32, align: 32, offset: 3360)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1072, file: !35, line: 2256, baseType: !1004, size: 32, align: 32, offset: 3392)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1072, file: !35, line: 2263, baseType: !1151, size: 64, align: 64, offset: 3456)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1072, file: !35, line: 2270, baseType: !1151, size: 64, align: 64, offset: 3520)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1072, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1072, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1072, file: !35, line: 2367, baseType: !1614, size: 64, align: 64, offset: 3648)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64, align: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!1004, !1542, !1375, !1004}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1072, file: !35, line: 2383, baseType: !1004, size: 32, align: 32, offset: 3712)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1072, file: !35, line: 2386, baseType: !1007, size: 32, align: 32, offset: 3744)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1072, file: !35, line: 2387, baseType: !1007, size: 32, align: 32, offset: 3776)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1072, file: !35, line: 2394, baseType: !1004, size: 32, align: 32, offset: 3808)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1072, file: !35, line: 2401, baseType: !1004, size: 32, align: 32, offset: 3840)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1072, file: !35, line: 2408, baseType: !1004, size: 32, align: 32, offset: 3872)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1072, file: !35, line: 2415, baseType: !1004, size: 32, align: 32, offset: 3904)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1072, file: !35, line: 2422, baseType: !1004, size: 32, align: 32, offset: 3936)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1072, file: !35, line: 2423, baseType: !1626, size: 64, align: 64, offset: 3968)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1628, file: !35, line: 827, baseType: !1004, size: 32, align: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1628, file: !35, line: 828, baseType: !1004, size: 32, align: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1628, file: !35, line: 829, baseType: !1004, size: 32, align: 32, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1628, file: !35, line: 830, baseType: !1007, size: 32, align: 32, offset: 96)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1072, file: !35, line: 2430, baseType: !1237, size: 64, align: 64, offset: 4032)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1072, file: !35, line: 2437, baseType: !1237, size: 64, align: 64, offset: 4096)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1072, file: !35, line: 2444, baseType: !1007, size: 32, align: 32, offset: 4160)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1072, file: !35, line: 2451, baseType: !1007, size: 32, align: 32, offset: 4192)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1072, file: !35, line: 2458, baseType: !1004, size: 32, align: 32, offset: 4224)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1072, file: !35, line: 2469, baseType: !1004, size: 32, align: 32, offset: 4256)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1072, file: !35, line: 2475, baseType: !1004, size: 32, align: 32, offset: 4288)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1072, file: !35, line: 2481, baseType: !1004, size: 32, align: 32, offset: 4320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1072, file: !35, line: 2485, baseType: !1004, size: 32, align: 32, offset: 4352)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1072, file: !35, line: 2489, baseType: !1004, size: 32, align: 32, offset: 4384)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1072, file: !35, line: 2493, baseType: !1004, size: 32, align: 32, offset: 4416)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1072, file: !35, line: 2501, baseType: !1004, size: 32, align: 32, offset: 4448)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1072, file: !35, line: 2506, baseType: !1004, size: 32, align: 32, offset: 4480)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1072, file: !35, line: 2510, baseType: !1004, size: 32, align: 32, offset: 4512)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1072, file: !35, line: 2514, baseType: !1237, size: 64, align: 64, offset: 4544)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1072, file: !35, line: 2528, baseType: !1650, size: 64, align: 64, offset: 4608)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{null, !1542, !1008, !1004, !1004}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1072, file: !35, line: 2534, baseType: !1004, size: 32, align: 32, offset: 4672)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1072, file: !35, line: 2545, baseType: !1004, size: 32, align: 32, offset: 4704)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1072, file: !35, line: 2547, baseType: !1004, size: 32, align: 32, offset: 4736)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1072, file: !35, line: 2549, baseType: !1004, size: 32, align: 32, offset: 4768)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1072, file: !35, line: 2551, baseType: !1004, size: 32, align: 32, offset: 4800)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1072, file: !35, line: 2553, baseType: !1004, size: 32, align: 32, offset: 4832)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1072, file: !35, line: 2555, baseType: !1004, size: 32, align: 32, offset: 4864)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1072, file: !35, line: 2557, baseType: !1004, size: 32, align: 32, offset: 4896)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1072, file: !35, line: 2559, baseType: !1004, size: 32, align: 32, offset: 4928)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1072, file: !35, line: 2563, baseType: !1004, size: 32, align: 32, offset: 4960)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1072, file: !35, line: 2571, baseType: !1233, size: 64, align: 64, offset: 4992)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1072, file: !35, line: 2579, baseType: !1233, size: 64, align: 64, offset: 5056)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1072, file: !35, line: 2586, baseType: !1004, size: 32, align: 32, offset: 5120)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1072, file: !35, line: 2615, baseType: !1004, size: 32, align: 32, offset: 5152)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1072, file: !35, line: 2627, baseType: !1004, size: 32, align: 32, offset: 5184)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1072, file: !35, line: 2637, baseType: !1004, size: 32, align: 32, offset: 5216)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1072, file: !35, line: 2681, baseType: !1004, size: 32, align: 32, offset: 5248)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1072, file: !35, line: 2709, baseType: !1237, size: 64, align: 64, offset: 5312)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1072, file: !35, line: 2716, baseType: !1672, size: 64, align: 64, offset: 5376)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1686, !1690, !1691, !1692, !1693, !1699, !1700, !1701, !1702, !1703}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1674, file: !35, line: 3642, baseType: !1081, size: 64, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1674, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1674, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1674, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1674, file: !35, line: 3669, baseType: !1004, size: 32, align: 32, offset: 160)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1674, file: !35, line: 3682, baseType: !1372, size: 64, align: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1674, file: !35, line: 3698, baseType: !1683, size: 64, align: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!1004, !1070, !1017, !1015}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1674, file: !35, line: 3712, baseType: !1687, size: 64, align: 64, offset: 320)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!1004, !1070, !1004, !1017, !1015}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1674, file: !35, line: 3726, baseType: !1683, size: 64, align: 64, offset: 384)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1674, file: !35, line: 3737, baseType: !1168, size: 64, align: 64, offset: 448)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1674, file: !35, line: 3746, baseType: !1004, size: 32, align: 32, offset: 512)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1674, file: !35, line: 3757, baseType: !1694, size: 64, align: 64, offset: 576)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64, align: 64)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{null, !1697}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64, align: 64)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1674, file: !35, line: 3766, baseType: !1168, size: 64, align: 64, offset: 640)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1674, file: !35, line: 3774, baseType: !1168, size: 64, align: 64, offset: 704)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1674, file: !35, line: 3780, baseType: !1004, size: 32, align: 32, offset: 768)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1674, file: !35, line: 3785, baseType: !1004, size: 32, align: 32, offset: 800)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1674, file: !35, line: 3795, baseType: !1704, size: 64, align: 64, offset: 832)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64, align: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!1004, !1070, !1248}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1072, file: !35, line: 2728, baseType: !1008, size: 64, align: 64, offset: 5440)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1072, file: !35, line: 2735, baseType: !1301, size: 512, align: 64, offset: 5504)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1072, file: !35, line: 2742, baseType: !1004, size: 32, align: 32, offset: 6016)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1072, file: !35, line: 2755, baseType: !1004, size: 32, align: 32, offset: 6048)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1072, file: !35, line: 2776, baseType: !1004, size: 32, align: 32, offset: 6080)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1072, file: !35, line: 2783, baseType: !1004, size: 32, align: 32, offset: 6112)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1072, file: !35, line: 2791, baseType: !1004, size: 32, align: 32, offset: 6144)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1072, file: !35, line: 2802, baseType: !1375, size: 64, align: 64, offset: 6208)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1072, file: !35, line: 2811, baseType: !1004, size: 32, align: 32, offset: 6272)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1072, file: !35, line: 2821, baseType: !1004, size: 32, align: 32, offset: 6304)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1072, file: !35, line: 2830, baseType: !1004, size: 32, align: 32, offset: 6336)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1072, file: !35, line: 2840, baseType: !1004, size: 32, align: 32, offset: 6368)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1072, file: !35, line: 2851, baseType: !1720, size: 64, align: 64, offset: 6400)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!1004, !1542, !1723, !1008, !1357, !1004, !1004}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64, align: 64)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!1004, !1542, !1008}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1072, file: !35, line: 2871, baseType: !1727, size: 64, align: 64, offset: 6464)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64, align: 64)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!1004, !1542, !1730, !1008, !1357, !1004}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64, align: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!1004, !1542, !1008, !1004, !1004}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1072, file: !35, line: 2878, baseType: !1004, size: 32, align: 32, offset: 6528)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1072, file: !35, line: 2885, baseType: !1004, size: 32, align: 32, offset: 6560)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1072, file: !35, line: 3005, baseType: !1004, size: 32, align: 32, offset: 6592)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1072, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1072, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1072, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1072, file: !35, line: 3037, baseType: !1195, size: 64, align: 64, offset: 6720)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1072, file: !35, line: 3038, baseType: !1004, size: 32, align: 32, offset: 6784)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1072, file: !35, line: 3050, baseType: !1151, size: 64, align: 64, offset: 6848)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1072, file: !35, line: 3065, baseType: !1004, size: 32, align: 32, offset: 6912)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1072, file: !35, line: 3083, baseType: !1004, size: 32, align: 32, offset: 6944)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1072, file: !35, line: 3092, baseType: !1133, size: 64, align: 32, offset: 6976)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1072, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1072, file: !35, line: 3106, baseType: !1133, size: 64, align: 32, offset: 7072)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1072, file: !35, line: 3113, baseType: !1748, size: 64, align: 64, offset: 7168)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64, align: 64)
!1749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1750)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758, !1761}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1751, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1751, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1751, file: !35, line: 720, baseType: !1081, size: 64, align: 64, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1751, file: !35, line: 724, baseType: !1081, size: 64, align: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1751, file: !35, line: 728, baseType: !1004, size: 32, align: 32, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1751, file: !35, line: 734, baseType: !1759, size: 64, align: 64, offset: 256)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1751, file: !35, line: 739, baseType: !1762, size: 64, align: 64, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1072, file: !35, line: 3129, baseType: !1237, size: 64, align: 64, offset: 7232)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1072, file: !35, line: 3130, baseType: !1237, size: 64, align: 64, offset: 7296)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1072, file: !35, line: 3131, baseType: !1237, size: 64, align: 64, offset: 7360)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1072, file: !35, line: 3132, baseType: !1237, size: 64, align: 64, offset: 7424)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1072, file: !35, line: 3139, baseType: !1233, size: 64, align: 64, offset: 7488)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1072, file: !35, line: 3147, baseType: !1004, size: 32, align: 32, offset: 7552)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1072, file: !35, line: 3165, baseType: !1004, size: 32, align: 32, offset: 7584)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1072, file: !35, line: 3172, baseType: !1004, size: 32, align: 32, offset: 7616)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1072, file: !35, line: 3180, baseType: !1004, size: 32, align: 32, offset: 7648)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1072, file: !35, line: 3191, baseType: !1578, size: 64, align: 64, offset: 7680)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1072, file: !35, line: 3199, baseType: !1195, size: 64, align: 64, offset: 7744)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1072, file: !35, line: 3207, baseType: !1233, size: 64, align: 64, offset: 7808)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1072, file: !35, line: 3214, baseType: !1005, size: 32, align: 32, offset: 7872)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1072, file: !35, line: 3224, baseType: !1266, size: 64, align: 64, offset: 7936)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1072, file: !35, line: 3225, baseType: !1004, size: 32, align: 32, offset: 8000)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1072, file: !35, line: 3249, baseType: !1248, size: 64, align: 64, offset: 8064)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1072, file: !35, line: 3256, baseType: !1004, size: 32, align: 32, offset: 8128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1072, file: !35, line: 3271, baseType: !1004, size: 32, align: 32, offset: 8160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1072, file: !35, line: 3279, baseType: !1237, size: 64, align: 64, offset: 8192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1072, file: !35, line: 3301, baseType: !1248, size: 64, align: 64, offset: 8256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1072, file: !35, line: 3310, baseType: !1004, size: 32, align: 32, offset: 8320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1072, file: !35, line: 3337, baseType: !1004, size: 32, align: 32, offset: 8352)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1072, file: !35, line: 3351, baseType: !1004, size: 32, align: 32, offset: 8384)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1072, file: !35, line: 3359, baseType: !1004, size: 32, align: 32, offset: 8416)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1067, file: !1066, line: 60, baseType: !1789, size: 256, align: 64, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1790, line: 70, baseType: !1791)
!1790 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1790, line: 61, size: 256, align: 64, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1791, file: !1790, line: 62, baseType: !1017, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1791, file: !1790, line: 62, baseType: !1017, size: 64, align: 64, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1791, file: !1790, line: 67, baseType: !1004, size: 32, align: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1791, file: !1790, line: 68, baseType: !1004, size: 32, align: 32, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1791, file: !1790, line: 69, baseType: !1004, size: 32, align: 32, offset: 192)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1067, file: !1066, line: 62, baseType: !1004, size: 32, align: 32, offset: 320)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask", scope: !1067, file: !1066, line: 63, baseType: !1004, size: 32, align: 32, offset: 352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1067, file: !1066, line: 64, baseType: !1004, size: 32, align: 32, offset: 384)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_orig", scope: !1067, file: !1066, line: 65, baseType: !1004, size: 32, align: 32, offset: 416)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_scaled", scope: !1067, file: !1066, line: 66, baseType: !1004, size: 32, align: 32, offset: 448)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !1067, file: !1066, line: 68, baseType: !1004, size: 32, align: 32, offset: 480)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels_total", scope: !1067, file: !1066, line: 69, baseType: !1004, size: 32, align: 32, offset: 512)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "freq_range", scope: !1067, file: !1066, line: 70, baseType: !1004, size: 32, align: 32, offset: 544)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "band_limit", scope: !1067, file: !1066, line: 71, baseType: !1004, size: 32, align: 32, offset: 576)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "limited_rate", scope: !1067, file: !1066, line: 72, baseType: !1004, size: 32, align: 32, offset: 608)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "limited_range", scope: !1067, file: !1066, line: 73, baseType: !1004, size: 32, align: 32, offset: 640)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "res_profile", scope: !1067, file: !1066, line: 74, baseType: !1004, size: 32, align: 32, offset: 672)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nsubbands", scope: !1067, file: !1066, line: 75, baseType: !1004, size: 32, align: 32, offset: 704)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "g3_avg_only_start_sb", scope: !1067, file: !1066, line: 76, baseType: !1004, size: 32, align: 32, offset: 736)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "min_mono_subband", scope: !1067, file: !1066, line: 77, baseType: !1004, size: 32, align: 32, offset: 768)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "max_mono_subband", scope: !1067, file: !1066, line: 78, baseType: !1004, size: 32, align: 32, offset: 800)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "framenum", scope: !1067, file: !1066, line: 80, baseType: !1004, size: 32, align: 32, offset: 832)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_rand", scope: !1067, file: !1066, line: 81, baseType: !1004, size: 32, align: 32, offset: 864)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !1067, file: !1066, line: 82, baseType: !1004, size: 32, align: 32, offset: 896)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "quant_levels", scope: !1067, file: !1066, line: 84, baseType: !1818, size: 768, align: 8, offset: 928)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 768, align: 8, elements: !1819)
!1819 = !{!1820, !1821}
!1820 = !DISubrange(count: 3)
!1821 = !DISubrange(count: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "sb_indices", scope: !1067, file: !1066, line: 85, baseType: !1823, size: 256, align: 8, offset: 1696)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 256, align: 8, elements: !1824)
!1824 = !{!1821}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sec_ch_sbms", scope: !1067, file: !1066, line: 87, baseType: !1818, size: 768, align: 8, offset: 1952)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "sec_ch_lrms", scope: !1067, file: !1066, line: 88, baseType: !1818, size: 768, align: 8, offset: 2720)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ch_pres", scope: !1067, file: !1066, line: 89, baseType: !1828, size: 192, align: 32, offset: 3488)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 192, align: 32, elements: !1829)
!1829 = !{!1830}
!1830 = !DISubrange(count: 6)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "grid_1_scf", scope: !1067, file: !1066, line: 91, baseType: !1832, size: 4608, align: 8, offset: 3680)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 4608, align: 8, elements: !1833)
!1833 = !{!1830, !1834, !1222}
!1834 = !DISubrange(count: 12)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "grid_2_scf", scope: !1067, file: !1066, line: 92, baseType: !1836, size: 9216, align: 8, offset: 8288)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 9216, align: 8, elements: !1837)
!1837 = !{!1830, !1820, !1838}
!1838 = !DISubrange(count: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "grid_3_avg", scope: !1067, file: !1066, line: 94, baseType: !1840, size: 1344, align: 8, offset: 17504)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 1344, align: 8, elements: !1841)
!1841 = !{!1830, !1842}
!1842 = !DISubrange(count: 28)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "grid_3_scf", scope: !1067, file: !1066, line: 95, baseType: !1844, size: 10752, align: 8, offset: 18848)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 10752, align: 8, elements: !1845)
!1845 = !{!1830, !1842, !1222}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "grid_3_pres", scope: !1067, file: !1066, line: 96, baseType: !1828, size: 192, align: 32, offset: 29600)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "high_res_scf", scope: !1067, file: !1066, line: 98, baseType: !1848, size: 12288, align: 8, offset: 29792)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 12288, align: 8, elements: !1849)
!1849 = !{!1830, !1821, !1222}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "part_stereo", scope: !1067, file: !1066, line: 100, baseType: !1851, size: 1920, align: 8, offset: 42080)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 1920, align: 8, elements: !1852)
!1852 = !{!1830, !1222, !1046}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "part_stereo_pres", scope: !1067, file: !1066, line: 101, baseType: !1019, size: 8, align: 8, offset: 44000)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_coeff", scope: !1067, file: !1066, line: 103, baseType: !1855, size: 18432, align: 32, offset: 44032)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 18432, align: 32, elements: !1856)
!1856 = !{!1857, !1830, !1820, !1857, !1222}
!1857 = !DISubrange(count: 2)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sb_scf", scope: !1067, file: !1066, line: 105, baseType: !1859, size: 1024, align: 32, offset: 62464)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 1024, align: 32, elements: !1824)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "time_samples", scope: !1067, file: !1066, line: 107, baseType: !1861, size: 12288, align: 64, offset: 63488)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 12288, align: 64, elements: !1862)
!1862 = !{!1830, !1821}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ts_buffer", scope: !1067, file: !1066, line: 109, baseType: !1006, size: 64, align: 64, offset: 75776)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ts_size", scope: !1067, file: !1066, line: 110, baseType: !1005, size: 32, align: 32, offset: 75840)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "history", scope: !1067, file: !1066, line: 112, baseType: !1866, size: 24576, align: 32, offset: 76032)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 24576, align: 32, elements: !1867)
!1867 = !{!1830, !1868}
!1868 = !DISubrange(count: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1067, file: !1066, line: 113, baseType: !1870, size: 4096, align: 32, offset: 100608)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 4096, align: 32, elements: !1871)
!1871 = !{!1868}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_data", scope: !1067, file: !1066, line: 115, baseType: !1873, size: 2048, align: 32, offset: 104704)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 2048, align: 32, elements: !1874)
!1874 = !{!1838}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_history", scope: !1067, file: !1066, line: 116, baseType: !1876, size: 320, align: 32, offset: 106752)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 320, align: 32, elements: !1877)
!1877 = !{!1046, !1857}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_scale", scope: !1067, file: !1066, line: 117, baseType: !1007, size: 32, align: 32, offset: 107072)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "tonal_scf", scope: !1067, file: !1066, line: 119, baseType: !1880, size: 48, align: 8, offset: 107104)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 48, align: 8, elements: !1829)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "tonal_bounds", scope: !1067, file: !1066, line: 120, baseType: !1882, size: 5120, align: 16, offset: 107152)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1026, size: 5120, align: 16, elements: !1883)
!1883 = !{!1046, !1821, !1857}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "tones", scope: !1067, file: !1066, line: 121, baseType: !1885, size: 65536, align: 8, offset: 112272)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 65536, align: 8, elements: !1895)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCALbrTone", file: !1066, line: 56, baseType: !1887)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCALbrTone", file: !1066, line: 49, size: 128, align: 8, elements: !1888)
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "x_freq", scope: !1887, file: !1066, line: 50, baseType: !1019, size: 8, align: 8)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "f_delt", scope: !1887, file: !1066, line: 51, baseType: !1019, size: 8, align: 8, offset: 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ph_rot", scope: !1887, file: !1066, line: 52, baseType: !1019, size: 8, align: 8, offset: 16)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1887, file: !1066, line: 53, baseType: !1019, size: 8, align: 8, offset: 24)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !1887, file: !1066, line: 54, baseType: !1880, size: 48, align: 8, offset: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "phs", scope: !1887, file: !1066, line: 55, baseType: !1880, size: 48, align: 8, offset: 80)
!1895 = !{!1896}
!1896 = !DISubrange(count: 512)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ntones", scope: !1067, file: !1066, line: 122, baseType: !1004, size: 32, align: 32, offset: 177824)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "imdct", scope: !1067, file: !1066, line: 124, baseType: !1899, size: 896, align: 64, offset: 177856)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1900, line: 41, baseType: !1901)
!1900 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1914, !1915, !1916, !1918, !1919, !1924, !1925, !1931, !1932, !1933, !1939, !1940, !1941}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1901, file: !888, line: 89, baseType: !1004, size: 32, align: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1901, file: !888, line: 90, baseType: !1004, size: 32, align: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1901, file: !888, line: 91, baseType: !1578, size: 64, align: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1901, file: !888, line: 92, baseType: !1907, size: 64, align: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64, align: 64)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1900, line: 39, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1900, line: 37, size: 64, align: 32, elements: !1910)
!1910 = !{!1911, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1909, file: !1900, line: 38, baseType: !1912, size: 32, align: 32)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1900, line: 35, baseType: !1007)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1909, file: !1900, line: 38, baseType: !1912, size: 32, align: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1901, file: !888, line: 93, baseType: !1004, size: 32, align: 32, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1901, file: !888, line: 94, baseType: !1004, size: 32, align: 32, offset: 224)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1901, file: !888, line: 96, baseType: !1917, size: 64, align: 64, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64, align: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1901, file: !888, line: 97, baseType: !1917, size: 64, align: 64, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1901, file: !888, line: 101, baseType: !1920, size: 64, align: 64, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64, align: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{null, !1923, !1907}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1901, file: !888, line: 106, baseType: !1920, size: 64, align: 64, offset: 448)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1901, file: !888, line: 107, baseType: !1926, size: 64, align: 64, offset: 512)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64, align: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{null, !1923, !1917, !1929}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64, align: 64)
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1912)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1901, file: !888, line: 108, baseType: !1926, size: 64, align: 64, offset: 576)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1901, file: !888, line: 109, baseType: !1926, size: 64, align: 64, offset: 640)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1901, file: !888, line: 110, baseType: !1934, size: 64, align: 64, offset: 704)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64, align: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{null, !1923, !1937, !1929}
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64, align: 64)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !1007)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1901, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1901, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1901, file: !888, line: 113, baseType: !1942, size: 64, align: 64, offset: 832)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1067, file: !1066, line: 125, baseType: !1944, size: 64, align: 64, offset: 178752)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64, align: 64)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1946, line: 192, baseType: !1947)
!1946 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1946, line: 24, size: 704, align: 64, elements: !1948)
!1948 = !{!1949, !1955, !1959, !1967, !1968, !1969, !1973, !1974, !1975, !1980, !1984}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1947, file: !1946, line: 38, baseType: !1950, size: 64, align: 64)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64, align: 64)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{null, !1006, !1953, !1953, !1004}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64, align: 64)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1947, file: !1946, line: 54, baseType: !1956, size: 64, align: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64, align: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{null, !1006, !1953, !1007, !1004}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1947, file: !1946, line: 70, baseType: !1960, size: 64, align: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64, align: 64)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{null, !1963, !1965, !1964, !1004}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64, align: 64)
!1964 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64, align: 64)
!1966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1964)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1947, file: !1946, line: 85, baseType: !1956, size: 64, align: 64, offset: 192)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1947, file: !1946, line: 100, baseType: !1960, size: 64, align: 64, offset: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1947, file: !1946, line: 119, baseType: !1970, size: 64, align: 64, offset: 320)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64, align: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !1006, !1953, !1953, !1953, !1004}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1947, file: !1946, line: 137, baseType: !1970, size: 64, align: 64, offset: 384)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1947, file: !1946, line: 154, baseType: !1950, size: 64, align: 64, offset: 448)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1947, file: !1946, line: 164, baseType: !1976, size: 64, align: 64, offset: 512)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64, align: 64)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{null, !1979, !1979, !1004}
!1979 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1006)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1947, file: !1946, line: 175, baseType: !1981, size: 64, align: 64, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64, align: 64)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!1007, !1953, !1953, !1004}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1947, file: !1946, line: 190, baseType: !1985, size: 64, align: 64, offset: 640)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64, align: 64)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{null, !1963, !1965, !1965, !1004}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !1067, file: !1066, line: 126, baseType: !1989, size: 64, align: 64, offset: 178816)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64, align: 64)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCADSPContext", file: !1991, line: 94, baseType: !1992)
!1991 = !DIFile(filename: "libavcodec/dcadsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCADSPContext", file: !1991, line: 30, size: 1280, align: 64, elements: !1993)
!1993 = !{!1994, !2009, !2013, !2018, !2022, !2053, !2057, !2061, !2066, !2070, !2071, !2072, !2073, !2077, !2078, !2082, !2089}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "decode_hf", scope: !1992, file: !1991, line: 31, baseType: !1995, size: 64, align: 64)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64, align: 64)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{null, !1998, !2001, !2003, !2005, !2008, !2008, !2008, !2008}
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64, align: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1016, line: 38, baseType: !1004)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64, align: 64)
!2002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64, align: 64)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 256, align: 8, elements: !1824)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64, align: 64)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 64, align: 32, elements: !2007)
!2007 = !{!1857}
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1352, line: 149, baseType: !1238)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "decode_joint", scope: !1992, file: !1991, line: 38, baseType: !2010, size: 64, align: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64, align: 64)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{null, !1998, !1998, !2001, !2008, !2008, !2008, !2008}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_fir_float", scope: !1992, file: !1991, line: 43, baseType: !2014, size: 128, align: 64, offset: 128)
!2014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2015, size: 128, align: 64, elements: !2007)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64, align: 64)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{null, !1006, !1999, !1953, !2008}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_x96_float", scope: !1992, file: !1991, line: 46, baseType: !2019, size: 64, align: 64, offset: 256)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64, align: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !1006, !1953, !1006, !2008}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "sub_qmf_float", scope: !1992, file: !1991, line: 49, baseType: !2023, size: 128, align: 64, offset: 320)
!2023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2024, size: 128, align: 64, elements: !2007)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64, align: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{null, !2027, !2036, !1006, !1998, !1998, !1006, !1357, !1006, !1953, !2008, !1007}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64, align: 64)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "SynthFilterContext", file: !2029, line: 45, baseType: !2030)
!2029 = !DIFile(filename: "libavcodec/synth_filter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SynthFilterContext", file: !2029, line: 27, size: 256, align: 64, elements: !2031)
!2031 = !{!2032, !2037, !2038, !2052}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_float", scope: !2030, file: !2029, line: 28, baseType: !2033, size: 64, align: 64)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64, align: 64)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{null, !2036, !1006, !1357, !1006, !1953, !1006, !1953, !1007}
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64, align: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_float_64", scope: !2030, file: !2029, line: 33, baseType: !2033, size: 64, align: 64, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_fixed", scope: !2030, file: !2029, line: 37, baseType: !2039, size: 64, align: 64, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64, align: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !2042, !1999, !1357, !1999, !2001, !1999, !2001}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64, align: 64)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCADCTContext", file: !2044, line: 28, baseType: !2045)
!2044 = !DIFile(filename: "libavcodec/dcadct.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCADCTContext", file: !2044, line: 26, size: 128, align: 64, elements: !2046)
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2045, file: !2044, line: 27, baseType: !2048, size: 128, align: 64)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2049, size: 128, align: 64, elements: !2007)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64, align: 64)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !1999, !2001}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "synth_filter_fixed_64", scope: !2030, file: !2029, line: 41, baseType: !2039, size: 64, align: 64, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_fir_fixed", scope: !1992, file: !1991, line: 58, baseType: !2054, size: 64, align: 64, offset: 448)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64, align: 64)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{null, !1999, !1999, !2001, !2008}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_x96_fixed", scope: !1992, file: !1991, line: 61, baseType: !2058, size: 64, align: 64, offset: 512)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64, align: 64)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !1999, !2001, !1999, !2008}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "sub_qmf_fixed", scope: !1992, file: !1991, line: 64, baseType: !2062, size: 128, align: 64, offset: 576)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2063, size: 128, align: 64, elements: !2007)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64, align: 64)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{null, !2027, !2042, !1999, !1998, !1998, !1999, !1357, !1999, !2001, !2008}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "decor", scope: !1992, file: !1991, line: 72, baseType: !2067, size: 64, align: 64, offset: 704)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64, align: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{null, !1999, !2001, !1004, !2008}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_sub_xch", scope: !1992, file: !1991, line: 74, baseType: !2054, size: 64, align: 64, offset: 768)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_sub", scope: !1992, file: !1991, line: 77, baseType: !2067, size: 64, align: 64, offset: 832)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_add", scope: !1992, file: !1991, line: 79, baseType: !2067, size: 64, align: 64, offset: 896)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale", scope: !1992, file: !1991, line: 81, baseType: !2074, size: 64, align: 64, offset: 960)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64, align: 64)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !1999, !1004, !2008}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale_inv", scope: !1992, file: !1991, line: 83, baseType: !2074, size: 64, align: 64, offset: 1024)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "assemble_freq_bands", scope: !1992, file: !1991, line: 85, baseType: !2079, size: 64, align: 64, offset: 1088)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64, align: 64)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !1999, !1999, !1999, !2001, !2008}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_bank", scope: !1992, file: !1991, line: 88, baseType: !2083, size: 64, align: 64, offset: 1152)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64, align: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !2086, !2088, !1953, !2008, !2008}
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64, align: 64)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 128, align: 32, elements: !1227)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_iir", scope: !1992, file: !1991, line: 91, baseType: !2090, size: 64, align: 64, offset: 1216)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64, align: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{null, !1006, !1953, !2093, !2095, !2008}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64, align: 64)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1954, size: 128, align: 32, elements: !1227)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64, align: 64)
!2096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 64, align: 32, elements: !2007)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64, align: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAExssAsset", file: !2099, line: 69, baseType: !2100)
!2099 = !DIFile(filename: "libavcodec/dca_exss.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAExssAsset", file: !2099, line: 29, size: 960, align: 32, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "asset_offset", scope: !2100, file: !2099, line: 30, baseType: !1004, size: 32, align: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "asset_size", scope: !2100, file: !2099, line: 31, baseType: !1004, size: 32, align: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "asset_index", scope: !2100, file: !2099, line: 32, baseType: !1004, size: 32, align: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_bit_res", scope: !2100, file: !2099, line: 34, baseType: !1004, size: 32, align: 32, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "max_sample_rate", scope: !2100, file: !2099, line: 35, baseType: !1004, size: 32, align: 32, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels_total", scope: !2100, file: !2099, line: 36, baseType: !1004, size: 32, align: 32, offset: 160)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "one_to_one_map_ch_to_spkr", scope: !2100, file: !2099, line: 37, baseType: !1004, size: 32, align: 32, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_stereo", scope: !2100, file: !2099, line: 38, baseType: !1004, size: 32, align: 32, offset: 224)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_6ch", scope: !2100, file: !2099, line: 39, baseType: !1004, size: 32, align: 32, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "spkr_mask_enabled", scope: !2100, file: !2099, line: 40, baseType: !1004, size: 32, align: 32, offset: 288)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "spkr_mask", scope: !2100, file: !2099, line: 41, baseType: !1004, size: 32, align: 32, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "representation_type", scope: !2100, file: !2099, line: 42, baseType: !1004, size: 32, align: 32, offset: 352)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "coding_mode", scope: !2100, file: !2099, line: 44, baseType: !1004, size: 32, align: 32, offset: 384)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "extension_mask", scope: !2100, file: !2099, line: 45, baseType: !1004, size: 32, align: 32, offset: 416)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "core_offset", scope: !2100, file: !2099, line: 47, baseType: !1004, size: 32, align: 32, offset: 448)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "core_size", scope: !2100, file: !2099, line: 48, baseType: !1004, size: 32, align: 32, offset: 480)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "xbr_offset", scope: !2100, file: !2099, line: 50, baseType: !1004, size: 32, align: 32, offset: 512)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "xbr_size", scope: !2100, file: !2099, line: 51, baseType: !1004, size: 32, align: 32, offset: 544)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_offset", scope: !2100, file: !2099, line: 53, baseType: !1004, size: 32, align: 32, offset: 576)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_size", scope: !2100, file: !2099, line: 54, baseType: !1004, size: 32, align: 32, offset: 608)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "x96_offset", scope: !2100, file: !2099, line: 56, baseType: !1004, size: 32, align: 32, offset: 640)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "x96_size", scope: !2100, file: !2099, line: 57, baseType: !1004, size: 32, align: 32, offset: 672)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_offset", scope: !2100, file: !2099, line: 59, baseType: !1004, size: 32, align: 32, offset: 704)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "lbr_size", scope: !2100, file: !2099, line: 60, baseType: !1004, size: 32, align: 32, offset: 736)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "xll_offset", scope: !2100, file: !2099, line: 62, baseType: !1004, size: 32, align: 32, offset: 768)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "xll_size", scope: !2100, file: !2099, line: 63, baseType: !1004, size: 32, align: 32, offset: 800)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "xll_sync_present", scope: !2100, file: !2099, line: 64, baseType: !1004, size: 32, align: 32, offset: 832)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "xll_delay_nframes", scope: !2100, file: !2099, line: 65, baseType: !1004, size: 32, align: 32, offset: 864)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "xll_sync_offset", scope: !2100, file: !2099, line: 66, baseType: !1004, size: 32, align: 32, offset: 896)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "hd_stream_id", scope: !2100, file: !2099, line: 68, baseType: !1004, size: 32, align: 32, offset: 928)
!2132 = !DILocalVariable(name: "b", arg: 1, scope: !2133, file: !2134, line: 95, type: !2137)
!2133 = distinct !DISubprogram(name: "bytestream_get_byte", scope: !2134, file: !2134, line: 95, type: !2135, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2134 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!1005, !2137}
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!2138 = !DIExpression()
!2139 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !2140)
!2140 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2151)
!2141 = distinct !DISubprogram(name: "bytestream2_get_byteu", scope: !2134, file: !2134, line: 95, type: !2142, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!1005, !2144}
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64, align: 64)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !2134, line: 35, baseType: !2146)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !2134, line: 33, size: 192, align: 64, elements: !2147)
!2147 = !{!2148, !2149, !2150}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2146, file: !2134, line: 34, baseType: !1017, size: 64, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2146, file: !2134, line: 34, baseType: !1017, size: 64, align: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !2146, file: !2134, line: 34, baseType: !1017, size: 64, align: 64, offset: 128)
!2151 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2154)
!2152 = !DILexicalBlockFile(scope: !2153, file: !2134, discriminator: 2)
!2153 = distinct !DISubprogram(name: "bytestream2_get_byte", scope: !2134, file: !2134, line: 95, type: !2142, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2154 = distinct !DILocation(line: 1259, column: 20, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1258, column: 49)
!2156 = !DILocalVariable(name: "g", arg: 1, scope: !2141, file: !2134, line: 95, type: !2144)
!2157 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !2151)
!2158 = !DILocalVariable(name: "g", arg: 1, scope: !2153, file: !2134, line: 95, type: !2144)
!2159 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !2154)
!2160 = !DILocalVariable(name: "x", arg: 1, scope: !2161, file: !2162, line: 58, type: !1026)
!2161 = distinct !DISubprogram(name: "av_bswap16", scope: !2162, file: !2162, line: 58, type: !2163, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2162 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!1026, !1026}
!2165 = !DILocation(line: 58, column: 98, scope: !2161, inlinedAt: !2166)
!2166 = distinct !DILocation(line: 94, column: 118, scope: !2167, inlinedAt: !2168)
!2167 = distinct !DISubprogram(name: "bytestream_get_be16", scope: !2134, file: !2134, line: 94, type: !2135, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2168 = distinct !DILocation(line: 94, column: 904, scope: !2169, inlinedAt: !2170)
!2169 = distinct !DISubprogram(name: "bytestream2_get_be16u", scope: !2134, file: !2134, line: 94, type: !2142, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2170 = distinct !DILocation(line: 94, column: 1122, scope: !2171, inlinedAt: !2173)
!2171 = !DILexicalBlockFile(scope: !2172, file: !2134, discriminator: 2)
!2172 = distinct !DISubprogram(name: "bytestream2_get_be16", scope: !2134, file: !2134, line: 94, type: !2142, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2173 = distinct !DILocation(line: 1260, column: 41, scope: !2174)
!2174 = !DILexicalBlockFile(scope: !2155, file: !898, discriminator: 1)
!2175 = !DILocalVariable(name: "b", arg: 1, scope: !2167, file: !2134, line: 94, type: !2137)
!2176 = !DILocation(line: 94, column: 95, scope: !2167, inlinedAt: !2168)
!2177 = !DILocalVariable(name: "g", arg: 1, scope: !2169, file: !2134, line: 94, type: !2144)
!2178 = !DILocation(line: 94, column: 892, scope: !2169, inlinedAt: !2170)
!2179 = !DILocalVariable(name: "g", arg: 1, scope: !2172, file: !2134, line: 94, type: !2144)
!2180 = !DILocation(line: 94, column: 1034, scope: !2172, inlinedAt: !2173)
!2181 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !2182)
!2182 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2183)
!2183 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2184)
!2184 = distinct !DILocation(line: 1260, column: 69, scope: !2185)
!2185 = !DILexicalBlockFile(scope: !2155, file: !898, discriminator: 2)
!2186 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !2183)
!2187 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !2184)
!2188 = !DILocalVariable(name: "g", arg: 1, scope: !2189, file: !2134, line: 154, type: !2144)
!2189 = distinct !DISubprogram(name: "bytestream2_get_bytes_left", scope: !2134, file: !2134, line: 154, type: !2142, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2190 = !DILocation(line: 154, column: 102, scope: !2189, inlinedAt: !2191)
!2191 = distinct !DILocation(line: 1263, column: 25, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2155, file: !898, line: 1263, column: 13)
!2193 = !DILocation(line: 154, column: 102, scope: !2189, inlinedAt: !2194)
!2194 = distinct !DILocation(line: 1264, column: 25, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2192, file: !898, line: 1263, column: 58)
!2196 = !DILocalVariable(name: "g", arg: 1, scope: !2197, file: !2134, line: 164, type: !2144)
!2197 = distinct !DISubprogram(name: "bytestream2_skip", scope: !2134, file: !2134, line: 164, type: !2198, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !2144, !1005}
!2200 = !DILocation(line: 164, column: 84, scope: !2197, inlinedAt: !2201)
!2201 = distinct !DILocation(line: 1339, column: 9, scope: !2155)
!2202 = !DILocalVariable(name: "size", arg: 2, scope: !2197, file: !2134, line: 165, type: !1005)
!2203 = !DILocation(line: 165, column: 60, scope: !2197, inlinedAt: !2201)
!2204 = !DILocation(line: 154, column: 102, scope: !2189, inlinedAt: !2205)
!2205 = distinct !DILocation(line: 1258, column: 12, scope: !2206)
!2206 = !DILexicalBlockFile(scope: !1061, file: !898, discriminator: 1)
!2207 = !DILocation(line: 164, column: 84, scope: !2197, inlinedAt: !2208)
!2208 = distinct !DILocation(line: 1214, column: 13, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2210, file: !898, line: 1213, column: 16)
!2210 = distinct !DILexicalBlock(scope: !2211, file: !898, line: 1201, column: 13)
!2211 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1199, column: 30)
!2212 = !DILocation(line: 165, column: 60, scope: !2197, inlinedAt: !2208)
!2213 = !DILocation(line: 58, column: 98, scope: !2161, inlinedAt: !2214)
!2214 = distinct !DILocation(line: 94, column: 118, scope: !2167, inlinedAt: !2215)
!2215 = distinct !DILocation(line: 94, column: 904, scope: !2169, inlinedAt: !2216)
!2216 = distinct !DILocation(line: 94, column: 1122, scope: !2171, inlinedAt: !2217)
!2217 = distinct !DILocation(line: 1202, column: 28, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2210, file: !898, line: 1201, column: 61)
!2219 = !DILocation(line: 94, column: 95, scope: !2167, inlinedAt: !2215)
!2220 = !DILocation(line: 94, column: 892, scope: !2169, inlinedAt: !2216)
!2221 = !DILocation(line: 94, column: 1034, scope: !2172, inlinedAt: !2217)
!2222 = !DILocalVariable(name: "g", arg: 1, scope: !2223, file: !2134, line: 133, type: !2144)
!2223 = distinct !DISubprogram(name: "bytestream2_init", scope: !2134, file: !2134, line: 133, type: !2224, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{null, !2144, !1017, !1004}
!2226 = !DILocation(line: 133, column: 84, scope: !2223, inlinedAt: !2227)
!2227 = distinct !DILocation(line: 1197, column: 5, scope: !1061)
!2228 = !DILocalVariable(name: "buf", arg: 2, scope: !2223, file: !2134, line: 134, type: !1017)
!2229 = !DILocation(line: 134, column: 62, scope: !2223, inlinedAt: !2227)
!2230 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2223, file: !2134, line: 135, type: !1004)
!2231 = !DILocation(line: 135, column: 51, scope: !2223, inlinedAt: !2227)
!2232 = !DILocation(line: 154, column: 102, scope: !2189, inlinedAt: !2233)
!2233 = distinct !DILocation(line: 1191, column: 21, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !898, line: 1190, column: 54)
!2235 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1190, column: 9)
!2236 = !DILocation(line: 154, column: 102, scope: !2189, inlinedAt: !2237)
!2237 = distinct !DILocation(line: 1190, column: 21, scope: !2235)
!2238 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !2239)
!2239 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2240)
!2240 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2241)
!2241 = distinct !DILocation(line: 1188, column: 65, scope: !2242)
!2242 = !DILexicalBlockFile(scope: !1061, file: !898, discriminator: 2)
!2243 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !2240)
!2244 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !2241)
!2245 = !DILocation(line: 58, column: 98, scope: !2161, inlinedAt: !2246)
!2246 = distinct !DILocation(line: 94, column: 118, scope: !2167, inlinedAt: !2247)
!2247 = distinct !DILocation(line: 94, column: 904, scope: !2169, inlinedAt: !2248)
!2248 = distinct !DILocation(line: 94, column: 1122, scope: !2171, inlinedAt: !2249)
!2249 = distinct !DILocation(line: 1188, column: 37, scope: !2206)
!2250 = !DILocation(line: 94, column: 95, scope: !2167, inlinedAt: !2247)
!2251 = !DILocation(line: 94, column: 892, scope: !2169, inlinedAt: !2248)
!2252 = !DILocation(line: 94, column: 1034, scope: !2172, inlinedAt: !2249)
!2253 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !2254)
!2254 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2255)
!2255 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2256)
!2256 = distinct !DILocation(line: 1187, column: 16, scope: !1061)
!2257 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !2255)
!2258 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !2256)
!2259 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !2260)
!2260 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2261)
!2261 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2262)
!2262 = distinct !DILocation(line: 1168, column: 13, scope: !1061)
!2263 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !2261)
!2264 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !2262)
!2265 = !DILocalVariable(name: "x", arg: 1, scope: !2266, file: !2162, line: 66, type: !1015)
!2266 = distinct !DISubprogram(name: "av_bswap32", scope: !2162, file: !2162, line: 66, type: !2267, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!1015, !1015}
!2269 = !DILocation(line: 66, column: 98, scope: !2266, inlinedAt: !2270)
!2270 = distinct !DILocation(line: 92, column: 118, scope: !2271, inlinedAt: !2272)
!2271 = distinct !DISubprogram(name: "bytestream_get_be32", scope: !2134, file: !2134, line: 92, type: !2135, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2272 = distinct !DILocation(line: 92, column: 904, scope: !2273, inlinedAt: !2274)
!2273 = distinct !DISubprogram(name: "bytestream2_get_be32u", scope: !2134, file: !2134, line: 92, type: !2142, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2274 = distinct !DILocation(line: 92, column: 1122, scope: !2275, inlinedAt: !2277)
!2275 = !DILexicalBlockFile(scope: !2276, file: !2134, discriminator: 2)
!2276 = distinct !DISubprogram(name: "bytestream2_get_be32", scope: !2134, file: !2134, line: 92, type: !2142, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!2277 = distinct !DILocation(line: 1162, column: 9, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1162, column: 9)
!2279 = !DILocalVariable(name: "b", arg: 1, scope: !2271, file: !2134, line: 92, type: !2137)
!2280 = !DILocation(line: 92, column: 95, scope: !2271, inlinedAt: !2272)
!2281 = !DILocalVariable(name: "g", arg: 1, scope: !2273, file: !2134, line: 92, type: !2144)
!2282 = !DILocation(line: 92, column: 892, scope: !2273, inlinedAt: !2274)
!2283 = !DILocalVariable(name: "g", arg: 1, scope: !2276, file: !2134, line: 92, type: !2144)
!2284 = !DILocation(line: 92, column: 1034, scope: !2276, inlinedAt: !2277)
!2285 = !DILocation(line: 133, column: 84, scope: !2223, inlinedAt: !2286)
!2286 = distinct !DILocation(line: 1159, column: 5, scope: !1061)
!2287 = !DILocation(line: 134, column: 62, scope: !2223, inlinedAt: !2286)
!2288 = !DILocation(line: 135, column: 51, scope: !2223, inlinedAt: !2286)
!2289 = !DILocalVariable(name: "s", arg: 1, scope: !1061, file: !898, line: 1143, type: !1064)
!2290 = !DILocation(line: 1143, column: 37, scope: !1061)
!2291 = !DILocalVariable(name: "data", arg: 2, scope: !1061, file: !898, line: 1143, type: !1195)
!2292 = !DILocation(line: 1143, column: 49, scope: !1061)
!2293 = !DILocalVariable(name: "asset", arg: 3, scope: !1061, file: !898, line: 1143, type: !2097)
!2294 = !DILocation(line: 1143, column: 69, scope: !1061)
!2295 = !DILocalVariable(name: "chunk", scope: !1061, file: !898, line: 1153, type: !2296)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1061, file: !898, line: 1145, size: 2432, align: 64, elements: !2297)
!2297 = !{!2298, !2305, !2306, !2309, !2312, !2313, !2314}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "lfe", scope: !2296, file: !898, line: 1146, baseType: !2299, size: 128, align: 64)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "LBRChunk", file: !898, line: 83, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LBRChunk", file: !898, line: 80, size: 128, align: 64, elements: !2301)
!2301 = !{!2302, !2303, !2304}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2300, file: !898, line: 81, baseType: !1004, size: 32, align: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2300, file: !898, line: 81, baseType: !1004, size: 32, align: 32, offset: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2300, file: !898, line: 82, baseType: !1017, size: 64, align: 64, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "tonal", scope: !2296, file: !898, line: 1147, baseType: !2299, size: 128, align: 64, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tonal_grp", scope: !2296, file: !898, line: 1148, baseType: !2307, size: 640, align: 64, offset: 256)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2299, size: 640, align: 64, elements: !2308)
!2308 = !{!1046}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "grid1", scope: !2296, file: !898, line: 1149, baseType: !2310, size: 384, align: 64, offset: 896)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2299, size: 384, align: 64, elements: !2311)
!2311 = !{!1820}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "hr_grid", scope: !2296, file: !898, line: 1150, baseType: !2310, size: 384, align: 64, offset: 1280)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ts1", scope: !2296, file: !898, line: 1151, baseType: !2310, size: 384, align: 64, offset: 1664)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ts2", scope: !2296, file: !898, line: 1152, baseType: !2310, size: 384, align: 64, offset: 2048)
!2315 = !DILocation(line: 1153, column: 7, scope: !1061)
!2316 = !DILocalVariable(name: "gb", scope: !1061, file: !898, line: 1155, type: !2145)
!2317 = !DILocation(line: 1155, column: 20, scope: !1061)
!2318 = !DILocalVariable(name: "i", scope: !1061, file: !898, line: 1157, type: !1004)
!2319 = !DILocation(line: 1157, column: 9, scope: !1061)
!2320 = !DILocalVariable(name: "ch", scope: !1061, file: !898, line: 1157, type: !1004)
!2321 = !DILocation(line: 1157, column: 12, scope: !1061)
!2322 = !DILocalVariable(name: "sb", scope: !1061, file: !898, line: 1157, type: !1004)
!2323 = !DILocation(line: 1157, column: 16, scope: !1061)
!2324 = !DILocalVariable(name: "sf", scope: !1061, file: !898, line: 1157, type: !1004)
!2325 = !DILocation(line: 1157, column: 20, scope: !1061)
!2326 = !DILocalVariable(name: "ret", scope: !1061, file: !898, line: 1157, type: !1004)
!2327 = !DILocation(line: 1157, column: 24, scope: !1061)
!2328 = !DILocalVariable(name: "group", scope: !1061, file: !898, line: 1157, type: !1004)
!2329 = !DILocation(line: 1157, column: 29, scope: !1061)
!2330 = !DILocalVariable(name: "chunk_id", scope: !1061, file: !898, line: 1157, type: !1004)
!2331 = !DILocation(line: 1157, column: 36, scope: !1061)
!2332 = !DILocalVariable(name: "chunk_len", scope: !1061, file: !898, line: 1157, type: !1004)
!2333 = !DILocation(line: 1157, column: 46, scope: !1061)
!2334 = !DILocation(line: 1159, column: 27, scope: !1061)
!2335 = !DILocation(line: 1159, column: 34, scope: !1061)
!2336 = !DILocation(line: 1159, column: 41, scope: !1061)
!2337 = !DILocation(line: 1159, column: 32, scope: !1061)
!2338 = !DILocation(line: 1159, column: 53, scope: !1061)
!2339 = !DILocation(line: 1159, column: 60, scope: !1061)
!2340 = !DILocation(line: 1159, column: 5, scope: !1061)
!2341 = !DILocation(line: 137, column: 16, scope: !2342, inlinedAt: !2286)
!2342 = !DILexicalBlockFile(scope: !2343, file: !2134, discriminator: 1)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !2134, line: 137, column: 14)
!2344 = distinct !DILexicalBlock(scope: !2223, file: !2134, line: 137, column: 8)
!2345 = !DILocation(line: 137, column: 25, scope: !2342, inlinedAt: !2286)
!2346 = !DILocation(line: 137, column: 14, scope: !2342, inlinedAt: !2286)
!2347 = !DILocation(line: 137, column: 34, scope: !2348, inlinedAt: !2286)
!2348 = !DILexicalBlockFile(scope: !2349, file: !2134, discriminator: 2)
!2349 = distinct !DILexicalBlock(scope: !2343, file: !2134, line: 137, column: 32)
!2350 = !DILocation(line: 137, column: 93, scope: !2351, inlinedAt: !2286)
!2351 = !DILexicalBlockFile(scope: !2348, file: !2134, discriminator: 4)
!2352 = !DILocation(line: 137, column: 93, scope: !2348, inlinedAt: !2286)
!2353 = !DILocation(line: 138, column: 17, scope: !2223, inlinedAt: !2286)
!2354 = !DILocation(line: 138, column: 5, scope: !2223, inlinedAt: !2286)
!2355 = !DILocation(line: 138, column: 8, scope: !2223, inlinedAt: !2286)
!2356 = !DILocation(line: 138, column: 15, scope: !2223, inlinedAt: !2286)
!2357 = !DILocation(line: 139, column: 23, scope: !2223, inlinedAt: !2286)
!2358 = !DILocation(line: 139, column: 5, scope: !2223, inlinedAt: !2286)
!2359 = !DILocation(line: 139, column: 8, scope: !2223, inlinedAt: !2286)
!2360 = !DILocation(line: 139, column: 21, scope: !2223, inlinedAt: !2286)
!2361 = !DILocation(line: 140, column: 21, scope: !2223, inlinedAt: !2286)
!2362 = !DILocation(line: 140, column: 27, scope: !2223, inlinedAt: !2286)
!2363 = !DILocation(line: 140, column: 25, scope: !2223, inlinedAt: !2286)
!2364 = !DILocation(line: 140, column: 5, scope: !2223, inlinedAt: !2286)
!2365 = !DILocation(line: 140, column: 8, scope: !2223, inlinedAt: !2286)
!2366 = !DILocation(line: 140, column: 19, scope: !2223, inlinedAt: !2286)
!2367 = !DILocation(line: 1162, column: 9, scope: !2278)
!2368 = !DILocation(line: 92, column: 1043, scope: !2369, inlinedAt: !2277)
!2369 = distinct !DILexicalBlock(scope: !2276, file: !2134, line: 92, column: 1043)
!2370 = !DILocation(line: 92, column: 1046, scope: !2369, inlinedAt: !2277)
!2371 = !DILocation(line: 92, column: 1059, scope: !2369, inlinedAt: !2277)
!2372 = !DILocation(line: 92, column: 1062, scope: !2369, inlinedAt: !2277)
!2373 = !DILocation(line: 92, column: 1057, scope: !2369, inlinedAt: !2277)
!2374 = !DILocation(line: 92, column: 1069, scope: !2369, inlinedAt: !2277)
!2375 = !DILocation(line: 92, column: 1043, scope: !2276, inlinedAt: !2277)
!2376 = !DILocation(line: 92, column: 1088, scope: !2377, inlinedAt: !2277)
!2377 = !DILexicalBlockFile(scope: !2378, file: !2134, discriminator: 1)
!2378 = distinct !DILexicalBlock(scope: !2369, file: !2134, line: 92, column: 1074)
!2379 = !DILocation(line: 92, column: 1091, scope: !2377, inlinedAt: !2277)
!2380 = !DILocation(line: 92, column: 1076, scope: !2377, inlinedAt: !2277)
!2381 = !DILocation(line: 92, column: 1079, scope: !2377, inlinedAt: !2277)
!2382 = !DILocation(line: 92, column: 1086, scope: !2377, inlinedAt: !2277)
!2383 = !DILocation(line: 92, column: 1103, scope: !2377, inlinedAt: !2277)
!2384 = !DILocation(line: 92, column: 1144, scope: !2275, inlinedAt: !2277)
!2385 = !DILocation(line: 92, column: 1122, scope: !2275, inlinedAt: !2277)
!2386 = !DILocation(line: 92, column: 925, scope: !2273, inlinedAt: !2274)
!2387 = !DILocation(line: 92, column: 928, scope: !2273, inlinedAt: !2274)
!2388 = !DILocation(line: 92, column: 904, scope: !2273, inlinedAt: !2274)
!2389 = !DILocation(line: 92, column: 102, scope: !2271, inlinedAt: !2272)
!2390 = !DILocation(line: 92, column: 105, scope: !2271, inlinedAt: !2272)
!2391 = !DILocation(line: 92, column: 162, scope: !2271, inlinedAt: !2272)
!2392 = !DILocation(line: 92, column: 161, scope: !2271, inlinedAt: !2272)
!2393 = !DILocation(line: 92, column: 164, scope: !2271, inlinedAt: !2272)
!2394 = !DILocation(line: 92, column: 171, scope: !2271, inlinedAt: !2272)
!2395 = !DILocation(line: 92, column: 118, scope: !2271, inlinedAt: !2272)
!2396 = !DILocation(line: 68, column: 16, scope: !2266, inlinedAt: !2270)
!2397 = !DILocation(line: 68, column: 19, scope: !2266, inlinedAt: !2270)
!2398 = !DILocation(line: 68, column: 24, scope: !2266, inlinedAt: !2270)
!2399 = !DILocation(line: 68, column: 38, scope: !2266, inlinedAt: !2270)
!2400 = !DILocation(line: 68, column: 41, scope: !2266, inlinedAt: !2270)
!2401 = !DILocation(line: 68, column: 46, scope: !2266, inlinedAt: !2270)
!2402 = !DILocation(line: 68, column: 34, scope: !2266, inlinedAt: !2270)
!2403 = !DILocation(line: 68, column: 57, scope: !2266, inlinedAt: !2270)
!2404 = !DILocation(line: 68, column: 69, scope: !2266, inlinedAt: !2270)
!2405 = !DILocation(line: 68, column: 72, scope: !2266, inlinedAt: !2270)
!2406 = !DILocation(line: 68, column: 79, scope: !2266, inlinedAt: !2270)
!2407 = !DILocation(line: 68, column: 84, scope: !2266, inlinedAt: !2270)
!2408 = !DILocation(line: 68, column: 99, scope: !2266, inlinedAt: !2270)
!2409 = !DILocation(line: 68, column: 102, scope: !2266, inlinedAt: !2270)
!2410 = !DILocation(line: 68, column: 109, scope: !2266, inlinedAt: !2270)
!2411 = !DILocation(line: 68, column: 114, scope: !2266, inlinedAt: !2270)
!2412 = !DILocation(line: 68, column: 94, scope: !2266, inlinedAt: !2270)
!2413 = !DILocation(line: 68, column: 63, scope: !2266, inlinedAt: !2270)
!2414 = !DILocation(line: 92, column: 1115, scope: !2275, inlinedAt: !2277)
!2415 = !DILocation(line: 92, column: 1148, scope: !2416, inlinedAt: !2277)
!2416 = !DILexicalBlockFile(scope: !2276, file: !2134, discriminator: 3)
!2417 = !DILocation(line: 1162, column: 35, scope: !2278)
!2418 = !DILocation(line: 1162, column: 9, scope: !1061)
!2419 = !DILocation(line: 1163, column: 16, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2278, file: !898, line: 1162, column: 51)
!2421 = !DILocation(line: 1163, column: 19, scope: !2420)
!2422 = !DILocation(line: 1163, column: 9, scope: !2420)
!2423 = !DILocation(line: 1164, column: 9, scope: !2420)
!2424 = !DILocation(line: 1168, column: 13, scope: !1061)
!2425 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !2262)
!2426 = distinct !DILexicalBlock(scope: !2153, file: !2134, line: 95, column: 994)
!2427 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !2262)
!2428 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !2262)
!2429 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !2262)
!2430 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !2262)
!2431 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !2262)
!2432 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !2262)
!2433 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !2262)
!2434 = !DILexicalBlockFile(scope: !2435, file: !2134, discriminator: 1)
!2435 = distinct !DILexicalBlock(scope: !2426, file: !2134, line: 95, column: 1025)
!2436 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !2262)
!2437 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !2262)
!2438 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !2262)
!2439 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !2262)
!2440 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !2262)
!2441 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !2262)
!2442 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2262)
!2443 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !2261)
!2444 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !2261)
!2445 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2261)
!2446 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !2260)
!2447 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !2260)
!2448 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !2260)
!2449 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !2260)
!2450 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !2260)
!2451 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !2260)
!2452 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !2260)
!2453 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !2262)
!2454 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !2262)
!2455 = !DILexicalBlockFile(scope: !2153, file: !2134, discriminator: 3)
!2456 = !DILocation(line: 1168, column: 5, scope: !1061)
!2457 = !DILocation(line: 1170, column: 14, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2459, file: !898, line: 1170, column: 13)
!2459 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1168, column: 40)
!2460 = !DILocation(line: 1170, column: 17, scope: !2458)
!2461 = !DILocation(line: 1170, column: 13, scope: !2459)
!2462 = !DILocation(line: 1171, column: 20, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2458, file: !898, line: 1170, column: 30)
!2464 = !DILocation(line: 1171, column: 23, scope: !2463)
!2465 = !DILocation(line: 1171, column: 13, scope: !2463)
!2466 = !DILocation(line: 1172, column: 13, scope: !2463)
!2467 = !DILocation(line: 1174, column: 9, scope: !2459)
!2468 = !DILocation(line: 1176, column: 39, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2459, file: !898, line: 1176, column: 13)
!2470 = !DILocation(line: 1176, column: 20, scope: !2469)
!2471 = !DILocation(line: 1176, column: 18, scope: !2469)
!2472 = !DILocation(line: 1176, column: 48, scope: !2469)
!2473 = !DILocation(line: 1176, column: 13, scope: !2459)
!2474 = !DILocation(line: 1177, column: 13, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2469, file: !898, line: 1176, column: 53)
!2476 = !DILocation(line: 1177, column: 16, scope: !2475)
!2477 = !DILocation(line: 1177, column: 28, scope: !2475)
!2478 = !DILocation(line: 1178, column: 20, scope: !2475)
!2479 = !DILocation(line: 1178, column: 13, scope: !2475)
!2480 = !DILocation(line: 1180, column: 9, scope: !2459)
!2481 = !DILocation(line: 1182, column: 16, scope: !2459)
!2482 = !DILocation(line: 1182, column: 19, scope: !2459)
!2483 = !DILocation(line: 1182, column: 9, scope: !2459)
!2484 = !DILocation(line: 1183, column: 9, scope: !2459)
!2485 = !DILocation(line: 1187, column: 16, scope: !1061)
!2486 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !2256)
!2487 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !2256)
!2488 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !2256)
!2489 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !2256)
!2490 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !2256)
!2491 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !2256)
!2492 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !2256)
!2493 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !2256)
!2494 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !2256)
!2495 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !2256)
!2496 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !2256)
!2497 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !2256)
!2498 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !2256)
!2499 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !2256)
!2500 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2256)
!2501 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !2255)
!2502 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !2255)
!2503 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2255)
!2504 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !2254)
!2505 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !2254)
!2506 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !2254)
!2507 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !2254)
!2508 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !2254)
!2509 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !2254)
!2510 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !2254)
!2511 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !2256)
!2512 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !2256)
!2513 = !DILocation(line: 1187, column: 14, scope: !1061)
!2514 = !DILocation(line: 1188, column: 18, scope: !1061)
!2515 = !DILocation(line: 1188, column: 27, scope: !1061)
!2516 = !DILocation(line: 1188, column: 17, scope: !1061)
!2517 = !DILocation(line: 1188, column: 37, scope: !2206)
!2518 = !DILocation(line: 94, column: 1043, scope: !2519, inlinedAt: !2249)
!2519 = distinct !DILexicalBlock(scope: !2172, file: !2134, line: 94, column: 1043)
!2520 = !DILocation(line: 94, column: 1046, scope: !2519, inlinedAt: !2249)
!2521 = !DILocation(line: 94, column: 1059, scope: !2519, inlinedAt: !2249)
!2522 = !DILocation(line: 94, column: 1062, scope: !2519, inlinedAt: !2249)
!2523 = !DILocation(line: 94, column: 1057, scope: !2519, inlinedAt: !2249)
!2524 = !DILocation(line: 94, column: 1069, scope: !2519, inlinedAt: !2249)
!2525 = !DILocation(line: 94, column: 1043, scope: !2172, inlinedAt: !2249)
!2526 = !DILocation(line: 94, column: 1088, scope: !2527, inlinedAt: !2249)
!2527 = !DILexicalBlockFile(scope: !2528, file: !2134, discriminator: 1)
!2528 = distinct !DILexicalBlock(scope: !2519, file: !2134, line: 94, column: 1074)
!2529 = !DILocation(line: 94, column: 1091, scope: !2527, inlinedAt: !2249)
!2530 = !DILocation(line: 94, column: 1076, scope: !2527, inlinedAt: !2249)
!2531 = !DILocation(line: 94, column: 1079, scope: !2527, inlinedAt: !2249)
!2532 = !DILocation(line: 94, column: 1086, scope: !2527, inlinedAt: !2249)
!2533 = !DILocation(line: 94, column: 1103, scope: !2527, inlinedAt: !2249)
!2534 = !DILocation(line: 94, column: 1144, scope: !2171, inlinedAt: !2249)
!2535 = !DILocation(line: 94, column: 1122, scope: !2171, inlinedAt: !2249)
!2536 = !DILocation(line: 94, column: 925, scope: !2169, inlinedAt: !2248)
!2537 = !DILocation(line: 94, column: 928, scope: !2169, inlinedAt: !2248)
!2538 = !DILocation(line: 94, column: 904, scope: !2169, inlinedAt: !2248)
!2539 = !DILocation(line: 94, column: 102, scope: !2167, inlinedAt: !2247)
!2540 = !DILocation(line: 94, column: 105, scope: !2167, inlinedAt: !2247)
!2541 = !DILocation(line: 94, column: 162, scope: !2167, inlinedAt: !2247)
!2542 = !DILocation(line: 94, column: 161, scope: !2167, inlinedAt: !2247)
!2543 = !DILocation(line: 94, column: 164, scope: !2167, inlinedAt: !2247)
!2544 = !DILocation(line: 94, column: 171, scope: !2167, inlinedAt: !2247)
!2545 = !DILocation(line: 94, column: 118, scope: !2167, inlinedAt: !2247)
!2546 = !DILocation(line: 60, column: 9, scope: !2161, inlinedAt: !2246)
!2547 = !DILocation(line: 60, column: 10, scope: !2161, inlinedAt: !2246)
!2548 = !DILocation(line: 60, column: 18, scope: !2161, inlinedAt: !2246)
!2549 = !DILocation(line: 60, column: 19, scope: !2161, inlinedAt: !2246)
!2550 = !DILocation(line: 60, column: 15, scope: !2161, inlinedAt: !2246)
!2551 = !DILocation(line: 60, column: 8, scope: !2161, inlinedAt: !2246)
!2552 = !DILocation(line: 60, column: 6, scope: !2161, inlinedAt: !2246)
!2553 = !DILocation(line: 61, column: 12, scope: !2161, inlinedAt: !2246)
!2554 = !DILocation(line: 94, column: 1115, scope: !2171, inlinedAt: !2249)
!2555 = !DILocation(line: 94, column: 1148, scope: !2556, inlinedAt: !2249)
!2556 = !DILexicalBlockFile(scope: !2172, file: !2134, discriminator: 3)
!2557 = !DILocation(line: 1188, column: 17, scope: !2206)
!2558 = !DILocation(line: 1188, column: 65, scope: !2242)
!2559 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !2241)
!2560 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !2241)
!2561 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !2241)
!2562 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !2241)
!2563 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !2241)
!2564 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !2241)
!2565 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !2241)
!2566 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !2241)
!2567 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !2241)
!2568 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !2241)
!2569 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !2241)
!2570 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !2241)
!2571 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !2241)
!2572 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !2241)
!2573 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2241)
!2574 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !2240)
!2575 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !2240)
!2576 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2240)
!2577 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !2239)
!2578 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !2239)
!2579 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !2239)
!2580 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !2239)
!2581 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !2239)
!2582 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !2239)
!2583 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !2239)
!2584 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !2241)
!2585 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !2241)
!2586 = !DILocation(line: 1188, column: 17, scope: !2242)
!2587 = !DILocation(line: 1188, column: 17, scope: !2588)
!2588 = !DILexicalBlockFile(scope: !1061, file: !898, discriminator: 3)
!2589 = !DILocation(line: 1188, column: 15, scope: !2588)
!2590 = !DILocation(line: 1190, column: 9, scope: !2235)
!2591 = !DILocation(line: 1190, column: 21, scope: !2235)
!2592 = !DILocation(line: 156, column: 12, scope: !2189, inlinedAt: !2237)
!2593 = !DILocation(line: 156, column: 15, scope: !2189, inlinedAt: !2237)
!2594 = !DILocation(line: 156, column: 28, scope: !2189, inlinedAt: !2237)
!2595 = !DILocation(line: 156, column: 31, scope: !2189, inlinedAt: !2237)
!2596 = !DILocation(line: 156, column: 26, scope: !2189, inlinedAt: !2237)
!2597 = !DILocation(line: 1190, column: 19, scope: !2235)
!2598 = !DILocation(line: 1190, column: 9, scope: !1061)
!2599 = !DILocation(line: 1191, column: 21, scope: !2234)
!2600 = !DILocation(line: 156, column: 12, scope: !2189, inlinedAt: !2233)
!2601 = !DILocation(line: 156, column: 15, scope: !2189, inlinedAt: !2233)
!2602 = !DILocation(line: 156, column: 28, scope: !2189, inlinedAt: !2233)
!2603 = !DILocation(line: 156, column: 31, scope: !2189, inlinedAt: !2233)
!2604 = !DILocation(line: 156, column: 26, scope: !2189, inlinedAt: !2233)
!2605 = !DILocation(line: 1191, column: 19, scope: !2234)
!2606 = !DILocation(line: 1192, column: 16, scope: !2234)
!2607 = !DILocation(line: 1192, column: 19, scope: !2234)
!2608 = !DILocation(line: 1192, column: 9, scope: !2234)
!2609 = !DILocation(line: 1193, column: 13, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2234, file: !898, line: 1193, column: 13)
!2611 = !DILocation(line: 1193, column: 16, scope: !2610)
!2612 = !DILocation(line: 1193, column: 23, scope: !2610)
!2613 = !DILocation(line: 1193, column: 39, scope: !2610)
!2614 = !DILocation(line: 1193, column: 13, scope: !2234)
!2615 = !DILocation(line: 1194, column: 13, scope: !2610)
!2616 = !DILocation(line: 1195, column: 5, scope: !2234)
!2617 = !DILocation(line: 1197, column: 30, scope: !1061)
!2618 = !DILocation(line: 1197, column: 38, scope: !1061)
!2619 = !DILocation(line: 1197, column: 5, scope: !1061)
!2620 = !DILocation(line: 137, column: 16, scope: !2342, inlinedAt: !2227)
!2621 = !DILocation(line: 137, column: 25, scope: !2342, inlinedAt: !2227)
!2622 = !DILocation(line: 137, column: 14, scope: !2342, inlinedAt: !2227)
!2623 = !DILocation(line: 137, column: 34, scope: !2348, inlinedAt: !2227)
!2624 = !DILocation(line: 137, column: 93, scope: !2351, inlinedAt: !2227)
!2625 = !DILocation(line: 137, column: 93, scope: !2348, inlinedAt: !2227)
!2626 = !DILocation(line: 138, column: 17, scope: !2223, inlinedAt: !2227)
!2627 = !DILocation(line: 138, column: 5, scope: !2223, inlinedAt: !2227)
!2628 = !DILocation(line: 138, column: 8, scope: !2223, inlinedAt: !2227)
!2629 = !DILocation(line: 138, column: 15, scope: !2223, inlinedAt: !2227)
!2630 = !DILocation(line: 139, column: 23, scope: !2223, inlinedAt: !2227)
!2631 = !DILocation(line: 139, column: 5, scope: !2223, inlinedAt: !2227)
!2632 = !DILocation(line: 139, column: 8, scope: !2223, inlinedAt: !2227)
!2633 = !DILocation(line: 139, column: 21, scope: !2223, inlinedAt: !2227)
!2634 = !DILocation(line: 140, column: 21, scope: !2223, inlinedAt: !2227)
!2635 = !DILocation(line: 140, column: 27, scope: !2223, inlinedAt: !2227)
!2636 = !DILocation(line: 140, column: 25, scope: !2223, inlinedAt: !2227)
!2637 = !DILocation(line: 140, column: 5, scope: !2223, inlinedAt: !2227)
!2638 = !DILocation(line: 140, column: 8, scope: !2223, inlinedAt: !2227)
!2639 = !DILocation(line: 140, column: 19, scope: !2223, inlinedAt: !2227)
!2640 = !DILocation(line: 1199, column: 13, scope: !1061)
!2641 = !DILocation(line: 1199, column: 22, scope: !1061)
!2642 = !DILocation(line: 1199, column: 5, scope: !1061)
!2643 = !DILocation(line: 1201, column: 13, scope: !2210)
!2644 = !DILocation(line: 1201, column: 16, scope: !2210)
!2645 = !DILocation(line: 1201, column: 23, scope: !2210)
!2646 = !DILocation(line: 1201, column: 39, scope: !2210)
!2647 = !DILocation(line: 1201, column: 13, scope: !2211)
!2648 = !DILocalVariable(name: "checksum", scope: !2218, file: !898, line: 1202, type: !1004)
!2649 = !DILocation(line: 1202, column: 17, scope: !2218)
!2650 = !DILocation(line: 1202, column: 28, scope: !2218)
!2651 = !DILocation(line: 94, column: 1043, scope: !2519, inlinedAt: !2217)
!2652 = !DILocation(line: 94, column: 1046, scope: !2519, inlinedAt: !2217)
!2653 = !DILocation(line: 94, column: 1059, scope: !2519, inlinedAt: !2217)
!2654 = !DILocation(line: 94, column: 1062, scope: !2519, inlinedAt: !2217)
!2655 = !DILocation(line: 94, column: 1057, scope: !2519, inlinedAt: !2217)
!2656 = !DILocation(line: 94, column: 1069, scope: !2519, inlinedAt: !2217)
!2657 = !DILocation(line: 94, column: 1043, scope: !2172, inlinedAt: !2217)
!2658 = !DILocation(line: 94, column: 1088, scope: !2527, inlinedAt: !2217)
!2659 = !DILocation(line: 94, column: 1091, scope: !2527, inlinedAt: !2217)
!2660 = !DILocation(line: 94, column: 1076, scope: !2527, inlinedAt: !2217)
!2661 = !DILocation(line: 94, column: 1079, scope: !2527, inlinedAt: !2217)
!2662 = !DILocation(line: 94, column: 1086, scope: !2527, inlinedAt: !2217)
!2663 = !DILocation(line: 94, column: 1103, scope: !2527, inlinedAt: !2217)
!2664 = !DILocation(line: 94, column: 1144, scope: !2171, inlinedAt: !2217)
!2665 = !DILocation(line: 94, column: 1122, scope: !2171, inlinedAt: !2217)
!2666 = !DILocation(line: 94, column: 925, scope: !2169, inlinedAt: !2216)
!2667 = !DILocation(line: 94, column: 928, scope: !2169, inlinedAt: !2216)
!2668 = !DILocation(line: 94, column: 904, scope: !2169, inlinedAt: !2216)
!2669 = !DILocation(line: 94, column: 102, scope: !2167, inlinedAt: !2215)
!2670 = !DILocation(line: 94, column: 105, scope: !2167, inlinedAt: !2215)
!2671 = !DILocation(line: 94, column: 162, scope: !2167, inlinedAt: !2215)
!2672 = !DILocation(line: 94, column: 161, scope: !2167, inlinedAt: !2215)
!2673 = !DILocation(line: 94, column: 164, scope: !2167, inlinedAt: !2215)
!2674 = !DILocation(line: 94, column: 171, scope: !2167, inlinedAt: !2215)
!2675 = !DILocation(line: 94, column: 118, scope: !2167, inlinedAt: !2215)
!2676 = !DILocation(line: 60, column: 9, scope: !2161, inlinedAt: !2214)
!2677 = !DILocation(line: 60, column: 10, scope: !2161, inlinedAt: !2214)
!2678 = !DILocation(line: 60, column: 18, scope: !2161, inlinedAt: !2214)
!2679 = !DILocation(line: 60, column: 19, scope: !2161, inlinedAt: !2214)
!2680 = !DILocation(line: 60, column: 15, scope: !2161, inlinedAt: !2214)
!2681 = !DILocation(line: 60, column: 8, scope: !2161, inlinedAt: !2214)
!2682 = !DILocation(line: 60, column: 6, scope: !2161, inlinedAt: !2214)
!2683 = !DILocation(line: 61, column: 12, scope: !2161, inlinedAt: !2214)
!2684 = !DILocation(line: 94, column: 1115, scope: !2171, inlinedAt: !2217)
!2685 = !DILocation(line: 94, column: 1148, scope: !2556, inlinedAt: !2217)
!2686 = !DILocalVariable(name: "res", scope: !2218, file: !898, line: 1203, type: !1026)
!2687 = !DILocation(line: 1203, column: 22, scope: !2218)
!2688 = !DILocation(line: 1203, column: 28, scope: !2218)
!2689 = !DILocation(line: 1204, column: 21, scope: !2218)
!2690 = !DILocation(line: 1204, column: 31, scope: !2218)
!2691 = !DILocation(line: 1204, column: 37, scope: !2218)
!2692 = !DILocation(line: 1204, column: 17, scope: !2218)
!2693 = !DILocation(line: 1205, column: 20, scope: !2218)
!2694 = !DILocation(line: 1205, column: 30, scope: !2218)
!2695 = !DILocation(line: 1205, column: 17, scope: !2218)
!2696 = !DILocation(line: 1206, column: 20, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2218, file: !898, line: 1206, column: 13)
!2698 = !DILocation(line: 1206, column: 18, scope: !2697)
!2699 = !DILocation(line: 1206, column: 25, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2701, file: !898, discriminator: 1)
!2701 = distinct !DILexicalBlock(scope: !2697, file: !898, line: 1206, column: 13)
!2702 = !DILocation(line: 1206, column: 29, scope: !2700)
!2703 = !DILocation(line: 1206, column: 39, scope: !2700)
!2704 = !DILocation(line: 1206, column: 27, scope: !2700)
!2705 = !DILocation(line: 1206, column: 13, scope: !2700)
!2706 = !DILocation(line: 1207, column: 34, scope: !2701)
!2707 = !DILocation(line: 1207, column: 24, scope: !2701)
!2708 = !DILocation(line: 1207, column: 27, scope: !2701)
!2709 = !DILocation(line: 1207, column: 21, scope: !2701)
!2710 = !DILocation(line: 1207, column: 17, scope: !2701)
!2711 = !DILocation(line: 1206, column: 45, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2701, file: !898, discriminator: 2)
!2713 = !DILocation(line: 1206, column: 13, scope: !2712)
!2714 = distinct !{!2714, !2715}
!2715 = !DILocation(line: 1206, column: 13, scope: !2218)
!2716 = !DILocation(line: 1208, column: 17, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2218, file: !898, line: 1208, column: 17)
!2718 = !DILocation(line: 1208, column: 29, scope: !2717)
!2719 = !DILocation(line: 1208, column: 26, scope: !2717)
!2720 = !DILocation(line: 1208, column: 17, scope: !2218)
!2721 = !DILocation(line: 1209, column: 24, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2717, file: !898, line: 1208, column: 34)
!2723 = !DILocation(line: 1209, column: 27, scope: !2722)
!2724 = !DILocation(line: 1209, column: 17, scope: !2722)
!2725 = !DILocation(line: 1210, column: 21, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2722, file: !898, line: 1210, column: 21)
!2727 = !DILocation(line: 1210, column: 24, scope: !2726)
!2728 = !DILocation(line: 1210, column: 31, scope: !2726)
!2729 = !DILocation(line: 1210, column: 47, scope: !2726)
!2730 = !DILocation(line: 1210, column: 21, scope: !2722)
!2731 = !DILocation(line: 1211, column: 21, scope: !2726)
!2732 = !DILocation(line: 1212, column: 13, scope: !2722)
!2733 = !DILocation(line: 1213, column: 9, scope: !2218)
!2734 = !DILocation(line: 1214, column: 13, scope: !2209)
!2735 = !DILocation(line: 167, column: 20, scope: !2197, inlinedAt: !2208)
!2736 = !DILocation(line: 167, column: 23, scope: !2197, inlinedAt: !2208)
!2737 = !DILocation(line: 167, column: 36, scope: !2197, inlinedAt: !2208)
!2738 = !DILocation(line: 167, column: 39, scope: !2197, inlinedAt: !2208)
!2739 = !DILocation(line: 167, column: 34, scope: !2197, inlinedAt: !2208)
!2740 = !DILocation(line: 167, column: 50, scope: !2197, inlinedAt: !2208)
!2741 = !DILocation(line: 167, column: 49, scope: !2197, inlinedAt: !2208)
!2742 = !DILocation(line: 167, column: 47, scope: !2197, inlinedAt: !2208)
!2743 = !DILocation(line: 167, column: 19, scope: !2197, inlinedAt: !2208)
!2744 = !DILocation(line: 167, column: 59, scope: !2745, inlinedAt: !2208)
!2745 = !DILexicalBlockFile(scope: !2197, file: !2134, discriminator: 1)
!2746 = !DILocation(line: 167, column: 58, scope: !2745, inlinedAt: !2208)
!2747 = !DILocation(line: 167, column: 19, scope: !2745, inlinedAt: !2208)
!2748 = !DILocation(line: 167, column: 68, scope: !2749, inlinedAt: !2208)
!2749 = !DILexicalBlockFile(scope: !2197, file: !2134, discriminator: 2)
!2750 = !DILocation(line: 167, column: 71, scope: !2749, inlinedAt: !2208)
!2751 = !DILocation(line: 167, column: 84, scope: !2749, inlinedAt: !2208)
!2752 = !DILocation(line: 167, column: 87, scope: !2749, inlinedAt: !2208)
!2753 = !DILocation(line: 167, column: 82, scope: !2749, inlinedAt: !2208)
!2754 = !DILocation(line: 167, column: 19, scope: !2749, inlinedAt: !2208)
!2755 = !DILocation(line: 167, column: 19, scope: !2756, inlinedAt: !2208)
!2756 = !DILexicalBlockFile(scope: !2197, file: !2134, discriminator: 3)
!2757 = !DILocation(line: 167, column: 5, scope: !2756, inlinedAt: !2208)
!2758 = !DILocation(line: 167, column: 8, scope: !2756, inlinedAt: !2208)
!2759 = !DILocation(line: 167, column: 15, scope: !2756, inlinedAt: !2208)
!2760 = !DILocation(line: 1216, column: 9, scope: !2211)
!2761 = !DILocation(line: 1218, column: 9, scope: !2211)
!2762 = !DILocation(line: 1220, column: 16, scope: !2211)
!2763 = !DILocation(line: 1220, column: 19, scope: !2211)
!2764 = !DILocation(line: 1220, column: 9, scope: !2211)
!2765 = !DILocation(line: 1221, column: 9, scope: !2211)
!2766 = !DILocation(line: 1225, column: 12, scope: !1061)
!2767 = !DILocation(line: 1225, column: 15, scope: !1061)
!2768 = !DILocation(line: 1225, column: 5, scope: !1061)
!2769 = !DILocation(line: 1226, column: 12, scope: !1061)
!2770 = !DILocation(line: 1226, column: 15, scope: !1061)
!2771 = !DILocation(line: 1226, column: 5, scope: !1061)
!2772 = !DILocation(line: 1227, column: 12, scope: !1061)
!2773 = !DILocation(line: 1227, column: 15, scope: !1061)
!2774 = !DILocation(line: 1227, column: 5, scope: !1061)
!2775 = !DILocation(line: 1228, column: 12, scope: !1061)
!2776 = !DILocation(line: 1228, column: 15, scope: !1061)
!2777 = !DILocation(line: 1228, column: 5, scope: !1061)
!2778 = !DILocation(line: 1229, column: 12, scope: !1061)
!2779 = !DILocation(line: 1229, column: 15, scope: !1061)
!2780 = !DILocation(line: 1229, column: 5, scope: !1061)
!2781 = !DILocation(line: 1230, column: 12, scope: !1061)
!2782 = !DILocation(line: 1230, column: 15, scope: !1061)
!2783 = !DILocation(line: 1230, column: 5, scope: !1061)
!2784 = !DILocation(line: 1231, column: 12, scope: !1061)
!2785 = !DILocation(line: 1231, column: 15, scope: !1061)
!2786 = !DILocation(line: 1231, column: 5, scope: !1061)
!2787 = !DILocation(line: 1232, column: 12, scope: !1061)
!2788 = !DILocation(line: 1232, column: 15, scope: !1061)
!2789 = !DILocation(line: 1232, column: 5, scope: !1061)
!2790 = !DILocation(line: 1233, column: 12, scope: !1061)
!2791 = !DILocation(line: 1233, column: 15, scope: !1061)
!2792 = !DILocation(line: 1233, column: 5, scope: !1061)
!2793 = !DILocation(line: 1234, column: 12, scope: !1061)
!2794 = !DILocation(line: 1234, column: 15, scope: !1061)
!2795 = !DILocation(line: 1234, column: 5, scope: !1061)
!2796 = !DILocation(line: 1235, column: 12, scope: !1061)
!2797 = !DILocation(line: 1235, column: 15, scope: !1061)
!2798 = !DILocation(line: 1235, column: 5, scope: !1061)
!2799 = !DILocation(line: 1236, column: 12, scope: !1061)
!2800 = !DILocation(line: 1236, column: 15, scope: !1061)
!2801 = !DILocation(line: 1236, column: 5, scope: !1061)
!2802 = !DILocation(line: 1237, column: 5, scope: !1061)
!2803 = !DILocation(line: 1237, column: 8, scope: !1061)
!2804 = !DILocation(line: 1237, column: 25, scope: !1061)
!2805 = !DILocation(line: 1238, column: 20, scope: !1061)
!2806 = !DILocation(line: 1238, column: 23, scope: !1061)
!2807 = !DILocation(line: 1238, column: 32, scope: !1061)
!2808 = !DILocation(line: 1238, column: 37, scope: !1061)
!2809 = !DILocation(line: 1238, column: 5, scope: !1061)
!2810 = !DILocation(line: 1238, column: 8, scope: !1061)
!2811 = !DILocation(line: 1238, column: 17, scope: !1061)
!2812 = !DILocation(line: 1240, column: 13, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1240, column: 5)
!2814 = !DILocation(line: 1240, column: 10, scope: !2813)
!2815 = !DILocation(line: 1240, column: 18, scope: !2816)
!2816 = !DILexicalBlockFile(scope: !2817, file: !898, discriminator: 1)
!2817 = distinct !DILexicalBlock(scope: !2813, file: !898, line: 1240, column: 5)
!2818 = !DILocation(line: 1240, column: 23, scope: !2816)
!2819 = !DILocation(line: 1240, column: 26, scope: !2816)
!2820 = !DILocation(line: 1240, column: 21, scope: !2816)
!2821 = !DILocation(line: 1240, column: 5, scope: !2816)
!2822 = !DILocation(line: 1241, column: 17, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !898, line: 1241, column: 9)
!2824 = distinct !DILexicalBlock(scope: !2817, file: !898, line: 1240, column: 43)
!2825 = !DILocation(line: 1241, column: 14, scope: !2823)
!2826 = !DILocation(line: 1241, column: 22, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !2828, file: !898, discriminator: 1)
!2828 = distinct !DILexicalBlock(scope: !2823, file: !898, line: 1241, column: 9)
!2829 = !DILocation(line: 1241, column: 27, scope: !2827)
!2830 = !DILocation(line: 1241, column: 30, scope: !2827)
!2831 = !DILocation(line: 1241, column: 40, scope: !2827)
!2832 = !DILocation(line: 1241, column: 25, scope: !2827)
!2833 = !DILocation(line: 1241, column: 9, scope: !2827)
!2834 = !DILocation(line: 1242, column: 60, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2828, file: !898, line: 1241, column: 51)
!2836 = !DILocation(line: 1242, column: 41, scope: !2835)
!2837 = !DILocation(line: 1242, column: 56, scope: !2835)
!2838 = !DILocation(line: 1242, column: 44, scope: !2835)
!2839 = !DILocation(line: 1242, column: 32, scope: !2835)
!2840 = !DILocation(line: 1242, column: 13, scope: !2835)
!2841 = !DILocation(line: 1242, column: 28, scope: !2835)
!2842 = !DILocation(line: 1242, column: 16, scope: !2835)
!2843 = !DILocation(line: 1242, column: 39, scope: !2835)
!2844 = !DILocation(line: 1243, column: 32, scope: !2835)
!2845 = !DILocation(line: 1243, column: 13, scope: !2835)
!2846 = !DILocation(line: 1243, column: 28, scope: !2835)
!2847 = !DILocation(line: 1243, column: 16, scope: !2835)
!2848 = !DILocation(line: 1243, column: 39, scope: !2835)
!2849 = !DILocation(line: 1244, column: 9, scope: !2835)
!2850 = !DILocation(line: 1241, column: 47, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !2828, file: !898, discriminator: 2)
!2852 = !DILocation(line: 1241, column: 9, scope: !2851)
!2853 = distinct !{!2853, !2854}
!2854 = !DILocation(line: 1241, column: 9, scope: !2824)
!2855 = !DILocation(line: 1245, column: 5, scope: !2824)
!2856 = !DILocation(line: 1240, column: 39, scope: !2857)
!2857 = !DILexicalBlockFile(scope: !2817, file: !898, discriminator: 2)
!2858 = !DILocation(line: 1240, column: 5, scope: !2857)
!2859 = distinct !{!2859, !2860}
!2860 = !DILocation(line: 1240, column: 5, scope: !1061)
!2861 = !DILocation(line: 1247, column: 25, scope: !1061)
!2862 = !DILocation(line: 1247, column: 28, scope: !1061)
!2863 = !DILocation(line: 1247, column: 37, scope: !1061)
!2864 = !DILocation(line: 1247, column: 12, scope: !1061)
!2865 = !DILocation(line: 1247, column: 15, scope: !1061)
!2866 = !DILocation(line: 1247, column: 5, scope: !1061)
!2867 = !DILocation(line: 1249, column: 16, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1249, column: 5)
!2869 = !DILocation(line: 1249, column: 10, scope: !2868)
!2870 = !DILocation(line: 1249, column: 21, scope: !2871)
!2871 = !DILexicalBlockFile(scope: !2872, file: !898, discriminator: 1)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !898, line: 1249, column: 5)
!2873 = !DILocation(line: 1249, column: 27, scope: !2871)
!2874 = !DILocation(line: 1249, column: 5, scope: !2871)
!2875 = !DILocation(line: 1250, column: 17, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !898, line: 1250, column: 9)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !898, line: 1249, column: 41)
!2878 = !DILocation(line: 1250, column: 14, scope: !2876)
!2879 = !DILocation(line: 1250, column: 22, scope: !2880)
!2880 = !DILexicalBlockFile(scope: !2881, file: !898, discriminator: 1)
!2881 = distinct !DILexicalBlock(scope: !2876, file: !898, line: 1250, column: 9)
!2882 = !DILocation(line: 1250, column: 32, scope: !2880)
!2883 = !DILocation(line: 1250, column: 29, scope: !2880)
!2884 = !DILocation(line: 1250, column: 25, scope: !2880)
!2885 = !DILocation(line: 1250, column: 9, scope: !2880)
!2886 = !DILocalVariable(name: "sf_idx", scope: !2887, file: !898, line: 1251, type: !1004)
!2887 = distinct !DILexicalBlock(scope: !2881, file: !898, line: 1250, column: 45)
!2888 = !DILocation(line: 1251, column: 17, scope: !2887)
!2889 = !DILocation(line: 1251, column: 28, scope: !2887)
!2890 = !DILocation(line: 1251, column: 31, scope: !2887)
!2891 = !DILocation(line: 1251, column: 43, scope: !2887)
!2892 = !DILocation(line: 1251, column: 40, scope: !2887)
!2893 = !DILocation(line: 1251, column: 52, scope: !2887)
!2894 = !DILocation(line: 1251, column: 50, scope: !2887)
!2895 = !DILocation(line: 1251, column: 56, scope: !2887)
!2896 = !DILocation(line: 1253, column: 49, scope: !2887)
!2897 = !DILocation(line: 1253, column: 52, scope: !2887)
!2898 = !DILocation(line: 1253, column: 36, scope: !2887)
!2899 = !DILocation(line: 1253, column: 13, scope: !2887)
!2900 = !DILocation(line: 1253, column: 29, scope: !2887)
!2901 = !DILocation(line: 1253, column: 16, scope: !2887)
!2902 = !DILocation(line: 1253, column: 47, scope: !2887)
!2903 = !DILocation(line: 1252, column: 36, scope: !2887)
!2904 = !DILocation(line: 1252, column: 13, scope: !2887)
!2905 = !DILocation(line: 1252, column: 29, scope: !2887)
!2906 = !DILocation(line: 1252, column: 16, scope: !2887)
!2907 = !DILocation(line: 1252, column: 47, scope: !2887)
!2908 = !DILocation(line: 1254, column: 9, scope: !2887)
!2909 = !DILocation(line: 1250, column: 41, scope: !2910)
!2910 = !DILexicalBlockFile(scope: !2881, file: !898, discriminator: 2)
!2911 = !DILocation(line: 1250, column: 9, scope: !2910)
!2912 = distinct !{!2912, !2913}
!2913 = !DILocation(line: 1250, column: 9, scope: !2877)
!2914 = !DILocation(line: 1255, column: 5, scope: !2877)
!2915 = !DILocation(line: 1249, column: 37, scope: !2916)
!2916 = !DILexicalBlockFile(scope: !2872, file: !898, discriminator: 2)
!2917 = !DILocation(line: 1249, column: 5, scope: !2916)
!2918 = distinct !{!2918, !2919}
!2919 = !DILocation(line: 1249, column: 5, scope: !1061)
!2920 = !DILocation(line: 1258, column: 5, scope: !1061)
!2921 = !DILocation(line: 1258, column: 12, scope: !2206)
!2922 = !DILocation(line: 156, column: 12, scope: !2189, inlinedAt: !2205)
!2923 = !DILocation(line: 156, column: 15, scope: !2189, inlinedAt: !2205)
!2924 = !DILocation(line: 156, column: 28, scope: !2189, inlinedAt: !2205)
!2925 = !DILocation(line: 156, column: 31, scope: !2189, inlinedAt: !2205)
!2926 = !DILocation(line: 156, column: 26, scope: !2189, inlinedAt: !2205)
!2927 = !DILocation(line: 1258, column: 44, scope: !2206)
!2928 = !DILocation(line: 1258, column: 5, scope: !2206)
!2929 = !DILocation(line: 1259, column: 20, scope: !2155)
!2930 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !2154)
!2931 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !2154)
!2932 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !2154)
!2933 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !2154)
!2934 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !2154)
!2935 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !2154)
!2936 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !2154)
!2937 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !2154)
!2938 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !2154)
!2939 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !2154)
!2940 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !2154)
!2941 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !2154)
!2942 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !2154)
!2943 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !2154)
!2944 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2154)
!2945 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !2151)
!2946 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !2151)
!2947 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2151)
!2948 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !2140)
!2949 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !2140)
!2950 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !2140)
!2951 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !2140)
!2952 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !2140)
!2953 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !2140)
!2954 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !2140)
!2955 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !2154)
!2956 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !2154)
!2957 = !DILocation(line: 1259, column: 18, scope: !2155)
!2958 = !DILocation(line: 1260, column: 22, scope: !2155)
!2959 = !DILocation(line: 1260, column: 31, scope: !2155)
!2960 = !DILocation(line: 1260, column: 21, scope: !2155)
!2961 = !DILocation(line: 1260, column: 41, scope: !2174)
!2962 = !DILocation(line: 94, column: 1043, scope: !2519, inlinedAt: !2173)
!2963 = !DILocation(line: 94, column: 1046, scope: !2519, inlinedAt: !2173)
!2964 = !DILocation(line: 94, column: 1059, scope: !2519, inlinedAt: !2173)
!2965 = !DILocation(line: 94, column: 1062, scope: !2519, inlinedAt: !2173)
!2966 = !DILocation(line: 94, column: 1057, scope: !2519, inlinedAt: !2173)
!2967 = !DILocation(line: 94, column: 1069, scope: !2519, inlinedAt: !2173)
!2968 = !DILocation(line: 94, column: 1043, scope: !2172, inlinedAt: !2173)
!2969 = !DILocation(line: 94, column: 1088, scope: !2527, inlinedAt: !2173)
!2970 = !DILocation(line: 94, column: 1091, scope: !2527, inlinedAt: !2173)
!2971 = !DILocation(line: 94, column: 1076, scope: !2527, inlinedAt: !2173)
!2972 = !DILocation(line: 94, column: 1079, scope: !2527, inlinedAt: !2173)
!2973 = !DILocation(line: 94, column: 1086, scope: !2527, inlinedAt: !2173)
!2974 = !DILocation(line: 94, column: 1103, scope: !2527, inlinedAt: !2173)
!2975 = !DILocation(line: 94, column: 1144, scope: !2171, inlinedAt: !2173)
!2976 = !DILocation(line: 94, column: 1122, scope: !2171, inlinedAt: !2173)
!2977 = !DILocation(line: 94, column: 925, scope: !2169, inlinedAt: !2170)
!2978 = !DILocation(line: 94, column: 928, scope: !2169, inlinedAt: !2170)
!2979 = !DILocation(line: 94, column: 904, scope: !2169, inlinedAt: !2170)
!2980 = !DILocation(line: 94, column: 102, scope: !2167, inlinedAt: !2168)
!2981 = !DILocation(line: 94, column: 105, scope: !2167, inlinedAt: !2168)
!2982 = !DILocation(line: 94, column: 162, scope: !2167, inlinedAt: !2168)
!2983 = !DILocation(line: 94, column: 161, scope: !2167, inlinedAt: !2168)
!2984 = !DILocation(line: 94, column: 164, scope: !2167, inlinedAt: !2168)
!2985 = !DILocation(line: 94, column: 171, scope: !2167, inlinedAt: !2168)
!2986 = !DILocation(line: 94, column: 118, scope: !2167, inlinedAt: !2168)
!2987 = !DILocation(line: 60, column: 9, scope: !2161, inlinedAt: !2166)
!2988 = !DILocation(line: 60, column: 10, scope: !2161, inlinedAt: !2166)
!2989 = !DILocation(line: 60, column: 18, scope: !2161, inlinedAt: !2166)
!2990 = !DILocation(line: 60, column: 19, scope: !2161, inlinedAt: !2166)
!2991 = !DILocation(line: 60, column: 15, scope: !2161, inlinedAt: !2166)
!2992 = !DILocation(line: 60, column: 8, scope: !2161, inlinedAt: !2166)
!2993 = !DILocation(line: 60, column: 6, scope: !2161, inlinedAt: !2166)
!2994 = !DILocation(line: 61, column: 12, scope: !2161, inlinedAt: !2166)
!2995 = !DILocation(line: 94, column: 1115, scope: !2171, inlinedAt: !2173)
!2996 = !DILocation(line: 94, column: 1148, scope: !2556, inlinedAt: !2173)
!2997 = !DILocation(line: 1260, column: 21, scope: !2174)
!2998 = !DILocation(line: 1260, column: 69, scope: !2185)
!2999 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !2184)
!3000 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !2184)
!3001 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !2184)
!3002 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !2184)
!3003 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !2184)
!3004 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !2184)
!3005 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !2184)
!3006 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !2184)
!3007 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !2184)
!3008 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !2184)
!3009 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !2184)
!3010 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !2184)
!3011 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !2184)
!3012 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !2184)
!3013 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !2184)
!3014 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !2183)
!3015 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !2183)
!3016 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !2183)
!3017 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !2182)
!3018 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !2182)
!3019 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !2182)
!3020 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !2182)
!3021 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !2182)
!3022 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !2182)
!3023 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !2182)
!3024 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !2184)
!3025 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !2184)
!3026 = !DILocation(line: 1260, column: 21, scope: !2185)
!3027 = !DILocation(line: 1260, column: 21, scope: !3028)
!3028 = !DILexicalBlockFile(scope: !2155, file: !898, discriminator: 3)
!3029 = !DILocation(line: 1260, column: 19, scope: !3028)
!3030 = !DILocation(line: 1261, column: 18, scope: !2155)
!3031 = !DILocation(line: 1263, column: 13, scope: !2192)
!3032 = !DILocation(line: 1263, column: 25, scope: !2192)
!3033 = !DILocation(line: 156, column: 12, scope: !2189, inlinedAt: !2191)
!3034 = !DILocation(line: 156, column: 15, scope: !2189, inlinedAt: !2191)
!3035 = !DILocation(line: 156, column: 28, scope: !2189, inlinedAt: !2191)
!3036 = !DILocation(line: 156, column: 31, scope: !2189, inlinedAt: !2191)
!3037 = !DILocation(line: 156, column: 26, scope: !2189, inlinedAt: !2191)
!3038 = !DILocation(line: 1263, column: 23, scope: !2192)
!3039 = !DILocation(line: 1263, column: 13, scope: !2155)
!3040 = !DILocation(line: 1264, column: 25, scope: !2195)
!3041 = !DILocation(line: 156, column: 12, scope: !2189, inlinedAt: !2194)
!3042 = !DILocation(line: 156, column: 15, scope: !2189, inlinedAt: !2194)
!3043 = !DILocation(line: 156, column: 28, scope: !2189, inlinedAt: !2194)
!3044 = !DILocation(line: 156, column: 31, scope: !2189, inlinedAt: !2194)
!3045 = !DILocation(line: 156, column: 26, scope: !2189, inlinedAt: !2194)
!3046 = !DILocation(line: 1264, column: 23, scope: !2195)
!3047 = !DILocation(line: 1265, column: 20, scope: !2195)
!3048 = !DILocation(line: 1265, column: 23, scope: !2195)
!3049 = !DILocation(line: 1265, column: 67, scope: !2195)
!3050 = !DILocation(line: 1265, column: 13, scope: !2195)
!3051 = !DILocation(line: 1266, column: 17, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2195, file: !898, line: 1266, column: 17)
!3053 = !DILocation(line: 1266, column: 20, scope: !3052)
!3054 = !DILocation(line: 1266, column: 27, scope: !3052)
!3055 = !DILocation(line: 1266, column: 43, scope: !3052)
!3056 = !DILocation(line: 1266, column: 17, scope: !2195)
!3057 = !DILocation(line: 1267, column: 17, scope: !3052)
!3058 = !DILocation(line: 1268, column: 9, scope: !2195)
!3059 = !DILocation(line: 1270, column: 17, scope: !2155)
!3060 = !DILocation(line: 1270, column: 9, scope: !2155)
!3061 = !DILocation(line: 1272, column: 29, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !2155, file: !898, line: 1270, column: 27)
!3063 = !DILocation(line: 1272, column: 19, scope: !3062)
!3064 = !DILocation(line: 1272, column: 23, scope: !3062)
!3065 = !DILocation(line: 1272, column: 27, scope: !3062)
!3066 = !DILocation(line: 1273, column: 33, scope: !3062)
!3067 = !DILocation(line: 1273, column: 19, scope: !3062)
!3068 = !DILocation(line: 1273, column: 23, scope: !3062)
!3069 = !DILocation(line: 1273, column: 28, scope: !3062)
!3070 = !DILocation(line: 1274, column: 13, scope: !3062)
!3071 = !DILocation(line: 1279, column: 30, scope: !3062)
!3072 = !DILocation(line: 1279, column: 19, scope: !3062)
!3073 = !DILocation(line: 1279, column: 25, scope: !3062)
!3074 = !DILocation(line: 1279, column: 28, scope: !3062)
!3075 = !DILocation(line: 1280, column: 31, scope: !3062)
!3076 = !DILocation(line: 1280, column: 19, scope: !3062)
!3077 = !DILocation(line: 1280, column: 25, scope: !3062)
!3078 = !DILocation(line: 1280, column: 29, scope: !3062)
!3079 = !DILocation(line: 1281, column: 35, scope: !3062)
!3080 = !DILocation(line: 1281, column: 19, scope: !3062)
!3081 = !DILocation(line: 1281, column: 25, scope: !3062)
!3082 = !DILocation(line: 1281, column: 30, scope: !3062)
!3083 = !DILocation(line: 1282, column: 13, scope: !3062)
!3084 = !DILocation(line: 1289, column: 41, scope: !3062)
!3085 = !DILocation(line: 1289, column: 39, scope: !3062)
!3086 = !DILocation(line: 1289, column: 15, scope: !3062)
!3087 = !DILocation(line: 1290, column: 37, scope: !3062)
!3088 = !DILocation(line: 1290, column: 29, scope: !3062)
!3089 = !DILocation(line: 1290, column: 13, scope: !3062)
!3090 = !DILocation(line: 1290, column: 19, scope: !3062)
!3091 = !DILocation(line: 1290, column: 32, scope: !3062)
!3092 = !DILocation(line: 1290, column: 35, scope: !3062)
!3093 = !DILocation(line: 1291, column: 38, scope: !3062)
!3094 = !DILocation(line: 1291, column: 29, scope: !3062)
!3095 = !DILocation(line: 1291, column: 13, scope: !3062)
!3096 = !DILocation(line: 1291, column: 19, scope: !3062)
!3097 = !DILocation(line: 1291, column: 32, scope: !3062)
!3098 = !DILocation(line: 1291, column: 36, scope: !3062)
!3099 = !DILocation(line: 1292, column: 42, scope: !3062)
!3100 = !DILocation(line: 1292, column: 29, scope: !3062)
!3101 = !DILocation(line: 1292, column: 13, scope: !3062)
!3102 = !DILocation(line: 1292, column: 19, scope: !3062)
!3103 = !DILocation(line: 1292, column: 32, scope: !3062)
!3104 = !DILocation(line: 1292, column: 37, scope: !3062)
!3105 = !DILocation(line: 1293, column: 13, scope: !3062)
!3106 = !DILocation(line: 1300, column: 45, scope: !3062)
!3107 = !DILocation(line: 1300, column: 43, scope: !3062)
!3108 = !DILocation(line: 1300, column: 15, scope: !3062)
!3109 = !DILocation(line: 1301, column: 37, scope: !3062)
!3110 = !DILocation(line: 1301, column: 29, scope: !3062)
!3111 = !DILocation(line: 1301, column: 13, scope: !3062)
!3112 = !DILocation(line: 1301, column: 19, scope: !3062)
!3113 = !DILocation(line: 1301, column: 32, scope: !3062)
!3114 = !DILocation(line: 1301, column: 35, scope: !3062)
!3115 = !DILocation(line: 1302, column: 38, scope: !3062)
!3116 = !DILocation(line: 1302, column: 29, scope: !3062)
!3117 = !DILocation(line: 1302, column: 13, scope: !3062)
!3118 = !DILocation(line: 1302, column: 19, scope: !3062)
!3119 = !DILocation(line: 1302, column: 32, scope: !3062)
!3120 = !DILocation(line: 1302, column: 36, scope: !3062)
!3121 = !DILocation(line: 1303, column: 42, scope: !3062)
!3122 = !DILocation(line: 1303, column: 29, scope: !3062)
!3123 = !DILocation(line: 1303, column: 13, scope: !3062)
!3124 = !DILocation(line: 1303, column: 19, scope: !3062)
!3125 = !DILocation(line: 1303, column: 32, scope: !3062)
!3126 = !DILocation(line: 1303, column: 37, scope: !3062)
!3127 = !DILocation(line: 1304, column: 13, scope: !3062)
!3128 = !DILocation(line: 1309, column: 17, scope: !3062)
!3129 = !DILocation(line: 1309, column: 26, scope: !3062)
!3130 = !DILocation(line: 1309, column: 15, scope: !3062)
!3131 = !DILocation(line: 1310, column: 34, scope: !3062)
!3132 = !DILocation(line: 1310, column: 25, scope: !3062)
!3133 = !DILocation(line: 1310, column: 13, scope: !3062)
!3134 = !DILocation(line: 1310, column: 19, scope: !3062)
!3135 = !DILocation(line: 1310, column: 28, scope: !3062)
!3136 = !DILocation(line: 1310, column: 32, scope: !3062)
!3137 = !DILocation(line: 1311, column: 38, scope: !3062)
!3138 = !DILocation(line: 1311, column: 25, scope: !3062)
!3139 = !DILocation(line: 1311, column: 13, scope: !3062)
!3140 = !DILocation(line: 1311, column: 19, scope: !3062)
!3141 = !DILocation(line: 1311, column: 28, scope: !3062)
!3142 = !DILocation(line: 1311, column: 33, scope: !3062)
!3143 = !DILocation(line: 1312, column: 13, scope: !3062)
!3144 = !DILocation(line: 1317, column: 17, scope: !3062)
!3145 = !DILocation(line: 1317, column: 26, scope: !3062)
!3146 = !DILocation(line: 1317, column: 15, scope: !3062)
!3147 = !DILocation(line: 1318, column: 36, scope: !3062)
!3148 = !DILocation(line: 1318, column: 27, scope: !3062)
!3149 = !DILocation(line: 1318, column: 13, scope: !3062)
!3150 = !DILocation(line: 1318, column: 19, scope: !3062)
!3151 = !DILocation(line: 1318, column: 30, scope: !3062)
!3152 = !DILocation(line: 1318, column: 34, scope: !3062)
!3153 = !DILocation(line: 1319, column: 40, scope: !3062)
!3154 = !DILocation(line: 1319, column: 27, scope: !3062)
!3155 = !DILocation(line: 1319, column: 13, scope: !3062)
!3156 = !DILocation(line: 1319, column: 19, scope: !3062)
!3157 = !DILocation(line: 1319, column: 30, scope: !3062)
!3158 = !DILocation(line: 1319, column: 35, scope: !3062)
!3159 = !DILocation(line: 1320, column: 13, scope: !3062)
!3160 = !DILocation(line: 1325, column: 17, scope: !3062)
!3161 = !DILocation(line: 1325, column: 26, scope: !3062)
!3162 = !DILocation(line: 1325, column: 15, scope: !3062)
!3163 = !DILocation(line: 1326, column: 32, scope: !3062)
!3164 = !DILocation(line: 1326, column: 23, scope: !3062)
!3165 = !DILocation(line: 1326, column: 13, scope: !3062)
!3166 = !DILocation(line: 1326, column: 19, scope: !3062)
!3167 = !DILocation(line: 1326, column: 26, scope: !3062)
!3168 = !DILocation(line: 1326, column: 30, scope: !3062)
!3169 = !DILocation(line: 1327, column: 36, scope: !3062)
!3170 = !DILocation(line: 1327, column: 23, scope: !3062)
!3171 = !DILocation(line: 1327, column: 13, scope: !3062)
!3172 = !DILocation(line: 1327, column: 19, scope: !3062)
!3173 = !DILocation(line: 1327, column: 26, scope: !3062)
!3174 = !DILocation(line: 1327, column: 31, scope: !3062)
!3175 = !DILocation(line: 1328, column: 13, scope: !3062)
!3176 = !DILocation(line: 1333, column: 17, scope: !3062)
!3177 = !DILocation(line: 1333, column: 26, scope: !3062)
!3178 = !DILocation(line: 1333, column: 15, scope: !3062)
!3179 = !DILocation(line: 1334, column: 32, scope: !3062)
!3180 = !DILocation(line: 1334, column: 23, scope: !3062)
!3181 = !DILocation(line: 1334, column: 13, scope: !3062)
!3182 = !DILocation(line: 1334, column: 19, scope: !3062)
!3183 = !DILocation(line: 1334, column: 26, scope: !3062)
!3184 = !DILocation(line: 1334, column: 30, scope: !3062)
!3185 = !DILocation(line: 1335, column: 36, scope: !3062)
!3186 = !DILocation(line: 1335, column: 23, scope: !3062)
!3187 = !DILocation(line: 1335, column: 13, scope: !3062)
!3188 = !DILocation(line: 1335, column: 19, scope: !3062)
!3189 = !DILocation(line: 1335, column: 26, scope: !3062)
!3190 = !DILocation(line: 1335, column: 31, scope: !3062)
!3191 = !DILocation(line: 1336, column: 13, scope: !3062)
!3192 = !DILocation(line: 1339, column: 31, scope: !2155)
!3193 = !DILocation(line: 1339, column: 9, scope: !2155)
!3194 = !DILocation(line: 167, column: 20, scope: !2197, inlinedAt: !2201)
!3195 = !DILocation(line: 167, column: 23, scope: !2197, inlinedAt: !2201)
!3196 = !DILocation(line: 167, column: 36, scope: !2197, inlinedAt: !2201)
!3197 = !DILocation(line: 167, column: 39, scope: !2197, inlinedAt: !2201)
!3198 = !DILocation(line: 167, column: 34, scope: !2197, inlinedAt: !2201)
!3199 = !DILocation(line: 167, column: 50, scope: !2197, inlinedAt: !2201)
!3200 = !DILocation(line: 167, column: 49, scope: !2197, inlinedAt: !2201)
!3201 = !DILocation(line: 167, column: 47, scope: !2197, inlinedAt: !2201)
!3202 = !DILocation(line: 167, column: 19, scope: !2197, inlinedAt: !2201)
!3203 = !DILocation(line: 167, column: 59, scope: !2745, inlinedAt: !2201)
!3204 = !DILocation(line: 167, column: 58, scope: !2745, inlinedAt: !2201)
!3205 = !DILocation(line: 167, column: 19, scope: !2745, inlinedAt: !2201)
!3206 = !DILocation(line: 167, column: 68, scope: !2749, inlinedAt: !2201)
!3207 = !DILocation(line: 167, column: 71, scope: !2749, inlinedAt: !2201)
!3208 = !DILocation(line: 167, column: 84, scope: !2749, inlinedAt: !2201)
!3209 = !DILocation(line: 167, column: 87, scope: !2749, inlinedAt: !2201)
!3210 = !DILocation(line: 167, column: 82, scope: !2749, inlinedAt: !2201)
!3211 = !DILocation(line: 167, column: 19, scope: !2749, inlinedAt: !2201)
!3212 = !DILocation(line: 167, column: 19, scope: !2756, inlinedAt: !2201)
!3213 = !DILocation(line: 167, column: 5, scope: !2756, inlinedAt: !2201)
!3214 = !DILocation(line: 167, column: 8, scope: !2756, inlinedAt: !2201)
!3215 = !DILocation(line: 167, column: 15, scope: !2756, inlinedAt: !2201)
!3216 = !DILocation(line: 1258, column: 5, scope: !2242)
!3217 = distinct !{!3217, !2920}
!3218 = !DILocation(line: 1343, column: 27, scope: !1061)
!3219 = !DILocation(line: 1343, column: 37, scope: !1061)
!3220 = !DILocation(line: 1343, column: 11, scope: !1061)
!3221 = !DILocation(line: 1343, column: 9, scope: !1061)
!3222 = !DILocation(line: 1345, column: 30, scope: !1061)
!3223 = !DILocation(line: 1345, column: 40, scope: !1061)
!3224 = !DILocation(line: 1345, column: 12, scope: !1061)
!3225 = !DILocation(line: 1345, column: 9, scope: !1061)
!3226 = !DILocation(line: 1347, column: 12, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1347, column: 5)
!3228 = !DILocation(line: 1347, column: 10, scope: !3227)
!3229 = !DILocation(line: 1347, column: 17, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3231, file: !898, discriminator: 1)
!3231 = distinct !DILexicalBlock(scope: !3227, file: !898, line: 1347, column: 5)
!3232 = !DILocation(line: 1347, column: 19, scope: !3230)
!3233 = !DILocation(line: 1347, column: 5, scope: !3230)
!3234 = !DILocation(line: 1348, column: 34, scope: !3231)
!3235 = !DILocation(line: 1348, column: 54, scope: !3231)
!3236 = !DILocation(line: 1348, column: 38, scope: !3231)
!3237 = !DILocation(line: 1348, column: 44, scope: !3231)
!3238 = !DILocation(line: 1348, column: 16, scope: !3231)
!3239 = !DILocation(line: 1348, column: 13, scope: !3231)
!3240 = !DILocation(line: 1348, column: 9, scope: !3231)
!3241 = !DILocation(line: 1347, column: 25, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3231, file: !898, discriminator: 2)
!3243 = !DILocation(line: 1347, column: 5, scope: !3242)
!3244 = distinct !{!3244, !3245}
!3245 = !DILocation(line: 1347, column: 5, scope: !1061)
!3246 = !DILocation(line: 1350, column: 12, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1350, column: 5)
!3248 = !DILocation(line: 1350, column: 10, scope: !3247)
!3249 = !DILocation(line: 1350, column: 17, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3251, file: !898, discriminator: 1)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !898, line: 1350, column: 5)
!3252 = !DILocation(line: 1350, column: 22, scope: !3250)
!3253 = !DILocation(line: 1350, column: 25, scope: !3250)
!3254 = !DILocation(line: 1350, column: 35, scope: !3250)
!3255 = !DILocation(line: 1350, column: 40, scope: !3250)
!3256 = !DILocation(line: 1350, column: 19, scope: !3250)
!3257 = !DILocation(line: 1350, column: 5, scope: !3250)
!3258 = !DILocalVariable(name: "ch1", scope: !3259, file: !898, line: 1351, type: !1004)
!3259 = distinct !DILexicalBlock(scope: !3251, file: !898, line: 1350, column: 50)
!3260 = !DILocation(line: 1351, column: 13, scope: !3259)
!3261 = !DILocation(line: 1351, column: 19, scope: !3259)
!3262 = !DILocation(line: 1351, column: 21, scope: !3259)
!3263 = !DILocalVariable(name: "ch2", scope: !3259, file: !898, line: 1352, type: !1004)
!3264 = !DILocation(line: 1352, column: 13, scope: !3259)
!3265 = !DILocation(line: 1352, column: 21, scope: !3259)
!3266 = !DILocation(line: 1352, column: 25, scope: !3259)
!3267 = !DILocation(line: 1352, column: 33, scope: !3259)
!3268 = !DILocation(line: 1352, column: 36, scope: !3259)
!3269 = !DILocation(line: 1352, column: 46, scope: !3259)
!3270 = !DILocation(line: 1352, column: 30, scope: !3259)
!3271 = !DILocation(line: 1352, column: 20, scope: !3259)
!3272 = !DILocation(line: 1352, column: 54, scope: !3273)
!3273 = !DILexicalBlockFile(scope: !3259, file: !898, discriminator: 1)
!3274 = !DILocation(line: 1352, column: 57, scope: !3273)
!3275 = !DILocation(line: 1352, column: 67, scope: !3273)
!3276 = !DILocation(line: 1352, column: 20, scope: !3273)
!3277 = !DILocation(line: 1352, column: 75, scope: !3278)
!3278 = !DILexicalBlockFile(scope: !3259, file: !898, discriminator: 2)
!3279 = !DILocation(line: 1352, column: 79, scope: !3278)
!3280 = !DILocation(line: 1352, column: 20, scope: !3278)
!3281 = !DILocation(line: 1352, column: 20, scope: !3282)
!3282 = !DILexicalBlockFile(scope: !3259, file: !898, discriminator: 3)
!3283 = !DILocation(line: 1352, column: 13, scope: !3282)
!3284 = !DILocation(line: 1354, column: 33, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3259, file: !898, line: 1354, column: 13)
!3286 = !DILocation(line: 1354, column: 50, scope: !3285)
!3287 = !DILocation(line: 1354, column: 37, scope: !3285)
!3288 = !DILocation(line: 1354, column: 43, scope: !3285)
!3289 = !DILocation(line: 1354, column: 54, scope: !3285)
!3290 = !DILocation(line: 1354, column: 59, scope: !3285)
!3291 = !DILocation(line: 1354, column: 13, scope: !3285)
!3292 = !DILocation(line: 1354, column: 64, scope: !3285)
!3293 = !DILocation(line: 1354, column: 68, scope: !3285)
!3294 = !DILocation(line: 1355, column: 33, scope: !3285)
!3295 = !DILocation(line: 1355, column: 51, scope: !3285)
!3296 = !DILocation(line: 1355, column: 37, scope: !3285)
!3297 = !DILocation(line: 1355, column: 43, scope: !3285)
!3298 = !DILocation(line: 1355, column: 55, scope: !3285)
!3299 = !DILocation(line: 1355, column: 60, scope: !3285)
!3300 = !DILocation(line: 1355, column: 13, scope: !3285)
!3301 = !DILocation(line: 1355, column: 65, scope: !3285)
!3302 = !DILocation(line: 1354, column: 13, scope: !3273)
!3303 = !DILocation(line: 1356, column: 17, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3285, file: !898, line: 1355, column: 70)
!3305 = !DILocation(line: 1357, column: 13, scope: !3304)
!3306 = !DILocation(line: 1361, column: 26, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3259, file: !898, line: 1361, column: 13)
!3308 = !DILocation(line: 1361, column: 14, scope: !3307)
!3309 = !DILocation(line: 1361, column: 20, scope: !3307)
!3310 = !DILocation(line: 1361, column: 29, scope: !3307)
!3311 = !DILocation(line: 1361, column: 33, scope: !3307)
!3312 = !DILocation(line: 1361, column: 51, scope: !3313)
!3313 = !DILexicalBlockFile(scope: !3307, file: !898, discriminator: 1)
!3314 = !DILocation(line: 1361, column: 37, scope: !3313)
!3315 = !DILocation(line: 1361, column: 43, scope: !3313)
!3316 = !DILocation(line: 1361, column: 54, scope: !3313)
!3317 = !DILocation(line: 1361, column: 58, scope: !3313)
!3318 = !DILocation(line: 1361, column: 72, scope: !3319)
!3319 = !DILexicalBlockFile(scope: !3307, file: !898, discriminator: 2)
!3320 = !DILocation(line: 1361, column: 62, scope: !3319)
!3321 = !DILocation(line: 1361, column: 68, scope: !3319)
!3322 = !DILocation(line: 1361, column: 75, scope: !3319)
!3323 = !DILocation(line: 1361, column: 13, scope: !3319)
!3324 = !DILocation(line: 1362, column: 13, scope: !3307)
!3325 = !DILocation(line: 1364, column: 29, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3259, file: !898, line: 1364, column: 13)
!3327 = !DILocation(line: 1364, column: 43, scope: !3326)
!3328 = !DILocation(line: 1364, column: 33, scope: !3326)
!3329 = !DILocation(line: 1364, column: 39, scope: !3326)
!3330 = !DILocation(line: 1364, column: 47, scope: !3326)
!3331 = !DILocation(line: 1364, column: 52, scope: !3326)
!3332 = !DILocation(line: 1364, column: 13, scope: !3326)
!3333 = !DILocation(line: 1364, column: 57, scope: !3326)
!3334 = !DILocation(line: 1364, column: 61, scope: !3326)
!3335 = !DILocation(line: 1365, column: 29, scope: !3326)
!3336 = !DILocation(line: 1365, column: 43, scope: !3326)
!3337 = !DILocation(line: 1365, column: 33, scope: !3326)
!3338 = !DILocation(line: 1365, column: 39, scope: !3326)
!3339 = !DILocation(line: 1365, column: 47, scope: !3326)
!3340 = !DILocation(line: 1365, column: 52, scope: !3326)
!3341 = !DILocation(line: 1365, column: 13, scope: !3326)
!3342 = !DILocation(line: 1365, column: 57, scope: !3326)
!3343 = !DILocation(line: 1364, column: 13, scope: !3273)
!3344 = !DILocation(line: 1366, column: 17, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3326, file: !898, line: 1365, column: 62)
!3346 = !DILocation(line: 1367, column: 13, scope: !3345)
!3347 = !DILocation(line: 1369, column: 5, scope: !3259)
!3348 = !DILocation(line: 1350, column: 46, scope: !3349)
!3349 = !DILexicalBlockFile(scope: !3251, file: !898, discriminator: 2)
!3350 = !DILocation(line: 1350, column: 5, scope: !3349)
!3351 = distinct !{!3351, !3352}
!3352 = !DILocation(line: 1350, column: 5, scope: !1061)
!3353 = !DILocation(line: 1371, column: 9, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !1061, file: !898, line: 1371, column: 9)
!3355 = !DILocation(line: 1371, column: 13, scope: !3354)
!3356 = !DILocation(line: 1371, column: 17, scope: !3354)
!3357 = !DILocation(line: 1371, column: 21, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3354, file: !898, discriminator: 1)
!3359 = !DILocation(line: 1371, column: 24, scope: !3358)
!3360 = !DILocation(line: 1371, column: 31, scope: !3358)
!3361 = !DILocation(line: 1371, column: 47, scope: !3358)
!3362 = !DILocation(line: 1371, column: 9, scope: !3358)
!3363 = !DILocation(line: 1372, column: 9, scope: !3354)
!3364 = !DILocation(line: 1374, column: 5, scope: !1061)
!3365 = !DILocation(line: 1375, column: 1, scope: !1061)
!3366 = distinct !DISubprogram(name: "parse_decoder_init", scope: !898, file: !898, line: 991, type: !3367, isLocal: true, isDefinition: true, scopeLine: 992, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!1004, !1064, !2144}
!3369 = !DILocalVariable(name: "b", arg: 1, scope: !3370, file: !2134, line: 90, type: !2137)
!3370 = distinct !DISubprogram(name: "bytestream_get_le16", scope: !2134, file: !2134, line: 90, type: !2135, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!3371 = !DILocation(line: 90, column: 95, scope: !3370, inlinedAt: !3372)
!3372 = distinct !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3374)
!3373 = distinct !DISubprogram(name: "bytestream2_get_le16u", scope: !2134, file: !2134, line: 90, type: !2142, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!3374 = distinct !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3377)
!3375 = !DILexicalBlockFile(scope: !3376, file: !2134, discriminator: 2)
!3376 = distinct !DISubprogram(name: "bytestream2_get_le16", scope: !2134, file: !2134, line: 90, type: !2142, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!3377 = distinct !DILocation(line: 1047, column: 24, scope: !3366)
!3378 = !DILocalVariable(name: "g", arg: 1, scope: !3373, file: !2134, line: 90, type: !2144)
!3379 = !DILocation(line: 90, column: 856, scope: !3373, inlinedAt: !3374)
!3380 = !DILocalVariable(name: "g", arg: 1, scope: !3376, file: !2134, line: 90, type: !2144)
!3381 = !DILocation(line: 90, column: 998, scope: !3376, inlinedAt: !3377)
!3382 = !DILocation(line: 90, column: 95, scope: !3370, inlinedAt: !3383)
!3383 = distinct !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3384)
!3384 = distinct !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3385)
!3385 = distinct !DILocation(line: 1050, column: 26, scope: !3366)
!3386 = !DILocation(line: 90, column: 856, scope: !3373, inlinedAt: !3384)
!3387 = !DILocation(line: 90, column: 998, scope: !3376, inlinedAt: !3385)
!3388 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !3389)
!3389 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !3390)
!3390 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !3391)
!3391 = distinct !DILocation(line: 1044, column: 19, scope: !3366)
!3392 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !3390)
!3393 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !3391)
!3394 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !3395)
!3395 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !3396)
!3396 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !3397)
!3397 = distinct !DILocation(line: 1030, column: 16, scope: !3366)
!3398 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !3396)
!3399 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !3397)
!3400 = !DILocation(line: 90, column: 95, scope: !3370, inlinedAt: !3401)
!3401 = distinct !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3402)
!3402 = distinct !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3403)
!3403 = distinct !DILocation(line: 1023, column: 15, scope: !3366)
!3404 = !DILocation(line: 90, column: 856, scope: !3373, inlinedAt: !3402)
!3405 = !DILocation(line: 90, column: 998, scope: !3376, inlinedAt: !3403)
!3406 = !DILocation(line: 90, column: 95, scope: !3370, inlinedAt: !3407)
!3407 = distinct !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3408)
!3408 = distinct !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3409)
!3409 = distinct !DILocation(line: 1012, column: 18, scope: !3366)
!3410 = !DILocation(line: 90, column: 856, scope: !3373, inlinedAt: !3408)
!3411 = !DILocation(line: 90, column: 998, scope: !3376, inlinedAt: !3409)
!3412 = !DILocation(line: 95, column: 95, scope: !2133, inlinedAt: !3413)
!3413 = distinct !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !3414)
!3414 = distinct !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !3415)
!3415 = distinct !DILocation(line: 1000, column: 15, scope: !3366)
!3416 = !DILocation(line: 95, column: 843, scope: !2141, inlinedAt: !3414)
!3417 = !DILocation(line: 95, column: 985, scope: !2153, inlinedAt: !3415)
!3418 = !DILocalVariable(name: "s", arg: 1, scope: !3366, file: !898, line: 991, type: !1064)
!3419 = !DILocation(line: 991, column: 46, scope: !3366)
!3420 = !DILocalVariable(name: "gb", arg: 2, scope: !3366, file: !898, line: 991, type: !2144)
!3421 = !DILocation(line: 991, column: 65, scope: !3366)
!3422 = !DILocalVariable(name: "old_rate", scope: !3366, file: !898, line: 993, type: !1004)
!3423 = !DILocation(line: 993, column: 9, scope: !3366)
!3424 = !DILocation(line: 993, column: 20, scope: !3366)
!3425 = !DILocation(line: 993, column: 23, scope: !3366)
!3426 = !DILocalVariable(name: "old_band_limit", scope: !3366, file: !898, line: 994, type: !1004)
!3427 = !DILocation(line: 994, column: 9, scope: !3366)
!3428 = !DILocation(line: 994, column: 26, scope: !3366)
!3429 = !DILocation(line: 994, column: 29, scope: !3366)
!3430 = !DILocalVariable(name: "old_nchannels", scope: !3366, file: !898, line: 995, type: !1004)
!3431 = !DILocation(line: 995, column: 9, scope: !3366)
!3432 = !DILocation(line: 995, column: 25, scope: !3366)
!3433 = !DILocation(line: 995, column: 28, scope: !3366)
!3434 = !DILocalVariable(name: "version", scope: !3366, file: !898, line: 996, type: !1004)
!3435 = !DILocation(line: 996, column: 9, scope: !3366)
!3436 = !DILocalVariable(name: "bit_rate_hi", scope: !3366, file: !898, line: 996, type: !1004)
!3437 = !DILocation(line: 996, column: 18, scope: !3366)
!3438 = !DILocalVariable(name: "sr_code", scope: !3366, file: !898, line: 997, type: !1005)
!3439 = !DILocation(line: 997, column: 18, scope: !3366)
!3440 = !DILocation(line: 1000, column: 36, scope: !3366)
!3441 = !DILocation(line: 1000, column: 15, scope: !3366)
!3442 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !3415)
!3443 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !3415)
!3444 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !3415)
!3445 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !3415)
!3446 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !3415)
!3447 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !3415)
!3448 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !3415)
!3449 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !3415)
!3450 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !3415)
!3451 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !3415)
!3452 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !3415)
!3453 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !3415)
!3454 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !3415)
!3455 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !3415)
!3456 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !3415)
!3457 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !3414)
!3458 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !3414)
!3459 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !3414)
!3460 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !3413)
!3461 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !3413)
!3462 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !3413)
!3463 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !3413)
!3464 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !3413)
!3465 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !3413)
!3466 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !3413)
!3467 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !3415)
!3468 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !3415)
!3469 = !DILocation(line: 1000, column: 13, scope: !3366)
!3470 = !DILocation(line: 1001, column: 9, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1001, column: 9)
!3472 = !DILocation(line: 1001, column: 17, scope: !3471)
!3473 = !DILocation(line: 1001, column: 9, scope: !3366)
!3474 = !DILocation(line: 1002, column: 16, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3471, file: !898, line: 1001, column: 90)
!3476 = !DILocation(line: 1002, column: 19, scope: !3475)
!3477 = !DILocation(line: 1002, column: 9, scope: !3475)
!3478 = !DILocation(line: 1003, column: 9, scope: !3475)
!3479 = !DILocation(line: 1005, column: 44, scope: !3366)
!3480 = !DILocation(line: 1005, column: 22, scope: !3366)
!3481 = !DILocation(line: 1005, column: 5, scope: !3366)
!3482 = !DILocation(line: 1005, column: 8, scope: !3366)
!3483 = !DILocation(line: 1005, column: 20, scope: !3366)
!3484 = !DILocation(line: 1006, column: 9, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1006, column: 9)
!3486 = !DILocation(line: 1006, column: 12, scope: !3485)
!3487 = !DILocation(line: 1006, column: 24, scope: !3485)
!3488 = !DILocation(line: 1006, column: 9, scope: !3366)
!3489 = !DILocation(line: 1007, column: 39, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3485, file: !898, line: 1006, column: 33)
!3491 = !DILocation(line: 1007, column: 42, scope: !3490)
!3492 = !DILocation(line: 1007, column: 74, scope: !3490)
!3493 = !DILocation(line: 1007, column: 77, scope: !3490)
!3494 = !DILocation(line: 1007, column: 9, scope: !3490)
!3495 = !DILocation(line: 1008, column: 9, scope: !3490)
!3496 = !DILocation(line: 1012, column: 39, scope: !3366)
!3497 = !DILocation(line: 1012, column: 18, scope: !3366)
!3498 = !DILocation(line: 90, column: 1007, scope: !3499, inlinedAt: !3409)
!3499 = distinct !DILexicalBlock(scope: !3376, file: !2134, line: 90, column: 1007)
!3500 = !DILocation(line: 90, column: 1010, scope: !3499, inlinedAt: !3409)
!3501 = !DILocation(line: 90, column: 1023, scope: !3499, inlinedAt: !3409)
!3502 = !DILocation(line: 90, column: 1026, scope: !3499, inlinedAt: !3409)
!3503 = !DILocation(line: 90, column: 1021, scope: !3499, inlinedAt: !3409)
!3504 = !DILocation(line: 90, column: 1033, scope: !3499, inlinedAt: !3409)
!3505 = !DILocation(line: 90, column: 1007, scope: !3376, inlinedAt: !3409)
!3506 = !DILocation(line: 90, column: 1052, scope: !3507, inlinedAt: !3409)
!3507 = !DILexicalBlockFile(scope: !3508, file: !2134, discriminator: 1)
!3508 = distinct !DILexicalBlock(scope: !3499, file: !2134, line: 90, column: 1038)
!3509 = !DILocation(line: 90, column: 1055, scope: !3507, inlinedAt: !3409)
!3510 = !DILocation(line: 90, column: 1040, scope: !3507, inlinedAt: !3409)
!3511 = !DILocation(line: 90, column: 1043, scope: !3507, inlinedAt: !3409)
!3512 = !DILocation(line: 90, column: 1050, scope: !3507, inlinedAt: !3409)
!3513 = !DILocation(line: 90, column: 1067, scope: !3507, inlinedAt: !3409)
!3514 = !DILocation(line: 90, column: 1108, scope: !3375, inlinedAt: !3409)
!3515 = !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3409)
!3516 = !DILocation(line: 90, column: 889, scope: !3373, inlinedAt: !3408)
!3517 = !DILocation(line: 90, column: 892, scope: !3373, inlinedAt: !3408)
!3518 = !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3408)
!3519 = !DILocation(line: 90, column: 102, scope: !3370, inlinedAt: !3407)
!3520 = !DILocation(line: 90, column: 105, scope: !3370, inlinedAt: !3407)
!3521 = !DILocation(line: 90, column: 151, scope: !3370, inlinedAt: !3407)
!3522 = !DILocation(line: 90, column: 150, scope: !3370, inlinedAt: !3407)
!3523 = !DILocation(line: 90, column: 153, scope: !3370, inlinedAt: !3407)
!3524 = !DILocation(line: 90, column: 160, scope: !3370, inlinedAt: !3407)
!3525 = !DILocation(line: 90, column: 118, scope: !3370, inlinedAt: !3407)
!3526 = !DILocation(line: 90, column: 1079, scope: !3375, inlinedAt: !3409)
!3527 = !DILocation(line: 90, column: 1112, scope: !3528, inlinedAt: !3409)
!3528 = !DILexicalBlockFile(scope: !3376, file: !2134, discriminator: 3)
!3529 = !DILocation(line: 1012, column: 5, scope: !3366)
!3530 = !DILocation(line: 1012, column: 8, scope: !3366)
!3531 = !DILocation(line: 1012, column: 16, scope: !3366)
!3532 = !DILocation(line: 1013, column: 11, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1013, column: 9)
!3534 = !DILocation(line: 1013, column: 14, scope: !3533)
!3535 = !DILocation(line: 1013, column: 22, scope: !3533)
!3536 = !DILocation(line: 1013, column: 9, scope: !3366)
!3537 = !DILocation(line: 1014, column: 39, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !898, line: 1013, column: 30)
!3539 = !DILocation(line: 1014, column: 42, scope: !3538)
!3540 = !DILocation(line: 1014, column: 73, scope: !3538)
!3541 = !DILocation(line: 1014, column: 76, scope: !3538)
!3542 = !DILocation(line: 1014, column: 9, scope: !3538)
!3543 = !DILocation(line: 1015, column: 9, scope: !3538)
!3544 = !DILocation(line: 1017, column: 10, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1017, column: 9)
!3546 = !DILocation(line: 1017, column: 13, scope: !3545)
!3547 = !DILocation(line: 1017, column: 21, scope: !3545)
!3548 = !DILocation(line: 1017, column: 31, scope: !3545)
!3549 = !DILocation(line: 1017, column: 36, scope: !3550)
!3550 = !DILexicalBlockFile(scope: !3545, file: !898, discriminator: 1)
!3551 = !DILocation(line: 1017, column: 39, scope: !3550)
!3552 = !DILocation(line: 1017, column: 46, scope: !3550)
!3553 = !DILocation(line: 1017, column: 9, scope: !3550)
!3554 = !DILocation(line: 1018, column: 39, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3545, file: !898, line: 1017, column: 52)
!3556 = !DILocation(line: 1018, column: 42, scope: !3555)
!3557 = !DILocation(line: 1018, column: 73, scope: !3555)
!3558 = !DILocation(line: 1018, column: 76, scope: !3555)
!3559 = !DILocation(line: 1018, column: 9, scope: !3555)
!3560 = !DILocation(line: 1019, column: 9, scope: !3555)
!3561 = !DILocation(line: 1019, column: 12, scope: !3555)
!3562 = !DILocation(line: 1019, column: 19, scope: !3555)
!3563 = !DILocation(line: 1020, column: 5, scope: !3555)
!3564 = !DILocation(line: 1023, column: 36, scope: !3366)
!3565 = !DILocation(line: 1023, column: 15, scope: !3366)
!3566 = !DILocation(line: 90, column: 1007, scope: !3499, inlinedAt: !3403)
!3567 = !DILocation(line: 90, column: 1010, scope: !3499, inlinedAt: !3403)
!3568 = !DILocation(line: 90, column: 1023, scope: !3499, inlinedAt: !3403)
!3569 = !DILocation(line: 90, column: 1026, scope: !3499, inlinedAt: !3403)
!3570 = !DILocation(line: 90, column: 1021, scope: !3499, inlinedAt: !3403)
!3571 = !DILocation(line: 90, column: 1033, scope: !3499, inlinedAt: !3403)
!3572 = !DILocation(line: 90, column: 1007, scope: !3376, inlinedAt: !3403)
!3573 = !DILocation(line: 90, column: 1052, scope: !3507, inlinedAt: !3403)
!3574 = !DILocation(line: 90, column: 1055, scope: !3507, inlinedAt: !3403)
!3575 = !DILocation(line: 90, column: 1040, scope: !3507, inlinedAt: !3403)
!3576 = !DILocation(line: 90, column: 1043, scope: !3507, inlinedAt: !3403)
!3577 = !DILocation(line: 90, column: 1050, scope: !3507, inlinedAt: !3403)
!3578 = !DILocation(line: 90, column: 1067, scope: !3507, inlinedAt: !3403)
!3579 = !DILocation(line: 90, column: 1108, scope: !3375, inlinedAt: !3403)
!3580 = !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3403)
!3581 = !DILocation(line: 90, column: 889, scope: !3373, inlinedAt: !3402)
!3582 = !DILocation(line: 90, column: 892, scope: !3373, inlinedAt: !3402)
!3583 = !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3402)
!3584 = !DILocation(line: 90, column: 102, scope: !3370, inlinedAt: !3401)
!3585 = !DILocation(line: 90, column: 105, scope: !3370, inlinedAt: !3401)
!3586 = !DILocation(line: 90, column: 151, scope: !3370, inlinedAt: !3401)
!3587 = !DILocation(line: 90, column: 150, scope: !3370, inlinedAt: !3401)
!3588 = !DILocation(line: 90, column: 153, scope: !3370, inlinedAt: !3401)
!3589 = !DILocation(line: 90, column: 160, scope: !3370, inlinedAt: !3401)
!3590 = !DILocation(line: 90, column: 118, scope: !3370, inlinedAt: !3401)
!3591 = !DILocation(line: 90, column: 1079, scope: !3375, inlinedAt: !3403)
!3592 = !DILocation(line: 90, column: 1112, scope: !3528, inlinedAt: !3403)
!3593 = !DILocation(line: 1023, column: 13, scope: !3366)
!3594 = !DILocation(line: 1024, column: 10, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1024, column: 9)
!3596 = !DILocation(line: 1024, column: 18, scope: !3595)
!3597 = !DILocation(line: 1024, column: 28, scope: !3595)
!3598 = !DILocation(line: 1024, column: 9, scope: !3366)
!3599 = !DILocation(line: 1025, column: 39, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3595, file: !898, line: 1024, column: 39)
!3601 = !DILocation(line: 1025, column: 42, scope: !3600)
!3602 = !DILocation(line: 1025, column: 75, scope: !3600)
!3603 = !DILocation(line: 1025, column: 9, scope: !3600)
!3604 = !DILocation(line: 1026, column: 9, scope: !3600)
!3605 = !DILocation(line: 1030, column: 37, scope: !3366)
!3606 = !DILocation(line: 1030, column: 16, scope: !3366)
!3607 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !3397)
!3608 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !3397)
!3609 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !3397)
!3610 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !3397)
!3611 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !3397)
!3612 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !3397)
!3613 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !3397)
!3614 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !3397)
!3615 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !3397)
!3616 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !3397)
!3617 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !3397)
!3618 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !3397)
!3619 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !3397)
!3620 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !3397)
!3621 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !3397)
!3622 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !3396)
!3623 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !3396)
!3624 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !3396)
!3625 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !3395)
!3626 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !3395)
!3627 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !3395)
!3628 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !3395)
!3629 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !3395)
!3630 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !3395)
!3631 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !3395)
!3632 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !3397)
!3633 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !3397)
!3634 = !DILocation(line: 1030, column: 5, scope: !3366)
!3635 = !DILocation(line: 1030, column: 8, scope: !3366)
!3636 = !DILocation(line: 1030, column: 14, scope: !3366)
!3637 = !DILocation(line: 1031, column: 9, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1031, column: 9)
!3639 = !DILocation(line: 1031, column: 12, scope: !3638)
!3640 = !DILocation(line: 1031, column: 18, scope: !3638)
!3641 = !DILocation(line: 1031, column: 9, scope: !3366)
!3642 = !DILocation(line: 1032, column: 39, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3638, file: !898, line: 1031, column: 44)
!3644 = !DILocation(line: 1032, column: 42, scope: !3643)
!3645 = !DILocation(line: 1032, column: 9, scope: !3643)
!3646 = !DILocation(line: 1033, column: 9, scope: !3643)
!3647 = !DILocation(line: 1035, column: 10, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1035, column: 9)
!3649 = !DILocation(line: 1035, column: 13, scope: !3648)
!3650 = !DILocation(line: 1035, column: 19, scope: !3648)
!3651 = !DILocation(line: 1035, column: 43, scope: !3648)
!3652 = !DILocation(line: 1035, column: 46, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3648, file: !898, discriminator: 1)
!3654 = !DILocation(line: 1035, column: 49, scope: !3653)
!3655 = !DILocation(line: 1035, column: 61, scope: !3653)
!3656 = !DILocation(line: 1035, column: 9, scope: !3653)
!3657 = !DILocation(line: 1036, column: 15, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !898, line: 1036, column: 13)
!3659 = distinct !DILexicalBlock(scope: !3648, file: !898, line: 1035, column: 71)
!3660 = !DILocation(line: 1036, column: 18, scope: !3658)
!3661 = !DILocation(line: 1036, column: 25, scope: !3658)
!3662 = !DILocation(line: 1036, column: 13, scope: !3659)
!3663 = !DILocation(line: 1037, column: 43, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3658, file: !898, line: 1036, column: 31)
!3665 = !DILocation(line: 1037, column: 46, scope: !3664)
!3666 = !DILocation(line: 1037, column: 80, scope: !3664)
!3667 = !DILocation(line: 1037, column: 83, scope: !3664)
!3668 = !DILocation(line: 1037, column: 13, scope: !3664)
!3669 = !DILocation(line: 1038, column: 13, scope: !3664)
!3670 = !DILocation(line: 1038, column: 16, scope: !3664)
!3671 = !DILocation(line: 1038, column: 23, scope: !3664)
!3672 = !DILocation(line: 1039, column: 9, scope: !3664)
!3673 = !DILocation(line: 1040, column: 9, scope: !3659)
!3674 = !DILocation(line: 1040, column: 12, scope: !3659)
!3675 = !DILocation(line: 1040, column: 18, scope: !3659)
!3676 = !DILocation(line: 1041, column: 5, scope: !3659)
!3677 = !DILocation(line: 1044, column: 40, scope: !3366)
!3678 = !DILocation(line: 1044, column: 19, scope: !3366)
!3679 = !DILocation(line: 95, column: 994, scope: !2426, inlinedAt: !3391)
!3680 = !DILocation(line: 95, column: 997, scope: !2426, inlinedAt: !3391)
!3681 = !DILocation(line: 95, column: 1010, scope: !2426, inlinedAt: !3391)
!3682 = !DILocation(line: 95, column: 1013, scope: !2426, inlinedAt: !3391)
!3683 = !DILocation(line: 95, column: 1008, scope: !2426, inlinedAt: !3391)
!3684 = !DILocation(line: 95, column: 1020, scope: !2426, inlinedAt: !3391)
!3685 = !DILocation(line: 95, column: 994, scope: !2153, inlinedAt: !3391)
!3686 = !DILocation(line: 95, column: 1039, scope: !2434, inlinedAt: !3391)
!3687 = !DILocation(line: 95, column: 1042, scope: !2434, inlinedAt: !3391)
!3688 = !DILocation(line: 95, column: 1027, scope: !2434, inlinedAt: !3391)
!3689 = !DILocation(line: 95, column: 1030, scope: !2434, inlinedAt: !3391)
!3690 = !DILocation(line: 95, column: 1037, scope: !2434, inlinedAt: !3391)
!3691 = !DILocation(line: 95, column: 1054, scope: !2434, inlinedAt: !3391)
!3692 = !DILocation(line: 95, column: 1095, scope: !2152, inlinedAt: !3391)
!3693 = !DILocation(line: 95, column: 1073, scope: !2152, inlinedAt: !3391)
!3694 = !DILocation(line: 95, column: 876, scope: !2141, inlinedAt: !3390)
!3695 = !DILocation(line: 95, column: 879, scope: !2141, inlinedAt: !3390)
!3696 = !DILocation(line: 95, column: 855, scope: !2141, inlinedAt: !3390)
!3697 = !DILocation(line: 95, column: 102, scope: !2133, inlinedAt: !3389)
!3698 = !DILocation(line: 95, column: 105, scope: !2133, inlinedAt: !3389)
!3699 = !DILocation(line: 95, column: 138, scope: !2133, inlinedAt: !3389)
!3700 = !DILocation(line: 95, column: 137, scope: !2133, inlinedAt: !3389)
!3701 = !DILocation(line: 95, column: 140, scope: !2133, inlinedAt: !3389)
!3702 = !DILocation(line: 95, column: 119, scope: !2133, inlinedAt: !3389)
!3703 = !DILocation(line: 95, column: 118, scope: !2133, inlinedAt: !3389)
!3704 = !DILocation(line: 95, column: 1066, scope: !2152, inlinedAt: !3391)
!3705 = !DILocation(line: 95, column: 1099, scope: !2455, inlinedAt: !3391)
!3706 = !DILocation(line: 1044, column: 17, scope: !3366)
!3707 = !DILocation(line: 1047, column: 45, scope: !3366)
!3708 = !DILocation(line: 1047, column: 24, scope: !3366)
!3709 = !DILocation(line: 90, column: 1007, scope: !3499, inlinedAt: !3377)
!3710 = !DILocation(line: 90, column: 1010, scope: !3499, inlinedAt: !3377)
!3711 = !DILocation(line: 90, column: 1023, scope: !3499, inlinedAt: !3377)
!3712 = !DILocation(line: 90, column: 1026, scope: !3499, inlinedAt: !3377)
!3713 = !DILocation(line: 90, column: 1021, scope: !3499, inlinedAt: !3377)
!3714 = !DILocation(line: 90, column: 1033, scope: !3499, inlinedAt: !3377)
!3715 = !DILocation(line: 90, column: 1007, scope: !3376, inlinedAt: !3377)
!3716 = !DILocation(line: 90, column: 1052, scope: !3507, inlinedAt: !3377)
!3717 = !DILocation(line: 90, column: 1055, scope: !3507, inlinedAt: !3377)
!3718 = !DILocation(line: 90, column: 1040, scope: !3507, inlinedAt: !3377)
!3719 = !DILocation(line: 90, column: 1043, scope: !3507, inlinedAt: !3377)
!3720 = !DILocation(line: 90, column: 1050, scope: !3507, inlinedAt: !3377)
!3721 = !DILocation(line: 90, column: 1067, scope: !3507, inlinedAt: !3377)
!3722 = !DILocation(line: 90, column: 1108, scope: !3375, inlinedAt: !3377)
!3723 = !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3377)
!3724 = !DILocation(line: 90, column: 889, scope: !3373, inlinedAt: !3374)
!3725 = !DILocation(line: 90, column: 892, scope: !3373, inlinedAt: !3374)
!3726 = !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3374)
!3727 = !DILocation(line: 90, column: 102, scope: !3370, inlinedAt: !3372)
!3728 = !DILocation(line: 90, column: 105, scope: !3370, inlinedAt: !3372)
!3729 = !DILocation(line: 90, column: 151, scope: !3370, inlinedAt: !3372)
!3730 = !DILocation(line: 90, column: 150, scope: !3370, inlinedAt: !3372)
!3731 = !DILocation(line: 90, column: 153, scope: !3370, inlinedAt: !3372)
!3732 = !DILocation(line: 90, column: 160, scope: !3370, inlinedAt: !3372)
!3733 = !DILocation(line: 90, column: 118, scope: !3370, inlinedAt: !3372)
!3734 = !DILocation(line: 90, column: 1079, scope: !3375, inlinedAt: !3377)
!3735 = !DILocation(line: 90, column: 1112, scope: !3528, inlinedAt: !3377)
!3736 = !DILocation(line: 1047, column: 53, scope: !3366)
!3737 = !DILocation(line: 1047, column: 65, scope: !3366)
!3738 = !DILocation(line: 1047, column: 73, scope: !3366)
!3739 = !DILocation(line: 1047, column: 49, scope: !3366)
!3740 = !DILocation(line: 1047, column: 5, scope: !3366)
!3741 = !DILocation(line: 1047, column: 8, scope: !3366)
!3742 = !DILocation(line: 1047, column: 22, scope: !3366)
!3743 = !DILocation(line: 1050, column: 47, scope: !3366)
!3744 = !DILocation(line: 1050, column: 26, scope: !3366)
!3745 = !DILocation(line: 90, column: 1007, scope: !3499, inlinedAt: !3385)
!3746 = !DILocation(line: 90, column: 1010, scope: !3499, inlinedAt: !3385)
!3747 = !DILocation(line: 90, column: 1023, scope: !3499, inlinedAt: !3385)
!3748 = !DILocation(line: 90, column: 1026, scope: !3499, inlinedAt: !3385)
!3749 = !DILocation(line: 90, column: 1021, scope: !3499, inlinedAt: !3385)
!3750 = !DILocation(line: 90, column: 1033, scope: !3499, inlinedAt: !3385)
!3751 = !DILocation(line: 90, column: 1007, scope: !3376, inlinedAt: !3385)
!3752 = !DILocation(line: 90, column: 1052, scope: !3507, inlinedAt: !3385)
!3753 = !DILocation(line: 90, column: 1055, scope: !3507, inlinedAt: !3385)
!3754 = !DILocation(line: 90, column: 1040, scope: !3507, inlinedAt: !3385)
!3755 = !DILocation(line: 90, column: 1043, scope: !3507, inlinedAt: !3385)
!3756 = !DILocation(line: 90, column: 1050, scope: !3507, inlinedAt: !3385)
!3757 = !DILocation(line: 90, column: 1067, scope: !3507, inlinedAt: !3385)
!3758 = !DILocation(line: 90, column: 1108, scope: !3375, inlinedAt: !3385)
!3759 = !DILocation(line: 90, column: 1086, scope: !3375, inlinedAt: !3385)
!3760 = !DILocation(line: 90, column: 889, scope: !3373, inlinedAt: !3384)
!3761 = !DILocation(line: 90, column: 892, scope: !3373, inlinedAt: !3384)
!3762 = !DILocation(line: 90, column: 868, scope: !3373, inlinedAt: !3384)
!3763 = !DILocation(line: 90, column: 102, scope: !3370, inlinedAt: !3383)
!3764 = !DILocation(line: 90, column: 105, scope: !3370, inlinedAt: !3383)
!3765 = !DILocation(line: 90, column: 151, scope: !3370, inlinedAt: !3383)
!3766 = !DILocation(line: 90, column: 150, scope: !3370, inlinedAt: !3383)
!3767 = !DILocation(line: 90, column: 153, scope: !3370, inlinedAt: !3383)
!3768 = !DILocation(line: 90, column: 160, scope: !3370, inlinedAt: !3383)
!3769 = !DILocation(line: 90, column: 118, scope: !3370, inlinedAt: !3383)
!3770 = !DILocation(line: 90, column: 1079, scope: !3375, inlinedAt: !3385)
!3771 = !DILocation(line: 90, column: 1112, scope: !3528, inlinedAt: !3385)
!3772 = !DILocation(line: 1050, column: 55, scope: !3366)
!3773 = !DILocation(line: 1050, column: 67, scope: !3366)
!3774 = !DILocation(line: 1050, column: 75, scope: !3366)
!3775 = !DILocation(line: 1050, column: 51, scope: !3366)
!3776 = !DILocation(line: 1050, column: 5, scope: !3366)
!3777 = !DILocation(line: 1050, column: 8, scope: !3366)
!3778 = !DILocation(line: 1050, column: 24, scope: !3366)
!3779 = !DILocation(line: 1053, column: 52, scope: !3366)
!3780 = !DILocation(line: 1053, column: 55, scope: !3366)
!3781 = !DILocation(line: 1053, column: 63, scope: !3366)
!3782 = !DILocation(line: 1053, column: 26, scope: !3366)
!3783 = !DILocation(line: 1053, column: 5, scope: !3366)
!3784 = !DILocation(line: 1053, column: 8, scope: !3366)
!3785 = !DILocation(line: 1053, column: 24, scope: !3366)
!3786 = !DILocation(line: 1054, column: 22, scope: !3366)
!3787 = !DILocation(line: 1054, column: 25, scope: !3366)
!3788 = !DILocation(line: 1054, column: 42, scope: !3366)
!3789 = !DILocation(line: 1054, column: 21, scope: !3366)
!3790 = !DILocation(line: 1054, column: 21, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !3366, file: !898, discriminator: 1)
!3792 = !DILocation(line: 1054, column: 57, scope: !3793)
!3793 = !DILexicalBlockFile(scope: !3366, file: !898, discriminator: 2)
!3794 = !DILocation(line: 1054, column: 60, scope: !3793)
!3795 = !DILocation(line: 1054, column: 21, scope: !3793)
!3796 = !DILocation(line: 1054, column: 21, scope: !3797)
!3797 = !DILexicalBlockFile(scope: !3366, file: !898, discriminator: 3)
!3798 = !DILocation(line: 1054, column: 5, scope: !3797)
!3799 = !DILocation(line: 1054, column: 8, scope: !3797)
!3800 = !DILocation(line: 1054, column: 18, scope: !3797)
!3801 = !DILocation(line: 1057, column: 13, scope: !3366)
!3802 = !DILocation(line: 1057, column: 16, scope: !3366)
!3803 = !DILocation(line: 1057, column: 22, scope: !3366)
!3804 = !DILocation(line: 1057, column: 5, scope: !3366)
!3805 = !DILocation(line: 1059, column: 9, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1057, column: 50)
!3807 = !DILocation(line: 1059, column: 12, scope: !3806)
!3808 = !DILocation(line: 1059, column: 23, scope: !3806)
!3809 = !DILocation(line: 1060, column: 9, scope: !3806)
!3810 = !DILocation(line: 1062, column: 9, scope: !3806)
!3811 = !DILocation(line: 1062, column: 12, scope: !3806)
!3812 = !DILocation(line: 1062, column: 23, scope: !3806)
!3813 = !DILocation(line: 1063, column: 9, scope: !3806)
!3814 = !DILocation(line: 1065, column: 9, scope: !3806)
!3815 = !DILocation(line: 1065, column: 12, scope: !3806)
!3816 = !DILocation(line: 1065, column: 23, scope: !3806)
!3817 = !DILocation(line: 1066, column: 9, scope: !3806)
!3818 = !DILocation(line: 1068, column: 39, scope: !3806)
!3819 = !DILocation(line: 1068, column: 42, scope: !3806)
!3820 = !DILocation(line: 1068, column: 71, scope: !3806)
!3821 = !DILocation(line: 1068, column: 74, scope: !3806)
!3822 = !DILocation(line: 1068, column: 80, scope: !3806)
!3823 = !DILocation(line: 1068, column: 9, scope: !3806)
!3824 = !DILocation(line: 1069, column: 9, scope: !3806)
!3825 = !DILocation(line: 1073, column: 40, scope: !3366)
!3826 = !DILocation(line: 1073, column: 21, scope: !3366)
!3827 = !DILocation(line: 1073, column: 5, scope: !3366)
!3828 = !DILocation(line: 1073, column: 8, scope: !3366)
!3829 = !DILocation(line: 1073, column: 19, scope: !3366)
!3830 = !DILocation(line: 1076, column: 9, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1076, column: 9)
!3832 = !DILocation(line: 1076, column: 12, scope: !3831)
!3833 = !DILocation(line: 1076, column: 38, scope: !3831)
!3834 = !DILocation(line: 1076, column: 41, scope: !3831)
!3835 = !DILocation(line: 1076, column: 57, scope: !3831)
!3836 = !DILocation(line: 1076, column: 35, scope: !3831)
!3837 = !DILocation(line: 1076, column: 26, scope: !3831)
!3838 = !DILocation(line: 1076, column: 9, scope: !3366)
!3839 = !DILocation(line: 1077, column: 9, scope: !3831)
!3840 = !DILocation(line: 1077, column: 12, scope: !3831)
!3841 = !DILocation(line: 1077, column: 24, scope: !3831)
!3842 = !DILocation(line: 1078, column: 14, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3831, file: !898, line: 1078, column: 14)
!3844 = !DILocation(line: 1078, column: 17, scope: !3843)
!3845 = !DILocation(line: 1078, column: 43, scope: !3843)
!3846 = !DILocation(line: 1078, column: 46, scope: !3843)
!3847 = !DILocation(line: 1078, column: 62, scope: !3843)
!3848 = !DILocation(line: 1078, column: 40, scope: !3843)
!3849 = !DILocation(line: 1078, column: 31, scope: !3843)
!3850 = !DILocation(line: 1078, column: 14, scope: !3831)
!3851 = !DILocation(line: 1079, column: 9, scope: !3843)
!3852 = !DILocation(line: 1079, column: 12, scope: !3843)
!3853 = !DILocation(line: 1079, column: 24, scope: !3843)
!3854 = !DILocation(line: 1081, column: 9, scope: !3843)
!3855 = !DILocation(line: 1081, column: 12, scope: !3843)
!3856 = !DILocation(line: 1081, column: 24, scope: !3843)
!3857 = !DILocation(line: 1084, column: 23, scope: !3366)
!3858 = !DILocation(line: 1084, column: 26, scope: !3366)
!3859 = !DILocation(line: 1084, column: 41, scope: !3366)
!3860 = !DILocation(line: 1084, column: 44, scope: !3366)
!3861 = !DILocation(line: 1084, column: 38, scope: !3366)
!3862 = !DILocation(line: 1084, column: 5, scope: !3366)
!3863 = !DILocation(line: 1084, column: 8, scope: !3366)
!3864 = !DILocation(line: 1084, column: 21, scope: !3366)
!3865 = !DILocation(line: 1085, column: 24, scope: !3366)
!3866 = !DILocation(line: 1085, column: 27, scope: !3366)
!3867 = !DILocation(line: 1085, column: 40, scope: !3366)
!3868 = !DILocation(line: 1085, column: 43, scope: !3366)
!3869 = !DILocation(line: 1085, column: 38, scope: !3366)
!3870 = !DILocation(line: 1085, column: 5, scope: !3366)
!3871 = !DILocation(line: 1085, column: 8, scope: !3366)
!3872 = !DILocation(line: 1085, column: 22, scope: !3366)
!3873 = !DILocation(line: 1086, column: 9, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1086, column: 9)
!3875 = !DILocation(line: 1086, column: 12, scope: !3874)
!3876 = !DILocation(line: 1086, column: 26, scope: !3874)
!3877 = !DILocation(line: 1086, column: 9, scope: !3366)
!3878 = !DILocation(line: 1087, column: 16, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3874, file: !898, line: 1086, column: 31)
!3880 = !DILocation(line: 1087, column: 19, scope: !3879)
!3881 = !DILocation(line: 1087, column: 9, scope: !3879)
!3882 = !DILocation(line: 1088, column: 9, scope: !3879)
!3883 = !DILocation(line: 1091, column: 25, scope: !3366)
!3884 = !DILocation(line: 1091, column: 28, scope: !3366)
!3885 = !DILocation(line: 1091, column: 22, scope: !3366)
!3886 = !DILocation(line: 1091, column: 5, scope: !3366)
!3887 = !DILocation(line: 1091, column: 8, scope: !3366)
!3888 = !DILocation(line: 1091, column: 18, scope: !3366)
!3889 = !DILocation(line: 1093, column: 31, scope: !3366)
!3890 = !DILocation(line: 1093, column: 34, scope: !3366)
!3891 = !DILocation(line: 1093, column: 66, scope: !3366)
!3892 = !DILocation(line: 1093, column: 69, scope: !3366)
!3893 = !DILocation(line: 1093, column: 46, scope: !3366)
!3894 = !DILocation(line: 1093, column: 44, scope: !3366)
!3895 = !DILocation(line: 1093, column: 85, scope: !3366)
!3896 = !DILocation(line: 1093, column: 88, scope: !3366)
!3897 = !DILocation(line: 1093, column: 101, scope: !3366)
!3898 = !DILocation(line: 1093, column: 82, scope: !3366)
!3899 = !DILocation(line: 1093, column: 5, scope: !3366)
!3900 = !DILocation(line: 1093, column: 8, scope: !3366)
!3901 = !DILocation(line: 1093, column: 29, scope: !3366)
!3902 = !DILocation(line: 1094, column: 9, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1094, column: 9)
!3904 = !DILocation(line: 1094, column: 12, scope: !3903)
!3905 = !DILocation(line: 1094, column: 35, scope: !3903)
!3906 = !DILocation(line: 1094, column: 38, scope: !3903)
!3907 = !DILocation(line: 1094, column: 33, scope: !3903)
!3908 = !DILocation(line: 1094, column: 9, scope: !3366)
!3909 = !DILocation(line: 1095, column: 35, scope: !3903)
!3910 = !DILocation(line: 1095, column: 38, scope: !3903)
!3911 = !DILocation(line: 1095, column: 9, scope: !3903)
!3912 = !DILocation(line: 1095, column: 12, scope: !3903)
!3913 = !DILocation(line: 1095, column: 33, scope: !3903)
!3914 = !DILocation(line: 1097, column: 27, scope: !3366)
!3915 = !DILocation(line: 1097, column: 30, scope: !3366)
!3916 = !DILocation(line: 1097, column: 40, scope: !3366)
!3917 = !DILocation(line: 1097, column: 50, scope: !3366)
!3918 = !DILocation(line: 1097, column: 53, scope: !3366)
!3919 = !DILocation(line: 1097, column: 66, scope: !3366)
!3920 = !DILocation(line: 1097, column: 47, scope: !3366)
!3921 = !DILocation(line: 1097, column: 5, scope: !3366)
!3922 = !DILocation(line: 1097, column: 8, scope: !3366)
!3923 = !DILocation(line: 1097, column: 25, scope: !3366)
!3924 = !DILocation(line: 1098, column: 9, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1098, column: 9)
!3926 = !DILocation(line: 1098, column: 12, scope: !3925)
!3927 = !DILocation(line: 1098, column: 31, scope: !3925)
!3928 = !DILocation(line: 1098, column: 34, scope: !3925)
!3929 = !DILocation(line: 1098, column: 29, scope: !3925)
!3930 = !DILocation(line: 1098, column: 9, scope: !3366)
!3931 = !DILocation(line: 1099, column: 31, scope: !3925)
!3932 = !DILocation(line: 1099, column: 34, scope: !3925)
!3933 = !DILocation(line: 1099, column: 9, scope: !3925)
!3934 = !DILocation(line: 1099, column: 12, scope: !3925)
!3935 = !DILocation(line: 1099, column: 29, scope: !3925)
!3936 = !DILocation(line: 1101, column: 27, scope: !3366)
!3937 = !DILocation(line: 1101, column: 30, scope: !3366)
!3938 = !DILocation(line: 1101, column: 40, scope: !3366)
!3939 = !DILocation(line: 1101, column: 51, scope: !3366)
!3940 = !DILocation(line: 1101, column: 54, scope: !3366)
!3941 = !DILocation(line: 1101, column: 67, scope: !3366)
!3942 = !DILocation(line: 1101, column: 48, scope: !3366)
!3943 = !DILocation(line: 1101, column: 5, scope: !3366)
!3944 = !DILocation(line: 1101, column: 8, scope: !3366)
!3945 = !DILocation(line: 1101, column: 25, scope: !3366)
!3946 = !DILocation(line: 1102, column: 9, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1102, column: 9)
!3948 = !DILocation(line: 1102, column: 12, scope: !3947)
!3949 = !DILocation(line: 1102, column: 31, scope: !3947)
!3950 = !DILocation(line: 1102, column: 34, scope: !3947)
!3951 = !DILocation(line: 1102, column: 29, scope: !3947)
!3952 = !DILocation(line: 1102, column: 9, scope: !3366)
!3953 = !DILocation(line: 1103, column: 31, scope: !3947)
!3954 = !DILocation(line: 1103, column: 34, scope: !3947)
!3955 = !DILocation(line: 1103, column: 9, scope: !3947)
!3956 = !DILocation(line: 1103, column: 12, scope: !3947)
!3957 = !DILocation(line: 1103, column: 29, scope: !3947)
!3958 = !DILocation(line: 1106, column: 10, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1106, column: 9)
!3960 = !DILocation(line: 1106, column: 22, scope: !3959)
!3961 = !DILocation(line: 1106, column: 25, scope: !3959)
!3962 = !DILocation(line: 1106, column: 19, scope: !3959)
!3963 = !DILocation(line: 1106, column: 37, scope: !3959)
!3964 = !DILocation(line: 1106, column: 40, scope: !3965)
!3965 = !DILexicalBlockFile(scope: !3959, file: !898, discriminator: 1)
!3966 = !DILocation(line: 1106, column: 58, scope: !3965)
!3967 = !DILocation(line: 1106, column: 61, scope: !3965)
!3968 = !DILocation(line: 1106, column: 55, scope: !3965)
!3969 = !DILocation(line: 1106, column: 73, scope: !3965)
!3970 = !DILocation(line: 1106, column: 93, scope: !3971)
!3971 = !DILexicalBlockFile(scope: !3959, file: !898, discriminator: 2)
!3972 = !DILocation(line: 1106, column: 76, scope: !3971)
!3973 = !DILocation(line: 1106, column: 96, scope: !3971)
!3974 = !DILocation(line: 1106, column: 9, scope: !3971)
!3975 = !DILocation(line: 1107, column: 9, scope: !3959)
!3976 = !DILocation(line: 1110, column: 9, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1110, column: 9)
!3978 = !DILocation(line: 1110, column: 12, scope: !3977)
!3979 = !DILocation(line: 1110, column: 18, scope: !3977)
!3980 = !DILocation(line: 1110, column: 9, scope: !3366)
!3981 = !DILocalVariable(name: "dca", scope: !3982, file: !898, line: 1111, type: !3983)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !898, line: 1110, column: 42)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64, align: 64)
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAContext", file: !3985, line: 66, baseType: !3986)
!3985 = !DIFile(filename: "libavcodec/dcadec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAContext", file: !3985, line: 46, size: 627968, align: 256, elements: !3987)
!3987 = !{!3988, !3989, !3990, !4164, !4183, !4274, !4275, !4276, !4281, !4282, !4283, !4284, !4285}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3986, file: !3985, line: 47, baseType: !1075, size: 64, align: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !3986, file: !3985, line: 48, baseType: !1070, size: 64, align: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3986, file: !3985, line: 50, baseType: !3991, size: 372992, align: 256, offset: 256)
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCACoreDecoder", file: !3992, line: 214, baseType: !3993)
!3992 = !DIFile(filename: "libavcodec/dca_core.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCACoreDecoder", file: !3992, line: 101, size: 372992, align: 256, elements: !3994)
!3994 = !{!3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4022, !4023, !4024, !4025, !4026, !4027, !4031, !4033, !4035, !4038, !4042, !4043, !4046, !4049, !4050, !4052, !4053, !4054, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4068, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4083, !4084, !4085, !4088, !4089, !4113, !4114, !4115, !4117, !4118, !4119, !4152, !4153, !4154, !4156, !4157, !4158, !4160, !4161, !4162, !4163}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !3993, file: !3992, line: 102, baseType: !1070, size: 64, align: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !3993, file: !3992, line: 103, baseType: !1789, size: 256, align: 64, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "gb_in", scope: !3993, file: !3992, line: 104, baseType: !1789, size: 256, align: 64, offset: 320)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "crc_present", scope: !3993, file: !3992, line: 107, baseType: !1004, size: 32, align: 32, offset: 576)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "npcmblocks", scope: !3993, file: !3992, line: 108, baseType: !1004, size: 32, align: 32, offset: 608)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !3993, file: !3992, line: 109, baseType: !1004, size: 32, align: 32, offset: 640)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mode", scope: !3993, file: !3992, line: 110, baseType: !1004, size: 32, align: 32, offset: 672)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !3993, file: !3992, line: 111, baseType: !1004, size: 32, align: 32, offset: 704)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !3993, file: !3992, line: 112, baseType: !1004, size: 32, align: 32, offset: 736)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "drc_present", scope: !3993, file: !3992, line: 113, baseType: !1004, size: 32, align: 32, offset: 768)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "ts_present", scope: !3993, file: !3992, line: 114, baseType: !1004, size: 32, align: 32, offset: 800)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "aux_present", scope: !3993, file: !3992, line: 115, baseType: !1004, size: 32, align: 32, offset: 832)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_type", scope: !3993, file: !3992, line: 116, baseType: !1004, size: 32, align: 32, offset: 864)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_present", scope: !3993, file: !3992, line: 117, baseType: !1004, size: 32, align: 32, offset: 896)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "sync_ssf", scope: !3993, file: !3992, line: 118, baseType: !1004, size: 32, align: 32, offset: 928)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_present", scope: !3993, file: !3992, line: 119, baseType: !1004, size: 32, align: 32, offset: 960)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_history", scope: !3993, file: !3992, line: 120, baseType: !1004, size: 32, align: 32, offset: 992)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "filter_perfect", scope: !3993, file: !3992, line: 121, baseType: !1004, size: 32, align: 32, offset: 1024)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "source_pcm_res", scope: !3993, file: !3992, line: 122, baseType: !1004, size: 32, align: 32, offset: 1056)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "es_format", scope: !3993, file: !3992, line: 123, baseType: !1004, size: 32, align: 32, offset: 1088)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "sumdiff_front", scope: !3993, file: !3992, line: 124, baseType: !1004, size: 32, align: 32, offset: 1120)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "sumdiff_surround", scope: !3993, file: !3992, line: 125, baseType: !1004, size: 32, align: 32, offset: 1152)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "nsubframes", scope: !3993, file: !3992, line: 128, baseType: !1004, size: 32, align: 32, offset: 1184)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !3993, file: !3992, line: 129, baseType: !1004, size: 32, align: 32, offset: 1216)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask", scope: !3993, file: !3992, line: 130, baseType: !1004, size: 32, align: 32, offset: 1248)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "nsubbands", scope: !3993, file: !3992, line: 131, baseType: !4021, size: 56, align: 8, offset: 1280)
!4021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 56, align: 8, elements: !1036)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "subband_vq_start", scope: !3993, file: !3992, line: 132, baseType: !4021, size: 56, align: 8, offset: 1336)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "joint_intensity_index", scope: !3993, file: !3992, line: 133, baseType: !4021, size: 56, align: 8, offset: 1392)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "transition_mode_sel", scope: !3993, file: !3992, line: 134, baseType: !4021, size: 56, align: 8, offset: 1448)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factor_sel", scope: !3993, file: !3992, line: 135, baseType: !4021, size: 56, align: 8, offset: 1504)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "bit_allocation_sel", scope: !3993, file: !3992, line: 136, baseType: !4021, size: 56, align: 8, offset: 1560)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "quant_index_sel", scope: !3993, file: !3992, line: 137, baseType: !4028, size: 560, align: 8, offset: 1616)
!4028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 560, align: 8, elements: !4029)
!4029 = !{!1037, !4030}
!4030 = !DISubrange(count: 10)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factor_adj", scope: !3993, file: !3992, line: 138, baseType: !4032, size: 2240, align: 32, offset: 2176)
!4032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 2240, align: 32, elements: !4029)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "nsubsubframes", scope: !3993, file: !3992, line: 141, baseType: !4034, size: 128, align: 8, offset: 4416)
!4034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 128, align: 8, elements: !1031)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_mode", scope: !3993, file: !3992, line: 142, baseType: !4036, size: 3584, align: 8, offset: 4544)
!4036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 3584, align: 8, elements: !4037)
!4037 = !{!1037, !1838}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_vq_index", scope: !3993, file: !3992, line: 143, baseType: !4039, size: 7168, align: 16, offset: 8128)
!4039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4040, size: 7168, align: 16, elements: !4037)
!4040 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1016, line: 37, baseType: !4041)
!4041 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "bit_allocation", scope: !3993, file: !3992, line: 144, baseType: !4036, size: 3584, align: 8, offset: 15296)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "transition_mode", scope: !3993, file: !3992, line: 145, baseType: !4044, size: 28672, align: 8, offset: 18880)
!4044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 28672, align: 8, elements: !4045)
!4045 = !{!1032, !1037, !1821}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factors", scope: !3993, file: !3992, line: 146, baseType: !4047, size: 14336, align: 32, offset: 47552)
!4047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 14336, align: 32, elements: !4048)
!4048 = !{!1037, !1821, !1857}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "joint_scale_sel", scope: !3993, file: !3992, line: 147, baseType: !4021, size: 56, align: 8, offset: 61888)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "joint_scale_factors", scope: !3993, file: !3992, line: 148, baseType: !4051, size: 14336, align: 32, offset: 61952)
!4051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 14336, align: 32, elements: !4037)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "prim_dmix_embedded", scope: !3993, file: !3992, line: 151, baseType: !1004, size: 32, align: 32, offset: 76288)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "prim_dmix_type", scope: !3993, file: !3992, line: 152, baseType: !1004, size: 32, align: 32, offset: 76320)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "prim_dmix_coeff", scope: !3993, file: !3992, line: 153, baseType: !4055, size: 768, align: 32, offset: 76352)
!4055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 768, align: 32, elements: !4056)
!4056 = !{!4057}
!4057 = !DISubrange(count: 24)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "ext_audio_mask", scope: !3993, file: !3992, line: 156, baseType: !1004, size: 32, align: 32, offset: 77120)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "xch_pos", scope: !3993, file: !3992, line: 159, baseType: !1004, size: 32, align: 32, offset: 77152)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_crc_present", scope: !3993, file: !3992, line: 162, baseType: !1004, size: 32, align: 32, offset: 77184)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_mask_nbits", scope: !3993, file: !3992, line: 163, baseType: !1004, size: 32, align: 32, offset: 77216)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_core_mask", scope: !3993, file: !3992, line: 164, baseType: !1004, size: 32, align: 32, offset: 77248)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_spkr_mask", scope: !3993, file: !3992, line: 165, baseType: !1004, size: 32, align: 32, offset: 77280)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_embedded", scope: !3993, file: !3992, line: 166, baseType: !1004, size: 32, align: 32, offset: 77312)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_scale_inv", scope: !3993, file: !3992, line: 167, baseType: !1004, size: 32, align: 32, offset: 77344)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_mask", scope: !3993, file: !3992, line: 168, baseType: !4067, size: 64, align: 32, offset: 77376)
!4067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 64, align: 32, elements: !2007)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_dmix_coeff", scope: !3993, file: !3992, line: 169, baseType: !4069, size: 384, align: 32, offset: 77440)
!4069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 384, align: 32, elements: !4070)
!4070 = !{!1834}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "xxch_pos", scope: !3993, file: !3992, line: 170, baseType: !1004, size: 32, align: 32, offset: 77824)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "x96_rev_no", scope: !3993, file: !3992, line: 173, baseType: !1004, size: 32, align: 32, offset: 77856)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "x96_crc_present", scope: !3993, file: !3992, line: 174, baseType: !1004, size: 32, align: 32, offset: 77888)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "x96_nchannels", scope: !3993, file: !3992, line: 175, baseType: !1004, size: 32, align: 32, offset: 77920)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "x96_high_res", scope: !3993, file: !3992, line: 176, baseType: !1004, size: 32, align: 32, offset: 77952)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_start", scope: !3993, file: !3992, line: 177, baseType: !1004, size: 32, align: 32, offset: 77984)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "x96_rand", scope: !3993, file: !3992, line: 178, baseType: !1004, size: 32, align: 32, offset: 78016)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "x96_pos", scope: !3993, file: !3992, line: 179, baseType: !1004, size: 32, align: 32, offset: 78048)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_size", scope: !3993, file: !3992, line: 182, baseType: !1005, size: 32, align: 32, offset: 78080)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_buffer", scope: !3993, file: !3992, line: 183, baseType: !1999, size: 64, align: 64, offset: 78144)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "x96_subband_samples", scope: !3993, file: !3992, line: 184, baseType: !4082, size: 28672, align: 64, offset: 78208)
!4082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 28672, align: 64, elements: !4037)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "subband_size", scope: !3993, file: !3992, line: 186, baseType: !1005, size: 32, align: 32, offset: 106880)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "subband_buffer", scope: !3993, file: !3992, line: 187, baseType: !1999, size: 64, align: 64, offset: 106944)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "subband_samples", scope: !3993, file: !3992, line: 188, baseType: !4086, size: 14336, align: 64, offset: 107008)
!4086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 14336, align: 64, elements: !4087)
!4087 = !{!1037, !1821}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_samples", scope: !3993, file: !3992, line: 189, baseType: !1999, size: 64, align: 64, offset: 121344)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp_data", scope: !3993, file: !3992, line: 192, baseType: !4090, size: 245504, align: 256, offset: 121600)
!4090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4091, size: 245504, align: 256, elements: !1036)
!4091 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCADSPData", file: !3992, line: 99, baseType: !4092)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCADSPData", file: !3992, line: 87, size: 35072, align: 256, elements: !4093)
!4093 = !{!4094, !4112}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !4092, file: !3992, line: 97, baseType: !4095, size: 34816, align: 256)
!4095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4092, file: !3992, line: 88, size: 34816, align: 256, elements: !4096)
!4096 = !{!4097, !4105}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "flt", scope: !4095, file: !3992, line: 92, baseType: !4098, size: 34816, align: 256)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4095, file: !3992, line: 89, size: 34816, align: 256, elements: !4099)
!4099 = !{!4100, !4104}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "hist1", scope: !4098, file: !3992, line: 90, baseType: !4101, size: 32768, align: 32)
!4101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 32768, align: 32, elements: !4102)
!4102 = !{!4103}
!4103 = !DISubrange(count: 1024)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "hist2", scope: !4098, file: !3992, line: 91, baseType: !1873, size: 2048, align: 32, offset: 32768)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "fix", scope: !4095, file: !3992, line: 96, baseType: !4106, size: 34816, align: 256)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4095, file: !3992, line: 93, size: 34816, align: 256, elements: !4107)
!4107 = !{!4108, !4110}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "hist1", scope: !4106, file: !3992, line: 94, baseType: !4109, size: 32768, align: 32)
!4109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 32768, align: 32, elements: !4102)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "hist2", scope: !4106, file: !3992, line: 95, baseType: !4111, size: 2048, align: 32, offset: 32768)
!4111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 2048, align: 32, elements: !1874)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4092, file: !3992, line: 98, baseType: !1004, size: 32, align: 32, offset: 34816)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !3993, file: !3992, line: 193, baseType: !1989, size: 64, align: 64, offset: 367104)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "dcadct", scope: !3993, file: !3992, line: 194, baseType: !2043, size: 128, align: 64, offset: 367168)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "imdct", scope: !3993, file: !3992, line: 195, baseType: !4116, size: 1792, align: 64, offset: 367296)
!4116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 1792, align: 64, elements: !2007)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "synth", scope: !3993, file: !3992, line: 196, baseType: !2028, size: 256, align: 64, offset: 369088)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "float_dsp", scope: !3993, file: !3992, line: 197, baseType: !1944, size: 64, align: 64, offset: 369344)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_dsp", scope: !3993, file: !3992, line: 198, baseType: !4120, size: 64, align: 64, offset: 369408)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64, align: 64)
!4121 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFixedDSPContext", file: !4122, line: 154, baseType: !4123)
!4122 = !DIFile(filename: "./libavutil/fixed_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFixedDSPContext", file: !4122, line: 56, size: 448, align: 64, elements: !4124)
!4124 = !{!4125, !4130, !4134, !4138, !4139, !4143, !4147}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window_scaled", scope: !4123, file: !4122, line: 80, baseType: !4126, size: 64, align: 64)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64, align: 64)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{null, !4129, !2001, !2001, !2001, !1004, !1019}
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64, align: 64)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !4123, file: !4122, line: 98, baseType: !4131, size: 64, align: 64, offset: 64)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64, align: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{null, !1999, !2001, !2001, !2001, !1004}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !4123, file: !4122, line: 113, baseType: !4135, size: 64, align: 64, offset: 128)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64, align: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{null, !1357, !1143, !1143, !1004}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !4123, file: !4122, line: 116, baseType: !4135, size: 64, align: 64, offset: 192)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !4123, file: !4122, line: 132, baseType: !4140, size: 64, align: 64, offset: 256)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64, align: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{null, !1357, !1143, !1143, !1143, !1004}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_fixed", scope: !4123, file: !4122, line: 144, baseType: !4144, size: 64, align: 64, offset: 320)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64, align: 64)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!1004, !1143, !1143, !1004}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_fixed", scope: !4123, file: !4122, line: 153, baseType: !4148, size: 64, align: 64, offset: 384)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64, align: 64)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{null, !4151, !4151, !1004}
!4151 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1357)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "output_size", scope: !3993, file: !3992, line: 201, baseType: !1005, size: 32, align: 32, offset: 369472)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "output_buffer", scope: !3993, file: !3992, line: 202, baseType: !1008, size: 64, align: 64, offset: 369536)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "output_samples", scope: !3993, file: !3992, line: 203, baseType: !4155, size: 2048, align: 64, offset: 369600)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 2048, align: 64, elements: !1824)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "output_history_lfe_fixed", scope: !3993, file: !3992, line: 204, baseType: !2000, size: 32, align: 32, offset: 371648)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "output_history_lfe_float", scope: !3993, file: !3992, line: 205, baseType: !1007, size: 32, align: 32, offset: 371680)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "ch_remap", scope: !3993, file: !3992, line: 207, baseType: !4159, size: 1024, align: 32, offset: 371712)
!4159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 1024, align: 32, elements: !1824)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "request_mask", scope: !3993, file: !3992, line: 208, baseType: !1004, size: 32, align: 32, offset: 372736)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "npcmsamples", scope: !3993, file: !3992, line: 210, baseType: !1004, size: 32, align: 32, offset: 372768)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "output_rate", scope: !3993, file: !3992, line: 211, baseType: !1004, size: 32, align: 32, offset: 372800)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "filter_mode", scope: !3993, file: !3992, line: 213, baseType: !1004, size: 32, align: 32, offset: 372832)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "exss", scope: !3986, file: !3985, line: 51, baseType: !4165, size: 1664, align: 64, offset: 373248)
!4165 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAExssParser", file: !2099, line: 88, baseType: !4166)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAExssParser", file: !2099, line: 71, size: 1664, align: 64, elements: !4167)
!4167 = !{!4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !4166, file: !2099, line: 72, baseType: !1070, size: 64, align: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !4166, file: !2099, line: 73, baseType: !1789, size: 256, align: 64, offset: 64)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "exss_index", scope: !4166, file: !2099, line: 75, baseType: !1004, size: 32, align: 32, offset: 320)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "exss_size_nbits", scope: !4166, file: !2099, line: 76, baseType: !1004, size: 32, align: 32, offset: 352)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "exss_size", scope: !4166, file: !2099, line: 77, baseType: !1004, size: 32, align: 32, offset: 384)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "static_fields_present", scope: !4166, file: !2099, line: 79, baseType: !1004, size: 32, align: 32, offset: 416)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "npresents", scope: !4166, file: !2099, line: 80, baseType: !1004, size: 32, align: 32, offset: 448)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "nassets", scope: !4166, file: !2099, line: 81, baseType: !1004, size: 32, align: 32, offset: 480)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "mix_metadata_enabled", scope: !4166, file: !2099, line: 83, baseType: !1004, size: 32, align: 32, offset: 512)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "nmixoutconfigs", scope: !4166, file: !2099, line: 84, baseType: !1004, size: 32, align: 32, offset: 544)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "nmixoutchs", scope: !4166, file: !2099, line: 85, baseType: !1230, size: 128, align: 32, offset: 576)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "assets", scope: !4166, file: !2099, line: 87, baseType: !4180, size: 960, align: 32, offset: 704)
!4180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 960, align: 32, elements: !4181)
!4181 = !{!4182}
!4182 = !DISubrange(count: 1)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "xll", scope: !3986, file: !3985, line: 52, baseType: !4184, size: 72448, align: 256, offset: 375040)
!4184 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAXllDecoder", file: !4185, line: 142, baseType: !4186)
!4185 = !DIFile(filename: "libavcodec/dca_xll.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAXllDecoder", file: !4185, line: 105, size: 72448, align: 256, elements: !4187)
!4187 = !{!4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !4186, file: !4185, line: 106, baseType: !1070, size: 64, align: 64)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !4186, file: !4185, line: 107, baseType: !1789, size: 256, align: 64, offset: 64)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !4186, file: !4185, line: 109, baseType: !1004, size: 32, align: 32, offset: 320)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "nchsets", scope: !4186, file: !4185, line: 110, baseType: !1004, size: 32, align: 32, offset: 352)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "nframesegs", scope: !4186, file: !4185, line: 111, baseType: !1004, size: 32, align: 32, offset: 384)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "nsegsamples_log2", scope: !4186, file: !4185, line: 112, baseType: !1004, size: 32, align: 32, offset: 416)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "nsegsamples", scope: !4186, file: !4185, line: 113, baseType: !1004, size: 32, align: 32, offset: 448)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "nframesamples_log2", scope: !4186, file: !4185, line: 114, baseType: !1004, size: 32, align: 32, offset: 480)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "nframesamples", scope: !4186, file: !4185, line: 115, baseType: !1004, size: 32, align: 32, offset: 512)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "seg_size_nbits", scope: !4186, file: !4185, line: 116, baseType: !1004, size: 32, align: 32, offset: 544)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "band_crc_present", scope: !4186, file: !4185, line: 117, baseType: !1004, size: 32, align: 32, offset: 576)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "scalable_lsbs", scope: !4186, file: !4185, line: 118, baseType: !1004, size: 32, align: 32, offset: 608)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask_nbits", scope: !4186, file: !4185, line: 119, baseType: !1004, size: 32, align: 32, offset: 640)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_lsb_width", scope: !4186, file: !4185, line: 120, baseType: !1004, size: 32, align: 32, offset: 672)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "chset", scope: !4186, file: !4185, line: 122, baseType: !4203, size: 69120, align: 256, offset: 768)
!4203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4204, size: 69120, align: 256, elements: !2311)
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAXllChSet", file: !4185, line: 103, baseType: !4205)
!4205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAXllChSet", file: !4185, line: 64, size: 23040, align: 256, elements: !4206)
!4206 = !{!4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4220, !4222, !4223, !4224, !4225, !4226, !4227, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4257, !4259}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !4205, file: !4185, line: 66, baseType: !1004, size: 32, align: 32)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "residual_encode", scope: !4205, file: !4185, line: 67, baseType: !1004, size: 32, align: 32, offset: 32)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_bit_res", scope: !4205, file: !4185, line: 68, baseType: !1004, size: 32, align: 32, offset: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "storage_bit_res", scope: !4205, file: !4185, line: 69, baseType: !1004, size: 32, align: 32, offset: 96)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !4205, file: !4185, line: 70, baseType: !1004, size: 32, align: 32, offset: 128)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "primary_chset", scope: !4205, file: !4185, line: 72, baseType: !1004, size: 32, align: 32, offset: 160)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_coeffs_present", scope: !4205, file: !4185, line: 73, baseType: !1004, size: 32, align: 32, offset: 192)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_embedded", scope: !4205, file: !4185, line: 74, baseType: !1004, size: 32, align: 32, offset: 224)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_type", scope: !4205, file: !4185, line: 75, baseType: !1004, size: 32, align: 32, offset: 256)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "hier_chset", scope: !4205, file: !4185, line: 76, baseType: !1004, size: 32, align: 32, offset: 288)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "hier_ofs", scope: !4205, file: !4185, line: 77, baseType: !1004, size: 32, align: 32, offset: 320)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_coeff", scope: !4205, file: !4185, line: 78, baseType: !4219, size: 4096, align: 32, offset: 352)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 4096, align: 32, elements: !1871)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale", scope: !4205, file: !4185, line: 79, baseType: !4221, size: 512, align: 32, offset: 4448)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 512, align: 32, elements: !1031)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_scale_inv", scope: !4205, file: !4185, line: 80, baseType: !4221, size: 512, align: 32, offset: 4960)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "ch_mask", scope: !4205, file: !4185, line: 81, baseType: !1004, size: 32, align: 32, offset: 5472)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "ch_remap", scope: !4205, file: !4185, line: 82, baseType: !1224, size: 256, align: 32, offset: 5504)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "nfreqbands", scope: !4205, file: !4185, line: 84, baseType: !1004, size: 32, align: 32, offset: 5760)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "nabits", scope: !4205, file: !4185, line: 85, baseType: !1004, size: 32, align: 32, offset: 5792)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !4205, file: !4185, line: 87, baseType: !4228, size: 13312, align: 64, offset: 5824)
!4228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4229, size: 13312, align: 64, elements: !2007)
!4229 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCAXllBand", file: !4185, line: 62, baseType: !4230)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DCAXllBand", file: !4185, line: 44, size: 6656, align: 64, elements: !4231)
!4231 = !{!4232, !4233, !4234, !4235, !4236, !4237, !4238, !4241, !4242, !4243, !4244, !4245, !4247}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "decor_enabled", scope: !4230, file: !4185, line: 45, baseType: !1004, size: 32, align: 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "orig_order", scope: !4230, file: !4185, line: 46, baseType: !1224, size: 256, align: 32, offset: 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "decor_coeff", scope: !4230, file: !4185, line: 47, baseType: !1230, size: 128, align: 32, offset: 288)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pred_order", scope: !4230, file: !4185, line: 49, baseType: !1224, size: 256, align: 32, offset: 416)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "highest_pred_order", scope: !4230, file: !4185, line: 50, baseType: !1004, size: 32, align: 32, offset: 672)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_pred_order", scope: !4230, file: !4185, line: 51, baseType: !1224, size: 256, align: 32, offset: 704)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_refl_coeff", scope: !4230, file: !4185, line: 52, baseType: !4239, size: 4096, align: 32, offset: 960)
!4239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 4096, align: 32, elements: !4240)
!4240 = !{!1222, !1032}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "dmix_embedded", scope: !4230, file: !4185, line: 54, baseType: !1004, size: 32, align: 32, offset: 5056)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "lsb_section_size", scope: !4230, file: !4185, line: 56, baseType: !1004, size: 32, align: 32, offset: 5088)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "nscalablelsbs", scope: !4230, file: !4185, line: 57, baseType: !1224, size: 256, align: 32, offset: 5120)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width_adjust", scope: !4230, file: !4185, line: 58, baseType: !1224, size: 256, align: 32, offset: 5376)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "msb_sample_buffer", scope: !4230, file: !4185, line: 60, baseType: !4246, size: 512, align: 64, offset: 5632)
!4246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 512, align: 64, elements: !1221)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "lsb_sample_buffer", scope: !4230, file: !4185, line: 61, baseType: !4246, size: 512, align: 64, offset: 6144)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "seg_common", scope: !4205, file: !4185, line: 90, baseType: !1004, size: 32, align: 32, offset: 19136)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "rice_code_flag", scope: !4205, file: !4185, line: 91, baseType: !1224, size: 256, align: 32, offset: 19168)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "bitalloc_hybrid_linear", scope: !4205, file: !4185, line: 92, baseType: !1224, size: 256, align: 32, offset: 19424)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "bitalloc_part_a", scope: !4205, file: !4185, line: 93, baseType: !1224, size: 256, align: 32, offset: 19680)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "bitalloc_part_b", scope: !4205, file: !4185, line: 94, baseType: !1224, size: 256, align: 32, offset: 19936)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "nsamples_part_a", scope: !4205, file: !4185, line: 95, baseType: !1224, size: 256, align: 32, offset: 20192)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "deci_history", scope: !4205, file: !4185, line: 98, baseType: !4255, size: 2048, align: 32, offset: 20480)
!4255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2000, size: 2048, align: 32, elements: !4256)
!4256 = !{!1222, !1222}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !4205, file: !4185, line: 101, baseType: !4258, size: 96, align: 32, offset: 22528)
!4258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, size: 96, align: 32, elements: !2311)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "sample_buffer", scope: !4205, file: !4185, line: 102, baseType: !4260, size: 192, align: 64, offset: 22656)
!4260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 192, align: 64, elements: !2311)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "navi", scope: !4186, file: !4185, line: 124, baseType: !1357, size: 64, align: 64, offset: 69888)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "navi_size", scope: !4186, file: !4185, line: 125, baseType: !1005, size: 32, align: 32, offset: 69952)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "nfreqbands", scope: !4186, file: !4185, line: 127, baseType: !1004, size: 32, align: 32, offset: 69984)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !4186, file: !4185, line: 128, baseType: !1004, size: 32, align: 32, offset: 70016)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "nreschsets", scope: !4186, file: !4185, line: 129, baseType: !1004, size: 32, align: 32, offset: 70048)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "nactivechsets", scope: !4186, file: !4185, line: 130, baseType: !1004, size: 32, align: 32, offset: 70080)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "hd_stream_id", scope: !4186, file: !4185, line: 132, baseType: !1004, size: 32, align: 32, offset: 70112)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "pbr_buffer", scope: !4186, file: !4185, line: 134, baseType: !1195, size: 64, align: 64, offset: 70144)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "pbr_length", scope: !4186, file: !4185, line: 135, baseType: !1004, size: 32, align: 32, offset: 70208)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "pbr_delay", scope: !4186, file: !4185, line: 136, baseType: !1004, size: 32, align: 32, offset: 70240)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !4186, file: !4185, line: 138, baseType: !1989, size: 64, align: 64, offset: 70272)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "output_mask", scope: !4186, file: !4185, line: 140, baseType: !1004, size: 32, align: 32, offset: 70336)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "output_samples", scope: !4186, file: !4185, line: 141, baseType: !4155, size: 2048, align: 64, offset: 70400)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "lbr", scope: !3986, file: !3985, line: 53, baseType: !1065, size: 178944, align: 256, offset: 447488)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "dcadsp", scope: !3986, file: !3985, line: 55, baseType: !1990, size: 1280, align: 64, offset: 626432)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "crctab", scope: !3986, file: !3985, line: 57, baseType: !4277, size: 64, align: 64, offset: 627712)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64, align: 64)
!4278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4279)
!4279 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCRC", file: !4280, line: 47, baseType: !1015)
!4280 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !3986, file: !3985, line: 59, baseType: !1195, size: 64, align: 64, offset: 627776)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !3986, file: !3985, line: 60, baseType: !1005, size: 32, align: 32, offset: 627840)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3986, file: !3985, line: 62, baseType: !1004, size: 32, align: 32, offset: 627872)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !3986, file: !3985, line: 64, baseType: !1004, size: 32, align: 32, offset: 627904)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "core_only", scope: !3986, file: !3985, line: 65, baseType: !1004, size: 32, align: 32, offset: 627936)
!4286 = !DILocation(line: 1111, column: 21, scope: !3982)
!4287 = !DILocation(line: 1111, column: 27, scope: !3982)
!4288 = !DILocation(line: 1111, column: 30, scope: !3982)
!4289 = !DILocation(line: 1111, column: 37, scope: !3982)
!4290 = !DILocation(line: 1113, column: 13, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !3982, file: !898, line: 1113, column: 13)
!4292 = !DILocation(line: 1113, column: 16, scope: !4291)
!4293 = !DILocation(line: 1113, column: 32, scope: !4291)
!4294 = !DILocation(line: 1113, column: 36, scope: !4291)
!4295 = !DILocation(line: 1113, column: 39, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !4291, file: !898, discriminator: 1)
!4297 = !DILocation(line: 1113, column: 42, scope: !4296)
!4298 = !DILocation(line: 1113, column: 58, scope: !4296)
!4299 = !DILocation(line: 1113, column: 13, scope: !4296)
!4300 = !DILocation(line: 1114, column: 20, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4291, file: !898, line: 1113, column: 68)
!4302 = !DILocation(line: 1114, column: 23, scope: !4301)
!4303 = !DILocation(line: 1114, column: 13, scope: !4301)
!4304 = !DILocation(line: 1115, column: 13, scope: !4301)
!4305 = !DILocation(line: 1119, column: 13, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !3982, file: !898, line: 1119, column: 13)
!4307 = !DILocation(line: 1119, column: 18, scope: !4306)
!4308 = !DILocation(line: 1119, column: 41, scope: !4306)
!4309 = !DILocation(line: 1119, column: 86, scope: !4306)
!4310 = !DILocation(line: 1119, column: 91, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4306, file: !898, discriminator: 1)
!4312 = !DILocation(line: 1119, column: 94, scope: !4311)
!4313 = !DILocation(line: 1119, column: 101, scope: !4311)
!4314 = !DILocation(line: 1119, column: 13, scope: !4311)
!4315 = !DILocation(line: 1120, column: 43, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4306, file: !898, line: 1119, column: 107)
!4317 = !DILocation(line: 1120, column: 46, scope: !4316)
!4318 = !DILocation(line: 1120, column: 13, scope: !4316)
!4319 = !DILocation(line: 1121, column: 13, scope: !4316)
!4320 = !DILocation(line: 1121, column: 16, scope: !4316)
!4321 = !DILocation(line: 1121, column: 23, scope: !4316)
!4322 = !DILocation(line: 1122, column: 9, scope: !4316)
!4323 = !DILocation(line: 1125, column: 9, scope: !3982)
!4324 = !DILocation(line: 1125, column: 12, scope: !3982)
!4325 = !DILocation(line: 1125, column: 28, scope: !3982)
!4326 = !DILocation(line: 1126, column: 9, scope: !3982)
!4327 = !DILocation(line: 1126, column: 12, scope: !3982)
!4328 = !DILocation(line: 1126, column: 22, scope: !3982)
!4329 = !DILocation(line: 1127, column: 9, scope: !3982)
!4330 = !DILocation(line: 1127, column: 12, scope: !3982)
!4331 = !DILocation(line: 1127, column: 20, scope: !3982)
!4332 = !DILocation(line: 1128, column: 9, scope: !3982)
!4333 = !DILocation(line: 1128, column: 12, scope: !3982)
!4334 = !DILocation(line: 1128, column: 18, scope: !3982)
!4335 = !DILocation(line: 1129, column: 5, scope: !3982)
!4336 = !DILocation(line: 1132, column: 9, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !3366, file: !898, line: 1132, column: 9)
!4338 = !DILocation(line: 1132, column: 21, scope: !4337)
!4339 = !DILocation(line: 1132, column: 24, scope: !4337)
!4340 = !DILocation(line: 1132, column: 18, scope: !4337)
!4341 = !DILocation(line: 1133, column: 9, scope: !4337)
!4342 = !DILocation(line: 1133, column: 12, scope: !4343)
!4343 = !DILexicalBlockFile(scope: !4337, file: !898, discriminator: 1)
!4344 = !DILocation(line: 1133, column: 30, scope: !4343)
!4345 = !DILocation(line: 1133, column: 33, scope: !4343)
!4346 = !DILocation(line: 1133, column: 27, scope: !4343)
!4347 = !DILocation(line: 1134, column: 9, scope: !4337)
!4348 = !DILocation(line: 1134, column: 12, scope: !4343)
!4349 = !DILocation(line: 1134, column: 29, scope: !4343)
!4350 = !DILocation(line: 1134, column: 32, scope: !4343)
!4351 = !DILocation(line: 1134, column: 26, scope: !4343)
!4352 = !DILocation(line: 1132, column: 9, scope: !3791)
!4353 = !DILocation(line: 1135, column: 33, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !898, line: 1135, column: 13)
!4355 = distinct !DILexicalBlock(scope: !4337, file: !898, line: 1134, column: 43)
!4356 = !DILocation(line: 1135, column: 13, scope: !4354)
!4357 = !DILocation(line: 1135, column: 36, scope: !4354)
!4358 = !DILocation(line: 1135, column: 13, scope: !4355)
!4359 = !DILocation(line: 1136, column: 13, scope: !4354)
!4360 = !DILocation(line: 1137, column: 26, scope: !4355)
!4361 = !DILocation(line: 1137, column: 9, scope: !4355)
!4362 = !DILocation(line: 1138, column: 5, scope: !4355)
!4363 = !DILocation(line: 1140, column: 5, scope: !3366)
!4364 = !DILocation(line: 1141, column: 1, scope: !3366)
!4365 = distinct !DISubprogram(name: "parse_lfe_chunk", scope: !898, file: !898, line: 247, type: !4366, isLocal: true, isDefinition: true, scopeLine: 248, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!1004, !1064, !4368}
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64, align: 64)
!4369 = !DILocalVariable(name: "s", arg: 1, scope: !4365, file: !898, line: 247, type: !1064)
!4370 = !DILocation(line: 247, column: 43, scope: !4365)
!4371 = !DILocalVariable(name: "chunk", arg: 2, scope: !4365, file: !898, line: 247, type: !4368)
!4372 = !DILocation(line: 247, column: 56, scope: !4365)
!4373 = !DILocation(line: 249, column: 11, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4365, file: !898, line: 249, column: 9)
!4375 = !DILocation(line: 249, column: 14, scope: !4374)
!4376 = !DILocation(line: 249, column: 20, scope: !4374)
!4377 = !DILocation(line: 249, column: 9, scope: !4365)
!4378 = !DILocation(line: 250, column: 9, scope: !4374)
!4379 = !DILocation(line: 252, column: 10, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4365, file: !898, line: 252, column: 9)
!4381 = !DILocation(line: 252, column: 17, scope: !4380)
!4382 = !DILocation(line: 252, column: 9, scope: !4365)
!4383 = !DILocation(line: 253, column: 9, scope: !4380)
!4384 = !DILocation(line: 255, column: 25, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4365, file: !898, line: 255, column: 9)
!4386 = !DILocation(line: 255, column: 28, scope: !4385)
!4387 = !DILocation(line: 255, column: 32, scope: !4385)
!4388 = !DILocation(line: 255, column: 39, scope: !4385)
!4389 = !DILocation(line: 255, column: 45, scope: !4385)
!4390 = !DILocation(line: 255, column: 52, scope: !4385)
!4391 = !DILocation(line: 255, column: 9, scope: !4385)
!4392 = !DILocation(line: 255, column: 57, scope: !4385)
!4393 = !DILocation(line: 255, column: 9, scope: !4365)
!4394 = !DILocation(line: 256, column: 9, scope: !4385)
!4395 = !DILocation(line: 259, column: 9, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4365, file: !898, line: 259, column: 9)
!4397 = !DILocation(line: 259, column: 16, scope: !4396)
!4398 = !DILocation(line: 259, column: 20, scope: !4396)
!4399 = !DILocation(line: 259, column: 9, scope: !4365)
!4400 = !DILocation(line: 260, column: 29, scope: !4396)
!4401 = !DILocation(line: 260, column: 16, scope: !4396)
!4402 = !DILocation(line: 260, column: 9, scope: !4396)
!4403 = !DILocation(line: 261, column: 9, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4365, file: !898, line: 261, column: 9)
!4405 = !DILocation(line: 261, column: 16, scope: !4404)
!4406 = !DILocation(line: 261, column: 20, scope: !4404)
!4407 = !DILocation(line: 261, column: 9, scope: !4365)
!4408 = !DILocation(line: 262, column: 29, scope: !4404)
!4409 = !DILocation(line: 262, column: 16, scope: !4404)
!4410 = !DILocation(line: 262, column: 9, scope: !4404)
!4411 = !DILocation(line: 264, column: 12, scope: !4365)
!4412 = !DILocation(line: 264, column: 15, scope: !4365)
!4413 = !DILocation(line: 264, column: 5, scope: !4365)
!4414 = !DILocation(line: 265, column: 5, scope: !4365)
!4415 = !DILocation(line: 266, column: 1, scope: !4365)
!4416 = distinct !DISubprogram(name: "parse_tonal_chunk", scope: !898, file: !898, line: 359, type: !4366, isLocal: true, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!4417 = !DILocalVariable(name: "s", arg: 1, scope: !4416, file: !898, line: 359, type: !1064)
!4418 = !DILocation(line: 359, column: 45, scope: !4416)
!4419 = !DILocalVariable(name: "chunk", arg: 2, scope: !4416, file: !898, line: 359, type: !4368)
!4420 = !DILocation(line: 359, column: 58, scope: !4416)
!4421 = !DILocalVariable(name: "sb", scope: !4416, file: !898, line: 361, type: !1004)
!4422 = !DILocation(line: 361, column: 9, scope: !4416)
!4423 = !DILocalVariable(name: "group", scope: !4416, file: !898, line: 361, type: !1004)
!4424 = !DILocation(line: 361, column: 13, scope: !4416)
!4425 = !DILocation(line: 363, column: 10, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4416, file: !898, line: 363, column: 9)
!4427 = !DILocation(line: 363, column: 17, scope: !4426)
!4428 = !DILocation(line: 363, column: 9, scope: !4416)
!4429 = !DILocation(line: 364, column: 9, scope: !4426)
!4430 = !DILocation(line: 366, column: 25, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4416, file: !898, line: 366, column: 9)
!4432 = !DILocation(line: 366, column: 28, scope: !4431)
!4433 = !DILocation(line: 366, column: 32, scope: !4431)
!4434 = !DILocation(line: 366, column: 39, scope: !4431)
!4435 = !DILocation(line: 366, column: 45, scope: !4431)
!4436 = !DILocation(line: 366, column: 52, scope: !4431)
!4437 = !DILocation(line: 366, column: 9, scope: !4431)
!4438 = !DILocation(line: 366, column: 57, scope: !4431)
!4439 = !DILocation(line: 366, column: 9, scope: !4416)
!4440 = !DILocation(line: 367, column: 9, scope: !4431)
!4441 = !DILocation(line: 370, column: 9, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4416, file: !898, line: 370, column: 9)
!4443 = !DILocation(line: 370, column: 16, scope: !4442)
!4444 = !DILocation(line: 370, column: 19, scope: !4442)
!4445 = !DILocation(line: 370, column: 36, scope: !4442)
!4446 = !DILocation(line: 370, column: 39, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4442, file: !898, discriminator: 1)
!4448 = !DILocation(line: 370, column: 46, scope: !4447)
!4449 = !DILocation(line: 370, column: 49, scope: !4447)
!4450 = !DILocation(line: 370, column: 9, scope: !4447)
!4451 = !DILocation(line: 371, column: 28, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !898, line: 371, column: 13)
!4453 = distinct !DILexicalBlock(scope: !4442, file: !898, line: 370, column: 73)
!4454 = !DILocation(line: 371, column: 31, scope: !4452)
!4455 = !DILocation(line: 371, column: 13, scope: !4452)
!4456 = !DILocation(line: 371, column: 35, scope: !4452)
!4457 = !DILocation(line: 371, column: 13, scope: !4453)
!4458 = !DILocation(line: 372, column: 20, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4452, file: !898, line: 371, column: 41)
!4460 = !DILocation(line: 372, column: 23, scope: !4459)
!4461 = !DILocation(line: 372, column: 13, scope: !4459)
!4462 = !DILocation(line: 373, column: 13, scope: !4459)
!4463 = !DILocation(line: 375, column: 17, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4453, file: !898, line: 375, column: 9)
!4465 = !DILocation(line: 375, column: 14, scope: !4464)
!4466 = !DILocation(line: 375, column: 22, scope: !4467)
!4467 = !DILexicalBlockFile(scope: !4468, file: !898, discriminator: 1)
!4468 = distinct !DILexicalBlock(scope: !4464, file: !898, line: 375, column: 9)
!4469 = !DILocation(line: 375, column: 25, scope: !4467)
!4470 = !DILocation(line: 375, column: 9, scope: !4467)
!4471 = !DILocation(line: 376, column: 42, scope: !4468)
!4472 = !DILocation(line: 376, column: 45, scope: !4468)
!4473 = !DILocation(line: 376, column: 32, scope: !4468)
!4474 = !DILocation(line: 376, column: 26, scope: !4468)
!4475 = !DILocation(line: 376, column: 13, scope: !4468)
!4476 = !DILocation(line: 376, column: 16, scope: !4468)
!4477 = !DILocation(line: 376, column: 30, scope: !4468)
!4478 = !DILocation(line: 375, column: 32, scope: !4479)
!4479 = !DILexicalBlockFile(scope: !4468, file: !898, discriminator: 2)
!4480 = !DILocation(line: 375, column: 9, scope: !4479)
!4481 = distinct !{!4481, !4482}
!4482 = !DILocation(line: 375, column: 9, scope: !4453)
!4483 = !DILocation(line: 377, column: 5, scope: !4453)
!4484 = !DILocation(line: 380, column: 9, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4416, file: !898, line: 380, column: 9)
!4486 = !DILocation(line: 380, column: 16, scope: !4485)
!4487 = !DILocation(line: 380, column: 19, scope: !4485)
!4488 = !DILocation(line: 380, column: 38, scope: !4485)
!4489 = !DILocation(line: 380, column: 41, scope: !4490)
!4490 = !DILexicalBlockFile(scope: !4485, file: !898, discriminator: 1)
!4491 = !DILocation(line: 380, column: 48, scope: !4490)
!4492 = !DILocation(line: 380, column: 51, scope: !4490)
!4493 = !DILocation(line: 380, column: 9, scope: !4490)
!4494 = !DILocation(line: 381, column: 20, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4485, file: !898, line: 381, column: 9)
!4496 = !DILocation(line: 381, column: 14, scope: !4495)
!4497 = !DILocation(line: 381, column: 25, scope: !4498)
!4498 = !DILexicalBlockFile(scope: !4499, file: !898, discriminator: 1)
!4499 = distinct !DILexicalBlock(scope: !4495, file: !898, line: 381, column: 9)
!4500 = !DILocation(line: 381, column: 31, scope: !4498)
!4501 = !DILocation(line: 381, column: 9, scope: !4498)
!4502 = !DILocation(line: 382, column: 29, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !898, line: 382, column: 17)
!4504 = !DILocation(line: 382, column: 32, scope: !4503)
!4505 = !DILocation(line: 382, column: 17, scope: !4503)
!4506 = !DILocation(line: 382, column: 39, scope: !4503)
!4507 = !DILocation(line: 382, column: 17, scope: !4499)
!4508 = !DILocation(line: 383, column: 17, scope: !4503)
!4509 = !DILocation(line: 382, column: 41, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !4503, file: !898, discriminator: 1)
!4511 = !DILocation(line: 381, column: 41, scope: !4512)
!4512 = !DILexicalBlockFile(scope: !4499, file: !898, discriminator: 2)
!4513 = !DILocation(line: 381, column: 9, scope: !4512)
!4514 = distinct !{!4514, !4515}
!4515 = !DILocation(line: 381, column: 9, scope: !4485)
!4516 = !DILocation(line: 383, column: 25, scope: !4517)
!4517 = !DILexicalBlockFile(scope: !4495, file: !898, discriminator: 1)
!4518 = !DILocation(line: 385, column: 5, scope: !4416)
!4519 = !DILocation(line: 386, column: 1, scope: !4416)
!4520 = distinct !DISubprogram(name: "parse_tonal_group", scope: !898, file: !898, line: 388, type: !4366, isLocal: true, isDefinition: true, scopeLine: 389, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!4521 = !DILocalVariable(name: "s", arg: 1, scope: !4520, file: !898, line: 388, type: !1064)
!4522 = !DILocation(line: 388, column: 45, scope: !4520)
!4523 = !DILocalVariable(name: "chunk", arg: 2, scope: !4520, file: !898, line: 388, type: !4368)
!4524 = !DILocation(line: 388, column: 58, scope: !4520)
!4525 = !DILocation(line: 390, column: 10, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4520, file: !898, line: 390, column: 9)
!4527 = !DILocation(line: 390, column: 17, scope: !4526)
!4528 = !DILocation(line: 390, column: 9, scope: !4520)
!4529 = !DILocation(line: 391, column: 9, scope: !4526)
!4530 = !DILocation(line: 393, column: 25, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4520, file: !898, line: 393, column: 9)
!4532 = !DILocation(line: 393, column: 28, scope: !4531)
!4533 = !DILocation(line: 393, column: 32, scope: !4531)
!4534 = !DILocation(line: 393, column: 39, scope: !4531)
!4535 = !DILocation(line: 393, column: 45, scope: !4531)
!4536 = !DILocation(line: 393, column: 52, scope: !4531)
!4537 = !DILocation(line: 393, column: 9, scope: !4531)
!4538 = !DILocation(line: 393, column: 57, scope: !4531)
!4539 = !DILocation(line: 393, column: 9, scope: !4520)
!4540 = !DILocation(line: 394, column: 9, scope: !4531)
!4541 = !DILocation(line: 396, column: 24, scope: !4520)
!4542 = !DILocation(line: 396, column: 27, scope: !4520)
!4543 = !DILocation(line: 396, column: 34, scope: !4520)
!4544 = !DILocation(line: 396, column: 12, scope: !4520)
!4545 = !DILocation(line: 396, column: 5, scope: !4520)
!4546 = !DILocation(line: 397, column: 1, scope: !4520)
!4547 = distinct !DISubprogram(name: "parse_grid_1_chunk", scope: !898, file: !898, line: 499, type: !4548, isLocal: true, isDefinition: true, scopeLine: 500, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!1004, !1064, !4368, !1004, !1004}
!4550 = !DILocalVariable(name: "s", arg: 1, scope: !4547, file: !898, line: 499, type: !1064)
!4551 = !DILocation(line: 499, column: 46, scope: !4547)
!4552 = !DILocalVariable(name: "chunk", arg: 2, scope: !4547, file: !898, line: 499, type: !4368)
!4553 = !DILocation(line: 499, column: 59, scope: !4547)
!4554 = !DILocalVariable(name: "ch1", arg: 3, scope: !4547, file: !898, line: 499, type: !1004)
!4555 = !DILocation(line: 499, column: 70, scope: !4547)
!4556 = !DILocalVariable(name: "ch2", arg: 4, scope: !4547, file: !898, line: 499, type: !1004)
!4557 = !DILocation(line: 499, column: 79, scope: !4547)
!4558 = !DILocalVariable(name: "ch", scope: !4547, file: !898, line: 501, type: !1004)
!4559 = !DILocation(line: 501, column: 9, scope: !4547)
!4560 = !DILocalVariable(name: "sb", scope: !4547, file: !898, line: 501, type: !1004)
!4561 = !DILocation(line: 501, column: 13, scope: !4547)
!4562 = !DILocalVariable(name: "sf", scope: !4547, file: !898, line: 501, type: !1004)
!4563 = !DILocation(line: 501, column: 17, scope: !4547)
!4564 = !DILocalVariable(name: "nsubbands", scope: !4547, file: !898, line: 501, type: !1004)
!4565 = !DILocation(line: 501, column: 21, scope: !4547)
!4566 = !DILocation(line: 503, column: 10, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 503, column: 9)
!4568 = !DILocation(line: 503, column: 17, scope: !4567)
!4569 = !DILocation(line: 503, column: 9, scope: !4547)
!4570 = !DILocation(line: 504, column: 9, scope: !4567)
!4571 = !DILocation(line: 506, column: 25, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 506, column: 9)
!4573 = !DILocation(line: 506, column: 28, scope: !4572)
!4574 = !DILocation(line: 506, column: 32, scope: !4572)
!4575 = !DILocation(line: 506, column: 39, scope: !4572)
!4576 = !DILocation(line: 506, column: 45, scope: !4572)
!4577 = !DILocation(line: 506, column: 52, scope: !4572)
!4578 = !DILocation(line: 506, column: 9, scope: !4572)
!4579 = !DILocation(line: 506, column: 57, scope: !4572)
!4580 = !DILocation(line: 506, column: 9, scope: !4547)
!4581 = !DILocation(line: 507, column: 9, scope: !4572)
!4582 = !DILocation(line: 510, column: 38, scope: !4547)
!4583 = !DILocation(line: 510, column: 41, scope: !4547)
!4584 = !DILocation(line: 510, column: 51, scope: !4547)
!4585 = !DILocation(line: 510, column: 17, scope: !4547)
!4586 = !DILocation(line: 510, column: 56, scope: !4547)
!4587 = !DILocation(line: 510, column: 15, scope: !4547)
!4588 = !DILocation(line: 511, column: 13, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 511, column: 5)
!4590 = !DILocation(line: 511, column: 10, scope: !4589)
!4591 = !DILocation(line: 511, column: 18, scope: !4592)
!4592 = !DILexicalBlockFile(scope: !4593, file: !898, discriminator: 1)
!4593 = distinct !DILexicalBlock(scope: !4589, file: !898, line: 511, column: 5)
!4594 = !DILocation(line: 511, column: 23, scope: !4592)
!4595 = !DILocation(line: 511, column: 21, scope: !4592)
!4596 = !DILocation(line: 511, column: 5, scope: !4592)
!4597 = !DILocation(line: 512, column: 33, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !898, line: 512, column: 13)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !898, line: 511, column: 40)
!4600 = !DILocation(line: 512, column: 55, scope: !4598)
!4601 = !DILocation(line: 512, column: 36, scope: !4598)
!4602 = !DILocation(line: 512, column: 50, scope: !4598)
!4603 = !DILocation(line: 512, column: 39, scope: !4598)
!4604 = !DILocation(line: 512, column: 13, scope: !4598)
!4605 = !DILocation(line: 512, column: 60, scope: !4598)
!4606 = !DILocation(line: 512, column: 13, scope: !4599)
!4607 = !DILocation(line: 513, column: 13, scope: !4598)
!4608 = !DILocation(line: 514, column: 13, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4599, file: !898, line: 514, column: 13)
!4610 = !DILocation(line: 514, column: 20, scope: !4609)
!4611 = !DILocation(line: 514, column: 17, scope: !4609)
!4612 = !DILocation(line: 514, column: 24, scope: !4609)
!4613 = !DILocation(line: 514, column: 48, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4609, file: !898, discriminator: 1)
!4615 = !DILocation(line: 514, column: 27, scope: !4614)
!4616 = !DILocation(line: 514, column: 54, scope: !4614)
!4617 = !DILocation(line: 514, column: 57, scope: !4614)
!4618 = !DILocation(line: 514, column: 52, scope: !4614)
!4619 = !DILocation(line: 515, column: 13, scope: !4609)
!4620 = !DILocation(line: 515, column: 36, scope: !4614)
!4621 = !DILocation(line: 515, column: 58, scope: !4614)
!4622 = !DILocation(line: 515, column: 39, scope: !4614)
!4623 = !DILocation(line: 515, column: 53, scope: !4614)
!4624 = !DILocation(line: 515, column: 42, scope: !4614)
!4625 = !DILocation(line: 515, column: 16, scope: !4614)
!4626 = !DILocation(line: 515, column: 63, scope: !4614)
!4627 = !DILocation(line: 514, column: 13, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4599, file: !898, discriminator: 2)
!4629 = !DILocation(line: 516, column: 13, scope: !4609)
!4630 = !DILocation(line: 517, column: 5, scope: !4599)
!4631 = !DILocation(line: 511, column: 36, scope: !4632)
!4632 = !DILexicalBlockFile(scope: !4593, file: !898, discriminator: 2)
!4633 = !DILocation(line: 511, column: 5, scope: !4632)
!4634 = distinct !{!4634, !4635}
!4635 = !DILocation(line: 511, column: 5, scope: !4547)
!4636 = !DILocation(line: 519, column: 24, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 519, column: 9)
!4638 = !DILocation(line: 519, column: 27, scope: !4637)
!4639 = !DILocation(line: 519, column: 9, scope: !4637)
!4640 = !DILocation(line: 519, column: 31, scope: !4637)
!4641 = !DILocation(line: 519, column: 9, scope: !4547)
!4642 = !DILocation(line: 520, column: 9, scope: !4637)
!4643 = !DILocation(line: 523, column: 13, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 523, column: 5)
!4645 = !DILocation(line: 523, column: 10, scope: !4644)
!4646 = !DILocation(line: 523, column: 18, scope: !4647)
!4647 = !DILexicalBlockFile(scope: !4648, file: !898, discriminator: 1)
!4648 = distinct !DILexicalBlock(scope: !4644, file: !898, line: 523, column: 5)
!4649 = !DILocation(line: 523, column: 23, scope: !4647)
!4650 = !DILocation(line: 523, column: 26, scope: !4647)
!4651 = !DILocation(line: 523, column: 36, scope: !4647)
!4652 = !DILocation(line: 523, column: 21, scope: !4647)
!4653 = !DILocation(line: 523, column: 5, scope: !4647)
!4654 = !DILocation(line: 524, column: 45, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4648, file: !898, line: 523, column: 47)
!4656 = !DILocation(line: 524, column: 48, scope: !4655)
!4657 = !DILocation(line: 524, column: 34, scope: !4655)
!4658 = !DILocation(line: 524, column: 75, scope: !4655)
!4659 = !DILocation(line: 524, column: 28, scope: !4655)
!4660 = !DILocation(line: 524, column: 9, scope: !4655)
!4661 = !DILocation(line: 524, column: 23, scope: !4655)
!4662 = !DILocation(line: 524, column: 12, scope: !4655)
!4663 = !DILocation(line: 524, column: 32, scope: !4655)
!4664 = !DILocation(line: 525, column: 13, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4655, file: !898, line: 525, column: 13)
!4666 = !DILocation(line: 525, column: 20, scope: !4665)
!4667 = !DILocation(line: 525, column: 17, scope: !4665)
!4668 = !DILocation(line: 525, column: 13, scope: !4655)
!4669 = !DILocation(line: 526, column: 17, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !898, line: 526, column: 17)
!4671 = distinct !DILexicalBlock(scope: !4665, file: !898, line: 525, column: 25)
!4672 = !DILocation(line: 526, column: 20, scope: !4670)
!4673 = !DILocation(line: 526, column: 26, scope: !4670)
!4674 = !DILocation(line: 526, column: 29, scope: !4670)
!4675 = !DILocation(line: 526, column: 24, scope: !4670)
!4676 = !DILocation(line: 526, column: 17, scope: !4671)
!4677 = !DILocation(line: 527, column: 53, scope: !4670)
!4678 = !DILocation(line: 527, column: 56, scope: !4670)
!4679 = !DILocation(line: 527, column: 42, scope: !4670)
!4680 = !DILocation(line: 527, column: 83, scope: !4670)
!4681 = !DILocation(line: 527, column: 36, scope: !4670)
!4682 = !DILocation(line: 527, column: 17, scope: !4670)
!4683 = !DILocation(line: 527, column: 31, scope: !4670)
!4684 = !DILocation(line: 527, column: 20, scope: !4670)
!4685 = !DILocation(line: 527, column: 40, scope: !4670)
!4686 = !DILocation(line: 529, column: 61, scope: !4670)
!4687 = !DILocation(line: 529, column: 42, scope: !4670)
!4688 = !DILocation(line: 529, column: 56, scope: !4670)
!4689 = !DILocation(line: 529, column: 45, scope: !4670)
!4690 = !DILocation(line: 529, column: 36, scope: !4670)
!4691 = !DILocation(line: 529, column: 17, scope: !4670)
!4692 = !DILocation(line: 529, column: 31, scope: !4670)
!4693 = !DILocation(line: 529, column: 20, scope: !4670)
!4694 = !DILocation(line: 529, column: 40, scope: !4670)
!4695 = !DILocation(line: 530, column: 9, scope: !4671)
!4696 = !DILocation(line: 531, column: 5, scope: !4655)
!4697 = !DILocation(line: 523, column: 43, scope: !4698)
!4698 = !DILexicalBlockFile(scope: !4648, file: !898, discriminator: 2)
!4699 = !DILocation(line: 523, column: 5, scope: !4698)
!4700 = distinct !{!4700, !4701}
!4701 = !DILocation(line: 523, column: 5, scope: !4547)
!4702 = !DILocation(line: 533, column: 24, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 533, column: 9)
!4704 = !DILocation(line: 533, column: 27, scope: !4703)
!4705 = !DILocation(line: 533, column: 9, scope: !4703)
!4706 = !DILocation(line: 533, column: 31, scope: !4703)
!4707 = !DILocation(line: 533, column: 9, scope: !4547)
!4708 = !DILocation(line: 534, column: 16, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4703, file: !898, line: 533, column: 36)
!4710 = !DILocation(line: 534, column: 19, scope: !4709)
!4711 = !DILocation(line: 534, column: 9, scope: !4709)
!4712 = !DILocation(line: 535, column: 9, scope: !4709)
!4713 = !DILocation(line: 539, column: 9, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4547, file: !898, line: 539, column: 9)
!4715 = !DILocation(line: 539, column: 16, scope: !4714)
!4716 = !DILocation(line: 539, column: 13, scope: !4714)
!4717 = !DILocation(line: 539, column: 9, scope: !4547)
!4718 = !DILocalVariable(name: "min_v", scope: !4719, file: !898, line: 540, type: !4067)
!4719 = distinct !DILexicalBlock(scope: !4714, file: !898, line: 539, column: 21)
!4720 = !DILocation(line: 540, column: 13, scope: !4719)
!4721 = !DILocation(line: 542, column: 26, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !898, line: 542, column: 13)
!4723 = !DILocation(line: 542, column: 29, scope: !4722)
!4724 = !DILocation(line: 542, column: 13, scope: !4722)
!4725 = !DILocation(line: 542, column: 13, scope: !4719)
!4726 = !DILocation(line: 543, column: 13, scope: !4722)
!4727 = !DILocation(line: 545, column: 30, scope: !4719)
!4728 = !DILocation(line: 545, column: 33, scope: !4719)
!4729 = !DILocation(line: 545, column: 20, scope: !4719)
!4730 = !DILocation(line: 545, column: 9, scope: !4719)
!4731 = !DILocation(line: 545, column: 18, scope: !4719)
!4732 = !DILocation(line: 546, column: 30, scope: !4719)
!4733 = !DILocation(line: 546, column: 33, scope: !4719)
!4734 = !DILocation(line: 546, column: 20, scope: !4719)
!4735 = !DILocation(line: 546, column: 9, scope: !4719)
!4736 = !DILocation(line: 546, column: 18, scope: !4719)
!4737 = !DILocation(line: 548, column: 22, scope: !4719)
!4738 = !DILocation(line: 548, column: 25, scope: !4719)
!4739 = !DILocation(line: 548, column: 37, scope: !4719)
!4740 = !DILocation(line: 548, column: 40, scope: !4719)
!4741 = !DILocation(line: 548, column: 35, scope: !4719)
!4742 = !DILocation(line: 548, column: 57, scope: !4719)
!4743 = !DILocation(line: 548, column: 62, scope: !4719)
!4744 = !DILocation(line: 548, column: 19, scope: !4719)
!4745 = !DILocation(line: 549, column: 17, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4719, file: !898, line: 549, column: 9)
!4747 = !DILocation(line: 549, column: 14, scope: !4746)
!4748 = !DILocation(line: 549, column: 22, scope: !4749)
!4749 = !DILexicalBlockFile(scope: !4750, file: !898, discriminator: 1)
!4750 = distinct !DILexicalBlock(scope: !4746, file: !898, line: 549, column: 9)
!4751 = !DILocation(line: 549, column: 27, scope: !4749)
!4752 = !DILocation(line: 549, column: 25, scope: !4749)
!4753 = !DILocation(line: 549, column: 9, scope: !4749)
!4754 = !DILocation(line: 550, column: 23, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4750, file: !898, line: 550, column: 13)
!4756 = !DILocation(line: 550, column: 21, scope: !4755)
!4757 = !DILocation(line: 550, column: 18, scope: !4755)
!4758 = !DILocation(line: 550, column: 28, scope: !4759)
!4759 = !DILexicalBlockFile(scope: !4760, file: !898, discriminator: 1)
!4760 = distinct !DILexicalBlock(scope: !4755, file: !898, line: 550, column: 13)
!4761 = !DILocation(line: 550, column: 34, scope: !4759)
!4762 = !DILocation(line: 550, column: 31, scope: !4759)
!4763 = !DILocation(line: 550, column: 13, scope: !4759)
!4764 = !DILocation(line: 551, column: 25, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4760, file: !898, line: 551, column: 17)
!4766 = !DILocation(line: 551, column: 22, scope: !4765)
!4767 = !DILocation(line: 551, column: 30, scope: !4768)
!4768 = !DILexicalBlockFile(scope: !4769, file: !898, discriminator: 1)
!4769 = distinct !DILexicalBlock(scope: !4765, file: !898, line: 551, column: 17)
!4770 = !DILocation(line: 551, column: 33, scope: !4768)
!4771 = !DILocation(line: 551, column: 17, scope: !4768)
!4772 = !DILocation(line: 552, column: 65, scope: !4769)
!4773 = !DILocation(line: 552, column: 68, scope: !4769)
!4774 = !DILocation(line: 552, column: 78, scope: !4769)
!4775 = !DILocation(line: 552, column: 83, scope: !4769)
!4776 = !DILocation(line: 552, column: 81, scope: !4769)
!4777 = !DILocation(line: 552, column: 72, scope: !4769)
!4778 = !DILocation(line: 552, column: 50, scope: !4769)
!4779 = !DILocation(line: 552, column: 44, scope: !4769)
!4780 = !DILocation(line: 552, column: 21, scope: !4769)
!4781 = !DILocation(line: 552, column: 40, scope: !4769)
!4782 = !DILocation(line: 552, column: 36, scope: !4769)
!4783 = !DILocation(line: 552, column: 24, scope: !4769)
!4784 = !DILocation(line: 552, column: 48, scope: !4769)
!4785 = !DILocation(line: 551, column: 41, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !4769, file: !898, discriminator: 2)
!4787 = !DILocation(line: 551, column: 17, scope: !4786)
!4788 = distinct !{!4788, !4789}
!4789 = !DILocation(line: 551, column: 17, scope: !4760)
!4790 = !DILocation(line: 552, column: 87, scope: !4791)
!4791 = !DILexicalBlockFile(scope: !4765, file: !898, discriminator: 1)
!4792 = !DILocation(line: 550, column: 41, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4760, file: !898, discriminator: 2)
!4794 = !DILocation(line: 550, column: 13, scope: !4793)
!4795 = distinct !{!4795, !4796}
!4796 = !DILocation(line: 550, column: 13, scope: !4750)
!4797 = !DILocation(line: 552, column: 87, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !4755, file: !898, discriminator: 2)
!4799 = !DILocation(line: 549, column: 40, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4750, file: !898, discriminator: 2)
!4801 = !DILocation(line: 549, column: 9, scope: !4800)
!4802 = distinct !{!4802, !4803}
!4803 = !DILocation(line: 549, column: 9, scope: !4719)
!4804 = !DILocation(line: 554, column: 28, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4719, file: !898, line: 554, column: 13)
!4806 = !DILocation(line: 554, column: 31, scope: !4805)
!4807 = !DILocation(line: 554, column: 13, scope: !4805)
!4808 = !DILocation(line: 554, column: 35, scope: !4805)
!4809 = !DILocation(line: 554, column: 13, scope: !4719)
!4810 = !DILocation(line: 555, column: 41, scope: !4805)
!4811 = !DILocation(line: 555, column: 38, scope: !4805)
!4812 = !DILocation(line: 555, column: 13, scope: !4805)
!4813 = !DILocation(line: 555, column: 16, scope: !4805)
!4814 = !DILocation(line: 555, column: 33, scope: !4805)
!4815 = !DILocation(line: 556, column: 5, scope: !4719)
!4816 = !DILocation(line: 560, column: 5, scope: !4547)
!4817 = !DILocation(line: 561, column: 1, scope: !4547)
!4818 = distinct !DISubprogram(name: "parse_high_res_grid", scope: !898, file: !898, line: 792, type: !4548, isLocal: true, isDefinition: true, scopeLine: 793, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!4819 = !DILocalVariable(name: "s", arg: 1, scope: !4818, file: !898, line: 792, type: !1064)
!4820 = !DILocation(line: 792, column: 47, scope: !4818)
!4821 = !DILocalVariable(name: "chunk", arg: 2, scope: !4818, file: !898, line: 792, type: !4368)
!4822 = !DILocation(line: 792, column: 60, scope: !4818)
!4823 = !DILocalVariable(name: "ch1", arg: 3, scope: !4818, file: !898, line: 792, type: !1004)
!4824 = !DILocation(line: 792, column: 71, scope: !4818)
!4825 = !DILocalVariable(name: "ch2", arg: 4, scope: !4818, file: !898, line: 792, type: !1004)
!4826 = !DILocation(line: 792, column: 80, scope: !4818)
!4827 = !DILocalVariable(name: "quant_levels", scope: !4818, file: !898, line: 794, type: !4159)
!4828 = !DILocation(line: 794, column: 9, scope: !4818)
!4829 = !DILocalVariable(name: "sb", scope: !4818, file: !898, line: 795, type: !1004)
!4830 = !DILocation(line: 795, column: 9, scope: !4818)
!4831 = !DILocalVariable(name: "ch", scope: !4818, file: !898, line: 795, type: !1004)
!4832 = !DILocation(line: 795, column: 13, scope: !4818)
!4833 = !DILocalVariable(name: "ol", scope: !4818, file: !898, line: 795, type: !1004)
!4834 = !DILocation(line: 795, column: 17, scope: !4818)
!4835 = !DILocalVariable(name: "st", scope: !4818, file: !898, line: 795, type: !1004)
!4836 = !DILocation(line: 795, column: 21, scope: !4818)
!4837 = !DILocalVariable(name: "max_sb", scope: !4818, file: !898, line: 795, type: !1004)
!4838 = !DILocation(line: 795, column: 25, scope: !4818)
!4839 = !DILocalVariable(name: "profile", scope: !4818, file: !898, line: 795, type: !1004)
!4840 = !DILocation(line: 795, column: 33, scope: !4818)
!4841 = !DILocation(line: 797, column: 10, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 797, column: 9)
!4843 = !DILocation(line: 797, column: 17, scope: !4842)
!4844 = !DILocation(line: 797, column: 9, scope: !4818)
!4845 = !DILocation(line: 798, column: 9, scope: !4842)
!4846 = !DILocation(line: 800, column: 25, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 800, column: 9)
!4848 = !DILocation(line: 800, column: 28, scope: !4847)
!4849 = !DILocation(line: 800, column: 32, scope: !4847)
!4850 = !DILocation(line: 800, column: 39, scope: !4847)
!4851 = !DILocation(line: 800, column: 45, scope: !4847)
!4852 = !DILocation(line: 800, column: 52, scope: !4847)
!4853 = !DILocation(line: 800, column: 9, scope: !4847)
!4854 = !DILocation(line: 800, column: 57, scope: !4847)
!4855 = !DILocation(line: 800, column: 9, scope: !4818)
!4856 = !DILocation(line: 801, column: 9, scope: !4847)
!4857 = !DILocation(line: 804, column: 25, scope: !4818)
!4858 = !DILocation(line: 804, column: 28, scope: !4818)
!4859 = !DILocation(line: 804, column: 15, scope: !4818)
!4860 = !DILocation(line: 804, column: 13, scope: !4818)
!4861 = !DILocation(line: 806, column: 11, scope: !4818)
!4862 = !DILocation(line: 806, column: 19, scope: !4818)
!4863 = !DILocation(line: 806, column: 25, scope: !4818)
!4864 = !DILocation(line: 806, column: 8, scope: !4818)
!4865 = !DILocation(line: 808, column: 10, scope: !4818)
!4866 = !DILocation(line: 808, column: 18, scope: !4818)
!4867 = !DILocation(line: 808, column: 8, scope: !4818)
!4868 = !DILocation(line: 810, column: 14, scope: !4818)
!4869 = !DILocation(line: 810, column: 22, scope: !4818)
!4870 = !DILocation(line: 810, column: 12, scope: !4818)
!4871 = !DILocation(line: 813, column: 13, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 813, column: 5)
!4873 = !DILocation(line: 813, column: 10, scope: !4872)
!4874 = !DILocation(line: 813, column: 18, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4876, file: !898, discriminator: 1)
!4876 = distinct !DILexicalBlock(scope: !4872, file: !898, line: 813, column: 5)
!4877 = !DILocation(line: 813, column: 23, scope: !4875)
!4878 = !DILocation(line: 813, column: 26, scope: !4875)
!4879 = !DILocation(line: 813, column: 21, scope: !4875)
!4880 = !DILocation(line: 813, column: 5, scope: !4875)
!4881 = !DILocalVariable(name: "f", scope: !4882, file: !898, line: 814, type: !1004)
!4882 = distinct !DILexicalBlock(scope: !4876, file: !898, line: 813, column: 43)
!4883 = !DILocation(line: 814, column: 13, scope: !4882)
!4884 = !DILocation(line: 814, column: 17, scope: !4882)
!4885 = !DILocation(line: 814, column: 22, scope: !4882)
!4886 = !DILocation(line: 814, column: 25, scope: !4882)
!4887 = !DILocation(line: 814, column: 20, scope: !4882)
!4888 = !DILocation(line: 814, column: 40, scope: !4882)
!4889 = !DILocation(line: 814, column: 43, scope: !4882)
!4890 = !DILocation(line: 814, column: 38, scope: !4882)
!4891 = !DILocalVariable(name: "a", scope: !4882, file: !898, line: 815, type: !1004)
!4892 = !DILocation(line: 815, column: 13, scope: !4882)
!4893 = !DILocation(line: 815, column: 31, scope: !4882)
!4894 = !DILocation(line: 815, column: 29, scope: !4882)
!4895 = !DILocation(line: 815, column: 33, scope: !4882)
!4896 = !DILocation(line: 815, column: 40, scope: !4882)
!4897 = !DILocation(line: 815, column: 53, scope: !4882)
!4898 = !DILocation(line: 815, column: 51, scope: !4882)
!4899 = !DILocation(line: 815, column: 46, scope: !4882)
!4900 = !DILocation(line: 815, column: 23, scope: !4882)
!4901 = !DILocation(line: 815, column: 64, scope: !4882)
!4902 = !DILocation(line: 815, column: 62, scope: !4882)
!4903 = !DILocation(line: 815, column: 57, scope: !4882)
!4904 = !DILocation(line: 816, column: 13, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4882, file: !898, line: 816, column: 13)
!4906 = !DILocation(line: 816, column: 15, scope: !4905)
!4907 = !DILocation(line: 816, column: 13, scope: !4882)
!4908 = !DILocation(line: 817, column: 26, scope: !4905)
!4909 = !DILocation(line: 817, column: 13, scope: !4905)
!4910 = !DILocation(line: 817, column: 30, scope: !4905)
!4911 = !DILocation(line: 818, column: 18, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4905, file: !898, line: 818, column: 18)
!4913 = !DILocation(line: 818, column: 20, scope: !4912)
!4914 = !DILocation(line: 818, column: 18, scope: !4905)
!4915 = !DILocation(line: 819, column: 26, scope: !4912)
!4916 = !DILocation(line: 819, column: 13, scope: !4912)
!4917 = !DILocation(line: 819, column: 30, scope: !4912)
!4918 = !DILocation(line: 820, column: 18, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4912, file: !898, line: 820, column: 18)
!4920 = !DILocation(line: 820, column: 20, scope: !4919)
!4921 = !DILocation(line: 820, column: 18, scope: !4912)
!4922 = !DILocation(line: 821, column: 26, scope: !4919)
!4923 = !DILocation(line: 821, column: 13, scope: !4919)
!4924 = !DILocation(line: 821, column: 30, scope: !4919)
!4925 = !DILocation(line: 822, column: 18, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4919, file: !898, line: 822, column: 18)
!4927 = !DILocation(line: 822, column: 20, scope: !4926)
!4928 = !DILocation(line: 822, column: 18, scope: !4919)
!4929 = !DILocation(line: 823, column: 26, scope: !4926)
!4930 = !DILocation(line: 823, column: 13, scope: !4926)
!4931 = !DILocation(line: 823, column: 30, scope: !4926)
!4932 = !DILocation(line: 825, column: 26, scope: !4926)
!4933 = !DILocation(line: 825, column: 13, scope: !4926)
!4934 = !DILocation(line: 825, column: 30, scope: !4926)
!4935 = !DILocation(line: 826, column: 5, scope: !4882)
!4936 = !DILocation(line: 813, column: 39, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !4876, file: !898, discriminator: 2)
!4938 = !DILocation(line: 813, column: 5, scope: !4937)
!4939 = distinct !{!4939, !4940}
!4940 = !DILocation(line: 813, column: 5, scope: !4818)
!4941 = !DILocation(line: 829, column: 13, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 829, column: 5)
!4943 = !DILocation(line: 829, column: 10, scope: !4942)
!4944 = !DILocation(line: 829, column: 18, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4946, file: !898, discriminator: 1)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !898, line: 829, column: 5)
!4947 = !DILocation(line: 829, column: 21, scope: !4945)
!4948 = !DILocation(line: 829, column: 5, scope: !4945)
!4949 = !DILocation(line: 830, column: 79, scope: !4946)
!4950 = !DILocation(line: 830, column: 53, scope: !4946)
!4951 = !DILocation(line: 830, column: 71, scope: !4946)
!4952 = !DILocation(line: 830, column: 40, scope: !4946)
!4953 = !DILocation(line: 830, column: 34, scope: !4946)
!4954 = !DILocation(line: 830, column: 9, scope: !4946)
!4955 = !DILocation(line: 830, column: 25, scope: !4946)
!4956 = !DILocation(line: 830, column: 29, scope: !4946)
!4957 = !DILocation(line: 830, column: 12, scope: !4946)
!4958 = !DILocation(line: 830, column: 38, scope: !4946)
!4959 = !DILocation(line: 829, column: 28, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !4946, file: !898, discriminator: 2)
!4961 = !DILocation(line: 829, column: 5, scope: !4960)
!4962 = distinct !{!4962, !4963}
!4963 = !DILocation(line: 829, column: 5, scope: !4818)
!4964 = !DILocation(line: 831, column: 5, scope: !4818)
!4965 = !DILocation(line: 831, column: 12, scope: !4966)
!4966 = !DILexicalBlockFile(scope: !4967, file: !898, discriminator: 1)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !898, line: 831, column: 5)
!4968 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 831, column: 5)
!4969 = !DILocation(line: 831, column: 17, scope: !4966)
!4970 = !DILocation(line: 831, column: 20, scope: !4966)
!4971 = !DILocation(line: 831, column: 15, scope: !4966)
!4972 = !DILocation(line: 831, column: 5, scope: !4966)
!4973 = !DILocation(line: 832, column: 53, scope: !4967)
!4974 = !DILocation(line: 832, column: 40, scope: !4967)
!4975 = !DILocation(line: 832, column: 34, scope: !4967)
!4976 = !DILocation(line: 832, column: 9, scope: !4967)
!4977 = !DILocation(line: 832, column: 25, scope: !4967)
!4978 = !DILocation(line: 832, column: 29, scope: !4967)
!4979 = !DILocation(line: 832, column: 12, scope: !4967)
!4980 = !DILocation(line: 832, column: 38, scope: !4967)
!4981 = !DILocation(line: 831, column: 33, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4967, file: !898, discriminator: 2)
!4983 = !DILocation(line: 831, column: 5, scope: !4982)
!4984 = distinct !{!4984, !4964}
!4985 = !DILocation(line: 835, column: 19, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 835, column: 9)
!4987 = !DILocation(line: 835, column: 22, scope: !4986)
!4988 = !DILocation(line: 835, column: 27, scope: !4986)
!4989 = !DILocation(line: 835, column: 9, scope: !4986)
!4990 = !DILocation(line: 835, column: 38, scope: !4986)
!4991 = !DILocation(line: 835, column: 9, scope: !4818)
!4992 = !DILocation(line: 836, column: 9, scope: !4986)
!4993 = !DILocation(line: 839, column: 18, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 839, column: 9)
!4995 = !DILocation(line: 839, column: 21, scope: !4994)
!4996 = !DILocation(line: 839, column: 26, scope: !4994)
!4997 = !DILocation(line: 839, column: 9, scope: !4994)
!4998 = !DILocation(line: 839, column: 40, scope: !4994)
!4999 = !DILocation(line: 839, column: 9, scope: !4818)
!5000 = !DILocation(line: 840, column: 9, scope: !4994)
!5001 = !DILocation(line: 843, column: 13, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4818, file: !898, line: 843, column: 5)
!5003 = !DILocation(line: 843, column: 10, scope: !5002)
!5004 = !DILocation(line: 843, column: 18, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !5006, file: !898, discriminator: 1)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !898, line: 843, column: 5)
!5007 = !DILocation(line: 843, column: 21, scope: !5005)
!5008 = !DILocation(line: 843, column: 5, scope: !5005)
!5009 = !DILocation(line: 844, column: 19, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !898, line: 844, column: 9)
!5011 = !DILocation(line: 844, column: 17, scope: !5010)
!5012 = !DILocation(line: 844, column: 14, scope: !5010)
!5013 = !DILocation(line: 844, column: 24, scope: !5014)
!5014 = !DILexicalBlockFile(scope: !5015, file: !898, discriminator: 1)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !898, line: 844, column: 9)
!5016 = !DILocation(line: 844, column: 30, scope: !5014)
!5017 = !DILocation(line: 844, column: 27, scope: !5014)
!5018 = !DILocation(line: 844, column: 9, scope: !5014)
!5019 = !DILocation(line: 845, column: 37, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5015, file: !898, line: 845, column: 17)
!5021 = !DILocation(line: 845, column: 58, scope: !5020)
!5022 = !DILocation(line: 845, column: 40, scope: !5020)
!5023 = !DILocation(line: 845, column: 54, scope: !5020)
!5024 = !DILocation(line: 845, column: 43, scope: !5020)
!5025 = !DILocation(line: 845, column: 17, scope: !5020)
!5026 = !DILocation(line: 845, column: 63, scope: !5020)
!5027 = !DILocation(line: 845, column: 17, scope: !5015)
!5028 = !DILocation(line: 846, column: 17, scope: !5020)
!5029 = !DILocation(line: 845, column: 65, scope: !5030)
!5030 = !DILexicalBlockFile(scope: !5020, file: !898, discriminator: 1)
!5031 = !DILocation(line: 844, column: 37, scope: !5032)
!5032 = !DILexicalBlockFile(scope: !5015, file: !898, discriminator: 2)
!5033 = !DILocation(line: 844, column: 9, scope: !5032)
!5034 = distinct !{!5034, !5035}
!5035 = !DILocation(line: 844, column: 9, scope: !5006)
!5036 = !DILocation(line: 846, column: 25, scope: !5037)
!5037 = !DILexicalBlockFile(scope: !5010, file: !898, discriminator: 1)
!5038 = !DILocation(line: 843, column: 28, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !5006, file: !898, discriminator: 2)
!5040 = !DILocation(line: 843, column: 5, scope: !5039)
!5041 = distinct !{!5041, !5042}
!5042 = !DILocation(line: 843, column: 5, scope: !4818)
!5043 = !DILocation(line: 848, column: 5, scope: !4818)
!5044 = !DILocation(line: 849, column: 1, scope: !4818)
!5045 = distinct !DISubprogram(name: "parse_ts1_chunk", scope: !898, file: !898, line: 893, type: !4548, isLocal: true, isDefinition: true, scopeLine: 894, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!5046 = !DILocalVariable(name: "s", arg: 1, scope: !5045, file: !898, line: 893, type: !1064)
!5047 = !DILocation(line: 893, column: 43, scope: !5045)
!5048 = !DILocalVariable(name: "chunk", arg: 2, scope: !5045, file: !898, line: 893, type: !4368)
!5049 = !DILocation(line: 893, column: 56, scope: !5045)
!5050 = !DILocalVariable(name: "ch1", arg: 3, scope: !5045, file: !898, line: 893, type: !1004)
!5051 = !DILocation(line: 893, column: 67, scope: !5045)
!5052 = !DILocalVariable(name: "ch2", arg: 4, scope: !5045, file: !898, line: 893, type: !1004)
!5053 = !DILocation(line: 893, column: 76, scope: !5045)
!5054 = !DILocation(line: 895, column: 10, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5045, file: !898, line: 895, column: 9)
!5056 = !DILocation(line: 895, column: 17, scope: !5055)
!5057 = !DILocation(line: 895, column: 9, scope: !5045)
!5058 = !DILocation(line: 896, column: 9, scope: !5055)
!5059 = !DILocation(line: 897, column: 25, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5045, file: !898, line: 897, column: 9)
!5061 = !DILocation(line: 897, column: 28, scope: !5060)
!5062 = !DILocation(line: 897, column: 32, scope: !5060)
!5063 = !DILocation(line: 897, column: 39, scope: !5060)
!5064 = !DILocation(line: 897, column: 45, scope: !5060)
!5065 = !DILocation(line: 897, column: 52, scope: !5060)
!5066 = !DILocation(line: 897, column: 9, scope: !5060)
!5067 = !DILocation(line: 897, column: 57, scope: !5060)
!5068 = !DILocation(line: 897, column: 9, scope: !5045)
!5069 = !DILocation(line: 898, column: 9, scope: !5060)
!5070 = !DILocation(line: 899, column: 19, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5045, file: !898, line: 899, column: 9)
!5072 = !DILocation(line: 899, column: 22, scope: !5071)
!5073 = !DILocation(line: 899, column: 27, scope: !5071)
!5074 = !DILocation(line: 899, column: 9, scope: !5071)
!5075 = !DILocation(line: 899, column: 38, scope: !5071)
!5076 = !DILocation(line: 899, column: 9, scope: !5045)
!5077 = !DILocation(line: 900, column: 9, scope: !5071)
!5078 = !DILocation(line: 901, column: 18, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5045, file: !898, line: 901, column: 9)
!5080 = !DILocation(line: 901, column: 21, scope: !5079)
!5081 = !DILocation(line: 901, column: 26, scope: !5079)
!5082 = !DILocation(line: 901, column: 9, scope: !5079)
!5083 = !DILocation(line: 901, column: 40, scope: !5079)
!5084 = !DILocation(line: 901, column: 9, scope: !5045)
!5085 = !DILocation(line: 902, column: 9, scope: !5079)
!5086 = !DILocation(line: 903, column: 22, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5045, file: !898, line: 903, column: 9)
!5088 = !DILocation(line: 903, column: 25, scope: !5087)
!5089 = !DILocation(line: 903, column: 30, scope: !5087)
!5090 = !DILocation(line: 903, column: 9, scope: !5087)
!5091 = !DILocation(line: 903, column: 44, scope: !5087)
!5092 = !DILocation(line: 903, column: 9, scope: !5045)
!5093 = !DILocation(line: 904, column: 9, scope: !5087)
!5094 = !DILocation(line: 905, column: 18, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5045, file: !898, line: 905, column: 9)
!5096 = !DILocation(line: 905, column: 21, scope: !5095)
!5097 = !DILocation(line: 905, column: 26, scope: !5095)
!5098 = !DILocation(line: 905, column: 9, scope: !5095)
!5099 = !DILocation(line: 905, column: 40, scope: !5095)
!5100 = !DILocation(line: 905, column: 9, scope: !5045)
!5101 = !DILocation(line: 906, column: 9, scope: !5095)
!5102 = !DILocation(line: 907, column: 5, scope: !5045)
!5103 = !DILocation(line: 908, column: 1, scope: !5045)
!5104 = distinct !DISubprogram(name: "parse_ts2_chunk", scope: !898, file: !898, line: 910, type: !4548, isLocal: true, isDefinition: true, scopeLine: 911, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!5105 = !DILocalVariable(name: "s", arg: 1, scope: !5104, file: !898, line: 910, type: !1064)
!5106 = !DILocation(line: 910, column: 43, scope: !5104)
!5107 = !DILocalVariable(name: "chunk", arg: 2, scope: !5104, file: !898, line: 910, type: !4368)
!5108 = !DILocation(line: 910, column: 56, scope: !5104)
!5109 = !DILocalVariable(name: "ch1", arg: 3, scope: !5104, file: !898, line: 910, type: !1004)
!5110 = !DILocation(line: 910, column: 67, scope: !5104)
!5111 = !DILocalVariable(name: "ch2", arg: 4, scope: !5104, file: !898, line: 910, type: !1004)
!5112 = !DILocation(line: 910, column: 76, scope: !5104)
!5113 = !DILocation(line: 912, column: 10, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5104, file: !898, line: 912, column: 9)
!5115 = !DILocation(line: 912, column: 17, scope: !5114)
!5116 = !DILocation(line: 912, column: 9, scope: !5104)
!5117 = !DILocation(line: 913, column: 9, scope: !5114)
!5118 = !DILocation(line: 914, column: 25, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5104, file: !898, line: 914, column: 9)
!5120 = !DILocation(line: 914, column: 28, scope: !5119)
!5121 = !DILocation(line: 914, column: 32, scope: !5119)
!5122 = !DILocation(line: 914, column: 39, scope: !5119)
!5123 = !DILocation(line: 914, column: 45, scope: !5119)
!5124 = !DILocation(line: 914, column: 52, scope: !5119)
!5125 = !DILocation(line: 914, column: 9, scope: !5119)
!5126 = !DILocation(line: 914, column: 57, scope: !5119)
!5127 = !DILocation(line: 914, column: 9, scope: !5104)
!5128 = !DILocation(line: 915, column: 9, scope: !5119)
!5129 = !DILocation(line: 916, column: 22, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5104, file: !898, line: 916, column: 9)
!5131 = !DILocation(line: 916, column: 25, scope: !5130)
!5132 = !DILocation(line: 916, column: 30, scope: !5130)
!5133 = !DILocation(line: 916, column: 9, scope: !5130)
!5134 = !DILocation(line: 916, column: 44, scope: !5130)
!5135 = !DILocation(line: 916, column: 9, scope: !5104)
!5136 = !DILocation(line: 917, column: 9, scope: !5130)
!5137 = !DILocation(line: 918, column: 18, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5104, file: !898, line: 918, column: 9)
!5139 = !DILocation(line: 918, column: 21, scope: !5138)
!5140 = !DILocation(line: 918, column: 26, scope: !5138)
!5141 = !DILocation(line: 918, column: 34, scope: !5138)
!5142 = !DILocation(line: 918, column: 37, scope: !5138)
!5143 = !DILocation(line: 918, column: 9, scope: !5138)
!5144 = !DILocation(line: 918, column: 58, scope: !5138)
!5145 = !DILocation(line: 918, column: 9, scope: !5104)
!5146 = !DILocation(line: 919, column: 9, scope: !5138)
!5147 = !DILocation(line: 920, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5104, file: !898, line: 920, column: 9)
!5149 = !DILocation(line: 920, column: 16, scope: !5148)
!5150 = !DILocation(line: 920, column: 13, scope: !5148)
!5151 = !DILocation(line: 920, column: 9, scope: !5104)
!5152 = !DILocation(line: 921, column: 33, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5154, file: !898, line: 921, column: 13)
!5154 = distinct !DILexicalBlock(scope: !5148, file: !898, line: 920, column: 21)
!5155 = !DILocation(line: 921, column: 36, scope: !5153)
!5156 = !DILocation(line: 921, column: 13, scope: !5153)
!5157 = !DILocation(line: 921, column: 41, scope: !5153)
!5158 = !DILocation(line: 921, column: 13, scope: !5154)
!5159 = !DILocation(line: 922, column: 13, scope: !5153)
!5160 = !DILocation(line: 923, column: 26, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5154, file: !898, line: 923, column: 13)
!5162 = !DILocation(line: 923, column: 29, scope: !5161)
!5163 = !DILocation(line: 923, column: 34, scope: !5161)
!5164 = !DILocation(line: 923, column: 13, scope: !5161)
!5165 = !DILocation(line: 923, column: 48, scope: !5161)
!5166 = !DILocation(line: 923, column: 13, scope: !5154)
!5167 = !DILocation(line: 924, column: 13, scope: !5161)
!5168 = !DILocation(line: 925, column: 5, scope: !5154)
!5169 = !DILocation(line: 926, column: 18, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5104, file: !898, line: 926, column: 9)
!5171 = !DILocation(line: 926, column: 21, scope: !5170)
!5172 = !DILocation(line: 926, column: 26, scope: !5170)
!5173 = !DILocation(line: 926, column: 31, scope: !5170)
!5174 = !DILocation(line: 926, column: 34, scope: !5170)
!5175 = !DILocation(line: 926, column: 52, scope: !5170)
!5176 = !DILocation(line: 926, column: 55, scope: !5170)
!5177 = !DILocation(line: 926, column: 9, scope: !5170)
!5178 = !DILocation(line: 926, column: 69, scope: !5170)
!5179 = !DILocation(line: 926, column: 9, scope: !5104)
!5180 = !DILocation(line: 927, column: 9, scope: !5170)
!5181 = !DILocation(line: 928, column: 5, scope: !5104)
!5182 = !DILocation(line: 929, column: 1, scope: !5104)
!5183 = distinct !DISubprogram(name: "ff_dca_lbr_filter_frame", scope: !898, file: !898, line: 1710, type: !5184, isLocal: false, isDefinition: true, scopeLine: 1711, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{!1004, !1064, !1375}
!5186 = !DILocalVariable(name: "s", arg: 1, scope: !5183, file: !898, line: 1710, type: !1064)
!5187 = !DILocation(line: 1710, column: 44, scope: !5183)
!5188 = !DILocalVariable(name: "frame", arg: 2, scope: !5183, file: !898, line: 1710, type: !1375)
!5189 = !DILocation(line: 1710, column: 56, scope: !5183)
!5190 = !DILocalVariable(name: "avctx", scope: !5183, file: !898, line: 1712, type: !1070)
!5191 = !DILocation(line: 1712, column: 21, scope: !5183)
!5192 = !DILocation(line: 1712, column: 29, scope: !5183)
!5193 = !DILocation(line: 1712, column: 32, scope: !5183)
!5194 = !DILocalVariable(name: "i", scope: !5183, file: !898, line: 1713, type: !1004)
!5195 = !DILocation(line: 1713, column: 9, scope: !5183)
!5196 = !DILocalVariable(name: "ret", scope: !5183, file: !898, line: 1713, type: !1004)
!5197 = !DILocation(line: 1713, column: 12, scope: !5183)
!5198 = !DILocalVariable(name: "nchannels", scope: !5183, file: !898, line: 1713, type: !1004)
!5199 = !DILocation(line: 1713, column: 17, scope: !5183)
!5200 = !DILocalVariable(name: "ch_conf", scope: !5183, file: !898, line: 1713, type: !1004)
!5201 = !DILocation(line: 1713, column: 28, scope: !5183)
!5202 = !DILocation(line: 1713, column: 39, scope: !5183)
!5203 = !DILocation(line: 1713, column: 42, scope: !5183)
!5204 = !DILocation(line: 1713, column: 50, scope: !5183)
!5205 = !DILocation(line: 1713, column: 57, scope: !5183)
!5206 = !DILocalVariable(name: "reorder", scope: !5183, file: !898, line: 1714, type: !5207)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!5208 = !DILocation(line: 1714, column: 19, scope: !5183)
!5209 = !DILocation(line: 1716, column: 45, scope: !5183)
!5210 = !DILocation(line: 1716, column: 29, scope: !5183)
!5211 = !DILocation(line: 1716, column: 5, scope: !5183)
!5212 = !DILocation(line: 1716, column: 12, scope: !5183)
!5213 = !DILocation(line: 1716, column: 27, scope: !5183)
!5214 = !DILocation(line: 1717, column: 50, scope: !5183)
!5215 = !DILocation(line: 1717, column: 35, scope: !5183)
!5216 = !DILocation(line: 1717, column: 33, scope: !5183)
!5217 = !DILocation(line: 1717, column: 5, scope: !5183)
!5218 = !DILocation(line: 1717, column: 12, scope: !5183)
!5219 = !DILocation(line: 1717, column: 21, scope: !5183)
!5220 = !DILocation(line: 1718, column: 26, scope: !5183)
!5221 = !DILocation(line: 1718, column: 29, scope: !5183)
!5222 = !DILocation(line: 1718, column: 5, scope: !5183)
!5223 = !DILocation(line: 1718, column: 12, scope: !5183)
!5224 = !DILocation(line: 1718, column: 24, scope: !5183)
!5225 = !DILocation(line: 1719, column: 5, scope: !5183)
!5226 = !DILocation(line: 1719, column: 12, scope: !5183)
!5227 = !DILocation(line: 1719, column: 23, scope: !5183)
!5228 = !DILocation(line: 1720, column: 5, scope: !5183)
!5229 = !DILocation(line: 1720, column: 12, scope: !5183)
!5230 = !DILocation(line: 1720, column: 32, scope: !5183)
!5231 = !DILocation(line: 1721, column: 5, scope: !5183)
!5232 = !DILocation(line: 1721, column: 12, scope: !5183)
!5233 = !DILocation(line: 1721, column: 20, scope: !5183)
!5234 = !DILocation(line: 1722, column: 23, scope: !5183)
!5235 = !DILocation(line: 1722, column: 26, scope: !5183)
!5236 = !DILocation(line: 1722, column: 5, scope: !5183)
!5237 = !DILocation(line: 1722, column: 12, scope: !5183)
!5238 = !DILocation(line: 1722, column: 21, scope: !5183)
!5239 = !DILocation(line: 1724, column: 9, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5183, file: !898, line: 1724, column: 9)
!5241 = !DILocation(line: 1724, column: 12, scope: !5240)
!5242 = !DILocation(line: 1724, column: 18, scope: !5240)
!5243 = !DILocation(line: 1724, column: 9, scope: !5183)
!5244 = !DILocation(line: 1725, column: 9, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5240, file: !898, line: 1724, column: 42)
!5246 = !DILocation(line: 1725, column: 16, scope: !5245)
!5247 = !DILocation(line: 1725, column: 31, scope: !5245)
!5248 = !DILocation(line: 1726, column: 9, scope: !5245)
!5249 = !DILocation(line: 1726, column: 16, scope: !5245)
!5250 = !DILocation(line: 1726, column: 24, scope: !5245)
!5251 = !DILocation(line: 1727, column: 39, scope: !5245)
!5252 = !DILocation(line: 1727, column: 19, scope: !5245)
!5253 = !DILocation(line: 1727, column: 17, scope: !5245)
!5254 = !DILocation(line: 1728, column: 5, scope: !5245)
!5255 = !DILocation(line: 1729, column: 41, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5240, file: !898, line: 1728, column: 12)
!5257 = !DILocation(line: 1729, column: 19, scope: !5256)
!5258 = !DILocation(line: 1729, column: 17, scope: !5256)
!5259 = !DILocation(line: 1732, column: 33, scope: !5183)
!5260 = !DILocation(line: 1732, column: 36, scope: !5183)
!5261 = !DILocation(line: 1732, column: 30, scope: !5183)
!5262 = !DILocation(line: 1732, column: 5, scope: !5183)
!5263 = !DILocation(line: 1732, column: 12, scope: !5183)
!5264 = !DILocation(line: 1732, column: 23, scope: !5183)
!5265 = !DILocation(line: 1733, column: 30, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5183, file: !898, line: 1733, column: 9)
!5267 = !DILocation(line: 1733, column: 37, scope: !5266)
!5268 = !DILocation(line: 1733, column: 16, scope: !5266)
!5269 = !DILocation(line: 1733, column: 14, scope: !5266)
!5270 = !DILocation(line: 1733, column: 48, scope: !5266)
!5271 = !DILocation(line: 1733, column: 9, scope: !5183)
!5272 = !DILocation(line: 1734, column: 16, scope: !5266)
!5273 = !DILocation(line: 1734, column: 9, scope: !5266)
!5274 = !DILocation(line: 1737, column: 12, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5183, file: !898, line: 1737, column: 5)
!5276 = !DILocation(line: 1737, column: 10, scope: !5275)
!5277 = !DILocation(line: 1737, column: 17, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5279, file: !898, discriminator: 1)
!5279 = distinct !DILexicalBlock(scope: !5275, file: !898, line: 1737, column: 5)
!5280 = !DILocation(line: 1737, column: 22, scope: !5278)
!5281 = !DILocation(line: 1737, column: 25, scope: !5278)
!5282 = !DILocation(line: 1737, column: 35, scope: !5278)
!5283 = !DILocation(line: 1737, column: 40, scope: !5278)
!5284 = !DILocation(line: 1737, column: 19, scope: !5278)
!5285 = !DILocation(line: 1737, column: 5, scope: !5278)
!5286 = !DILocalVariable(name: "ch1", scope: !5287, file: !898, line: 1738, type: !1004)
!5287 = distinct !DILexicalBlock(scope: !5279, file: !898, line: 1737, column: 50)
!5288 = !DILocation(line: 1738, column: 13, scope: !5287)
!5289 = !DILocation(line: 1738, column: 19, scope: !5287)
!5290 = !DILocation(line: 1738, column: 21, scope: !5287)
!5291 = !DILocalVariable(name: "ch2", scope: !5287, file: !898, line: 1739, type: !1004)
!5292 = !DILocation(line: 1739, column: 13, scope: !5287)
!5293 = !DILocation(line: 1739, column: 21, scope: !5287)
!5294 = !DILocation(line: 1739, column: 25, scope: !5287)
!5295 = !DILocation(line: 1739, column: 33, scope: !5287)
!5296 = !DILocation(line: 1739, column: 36, scope: !5287)
!5297 = !DILocation(line: 1739, column: 46, scope: !5287)
!5298 = !DILocation(line: 1739, column: 30, scope: !5287)
!5299 = !DILocation(line: 1739, column: 20, scope: !5287)
!5300 = !DILocation(line: 1739, column: 54, scope: !5301)
!5301 = !DILexicalBlockFile(scope: !5287, file: !898, discriminator: 1)
!5302 = !DILocation(line: 1739, column: 57, scope: !5301)
!5303 = !DILocation(line: 1739, column: 67, scope: !5301)
!5304 = !DILocation(line: 1739, column: 20, scope: !5301)
!5305 = !DILocation(line: 1739, column: 75, scope: !5306)
!5306 = !DILexicalBlockFile(scope: !5287, file: !898, discriminator: 2)
!5307 = !DILocation(line: 1739, column: 79, scope: !5306)
!5308 = !DILocation(line: 1739, column: 20, scope: !5306)
!5309 = !DILocation(line: 1739, column: 20, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !5287, file: !898, discriminator: 3)
!5311 = !DILocation(line: 1739, column: 13, scope: !5310)
!5312 = !DILocation(line: 1741, column: 21, scope: !5287)
!5313 = !DILocation(line: 1741, column: 24, scope: !5287)
!5314 = !DILocation(line: 1741, column: 29, scope: !5287)
!5315 = !DILocation(line: 1741, column: 9, scope: !5287)
!5316 = !DILocation(line: 1743, column: 19, scope: !5287)
!5317 = !DILocation(line: 1743, column: 22, scope: !5287)
!5318 = !DILocation(line: 1743, column: 27, scope: !5287)
!5319 = !DILocation(line: 1743, column: 9, scope: !5287)
!5320 = !DILocation(line: 1745, column: 19, scope: !5287)
!5321 = !DILocation(line: 1745, column: 22, scope: !5287)
!5322 = !DILocation(line: 1745, column: 27, scope: !5287)
!5323 = !DILocation(line: 1745, column: 9, scope: !5287)
!5324 = !DILocation(line: 1747, column: 13, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5287, file: !898, line: 1747, column: 13)
!5326 = !DILocation(line: 1747, column: 20, scope: !5325)
!5327 = !DILocation(line: 1747, column: 17, scope: !5325)
!5328 = !DILocation(line: 1747, column: 24, scope: !5325)
!5329 = !DILocation(line: 1747, column: 28, scope: !5330)
!5330 = !DILexicalBlockFile(scope: !5325, file: !898, discriminator: 1)
!5331 = !DILocation(line: 1747, column: 31, scope: !5330)
!5332 = !DILocation(line: 1747, column: 56, scope: !5330)
!5333 = !DILocation(line: 1747, column: 53, scope: !5330)
!5334 = !DILocation(line: 1747, column: 48, scope: !5330)
!5335 = !DILocation(line: 1747, column: 13, scope: !5330)
!5336 = !DILocation(line: 1748, column: 32, scope: !5325)
!5337 = !DILocation(line: 1748, column: 35, scope: !5325)
!5338 = !DILocation(line: 1748, column: 40, scope: !5325)
!5339 = !DILocation(line: 1748, column: 13, scope: !5325)
!5340 = !DILocation(line: 1750, column: 13, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5287, file: !898, line: 1750, column: 13)
!5342 = !DILocation(line: 1750, column: 19, scope: !5341)
!5343 = !DILocation(line: 1750, column: 17, scope: !5341)
!5344 = !DILocation(line: 1750, column: 13, scope: !5287)
!5345 = !DILocation(line: 1751, column: 31, scope: !5341)
!5346 = !DILocation(line: 1751, column: 34, scope: !5341)
!5347 = !DILocation(line: 1751, column: 77, scope: !5341)
!5348 = !DILocation(line: 1751, column: 69, scope: !5341)
!5349 = !DILocation(line: 1751, column: 48, scope: !5341)
!5350 = !DILocation(line: 1751, column: 55, scope: !5341)
!5351 = !DILocation(line: 1751, column: 39, scope: !5341)
!5352 = !DILocation(line: 1751, column: 13, scope: !5341)
!5353 = !DILocation(line: 1753, column: 13, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5287, file: !898, line: 1753, column: 13)
!5355 = !DILocation(line: 1753, column: 20, scope: !5354)
!5356 = !DILocation(line: 1753, column: 17, scope: !5354)
!5357 = !DILocation(line: 1753, column: 24, scope: !5354)
!5358 = !DILocation(line: 1753, column: 27, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5354, file: !898, discriminator: 1)
!5360 = !DILocation(line: 1753, column: 33, scope: !5359)
!5361 = !DILocation(line: 1753, column: 31, scope: !5359)
!5362 = !DILocation(line: 1753, column: 13, scope: !5359)
!5363 = !DILocation(line: 1754, column: 31, scope: !5354)
!5364 = !DILocation(line: 1754, column: 34, scope: !5354)
!5365 = !DILocation(line: 1754, column: 77, scope: !5354)
!5366 = !DILocation(line: 1754, column: 69, scope: !5354)
!5367 = !DILocation(line: 1754, column: 48, scope: !5354)
!5368 = !DILocation(line: 1754, column: 55, scope: !5354)
!5369 = !DILocation(line: 1754, column: 39, scope: !5354)
!5370 = !DILocation(line: 1754, column: 13, scope: !5354)
!5371 = !DILocation(line: 1755, column: 5, scope: !5287)
!5372 = !DILocation(line: 1737, column: 46, scope: !5373)
!5373 = !DILexicalBlockFile(scope: !5279, file: !898, discriminator: 2)
!5374 = !DILocation(line: 1737, column: 5, scope: !5373)
!5375 = distinct !{!5375, !5376}
!5376 = !DILocation(line: 1737, column: 5, scope: !5183)
!5377 = !DILocation(line: 1758, column: 9, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5183, file: !898, line: 1758, column: 9)
!5379 = !DILocation(line: 1758, column: 12, scope: !5378)
!5380 = !DILocation(line: 1758, column: 18, scope: !5378)
!5381 = !DILocation(line: 1758, column: 9, scope: !5183)
!5382 = !DILocation(line: 1759, column: 9, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !898, line: 1758, column: 42)
!5384 = !DILocation(line: 1759, column: 12, scope: !5383)
!5385 = !DILocation(line: 1759, column: 20, scope: !5383)
!5386 = !DILocation(line: 1759, column: 68, scope: !5383)
!5387 = !DILocation(line: 1759, column: 58, scope: !5383)
!5388 = !DILocation(line: 1759, column: 37, scope: !5383)
!5389 = !DILocation(line: 1759, column: 44, scope: !5383)
!5390 = !DILocation(line: 1759, column: 28, scope: !5383)
!5391 = !DILocation(line: 1760, column: 28, scope: !5383)
!5392 = !DILocation(line: 1760, column: 31, scope: !5383)
!5393 = !DILocation(line: 1761, column: 28, scope: !5383)
!5394 = !DILocation(line: 1761, column: 31, scope: !5383)
!5395 = !DILocation(line: 1761, column: 50, scope: !5383)
!5396 = !DILocation(line: 1761, column: 53, scope: !5383)
!5397 = !DILocation(line: 1761, column: 47, scope: !5383)
!5398 = !DILocation(line: 1761, column: 44, scope: !5383)
!5399 = !DILocation(line: 1762, column: 5, scope: !5383)
!5400 = !DILocation(line: 1764, column: 52, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5183, file: !898, line: 1764, column: 9)
!5402 = !DILocation(line: 1764, column: 16, scope: !5401)
!5403 = !DILocation(line: 1764, column: 14, scope: !5401)
!5404 = !DILocation(line: 1764, column: 85, scope: !5401)
!5405 = !DILocation(line: 1764, column: 9, scope: !5183)
!5406 = !DILocation(line: 1765, column: 16, scope: !5401)
!5407 = !DILocation(line: 1765, column: 9, scope: !5401)
!5408 = !DILocation(line: 1767, column: 5, scope: !5183)
!5409 = !DILocation(line: 1768, column: 1, scope: !5183)
!5410 = distinct !DISubprogram(name: "decode_grid", scope: !898, file: !898, line: 1380, type: !5411, isLocal: true, isDefinition: true, scopeLine: 1381, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{null, !1064, !1004, !1004}
!5413 = !DILocalVariable(name: "s", arg: 1, scope: !5410, file: !898, line: 1380, type: !1064)
!5414 = !DILocation(line: 1380, column: 40, scope: !5410)
!5415 = !DILocalVariable(name: "ch1", arg: 2, scope: !5410, file: !898, line: 1380, type: !1004)
!5416 = !DILocation(line: 1380, column: 47, scope: !5410)
!5417 = !DILocalVariable(name: "ch2", arg: 3, scope: !5410, file: !898, line: 1380, type: !1004)
!5418 = !DILocation(line: 1380, column: 56, scope: !5410)
!5419 = !DILocalVariable(name: "i", scope: !5410, file: !898, line: 1382, type: !1004)
!5420 = !DILocation(line: 1382, column: 9, scope: !5410)
!5421 = !DILocalVariable(name: "ch", scope: !5410, file: !898, line: 1382, type: !1004)
!5422 = !DILocation(line: 1382, column: 12, scope: !5410)
!5423 = !DILocalVariable(name: "sb", scope: !5410, file: !898, line: 1382, type: !1004)
!5424 = !DILocation(line: 1382, column: 16, scope: !5410)
!5425 = !DILocation(line: 1384, column: 15, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5410, file: !898, line: 1384, column: 5)
!5427 = !DILocation(line: 1384, column: 13, scope: !5426)
!5428 = !DILocation(line: 1384, column: 10, scope: !5426)
!5429 = !DILocation(line: 1384, column: 20, scope: !5430)
!5430 = !DILexicalBlockFile(scope: !5431, file: !898, discriminator: 1)
!5431 = distinct !DILexicalBlock(scope: !5426, file: !898, line: 1384, column: 5)
!5432 = !DILocation(line: 1384, column: 26, scope: !5430)
!5433 = !DILocation(line: 1384, column: 23, scope: !5430)
!5434 = !DILocation(line: 1384, column: 5, scope: !5430)
!5435 = !DILocation(line: 1385, column: 17, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !898, line: 1385, column: 9)
!5437 = distinct !DILexicalBlock(scope: !5431, file: !898, line: 1384, column: 37)
!5438 = !DILocation(line: 1385, column: 14, scope: !5436)
!5439 = !DILocation(line: 1385, column: 22, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !5441, file: !898, discriminator: 1)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !898, line: 1385, column: 9)
!5442 = !DILocation(line: 1385, column: 27, scope: !5440)
!5443 = !DILocation(line: 1385, column: 30, scope: !5440)
!5444 = !DILocation(line: 1385, column: 25, scope: !5440)
!5445 = !DILocation(line: 1385, column: 9, scope: !5440)
!5446 = !DILocalVariable(name: "g1_sb", scope: !5447, file: !898, line: 1386, type: !1004)
!5447 = distinct !DILexicalBlock(scope: !5441, file: !898, line: 1385, column: 47)
!5448 = !DILocation(line: 1386, column: 17, scope: !5447)
!5449 = !DILocation(line: 1386, column: 46, scope: !5447)
!5450 = !DILocation(line: 1386, column: 25, scope: !5447)
!5451 = !DILocalVariable(name: "g1_scf_a", scope: !5447, file: !898, line: 1388, type: !1195)
!5452 = !DILocation(line: 1388, column: 22, scope: !5447)
!5453 = !DILocation(line: 1388, column: 51, scope: !5447)
!5454 = !DILocation(line: 1388, column: 33, scope: !5447)
!5455 = !DILocation(line: 1388, column: 47, scope: !5447)
!5456 = !DILocation(line: 1388, column: 36, scope: !5447)
!5457 = !DILocalVariable(name: "g1_scf_b", scope: !5447, file: !898, line: 1389, type: !1195)
!5458 = !DILocation(line: 1389, column: 22, scope: !5447)
!5459 = !DILocation(line: 1389, column: 51, scope: !5447)
!5460 = !DILocation(line: 1389, column: 57, scope: !5447)
!5461 = !DILocation(line: 1389, column: 33, scope: !5447)
!5462 = !DILocation(line: 1389, column: 47, scope: !5447)
!5463 = !DILocation(line: 1389, column: 36, scope: !5447)
!5464 = !DILocalVariable(name: "w1", scope: !5447, file: !898, line: 1391, type: !1004)
!5465 = !DILocation(line: 1391, column: 17, scope: !5447)
!5466 = !DILocation(line: 1391, column: 52, scope: !5447)
!5467 = !DILocation(line: 1391, column: 22, scope: !5447)
!5468 = !DILocation(line: 1391, column: 44, scope: !5447)
!5469 = !DILocalVariable(name: "w2", scope: !5447, file: !898, line: 1392, type: !1004)
!5470 = !DILocation(line: 1392, column: 17, scope: !5447)
!5471 = !DILocation(line: 1392, column: 55, scope: !5447)
!5472 = !DILocation(line: 1392, column: 22, scope: !5447)
!5473 = !DILocation(line: 1392, column: 44, scope: !5447)
!5474 = !DILocation(line: 1392, column: 50, scope: !5447)
!5475 = !DILocalVariable(name: "hr_scf", scope: !5447, file: !898, line: 1394, type: !1195)
!5476 = !DILocation(line: 1394, column: 22, scope: !5447)
!5477 = !DILocation(line: 1394, column: 51, scope: !5447)
!5478 = !DILocation(line: 1394, column: 31, scope: !5447)
!5479 = !DILocation(line: 1394, column: 47, scope: !5447)
!5480 = !DILocation(line: 1394, column: 34, scope: !5447)
!5481 = !DILocation(line: 1396, column: 17, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5447, file: !898, line: 1396, column: 17)
!5483 = !DILocation(line: 1396, column: 20, scope: !5482)
!5484 = !DILocation(line: 1396, column: 17, scope: !5447)
!5485 = !DILocation(line: 1397, column: 24, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !898, line: 1397, column: 17)
!5487 = distinct !DILexicalBlock(scope: !5482, file: !898, line: 1396, column: 25)
!5488 = !DILocation(line: 1397, column: 22, scope: !5486)
!5489 = !DILocation(line: 1397, column: 29, scope: !5490)
!5490 = !DILexicalBlockFile(scope: !5491, file: !898, discriminator: 1)
!5491 = distinct !DILexicalBlock(scope: !5486, file: !898, line: 1397, column: 17)
!5492 = !DILocation(line: 1397, column: 31, scope: !5490)
!5493 = !DILocation(line: 1397, column: 17, scope: !5490)
!5494 = !DILocalVariable(name: "scf", scope: !5495, file: !898, line: 1398, type: !1004)
!5495 = distinct !DILexicalBlock(scope: !5491, file: !898, line: 1397, column: 41)
!5496 = !DILocation(line: 1398, column: 25, scope: !5495)
!5497 = !DILocation(line: 1398, column: 31, scope: !5495)
!5498 = !DILocation(line: 1398, column: 45, scope: !5495)
!5499 = !DILocation(line: 1398, column: 36, scope: !5495)
!5500 = !DILocation(line: 1398, column: 34, scope: !5495)
!5501 = !DILocation(line: 1398, column: 50, scope: !5495)
!5502 = !DILocation(line: 1398, column: 64, scope: !5495)
!5503 = !DILocation(line: 1398, column: 55, scope: !5495)
!5504 = !DILocation(line: 1398, column: 53, scope: !5495)
!5505 = !DILocation(line: 1398, column: 48, scope: !5495)
!5506 = !DILocation(line: 1399, column: 33, scope: !5495)
!5507 = !DILocation(line: 1399, column: 37, scope: !5495)
!5508 = !DILocation(line: 1399, column: 28, scope: !5495)
!5509 = !DILocation(line: 1399, column: 21, scope: !5495)
!5510 = !DILocation(line: 1399, column: 31, scope: !5495)
!5511 = !DILocation(line: 1400, column: 17, scope: !5495)
!5512 = !DILocation(line: 1397, column: 37, scope: !5513)
!5513 = !DILexicalBlockFile(scope: !5491, file: !898, discriminator: 2)
!5514 = !DILocation(line: 1397, column: 17, scope: !5513)
!5515 = distinct !{!5515, !5516}
!5516 = !DILocation(line: 1397, column: 17, scope: !5487)
!5517 = !DILocation(line: 1401, column: 13, scope: !5487)
!5518 = !DILocalVariable(name: "g3_scf", scope: !5519, file: !898, line: 1402, type: !1344)
!5519 = distinct !DILexicalBlock(scope: !5482, file: !898, line: 1401, column: 20)
!5520 = !DILocation(line: 1402, column: 25, scope: !5519)
!5521 = !DILocation(line: 1402, column: 52, scope: !5519)
!5522 = !DILocation(line: 1402, column: 55, scope: !5519)
!5523 = !DILocation(line: 1402, column: 34, scope: !5519)
!5524 = !DILocation(line: 1402, column: 48, scope: !5519)
!5525 = !DILocation(line: 1402, column: 37, scope: !5519)
!5526 = !DILocalVariable(name: "g3_avg", scope: !5519, file: !898, line: 1403, type: !1004)
!5527 = !DILocation(line: 1403, column: 21, scope: !5519)
!5528 = !DILocation(line: 1403, column: 48, scope: !5519)
!5529 = !DILocation(line: 1403, column: 51, scope: !5519)
!5530 = !DILocation(line: 1403, column: 30, scope: !5519)
!5531 = !DILocation(line: 1403, column: 44, scope: !5519)
!5532 = !DILocation(line: 1403, column: 33, scope: !5519)
!5533 = !DILocation(line: 1405, column: 24, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5519, file: !898, line: 1405, column: 17)
!5535 = !DILocation(line: 1405, column: 22, scope: !5534)
!5536 = !DILocation(line: 1405, column: 29, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !5538, file: !898, discriminator: 1)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !898, line: 1405, column: 17)
!5539 = !DILocation(line: 1405, column: 31, scope: !5537)
!5540 = !DILocation(line: 1405, column: 17, scope: !5537)
!5541 = !DILocalVariable(name: "scf", scope: !5542, file: !898, line: 1406, type: !1004)
!5542 = distinct !DILexicalBlock(scope: !5538, file: !898, line: 1405, column: 41)
!5543 = !DILocation(line: 1406, column: 25, scope: !5542)
!5544 = !DILocation(line: 1406, column: 31, scope: !5542)
!5545 = !DILocation(line: 1406, column: 45, scope: !5542)
!5546 = !DILocation(line: 1406, column: 36, scope: !5542)
!5547 = !DILocation(line: 1406, column: 34, scope: !5542)
!5548 = !DILocation(line: 1406, column: 50, scope: !5542)
!5549 = !DILocation(line: 1406, column: 64, scope: !5542)
!5550 = !DILocation(line: 1406, column: 55, scope: !5542)
!5551 = !DILocation(line: 1406, column: 53, scope: !5542)
!5552 = !DILocation(line: 1406, column: 48, scope: !5542)
!5553 = !DILocation(line: 1407, column: 34, scope: !5542)
!5554 = !DILocation(line: 1407, column: 38, scope: !5542)
!5555 = !DILocation(line: 1407, column: 46, scope: !5542)
!5556 = !DILocation(line: 1407, column: 44, scope: !5542)
!5557 = !DILocation(line: 1407, column: 62, scope: !5542)
!5558 = !DILocation(line: 1407, column: 55, scope: !5542)
!5559 = !DILocation(line: 1407, column: 53, scope: !5542)
!5560 = !DILocation(line: 1407, column: 33, scope: !5542)
!5561 = !DILocation(line: 1407, column: 28, scope: !5542)
!5562 = !DILocation(line: 1407, column: 21, scope: !5542)
!5563 = !DILocation(line: 1407, column: 31, scope: !5542)
!5564 = !DILocation(line: 1408, column: 17, scope: !5542)
!5565 = !DILocation(line: 1405, column: 37, scope: !5566)
!5566 = !DILexicalBlockFile(scope: !5538, file: !898, discriminator: 2)
!5567 = !DILocation(line: 1405, column: 17, scope: !5566)
!5568 = distinct !{!5568, !5569}
!5569 = !DILocation(line: 1405, column: 17, scope: !5519)
!5570 = !DILocation(line: 1410, column: 9, scope: !5447)
!5571 = !DILocation(line: 1385, column: 43, scope: !5572)
!5572 = !DILexicalBlockFile(scope: !5441, file: !898, discriminator: 2)
!5573 = !DILocation(line: 1385, column: 9, scope: !5572)
!5574 = distinct !{!5574, !5575}
!5575 = !DILocation(line: 1385, column: 9, scope: !5437)
!5576 = !DILocation(line: 1411, column: 5, scope: !5437)
!5577 = !DILocation(line: 1384, column: 33, scope: !5578)
!5578 = !DILexicalBlockFile(scope: !5431, file: !898, discriminator: 2)
!5579 = !DILocation(line: 1384, column: 5, scope: !5578)
!5580 = distinct !{!5580, !5581}
!5581 = !DILocation(line: 1384, column: 5, scope: !5410)
!5582 = !DILocation(line: 1412, column: 1, scope: !5410)
!5583 = distinct !DISubprogram(name: "random_ts", scope: !898, file: !898, line: 1417, type: !5411, isLocal: true, isDefinition: true, scopeLine: 1418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!5584 = !DILocalVariable(name: "s", arg: 1, scope: !5583, file: !898, line: 1417, type: !1064)
!5585 = !DILocation(line: 1417, column: 38, scope: !5583)
!5586 = !DILocalVariable(name: "ch1", arg: 2, scope: !5583, file: !898, line: 1417, type: !1004)
!5587 = !DILocation(line: 1417, column: 45, scope: !5583)
!5588 = !DILocalVariable(name: "ch2", arg: 3, scope: !5583, file: !898, line: 1417, type: !1004)
!5589 = !DILocation(line: 1417, column: 54, scope: !5583)
!5590 = !DILocalVariable(name: "i", scope: !5583, file: !898, line: 1419, type: !1004)
!5591 = !DILocation(line: 1419, column: 9, scope: !5583)
!5592 = !DILocalVariable(name: "j", scope: !5583, file: !898, line: 1419, type: !1004)
!5593 = !DILocation(line: 1419, column: 12, scope: !5583)
!5594 = !DILocalVariable(name: "k", scope: !5583, file: !898, line: 1419, type: !1004)
!5595 = !DILocation(line: 1419, column: 15, scope: !5583)
!5596 = !DILocalVariable(name: "ch", scope: !5583, file: !898, line: 1419, type: !1004)
!5597 = !DILocation(line: 1419, column: 18, scope: !5583)
!5598 = !DILocalVariable(name: "sb", scope: !5583, file: !898, line: 1419, type: !1004)
!5599 = !DILocation(line: 1419, column: 22, scope: !5583)
!5600 = !DILocation(line: 1421, column: 15, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5583, file: !898, line: 1421, column: 5)
!5602 = !DILocation(line: 1421, column: 13, scope: !5601)
!5603 = !DILocation(line: 1421, column: 10, scope: !5601)
!5604 = !DILocation(line: 1421, column: 20, scope: !5605)
!5605 = !DILexicalBlockFile(scope: !5606, file: !898, discriminator: 1)
!5606 = distinct !DILexicalBlock(scope: !5601, file: !898, line: 1421, column: 5)
!5607 = !DILocation(line: 1421, column: 26, scope: !5605)
!5608 = !DILocation(line: 1421, column: 23, scope: !5605)
!5609 = !DILocation(line: 1421, column: 5, scope: !5605)
!5610 = !DILocation(line: 1422, column: 17, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !898, line: 1422, column: 9)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !898, line: 1421, column: 37)
!5613 = !DILocation(line: 1422, column: 14, scope: !5611)
!5614 = !DILocation(line: 1422, column: 22, scope: !5615)
!5615 = !DILexicalBlockFile(scope: !5616, file: !898, discriminator: 1)
!5616 = distinct !DILexicalBlock(scope: !5611, file: !898, line: 1422, column: 9)
!5617 = !DILocation(line: 1422, column: 27, scope: !5615)
!5618 = !DILocation(line: 1422, column: 30, scope: !5615)
!5619 = !DILocation(line: 1422, column: 25, scope: !5615)
!5620 = !DILocation(line: 1422, column: 9, scope: !5615)
!5621 = !DILocalVariable(name: "samples", scope: !5622, file: !898, line: 1423, type: !1006)
!5622 = distinct !DILexicalBlock(scope: !5616, file: !898, line: 1422, column: 47)
!5623 = !DILocation(line: 1423, column: 20, scope: !5622)
!5624 = !DILocation(line: 1423, column: 50, scope: !5622)
!5625 = !DILocation(line: 1423, column: 30, scope: !5622)
!5626 = !DILocation(line: 1423, column: 46, scope: !5622)
!5627 = !DILocation(line: 1423, column: 33, scope: !5622)
!5628 = !DILocation(line: 1425, column: 28, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5622, file: !898, line: 1425, column: 17)
!5630 = !DILocation(line: 1425, column: 17, scope: !5629)
!5631 = !DILocation(line: 1425, column: 20, scope: !5629)
!5632 = !DILocation(line: 1425, column: 41, scope: !5629)
!5633 = !DILocation(line: 1425, column: 38, scope: !5629)
!5634 = !DILocation(line: 1425, column: 32, scope: !5629)
!5635 = !DILocation(line: 1425, column: 17, scope: !5622)
!5636 = !DILocation(line: 1426, column: 17, scope: !5629)
!5637 = !DILocation(line: 1428, column: 17, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5622, file: !898, line: 1428, column: 17)
!5639 = !DILocation(line: 1428, column: 20, scope: !5638)
!5640 = !DILocation(line: 1428, column: 17, scope: !5622)
!5641 = !DILocation(line: 1430, column: 24, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5638, file: !898, line: 1428, column: 25)
!5643 = !DILocation(line: 1430, column: 17, scope: !5642)
!5644 = !DILocation(line: 1431, column: 13, scope: !5642)
!5645 = !DILocation(line: 1431, column: 24, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !5647, file: !898, discriminator: 1)
!5647 = distinct !DILexicalBlock(scope: !5638, file: !898, line: 1431, column: 24)
!5648 = !DILocation(line: 1431, column: 27, scope: !5646)
!5649 = !DILocation(line: 1432, column: 24, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !898, line: 1432, column: 17)
!5651 = distinct !DILexicalBlock(scope: !5647, file: !898, line: 1431, column: 33)
!5652 = !DILocation(line: 1432, column: 22, scope: !5650)
!5653 = !DILocation(line: 1432, column: 29, scope: !5654)
!5654 = !DILexicalBlockFile(scope: !5655, file: !898, discriminator: 1)
!5655 = distinct !DILexicalBlock(scope: !5650, file: !898, line: 1432, column: 17)
!5656 = !DILocation(line: 1432, column: 31, scope: !5654)
!5657 = !DILocation(line: 1432, column: 17, scope: !5654)
!5658 = !DILocation(line: 1433, column: 43, scope: !5655)
!5659 = !DILocation(line: 1433, column: 46, scope: !5655)
!5660 = !DILocation(line: 1433, column: 34, scope: !5655)
!5661 = !DILocation(line: 1433, column: 29, scope: !5655)
!5662 = !DILocation(line: 1433, column: 21, scope: !5655)
!5663 = !DILocation(line: 1433, column: 32, scope: !5655)
!5664 = !DILocation(line: 1432, column: 39, scope: !5665)
!5665 = !DILexicalBlockFile(scope: !5655, file: !898, discriminator: 2)
!5666 = !DILocation(line: 1432, column: 17, scope: !5665)
!5667 = distinct !{!5667, !5668}
!5668 = !DILocation(line: 1432, column: 17, scope: !5651)
!5669 = !DILocation(line: 1434, column: 13, scope: !5651)
!5670 = !DILocation(line: 1435, column: 24, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !898, line: 1435, column: 17)
!5672 = distinct !DILexicalBlock(scope: !5647, file: !898, line: 1434, column: 20)
!5673 = !DILocation(line: 1435, column: 22, scope: !5671)
!5674 = !DILocation(line: 1435, column: 29, scope: !5675)
!5675 = !DILexicalBlockFile(scope: !5676, file: !898, discriminator: 1)
!5676 = distinct !DILexicalBlock(scope: !5671, file: !898, line: 1435, column: 17)
!5677 = !DILocation(line: 1435, column: 31, scope: !5675)
!5678 = !DILocation(line: 1435, column: 17, scope: !5675)
!5679 = !DILocalVariable(name: "accum", scope: !5680, file: !898, line: 1436, type: !5681)
!5680 = distinct !DILexicalBlock(scope: !5676, file: !898, line: 1435, column: 61)
!5681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 256, align: 32, elements: !1221)
!5682 = !DILocation(line: 1436, column: 27, scope: !5680)
!5683 = !DILocation(line: 1439, column: 28, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !898, line: 1439, column: 21)
!5685 = !DILocation(line: 1439, column: 26, scope: !5684)
!5686 = !DILocation(line: 1439, column: 33, scope: !5687)
!5687 = !DILexicalBlockFile(scope: !5688, file: !898, discriminator: 1)
!5688 = distinct !DILexicalBlock(scope: !5684, file: !898, line: 1439, column: 21)
!5689 = !DILocation(line: 1439, column: 35, scope: !5687)
!5690 = !DILocation(line: 1439, column: 21, scope: !5687)
!5691 = !DILocalVariable(name: "other", scope: !5692, file: !898, line: 1440, type: !1006)
!5692 = distinct !DILexicalBlock(scope: !5688, file: !898, line: 1439, column: 45)
!5693 = !DILocation(line: 1440, column: 32, scope: !5692)
!5694 = !DILocation(line: 1440, column: 64, scope: !5692)
!5695 = !DILocation(line: 1440, column: 66, scope: !5692)
!5696 = !DILocation(line: 1440, column: 41, scope: !5692)
!5697 = !DILocation(line: 1440, column: 61, scope: !5692)
!5698 = !DILocation(line: 1440, column: 57, scope: !5692)
!5699 = !DILocation(line: 1440, column: 44, scope: !5692)
!5700 = !DILocation(line: 1441, column: 32, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5692, file: !898, line: 1441, column: 25)
!5702 = !DILocation(line: 1441, column: 30, scope: !5701)
!5703 = !DILocation(line: 1441, column: 37, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !5705, file: !898, discriminator: 1)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !898, line: 1441, column: 25)
!5706 = !DILocation(line: 1441, column: 39, scope: !5704)
!5707 = !DILocation(line: 1441, column: 25, scope: !5704)
!5708 = !DILocation(line: 1442, column: 52, scope: !5705)
!5709 = !DILocation(line: 1442, column: 46, scope: !5705)
!5710 = !DILocation(line: 1442, column: 41, scope: !5705)
!5711 = !DILocation(line: 1442, column: 35, scope: !5705)
!5712 = !DILocation(line: 1442, column: 29, scope: !5705)
!5713 = !DILocation(line: 1442, column: 38, scope: !5705)
!5714 = !DILocation(line: 1441, column: 45, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !5705, file: !898, discriminator: 2)
!5716 = !DILocation(line: 1441, column: 25, scope: !5715)
!5717 = distinct !{!5717, !5718}
!5718 = !DILocation(line: 1441, column: 25, scope: !5692)
!5719 = !DILocation(line: 1443, column: 21, scope: !5692)
!5720 = !DILocation(line: 1439, column: 41, scope: !5721)
!5721 = !DILexicalBlockFile(scope: !5688, file: !898, discriminator: 2)
!5722 = !DILocation(line: 1439, column: 21, scope: !5721)
!5723 = distinct !{!5723, !5724}
!5724 = !DILocation(line: 1439, column: 21, scope: !5680)
!5725 = !DILocation(line: 1445, column: 28, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5680, file: !898, line: 1445, column: 21)
!5727 = !DILocation(line: 1445, column: 26, scope: !5726)
!5728 = !DILocation(line: 1445, column: 33, scope: !5729)
!5729 = !DILexicalBlockFile(scope: !5730, file: !898, discriminator: 1)
!5730 = distinct !DILexicalBlock(scope: !5726, file: !898, line: 1445, column: 21)
!5731 = !DILocation(line: 1445, column: 35, scope: !5729)
!5732 = !DILocation(line: 1445, column: 21, scope: !5729)
!5733 = !DILocation(line: 1446, column: 45, scope: !5730)
!5734 = !DILocation(line: 1446, column: 39, scope: !5730)
!5735 = !DILocation(line: 1446, column: 48, scope: !5730)
!5736 = !DILocation(line: 1446, column: 56, scope: !5730)
!5737 = !DILocation(line: 1446, column: 75, scope: !5730)
!5738 = !DILocation(line: 1446, column: 78, scope: !5730)
!5739 = !DILocation(line: 1446, column: 66, scope: !5730)
!5740 = !DILocation(line: 1446, column: 64, scope: !5730)
!5741 = !DILocation(line: 1446, column: 33, scope: !5730)
!5742 = !DILocation(line: 1446, column: 25, scope: !5730)
!5743 = !DILocation(line: 1446, column: 36, scope: !5730)
!5744 = !DILocation(line: 1445, column: 41, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !5730, file: !898, discriminator: 2)
!5746 = !DILocation(line: 1445, column: 21, scope: !5745)
!5747 = distinct !{!5747, !5748}
!5748 = !DILocation(line: 1445, column: 21, scope: !5680)
!5749 = !DILocation(line: 1447, column: 17, scope: !5680)
!5750 = !DILocation(line: 1435, column: 43, scope: !5751)
!5751 = !DILexicalBlockFile(scope: !5676, file: !898, discriminator: 2)
!5752 = !DILocation(line: 1435, column: 55, scope: !5751)
!5753 = !DILocation(line: 1435, column: 17, scope: !5751)
!5754 = distinct !{!5754, !5755}
!5755 = !DILocation(line: 1435, column: 17, scope: !5672)
!5756 = !DILocation(line: 1449, column: 9, scope: !5622)
!5757 = !DILocation(line: 1422, column: 43, scope: !5758)
!5758 = !DILexicalBlockFile(scope: !5616, file: !898, discriminator: 2)
!5759 = !DILocation(line: 1422, column: 9, scope: !5758)
!5760 = distinct !{!5760, !5761}
!5761 = !DILocation(line: 1422, column: 9, scope: !5612)
!5762 = !DILocation(line: 1450, column: 5, scope: !5612)
!5763 = !DILocation(line: 1421, column: 33, scope: !5764)
!5764 = !DILexicalBlockFile(scope: !5606, file: !898, discriminator: 2)
!5765 = !DILocation(line: 1421, column: 5, scope: !5764)
!5766 = distinct !{!5766, !5767}
!5767 = !DILocation(line: 1421, column: 5, scope: !5583)
!5768 = !DILocation(line: 1451, column: 1, scope: !5583)
!5769 = distinct !DISubprogram(name: "filter_ts", scope: !898, file: !898, line: 1487, type: !5411, isLocal: true, isDefinition: true, scopeLine: 1488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!5770 = !DILocalVariable(name: "s", arg: 1, scope: !5769, file: !898, line: 1487, type: !1064)
!5771 = !DILocation(line: 1487, column: 38, scope: !5769)
!5772 = !DILocalVariable(name: "ch1", arg: 2, scope: !5769, file: !898, line: 1487, type: !1004)
!5773 = !DILocation(line: 1487, column: 45, scope: !5769)
!5774 = !DILocalVariable(name: "ch2", arg: 3, scope: !5769, file: !898, line: 1487, type: !1004)
!5775 = !DILocation(line: 1487, column: 54, scope: !5769)
!5776 = !DILocalVariable(name: "i", scope: !5769, file: !898, line: 1489, type: !1004)
!5777 = !DILocation(line: 1489, column: 9, scope: !5769)
!5778 = !DILocalVariable(name: "j", scope: !5769, file: !898, line: 1489, type: !1004)
!5779 = !DILocation(line: 1489, column: 12, scope: !5769)
!5780 = !DILocalVariable(name: "sb", scope: !5769, file: !898, line: 1489, type: !1004)
!5781 = !DILocation(line: 1489, column: 15, scope: !5769)
!5782 = !DILocalVariable(name: "ch", scope: !5769, file: !898, line: 1489, type: !1004)
!5783 = !DILocation(line: 1489, column: 19, scope: !5769)
!5784 = !DILocation(line: 1491, column: 13, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5769, file: !898, line: 1491, column: 5)
!5786 = !DILocation(line: 1491, column: 10, scope: !5785)
!5787 = !DILocation(line: 1491, column: 18, scope: !5788)
!5788 = !DILexicalBlockFile(scope: !5789, file: !898, discriminator: 1)
!5789 = distinct !DILexicalBlock(scope: !5785, file: !898, line: 1491, column: 5)
!5790 = !DILocation(line: 1491, column: 23, scope: !5788)
!5791 = !DILocation(line: 1491, column: 26, scope: !5788)
!5792 = !DILocation(line: 1491, column: 21, scope: !5788)
!5793 = !DILocation(line: 1491, column: 5, scope: !5788)
!5794 = !DILocation(line: 1493, column: 19, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !898, line: 1493, column: 9)
!5796 = distinct !DILexicalBlock(scope: !5789, file: !898, line: 1491, column: 43)
!5797 = !DILocation(line: 1493, column: 17, scope: !5795)
!5798 = !DILocation(line: 1493, column: 14, scope: !5795)
!5799 = !DILocation(line: 1493, column: 24, scope: !5800)
!5800 = !DILexicalBlockFile(scope: !5801, file: !898, discriminator: 1)
!5801 = distinct !DILexicalBlock(scope: !5795, file: !898, line: 1493, column: 9)
!5802 = !DILocation(line: 1493, column: 30, scope: !5800)
!5803 = !DILocation(line: 1493, column: 27, scope: !5800)
!5804 = !DILocation(line: 1493, column: 9, scope: !5800)
!5805 = !DILocalVariable(name: "samples", scope: !5806, file: !898, line: 1494, type: !1006)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !898, line: 1493, column: 41)
!5807 = !DILocation(line: 1494, column: 20, scope: !5806)
!5808 = !DILocation(line: 1494, column: 50, scope: !5806)
!5809 = !DILocation(line: 1494, column: 30, scope: !5806)
!5810 = !DILocation(line: 1494, column: 46, scope: !5806)
!5811 = !DILocation(line: 1494, column: 33, scope: !5806)
!5812 = !DILocalVariable(name: "hr_scf", scope: !5806, file: !898, line: 1495, type: !1195)
!5813 = !DILocation(line: 1495, column: 22, scope: !5806)
!5814 = !DILocation(line: 1495, column: 51, scope: !5806)
!5815 = !DILocation(line: 1495, column: 31, scope: !5806)
!5816 = !DILocation(line: 1495, column: 47, scope: !5806)
!5817 = !DILocation(line: 1495, column: 34, scope: !5806)
!5818 = !DILocation(line: 1496, column: 17, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5806, file: !898, line: 1496, column: 17)
!5820 = !DILocation(line: 1496, column: 20, scope: !5819)
!5821 = !DILocation(line: 1496, column: 17, scope: !5806)
!5822 = !DILocation(line: 1497, column: 24, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !898, line: 1497, column: 17)
!5824 = distinct !DILexicalBlock(scope: !5819, file: !898, line: 1496, column: 25)
!5825 = !DILocation(line: 1497, column: 22, scope: !5823)
!5826 = !DILocation(line: 1497, column: 29, scope: !5827)
!5827 = !DILexicalBlockFile(scope: !5828, file: !898, discriminator: 1)
!5828 = distinct !DILexicalBlock(scope: !5823, file: !898, line: 1497, column: 17)
!5829 = !DILocation(line: 1497, column: 31, scope: !5827)
!5830 = !DILocation(line: 1497, column: 17, scope: !5827)
!5831 = !DILocalVariable(name: "scf", scope: !5832, file: !898, line: 1498, type: !1005)
!5832 = distinct !DILexicalBlock(scope: !5828, file: !898, line: 1497, column: 63)
!5833 = !DILocation(line: 1498, column: 34, scope: !5832)
!5834 = !DILocation(line: 1498, column: 47, scope: !5832)
!5835 = !DILocation(line: 1498, column: 40, scope: !5832)
!5836 = !DILocation(line: 1499, column: 25, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5832, file: !898, line: 1499, column: 25)
!5838 = !DILocation(line: 1499, column: 29, scope: !5837)
!5839 = !DILocation(line: 1499, column: 25, scope: !5832)
!5840 = !DILocation(line: 1500, column: 29, scope: !5837)
!5841 = !DILocation(line: 1500, column: 25, scope: !5837)
!5842 = !DILocation(line: 1501, column: 28, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5832, file: !898, line: 1501, column: 21)
!5844 = !DILocation(line: 1501, column: 26, scope: !5843)
!5845 = !DILocation(line: 1501, column: 33, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5847, file: !898, discriminator: 1)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !898, line: 1501, column: 21)
!5848 = !DILocation(line: 1501, column: 35, scope: !5846)
!5849 = !DILocation(line: 1501, column: 21, scope: !5846)
!5850 = !DILocation(line: 1502, column: 56, scope: !5847)
!5851 = !DILocation(line: 1502, column: 39, scope: !5847)
!5852 = !DILocation(line: 1502, column: 33, scope: !5847)
!5853 = !DILocation(line: 1502, column: 25, scope: !5847)
!5854 = !DILocation(line: 1502, column: 36, scope: !5847)
!5855 = !DILocation(line: 1501, column: 42, scope: !5856)
!5856 = !DILexicalBlockFile(scope: !5847, file: !898, discriminator: 2)
!5857 = !DILocation(line: 1501, column: 21, scope: !5856)
!5858 = distinct !{!5858, !5859}
!5859 = !DILocation(line: 1501, column: 21, scope: !5832)
!5860 = !DILocation(line: 1503, column: 17, scope: !5832)
!5861 = !DILocation(line: 1497, column: 44, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5828, file: !898, discriminator: 2)
!5863 = !DILocation(line: 1497, column: 56, scope: !5862)
!5864 = !DILocation(line: 1497, column: 17, scope: !5862)
!5865 = distinct !{!5865, !5866}
!5866 = !DILocation(line: 1497, column: 17, scope: !5824)
!5867 = !DILocation(line: 1504, column: 13, scope: !5824)
!5868 = !DILocalVariable(name: "g2_scf", scope: !5869, file: !898, line: 1505, type: !1195)
!5869 = distinct !DILexicalBlock(scope: !5819, file: !898, line: 1504, column: 20)
!5870 = !DILocation(line: 1505, column: 26, scope: !5869)
!5871 = !DILocation(line: 1505, column: 74, scope: !5869)
!5872 = !DILocation(line: 1505, column: 53, scope: !5869)
!5873 = !DILocation(line: 1505, column: 35, scope: !5869)
!5874 = !DILocation(line: 1505, column: 49, scope: !5869)
!5875 = !DILocation(line: 1505, column: 38, scope: !5869)
!5876 = !DILocation(line: 1506, column: 24, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5869, file: !898, line: 1506, column: 17)
!5878 = !DILocation(line: 1506, column: 22, scope: !5877)
!5879 = !DILocation(line: 1506, column: 29, scope: !5880)
!5880 = !DILexicalBlockFile(scope: !5881, file: !898, discriminator: 1)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !898, line: 1506, column: 17)
!5882 = !DILocation(line: 1506, column: 31, scope: !5880)
!5883 = !DILocation(line: 1506, column: 17, scope: !5880)
!5884 = !DILocalVariable(name: "scf", scope: !5885, file: !898, line: 1507, type: !1005)
!5885 = distinct !DILexicalBlock(scope: !5881, file: !898, line: 1506, column: 61)
!5886 = !DILocation(line: 1507, column: 34, scope: !5885)
!5887 = !DILocation(line: 1507, column: 47, scope: !5885)
!5888 = !DILocation(line: 1507, column: 49, scope: !5885)
!5889 = !DILocation(line: 1507, column: 40, scope: !5885)
!5890 = !DILocation(line: 1507, column: 63, scope: !5885)
!5891 = !DILocation(line: 1507, column: 56, scope: !5885)
!5892 = !DILocation(line: 1507, column: 54, scope: !5885)
!5893 = !DILocation(line: 1508, column: 25, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5885, file: !898, line: 1508, column: 25)
!5895 = !DILocation(line: 1508, column: 29, scope: !5894)
!5896 = !DILocation(line: 1508, column: 25, scope: !5885)
!5897 = !DILocation(line: 1509, column: 29, scope: !5894)
!5898 = !DILocation(line: 1509, column: 25, scope: !5894)
!5899 = !DILocation(line: 1510, column: 52, scope: !5885)
!5900 = !DILocation(line: 1510, column: 35, scope: !5885)
!5901 = !DILocation(line: 1510, column: 21, scope: !5885)
!5902 = !DILocation(line: 1510, column: 32, scope: !5885)
!5903 = !DILocation(line: 1511, column: 52, scope: !5885)
!5904 = !DILocation(line: 1511, column: 35, scope: !5885)
!5905 = !DILocation(line: 1511, column: 21, scope: !5885)
!5906 = !DILocation(line: 1511, column: 32, scope: !5885)
!5907 = !DILocation(line: 1512, column: 17, scope: !5885)
!5908 = !DILocation(line: 1506, column: 43, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !5881, file: !898, discriminator: 2)
!5910 = !DILocation(line: 1506, column: 55, scope: !5909)
!5911 = !DILocation(line: 1506, column: 17, scope: !5909)
!5912 = distinct !{!5912, !5913}
!5913 = !DILocation(line: 1506, column: 17, scope: !5869)
!5914 = !DILocation(line: 1514, column: 9, scope: !5806)
!5915 = !DILocation(line: 1493, column: 37, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !5801, file: !898, discriminator: 2)
!5917 = !DILocation(line: 1493, column: 9, scope: !5916)
!5918 = distinct !{!5918, !5919}
!5919 = !DILocation(line: 1493, column: 9, scope: !5796)
!5920 = !DILocation(line: 1517, column: 13, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5796, file: !898, line: 1517, column: 13)
!5922 = !DILocation(line: 1517, column: 20, scope: !5921)
!5923 = !DILocation(line: 1517, column: 17, scope: !5921)
!5924 = !DILocation(line: 1517, column: 13, scope: !5796)
!5925 = !DILocalVariable(name: "samples_l", scope: !5926, file: !898, line: 1518, type: !1006)
!5926 = distinct !DILexicalBlock(scope: !5921, file: !898, line: 1517, column: 25)
!5927 = !DILocation(line: 1518, column: 20, scope: !5926)
!5928 = !DILocation(line: 1518, column: 53, scope: !5926)
!5929 = !DILocation(line: 1518, column: 32, scope: !5926)
!5930 = !DILocation(line: 1518, column: 48, scope: !5926)
!5931 = !DILocation(line: 1518, column: 35, scope: !5926)
!5932 = !DILocalVariable(name: "samples_r", scope: !5926, file: !898, line: 1519, type: !1006)
!5933 = !DILocation(line: 1519, column: 20, scope: !5926)
!5934 = !DILocation(line: 1519, column: 53, scope: !5926)
!5935 = !DILocation(line: 1519, column: 32, scope: !5926)
!5936 = !DILocation(line: 1519, column: 48, scope: !5926)
!5937 = !DILocation(line: 1519, column: 35, scope: !5926)
!5938 = !DILocalVariable(name: "ch2_pres", scope: !5926, file: !898, line: 1520, type: !1004)
!5939 = !DILocation(line: 1520, column: 17, scope: !5926)
!5940 = !DILocation(line: 1520, column: 39, scope: !5926)
!5941 = !DILocation(line: 1520, column: 28, scope: !5926)
!5942 = !DILocation(line: 1520, column: 31, scope: !5926)
!5943 = !DILocation(line: 1520, column: 53, scope: !5926)
!5944 = !DILocation(line: 1520, column: 50, scope: !5926)
!5945 = !DILocation(line: 1520, column: 44, scope: !5926)
!5946 = !DILocation(line: 1522, column: 20, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5926, file: !898, line: 1522, column: 13)
!5948 = !DILocation(line: 1522, column: 18, scope: !5947)
!5949 = !DILocation(line: 1522, column: 25, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !5951, file: !898, discriminator: 1)
!5951 = distinct !DILexicalBlock(scope: !5947, file: !898, line: 1522, column: 13)
!5952 = !DILocation(line: 1522, column: 27, scope: !5950)
!5953 = !DILocation(line: 1522, column: 13, scope: !5950)
!5954 = !DILocalVariable(name: "sbms", scope: !5955, file: !898, line: 1523, type: !1004)
!5955 = distinct !DILexicalBlock(scope: !5951, file: !898, line: 1522, column: 44)
!5956 = !DILocation(line: 1523, column: 21, scope: !5955)
!5957 = !DILocation(line: 1523, column: 53, scope: !5955)
!5958 = !DILocation(line: 1523, column: 29, scope: !5955)
!5959 = !DILocation(line: 1523, column: 44, scope: !5955)
!5960 = !DILocation(line: 1523, column: 48, scope: !5955)
!5961 = !DILocation(line: 1523, column: 32, scope: !5955)
!5962 = !DILocation(line: 1523, column: 60, scope: !5955)
!5963 = !DILocation(line: 1523, column: 57, scope: !5955)
!5964 = !DILocation(line: 1523, column: 63, scope: !5955)
!5965 = !DILocalVariable(name: "lrms", scope: !5955, file: !898, line: 1524, type: !1004)
!5966 = !DILocation(line: 1524, column: 21, scope: !5955)
!5967 = !DILocation(line: 1524, column: 53, scope: !5955)
!5968 = !DILocation(line: 1524, column: 29, scope: !5955)
!5969 = !DILocation(line: 1524, column: 44, scope: !5955)
!5970 = !DILocation(line: 1524, column: 48, scope: !5955)
!5971 = !DILocation(line: 1524, column: 32, scope: !5955)
!5972 = !DILocation(line: 1524, column: 60, scope: !5955)
!5973 = !DILocation(line: 1524, column: 57, scope: !5955)
!5974 = !DILocation(line: 1524, column: 63, scope: !5955)
!5975 = !DILocation(line: 1526, column: 21, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5955, file: !898, line: 1526, column: 21)
!5977 = !DILocation(line: 1526, column: 27, scope: !5976)
!5978 = !DILocation(line: 1526, column: 30, scope: !5976)
!5979 = !DILocation(line: 1526, column: 24, scope: !5976)
!5980 = !DILocation(line: 1526, column: 21, scope: !5955)
!5981 = !DILocation(line: 1527, column: 25, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !898, line: 1527, column: 25)
!5983 = distinct !DILexicalBlock(scope: !5976, file: !898, line: 1526, column: 48)
!5984 = !DILocation(line: 1527, column: 30, scope: !5982)
!5985 = !DILocation(line: 1527, column: 33, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !5982, file: !898, discriminator: 1)
!5987 = !DILocation(line: 1527, column: 25, scope: !5986)
!5988 = !DILocation(line: 1528, column: 29, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !898, line: 1528, column: 29)
!5990 = distinct !DILexicalBlock(scope: !5982, file: !898, line: 1527, column: 43)
!5991 = !DILocation(line: 1528, column: 29, scope: !5990)
!5992 = !DILocation(line: 1529, column: 36, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5994, file: !898, line: 1529, column: 29)
!5994 = distinct !DILexicalBlock(scope: !5989, file: !898, line: 1528, column: 35)
!5995 = !DILocation(line: 1529, column: 34, scope: !5993)
!5996 = !DILocation(line: 1529, column: 41, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !5998, file: !898, discriminator: 1)
!5998 = distinct !DILexicalBlock(scope: !5993, file: !898, line: 1529, column: 29)
!5999 = !DILocation(line: 1529, column: 43, scope: !5997)
!6000 = !DILocation(line: 1529, column: 29, scope: !5997)
!6001 = !DILocalVariable(name: "tmp", scope: !6002, file: !898, line: 1530, type: !1007)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !898, line: 1529, column: 54)
!6003 = !DILocation(line: 1530, column: 39, scope: !6002)
!6004 = !DILocation(line: 1530, column: 55, scope: !6002)
!6005 = !DILocation(line: 1530, column: 45, scope: !6002)
!6006 = !DILocation(line: 1531, column: 58, scope: !6002)
!6007 = !DILocation(line: 1531, column: 48, scope: !6002)
!6008 = !DILocation(line: 1531, column: 43, scope: !6002)
!6009 = !DILocation(line: 1531, column: 33, scope: !6002)
!6010 = !DILocation(line: 1531, column: 46, scope: !6002)
!6011 = !DILocation(line: 1532, column: 49, scope: !6002)
!6012 = !DILocation(line: 1532, column: 48, scope: !6002)
!6013 = !DILocation(line: 1532, column: 43, scope: !6002)
!6014 = !DILocation(line: 1532, column: 33, scope: !6002)
!6015 = !DILocation(line: 1532, column: 46, scope: !6002)
!6016 = !DILocation(line: 1533, column: 29, scope: !6002)
!6017 = !DILocation(line: 1529, column: 50, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !5998, file: !898, discriminator: 2)
!6019 = !DILocation(line: 1529, column: 29, scope: !6018)
!6020 = distinct !{!6020, !6021}
!6021 = !DILocation(line: 1529, column: 29, scope: !5994)
!6022 = !DILocation(line: 1534, column: 25, scope: !5994)
!6023 = !DILocation(line: 1535, column: 36, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !898, line: 1535, column: 29)
!6025 = distinct !DILexicalBlock(scope: !5989, file: !898, line: 1534, column: 32)
!6026 = !DILocation(line: 1535, column: 34, scope: !6024)
!6027 = !DILocation(line: 1535, column: 41, scope: !6028)
!6028 = !DILexicalBlockFile(scope: !6029, file: !898, discriminator: 1)
!6029 = distinct !DILexicalBlock(scope: !6024, file: !898, line: 1535, column: 29)
!6030 = !DILocation(line: 1535, column: 43, scope: !6028)
!6031 = !DILocation(line: 1535, column: 29, scope: !6028)
!6032 = !DILocalVariable(name: "tmp", scope: !6033, file: !898, line: 1536, type: !1007)
!6033 = distinct !DILexicalBlock(scope: !6029, file: !898, line: 1535, column: 54)
!6034 = !DILocation(line: 1536, column: 39, scope: !6033)
!6035 = !DILocation(line: 1536, column: 55, scope: !6033)
!6036 = !DILocation(line: 1536, column: 45, scope: !6033)
!6037 = !DILocation(line: 1537, column: 58, scope: !6033)
!6038 = !DILocation(line: 1537, column: 48, scope: !6033)
!6039 = !DILocation(line: 1537, column: 43, scope: !6033)
!6040 = !DILocation(line: 1537, column: 33, scope: !6033)
!6041 = !DILocation(line: 1537, column: 46, scope: !6033)
!6042 = !DILocation(line: 1538, column: 48, scope: !6033)
!6043 = !DILocation(line: 1538, column: 43, scope: !6033)
!6044 = !DILocation(line: 1538, column: 33, scope: !6033)
!6045 = !DILocation(line: 1538, column: 46, scope: !6033)
!6046 = !DILocation(line: 1539, column: 29, scope: !6033)
!6047 = !DILocation(line: 1535, column: 50, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !6029, file: !898, discriminator: 2)
!6049 = !DILocation(line: 1535, column: 29, scope: !6048)
!6050 = distinct !{!6050, !6051}
!6051 = !DILocation(line: 1535, column: 29, scope: !6025)
!6052 = !DILocation(line: 1541, column: 21, scope: !5990)
!6053 = !DILocation(line: 1541, column: 33, scope: !6054)
!6054 = !DILexicalBlockFile(scope: !6055, file: !898, discriminator: 1)
!6055 = distinct !DILexicalBlock(scope: !5982, file: !898, line: 1541, column: 32)
!6056 = !DILocation(line: 1541, column: 32, scope: !6054)
!6057 = !DILocation(line: 1542, column: 29, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !898, line: 1542, column: 29)
!6059 = distinct !DILexicalBlock(scope: !6055, file: !898, line: 1541, column: 43)
!6060 = !DILocation(line: 1542, column: 34, scope: !6058)
!6061 = !DILocation(line: 1542, column: 38, scope: !6062)
!6062 = !DILexicalBlockFile(scope: !6058, file: !898, discriminator: 1)
!6063 = !DILocation(line: 1542, column: 41, scope: !6062)
!6064 = !DILocation(line: 1542, column: 66, scope: !6062)
!6065 = !DILocation(line: 1542, column: 63, scope: !6062)
!6066 = !DILocation(line: 1542, column: 58, scope: !6062)
!6067 = !DILocation(line: 1542, column: 29, scope: !6062)
!6068 = !DILocation(line: 1543, column: 36, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !898, line: 1543, column: 29)
!6070 = distinct !DILexicalBlock(scope: !6058, file: !898, line: 1542, column: 73)
!6071 = !DILocation(line: 1543, column: 34, scope: !6069)
!6072 = !DILocation(line: 1543, column: 41, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !6074, file: !898, discriminator: 1)
!6074 = distinct !DILexicalBlock(scope: !6069, file: !898, line: 1543, column: 29)
!6075 = !DILocation(line: 1543, column: 43, scope: !6073)
!6076 = !DILocation(line: 1543, column: 29, scope: !6073)
!6077 = !DILocation(line: 1544, column: 59, scope: !6074)
!6078 = !DILocation(line: 1544, column: 49, scope: !6074)
!6079 = !DILocation(line: 1544, column: 48, scope: !6074)
!6080 = !DILocation(line: 1544, column: 43, scope: !6074)
!6081 = !DILocation(line: 1544, column: 33, scope: !6074)
!6082 = !DILocation(line: 1544, column: 46, scope: !6074)
!6083 = !DILocation(line: 1543, column: 50, scope: !6084)
!6084 = !DILexicalBlockFile(scope: !6074, file: !898, discriminator: 2)
!6085 = !DILocation(line: 1543, column: 29, scope: !6084)
!6086 = distinct !{!6086, !6087}
!6087 = !DILocation(line: 1543, column: 29, scope: !6070)
!6088 = !DILocation(line: 1545, column: 25, scope: !6070)
!6089 = !DILocation(line: 1546, column: 36, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !898, line: 1546, column: 29)
!6091 = distinct !DILexicalBlock(scope: !6058, file: !898, line: 1545, column: 32)
!6092 = !DILocation(line: 1546, column: 34, scope: !6090)
!6093 = !DILocation(line: 1546, column: 41, scope: !6094)
!6094 = !DILexicalBlockFile(scope: !6095, file: !898, discriminator: 1)
!6095 = distinct !DILexicalBlock(scope: !6090, file: !898, line: 1546, column: 29)
!6096 = !DILocation(line: 1546, column: 43, scope: !6094)
!6097 = !DILocation(line: 1546, column: 29, scope: !6094)
!6098 = !DILocation(line: 1547, column: 58, scope: !6095)
!6099 = !DILocation(line: 1547, column: 48, scope: !6095)
!6100 = !DILocation(line: 1547, column: 43, scope: !6095)
!6101 = !DILocation(line: 1547, column: 33, scope: !6095)
!6102 = !DILocation(line: 1547, column: 46, scope: !6095)
!6103 = !DILocation(line: 1546, column: 50, scope: !6104)
!6104 = !DILexicalBlockFile(scope: !6095, file: !898, discriminator: 2)
!6105 = !DILocation(line: 1546, column: 29, scope: !6104)
!6106 = distinct !{!6106, !6107}
!6107 = !DILocation(line: 1546, column: 29, scope: !6091)
!6108 = !DILocation(line: 1549, column: 21, scope: !6059)
!6109 = !DILocation(line: 1550, column: 17, scope: !5983)
!6110 = !DILocation(line: 1550, column: 28, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !6112, file: !898, discriminator: 1)
!6112 = distinct !DILexicalBlock(scope: !5976, file: !898, line: 1550, column: 28)
!6113 = !DILocation(line: 1550, column: 33, scope: !6111)
!6114 = !DILocation(line: 1550, column: 36, scope: !6115)
!6115 = !DILexicalBlockFile(scope: !6112, file: !898, discriminator: 2)
!6116 = !DILocation(line: 1550, column: 28, scope: !6115)
!6117 = !DILocation(line: 1551, column: 28, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !898, line: 1551, column: 21)
!6119 = distinct !DILexicalBlock(scope: !6112, file: !898, line: 1550, column: 46)
!6120 = !DILocation(line: 1551, column: 26, scope: !6118)
!6121 = !DILocation(line: 1551, column: 33, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !6123, file: !898, discriminator: 1)
!6123 = distinct !DILexicalBlock(scope: !6118, file: !898, line: 1551, column: 21)
!6124 = !DILocation(line: 1551, column: 35, scope: !6122)
!6125 = !DILocation(line: 1551, column: 21, scope: !6122)
!6126 = !DILocalVariable(name: "tmp", scope: !6127, file: !898, line: 1552, type: !1007)
!6127 = distinct !DILexicalBlock(scope: !6123, file: !898, line: 1551, column: 46)
!6128 = !DILocation(line: 1552, column: 31, scope: !6127)
!6129 = !DILocation(line: 1552, column: 47, scope: !6127)
!6130 = !DILocation(line: 1552, column: 37, scope: !6127)
!6131 = !DILocation(line: 1553, column: 41, scope: !6127)
!6132 = !DILocation(line: 1553, column: 57, scope: !6127)
!6133 = !DILocation(line: 1553, column: 47, scope: !6127)
!6134 = !DILocation(line: 1553, column: 45, scope: !6127)
!6135 = !DILocation(line: 1553, column: 61, scope: !6127)
!6136 = !DILocation(line: 1553, column: 35, scope: !6127)
!6137 = !DILocation(line: 1553, column: 25, scope: !6127)
!6138 = !DILocation(line: 1553, column: 38, scope: !6127)
!6139 = !DILocation(line: 1554, column: 41, scope: !6127)
!6140 = !DILocation(line: 1554, column: 57, scope: !6127)
!6141 = !DILocation(line: 1554, column: 47, scope: !6127)
!6142 = !DILocation(line: 1554, column: 45, scope: !6127)
!6143 = !DILocation(line: 1554, column: 61, scope: !6127)
!6144 = !DILocation(line: 1554, column: 35, scope: !6127)
!6145 = !DILocation(line: 1554, column: 25, scope: !6127)
!6146 = !DILocation(line: 1554, column: 38, scope: !6127)
!6147 = !DILocation(line: 1555, column: 21, scope: !6127)
!6148 = !DILocation(line: 1551, column: 42, scope: !6149)
!6149 = !DILexicalBlockFile(scope: !6123, file: !898, discriminator: 2)
!6150 = !DILocation(line: 1551, column: 21, scope: !6149)
!6151 = distinct !{!6151, !6152}
!6152 = !DILocation(line: 1551, column: 21, scope: !6119)
!6153 = !DILocation(line: 1556, column: 17, scope: !6119)
!6154 = !DILocation(line: 1558, column: 27, scope: !5955)
!6155 = !DILocation(line: 1559, column: 27, scope: !5955)
!6156 = !DILocation(line: 1560, column: 13, scope: !5955)
!6157 = !DILocation(line: 1522, column: 40, scope: !6158)
!6158 = !DILexicalBlockFile(scope: !5951, file: !898, discriminator: 2)
!6159 = !DILocation(line: 1522, column: 13, scope: !6158)
!6160 = distinct !{!6160, !6161}
!6161 = !DILocation(line: 1522, column: 13, scope: !5926)
!6162 = !DILocation(line: 1561, column: 9, scope: !5926)
!6163 = !DILocation(line: 1564, column: 13, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !5796, file: !898, line: 1564, column: 13)
!6165 = !DILocation(line: 1564, column: 16, scope: !6164)
!6166 = !DILocation(line: 1564, column: 13, scope: !5796)
!6167 = !DILocation(line: 1565, column: 23, scope: !6164)
!6168 = !DILocation(line: 1565, column: 26, scope: !6164)
!6169 = !DILocation(line: 1565, column: 31, scope: !6164)
!6170 = !DILocation(line: 1565, column: 36, scope: !6164)
!6171 = !DILocation(line: 1565, column: 13, scope: !6164)
!6172 = !DILocation(line: 1566, column: 5, scope: !5796)
!6173 = !DILocation(line: 1491, column: 39, scope: !6174)
!6174 = !DILexicalBlockFile(scope: !5789, file: !898, discriminator: 2)
!6175 = !DILocation(line: 1491, column: 5, scope: !6174)
!6176 = distinct !{!6176, !6177}
!6177 = !DILocation(line: 1491, column: 5, scope: !5769)
!6178 = !DILocation(line: 1567, column: 1, scope: !5769)
!6179 = distinct !DISubprogram(name: "decode_part_stereo", scope: !898, file: !898, line: 1572, type: !5411, isLocal: true, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6180 = !DILocalVariable(name: "s", arg: 1, scope: !6179, file: !898, line: 1572, type: !1064)
!6181 = !DILocation(line: 1572, column: 47, scope: !6179)
!6182 = !DILocalVariable(name: "ch1", arg: 2, scope: !6179, file: !898, line: 1572, type: !1004)
!6183 = !DILocation(line: 1572, column: 54, scope: !6179)
!6184 = !DILocalVariable(name: "ch2", arg: 3, scope: !6179, file: !898, line: 1572, type: !1004)
!6185 = !DILocation(line: 1572, column: 63, scope: !6179)
!6186 = !DILocalVariable(name: "i", scope: !6179, file: !898, line: 1574, type: !1004)
!6187 = !DILocation(line: 1574, column: 9, scope: !6179)
!6188 = !DILocalVariable(name: "ch", scope: !6179, file: !898, line: 1574, type: !1004)
!6189 = !DILocation(line: 1574, column: 12, scope: !6179)
!6190 = !DILocalVariable(name: "sb", scope: !6179, file: !898, line: 1574, type: !1004)
!6191 = !DILocation(line: 1574, column: 16, scope: !6179)
!6192 = !DILocalVariable(name: "sf", scope: !6179, file: !898, line: 1574, type: !1004)
!6193 = !DILocation(line: 1574, column: 20, scope: !6179)
!6194 = !DILocation(line: 1576, column: 15, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6179, file: !898, line: 1576, column: 5)
!6196 = !DILocation(line: 1576, column: 13, scope: !6195)
!6197 = !DILocation(line: 1576, column: 10, scope: !6195)
!6198 = !DILocation(line: 1576, column: 20, scope: !6199)
!6199 = !DILexicalBlockFile(scope: !6200, file: !898, discriminator: 1)
!6200 = distinct !DILexicalBlock(scope: !6195, file: !898, line: 1576, column: 5)
!6201 = !DILocation(line: 1576, column: 26, scope: !6199)
!6202 = !DILocation(line: 1576, column: 23, scope: !6199)
!6203 = !DILocation(line: 1576, column: 5, scope: !6199)
!6204 = !DILocation(line: 1577, column: 19, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !898, line: 1577, column: 9)
!6206 = distinct !DILexicalBlock(scope: !6200, file: !898, line: 1576, column: 37)
!6207 = !DILocation(line: 1577, column: 22, scope: !6205)
!6208 = !DILocation(line: 1577, column: 17, scope: !6205)
!6209 = !DILocation(line: 1577, column: 14, scope: !6205)
!6210 = !DILocation(line: 1577, column: 40, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !6212, file: !898, discriminator: 1)
!6212 = distinct !DILexicalBlock(scope: !6205, file: !898, line: 1577, column: 9)
!6213 = !DILocation(line: 1577, column: 45, scope: !6211)
!6214 = !DILocation(line: 1577, column: 48, scope: !6211)
!6215 = !DILocation(line: 1577, column: 43, scope: !6211)
!6216 = !DILocation(line: 1577, column: 9, scope: !6211)
!6217 = !DILocalVariable(name: "pt_st", scope: !6218, file: !898, line: 1578, type: !1195)
!6218 = distinct !DILexicalBlock(scope: !6212, file: !898, line: 1577, column: 65)
!6219 = !DILocation(line: 1578, column: 22, scope: !6218)
!6220 = !DILocation(line: 1578, column: 50, scope: !6218)
!6221 = !DILocation(line: 1578, column: 55, scope: !6218)
!6222 = !DILocation(line: 1578, column: 58, scope: !6218)
!6223 = !DILocation(line: 1578, column: 53, scope: !6218)
!6224 = !DILocation(line: 1578, column: 76, scope: !6218)
!6225 = !DILocation(line: 1578, column: 30, scope: !6218)
!6226 = !DILocation(line: 1578, column: 45, scope: !6218)
!6227 = !DILocation(line: 1578, column: 33, scope: !6218)
!6228 = !DILocalVariable(name: "samples", scope: !6218, file: !898, line: 1579, type: !1006)
!6229 = !DILocation(line: 1579, column: 20, scope: !6218)
!6230 = !DILocation(line: 1579, column: 50, scope: !6218)
!6231 = !DILocation(line: 1579, column: 30, scope: !6218)
!6232 = !DILocation(line: 1579, column: 46, scope: !6218)
!6233 = !DILocation(line: 1579, column: 33, scope: !6218)
!6234 = !DILocation(line: 1581, column: 28, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6218, file: !898, line: 1581, column: 17)
!6236 = !DILocation(line: 1581, column: 17, scope: !6235)
!6237 = !DILocation(line: 1581, column: 20, scope: !6235)
!6238 = !DILocation(line: 1581, column: 42, scope: !6235)
!6239 = !DILocation(line: 1581, column: 39, scope: !6235)
!6240 = !DILocation(line: 1581, column: 33, scope: !6235)
!6241 = !DILocation(line: 1581, column: 17, scope: !6218)
!6242 = !DILocation(line: 1582, column: 17, scope: !6235)
!6243 = !DILocation(line: 1584, column: 21, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6218, file: !898, line: 1584, column: 13)
!6245 = !DILocation(line: 1584, column: 18, scope: !6244)
!6246 = !DILocation(line: 1584, column: 26, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6248, file: !898, discriminator: 1)
!6248 = distinct !DILexicalBlock(scope: !6244, file: !898, line: 1584, column: 13)
!6249 = !DILocation(line: 1584, column: 29, scope: !6247)
!6250 = !DILocation(line: 1584, column: 13, scope: !6247)
!6251 = !DILocalVariable(name: "prev", scope: !6252, file: !898, line: 1585, type: !1007)
!6252 = distinct !DILexicalBlock(scope: !6248, file: !898, line: 1584, column: 56)
!6253 = !DILocation(line: 1585, column: 23, scope: !6252)
!6254 = !DILocation(line: 1585, column: 52, scope: !6252)
!6255 = !DILocation(line: 1585, column: 55, scope: !6252)
!6256 = !DILocation(line: 1585, column: 46, scope: !6252)
!6257 = !DILocation(line: 1585, column: 30, scope: !6252)
!6258 = !DILocalVariable(name: "next", scope: !6252, file: !898, line: 1586, type: !1007)
!6259 = !DILocation(line: 1586, column: 23, scope: !6252)
!6260 = !DILocation(line: 1586, column: 52, scope: !6252)
!6261 = !DILocation(line: 1586, column: 46, scope: !6252)
!6262 = !DILocation(line: 1586, column: 30, scope: !6252)
!6263 = !DILocation(line: 1588, column: 24, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6252, file: !898, line: 1588, column: 17)
!6265 = !DILocation(line: 1588, column: 22, scope: !6264)
!6266 = !DILocation(line: 1588, column: 29, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6268, file: !898, discriminator: 1)
!6268 = distinct !DILexicalBlock(scope: !6264, file: !898, line: 1588, column: 17)
!6269 = !DILocation(line: 1588, column: 31, scope: !6267)
!6270 = !DILocation(line: 1588, column: 17, scope: !6267)
!6271 = !DILocation(line: 1589, column: 41, scope: !6268)
!6272 = !DILocation(line: 1589, column: 39, scope: !6268)
!6273 = !DILocation(line: 1589, column: 35, scope: !6268)
!6274 = !DILocation(line: 1589, column: 46, scope: !6268)
!6275 = !DILocation(line: 1589, column: 44, scope: !6268)
!6276 = !DILocation(line: 1589, column: 53, scope: !6268)
!6277 = !DILocation(line: 1589, column: 57, scope: !6268)
!6278 = !DILocation(line: 1589, column: 55, scope: !6268)
!6279 = !DILocation(line: 1589, column: 51, scope: !6268)
!6280 = !DILocation(line: 1589, column: 29, scope: !6268)
!6281 = !DILocation(line: 1589, column: 21, scope: !6268)
!6282 = !DILocation(line: 1589, column: 32, scope: !6268)
!6283 = !DILocation(line: 1588, column: 38, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6268, file: !898, discriminator: 2)
!6285 = !DILocation(line: 1588, column: 17, scope: !6284)
!6286 = distinct !{!6286, !6287}
!6287 = !DILocation(line: 1588, column: 17, scope: !6252)
!6288 = !DILocation(line: 1590, column: 13, scope: !6252)
!6289 = !DILocation(line: 1584, column: 37, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !6248, file: !898, discriminator: 2)
!6291 = !DILocation(line: 1584, column: 49, scope: !6290)
!6292 = !DILocation(line: 1584, column: 13, scope: !6290)
!6293 = distinct !{!6293, !6294}
!6294 = !DILocation(line: 1584, column: 13, scope: !6218)
!6295 = !DILocation(line: 1591, column: 9, scope: !6218)
!6296 = !DILocation(line: 1577, column: 61, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !6212, file: !898, discriminator: 2)
!6298 = !DILocation(line: 1577, column: 9, scope: !6297)
!6299 = distinct !{!6299, !6300}
!6300 = !DILocation(line: 1577, column: 9, scope: !6206)
!6301 = !DILocation(line: 1592, column: 5, scope: !6206)
!6302 = !DILocation(line: 1576, column: 33, scope: !6303)
!6303 = !DILexicalBlockFile(scope: !6200, file: !898, discriminator: 2)
!6304 = !DILocation(line: 1576, column: 5, scope: !6303)
!6305 = distinct !{!6305, !6306}
!6306 = !DILocation(line: 1576, column: 5, scope: !6179)
!6307 = !DILocation(line: 1593, column: 1, scope: !6179)
!6308 = distinct !DISubprogram(name: "transform_channel", scope: !898, file: !898, line: 1676, type: !6309, isLocal: true, isDefinition: true, scopeLine: 1677, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{null, !1064, !1004, !1006}
!6311 = !DILocalVariable(name: "s", arg: 1, scope: !6308, file: !898, line: 1676, type: !1064)
!6312 = !DILocation(line: 1676, column: 46, scope: !6308)
!6313 = !DILocalVariable(name: "ch", arg: 2, scope: !6308, file: !898, line: 1676, type: !1004)
!6314 = !DILocation(line: 1676, column: 53, scope: !6308)
!6315 = !DILocalVariable(name: "output", arg: 3, scope: !6308, file: !898, line: 1676, type: !1006)
!6316 = !DILocation(line: 1676, column: 64, scope: !6308)
!6317 = !DILocalVariable(name: "la_values", scope: !6308, file: !898, line: 1678, type: !6318)
!6318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 4096, align: 32, elements: !6319)
!6319 = !{!1821, !1228}
!6320 = !DILocation(line: 1678, column: 42, scope: !6308)
!6321 = !DILocalVariable(name: "values", scope: !6308, file: !898, line: 1678, type: !2086)
!6322 = !DILocation(line: 1678, column: 71, scope: !6308)
!6323 = !DILocation(line: 1678, column: 85, scope: !6308)
!6324 = !DILocalVariable(name: "la_result", scope: !6308, file: !898, line: 1679, type: !6325)
!6325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1007, size: 8192, align: 32, elements: !6326)
!6326 = !{!1838, !1228}
!6327 = !DILocation(line: 1679, column: 42, scope: !6308)
!6328 = !DILocalVariable(name: "result", scope: !6308, file: !898, line: 1679, type: !2086)
!6329 = !DILocation(line: 1679, column: 74, scope: !6308)
!6330 = !DILocation(line: 1679, column: 88, scope: !6308)
!6331 = !DILocalVariable(name: "sf", scope: !6308, file: !898, line: 1680, type: !1004)
!6332 = !DILocation(line: 1680, column: 9, scope: !6308)
!6333 = !DILocalVariable(name: "sb", scope: !6308, file: !898, line: 1680, type: !1004)
!6334 = !DILocation(line: 1680, column: 13, scope: !6308)
!6335 = !DILocalVariable(name: "nsubbands", scope: !6308, file: !898, line: 1680, type: !1004)
!6336 = !DILocation(line: 1680, column: 17, scope: !6308)
!6337 = !DILocation(line: 1680, column: 29, scope: !6308)
!6338 = !DILocation(line: 1680, column: 32, scope: !6308)
!6339 = !DILocalVariable(name: "noutsubbands", scope: !6308, file: !898, line: 1680, type: !1004)
!6340 = !DILocation(line: 1680, column: 43, scope: !6308)
!6341 = !DILocation(line: 1680, column: 63, scope: !6308)
!6342 = !DILocation(line: 1680, column: 66, scope: !6308)
!6343 = !DILocation(line: 1680, column: 60, scope: !6308)
!6344 = !DILocation(line: 1683, column: 9, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6308, file: !898, line: 1683, column: 9)
!6346 = !DILocation(line: 1683, column: 21, scope: !6345)
!6347 = !DILocation(line: 1683, column: 19, scope: !6345)
!6348 = !DILocation(line: 1683, column: 9, scope: !6308)
!6349 = !DILocation(line: 1684, column: 23, scope: !6345)
!6350 = !DILocation(line: 1684, column: 16, scope: !6345)
!6351 = !DILocation(line: 1684, column: 9, scope: !6345)
!6352 = !DILocation(line: 1684, column: 39, scope: !6345)
!6353 = !DILocation(line: 1684, column: 54, scope: !6345)
!6354 = !DILocation(line: 1684, column: 52, scope: !6345)
!6355 = !DILocation(line: 1684, column: 38, scope: !6345)
!6356 = !DILocation(line: 1684, column: 65, scope: !6345)
!6357 = !DILocation(line: 1686, column: 13, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6308, file: !898, line: 1686, column: 5)
!6359 = !DILocation(line: 1686, column: 10, scope: !6358)
!6360 = !DILocation(line: 1686, column: 18, scope: !6361)
!6361 = !DILexicalBlockFile(scope: !6362, file: !898, discriminator: 1)
!6362 = distinct !DILexicalBlock(scope: !6358, file: !898, line: 1686, column: 5)
!6363 = !DILocation(line: 1686, column: 21, scope: !6361)
!6364 = !DILocation(line: 1686, column: 5, scope: !6361)
!6365 = !DILocation(line: 1688, column: 9, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6362, file: !898, line: 1686, column: 38)
!6367 = !DILocation(line: 1688, column: 12, scope: !6366)
!6368 = !DILocation(line: 1688, column: 20, scope: !6366)
!6369 = !DILocation(line: 1688, column: 29, scope: !6366)
!6370 = !DILocation(line: 1688, column: 53, scope: !6366)
!6371 = !DILocation(line: 1688, column: 37, scope: !6366)
!6372 = !DILocation(line: 1688, column: 40, scope: !6366)
!6373 = !DILocation(line: 1689, column: 48, scope: !6366)
!6374 = !DILocation(line: 1689, column: 51, scope: !6366)
!6375 = !DILocation(line: 1689, column: 56, scope: !6366)
!6376 = !DILocation(line: 1691, column: 25, scope: !6366)
!6377 = !DILocation(line: 1691, column: 28, scope: !6366)
!6378 = !DILocation(line: 1691, column: 32, scope: !6366)
!6379 = !DILocation(line: 1691, column: 43, scope: !6366)
!6380 = !DILocation(line: 1691, column: 9, scope: !6366)
!6381 = !DILocation(line: 1693, column: 9, scope: !6366)
!6382 = !DILocation(line: 1693, column: 12, scope: !6366)
!6383 = !DILocation(line: 1693, column: 18, scope: !6366)
!6384 = !DILocation(line: 1693, column: 30, scope: !6366)
!6385 = !DILocation(line: 1693, column: 33, scope: !6366)
!6386 = !DILocation(line: 1693, column: 40, scope: !6366)
!6387 = !DILocation(line: 1693, column: 51, scope: !6366)
!6388 = !DILocation(line: 1696, column: 9, scope: !6366)
!6389 = !DILocation(line: 1696, column: 12, scope: !6366)
!6390 = !DILocation(line: 1696, column: 18, scope: !6366)
!6391 = !DILocation(line: 1696, column: 34, scope: !6366)
!6392 = !DILocation(line: 1696, column: 42, scope: !6366)
!6393 = !DILocation(line: 1696, column: 53, scope: !6366)
!6394 = !DILocation(line: 1696, column: 56, scope: !6366)
!6395 = !DILocation(line: 1697, column: 45, scope: !6366)
!6396 = !DILocation(line: 1697, column: 34, scope: !6366)
!6397 = !DILocation(line: 1697, column: 37, scope: !6366)
!6398 = !DILocation(line: 1697, column: 50, scope: !6366)
!6399 = !DILocation(line: 1697, column: 63, scope: !6366)
!6400 = !DILocation(line: 1698, column: 9, scope: !6366)
!6401 = !DILocation(line: 1698, column: 12, scope: !6366)
!6402 = !DILocation(line: 1698, column: 18, scope: !6366)
!6403 = !DILocation(line: 1698, column: 49, scope: !6366)
!6404 = !DILocation(line: 1698, column: 38, scope: !6366)
!6405 = !DILocation(line: 1698, column: 41, scope: !6366)
!6406 = !DILocation(line: 1698, column: 61, scope: !6366)
!6407 = !DILocation(line: 1698, column: 54, scope: !6366)
!6408 = !DILocation(line: 1699, column: 38, scope: !6366)
!6409 = !DILocation(line: 1699, column: 41, scope: !6366)
!6410 = !DILocation(line: 1699, column: 49, scope: !6366)
!6411 = !DILocation(line: 1699, column: 62, scope: !6366)
!6412 = !DILocation(line: 1700, column: 19, scope: !6366)
!6413 = !DILocation(line: 1700, column: 32, scope: !6366)
!6414 = !DILocation(line: 1700, column: 16, scope: !6366)
!6415 = !DILocation(line: 1701, column: 5, scope: !6366)
!6416 = !DILocation(line: 1686, column: 34, scope: !6417)
!6417 = !DILexicalBlockFile(scope: !6362, file: !898, discriminator: 2)
!6418 = !DILocation(line: 1686, column: 5, scope: !6417)
!6419 = distinct !{!6419, !6420}
!6420 = !DILocation(line: 1686, column: 5, scope: !6308)
!6421 = !DILocation(line: 1704, column: 13, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6308, file: !898, line: 1704, column: 5)
!6423 = !DILocation(line: 1704, column: 10, scope: !6422)
!6424 = !DILocation(line: 1704, column: 18, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6426, file: !898, discriminator: 1)
!6426 = distinct !DILexicalBlock(scope: !6422, file: !898, line: 1704, column: 5)
!6427 = !DILocation(line: 1704, column: 23, scope: !6425)
!6428 = !DILocation(line: 1704, column: 21, scope: !6425)
!6429 = !DILocation(line: 1704, column: 5, scope: !6425)
!6430 = !DILocalVariable(name: "samples", scope: !6431, file: !898, line: 1705, type: !1006)
!6431 = distinct !DILexicalBlock(scope: !6426, file: !898, line: 1704, column: 40)
!6432 = !DILocation(line: 1705, column: 16, scope: !6431)
!6433 = !DILocation(line: 1705, column: 46, scope: !6431)
!6434 = !DILocation(line: 1705, column: 26, scope: !6431)
!6435 = !DILocation(line: 1705, column: 42, scope: !6431)
!6436 = !DILocation(line: 1705, column: 29, scope: !6431)
!6437 = !DILocation(line: 1705, column: 50, scope: !6431)
!6438 = !DILocation(line: 1706, column: 16, scope: !6431)
!6439 = !DILocation(line: 1706, column: 9, scope: !6431)
!6440 = !DILocation(line: 1706, column: 25, scope: !6431)
!6441 = !DILocation(line: 1706, column: 33, scope: !6431)
!6442 = !DILocation(line: 1707, column: 5, scope: !6431)
!6443 = !DILocation(line: 1704, column: 36, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !6426, file: !898, discriminator: 2)
!6445 = !DILocation(line: 1704, column: 5, scope: !6444)
!6446 = distinct !{!6446, !6447}
!6447 = !DILocation(line: 1704, column: 5, scope: !6308)
!6448 = !DILocation(line: 1708, column: 1, scope: !6308)
!6449 = distinct !DISubprogram(name: "ff_dca_lbr_flush", scope: !898, file: !898, line: 1770, type: !6450, isLocal: false, isDefinition: true, scopeLine: 1771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !1064}
!6452 = !DILocalVariable(name: "s", arg: 1, scope: !6449, file: !898, line: 1770, type: !1064)
!6453 = !DILocation(line: 1770, column: 60, scope: !6449)
!6454 = !DILocalVariable(name: "ch", scope: !6449, file: !898, line: 1772, type: !1004)
!6455 = !DILocation(line: 1772, column: 9, scope: !6449)
!6456 = !DILocalVariable(name: "sb", scope: !6449, file: !898, line: 1772, type: !1004)
!6457 = !DILocation(line: 1772, column: 13, scope: !6449)
!6458 = !DILocation(line: 1774, column: 10, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6449, file: !898, line: 1774, column: 9)
!6460 = !DILocation(line: 1774, column: 13, scope: !6459)
!6461 = !DILocation(line: 1774, column: 9, scope: !6449)
!6462 = !DILocation(line: 1775, column: 9, scope: !6459)
!6463 = !DILocation(line: 1778, column: 12, scope: !6449)
!6464 = !DILocation(line: 1778, column: 15, scope: !6449)
!6465 = !DILocation(line: 1778, column: 5, scope: !6449)
!6466 = !DILocation(line: 1779, column: 12, scope: !6449)
!6467 = !DILocation(line: 1779, column: 15, scope: !6449)
!6468 = !DILocation(line: 1779, column: 5, scope: !6449)
!6469 = !DILocation(line: 1780, column: 12, scope: !6449)
!6470 = !DILocation(line: 1780, column: 15, scope: !6449)
!6471 = !DILocation(line: 1780, column: 5, scope: !6449)
!6472 = !DILocation(line: 1781, column: 12, scope: !6449)
!6473 = !DILocation(line: 1781, column: 15, scope: !6449)
!6474 = !DILocation(line: 1781, column: 5, scope: !6449)
!6475 = !DILocation(line: 1782, column: 12, scope: !6449)
!6476 = !DILocation(line: 1782, column: 15, scope: !6449)
!6477 = !DILocation(line: 1782, column: 5, scope: !6449)
!6478 = !DILocation(line: 1783, column: 5, scope: !6449)
!6479 = !DILocation(line: 1783, column: 8, scope: !6449)
!6480 = !DILocation(line: 1783, column: 17, scope: !6449)
!6481 = !DILocation(line: 1784, column: 5, scope: !6449)
!6482 = !DILocation(line: 1784, column: 8, scope: !6449)
!6483 = !DILocation(line: 1784, column: 15, scope: !6449)
!6484 = !DILocation(line: 1786, column: 13, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6449, file: !898, line: 1786, column: 5)
!6486 = !DILocation(line: 1786, column: 10, scope: !6485)
!6487 = !DILocation(line: 1786, column: 18, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6489, file: !898, discriminator: 1)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !898, line: 1786, column: 5)
!6490 = !DILocation(line: 1786, column: 23, scope: !6488)
!6491 = !DILocation(line: 1786, column: 26, scope: !6488)
!6492 = !DILocation(line: 1786, column: 21, scope: !6488)
!6493 = !DILocation(line: 1786, column: 5, scope: !6488)
!6494 = !DILocation(line: 1787, column: 17, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !898, line: 1787, column: 9)
!6496 = distinct !DILexicalBlock(scope: !6489, file: !898, line: 1786, column: 43)
!6497 = !DILocation(line: 1787, column: 14, scope: !6495)
!6498 = !DILocation(line: 1787, column: 22, scope: !6499)
!6499 = !DILexicalBlockFile(scope: !6500, file: !898, discriminator: 1)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !898, line: 1787, column: 9)
!6501 = !DILocation(line: 1787, column: 27, scope: !6499)
!6502 = !DILocation(line: 1787, column: 30, scope: !6499)
!6503 = !DILocation(line: 1787, column: 25, scope: !6499)
!6504 = !DILocation(line: 1787, column: 9, scope: !6499)
!6505 = !DILocalVariable(name: "samples", scope: !6506, file: !898, line: 1788, type: !1006)
!6506 = distinct !DILexicalBlock(scope: !6500, file: !898, line: 1787, column: 47)
!6507 = !DILocation(line: 1788, column: 20, scope: !6506)
!6508 = !DILocation(line: 1788, column: 50, scope: !6506)
!6509 = !DILocation(line: 1788, column: 30, scope: !6506)
!6510 = !DILocation(line: 1788, column: 46, scope: !6506)
!6511 = !DILocation(line: 1788, column: 33, scope: !6506)
!6512 = !DILocation(line: 1788, column: 54, scope: !6506)
!6513 = !DILocation(line: 1789, column: 20, scope: !6506)
!6514 = !DILocation(line: 1789, column: 13, scope: !6506)
!6515 = !DILocation(line: 1790, column: 9, scope: !6506)
!6516 = !DILocation(line: 1787, column: 43, scope: !6517)
!6517 = !DILexicalBlockFile(scope: !6500, file: !898, discriminator: 2)
!6518 = !DILocation(line: 1787, column: 9, scope: !6517)
!6519 = distinct !{!6519, !6520}
!6520 = !DILocation(line: 1787, column: 9, scope: !6496)
!6521 = !DILocation(line: 1791, column: 5, scope: !6496)
!6522 = !DILocation(line: 1786, column: 39, scope: !6523)
!6523 = !DILexicalBlockFile(scope: !6489, file: !898, discriminator: 2)
!6524 = !DILocation(line: 1786, column: 5, scope: !6523)
!6525 = distinct !{!6525, !6526}
!6526 = !DILocation(line: 1786, column: 5, scope: !6449)
!6527 = !DILocation(line: 1792, column: 1, scope: !6449)
!6528 = distinct !DISubprogram(name: "ff_dca_lbr_init", scope: !898, file: !898, line: 1794, type: !6529, isLocal: false, isDefinition: true, scopeLine: 1795, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!1004, !1064}
!6531 = !DILocalVariable(name: "s", arg: 1, scope: !6528, file: !898, line: 1794, type: !1064)
!6532 = !DILocation(line: 1794, column: 58, scope: !6528)
!6533 = !DILocation(line: 1796, column: 5, scope: !6528)
!6534 = !DILocation(line: 1798, column: 21, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6528, file: !898, line: 1798, column: 9)
!6536 = !DILocation(line: 1798, column: 11, scope: !6535)
!6537 = !DILocation(line: 1798, column: 14, scope: !6535)
!6538 = !DILocation(line: 1798, column: 19, scope: !6535)
!6539 = !DILocation(line: 1798, column: 9, scope: !6528)
!6540 = !DILocation(line: 1799, column: 9, scope: !6535)
!6541 = !DILocation(line: 1801, column: 5, scope: !6528)
!6542 = !DILocation(line: 1801, column: 8, scope: !6528)
!6543 = !DILocation(line: 1801, column: 17, scope: !6528)
!6544 = !DILocation(line: 1802, column: 5, scope: !6528)
!6545 = !DILocation(line: 1803, column: 1, scope: !6528)
!6546 = !DILocalVariable(name: "i", scope: !1054, file: !898, line: 129, type: !1004)
!6547 = !DILocation(line: 129, column: 9, scope: !1054)
!6548 = !DILocation(line: 131, column: 9, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !1054, file: !898, line: 131, column: 9)
!6550 = !DILocation(line: 131, column: 9, scope: !1054)
!6551 = !DILocation(line: 132, column: 9, scope: !6549)
!6552 = !DILocation(line: 134, column: 12, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !1054, file: !898, line: 134, column: 5)
!6554 = !DILocation(line: 134, column: 10, scope: !6553)
!6555 = !DILocation(line: 134, column: 17, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !6557, file: !898, discriminator: 1)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !898, line: 134, column: 5)
!6558 = !DILocation(line: 134, column: 19, scope: !6556)
!6559 = !DILocation(line: 134, column: 5, scope: !6556)
!6560 = !DILocation(line: 135, column: 32, scope: !6557)
!6561 = !DILocation(line: 135, column: 30, scope: !6557)
!6562 = !DILocation(line: 135, column: 34, scope: !6557)
!6563 = !DILocation(line: 135, column: 22, scope: !6557)
!6564 = !DILocation(line: 135, column: 17, scope: !6557)
!6565 = !DILocation(line: 135, column: 9, scope: !6557)
!6566 = !DILocation(line: 135, column: 20, scope: !6557)
!6567 = !DILocation(line: 134, column: 27, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !6557, file: !898, discriminator: 2)
!6569 = !DILocation(line: 134, column: 5, scope: !6568)
!6570 = distinct !{!6570, !6571}
!6571 = !DILocation(line: 134, column: 5, scope: !1054)
!6572 = !DILocation(line: 137, column: 12, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !1054, file: !898, line: 137, column: 5)
!6574 = !DILocation(line: 137, column: 10, scope: !6573)
!6575 = !DILocation(line: 137, column: 17, scope: !6576)
!6576 = !DILexicalBlockFile(scope: !6577, file: !898, discriminator: 1)
!6577 = distinct !DILexicalBlock(scope: !6573, file: !898, line: 137, column: 5)
!6578 = !DILocation(line: 137, column: 19, scope: !6576)
!6579 = !DILocation(line: 137, column: 5, scope: !6576)
!6580 = !DILocation(line: 138, column: 27, scope: !6577)
!6581 = !DILocation(line: 138, column: 29, scope: !6577)
!6582 = !DILocation(line: 138, column: 26, scope: !6577)
!6583 = !DILocation(line: 138, column: 45, scope: !6577)
!6584 = !DILocation(line: 138, column: 47, scope: !6577)
!6585 = !DILocation(line: 138, column: 44, scope: !6577)
!6586 = !DILocation(line: 138, column: 43, scope: !6577)
!6587 = !DILocation(line: 138, column: 41, scope: !6577)
!6588 = !DILocation(line: 138, column: 34, scope: !6577)
!6589 = !DILocation(line: 138, column: 22, scope: !6577)
!6590 = !DILocation(line: 138, column: 17, scope: !6577)
!6591 = !DILocation(line: 138, column: 9, scope: !6577)
!6592 = !DILocation(line: 138, column: 20, scope: !6577)
!6593 = !DILocation(line: 137, column: 26, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6577, file: !898, discriminator: 2)
!6595 = !DILocation(line: 137, column: 5, scope: !6594)
!6596 = distinct !{!6596, !6597}
!6597 = !DILocation(line: 137, column: 5, scope: !1054)
!6598 = !DILocation(line: 140, column: 17, scope: !1054)
!6599 = !DILocation(line: 141, column: 1, scope: !1054)
!6600 = !DILocation(line: 141, column: 1, scope: !6601)
!6601 = !DILexicalBlockFile(scope: !1054, file: !898, discriminator: 1)
!6602 = distinct !DISubprogram(name: "ff_dca_lbr_close", scope: !898, file: !898, line: 1805, type: !6450, isLocal: false, isDefinition: true, scopeLine: 1806, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6603 = !DILocalVariable(name: "s", arg: 1, scope: !6602, file: !898, line: 1805, type: !1064)
!6604 = !DILocation(line: 1805, column: 60, scope: !6602)
!6605 = !DILocation(line: 1807, column: 5, scope: !6602)
!6606 = !DILocation(line: 1807, column: 8, scope: !6602)
!6607 = !DILocation(line: 1807, column: 20, scope: !6602)
!6608 = !DILocation(line: 1809, column: 15, scope: !6602)
!6609 = !DILocation(line: 1809, column: 18, scope: !6602)
!6610 = !DILocation(line: 1809, column: 14, scope: !6602)
!6611 = !DILocation(line: 1809, column: 5, scope: !6602)
!6612 = !DILocation(line: 1810, column: 5, scope: !6602)
!6613 = !DILocation(line: 1810, column: 8, scope: !6602)
!6614 = !DILocation(line: 1810, column: 16, scope: !6602)
!6615 = !DILocation(line: 1812, column: 15, scope: !6602)
!6616 = !DILocation(line: 1812, column: 18, scope: !6602)
!6617 = !DILocation(line: 1812, column: 14, scope: !6602)
!6618 = !DILocation(line: 1812, column: 5, scope: !6602)
!6619 = !DILocation(line: 1813, column: 18, scope: !6602)
!6620 = !DILocation(line: 1813, column: 21, scope: !6602)
!6621 = !DILocation(line: 1813, column: 5, scope: !6602)
!6622 = !DILocation(line: 1814, column: 1, scope: !6602)
!6623 = distinct !DISubprogram(name: "ff_dca_count_chs_for_mask", scope: !955, file: !955, line: 159, type: !6624, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!1004, !1005}
!6626 = !DILocalVariable(name: "x", arg: 1, scope: !6627, file: !6628, line: 342, type: !1015)
!6627 = distinct !DISubprogram(name: "av_popcount_c", scope: !6628, file: !6628, line: 342, type: !6629, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6628 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!1004, !1015}
!6631 = !DILocation(line: 342, column: 96, scope: !6627, inlinedAt: !6632)
!6632 = distinct !DILocation(line: 161, column: 12, scope: !6623)
!6633 = !DILocalVariable(name: "mask", arg: 1, scope: !6623, file: !955, line: 159, type: !1005)
!6634 = !DILocation(line: 159, column: 58, scope: !6623)
!6635 = !DILocation(line: 161, column: 27, scope: !6623)
!6636 = !DILocation(line: 161, column: 32, scope: !6623)
!6637 = !DILocation(line: 161, column: 46, scope: !6623)
!6638 = !DILocation(line: 161, column: 51, scope: !6623)
!6639 = !DILocation(line: 161, column: 61, scope: !6623)
!6640 = !DILocation(line: 161, column: 42, scope: !6623)
!6641 = !DILocation(line: 161, column: 12, scope: !6623)
!6642 = !DILocation(line: 344, column: 11, scope: !6627, inlinedAt: !6632)
!6643 = !DILocation(line: 344, column: 13, scope: !6627, inlinedAt: !6632)
!6644 = !DILocation(line: 344, column: 19, scope: !6627, inlinedAt: !6632)
!6645 = !DILocation(line: 344, column: 7, scope: !6627, inlinedAt: !6632)
!6646 = !DILocation(line: 345, column: 10, scope: !6627, inlinedAt: !6632)
!6647 = !DILocation(line: 345, column: 12, scope: !6627, inlinedAt: !6632)
!6648 = !DILocation(line: 345, column: 30, scope: !6627, inlinedAt: !6632)
!6649 = !DILocation(line: 345, column: 32, scope: !6627, inlinedAt: !6632)
!6650 = !DILocation(line: 345, column: 38, scope: !6627, inlinedAt: !6632)
!6651 = !DILocation(line: 345, column: 26, scope: !6627, inlinedAt: !6632)
!6652 = !DILocation(line: 345, column: 7, scope: !6627, inlinedAt: !6632)
!6653 = !DILocation(line: 346, column: 10, scope: !6627, inlinedAt: !6632)
!6654 = !DILocation(line: 346, column: 15, scope: !6627, inlinedAt: !6632)
!6655 = !DILocation(line: 346, column: 17, scope: !6627, inlinedAt: !6632)
!6656 = !DILocation(line: 346, column: 12, scope: !6627, inlinedAt: !6632)
!6657 = !DILocation(line: 346, column: 24, scope: !6627, inlinedAt: !6632)
!6658 = !DILocation(line: 346, column: 7, scope: !6627, inlinedAt: !6632)
!6659 = !DILocation(line: 347, column: 10, scope: !6627, inlinedAt: !6632)
!6660 = !DILocation(line: 347, column: 12, scope: !6627, inlinedAt: !6632)
!6661 = !DILocation(line: 347, column: 7, scope: !6627, inlinedAt: !6632)
!6662 = !DILocation(line: 348, column: 13, scope: !6627, inlinedAt: !6632)
!6663 = !DILocation(line: 348, column: 18, scope: !6627, inlinedAt: !6632)
!6664 = !DILocation(line: 348, column: 20, scope: !6627, inlinedAt: !6632)
!6665 = !DILocation(line: 348, column: 15, scope: !6627, inlinedAt: !6632)
!6666 = !DILocation(line: 348, column: 28, scope: !6627, inlinedAt: !6632)
!6667 = !DILocation(line: 161, column: 5, scope: !6623)
!6668 = distinct !DISubprogram(name: "init_sample_rate", scope: !898, file: !898, line: 931, type: !6529, isLocal: true, isDefinition: true, scopeLine: 932, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6669 = !DILocalVariable(name: "s", arg: 1, scope: !6668, file: !898, line: 931, type: !1064)
!6670 = !DILocation(line: 931, column: 44, scope: !6668)
!6671 = !DILocalVariable(name: "scale", scope: !6668, file: !898, line: 933, type: !1964)
!6672 = !DILocation(line: 933, column: 12, scope: !6668)
!6673 = !DILocation(line: 933, column: 56, scope: !6668)
!6674 = !DILocation(line: 933, column: 59, scope: !6668)
!6675 = !DILocation(line: 933, column: 54, scope: !6668)
!6676 = !DILocation(line: 933, column: 48, scope: !6668)
!6677 = !DILocation(line: 933, column: 46, scope: !6668)
!6678 = !DILocation(line: 933, column: 41, scope: !6668)
!6679 = !DILocation(line: 933, column: 39, scope: !6668)
!6680 = !DILocalVariable(name: "i", scope: !6668, file: !898, line: 934, type: !1004)
!6681 = !DILocation(line: 934, column: 9, scope: !6668)
!6682 = !DILocalVariable(name: "br_per_ch", scope: !6668, file: !898, line: 934, type: !1004)
!6683 = !DILocation(line: 934, column: 12, scope: !6668)
!6684 = !DILocation(line: 934, column: 24, scope: !6668)
!6685 = !DILocation(line: 934, column: 27, scope: !6668)
!6686 = !DILocation(line: 934, column: 45, scope: !6668)
!6687 = !DILocation(line: 934, column: 48, scope: !6668)
!6688 = !DILocation(line: 934, column: 43, scope: !6668)
!6689 = !DILocation(line: 936, column: 18, scope: !6668)
!6690 = !DILocation(line: 936, column: 21, scope: !6668)
!6691 = !DILocation(line: 936, column: 5, scope: !6668)
!6692 = !DILocation(line: 938, column: 23, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6668, file: !898, line: 938, column: 9)
!6694 = !DILocation(line: 938, column: 26, scope: !6693)
!6695 = !DILocation(line: 938, column: 33, scope: !6693)
!6696 = !DILocation(line: 938, column: 36, scope: !6693)
!6697 = !DILocation(line: 938, column: 47, scope: !6693)
!6698 = !DILocation(line: 938, column: 55, scope: !6693)
!6699 = !DILocation(line: 938, column: 9, scope: !6693)
!6700 = !DILocation(line: 938, column: 62, scope: !6693)
!6701 = !DILocation(line: 938, column: 9, scope: !6668)
!6702 = !DILocation(line: 939, column: 9, scope: !6693)
!6703 = !DILocation(line: 941, column: 12, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6668, file: !898, line: 941, column: 5)
!6705 = !DILocation(line: 941, column: 10, scope: !6704)
!6706 = !DILocation(line: 941, column: 17, scope: !6707)
!6707 = !DILexicalBlockFile(scope: !6708, file: !898, discriminator: 1)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !898, line: 941, column: 5)
!6709 = !DILocation(line: 941, column: 27, scope: !6707)
!6710 = !DILocation(line: 941, column: 30, scope: !6707)
!6711 = !DILocation(line: 941, column: 24, scope: !6707)
!6712 = !DILocation(line: 941, column: 19, scope: !6707)
!6713 = !DILocation(line: 941, column: 5, scope: !6707)
!6714 = !DILocation(line: 942, column: 43, scope: !6708)
!6715 = !DILocation(line: 942, column: 53, scope: !6708)
!6716 = !DILocation(line: 942, column: 56, scope: !6708)
!6717 = !DILocation(line: 942, column: 51, scope: !6708)
!6718 = !DILocation(line: 942, column: 45, scope: !6708)
!6719 = !DILocation(line: 942, column: 24, scope: !6708)
!6720 = !DILocation(line: 942, column: 19, scope: !6708)
!6721 = !DILocation(line: 942, column: 9, scope: !6708)
!6722 = !DILocation(line: 942, column: 12, scope: !6708)
!6723 = !DILocation(line: 942, column: 22, scope: !6708)
!6724 = !DILocation(line: 941, column: 43, scope: !6725)
!6725 = !DILexicalBlockFile(scope: !6708, file: !898, discriminator: 2)
!6726 = !DILocation(line: 941, column: 5, scope: !6725)
!6727 = distinct !{!6727, !6728}
!6728 = !DILocation(line: 941, column: 5, scope: !6668)
!6729 = !DILocation(line: 944, column: 9, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6668, file: !898, line: 944, column: 9)
!6731 = !DILocation(line: 944, column: 19, scope: !6730)
!6732 = !DILocation(line: 944, column: 9, scope: !6668)
!6733 = !DILocation(line: 945, column: 15, scope: !6730)
!6734 = !DILocation(line: 945, column: 9, scope: !6730)
!6735 = !DILocation(line: 946, column: 14, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6730, file: !898, line: 946, column: 14)
!6737 = !DILocation(line: 946, column: 24, scope: !6736)
!6738 = !DILocation(line: 946, column: 14, scope: !6730)
!6739 = !DILocation(line: 947, column: 18, scope: !6736)
!6740 = !DILocation(line: 947, column: 28, scope: !6736)
!6741 = !DILocation(line: 947, column: 17, scope: !6736)
!6742 = !DILocation(line: 947, column: 37, scope: !6736)
!6743 = !DILocation(line: 947, column: 54, scope: !6736)
!6744 = !DILocation(line: 947, column: 15, scope: !6736)
!6745 = !DILocation(line: 947, column: 9, scope: !6736)
!6746 = !DILocation(line: 949, column: 15, scope: !6736)
!6747 = !DILocation(line: 951, column: 11, scope: !6668)
!6748 = !DILocation(line: 953, column: 12, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6668, file: !898, line: 953, column: 5)
!6750 = !DILocation(line: 953, column: 10, scope: !6749)
!6751 = !DILocation(line: 953, column: 17, scope: !6752)
!6752 = !DILexicalBlockFile(scope: !6753, file: !898, discriminator: 1)
!6753 = distinct !DILexicalBlock(scope: !6749, file: !898, line: 953, column: 5)
!6754 = !DILocation(line: 953, column: 21, scope: !6752)
!6755 = !DILocation(line: 953, column: 24, scope: !6752)
!6756 = !DILocation(line: 953, column: 19, scope: !6752)
!6757 = !DILocation(line: 953, column: 5, scope: !6752)
!6758 = !DILocation(line: 954, column: 13, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !898, line: 954, column: 13)
!6760 = distinct !DILexicalBlock(scope: !6753, file: !898, line: 953, column: 40)
!6761 = !DILocation(line: 954, column: 15, scope: !6759)
!6762 = !DILocation(line: 954, column: 13, scope: !6760)
!6763 = !DILocation(line: 955, column: 23, scope: !6759)
!6764 = !DILocation(line: 955, column: 13, scope: !6759)
!6765 = !DILocation(line: 955, column: 16, scope: !6759)
!6766 = !DILocation(line: 955, column: 26, scope: !6759)
!6767 = !DILocation(line: 956, column: 18, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6759, file: !898, line: 956, column: 18)
!6769 = !DILocation(line: 956, column: 20, scope: !6768)
!6770 = !DILocation(line: 956, column: 18, scope: !6759)
!6771 = !DILocation(line: 957, column: 29, scope: !6768)
!6772 = !DILocation(line: 957, column: 31, scope: !6768)
!6773 = !DILocation(line: 957, column: 28, scope: !6768)
!6774 = !DILocation(line: 957, column: 36, scope: !6768)
!6775 = !DILocation(line: 957, column: 43, scope: !6768)
!6776 = !DILocation(line: 957, column: 53, scope: !6768)
!6777 = !DILocation(line: 957, column: 51, scope: !6768)
!6778 = !DILocation(line: 957, column: 23, scope: !6768)
!6779 = !DILocation(line: 957, column: 13, scope: !6768)
!6780 = !DILocation(line: 957, column: 16, scope: !6768)
!6781 = !DILocation(line: 957, column: 26, scope: !6768)
!6782 = !DILocation(line: 959, column: 36, scope: !6768)
!6783 = !DILocation(line: 959, column: 34, scope: !6768)
!6784 = !DILocation(line: 959, column: 28, scope: !6768)
!6785 = !DILocation(line: 959, column: 23, scope: !6768)
!6786 = !DILocation(line: 959, column: 13, scope: !6768)
!6787 = !DILocation(line: 959, column: 16, scope: !6768)
!6788 = !DILocation(line: 959, column: 26, scope: !6768)
!6789 = !DILocation(line: 960, column: 5, scope: !6760)
!6790 = !DILocation(line: 953, column: 36, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6753, file: !898, discriminator: 2)
!6792 = !DILocation(line: 953, column: 5, scope: !6791)
!6793 = distinct !{!6793, !6794}
!6794 = !DILocation(line: 953, column: 5, scope: !6668)
!6795 = !DILocation(line: 962, column: 27, scope: !6668)
!6796 = !DILocation(line: 962, column: 30, scope: !6668)
!6797 = !DILocation(line: 962, column: 24, scope: !6668)
!6798 = !DILocation(line: 962, column: 20, scope: !6668)
!6799 = !DILocation(line: 962, column: 42, scope: !6668)
!6800 = !DILocation(line: 962, column: 5, scope: !6668)
!6801 = !DILocation(line: 962, column: 8, scope: !6668)
!6802 = !DILocation(line: 962, column: 18, scope: !6668)
!6803 = !DILocation(line: 964, column: 5, scope: !6668)
!6804 = !DILocation(line: 965, column: 1, scope: !6668)
!6805 = distinct !DISubprogram(name: "alloc_sample_buffer", scope: !898, file: !898, line: 967, type: !6529, isLocal: true, isDefinition: true, scopeLine: 968, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6806 = !DILocalVariable(name: "s", arg: 1, scope: !6805, file: !898, line: 967, type: !1064)
!6807 = !DILocation(line: 967, column: 47, scope: !6805)
!6808 = !DILocalVariable(name: "nchsamples", scope: !6805, file: !898, line: 970, type: !1004)
!6809 = !DILocation(line: 970, column: 9, scope: !6805)
!6810 = !DILocalVariable(name: "nsamples", scope: !6805, file: !898, line: 971, type: !1004)
!6811 = !DILocation(line: 971, column: 9, scope: !6805)
!6812 = !DILocation(line: 971, column: 20, scope: !6805)
!6813 = !DILocation(line: 971, column: 33, scope: !6805)
!6814 = !DILocation(line: 971, column: 36, scope: !6805)
!6815 = !DILocation(line: 971, column: 31, scope: !6805)
!6816 = !DILocation(line: 971, column: 48, scope: !6805)
!6817 = !DILocation(line: 971, column: 51, scope: !6805)
!6818 = !DILocation(line: 971, column: 46, scope: !6805)
!6819 = !DILocalVariable(name: "ch", scope: !6805, file: !898, line: 972, type: !1004)
!6820 = !DILocation(line: 972, column: 9, scope: !6805)
!6821 = !DILocalVariable(name: "sb", scope: !6805, file: !898, line: 972, type: !1004)
!6822 = !DILocation(line: 972, column: 13, scope: !6805)
!6823 = !DILocalVariable(name: "ptr", scope: !6805, file: !898, line: 973, type: !1006)
!6824 = !DILocation(line: 973, column: 12, scope: !6805)
!6825 = !DILocation(line: 976, column: 22, scope: !6805)
!6826 = !DILocation(line: 976, column: 25, scope: !6805)
!6827 = !DILocation(line: 976, column: 21, scope: !6805)
!6828 = !DILocation(line: 976, column: 37, scope: !6805)
!6829 = !DILocation(line: 976, column: 40, scope: !6805)
!6830 = !DILocation(line: 976, column: 49, scope: !6805)
!6831 = !DILocation(line: 976, column: 58, scope: !6805)
!6832 = !DILocation(line: 976, column: 5, scope: !6805)
!6833 = !DILocation(line: 977, column: 10, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6805, file: !898, line: 977, column: 9)
!6835 = !DILocation(line: 977, column: 13, scope: !6834)
!6836 = !DILocation(line: 977, column: 9, scope: !6805)
!6837 = !DILocation(line: 978, column: 9, scope: !6834)
!6838 = !DILocation(line: 980, column: 11, scope: !6805)
!6839 = !DILocation(line: 980, column: 14, scope: !6805)
!6840 = !DILocation(line: 980, column: 24, scope: !6805)
!6841 = !DILocation(line: 980, column: 9, scope: !6805)
!6842 = !DILocation(line: 981, column: 13, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6805, file: !898, line: 981, column: 5)
!6844 = !DILocation(line: 981, column: 10, scope: !6843)
!6845 = !DILocation(line: 981, column: 18, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6847, file: !898, discriminator: 1)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !898, line: 981, column: 5)
!6848 = !DILocation(line: 981, column: 23, scope: !6846)
!6849 = !DILocation(line: 981, column: 26, scope: !6846)
!6850 = !DILocation(line: 981, column: 21, scope: !6846)
!6851 = !DILocation(line: 981, column: 5, scope: !6846)
!6852 = !DILocation(line: 982, column: 17, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !898, line: 982, column: 9)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !898, line: 981, column: 43)
!6855 = !DILocation(line: 982, column: 14, scope: !6853)
!6856 = !DILocation(line: 982, column: 22, scope: !6857)
!6857 = !DILexicalBlockFile(scope: !6858, file: !898, discriminator: 1)
!6858 = distinct !DILexicalBlock(scope: !6853, file: !898, line: 982, column: 9)
!6859 = !DILocation(line: 982, column: 27, scope: !6857)
!6860 = !DILocation(line: 982, column: 30, scope: !6857)
!6861 = !DILocation(line: 982, column: 25, scope: !6857)
!6862 = !DILocation(line: 982, column: 9, scope: !6857)
!6863 = !DILocation(line: 983, column: 39, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6858, file: !898, line: 982, column: 47)
!6865 = !DILocation(line: 983, column: 33, scope: !6864)
!6866 = !DILocation(line: 983, column: 13, scope: !6864)
!6867 = !DILocation(line: 983, column: 29, scope: !6864)
!6868 = !DILocation(line: 983, column: 16, scope: !6864)
!6869 = !DILocation(line: 983, column: 37, scope: !6864)
!6870 = !DILocation(line: 984, column: 20, scope: !6864)
!6871 = !DILocation(line: 984, column: 17, scope: !6864)
!6872 = !DILocation(line: 985, column: 9, scope: !6864)
!6873 = !DILocation(line: 982, column: 43, scope: !6874)
!6874 = !DILexicalBlockFile(scope: !6858, file: !898, discriminator: 2)
!6875 = !DILocation(line: 982, column: 9, scope: !6874)
!6876 = distinct !{!6876, !6877}
!6877 = !DILocation(line: 982, column: 9, scope: !6854)
!6878 = !DILocation(line: 986, column: 5, scope: !6854)
!6879 = !DILocation(line: 981, column: 39, scope: !6880)
!6880 = !DILexicalBlockFile(scope: !6847, file: !898, discriminator: 2)
!6881 = !DILocation(line: 981, column: 5, scope: !6880)
!6882 = distinct !{!6882, !6883}
!6883 = !DILocation(line: 981, column: 5, scope: !6805)
!6884 = !DILocation(line: 988, column: 5, scope: !6805)
!6885 = !DILocation(line: 989, column: 1, scope: !6805)
!6886 = distinct !DISubprogram(name: "init_get_bits8", scope: !1790, file: !1790, line: 650, type: !6887, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{!1004, !6889, !1017, !1004}
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64, align: 64)
!6890 = !DILocalVariable(name: "s", arg: 1, scope: !6886, file: !1790, line: 650, type: !6889)
!6891 = !DILocation(line: 650, column: 49, scope: !6886)
!6892 = !DILocalVariable(name: "buffer", arg: 2, scope: !6886, file: !1790, line: 650, type: !1017)
!6893 = !DILocation(line: 650, column: 67, scope: !6886)
!6894 = !DILocalVariable(name: "byte_size", arg: 3, scope: !6886, file: !1790, line: 651, type: !1004)
!6895 = !DILocation(line: 651, column: 38, scope: !6886)
!6896 = !DILocation(line: 653, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6886, file: !1790, line: 653, column: 9)
!6898 = !DILocation(line: 653, column: 19, scope: !6897)
!6899 = !DILocation(line: 653, column: 36, scope: !6897)
!6900 = !DILocation(line: 653, column: 39, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !6897, file: !1790, discriminator: 1)
!6902 = !DILocation(line: 653, column: 49, scope: !6901)
!6903 = !DILocation(line: 653, column: 9, scope: !6901)
!6904 = !DILocation(line: 654, column: 19, scope: !6897)
!6905 = !DILocation(line: 654, column: 9, scope: !6897)
!6906 = !DILocation(line: 655, column: 26, scope: !6886)
!6907 = !DILocation(line: 655, column: 29, scope: !6886)
!6908 = !DILocation(line: 655, column: 37, scope: !6886)
!6909 = !DILocation(line: 655, column: 47, scope: !6886)
!6910 = !DILocation(line: 655, column: 12, scope: !6886)
!6911 = !DILocation(line: 655, column: 5, scope: !6886)
!6912 = distinct !DISubprogram(name: "parse_lfe_24", scope: !898, file: !898, line: 143, type: !6529, isLocal: true, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6913 = !DILocalVariable(name: "a", arg: 1, scope: !6914, file: !6628, line: 127, type: !1004)
!6914 = distinct !DISubprogram(name: "av_clip_c", scope: !6628, file: !6628, line: 127, type: !6915, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{!1004, !1004, !1004, !1004}
!6917 = !DILocation(line: 127, column: 87, scope: !6914, inlinedAt: !6918)
!6918 = distinct !DILocation(line: 188, column: 18, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !898, line: 162, column: 30)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !898, line: 162, column: 5)
!6921 = distinct !DILexicalBlock(scope: !6912, file: !898, line: 162, column: 5)
!6922 = !DILocalVariable(name: "amin", arg: 2, scope: !6914, file: !6628, line: 127, type: !1004)
!6923 = !DILocation(line: 127, column: 94, scope: !6914, inlinedAt: !6918)
!6924 = !DILocalVariable(name: "amax", arg: 3, scope: !6914, file: !6628, line: 127, type: !1004)
!6925 = !DILocation(line: 127, column: 104, scope: !6914, inlinedAt: !6918)
!6926 = !DILocalVariable(name: "s", arg: 1, scope: !6912, file: !898, line: 143, type: !1064)
!6927 = !DILocation(line: 143, column: 40, scope: !6912)
!6928 = !DILocalVariable(name: "step_max", scope: !6912, file: !898, line: 145, type: !1004)
!6929 = !DILocation(line: 145, column: 9, scope: !6912)
!6930 = !DILocalVariable(name: "i", scope: !6912, file: !898, line: 146, type: !1004)
!6931 = !DILocation(line: 146, column: 9, scope: !6912)
!6932 = !DILocalVariable(name: "ps", scope: !6912, file: !898, line: 146, type: !1004)
!6933 = !DILocation(line: 146, column: 12, scope: !6912)
!6934 = !DILocalVariable(name: "si", scope: !6912, file: !898, line: 146, type: !1004)
!6935 = !DILocation(line: 146, column: 16, scope: !6912)
!6936 = !DILocalVariable(name: "code", scope: !6912, file: !898, line: 146, type: !1004)
!6937 = !DILocation(line: 146, column: 20, scope: !6912)
!6938 = !DILocalVariable(name: "step_i", scope: !6912, file: !898, line: 146, type: !1004)
!6939 = !DILocation(line: 146, column: 26, scope: !6912)
!6940 = !DILocalVariable(name: "step", scope: !6912, file: !898, line: 147, type: !1007)
!6941 = !DILocation(line: 147, column: 11, scope: !6912)
!6942 = !DILocalVariable(name: "value", scope: !6912, file: !898, line: 147, type: !1007)
!6943 = !DILocation(line: 147, column: 17, scope: !6912)
!6944 = !DILocalVariable(name: "delta", scope: !6912, file: !898, line: 147, type: !1007)
!6945 = !DILocation(line: 147, column: 24, scope: !6912)
!6946 = !DILocation(line: 149, column: 20, scope: !6912)
!6947 = !DILocation(line: 149, column: 23, scope: !6912)
!6948 = !DILocation(line: 149, column: 10, scope: !6912)
!6949 = !DILocation(line: 149, column: 8, scope: !6912)
!6950 = !DILocation(line: 150, column: 10, scope: !6912)
!6951 = !DILocation(line: 150, column: 13, scope: !6912)
!6952 = !DILocation(line: 150, column: 8, scope: !6912)
!6953 = !DILocation(line: 152, column: 16, scope: !6912)
!6954 = !DILocation(line: 152, column: 19, scope: !6912)
!6955 = !DILocation(line: 152, column: 34, scope: !6912)
!6956 = !DILocation(line: 152, column: 33, scope: !6912)
!6957 = !DILocation(line: 152, column: 31, scope: !6912)
!6958 = !DILocation(line: 152, column: 40, scope: !6912)
!6959 = !DILocation(line: 152, column: 38, scope: !6912)
!6960 = !DILocation(line: 152, column: 13, scope: !6912)
!6961 = !DILocation(line: 152, column: 44, scope: !6912)
!6962 = !DILocation(line: 152, column: 11, scope: !6912)
!6963 = !DILocation(line: 154, column: 24, scope: !6912)
!6964 = !DILocation(line: 154, column: 27, scope: !6912)
!6965 = !DILocation(line: 154, column: 14, scope: !6912)
!6966 = !DILocation(line: 154, column: 12, scope: !6912)
!6967 = !DILocation(line: 155, column: 9, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6912, file: !898, line: 155, column: 9)
!6969 = !DILocation(line: 155, column: 18, scope: !6968)
!6970 = !DILocation(line: 155, column: 16, scope: !6968)
!6971 = !DILocation(line: 155, column: 9, scope: !6912)
!6972 = !DILocation(line: 156, column: 16, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6968, file: !898, line: 155, column: 28)
!6974 = !DILocation(line: 156, column: 19, scope: !6973)
!6975 = !DILocation(line: 156, column: 9, scope: !6973)
!6976 = !DILocation(line: 157, column: 9, scope: !6973)
!6977 = !DILocation(line: 160, column: 36, scope: !6912)
!6978 = !DILocation(line: 160, column: 12, scope: !6912)
!6979 = !DILocation(line: 160, column: 10, scope: !6912)
!6980 = !DILocation(line: 162, column: 12, scope: !6921)
!6981 = !DILocation(line: 162, column: 10, scope: !6921)
!6982 = !DILocation(line: 162, column: 17, scope: !6983)
!6983 = !DILexicalBlockFile(scope: !6920, file: !898, discriminator: 1)
!6984 = !DILocation(line: 162, column: 19, scope: !6983)
!6985 = !DILocation(line: 162, column: 5, scope: !6983)
!6986 = !DILocation(line: 163, column: 26, scope: !6919)
!6987 = !DILocation(line: 163, column: 29, scope: !6919)
!6988 = !DILocation(line: 163, column: 16, scope: !6919)
!6989 = !DILocation(line: 163, column: 14, scope: !6919)
!6990 = !DILocation(line: 165, column: 17, scope: !6919)
!6991 = !DILocation(line: 165, column: 22, scope: !6919)
!6992 = !DILocation(line: 165, column: 15, scope: !6919)
!6993 = !DILocation(line: 166, column: 13, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6919, file: !898, line: 166, column: 13)
!6995 = !DILocation(line: 166, column: 18, scope: !6994)
!6996 = !DILocation(line: 166, column: 13, scope: !6919)
!6997 = !DILocation(line: 167, column: 22, scope: !6994)
!6998 = !DILocation(line: 167, column: 19, scope: !6994)
!6999 = !DILocation(line: 167, column: 13, scope: !6994)
!7000 = !DILocation(line: 168, column: 13, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6919, file: !898, line: 168, column: 13)
!7002 = !DILocation(line: 168, column: 18, scope: !7001)
!7003 = !DILocation(line: 168, column: 13, scope: !6919)
!7004 = !DILocation(line: 169, column: 22, scope: !7001)
!7005 = !DILocation(line: 169, column: 27, scope: !7001)
!7006 = !DILocation(line: 169, column: 19, scope: !7001)
!7007 = !DILocation(line: 169, column: 13, scope: !7001)
!7008 = !DILocation(line: 170, column: 13, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6919, file: !898, line: 170, column: 13)
!7010 = !DILocation(line: 170, column: 18, scope: !7009)
!7011 = !DILocation(line: 170, column: 13, scope: !6919)
!7012 = !DILocation(line: 171, column: 22, scope: !7009)
!7013 = !DILocation(line: 171, column: 27, scope: !7009)
!7014 = !DILocation(line: 171, column: 19, scope: !7009)
!7015 = !DILocation(line: 171, column: 13, scope: !7009)
!7016 = !DILocation(line: 172, column: 13, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6919, file: !898, line: 172, column: 13)
!7018 = !DILocation(line: 172, column: 18, scope: !7017)
!7019 = !DILocation(line: 172, column: 13, scope: !6919)
!7020 = !DILocation(line: 173, column: 22, scope: !7017)
!7021 = !DILocation(line: 173, column: 27, scope: !7017)
!7022 = !DILocation(line: 173, column: 19, scope: !7017)
!7023 = !DILocation(line: 173, column: 13, scope: !7017)
!7024 = !DILocation(line: 174, column: 13, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6919, file: !898, line: 174, column: 13)
!7026 = !DILocation(line: 174, column: 18, scope: !7025)
!7027 = !DILocation(line: 174, column: 13, scope: !6919)
!7028 = !DILocation(line: 175, column: 22, scope: !7025)
!7029 = !DILocation(line: 175, column: 27, scope: !7025)
!7030 = !DILocation(line: 175, column: 19, scope: !7025)
!7031 = !DILocation(line: 175, column: 13, scope: !7025)
!7032 = !DILocation(line: 177, column: 13, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6919, file: !898, line: 177, column: 13)
!7034 = !DILocation(line: 177, column: 18, scope: !7033)
!7035 = !DILocation(line: 177, column: 13, scope: !6919)
!7036 = !DILocation(line: 178, column: 22, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !898, line: 177, column: 24)
!7038 = !DILocation(line: 178, column: 19, scope: !7037)
!7039 = !DILocation(line: 179, column: 17, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7037, file: !898, line: 179, column: 17)
!7041 = !DILocation(line: 179, column: 23, scope: !7040)
!7042 = !DILocation(line: 179, column: 17, scope: !7037)
!7043 = !DILocation(line: 180, column: 23, scope: !7040)
!7044 = !DILocation(line: 180, column: 17, scope: !7040)
!7045 = !DILocation(line: 181, column: 9, scope: !7037)
!7046 = !DILocation(line: 182, column: 22, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7033, file: !898, line: 181, column: 16)
!7048 = !DILocation(line: 182, column: 19, scope: !7047)
!7049 = !DILocation(line: 183, column: 17, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7047, file: !898, line: 183, column: 17)
!7051 = !DILocation(line: 183, column: 23, scope: !7050)
!7052 = !DILocation(line: 183, column: 17, scope: !7047)
!7053 = !DILocation(line: 184, column: 23, scope: !7050)
!7054 = !DILocation(line: 184, column: 17, scope: !7050)
!7055 = !DILocation(line: 187, column: 45, scope: !6919)
!7056 = !DILocation(line: 187, column: 50, scope: !6919)
!7057 = !DILocation(line: 187, column: 19, scope: !6919)
!7058 = !DILocation(line: 187, column: 16, scope: !6919)
!7059 = !DILocation(line: 188, column: 28, scope: !6919)
!7060 = !DILocation(line: 188, column: 39, scope: !6919)
!7061 = !DILocation(line: 188, column: 18, scope: !6919)
!7062 = !DILocation(line: 132, column: 9, scope: !7063, inlinedAt: !6918)
!7063 = distinct !DILexicalBlock(scope: !6914, file: !6628, line: 132, column: 9)
!7064 = !DILocation(line: 132, column: 13, scope: !7063, inlinedAt: !6918)
!7065 = !DILocation(line: 132, column: 11, scope: !7063, inlinedAt: !6918)
!7066 = !DILocation(line: 132, column: 9, scope: !6914, inlinedAt: !6918)
!7067 = !DILocation(line: 132, column: 26, scope: !7068, inlinedAt: !6918)
!7068 = !DILexicalBlockFile(scope: !7063, file: !6628, discriminator: 1)
!7069 = !DILocation(line: 132, column: 19, scope: !7068, inlinedAt: !6918)
!7070 = !DILocation(line: 133, column: 14, scope: !7071, inlinedAt: !6918)
!7071 = distinct !DILexicalBlock(scope: !7063, file: !6628, line: 133, column: 14)
!7072 = !DILocation(line: 133, column: 18, scope: !7071, inlinedAt: !6918)
!7073 = !DILocation(line: 133, column: 16, scope: !7071, inlinedAt: !6918)
!7074 = !DILocation(line: 133, column: 14, scope: !7063, inlinedAt: !6918)
!7075 = !DILocation(line: 133, column: 31, scope: !7076, inlinedAt: !6918)
!7076 = !DILexicalBlockFile(scope: !7071, file: !6628, discriminator: 1)
!7077 = !DILocation(line: 133, column: 24, scope: !7076, inlinedAt: !6918)
!7078 = !DILocation(line: 134, column: 17, scope: !7071, inlinedAt: !6918)
!7079 = !DILocation(line: 134, column: 10, scope: !7071, inlinedAt: !6918)
!7080 = !DILocation(line: 135, column: 1, scope: !6914, inlinedAt: !6918)
!7081 = !DILocation(line: 188, column: 16, scope: !6919)
!7082 = !DILocation(line: 190, column: 40, scope: !6919)
!7083 = !DILocation(line: 190, column: 16, scope: !6919)
!7084 = !DILocation(line: 190, column: 14, scope: !6919)
!7085 = !DILocation(line: 191, column: 26, scope: !6919)
!7086 = !DILocation(line: 191, column: 34, scope: !6919)
!7087 = !DILocation(line: 191, column: 37, scope: !6919)
!7088 = !DILocation(line: 191, column: 32, scope: !6919)
!7089 = !DILocation(line: 191, column: 21, scope: !6919)
!7090 = !DILocation(line: 191, column: 9, scope: !6919)
!7091 = !DILocation(line: 191, column: 12, scope: !6919)
!7092 = !DILocation(line: 191, column: 24, scope: !6919)
!7093 = !DILocation(line: 192, column: 5, scope: !6919)
!7094 = !DILocation(line: 162, column: 26, scope: !7095)
!7095 = !DILexicalBlockFile(scope: !6920, file: !898, discriminator: 2)
!7096 = !DILocation(line: 162, column: 5, scope: !7095)
!7097 = distinct !{!7097, !7098}
!7098 = !DILocation(line: 162, column: 5, scope: !6912)
!7099 = !DILocation(line: 194, column: 5, scope: !6912)
!7100 = !DILocation(line: 195, column: 1, scope: !6912)
!7101 = distinct !DISubprogram(name: "parse_lfe_16", scope: !898, file: !898, line: 197, type: !6529, isLocal: true, isDefinition: true, scopeLine: 198, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7102 = !DILocation(line: 127, column: 87, scope: !6914, inlinedAt: !7103)
!7103 = distinct !DILocation(line: 238, column: 18, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !898, line: 216, column: 30)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !898, line: 216, column: 5)
!7106 = distinct !DILexicalBlock(scope: !7101, file: !898, line: 216, column: 5)
!7107 = !DILocation(line: 127, column: 94, scope: !6914, inlinedAt: !7103)
!7108 = !DILocation(line: 127, column: 104, scope: !6914, inlinedAt: !7103)
!7109 = !DILocalVariable(name: "s", arg: 1, scope: !7101, file: !898, line: 197, type: !1064)
!7110 = !DILocation(line: 197, column: 40, scope: !7101)
!7111 = !DILocalVariable(name: "step_max", scope: !7101, file: !898, line: 199, type: !1004)
!7112 = !DILocation(line: 199, column: 9, scope: !7101)
!7113 = !DILocalVariable(name: "i", scope: !7101, file: !898, line: 200, type: !1004)
!7114 = !DILocation(line: 200, column: 9, scope: !7101)
!7115 = !DILocalVariable(name: "ps", scope: !7101, file: !898, line: 200, type: !1004)
!7116 = !DILocation(line: 200, column: 12, scope: !7101)
!7117 = !DILocalVariable(name: "si", scope: !7101, file: !898, line: 200, type: !1004)
!7118 = !DILocation(line: 200, column: 16, scope: !7101)
!7119 = !DILocalVariable(name: "code", scope: !7101, file: !898, line: 200, type: !1004)
!7120 = !DILocation(line: 200, column: 20, scope: !7101)
!7121 = !DILocalVariable(name: "step_i", scope: !7101, file: !898, line: 200, type: !1004)
!7122 = !DILocation(line: 200, column: 26, scope: !7101)
!7123 = !DILocalVariable(name: "step", scope: !7101, file: !898, line: 201, type: !1007)
!7124 = !DILocation(line: 201, column: 11, scope: !7101)
!7125 = !DILocalVariable(name: "value", scope: !7101, file: !898, line: 201, type: !1007)
!7126 = !DILocation(line: 201, column: 17, scope: !7101)
!7127 = !DILocalVariable(name: "delta", scope: !7101, file: !898, line: 201, type: !1007)
!7128 = !DILocation(line: 201, column: 24, scope: !7101)
!7129 = !DILocation(line: 203, column: 20, scope: !7101)
!7130 = !DILocation(line: 203, column: 23, scope: !7101)
!7131 = !DILocation(line: 203, column: 10, scope: !7101)
!7132 = !DILocation(line: 203, column: 8, scope: !7101)
!7133 = !DILocation(line: 204, column: 10, scope: !7101)
!7134 = !DILocation(line: 204, column: 13, scope: !7101)
!7135 = !DILocation(line: 204, column: 8, scope: !7101)
!7136 = !DILocation(line: 206, column: 16, scope: !7101)
!7137 = !DILocation(line: 206, column: 19, scope: !7101)
!7138 = !DILocation(line: 206, column: 32, scope: !7101)
!7139 = !DILocation(line: 206, column: 31, scope: !7101)
!7140 = !DILocation(line: 206, column: 29, scope: !7101)
!7141 = !DILocation(line: 206, column: 38, scope: !7101)
!7142 = !DILocation(line: 206, column: 36, scope: !7101)
!7143 = !DILocation(line: 206, column: 13, scope: !7101)
!7144 = !DILocation(line: 206, column: 42, scope: !7101)
!7145 = !DILocation(line: 206, column: 11, scope: !7101)
!7146 = !DILocation(line: 208, column: 24, scope: !7101)
!7147 = !DILocation(line: 208, column: 27, scope: !7101)
!7148 = !DILocation(line: 208, column: 14, scope: !7101)
!7149 = !DILocation(line: 208, column: 12, scope: !7101)
!7150 = !DILocation(line: 209, column: 9, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7101, file: !898, line: 209, column: 9)
!7152 = !DILocation(line: 209, column: 18, scope: !7151)
!7153 = !DILocation(line: 209, column: 16, scope: !7151)
!7154 = !DILocation(line: 209, column: 9, scope: !7101)
!7155 = !DILocation(line: 210, column: 16, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !898, line: 209, column: 28)
!7157 = !DILocation(line: 210, column: 19, scope: !7156)
!7158 = !DILocation(line: 210, column: 9, scope: !7156)
!7159 = !DILocation(line: 211, column: 9, scope: !7156)
!7160 = !DILocation(line: 214, column: 36, scope: !7101)
!7161 = !DILocation(line: 214, column: 12, scope: !7101)
!7162 = !DILocation(line: 214, column: 10, scope: !7101)
!7163 = !DILocation(line: 216, column: 12, scope: !7106)
!7164 = !DILocation(line: 216, column: 10, scope: !7106)
!7165 = !DILocation(line: 216, column: 17, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !7105, file: !898, discriminator: 1)
!7167 = !DILocation(line: 216, column: 19, scope: !7166)
!7168 = !DILocation(line: 216, column: 5, scope: !7166)
!7169 = !DILocation(line: 217, column: 26, scope: !7104)
!7170 = !DILocation(line: 217, column: 29, scope: !7104)
!7171 = !DILocation(line: 217, column: 16, scope: !7104)
!7172 = !DILocation(line: 217, column: 14, scope: !7104)
!7173 = !DILocation(line: 219, column: 17, scope: !7104)
!7174 = !DILocation(line: 219, column: 22, scope: !7104)
!7175 = !DILocation(line: 219, column: 15, scope: !7104)
!7176 = !DILocation(line: 220, column: 13, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7104, file: !898, line: 220, column: 13)
!7178 = !DILocation(line: 220, column: 18, scope: !7177)
!7179 = !DILocation(line: 220, column: 13, scope: !7104)
!7180 = !DILocation(line: 221, column: 22, scope: !7177)
!7181 = !DILocation(line: 221, column: 19, scope: !7177)
!7182 = !DILocation(line: 221, column: 13, scope: !7177)
!7183 = !DILocation(line: 222, column: 13, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7104, file: !898, line: 222, column: 13)
!7185 = !DILocation(line: 222, column: 18, scope: !7184)
!7186 = !DILocation(line: 222, column: 13, scope: !7104)
!7187 = !DILocation(line: 223, column: 22, scope: !7184)
!7188 = !DILocation(line: 223, column: 27, scope: !7184)
!7189 = !DILocation(line: 223, column: 19, scope: !7184)
!7190 = !DILocation(line: 223, column: 13, scope: !7184)
!7191 = !DILocation(line: 224, column: 13, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7104, file: !898, line: 224, column: 13)
!7193 = !DILocation(line: 224, column: 18, scope: !7192)
!7194 = !DILocation(line: 224, column: 13, scope: !7104)
!7195 = !DILocation(line: 225, column: 22, scope: !7192)
!7196 = !DILocation(line: 225, column: 27, scope: !7192)
!7197 = !DILocation(line: 225, column: 19, scope: !7192)
!7198 = !DILocation(line: 225, column: 13, scope: !7192)
!7199 = !DILocation(line: 227, column: 13, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7104, file: !898, line: 227, column: 13)
!7201 = !DILocation(line: 227, column: 18, scope: !7200)
!7202 = !DILocation(line: 227, column: 13, scope: !7104)
!7203 = !DILocation(line: 228, column: 22, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7200, file: !898, line: 227, column: 23)
!7205 = !DILocation(line: 228, column: 19, scope: !7204)
!7206 = !DILocation(line: 229, column: 17, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7204, file: !898, line: 229, column: 17)
!7208 = !DILocation(line: 229, column: 23, scope: !7207)
!7209 = !DILocation(line: 229, column: 17, scope: !7204)
!7210 = !DILocation(line: 230, column: 23, scope: !7207)
!7211 = !DILocation(line: 230, column: 17, scope: !7207)
!7212 = !DILocation(line: 231, column: 9, scope: !7204)
!7213 = !DILocation(line: 232, column: 22, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7200, file: !898, line: 231, column: 16)
!7215 = !DILocation(line: 232, column: 19, scope: !7214)
!7216 = !DILocation(line: 233, column: 17, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7214, file: !898, line: 233, column: 17)
!7218 = !DILocation(line: 233, column: 23, scope: !7217)
!7219 = !DILocation(line: 233, column: 17, scope: !7214)
!7220 = !DILocation(line: 234, column: 23, scope: !7217)
!7221 = !DILocation(line: 234, column: 17, scope: !7217)
!7222 = !DILocation(line: 237, column: 45, scope: !7104)
!7223 = !DILocation(line: 237, column: 50, scope: !7104)
!7224 = !DILocation(line: 237, column: 19, scope: !7104)
!7225 = !DILocation(line: 237, column: 16, scope: !7104)
!7226 = !DILocation(line: 238, column: 28, scope: !7104)
!7227 = !DILocation(line: 238, column: 39, scope: !7104)
!7228 = !DILocation(line: 238, column: 18, scope: !7104)
!7229 = !DILocation(line: 132, column: 9, scope: !7063, inlinedAt: !7103)
!7230 = !DILocation(line: 132, column: 13, scope: !7063, inlinedAt: !7103)
!7231 = !DILocation(line: 132, column: 11, scope: !7063, inlinedAt: !7103)
!7232 = !DILocation(line: 132, column: 9, scope: !6914, inlinedAt: !7103)
!7233 = !DILocation(line: 132, column: 26, scope: !7068, inlinedAt: !7103)
!7234 = !DILocation(line: 132, column: 19, scope: !7068, inlinedAt: !7103)
!7235 = !DILocation(line: 133, column: 14, scope: !7071, inlinedAt: !7103)
!7236 = !DILocation(line: 133, column: 18, scope: !7071, inlinedAt: !7103)
!7237 = !DILocation(line: 133, column: 16, scope: !7071, inlinedAt: !7103)
!7238 = !DILocation(line: 133, column: 14, scope: !7063, inlinedAt: !7103)
!7239 = !DILocation(line: 133, column: 31, scope: !7076, inlinedAt: !7103)
!7240 = !DILocation(line: 133, column: 24, scope: !7076, inlinedAt: !7103)
!7241 = !DILocation(line: 134, column: 17, scope: !7071, inlinedAt: !7103)
!7242 = !DILocation(line: 134, column: 10, scope: !7071, inlinedAt: !7103)
!7243 = !DILocation(line: 135, column: 1, scope: !6914, inlinedAt: !7103)
!7244 = !DILocation(line: 238, column: 16, scope: !7104)
!7245 = !DILocation(line: 240, column: 40, scope: !7104)
!7246 = !DILocation(line: 240, column: 16, scope: !7104)
!7247 = !DILocation(line: 240, column: 14, scope: !7104)
!7248 = !DILocation(line: 241, column: 26, scope: !7104)
!7249 = !DILocation(line: 241, column: 34, scope: !7104)
!7250 = !DILocation(line: 241, column: 37, scope: !7104)
!7251 = !DILocation(line: 241, column: 32, scope: !7104)
!7252 = !DILocation(line: 241, column: 21, scope: !7104)
!7253 = !DILocation(line: 241, column: 9, scope: !7104)
!7254 = !DILocation(line: 241, column: 12, scope: !7104)
!7255 = !DILocation(line: 241, column: 24, scope: !7104)
!7256 = !DILocation(line: 242, column: 5, scope: !7104)
!7257 = !DILocation(line: 216, column: 26, scope: !7258)
!7258 = !DILexicalBlockFile(scope: !7105, file: !898, discriminator: 2)
!7259 = !DILocation(line: 216, column: 5, scope: !7258)
!7260 = distinct !{!7260, !7261}
!7261 = !DILocation(line: 216, column: 5, scope: !7101)
!7262 = !DILocation(line: 244, column: 5, scope: !7101)
!7263 = !DILocation(line: 245, column: 1, scope: !7101)
!7264 = distinct !DISubprogram(name: "init_get_bits", scope: !1790, file: !1790, line: 615, type: !6887, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7265 = !DILocalVariable(name: "s", arg: 1, scope: !7264, file: !1790, line: 615, type: !6889)
!7266 = !DILocation(line: 615, column: 48, scope: !7264)
!7267 = !DILocalVariable(name: "buffer", arg: 2, scope: !7264, file: !1790, line: 615, type: !1017)
!7268 = !DILocation(line: 615, column: 66, scope: !7264)
!7269 = !DILocalVariable(name: "bit_size", arg: 3, scope: !7264, file: !1790, line: 616, type: !1004)
!7270 = !DILocation(line: 616, column: 37, scope: !7264)
!7271 = !DILocalVariable(name: "buffer_size", scope: !7264, file: !1790, line: 618, type: !1004)
!7272 = !DILocation(line: 618, column: 9, scope: !7264)
!7273 = !DILocalVariable(name: "ret", scope: !7264, file: !1790, line: 619, type: !1004)
!7274 = !DILocation(line: 619, column: 9, scope: !7264)
!7275 = !DILocation(line: 621, column: 9, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7264, file: !1790, line: 621, column: 9)
!7277 = !DILocation(line: 621, column: 18, scope: !7276)
!7278 = !DILocation(line: 621, column: 64, scope: !7276)
!7279 = !DILocation(line: 621, column: 67, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !7276, file: !1790, discriminator: 1)
!7281 = !DILocation(line: 621, column: 76, scope: !7280)
!7282 = !DILocation(line: 621, column: 80, scope: !7280)
!7283 = !DILocation(line: 621, column: 84, scope: !7284)
!7284 = !DILexicalBlockFile(scope: !7276, file: !1790, discriminator: 2)
!7285 = !DILocation(line: 621, column: 9, scope: !7284)
!7286 = !DILocation(line: 622, column: 18, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7276, file: !1790, line: 621, column: 92)
!7288 = !DILocation(line: 623, column: 16, scope: !7287)
!7289 = !DILocation(line: 624, column: 13, scope: !7287)
!7290 = !DILocation(line: 625, column: 5, scope: !7287)
!7291 = !DILocation(line: 627, column: 20, scope: !7264)
!7292 = !DILocation(line: 627, column: 29, scope: !7264)
!7293 = !DILocation(line: 627, column: 34, scope: !7264)
!7294 = !DILocation(line: 627, column: 17, scope: !7264)
!7295 = !DILocation(line: 629, column: 17, scope: !7264)
!7296 = !DILocation(line: 629, column: 5, scope: !7264)
!7297 = !DILocation(line: 629, column: 8, scope: !7264)
!7298 = !DILocation(line: 629, column: 15, scope: !7264)
!7299 = !DILocation(line: 630, column: 23, scope: !7264)
!7300 = !DILocation(line: 630, column: 5, scope: !7264)
!7301 = !DILocation(line: 630, column: 8, scope: !7264)
!7302 = !DILocation(line: 630, column: 21, scope: !7264)
!7303 = !DILocation(line: 631, column: 29, scope: !7264)
!7304 = !DILocation(line: 631, column: 38, scope: !7264)
!7305 = !DILocation(line: 631, column: 5, scope: !7264)
!7306 = !DILocation(line: 631, column: 8, scope: !7264)
!7307 = !DILocation(line: 631, column: 27, scope: !7264)
!7308 = !DILocation(line: 632, column: 21, scope: !7264)
!7309 = !DILocation(line: 632, column: 30, scope: !7264)
!7310 = !DILocation(line: 632, column: 28, scope: !7264)
!7311 = !DILocation(line: 632, column: 5, scope: !7264)
!7312 = !DILocation(line: 632, column: 8, scope: !7264)
!7313 = !DILocation(line: 632, column: 19, scope: !7264)
!7314 = !DILocation(line: 633, column: 5, scope: !7264)
!7315 = !DILocation(line: 633, column: 8, scope: !7264)
!7316 = !DILocation(line: 633, column: 14, scope: !7264)
!7317 = !DILocation(line: 639, column: 12, scope: !7264)
!7318 = !DILocation(line: 639, column: 5, scope: !7264)
!7319 = distinct !DISubprogram(name: "get_bits", scope: !1790, file: !1790, line: 381, type: !7320, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!1005, !6889, !1004}
!7322 = !DILocalVariable(name: "s", arg: 1, scope: !7319, file: !1790, line: 381, type: !6889)
!7323 = !DILocation(line: 381, column: 52, scope: !7319)
!7324 = !DILocalVariable(name: "n", arg: 2, scope: !7319, file: !1790, line: 381, type: !1004)
!7325 = !DILocation(line: 381, column: 59, scope: !7319)
!7326 = !DILocalVariable(name: "tmp", scope: !7319, file: !1790, line: 383, type: !1004)
!7327 = !DILocation(line: 383, column: 18, scope: !7319)
!7328 = !DILocalVariable(name: "re_index", scope: !7319, file: !1790, line: 399, type: !1005)
!7329 = !DILocation(line: 399, column: 18, scope: !7319)
!7330 = !DILocation(line: 399, column: 30, scope: !7319)
!7331 = !DILocation(line: 399, column: 34, scope: !7319)
!7332 = !DILocalVariable(name: "re_cache", scope: !7319, file: !1790, line: 399, type: !1005)
!7333 = !DILocation(line: 399, column: 78, scope: !7319)
!7334 = !DILocalVariable(name: "re_size_plus8", scope: !7319, file: !1790, line: 399, type: !1005)
!7335 = !DILocation(line: 399, column: 101, scope: !7319)
!7336 = !DILocation(line: 399, column: 118, scope: !7319)
!7337 = !DILocation(line: 399, column: 122, scope: !7319)
!7338 = !DILocation(line: 401, column: 49, scope: !7319)
!7339 = !DILocation(line: 401, column: 53, scope: !7319)
!7340 = !DILocation(line: 401, column: 63, scope: !7319)
!7341 = !DILocation(line: 401, column: 72, scope: !7319)
!7342 = !DILocation(line: 401, column: 60, scope: !7319)
!7343 = !DILocation(line: 401, column: 81, scope: !7319)
!7344 = !DILocation(line: 401, column: 88, scope: !7319)
!7345 = !DILocation(line: 401, column: 97, scope: !7319)
!7346 = !DILocation(line: 401, column: 84, scope: !7319)
!7347 = !DILocation(line: 401, column: 14, scope: !7319)
!7348 = !DILocation(line: 402, column: 23, scope: !7319)
!7349 = !DILocation(line: 402, column: 33, scope: !7319)
!7350 = !DILocation(line: 402, column: 11, scope: !7319)
!7351 = !DILocation(line: 402, column: 9, scope: !7319)
!7352 = !DILocation(line: 403, column: 18, scope: !7319)
!7353 = !DILocation(line: 403, column: 36, scope: !7319)
!7354 = !DILocation(line: 403, column: 48, scope: !7319)
!7355 = !DILocation(line: 403, column: 45, scope: !7319)
!7356 = !DILocation(line: 403, column: 33, scope: !7319)
!7357 = !DILocation(line: 403, column: 17, scope: !7319)
!7358 = !DILocation(line: 403, column: 55, scope: !7359)
!7359 = !DILexicalBlockFile(scope: !7319, file: !1790, discriminator: 1)
!7360 = !DILocation(line: 403, column: 67, scope: !7359)
!7361 = !DILocation(line: 403, column: 64, scope: !7359)
!7362 = !DILocation(line: 403, column: 17, scope: !7359)
!7363 = !DILocation(line: 403, column: 74, scope: !7364)
!7364 = !DILexicalBlockFile(scope: !7319, file: !1790, discriminator: 2)
!7365 = !DILocation(line: 403, column: 17, scope: !7364)
!7366 = !DILocation(line: 403, column: 17, scope: !7367)
!7367 = !DILexicalBlockFile(scope: !7319, file: !1790, discriminator: 3)
!7368 = !DILocation(line: 403, column: 14, scope: !7367)
!7369 = !DILocation(line: 404, column: 18, scope: !7319)
!7370 = !DILocation(line: 404, column: 6, scope: !7319)
!7371 = !DILocation(line: 404, column: 10, scope: !7319)
!7372 = !DILocation(line: 404, column: 16, scope: !7319)
!7373 = !DILocation(line: 406, column: 12, scope: !7319)
!7374 = !DILocation(line: 406, column: 5, scope: !7319)
!7375 = distinct !DISubprogram(name: "zero_extend", scope: !7376, file: !7376, line: 139, type: !7377, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7376 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!1005, !1005, !1005}
!7379 = !DILocalVariable(name: "val", arg: 1, scope: !7375, file: !7376, line: 139, type: !1005)
!7380 = !DILocation(line: 139, column: 68, scope: !7375)
!7381 = !DILocalVariable(name: "bits", arg: 2, scope: !7375, file: !7376, line: 139, type: !1005)
!7382 = !DILocation(line: 139, column: 82, scope: !7375)
!7383 = !DILocation(line: 141, column: 13, scope: !7375)
!7384 = !DILocation(line: 141, column: 41, scope: !7375)
!7385 = !DILocation(line: 141, column: 39, scope: !7375)
!7386 = !DILocation(line: 141, column: 17, scope: !7375)
!7387 = !DILocation(line: 141, column: 72, scope: !7375)
!7388 = !DILocation(line: 141, column: 70, scope: !7375)
!7389 = !DILocation(line: 141, column: 48, scope: !7375)
!7390 = !DILocation(line: 141, column: 5, scope: !7375)
!7391 = distinct !DISubprogram(name: "get_bits_left", scope: !1790, file: !1790, line: 814, type: !7392, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{!1004, !6889}
!7394 = !DILocalVariable(name: "gb", arg: 1, scope: !7391, file: !1790, line: 814, type: !6889)
!7395 = !DILocation(line: 814, column: 48, scope: !7391)
!7396 = !DILocation(line: 816, column: 12, scope: !7391)
!7397 = !DILocation(line: 816, column: 16, scope: !7391)
!7398 = !DILocation(line: 816, column: 46, scope: !7391)
!7399 = !DILocation(line: 816, column: 31, scope: !7391)
!7400 = !DILocation(line: 816, column: 29, scope: !7391)
!7401 = !DILocation(line: 816, column: 5, scope: !7391)
!7402 = distinct !DISubprogram(name: "parse_tonal", scope: !898, file: !898, line: 277, type: !7403, isLocal: true, isDefinition: true, scopeLine: 278, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7403 = !DISubroutineType(types: !7404)
!7404 = !{!1004, !1064, !1004}
!7405 = !DILocalVariable(name: "s", arg: 1, scope: !7406, file: !1790, line: 412, type: !6889)
!7406 = distinct !DISubprogram(name: "get_bitsz", scope: !1790, file: !1790, line: 412, type: !7407, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{!1004, !6889, !1004}
!7409 = !DILocation(line: 412, column: 75, scope: !7406, inlinedAt: !7410)
!7410 = distinct !DILocation(line: 314, column: 23, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7412, file: !898, line: 291, column: 33)
!7412 = distinct !DILexicalBlock(scope: !7413, file: !898, line: 291, column: 9)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !898, line: 291, column: 9)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !898, line: 286, column: 55)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !898, line: 286, column: 5)
!7416 = distinct !DILexicalBlock(scope: !7402, file: !898, line: 286, column: 5)
!7417 = !DILocalVariable(name: "n", arg: 2, scope: !7406, file: !1790, line: 412, type: !1004)
!7418 = !DILocation(line: 412, column: 82, scope: !7406, inlinedAt: !7410)
!7419 = !DILocation(line: 412, column: 75, scope: !7406, inlinedAt: !7420)
!7420 = distinct !DILocation(line: 303, column: 20, scope: !7411)
!7421 = !DILocation(line: 412, column: 82, scope: !7406, inlinedAt: !7420)
!7422 = !DILocalVariable(name: "x", arg: 1, scope: !7423, file: !6628, line: 332, type: !1004)
!7423 = distinct !DISubprogram(name: "av_ceil_log2_c", scope: !6628, file: !6628, line: 332, type: !7424, isLocal: true, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!1004, !1004}
!7426 = !DILocation(line: 332, column: 92, scope: !7423, inlinedAt: !7427)
!7427 = distinct !DILocation(line: 283, column: 20, scope: !7402)
!7428 = !DILocalVariable(name: "s", arg: 1, scope: !7402, file: !898, line: 277, type: !1064)
!7429 = !DILocation(line: 277, column: 39, scope: !7402)
!7430 = !DILocalVariable(name: "group", arg: 2, scope: !7402, file: !898, line: 277, type: !1004)
!7431 = !DILocation(line: 277, column: 46, scope: !7402)
!7432 = !DILocalVariable(name: "amp", scope: !7402, file: !898, line: 279, type: !7433)
!7433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, size: 1024, align: 32, elements: !1824)
!7434 = !DILocation(line: 279, column: 18, scope: !7402)
!7435 = !DILocalVariable(name: "phs", scope: !7402, file: !898, line: 280, type: !7433)
!7436 = !DILocation(line: 280, column: 18, scope: !7402)
!7437 = !DILocalVariable(name: "diff", scope: !7402, file: !898, line: 281, type: !1005)
!7438 = !DILocation(line: 281, column: 18, scope: !7402)
!7439 = !DILocalVariable(name: "main_amp", scope: !7402, file: !898, line: 281, type: !1005)
!7440 = !DILocation(line: 281, column: 24, scope: !7402)
!7441 = !DILocalVariable(name: "shift", scope: !7402, file: !898, line: 281, type: !1005)
!7442 = !DILocation(line: 281, column: 34, scope: !7402)
!7443 = !DILocalVariable(name: "sf", scope: !7402, file: !898, line: 282, type: !1004)
!7444 = !DILocation(line: 282, column: 9, scope: !7402)
!7445 = !DILocalVariable(name: "sf_idx", scope: !7402, file: !898, line: 282, type: !1004)
!7446 = !DILocation(line: 282, column: 13, scope: !7402)
!7447 = !DILocalVariable(name: "ch", scope: !7402, file: !898, line: 282, type: !1004)
!7448 = !DILocation(line: 282, column: 21, scope: !7402)
!7449 = !DILocalVariable(name: "main_ch", scope: !7402, file: !898, line: 282, type: !1004)
!7450 = !DILocation(line: 282, column: 25, scope: !7402)
!7451 = !DILocalVariable(name: "freq", scope: !7402, file: !898, line: 282, type: !1004)
!7452 = !DILocation(line: 282, column: 34, scope: !7402)
!7453 = !DILocalVariable(name: "ch_nbits", scope: !7402, file: !898, line: 283, type: !1004)
!7454 = !DILocation(line: 283, column: 9, scope: !7402)
!7455 = !DILocation(line: 283, column: 35, scope: !7402)
!7456 = !DILocation(line: 283, column: 38, scope: !7402)
!7457 = !DILocation(line: 283, column: 20, scope: !7402)
!7458 = !DILocation(line: 334, column: 34, scope: !7423, inlinedAt: !7427)
!7459 = !DILocation(line: 334, column: 36, scope: !7423, inlinedAt: !7427)
!7460 = !DILocation(line: 334, column: 41, scope: !7423, inlinedAt: !7427)
!7461 = !DILocation(line: 334, column: 46, scope: !7423, inlinedAt: !7427)
!7462 = !DILocation(line: 334, column: 18, scope: !7423, inlinedAt: !7427)
!7463 = !DILocation(line: 334, column: 16, scope: !7423, inlinedAt: !7427)
!7464 = !DILocation(line: 286, column: 13, scope: !7416)
!7465 = !DILocation(line: 286, column: 10, scope: !7416)
!7466 = !DILocation(line: 286, column: 18, scope: !7467)
!7467 = !DILexicalBlockFile(scope: !7415, file: !898, discriminator: 1)
!7468 = !DILocation(line: 286, column: 28, scope: !7467)
!7469 = !DILocation(line: 286, column: 25, scope: !7467)
!7470 = !DILocation(line: 286, column: 21, scope: !7467)
!7471 = !DILocation(line: 286, column: 5, scope: !7467)
!7472 = !DILocation(line: 287, column: 20, scope: !7414)
!7473 = !DILocation(line: 287, column: 23, scope: !7414)
!7474 = !DILocation(line: 287, column: 35, scope: !7414)
!7475 = !DILocation(line: 287, column: 32, scope: !7414)
!7476 = !DILocation(line: 287, column: 44, scope: !7414)
!7477 = !DILocation(line: 287, column: 42, scope: !7414)
!7478 = !DILocation(line: 287, column: 48, scope: !7414)
!7479 = !DILocation(line: 287, column: 16, scope: !7414)
!7480 = !DILocation(line: 288, column: 45, scope: !7414)
!7481 = !DILocation(line: 288, column: 48, scope: !7414)
!7482 = !DILocation(line: 288, column: 32, scope: !7414)
!7483 = !DILocation(line: 288, column: 9, scope: !7414)
!7484 = !DILocation(line: 288, column: 25, scope: !7414)
!7485 = !DILocation(line: 288, column: 12, scope: !7414)
!7486 = !DILocation(line: 288, column: 43, scope: !7414)
!7487 = !DILocation(line: 291, column: 19, scope: !7413)
!7488 = !DILocation(line: 291, column: 14, scope: !7413)
!7489 = !DILocation(line: 292, column: 32, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7411, file: !898, line: 292, column: 17)
!7491 = !DILocation(line: 292, column: 35, scope: !7490)
!7492 = !DILocation(line: 292, column: 17, scope: !7490)
!7493 = !DILocation(line: 292, column: 39, scope: !7490)
!7494 = !DILocation(line: 292, column: 17, scope: !7411)
!7495 = !DILocation(line: 293, column: 24, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7490, file: !898, line: 292, column: 44)
!7497 = !DILocation(line: 293, column: 27, scope: !7496)
!7498 = !DILocation(line: 293, column: 17, scope: !7496)
!7499 = !DILocation(line: 294, column: 17, scope: !7496)
!7500 = !DILocation(line: 297, column: 31, scope: !7411)
!7501 = !DILocation(line: 297, column: 34, scope: !7411)
!7502 = !DILocation(line: 297, column: 58, scope: !7411)
!7503 = !DILocation(line: 297, column: 39, scope: !7411)
!7504 = !DILocation(line: 297, column: 20, scope: !7411)
!7505 = !DILocation(line: 297, column: 18, scope: !7411)
!7506 = !DILocation(line: 298, column: 17, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7411, file: !898, line: 298, column: 17)
!7508 = !DILocation(line: 298, column: 22, scope: !7507)
!7509 = !DILocation(line: 298, column: 17, scope: !7411)
!7510 = !DILocation(line: 299, column: 24, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !898, line: 298, column: 81)
!7512 = !DILocation(line: 299, column: 27, scope: !7511)
!7513 = !DILocation(line: 299, column: 17, scope: !7511)
!7514 = !DILocation(line: 300, column: 17, scope: !7511)
!7515 = !DILocation(line: 303, column: 31, scope: !7411)
!7516 = !DILocation(line: 303, column: 34, scope: !7411)
!7517 = !DILocation(line: 303, column: 38, scope: !7411)
!7518 = !DILocation(line: 303, column: 43, scope: !7411)
!7519 = !DILocation(line: 303, column: 20, scope: !7411)
!7520 = !DILocation(line: 414, column: 12, scope: !7406, inlinedAt: !7420)
!7521 = !DILocation(line: 414, column: 25, scope: !7522, inlinedAt: !7420)
!7522 = !DILexicalBlockFile(scope: !7406, file: !1790, discriminator: 1)
!7523 = !DILocation(line: 414, column: 28, scope: !7522, inlinedAt: !7420)
!7524 = !DILocation(line: 414, column: 16, scope: !7522, inlinedAt: !7420)
!7525 = !DILocation(line: 414, column: 12, scope: !7522, inlinedAt: !7420)
!7526 = !DILocation(line: 414, column: 12, scope: !7527, inlinedAt: !7420)
!7527 = !DILexicalBlockFile(scope: !7406, file: !1790, discriminator: 2)
!7528 = !DILocation(line: 414, column: 12, scope: !7529, inlinedAt: !7420)
!7529 = !DILexicalBlockFile(scope: !7406, file: !1790, discriminator: 3)
!7530 = !DILocation(line: 303, column: 66, scope: !7411)
!7531 = !DILocation(line: 303, column: 51, scope: !7411)
!7532 = !DILocation(line: 303, column: 49, scope: !7411)
!7533 = !DILocation(line: 303, column: 18, scope: !7411)
!7534 = !DILocation(line: 304, column: 17, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7411, file: !898, line: 304, column: 17)
!7536 = !DILocation(line: 304, column: 22, scope: !7535)
!7537 = !DILocation(line: 304, column: 17, scope: !7411)
!7538 = !DILocation(line: 305, column: 17, scope: !7535)
!7539 = !DILocation(line: 307, column: 21, scope: !7411)
!7540 = !DILocation(line: 307, column: 26, scope: !7411)
!7541 = !DILocation(line: 307, column: 18, scope: !7411)
!7542 = !DILocation(line: 308, column: 17, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7411, file: !898, line: 308, column: 17)
!7544 = !DILocation(line: 308, column: 30, scope: !7543)
!7545 = !DILocation(line: 308, column: 28, scope: !7543)
!7546 = !DILocation(line: 308, column: 22, scope: !7543)
!7547 = !DILocation(line: 308, column: 39, scope: !7543)
!7548 = !DILocation(line: 308, column: 42, scope: !7543)
!7549 = !DILocation(line: 308, column: 52, scope: !7543)
!7550 = !DILocation(line: 308, column: 56, scope: !7543)
!7551 = !DILocation(line: 308, column: 37, scope: !7543)
!7552 = !DILocation(line: 308, column: 17, scope: !7411)
!7553 = !DILocation(line: 309, column: 24, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7543, file: !898, line: 308, column: 61)
!7555 = !DILocation(line: 309, column: 27, scope: !7554)
!7556 = !DILocation(line: 309, column: 17, scope: !7554)
!7557 = !DILocation(line: 310, column: 17, scope: !7554)
!7558 = !DILocation(line: 314, column: 34, scope: !7411)
!7559 = !DILocation(line: 314, column: 37, scope: !7411)
!7560 = !DILocation(line: 314, column: 41, scope: !7411)
!7561 = !DILocation(line: 314, column: 23, scope: !7411)
!7562 = !DILocation(line: 414, column: 12, scope: !7406, inlinedAt: !7410)
!7563 = !DILocation(line: 414, column: 25, scope: !7522, inlinedAt: !7410)
!7564 = !DILocation(line: 414, column: 28, scope: !7522, inlinedAt: !7410)
!7565 = !DILocation(line: 414, column: 16, scope: !7522, inlinedAt: !7410)
!7566 = !DILocation(line: 414, column: 12, scope: !7522, inlinedAt: !7410)
!7567 = !DILocation(line: 414, column: 12, scope: !7527, inlinedAt: !7410)
!7568 = !DILocation(line: 414, column: 12, scope: !7529, inlinedAt: !7410)
!7569 = !DILocation(line: 314, column: 21, scope: !7411)
!7570 = !DILocation(line: 315, column: 35, scope: !7411)
!7571 = !DILocation(line: 315, column: 38, scope: !7411)
!7572 = !DILocation(line: 315, column: 24, scope: !7411)
!7573 = !DILocation(line: 316, column: 50, scope: !7411)
!7574 = !DILocation(line: 316, column: 63, scope: !7411)
!7575 = !DILocation(line: 316, column: 61, scope: !7411)
!7576 = !DILocation(line: 316, column: 55, scope: !7411)
!7577 = !DILocation(line: 316, column: 32, scope: !7411)
!7578 = !DILocation(line: 316, column: 19, scope: !7411)
!7579 = !DILocation(line: 316, column: 22, scope: !7411)
!7580 = !DILocation(line: 316, column: 17, scope: !7411)
!7581 = !DILocation(line: 317, column: 19, scope: !7411)
!7582 = !DILocation(line: 317, column: 22, scope: !7411)
!7583 = !DILocation(line: 317, column: 17, scope: !7411)
!7584 = !DILocation(line: 317, column: 36, scope: !7411)
!7585 = !DILocation(line: 315, column: 22, scope: !7411)
!7586 = !DILocation(line: 318, column: 28, scope: !7411)
!7587 = !DILocation(line: 318, column: 37, scope: !7411)
!7588 = !DILocation(line: 318, column: 44, scope: !7589)
!7589 = !DILexicalBlockFile(scope: !7411, file: !898, discriminator: 1)
!7590 = !DILocation(line: 318, column: 28, scope: !7589)
!7591 = !DILocation(line: 318, column: 28, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !7411, file: !898, discriminator: 2)
!7593 = !DILocation(line: 318, column: 28, scope: !7594)
!7594 = !DILexicalBlockFile(scope: !7411, file: !898, discriminator: 3)
!7595 = !DILocation(line: 318, column: 17, scope: !7594)
!7596 = !DILocation(line: 318, column: 13, scope: !7594)
!7597 = !DILocation(line: 318, column: 26, scope: !7594)
!7598 = !DILocation(line: 319, column: 38, scope: !7411)
!7599 = !DILocation(line: 319, column: 41, scope: !7411)
!7600 = !DILocation(line: 319, column: 28, scope: !7411)
!7601 = !DILocation(line: 319, column: 17, scope: !7411)
!7602 = !DILocation(line: 319, column: 13, scope: !7411)
!7603 = !DILocation(line: 319, column: 26, scope: !7411)
!7604 = !DILocation(line: 322, column: 21, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7411, file: !898, line: 322, column: 13)
!7606 = !DILocation(line: 322, column: 18, scope: !7605)
!7607 = !DILocation(line: 322, column: 26, scope: !7608)
!7608 = !DILexicalBlockFile(scope: !7609, file: !898, discriminator: 1)
!7609 = distinct !DILexicalBlock(scope: !7605, file: !898, line: 322, column: 13)
!7610 = !DILocation(line: 322, column: 31, scope: !7608)
!7611 = !DILocation(line: 322, column: 34, scope: !7608)
!7612 = !DILocation(line: 322, column: 29, scope: !7608)
!7613 = !DILocation(line: 322, column: 13, scope: !7608)
!7614 = !DILocation(line: 323, column: 21, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7616, file: !898, line: 323, column: 21)
!7616 = distinct !DILexicalBlock(scope: !7609, file: !898, line: 322, column: 57)
!7617 = !DILocation(line: 323, column: 27, scope: !7615)
!7618 = !DILocation(line: 323, column: 24, scope: !7615)
!7619 = !DILocation(line: 323, column: 21, scope: !7616)
!7620 = !DILocation(line: 324, column: 21, scope: !7615)
!7621 = !DILocation(line: 325, column: 32, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7616, file: !898, line: 325, column: 21)
!7623 = !DILocation(line: 325, column: 35, scope: !7622)
!7624 = !DILocation(line: 325, column: 21, scope: !7622)
!7625 = !DILocation(line: 325, column: 21, scope: !7616)
!7626 = !DILocation(line: 326, column: 35, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7622, file: !898, line: 325, column: 40)
!7628 = !DILocation(line: 326, column: 31, scope: !7627)
!7629 = !DILocation(line: 326, column: 57, scope: !7627)
!7630 = !DILocation(line: 326, column: 60, scope: !7627)
!7631 = !DILocation(line: 326, column: 46, scope: !7627)
!7632 = !DILocation(line: 326, column: 44, scope: !7627)
!7633 = !DILocation(line: 326, column: 25, scope: !7627)
!7634 = !DILocation(line: 326, column: 21, scope: !7627)
!7635 = !DILocation(line: 326, column: 29, scope: !7627)
!7636 = !DILocation(line: 327, column: 35, scope: !7627)
!7637 = !DILocation(line: 327, column: 31, scope: !7627)
!7638 = !DILocation(line: 327, column: 57, scope: !7627)
!7639 = !DILocation(line: 327, column: 60, scope: !7627)
!7640 = !DILocation(line: 327, column: 46, scope: !7627)
!7641 = !DILocation(line: 327, column: 44, scope: !7627)
!7642 = !DILocation(line: 327, column: 25, scope: !7627)
!7643 = !DILocation(line: 327, column: 21, scope: !7627)
!7644 = !DILocation(line: 327, column: 29, scope: !7627)
!7645 = !DILocation(line: 328, column: 17, scope: !7627)
!7646 = !DILocation(line: 329, column: 25, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7622, file: !898, line: 328, column: 24)
!7648 = !DILocation(line: 329, column: 21, scope: !7647)
!7649 = !DILocation(line: 329, column: 29, scope: !7647)
!7650 = !DILocation(line: 330, column: 25, scope: !7647)
!7651 = !DILocation(line: 330, column: 21, scope: !7647)
!7652 = !DILocation(line: 330, column: 29, scope: !7647)
!7653 = !DILocation(line: 332, column: 13, scope: !7616)
!7654 = !DILocation(line: 322, column: 53, scope: !7655)
!7655 = !DILexicalBlockFile(scope: !7609, file: !898, discriminator: 2)
!7656 = !DILocation(line: 322, column: 13, scope: !7655)
!7657 = distinct !{!7657, !7658}
!7658 = !DILocation(line: 322, column: 13, scope: !7411)
!7659 = !DILocation(line: 334, column: 21, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7411, file: !898, line: 334, column: 17)
!7661 = !DILocation(line: 334, column: 17, scope: !7660)
!7662 = !DILocation(line: 334, column: 17, scope: !7411)
!7663 = !DILocalVariable(name: "t", scope: !7664, file: !898, line: 336, type: !7665)
!7664 = distinct !DILexicalBlock(scope: !7660, file: !898, line: 334, column: 31)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64, align: 64)
!7666 = !DILocation(line: 336, column: 29, scope: !7664)
!7667 = !DILocation(line: 336, column: 43, scope: !7664)
!7668 = !DILocation(line: 336, column: 46, scope: !7664)
!7669 = !DILocation(line: 336, column: 34, scope: !7664)
!7670 = !DILocation(line: 336, column: 37, scope: !7664)
!7671 = !DILocation(line: 337, column: 30, scope: !7664)
!7672 = !DILocation(line: 337, column: 33, scope: !7664)
!7673 = !DILocation(line: 337, column: 40, scope: !7664)
!7674 = !DILocation(line: 337, column: 45, scope: !7664)
!7675 = !DILocation(line: 337, column: 17, scope: !7664)
!7676 = !DILocation(line: 337, column: 20, scope: !7664)
!7677 = !DILocation(line: 337, column: 27, scope: !7664)
!7678 = !DILocation(line: 339, column: 29, scope: !7664)
!7679 = !DILocation(line: 339, column: 42, scope: !7664)
!7680 = !DILocation(line: 339, column: 40, scope: !7664)
!7681 = !DILocation(line: 339, column: 34, scope: !7664)
!7682 = !DILocation(line: 339, column: 17, scope: !7664)
!7683 = !DILocation(line: 339, column: 20, scope: !7664)
!7684 = !DILocation(line: 339, column: 27, scope: !7664)
!7685 = !DILocation(line: 340, column: 30, scope: !7664)
!7686 = !DILocation(line: 340, column: 49, scope: !7664)
!7687 = !DILocation(line: 340, column: 47, scope: !7664)
!7688 = !DILocation(line: 340, column: 41, scope: !7664)
!7689 = !DILocation(line: 340, column: 57, scope: !7664)
!7690 = !DILocation(line: 340, column: 35, scope: !7664)
!7691 = !DILocation(line: 340, column: 66, scope: !7664)
!7692 = !DILocation(line: 340, column: 63, scope: !7664)
!7693 = !DILocation(line: 340, column: 29, scope: !7664)
!7694 = !DILocation(line: 340, column: 17, scope: !7664)
!7695 = !DILocation(line: 340, column: 20, scope: !7664)
!7696 = !DILocation(line: 340, column: 27, scope: !7664)
!7697 = !DILocation(line: 341, column: 36, scope: !7664)
!7698 = !DILocation(line: 341, column: 39, scope: !7664)
!7699 = !DILocation(line: 341, column: 46, scope: !7664)
!7700 = !DILocation(line: 341, column: 51, scope: !7664)
!7701 = !DILocation(line: 341, column: 33, scope: !7664)
!7702 = !DILocation(line: 341, column: 59, scope: !7664)
!7703 = !DILocation(line: 341, column: 62, scope: !7664)
!7704 = !DILocation(line: 341, column: 69, scope: !7664)
!7705 = !DILocation(line: 341, column: 57, scope: !7664)
!7706 = !DILocation(line: 341, column: 29, scope: !7664)
!7707 = !DILocation(line: 341, column: 17, scope: !7664)
!7708 = !DILocation(line: 341, column: 20, scope: !7664)
!7709 = !DILocation(line: 341, column: 27, scope: !7664)
!7710 = !DILocation(line: 343, column: 43, scope: !7664)
!7711 = !DILocation(line: 343, column: 46, scope: !7664)
!7712 = !DILocation(line: 343, column: 53, scope: !7664)
!7713 = !DILocation(line: 343, column: 58, scope: !7664)
!7714 = !DILocation(line: 343, column: 65, scope: !7664)
!7715 = !DILocation(line: 343, column: 70, scope: !7664)
!7716 = !DILocation(line: 343, column: 62, scope: !7664)
!7717 = !DILocation(line: 343, column: 25, scope: !7664)
!7718 = !DILocation(line: 344, column: 25, scope: !7664)
!7719 = !DILocation(line: 344, column: 28, scope: !7664)
!7720 = !DILocation(line: 344, column: 43, scope: !7664)
!7721 = !DILocation(line: 344, column: 41, scope: !7664)
!7722 = !DILocation(line: 344, column: 35, scope: !7664)
!7723 = !DILocation(line: 344, column: 53, scope: !7664)
!7724 = !DILocation(line: 344, column: 56, scope: !7664)
!7725 = !DILocation(line: 344, column: 51, scope: !7664)
!7726 = !DILocation(line: 344, column: 21, scope: !7664)
!7727 = !DILocation(line: 343, column: 23, scope: !7664)
!7728 = !DILocation(line: 346, column: 25, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7664, file: !898, line: 346, column: 17)
!7730 = !DILocation(line: 346, column: 22, scope: !7729)
!7731 = !DILocation(line: 346, column: 30, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !7733, file: !898, discriminator: 1)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !898, line: 346, column: 17)
!7734 = !DILocation(line: 346, column: 35, scope: !7732)
!7735 = !DILocation(line: 346, column: 38, scope: !7732)
!7736 = !DILocation(line: 346, column: 33, scope: !7732)
!7737 = !DILocation(line: 346, column: 17, scope: !7732)
!7738 = !DILocation(line: 347, column: 38, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7733, file: !898, line: 346, column: 55)
!7740 = !DILocation(line: 347, column: 34, scope: !7739)
!7741 = !DILocation(line: 347, column: 42, scope: !7739)
!7742 = !DILocation(line: 347, column: 53, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7739, file: !898, discriminator: 1)
!7744 = !DILocation(line: 347, column: 49, scope: !7743)
!7745 = !DILocation(line: 347, column: 34, scope: !7743)
!7746 = !DILocation(line: 347, column: 34, scope: !7747)
!7747 = !DILexicalBlockFile(scope: !7739, file: !898, discriminator: 2)
!7748 = !DILocation(line: 347, column: 34, scope: !7749)
!7749 = !DILexicalBlockFile(scope: !7739, file: !898, discriminator: 3)
!7750 = !DILocation(line: 347, column: 28, scope: !7749)
!7751 = !DILocation(line: 347, column: 21, scope: !7749)
!7752 = !DILocation(line: 347, column: 24, scope: !7749)
!7753 = !DILocation(line: 347, column: 32, scope: !7749)
!7754 = !DILocation(line: 348, column: 44, scope: !7739)
!7755 = !DILocation(line: 348, column: 40, scope: !7739)
!7756 = !DILocation(line: 348, column: 48, scope: !7739)
!7757 = !DILocation(line: 348, column: 38, scope: !7739)
!7758 = !DILocation(line: 348, column: 55, scope: !7739)
!7759 = !DILocation(line: 348, column: 53, scope: !7739)
!7760 = !DILocation(line: 348, column: 34, scope: !7739)
!7761 = !DILocation(line: 348, column: 28, scope: !7739)
!7762 = !DILocation(line: 348, column: 21, scope: !7739)
!7763 = !DILocation(line: 348, column: 24, scope: !7739)
!7764 = !DILocation(line: 348, column: 32, scope: !7739)
!7765 = !DILocation(line: 349, column: 17, scope: !7739)
!7766 = !DILocation(line: 346, column: 51, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !7733, file: !898, discriminator: 2)
!7768 = !DILocation(line: 346, column: 17, scope: !7767)
!7769 = distinct !{!7769, !7770}
!7770 = !DILocation(line: 346, column: 17, scope: !7664)
!7771 = !DILocation(line: 350, column: 13, scope: !7664)
!7772 = !DILocation(line: 351, column: 9, scope: !7411)
!7773 = !DILocation(line: 291, column: 29, scope: !7774)
!7774 = !DILexicalBlockFile(scope: !7412, file: !898, discriminator: 1)
!7775 = !DILocation(line: 291, column: 9, scope: !7774)
!7776 = distinct !{!7776, !7777}
!7777 = !DILocation(line: 291, column: 9, scope: !7414)
!7778 = !DILocation(line: 353, column: 45, scope: !7414)
!7779 = !DILocation(line: 353, column: 48, scope: !7414)
!7780 = !DILocation(line: 353, column: 32, scope: !7414)
!7781 = !DILocation(line: 353, column: 9, scope: !7414)
!7782 = !DILocation(line: 353, column: 25, scope: !7414)
!7783 = !DILocation(line: 353, column: 12, scope: !7414)
!7784 = !DILocation(line: 353, column: 43, scope: !7414)
!7785 = !DILocation(line: 354, column: 5, scope: !7414)
!7786 = !DILocation(line: 286, column: 41, scope: !7787)
!7787 = !DILexicalBlockFile(scope: !7415, file: !898, discriminator: 2)
!7788 = !DILocation(line: 286, column: 38, scope: !7787)
!7789 = !DILocation(line: 286, column: 5, scope: !7787)
!7790 = distinct !{!7790, !7791}
!7791 = !DILocation(line: 286, column: 5, scope: !7402)
!7792 = !DILocation(line: 356, column: 5, scope: !7402)
!7793 = !DILocation(line: 357, column: 1, scope: !7402)
!7794 = distinct !DISubprogram(name: "get_bits_count", scope: !1790, file: !1790, line: 219, type: !7795, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!1004, !7797}
!7797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7798, size: 64, align: 64)
!7798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1789)
!7799 = !DILocalVariable(name: "s", arg: 1, scope: !7794, file: !1790, line: 219, type: !7797)
!7800 = !DILocation(line: 219, column: 55, scope: !7794)
!7801 = !DILocation(line: 224, column: 12, scope: !7794)
!7802 = !DILocation(line: 224, column: 15, scope: !7794)
!7803 = !DILocation(line: 224, column: 5, scope: !7794)
!7804 = distinct !DISubprogram(name: "parse_vlc", scope: !898, file: !898, line: 268, type: !7805, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{!1004, !6889, !7807, !1004}
!7807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7808, size: 64, align: 64)
!7808 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !7809, line: 30, baseType: !7810)
!7809 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !7809, line: 26, size: 192, align: 64, elements: !7811)
!7811 = !{!7812, !7813, !7816, !7817}
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !7810, file: !7809, line: 27, baseType: !1004, size: 32, align: 32)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !7810, file: !7809, line: 28, baseType: !7814, size: 64, align: 64, offset: 64)
!7814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7815, size: 64, align: 64)
!7815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4040, size: 32, align: 16, elements: !2007)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !7810, file: !7809, line: 29, baseType: !1004, size: 32, align: 32, offset: 128)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !7810, file: !7809, line: 29, baseType: !1004, size: 32, align: 32, offset: 160)
!7818 = !DILocalVariable(name: "s", arg: 1, scope: !7819, file: !1790, line: 762, type: !6889)
!7819 = distinct !DISubprogram(name: "get_vlc2", scope: !1790, file: !1790, line: 762, type: !7820, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!7820 = !DISubroutineType(types: !7821)
!7821 = !{!1004, !6889, !7814, !1004, !1004}
!7822 = !DILocation(line: 762, column: 74, scope: !7819, inlinedAt: !7823)
!7823 = distinct !DILocation(line: 270, column: 13, scope: !7804)
!7824 = !DILocalVariable(name: "table", arg: 2, scope: !7819, file: !1790, line: 762, type: !7814)
!7825 = !DILocation(line: 762, column: 87, scope: !7819, inlinedAt: !7823)
!7826 = !DILocalVariable(name: "bits", arg: 3, scope: !7819, file: !1790, line: 763, type: !1004)
!7827 = !DILocation(line: 763, column: 42, scope: !7819, inlinedAt: !7823)
!7828 = !DILocalVariable(name: "max_depth", arg: 4, scope: !7819, file: !1790, line: 763, type: !1004)
!7829 = !DILocation(line: 763, column: 52, scope: !7819, inlinedAt: !7823)
!7830 = !DILocalVariable(name: "code", scope: !7819, file: !1790, line: 783, type: !1004)
!7831 = !DILocation(line: 783, column: 9, scope: !7819, inlinedAt: !7823)
!7832 = !DILocalVariable(name: "re_index", scope: !7819, file: !1790, line: 785, type: !1005)
!7833 = !DILocation(line: 785, column: 18, scope: !7819, inlinedAt: !7823)
!7834 = !DILocalVariable(name: "re_cache", scope: !7819, file: !1790, line: 785, type: !1005)
!7835 = !DILocation(line: 785, column: 78, scope: !7819, inlinedAt: !7823)
!7836 = !DILocalVariable(name: "re_size_plus8", scope: !7819, file: !1790, line: 785, type: !1005)
!7837 = !DILocation(line: 785, column: 101, scope: !7819, inlinedAt: !7823)
!7838 = !DILocalVariable(name: "n", scope: !7839, file: !1790, line: 788, type: !1004)
!7839 = distinct !DILexicalBlock(scope: !7819, file: !1790, line: 788, column: 8)
!7840 = !DILocation(line: 788, column: 14, scope: !7839, inlinedAt: !7823)
!7841 = !DILocalVariable(name: "nb_bits", scope: !7839, file: !1790, line: 788, type: !1004)
!7842 = !DILocation(line: 788, column: 17, scope: !7839, inlinedAt: !7823)
!7843 = !DILocalVariable(name: "index", scope: !7839, file: !1790, line: 788, type: !1005)
!7844 = !DILocation(line: 788, column: 39, scope: !7839, inlinedAt: !7823)
!7845 = !DILocalVariable(name: "s", arg: 1, scope: !7804, file: !898, line: 268, type: !6889)
!7846 = !DILocation(line: 268, column: 44, scope: !7804)
!7847 = !DILocalVariable(name: "vlc", arg: 2, scope: !7804, file: !898, line: 268, type: !7807)
!7848 = !DILocation(line: 268, column: 52, scope: !7804)
!7849 = !DILocalVariable(name: "max_depth", arg: 3, scope: !7804, file: !898, line: 268, type: !1004)
!7850 = !DILocation(line: 268, column: 61, scope: !7804)
!7851 = !DILocalVariable(name: "v", scope: !7804, file: !898, line: 270, type: !1004)
!7852 = !DILocation(line: 270, column: 9, scope: !7804)
!7853 = !DILocation(line: 270, column: 22, scope: !7804)
!7854 = !DILocation(line: 270, column: 25, scope: !7804)
!7855 = !DILocation(line: 270, column: 30, scope: !7804)
!7856 = !DILocation(line: 270, column: 37, scope: !7804)
!7857 = !DILocation(line: 270, column: 42, scope: !7804)
!7858 = !DILocation(line: 270, column: 48, scope: !7804)
!7859 = !DILocation(line: 270, column: 13, scope: !7804)
!7860 = !DILocation(line: 785, column: 30, scope: !7819, inlinedAt: !7823)
!7861 = !DILocation(line: 785, column: 34, scope: !7819, inlinedAt: !7823)
!7862 = !DILocation(line: 785, column: 118, scope: !7819, inlinedAt: !7823)
!7863 = !DILocation(line: 785, column: 122, scope: !7819, inlinedAt: !7823)
!7864 = !DILocation(line: 786, column: 49, scope: !7819, inlinedAt: !7823)
!7865 = !DILocation(line: 786, column: 53, scope: !7819, inlinedAt: !7823)
!7866 = !DILocation(line: 786, column: 63, scope: !7819, inlinedAt: !7823)
!7867 = !DILocation(line: 786, column: 72, scope: !7819, inlinedAt: !7823)
!7868 = !DILocation(line: 786, column: 60, scope: !7819, inlinedAt: !7823)
!7869 = !DILocation(line: 786, column: 81, scope: !7819, inlinedAt: !7823)
!7870 = !DILocation(line: 786, column: 88, scope: !7819, inlinedAt: !7823)
!7871 = !DILocation(line: 786, column: 97, scope: !7819, inlinedAt: !7823)
!7872 = !DILocation(line: 786, column: 84, scope: !7819, inlinedAt: !7823)
!7873 = !DILocation(line: 786, column: 14, scope: !7819, inlinedAt: !7823)
!7874 = !DILocation(line: 788, column: 66, scope: !7875, inlinedAt: !7823)
!7875 = !DILexicalBlockFile(scope: !7839, file: !1790, discriminator: 1)
!7876 = !DILocation(line: 788, column: 76, scope: !7875, inlinedAt: !7823)
!7877 = !DILocation(line: 788, column: 54, scope: !7875, inlinedAt: !7823)
!7878 = !DILocation(line: 788, column: 52, scope: !7875, inlinedAt: !7823)
!7879 = !DILocation(line: 788, column: 96, scope: !7875, inlinedAt: !7823)
!7880 = !DILocation(line: 788, column: 90, scope: !7875, inlinedAt: !7823)
!7881 = !DILocation(line: 788, column: 88, scope: !7875, inlinedAt: !7823)
!7882 = !DILocation(line: 788, column: 117, scope: !7875, inlinedAt: !7823)
!7883 = !DILocation(line: 788, column: 111, scope: !7875, inlinedAt: !7823)
!7884 = !DILocation(line: 788, column: 109, scope: !7875, inlinedAt: !7823)
!7885 = !DILocation(line: 788, column: 132, scope: !7875, inlinedAt: !7823)
!7886 = !DILocation(line: 788, column: 142, scope: !7875, inlinedAt: !7823)
!7887 = !DILocation(line: 788, column: 146, scope: !7875, inlinedAt: !7823)
!7888 = !DILocation(line: 788, column: 149, scope: !7889, inlinedAt: !7823)
!7889 = !DILexicalBlockFile(scope: !7890, file: !1790, discriminator: 2)
!7890 = distinct !DILexicalBlock(scope: !7839, file: !1790, line: 788, column: 132)
!7891 = !DILocation(line: 788, column: 151, scope: !7889, inlinedAt: !7823)
!7892 = !DILocation(line: 788, column: 132, scope: !7889, inlinedAt: !7823)
!7893 = !DILocation(line: 788, column: 171, scope: !7894, inlinedAt: !7823)
!7894 = !DILexicalBlockFile(scope: !7895, file: !1790, discriminator: 3)
!7895 = distinct !DILexicalBlock(scope: !7890, file: !1790, line: 788, column: 156)
!7896 = !DILocation(line: 788, column: 189, scope: !7894, inlinedAt: !7823)
!7897 = !DILocation(line: 788, column: 201, scope: !7894, inlinedAt: !7823)
!7898 = !DILocation(line: 788, column: 198, scope: !7894, inlinedAt: !7823)
!7899 = !DILocation(line: 788, column: 186, scope: !7894, inlinedAt: !7823)
!7900 = !DILocation(line: 788, column: 170, scope: !7894, inlinedAt: !7823)
!7901 = !DILocation(line: 788, column: 211, scope: !7902, inlinedAt: !7823)
!7902 = !DILexicalBlockFile(scope: !7895, file: !1790, discriminator: 4)
!7903 = !DILocation(line: 788, column: 223, scope: !7902, inlinedAt: !7823)
!7904 = !DILocation(line: 788, column: 220, scope: !7902, inlinedAt: !7823)
!7905 = !DILocation(line: 788, column: 170, scope: !7902, inlinedAt: !7823)
!7906 = !DILocation(line: 788, column: 233, scope: !7907, inlinedAt: !7823)
!7907 = !DILexicalBlockFile(scope: !7895, file: !1790, discriminator: 5)
!7908 = !DILocation(line: 788, column: 170, scope: !7907, inlinedAt: !7823)
!7909 = !DILocation(line: 788, column: 170, scope: !7910, inlinedAt: !7823)
!7910 = !DILexicalBlockFile(scope: !7895, file: !1790, discriminator: 6)
!7911 = !DILocation(line: 788, column: 167, scope: !7910, inlinedAt: !7823)
!7912 = !DILocation(line: 788, column: 294, scope: !7910, inlinedAt: !7823)
!7913 = !DILocation(line: 788, column: 298, scope: !7910, inlinedAt: !7823)
!7914 = !DILocation(line: 788, column: 308, scope: !7910, inlinedAt: !7823)
!7915 = !DILocation(line: 788, column: 317, scope: !7910, inlinedAt: !7823)
!7916 = !DILocation(line: 788, column: 305, scope: !7910, inlinedAt: !7823)
!7917 = !DILocation(line: 788, column: 326, scope: !7910, inlinedAt: !7823)
!7918 = !DILocation(line: 788, column: 333, scope: !7910, inlinedAt: !7823)
!7919 = !DILocation(line: 788, column: 342, scope: !7910, inlinedAt: !7823)
!7920 = !DILocation(line: 788, column: 329, scope: !7910, inlinedAt: !7823)
!7921 = !DILocation(line: 788, column: 259, scope: !7910, inlinedAt: !7823)
!7922 = !DILocation(line: 788, column: 359, scope: !7910, inlinedAt: !7823)
!7923 = !DILocation(line: 788, column: 358, scope: !7910, inlinedAt: !7823)
!7924 = !DILocation(line: 788, column: 356, scope: !7910, inlinedAt: !7823)
!7925 = !DILocation(line: 788, column: 382, scope: !7910, inlinedAt: !7823)
!7926 = !DILocation(line: 788, column: 392, scope: !7910, inlinedAt: !7823)
!7927 = !DILocation(line: 788, column: 370, scope: !7910, inlinedAt: !7823)
!7928 = !DILocation(line: 788, column: 403, scope: !7910, inlinedAt: !7823)
!7929 = !DILocation(line: 788, column: 401, scope: !7910, inlinedAt: !7823)
!7930 = !DILocation(line: 788, column: 368, scope: !7910, inlinedAt: !7823)
!7931 = !DILocation(line: 788, column: 422, scope: !7910, inlinedAt: !7823)
!7932 = !DILocation(line: 788, column: 416, scope: !7910, inlinedAt: !7823)
!7933 = !DILocation(line: 788, column: 414, scope: !7910, inlinedAt: !7823)
!7934 = !DILocation(line: 788, column: 443, scope: !7910, inlinedAt: !7823)
!7935 = !DILocation(line: 788, column: 437, scope: !7910, inlinedAt: !7823)
!7936 = !DILocation(line: 788, column: 435, scope: !7910, inlinedAt: !7823)
!7937 = !DILocation(line: 788, column: 458, scope: !7910, inlinedAt: !7823)
!7938 = !DILocation(line: 788, column: 468, scope: !7910, inlinedAt: !7823)
!7939 = !DILocation(line: 788, column: 472, scope: !7910, inlinedAt: !7823)
!7940 = !DILocation(line: 788, column: 475, scope: !7941, inlinedAt: !7823)
!7941 = !DILexicalBlockFile(scope: !7942, file: !1790, discriminator: 7)
!7942 = distinct !DILexicalBlock(scope: !7895, file: !1790, line: 788, column: 458)
!7943 = !DILocation(line: 788, column: 477, scope: !7941, inlinedAt: !7823)
!7944 = !DILocation(line: 788, column: 458, scope: !7941, inlinedAt: !7823)
!7945 = !DILocation(line: 788, column: 497, scope: !7946, inlinedAt: !7823)
!7946 = !DILexicalBlockFile(scope: !7947, file: !1790, discriminator: 8)
!7947 = distinct !DILexicalBlock(scope: !7942, file: !1790, line: 788, column: 482)
!7948 = !DILocation(line: 788, column: 515, scope: !7946, inlinedAt: !7823)
!7949 = !DILocation(line: 788, column: 527, scope: !7946, inlinedAt: !7823)
!7950 = !DILocation(line: 788, column: 524, scope: !7946, inlinedAt: !7823)
!7951 = !DILocation(line: 788, column: 512, scope: !7946, inlinedAt: !7823)
!7952 = !DILocation(line: 788, column: 496, scope: !7946, inlinedAt: !7823)
!7953 = !DILocation(line: 788, column: 540, scope: !7954, inlinedAt: !7823)
!7954 = !DILexicalBlockFile(scope: !7947, file: !1790, discriminator: 9)
!7955 = !DILocation(line: 788, column: 552, scope: !7954, inlinedAt: !7823)
!7956 = !DILocation(line: 788, column: 549, scope: !7954, inlinedAt: !7823)
!7957 = !DILocation(line: 788, column: 496, scope: !7954, inlinedAt: !7823)
!7958 = !DILocation(line: 788, column: 565, scope: !7959, inlinedAt: !7823)
!7959 = !DILexicalBlockFile(scope: !7947, file: !1790, discriminator: 10)
!7960 = !DILocation(line: 788, column: 496, scope: !7959, inlinedAt: !7823)
!7961 = !DILocation(line: 788, column: 496, scope: !7962, inlinedAt: !7823)
!7962 = !DILexicalBlockFile(scope: !7947, file: !1790, discriminator: 11)
!7963 = !DILocation(line: 788, column: 493, scope: !7962, inlinedAt: !7823)
!7964 = !DILocation(line: 788, column: 626, scope: !7962, inlinedAt: !7823)
!7965 = !DILocation(line: 788, column: 630, scope: !7962, inlinedAt: !7823)
!7966 = !DILocation(line: 788, column: 640, scope: !7962, inlinedAt: !7823)
!7967 = !DILocation(line: 788, column: 649, scope: !7962, inlinedAt: !7823)
!7968 = !DILocation(line: 788, column: 637, scope: !7962, inlinedAt: !7823)
!7969 = !DILocation(line: 788, column: 658, scope: !7962, inlinedAt: !7823)
!7970 = !DILocation(line: 788, column: 665, scope: !7962, inlinedAt: !7823)
!7971 = !DILocation(line: 788, column: 674, scope: !7962, inlinedAt: !7823)
!7972 = !DILocation(line: 788, column: 661, scope: !7962, inlinedAt: !7823)
!7973 = !DILocation(line: 788, column: 591, scope: !7962, inlinedAt: !7823)
!7974 = !DILocation(line: 788, column: 691, scope: !7962, inlinedAt: !7823)
!7975 = !DILocation(line: 788, column: 690, scope: !7962, inlinedAt: !7823)
!7976 = !DILocation(line: 788, column: 688, scope: !7962, inlinedAt: !7823)
!7977 = !DILocation(line: 788, column: 714, scope: !7962, inlinedAt: !7823)
!7978 = !DILocation(line: 788, column: 724, scope: !7962, inlinedAt: !7823)
!7979 = !DILocation(line: 788, column: 702, scope: !7962, inlinedAt: !7823)
!7980 = !DILocation(line: 788, column: 735, scope: !7962, inlinedAt: !7823)
!7981 = !DILocation(line: 788, column: 733, scope: !7962, inlinedAt: !7823)
!7982 = !DILocation(line: 788, column: 700, scope: !7962, inlinedAt: !7823)
!7983 = !DILocation(line: 788, column: 754, scope: !7962, inlinedAt: !7823)
!7984 = !DILocation(line: 788, column: 748, scope: !7962, inlinedAt: !7823)
!7985 = !DILocation(line: 788, column: 746, scope: !7962, inlinedAt: !7823)
!7986 = !DILocation(line: 788, column: 775, scope: !7962, inlinedAt: !7823)
!7987 = !DILocation(line: 788, column: 769, scope: !7962, inlinedAt: !7823)
!7988 = !DILocation(line: 788, column: 767, scope: !7962, inlinedAt: !7823)
!7989 = !DILocation(line: 788, column: 786, scope: !7962, inlinedAt: !7823)
!7990 = !DILocation(line: 788, column: 788, scope: !7991, inlinedAt: !7823)
!7991 = !DILexicalBlockFile(scope: !7895, file: !1790, discriminator: 12)
!7992 = !DILocation(line: 788, column: 809, scope: !7993, inlinedAt: !7823)
!7993 = !DILexicalBlockFile(scope: !7994, file: !1790, discriminator: 14)
!7994 = distinct !DILexicalBlock(scope: !7839, file: !1790, line: 788, column: 793)
!7995 = !DILocation(line: 788, column: 804, scope: !7993, inlinedAt: !7823)
!7996 = !DILocation(line: 788, column: 826, scope: !7993, inlinedAt: !7823)
!7997 = !DILocation(line: 788, column: 844, scope: !7993, inlinedAt: !7823)
!7998 = !DILocation(line: 788, column: 856, scope: !7993, inlinedAt: !7823)
!7999 = !DILocation(line: 788, column: 853, scope: !7993, inlinedAt: !7823)
!8000 = !DILocation(line: 788, column: 841, scope: !7993, inlinedAt: !7823)
!8001 = !DILocation(line: 788, column: 825, scope: !7993, inlinedAt: !7823)
!8002 = !DILocation(line: 788, column: 863, scope: !8003, inlinedAt: !7823)
!8003 = !DILexicalBlockFile(scope: !7994, file: !1790, discriminator: 15)
!8004 = !DILocation(line: 788, column: 875, scope: !8003, inlinedAt: !7823)
!8005 = !DILocation(line: 788, column: 872, scope: !8003, inlinedAt: !7823)
!8006 = !DILocation(line: 788, column: 825, scope: !8003, inlinedAt: !7823)
!8007 = !DILocation(line: 788, column: 882, scope: !8008, inlinedAt: !7823)
!8008 = !DILexicalBlockFile(scope: !7994, file: !1790, discriminator: 16)
!8009 = !DILocation(line: 788, column: 825, scope: !8008, inlinedAt: !7823)
!8010 = !DILocation(line: 788, column: 825, scope: !8011, inlinedAt: !7823)
!8011 = !DILexicalBlockFile(scope: !7994, file: !1790, discriminator: 17)
!8012 = !DILocation(line: 788, column: 822, scope: !8011, inlinedAt: !7823)
!8013 = !DILocation(line: 790, column: 18, scope: !7819, inlinedAt: !7823)
!8014 = !DILocation(line: 790, column: 6, scope: !7819, inlinedAt: !7823)
!8015 = !DILocation(line: 790, column: 10, scope: !7819, inlinedAt: !7823)
!8016 = !DILocation(line: 790, column: 16, scope: !7819, inlinedAt: !7823)
!8017 = !DILocation(line: 792, column: 12, scope: !7819, inlinedAt: !7823)
!8018 = !DILocation(line: 271, column: 9, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7804, file: !898, line: 271, column: 9)
!8020 = !DILocation(line: 271, column: 11, scope: !8019)
!8021 = !DILocation(line: 271, column: 9, scope: !7804)
!8022 = !DILocation(line: 272, column: 16, scope: !8019)
!8023 = !DILocation(line: 272, column: 18, scope: !8019)
!8024 = !DILocation(line: 272, column: 9, scope: !8019)
!8025 = !DILocation(line: 274, column: 21, scope: !7804)
!8026 = !DILocation(line: 274, column: 33, scope: !7804)
!8027 = !DILocation(line: 274, column: 24, scope: !7804)
!8028 = !DILocation(line: 274, column: 39, scope: !7804)
!8029 = !DILocation(line: 274, column: 12, scope: !8030)
!8030 = !DILexicalBlockFile(scope: !7804, file: !898, discriminator: 1)
!8031 = !DILocation(line: 274, column: 5, scope: !7804)
!8032 = !DILocation(line: 275, column: 1, scope: !7804)
!8033 = distinct !DISubprogram(name: "get_bits1", scope: !1790, file: !1790, line: 487, type: !8034, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!1005, !6889}
!8036 = !DILocalVariable(name: "s", arg: 1, scope: !8033, file: !1790, line: 487, type: !6889)
!8037 = !DILocation(line: 487, column: 53, scope: !8033)
!8038 = !DILocalVariable(name: "index", scope: !8033, file: !1790, line: 499, type: !1005)
!8039 = !DILocation(line: 499, column: 18, scope: !8033)
!8040 = !DILocation(line: 499, column: 26, scope: !8033)
!8041 = !DILocation(line: 499, column: 29, scope: !8033)
!8042 = !DILocalVariable(name: "result", scope: !8033, file: !1790, line: 500, type: !1019)
!8043 = !DILocation(line: 500, column: 13, scope: !8033)
!8044 = !DILocation(line: 500, column: 32, scope: !8033)
!8045 = !DILocation(line: 500, column: 38, scope: !8033)
!8046 = !DILocation(line: 500, column: 22, scope: !8033)
!8047 = !DILocation(line: 500, column: 25, scope: !8033)
!8048 = !DILocation(line: 502, column: 16, scope: !8033)
!8049 = !DILocation(line: 502, column: 22, scope: !8033)
!8050 = !DILocation(line: 502, column: 12, scope: !8033)
!8051 = !DILocation(line: 503, column: 12, scope: !8033)
!8052 = !DILocation(line: 509, column: 9, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8033, file: !1790, line: 509, column: 9)
!8054 = !DILocation(line: 509, column: 12, scope: !8053)
!8055 = !DILocation(line: 509, column: 20, scope: !8053)
!8056 = !DILocation(line: 509, column: 23, scope: !8053)
!8057 = !DILocation(line: 509, column: 18, scope: !8053)
!8058 = !DILocation(line: 509, column: 9, scope: !8033)
!8059 = !DILocation(line: 511, column: 14, scope: !8053)
!8060 = !DILocation(line: 511, column: 9, scope: !8053)
!8061 = !DILocation(line: 512, column: 16, scope: !8033)
!8062 = !DILocation(line: 512, column: 5, scope: !8033)
!8063 = !DILocation(line: 512, column: 8, scope: !8033)
!8064 = !DILocation(line: 512, column: 14, scope: !8033)
!8065 = !DILocation(line: 514, column: 12, scope: !8033)
!8066 = !DILocation(line: 514, column: 5, scope: !8033)
!8067 = distinct !DISubprogram(name: "parse_scale_factors", scope: !898, file: !898, line: 415, type: !8068, isLocal: true, isDefinition: true, scopeLine: 416, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!1004, !1064, !1195}
!8070 = !DILocalVariable(name: "s", arg: 1, scope: !8067, file: !898, line: 415, type: !1064)
!8071 = !DILocation(line: 415, column: 47, scope: !8067)
!8072 = !DILocalVariable(name: "scf", arg: 2, scope: !8067, file: !898, line: 415, type: !1195)
!8073 = !DILocation(line: 415, column: 59, scope: !8067)
!8074 = !DILocalVariable(name: "i", scope: !8067, file: !898, line: 417, type: !1004)
!8075 = !DILocation(line: 417, column: 9, scope: !8067)
!8076 = !DILocalVariable(name: "sf", scope: !8067, file: !898, line: 417, type: !1004)
!8077 = !DILocation(line: 417, column: 12, scope: !8067)
!8078 = !DILocalVariable(name: "prev", scope: !8067, file: !898, line: 417, type: !1004)
!8079 = !DILocation(line: 417, column: 16, scope: !8067)
!8080 = !DILocalVariable(name: "next", scope: !8067, file: !898, line: 417, type: !1004)
!8081 = !DILocation(line: 417, column: 22, scope: !8067)
!8082 = !DILocalVariable(name: "dist", scope: !8067, file: !898, line: 417, type: !1004)
!8083 = !DILocation(line: 417, column: 28, scope: !8067)
!8084 = !DILocation(line: 420, column: 22, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8067, file: !898, line: 420, column: 9)
!8086 = !DILocation(line: 420, column: 25, scope: !8085)
!8087 = !DILocation(line: 420, column: 9, scope: !8085)
!8088 = !DILocation(line: 420, column: 9, scope: !8067)
!8089 = !DILocation(line: 421, column: 9, scope: !8085)
!8090 = !DILocation(line: 424, column: 23, scope: !8067)
!8091 = !DILocation(line: 424, column: 26, scope: !8067)
!8092 = !DILocation(line: 424, column: 12, scope: !8067)
!8093 = !DILocation(line: 424, column: 10, scope: !8067)
!8094 = !DILocation(line: 426, column: 13, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8067, file: !898, line: 426, column: 5)
!8096 = !DILocation(line: 426, column: 10, scope: !8095)
!8097 = !DILocation(line: 426, column: 18, scope: !8098)
!8098 = !DILexicalBlockFile(scope: !8099, file: !898, discriminator: 1)
!8099 = distinct !DILexicalBlock(scope: !8095, file: !898, line: 426, column: 5)
!8100 = !DILocation(line: 426, column: 21, scope: !8098)
!8101 = !DILocation(line: 426, column: 5, scope: !8098)
!8102 = !DILocation(line: 427, column: 19, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8099, file: !898, line: 426, column: 38)
!8104 = !DILocation(line: 427, column: 13, scope: !8103)
!8105 = !DILocation(line: 427, column: 9, scope: !8103)
!8106 = !DILocation(line: 427, column: 17, scope: !8103)
!8107 = !DILocation(line: 429, column: 26, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8103, file: !898, line: 429, column: 13)
!8109 = !DILocation(line: 429, column: 29, scope: !8108)
!8110 = !DILocation(line: 429, column: 13, scope: !8108)
!8111 = !DILocation(line: 429, column: 13, scope: !8103)
!8112 = !DILocation(line: 430, column: 13, scope: !8108)
!8113 = !DILocation(line: 433, column: 27, scope: !8103)
!8114 = !DILocation(line: 433, column: 30, scope: !8103)
!8115 = !DILocation(line: 433, column: 16, scope: !8103)
!8116 = !DILocation(line: 433, column: 60, scope: !8103)
!8117 = !DILocation(line: 433, column: 14, scope: !8103)
!8118 = !DILocation(line: 434, column: 13, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8103, file: !898, line: 434, column: 13)
!8120 = !DILocation(line: 434, column: 24, scope: !8119)
!8121 = !DILocation(line: 434, column: 22, scope: !8119)
!8122 = !DILocation(line: 434, column: 18, scope: !8119)
!8123 = !DILocation(line: 434, column: 13, scope: !8103)
!8124 = !DILocation(line: 435, column: 20, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8119, file: !898, line: 434, column: 28)
!8126 = !DILocation(line: 435, column: 23, scope: !8125)
!8127 = !DILocation(line: 435, column: 13, scope: !8125)
!8128 = !DILocation(line: 436, column: 13, scope: !8125)
!8129 = !DILocation(line: 439, column: 26, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8103, file: !898, line: 439, column: 13)
!8131 = !DILocation(line: 439, column: 29, scope: !8130)
!8132 = !DILocation(line: 439, column: 13, scope: !8130)
!8133 = !DILocation(line: 439, column: 13, scope: !8103)
!8134 = !DILocation(line: 440, column: 13, scope: !8130)
!8135 = !DILocation(line: 443, column: 27, scope: !8103)
!8136 = !DILocation(line: 443, column: 30, scope: !8103)
!8137 = !DILocation(line: 443, column: 16, scope: !8103)
!8138 = !DILocation(line: 443, column: 14, scope: !8103)
!8139 = !DILocation(line: 445, column: 13, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8103, file: !898, line: 445, column: 13)
!8141 = !DILocation(line: 445, column: 18, scope: !8140)
!8142 = !DILocation(line: 445, column: 13, scope: !8103)
!8143 = !DILocation(line: 446, column: 20, scope: !8140)
!8144 = !DILocation(line: 446, column: 29, scope: !8140)
!8145 = !DILocation(line: 446, column: 34, scope: !8140)
!8146 = !DILocation(line: 446, column: 39, scope: !8140)
!8147 = !DILocation(line: 446, column: 25, scope: !8140)
!8148 = !DILocation(line: 446, column: 18, scope: !8140)
!8149 = !DILocation(line: 446, column: 13, scope: !8140)
!8150 = !DILocation(line: 448, column: 20, scope: !8140)
!8151 = !DILocation(line: 448, column: 29, scope: !8140)
!8152 = !DILocation(line: 448, column: 34, scope: !8140)
!8153 = !DILocation(line: 448, column: 25, scope: !8140)
!8154 = !DILocation(line: 448, column: 18, scope: !8140)
!8155 = !DILocation(line: 451, column: 17, scope: !8103)
!8156 = !DILocation(line: 451, column: 9, scope: !8103)
!8157 = !DILocation(line: 453, column: 17, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !898, line: 453, column: 17)
!8159 = distinct !DILexicalBlock(scope: !8103, file: !898, line: 451, column: 23)
!8160 = !DILocation(line: 453, column: 24, scope: !8158)
!8161 = !DILocation(line: 453, column: 22, scope: !8158)
!8162 = !DILocation(line: 453, column: 17, scope: !8159)
!8163 = !DILocation(line: 454, column: 31, scope: !8158)
!8164 = !DILocation(line: 454, column: 40, scope: !8158)
!8165 = !DILocation(line: 454, column: 47, scope: !8158)
!8166 = !DILocation(line: 454, column: 45, scope: !8158)
!8167 = !DILocation(line: 454, column: 53, scope: !8158)
!8168 = !DILocation(line: 454, column: 36, scope: !8158)
!8169 = !DILocation(line: 454, column: 21, scope: !8158)
!8170 = !DILocation(line: 454, column: 24, scope: !8158)
!8171 = !DILocation(line: 454, column: 17, scope: !8158)
!8172 = !DILocation(line: 454, column: 29, scope: !8158)
!8173 = !DILocation(line: 456, column: 31, scope: !8158)
!8174 = !DILocation(line: 456, column: 40, scope: !8158)
!8175 = !DILocation(line: 456, column: 47, scope: !8158)
!8176 = !DILocation(line: 456, column: 45, scope: !8158)
!8177 = !DILocation(line: 456, column: 53, scope: !8158)
!8178 = !DILocation(line: 456, column: 36, scope: !8158)
!8179 = !DILocation(line: 456, column: 21, scope: !8158)
!8180 = !DILocation(line: 456, column: 24, scope: !8158)
!8181 = !DILocation(line: 456, column: 17, scope: !8158)
!8182 = !DILocation(line: 456, column: 29, scope: !8158)
!8183 = !DILocation(line: 457, column: 13, scope: !8159)
!8184 = !DILocation(line: 460, column: 17, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8159, file: !898, line: 460, column: 17)
!8186 = !DILocation(line: 460, column: 24, scope: !8185)
!8187 = !DILocation(line: 460, column: 22, scope: !8185)
!8188 = !DILocation(line: 460, column: 17, scope: !8159)
!8189 = !DILocation(line: 461, column: 31, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8185, file: !898, line: 460, column: 30)
!8191 = !DILocation(line: 461, column: 41, scope: !8190)
!8192 = !DILocation(line: 461, column: 48, scope: !8190)
!8193 = !DILocation(line: 461, column: 46, scope: !8190)
!8194 = !DILocation(line: 461, column: 54, scope: !8190)
!8195 = !DILocation(line: 461, column: 36, scope: !8190)
!8196 = !DILocation(line: 461, column: 21, scope: !8190)
!8197 = !DILocation(line: 461, column: 24, scope: !8190)
!8198 = !DILocation(line: 461, column: 17, scope: !8190)
!8199 = !DILocation(line: 461, column: 29, scope: !8190)
!8200 = !DILocation(line: 462, column: 31, scope: !8190)
!8201 = !DILocation(line: 462, column: 41, scope: !8190)
!8202 = !DILocation(line: 462, column: 48, scope: !8190)
!8203 = !DILocation(line: 462, column: 46, scope: !8190)
!8204 = !DILocation(line: 462, column: 54, scope: !8190)
!8205 = !DILocation(line: 462, column: 36, scope: !8190)
!8206 = !DILocation(line: 462, column: 21, scope: !8190)
!8207 = !DILocation(line: 462, column: 24, scope: !8190)
!8208 = !DILocation(line: 462, column: 17, scope: !8190)
!8209 = !DILocation(line: 462, column: 29, scope: !8190)
!8210 = !DILocation(line: 463, column: 31, scope: !8190)
!8211 = !DILocation(line: 463, column: 41, scope: !8190)
!8212 = !DILocation(line: 463, column: 48, scope: !8190)
!8213 = !DILocation(line: 463, column: 46, scope: !8190)
!8214 = !DILocation(line: 463, column: 54, scope: !8190)
!8215 = !DILocation(line: 463, column: 59, scope: !8190)
!8216 = !DILocation(line: 463, column: 36, scope: !8190)
!8217 = !DILocation(line: 463, column: 21, scope: !8190)
!8218 = !DILocation(line: 463, column: 24, scope: !8190)
!8219 = !DILocation(line: 463, column: 17, scope: !8190)
!8220 = !DILocation(line: 463, column: 29, scope: !8190)
!8221 = !DILocation(line: 464, column: 13, scope: !8190)
!8222 = !DILocation(line: 465, column: 31, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8185, file: !898, line: 464, column: 20)
!8224 = !DILocation(line: 465, column: 41, scope: !8223)
!8225 = !DILocation(line: 465, column: 48, scope: !8223)
!8226 = !DILocation(line: 465, column: 46, scope: !8223)
!8227 = !DILocation(line: 465, column: 54, scope: !8223)
!8228 = !DILocation(line: 465, column: 36, scope: !8223)
!8229 = !DILocation(line: 465, column: 21, scope: !8223)
!8230 = !DILocation(line: 465, column: 24, scope: !8223)
!8231 = !DILocation(line: 465, column: 17, scope: !8223)
!8232 = !DILocation(line: 465, column: 29, scope: !8223)
!8233 = !DILocation(line: 466, column: 31, scope: !8223)
!8234 = !DILocation(line: 466, column: 41, scope: !8223)
!8235 = !DILocation(line: 466, column: 48, scope: !8223)
!8236 = !DILocation(line: 466, column: 46, scope: !8223)
!8237 = !DILocation(line: 466, column: 54, scope: !8223)
!8238 = !DILocation(line: 466, column: 36, scope: !8223)
!8239 = !DILocation(line: 466, column: 21, scope: !8223)
!8240 = !DILocation(line: 466, column: 24, scope: !8223)
!8241 = !DILocation(line: 466, column: 17, scope: !8223)
!8242 = !DILocation(line: 466, column: 29, scope: !8223)
!8243 = !DILocation(line: 467, column: 31, scope: !8223)
!8244 = !DILocation(line: 467, column: 41, scope: !8223)
!8245 = !DILocation(line: 467, column: 48, scope: !8223)
!8246 = !DILocation(line: 467, column: 46, scope: !8223)
!8247 = !DILocation(line: 467, column: 54, scope: !8223)
!8248 = !DILocation(line: 467, column: 59, scope: !8223)
!8249 = !DILocation(line: 467, column: 36, scope: !8223)
!8250 = !DILocation(line: 467, column: 21, scope: !8223)
!8251 = !DILocation(line: 467, column: 24, scope: !8223)
!8252 = !DILocation(line: 467, column: 17, scope: !8223)
!8253 = !DILocation(line: 467, column: 29, scope: !8223)
!8254 = !DILocation(line: 469, column: 13, scope: !8159)
!8255 = !DILocation(line: 472, column: 20, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8159, file: !898, line: 472, column: 13)
!8257 = !DILocation(line: 472, column: 18, scope: !8256)
!8258 = !DILocation(line: 472, column: 25, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !8260, file: !898, discriminator: 1)
!8260 = distinct !DILexicalBlock(scope: !8256, file: !898, line: 472, column: 13)
!8261 = !DILocation(line: 472, column: 29, scope: !8259)
!8262 = !DILocation(line: 472, column: 27, scope: !8259)
!8263 = !DILocation(line: 472, column: 13, scope: !8259)
!8264 = !DILocation(line: 473, column: 31, scope: !8260)
!8265 = !DILocation(line: 473, column: 39, scope: !8260)
!8266 = !DILocation(line: 473, column: 46, scope: !8260)
!8267 = !DILocation(line: 473, column: 44, scope: !8260)
!8268 = !DILocation(line: 473, column: 54, scope: !8260)
!8269 = !DILocation(line: 473, column: 52, scope: !8260)
!8270 = !DILocation(line: 473, column: 58, scope: !8260)
!8271 = !DILocation(line: 473, column: 56, scope: !8260)
!8272 = !DILocation(line: 473, column: 36, scope: !8260)
!8273 = !DILocation(line: 473, column: 21, scope: !8260)
!8274 = !DILocation(line: 473, column: 26, scope: !8260)
!8275 = !DILocation(line: 473, column: 24, scope: !8260)
!8276 = !DILocation(line: 473, column: 17, scope: !8260)
!8277 = !DILocation(line: 473, column: 29, scope: !8260)
!8278 = !DILocation(line: 472, column: 36, scope: !8279)
!8279 = !DILexicalBlockFile(scope: !8260, file: !898, discriminator: 2)
!8280 = !DILocation(line: 472, column: 13, scope: !8279)
!8281 = distinct !{!8281, !8282}
!8282 = !DILocation(line: 472, column: 13, scope: !8159)
!8283 = !DILocation(line: 474, column: 13, scope: !8159)
!8284 = !DILocation(line: 477, column: 16, scope: !8103)
!8285 = !DILocation(line: 477, column: 14, scope: !8103)
!8286 = !DILocation(line: 478, column: 5, scope: !8103)
!8287 = !DILocation(line: 426, column: 32, scope: !8288)
!8288 = !DILexicalBlockFile(scope: !8099, file: !898, discriminator: 2)
!8289 = !DILocation(line: 426, column: 29, scope: !8288)
!8290 = !DILocation(line: 426, column: 5, scope: !8288)
!8291 = distinct !{!8291, !8292}
!8292 = !DILocation(line: 426, column: 5, scope: !8067)
!8293 = !DILocation(line: 480, column: 15, scope: !8067)
!8294 = !DILocation(line: 480, column: 9, scope: !8067)
!8295 = !DILocation(line: 480, column: 5, scope: !8067)
!8296 = !DILocation(line: 480, column: 13, scope: !8067)
!8297 = !DILocation(line: 482, column: 5, scope: !8067)
!8298 = !DILocation(line: 483, column: 1, scope: !8067)
!8299 = distinct !DISubprogram(name: "ensure_bits", scope: !898, file: !898, line: 403, type: !7407, isLocal: true, isDefinition: true, scopeLine: 404, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8300 = !DILocalVariable(name: "s", arg: 1, scope: !8299, file: !898, line: 403, type: !6889)
!8301 = !DILocation(line: 403, column: 39, scope: !8299)
!8302 = !DILocalVariable(name: "n", arg: 2, scope: !8299, file: !898, line: 403, type: !1004)
!8303 = !DILocation(line: 403, column: 46, scope: !8299)
!8304 = !DILocalVariable(name: "left", scope: !8299, file: !898, line: 405, type: !1004)
!8305 = !DILocation(line: 405, column: 9, scope: !8299)
!8306 = !DILocation(line: 405, column: 30, scope: !8299)
!8307 = !DILocation(line: 405, column: 16, scope: !8299)
!8308 = !DILocation(line: 406, column: 9, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8299, file: !898, line: 406, column: 9)
!8310 = !DILocation(line: 406, column: 14, scope: !8309)
!8311 = !DILocation(line: 406, column: 9, scope: !8299)
!8312 = !DILocation(line: 407, column: 9, scope: !8309)
!8313 = !DILocation(line: 408, column: 9, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8299, file: !898, line: 408, column: 9)
!8315 = !DILocation(line: 408, column: 16, scope: !8314)
!8316 = !DILocation(line: 408, column: 14, scope: !8314)
!8317 = !DILocation(line: 408, column: 9, scope: !8299)
!8318 = !DILocation(line: 409, column: 24, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !898, line: 408, column: 19)
!8320 = !DILocation(line: 409, column: 27, scope: !8319)
!8321 = !DILocation(line: 409, column: 9, scope: !8319)
!8322 = !DILocation(line: 410, column: 9, scope: !8319)
!8323 = !DILocation(line: 412, column: 5, scope: !8299)
!8324 = !DILocation(line: 413, column: 1, scope: !8299)
!8325 = distinct !DISubprogram(name: "parse_st_code", scope: !898, file: !898, line: 485, type: !7407, isLocal: true, isDefinition: true, scopeLine: 486, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8326 = !DILocalVariable(name: "s", arg: 1, scope: !8325, file: !898, line: 485, type: !6889)
!8327 = !DILocation(line: 485, column: 41, scope: !8325)
!8328 = !DILocalVariable(name: "min_v", arg: 2, scope: !8325, file: !898, line: 485, type: !1004)
!8329 = !DILocation(line: 485, column: 48, scope: !8325)
!8330 = !DILocalVariable(name: "v", scope: !8325, file: !898, line: 487, type: !1005)
!8331 = !DILocation(line: 487, column: 18, scope: !8325)
!8332 = !DILocation(line: 487, column: 32, scope: !8325)
!8333 = !DILocation(line: 487, column: 22, scope: !8325)
!8334 = !DILocation(line: 487, column: 61, scope: !8325)
!8335 = !DILocation(line: 487, column: 59, scope: !8325)
!8336 = !DILocation(line: 489, column: 9, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8325, file: !898, line: 489, column: 9)
!8338 = !DILocation(line: 489, column: 11, scope: !8337)
!8339 = !DILocation(line: 489, column: 9, scope: !8325)
!8340 = !DILocation(line: 490, column: 19, scope: !8337)
!8341 = !DILocation(line: 490, column: 21, scope: !8337)
!8342 = !DILocation(line: 490, column: 16, scope: !8337)
!8343 = !DILocation(line: 490, column: 11, scope: !8337)
!8344 = !DILocation(line: 490, column: 9, scope: !8337)
!8345 = !DILocation(line: 492, column: 19, scope: !8337)
!8346 = !DILocation(line: 492, column: 21, scope: !8337)
!8347 = !DILocation(line: 492, column: 16, scope: !8337)
!8348 = !DILocation(line: 492, column: 11, scope: !8337)
!8349 = !DILocation(line: 494, column: 9, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8325, file: !898, line: 494, column: 9)
!8351 = !DILocation(line: 494, column: 11, scope: !8350)
!8352 = !DILocation(line: 494, column: 9, scope: !8325)
!8353 = !DILocation(line: 495, column: 11, scope: !8350)
!8354 = !DILocation(line: 495, column: 9, scope: !8350)
!8355 = !DILocation(line: 496, column: 12, scope: !8325)
!8356 = !DILocation(line: 496, column: 5, scope: !8325)
!8357 = distinct !DISubprogram(name: "skip_bits_long", scope: !1790, file: !1790, line: 293, type: !8358, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{null, !6889, !1004}
!8360 = !DILocation(line: 127, column: 87, scope: !6914, inlinedAt: !8361)
!8361 = distinct !DILocation(line: 301, column: 17, scope: !8357)
!8362 = !DILocation(line: 127, column: 94, scope: !6914, inlinedAt: !8361)
!8363 = !DILocation(line: 127, column: 104, scope: !6914, inlinedAt: !8361)
!8364 = !DILocalVariable(name: "s", arg: 1, scope: !8357, file: !1790, line: 293, type: !6889)
!8365 = !DILocation(line: 293, column: 50, scope: !8357)
!8366 = !DILocalVariable(name: "n", arg: 2, scope: !8357, file: !1790, line: 293, type: !1004)
!8367 = !DILocation(line: 293, column: 57, scope: !8357)
!8368 = !DILocation(line: 301, column: 27, scope: !8357)
!8369 = !DILocation(line: 301, column: 31, scope: !8357)
!8370 = !DILocation(line: 301, column: 34, scope: !8357)
!8371 = !DILocation(line: 301, column: 30, scope: !8357)
!8372 = !DILocation(line: 301, column: 41, scope: !8357)
!8373 = !DILocation(line: 301, column: 44, scope: !8357)
!8374 = !DILocation(line: 301, column: 65, scope: !8357)
!8375 = !DILocation(line: 301, column: 68, scope: !8357)
!8376 = !DILocation(line: 301, column: 63, scope: !8357)
!8377 = !DILocation(line: 301, column: 17, scope: !8357)
!8378 = !DILocation(line: 132, column: 9, scope: !7063, inlinedAt: !8361)
!8379 = !DILocation(line: 132, column: 13, scope: !7063, inlinedAt: !8361)
!8380 = !DILocation(line: 132, column: 11, scope: !7063, inlinedAt: !8361)
!8381 = !DILocation(line: 132, column: 9, scope: !6914, inlinedAt: !8361)
!8382 = !DILocation(line: 132, column: 26, scope: !7068, inlinedAt: !8361)
!8383 = !DILocation(line: 132, column: 19, scope: !7068, inlinedAt: !8361)
!8384 = !DILocation(line: 133, column: 14, scope: !7071, inlinedAt: !8361)
!8385 = !DILocation(line: 133, column: 18, scope: !7071, inlinedAt: !8361)
!8386 = !DILocation(line: 133, column: 16, scope: !7071, inlinedAt: !8361)
!8387 = !DILocation(line: 133, column: 14, scope: !7063, inlinedAt: !8361)
!8388 = !DILocation(line: 133, column: 31, scope: !7076, inlinedAt: !8361)
!8389 = !DILocation(line: 133, column: 24, scope: !7076, inlinedAt: !8361)
!8390 = !DILocation(line: 134, column: 17, scope: !7071, inlinedAt: !8361)
!8391 = !DILocation(line: 134, column: 10, scope: !7071, inlinedAt: !8361)
!8392 = !DILocation(line: 135, column: 1, scope: !6914, inlinedAt: !8361)
!8393 = !DILocation(line: 301, column: 5, scope: !8357)
!8394 = !DILocation(line: 301, column: 8, scope: !8357)
!8395 = !DILocation(line: 301, column: 14, scope: !8357)
!8396 = !DILocation(line: 304, column: 1, scope: !8357)
!8397 = distinct !DISubprogram(name: "parse_lpc", scope: !898, file: !898, line: 771, type: !8398, isLocal: true, isDefinition: true, scopeLine: 772, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!1004, !1064, !1004, !1004, !1004, !1004}
!8400 = !DILocalVariable(name: "s", arg: 1, scope: !8397, file: !898, line: 771, type: !1064)
!8401 = !DILocation(line: 771, column: 37, scope: !8397)
!8402 = !DILocalVariable(name: "ch1", arg: 2, scope: !8397, file: !898, line: 771, type: !1004)
!8403 = !DILocation(line: 771, column: 44, scope: !8397)
!8404 = !DILocalVariable(name: "ch2", arg: 3, scope: !8397, file: !898, line: 771, type: !1004)
!8405 = !DILocation(line: 771, column: 53, scope: !8397)
!8406 = !DILocalVariable(name: "start_sb", arg: 4, scope: !8397, file: !898, line: 771, type: !1004)
!8407 = !DILocation(line: 771, column: 62, scope: !8397)
!8408 = !DILocalVariable(name: "end_sb", arg: 5, scope: !8397, file: !898, line: 771, type: !1004)
!8409 = !DILocation(line: 771, column: 76, scope: !8397)
!8410 = !DILocalVariable(name: "f", scope: !8397, file: !898, line: 773, type: !1004)
!8411 = !DILocation(line: 773, column: 9, scope: !8397)
!8412 = !DILocation(line: 773, column: 13, scope: !8397)
!8413 = !DILocation(line: 773, column: 16, scope: !8397)
!8414 = !DILocation(line: 773, column: 25, scope: !8397)
!8415 = !DILocalVariable(name: "i", scope: !8397, file: !898, line: 774, type: !1004)
!8416 = !DILocation(line: 774, column: 9, scope: !8397)
!8417 = !DILocalVariable(name: "sb", scope: !8397, file: !898, line: 774, type: !1004)
!8418 = !DILocation(line: 774, column: 12, scope: !8397)
!8419 = !DILocalVariable(name: "ch", scope: !8397, file: !898, line: 774, type: !1004)
!8420 = !DILocation(line: 774, column: 16, scope: !8397)
!8421 = !DILocalVariable(name: "codes", scope: !8397, file: !898, line: 774, type: !4221)
!8422 = !DILocation(line: 774, column: 20, scope: !8397)
!8423 = !DILocation(line: 777, column: 15, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8397, file: !898, line: 777, column: 5)
!8425 = !DILocation(line: 777, column: 13, scope: !8424)
!8426 = !DILocation(line: 777, column: 10, scope: !8424)
!8427 = !DILocation(line: 777, column: 25, scope: !8428)
!8428 = !DILexicalBlockFile(scope: !8429, file: !898, discriminator: 1)
!8429 = distinct !DILexicalBlock(scope: !8424, file: !898, line: 777, column: 5)
!8430 = !DILocation(line: 777, column: 30, scope: !8428)
!8431 = !DILocation(line: 777, column: 28, scope: !8428)
!8432 = !DILocation(line: 777, column: 5, scope: !8428)
!8433 = !DILocalVariable(name: "ncodes", scope: !8434, file: !898, line: 778, type: !1004)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !898, line: 777, column: 44)
!8435 = !DILocation(line: 778, column: 13, scope: !8434)
!8436 = !DILocation(line: 778, column: 32, scope: !8434)
!8437 = !DILocation(line: 778, column: 35, scope: !8434)
!8438 = !DILocation(line: 778, column: 29, scope: !8434)
!8439 = !DILocation(line: 778, column: 24, scope: !8434)
!8440 = !DILocation(line: 779, column: 19, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8434, file: !898, line: 779, column: 9)
!8442 = !DILocation(line: 779, column: 17, scope: !8441)
!8443 = !DILocation(line: 779, column: 14, scope: !8441)
!8444 = !DILocation(line: 779, column: 24, scope: !8445)
!8445 = !DILexicalBlockFile(scope: !8446, file: !898, discriminator: 1)
!8446 = distinct !DILexicalBlock(scope: !8441, file: !898, line: 779, column: 9)
!8447 = !DILocation(line: 779, column: 30, scope: !8445)
!8448 = !DILocation(line: 779, column: 27, scope: !8445)
!8449 = !DILocation(line: 779, column: 9, scope: !8445)
!8450 = !DILocation(line: 780, column: 30, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !898, line: 780, column: 17)
!8452 = distinct !DILexicalBlock(scope: !8446, file: !898, line: 779, column: 41)
!8453 = !DILocation(line: 780, column: 33, scope: !8451)
!8454 = !DILocation(line: 780, column: 41, scope: !8451)
!8455 = !DILocation(line: 780, column: 39, scope: !8451)
!8456 = !DILocation(line: 780, column: 17, scope: !8451)
!8457 = !DILocation(line: 780, column: 17, scope: !8452)
!8458 = !DILocation(line: 781, column: 17, scope: !8451)
!8459 = !DILocation(line: 782, column: 20, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8452, file: !898, line: 782, column: 13)
!8461 = !DILocation(line: 782, column: 18, scope: !8460)
!8462 = !DILocation(line: 782, column: 25, scope: !8463)
!8463 = !DILexicalBlockFile(scope: !8464, file: !898, discriminator: 1)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !898, line: 782, column: 13)
!8465 = !DILocation(line: 782, column: 29, scope: !8463)
!8466 = !DILocation(line: 782, column: 27, scope: !8463)
!8467 = !DILocation(line: 782, column: 13, scope: !8463)
!8468 = !DILocation(line: 783, column: 38, scope: !8464)
!8469 = !DILocation(line: 783, column: 41, scope: !8464)
!8470 = !DILocation(line: 783, column: 28, scope: !8464)
!8471 = !DILocation(line: 783, column: 23, scope: !8464)
!8472 = !DILocation(line: 783, column: 17, scope: !8464)
!8473 = !DILocation(line: 783, column: 26, scope: !8464)
!8474 = !DILocation(line: 782, column: 38, scope: !8475)
!8475 = !DILexicalBlockFile(scope: !8464, file: !898, discriminator: 2)
!8476 = !DILocation(line: 782, column: 13, scope: !8475)
!8477 = distinct !{!8477, !8478}
!8478 = !DILocation(line: 782, column: 13, scope: !8452)
!8479 = !DILocation(line: 784, column: 20, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8452, file: !898, line: 784, column: 13)
!8481 = !DILocation(line: 784, column: 18, scope: !8480)
!8482 = !DILocation(line: 784, column: 25, scope: !8483)
!8483 = !DILexicalBlockFile(scope: !8484, file: !898, discriminator: 1)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !898, line: 784, column: 13)
!8485 = !DILocation(line: 784, column: 29, scope: !8483)
!8486 = !DILocation(line: 784, column: 36, scope: !8483)
!8487 = !DILocation(line: 784, column: 27, scope: !8483)
!8488 = !DILocation(line: 784, column: 13, scope: !8483)
!8489 = !DILocation(line: 785, column: 53, scope: !8484)
!8490 = !DILocation(line: 785, column: 29, scope: !8484)
!8491 = !DILocation(line: 785, column: 49, scope: !8484)
!8492 = !DILocation(line: 785, column: 45, scope: !8484)
!8493 = !DILocation(line: 785, column: 42, scope: !8484)
!8494 = !DILocation(line: 785, column: 32, scope: !8484)
!8495 = !DILocation(line: 785, column: 64, scope: !8484)
!8496 = !DILocation(line: 785, column: 66, scope: !8484)
!8497 = !DILocation(line: 785, column: 58, scope: !8484)
!8498 = !DILocation(line: 785, column: 17, scope: !8484)
!8499 = !DILocation(line: 784, column: 42, scope: !8500)
!8500 = !DILexicalBlockFile(scope: !8484, file: !898, discriminator: 2)
!8501 = !DILocation(line: 784, column: 13, scope: !8500)
!8502 = distinct !{!8502, !8503}
!8503 = !DILocation(line: 784, column: 13, scope: !8452)
!8504 = !DILocation(line: 786, column: 9, scope: !8452)
!8505 = !DILocation(line: 779, column: 37, scope: !8506)
!8506 = !DILexicalBlockFile(scope: !8446, file: !898, discriminator: 2)
!8507 = !DILocation(line: 779, column: 9, scope: !8506)
!8508 = distinct !{!8508, !8509}
!8509 = !DILocation(line: 779, column: 9, scope: !8434)
!8510 = !DILocation(line: 787, column: 5, scope: !8434)
!8511 = !DILocation(line: 777, column: 40, scope: !8512)
!8512 = !DILexicalBlockFile(scope: !8429, file: !898, discriminator: 2)
!8513 = !DILocation(line: 777, column: 5, scope: !8512)
!8514 = distinct !{!8514, !8515}
!8515 = !DILocation(line: 777, column: 5, scope: !8397)
!8516 = !DILocation(line: 789, column: 5, scope: !8397)
!8517 = !DILocation(line: 790, column: 1, scope: !8397)
!8518 = distinct !DISubprogram(name: "parse_ts", scope: !898, file: !898, line: 692, type: !8519, isLocal: true, isDefinition: true, scopeLine: 694, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{!1004, !1064, !1004, !1004, !1004, !1004, !1004}
!8521 = !DILocalVariable(name: "s", arg: 1, scope: !8518, file: !898, line: 692, type: !1064)
!8522 = !DILocation(line: 692, column: 36, scope: !8518)
!8523 = !DILocalVariable(name: "ch1", arg: 2, scope: !8518, file: !898, line: 692, type: !1004)
!8524 = !DILocation(line: 692, column: 43, scope: !8518)
!8525 = !DILocalVariable(name: "ch2", arg: 3, scope: !8518, file: !898, line: 692, type: !1004)
!8526 = !DILocation(line: 692, column: 52, scope: !8518)
!8527 = !DILocalVariable(name: "start_sb", arg: 4, scope: !8518, file: !898, line: 693, type: !1004)
!8528 = !DILocation(line: 693, column: 25, scope: !8518)
!8529 = !DILocalVariable(name: "end_sb", arg: 5, scope: !8518, file: !898, line: 693, type: !1004)
!8530 = !DILocation(line: 693, column: 39, scope: !8518)
!8531 = !DILocalVariable(name: "flag", arg: 6, scope: !8518, file: !898, line: 693, type: !1004)
!8532 = !DILocation(line: 693, column: 51, scope: !8518)
!8533 = !DILocalVariable(name: "sb", scope: !8518, file: !898, line: 695, type: !1004)
!8534 = !DILocation(line: 695, column: 9, scope: !8518)
!8535 = !DILocalVariable(name: "sb_g3", scope: !8518, file: !898, line: 695, type: !1004)
!8536 = !DILocation(line: 695, column: 13, scope: !8518)
!8537 = !DILocalVariable(name: "sb_reorder", scope: !8518, file: !898, line: 695, type: !1004)
!8538 = !DILocation(line: 695, column: 20, scope: !8518)
!8539 = !DILocalVariable(name: "quant_level", scope: !8518, file: !898, line: 695, type: !1004)
!8540 = !DILocation(line: 695, column: 32, scope: !8518)
!8541 = !DILocation(line: 697, column: 15, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8518, file: !898, line: 697, column: 5)
!8543 = !DILocation(line: 697, column: 13, scope: !8542)
!8544 = !DILocation(line: 697, column: 10, scope: !8542)
!8545 = !DILocation(line: 697, column: 25, scope: !8546)
!8546 = !DILexicalBlockFile(scope: !8547, file: !898, discriminator: 1)
!8547 = distinct !DILexicalBlock(scope: !8542, file: !898, line: 697, column: 5)
!8548 = !DILocation(line: 697, column: 30, scope: !8546)
!8549 = !DILocation(line: 697, column: 28, scope: !8546)
!8550 = !DILocation(line: 697, column: 5, scope: !8546)
!8551 = !DILocation(line: 699, column: 13, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !898, line: 699, column: 13)
!8553 = distinct !DILexicalBlock(scope: !8547, file: !898, line: 697, column: 44)
!8554 = !DILocation(line: 699, column: 16, scope: !8552)
!8555 = !DILocation(line: 699, column: 13, scope: !8553)
!8556 = !DILocation(line: 700, column: 26, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8552, file: !898, line: 699, column: 21)
!8558 = !DILocation(line: 700, column: 24, scope: !8557)
!8559 = !DILocation(line: 701, column: 9, scope: !8557)
!8560 = !DILocation(line: 701, column: 20, scope: !8561)
!8561 = !DILexicalBlockFile(scope: !8562, file: !898, discriminator: 1)
!8562 = distinct !DILexicalBlock(scope: !8552, file: !898, line: 701, column: 20)
!8563 = !DILocation(line: 701, column: 25, scope: !8561)
!8564 = !DILocation(line: 701, column: 28, scope: !8565)
!8565 = !DILexicalBlockFile(scope: !8562, file: !898, discriminator: 2)
!8566 = !DILocation(line: 701, column: 33, scope: !8565)
!8567 = !DILocation(line: 701, column: 36, scope: !8565)
!8568 = !DILocation(line: 701, column: 31, scope: !8565)
!8569 = !DILocation(line: 701, column: 20, scope: !8565)
!8570 = !DILocation(line: 702, column: 40, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8562, file: !898, line: 701, column: 54)
!8572 = !DILocation(line: 702, column: 26, scope: !8571)
!8573 = !DILocation(line: 702, column: 29, scope: !8571)
!8574 = !DILocation(line: 702, column: 24, scope: !8571)
!8575 = !DILocation(line: 703, column: 9, scope: !8571)
!8576 = !DILocation(line: 704, column: 30, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !898, line: 704, column: 17)
!8578 = distinct !DILexicalBlock(scope: !8562, file: !898, line: 703, column: 16)
!8579 = !DILocation(line: 704, column: 33, scope: !8577)
!8580 = !DILocation(line: 704, column: 17, scope: !8577)
!8581 = !DILocation(line: 704, column: 17, scope: !8578)
!8582 = !DILocation(line: 705, column: 17, scope: !8577)
!8583 = !DILocation(line: 706, column: 36, scope: !8578)
!8584 = !DILocation(line: 706, column: 39, scope: !8578)
!8585 = !DILocation(line: 706, column: 43, scope: !8578)
!8586 = !DILocation(line: 706, column: 46, scope: !8578)
!8587 = !DILocation(line: 706, column: 60, scope: !8578)
!8588 = !DILocation(line: 706, column: 26, scope: !8578)
!8589 = !DILocation(line: 706, column: 24, scope: !8578)
!8590 = !DILocation(line: 707, column: 17, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8578, file: !898, line: 707, column: 17)
!8592 = !DILocation(line: 707, column: 28, scope: !8591)
!8593 = !DILocation(line: 707, column: 17, scope: !8578)
!8594 = !DILocation(line: 708, column: 28, scope: !8591)
!8595 = !DILocation(line: 708, column: 17, scope: !8591)
!8596 = !DILocation(line: 709, column: 33, scope: !8578)
!8597 = !DILocation(line: 709, column: 27, scope: !8578)
!8598 = !DILocation(line: 709, column: 13, scope: !8578)
!8599 = !DILocation(line: 709, column: 16, scope: !8578)
!8600 = !DILocation(line: 709, column: 31, scope: !8578)
!8601 = !DILocation(line: 711, column: 13, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8553, file: !898, line: 711, column: 13)
!8603 = !DILocation(line: 711, column: 27, scope: !8602)
!8604 = !DILocation(line: 711, column: 30, scope: !8602)
!8605 = !DILocation(line: 711, column: 24, scope: !8602)
!8606 = !DILocation(line: 711, column: 13, scope: !8553)
!8607 = !DILocation(line: 712, column: 13, scope: !8602)
!8608 = !DILocation(line: 715, column: 13, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8553, file: !898, line: 715, column: 13)
!8610 = !DILocation(line: 715, column: 16, scope: !8609)
!8611 = !DILocation(line: 715, column: 13, scope: !8553)
!8612 = !DILocation(line: 716, column: 24, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !898, line: 716, column: 13)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !898, line: 715, column: 23)
!8615 = !DILocation(line: 716, column: 18, scope: !8613)
!8616 = !DILocation(line: 716, column: 29, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !8618, file: !898, discriminator: 1)
!8618 = distinct !DILexicalBlock(scope: !8613, file: !898, line: 716, column: 13)
!8619 = !DILocation(line: 716, column: 37, scope: !8617)
!8620 = !DILocation(line: 716, column: 40, scope: !8617)
!8621 = !DILocation(line: 716, column: 61, scope: !8617)
!8622 = !DILocation(line: 716, column: 35, scope: !8617)
!8623 = !DILocation(line: 716, column: 13, scope: !8617)
!8624 = !DILocation(line: 717, column: 30, scope: !8618)
!8625 = !DILocation(line: 717, column: 33, scope: !8618)
!8626 = !DILocation(line: 717, column: 38, scope: !8618)
!8627 = !DILocation(line: 717, column: 43, scope: !8618)
!8628 = !DILocation(line: 717, column: 50, scope: !8618)
!8629 = !DILocation(line: 717, column: 17, scope: !8618)
!8630 = !DILocation(line: 716, column: 71, scope: !8631)
!8631 = !DILexicalBlockFile(scope: !8618, file: !898, discriminator: 2)
!8632 = !DILocation(line: 716, column: 13, scope: !8631)
!8633 = distinct !{!8633, !8634}
!8634 = !DILocation(line: 716, column: 13, scope: !8614)
!8635 = !DILocation(line: 718, column: 9, scope: !8614)
!8636 = !DILocation(line: 718, column: 20, scope: !8637)
!8637 = !DILexicalBlockFile(scope: !8638, file: !898, discriminator: 1)
!8638 = distinct !DILexicalBlock(scope: !8609, file: !898, line: 718, column: 20)
!8639 = !DILocation(line: 718, column: 23, scope: !8637)
!8640 = !DILocation(line: 718, column: 28, scope: !8637)
!8641 = !DILocation(line: 718, column: 31, scope: !8642)
!8642 = !DILexicalBlockFile(scope: !8638, file: !898, discriminator: 2)
!8643 = !DILocation(line: 718, column: 42, scope: !8642)
!8644 = !DILocation(line: 718, column: 20, scope: !8642)
!8645 = !DILocation(line: 719, column: 26, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8638, file: !898, line: 718, column: 48)
!8647 = !DILocation(line: 719, column: 29, scope: !8646)
!8648 = !DILocation(line: 719, column: 34, scope: !8646)
!8649 = !DILocation(line: 719, column: 39, scope: !8646)
!8650 = !DILocation(line: 719, column: 50, scope: !8646)
!8651 = !DILocation(line: 719, column: 55, scope: !8646)
!8652 = !DILocation(line: 719, column: 13, scope: !8646)
!8653 = !DILocation(line: 720, column: 9, scope: !8646)
!8654 = !DILocation(line: 723, column: 13, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8553, file: !898, line: 723, column: 13)
!8656 = !DILocation(line: 723, column: 20, scope: !8655)
!8657 = !DILocation(line: 723, column: 17, scope: !8655)
!8658 = !DILocation(line: 723, column: 13, scope: !8553)
!8659 = !DILocation(line: 724, column: 30, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !898, line: 724, column: 17)
!8661 = distinct !DILexicalBlock(scope: !8655, file: !898, line: 723, column: 25)
!8662 = !DILocation(line: 724, column: 33, scope: !8660)
!8663 = !DILocation(line: 724, column: 17, scope: !8660)
!8664 = !DILocation(line: 724, column: 17, scope: !8661)
!8665 = !DILocation(line: 725, column: 17, scope: !8660)
!8666 = !DILocation(line: 726, column: 18, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8661, file: !898, line: 726, column: 17)
!8668 = !DILocation(line: 726, column: 23, scope: !8667)
!8669 = !DILocation(line: 726, column: 26, scope: !8670)
!8670 = !DILexicalBlockFile(scope: !8667, file: !898, discriminator: 1)
!8671 = !DILocation(line: 726, column: 40, scope: !8670)
!8672 = !DILocation(line: 726, column: 43, scope: !8670)
!8673 = !DILocation(line: 726, column: 37, scope: !8670)
!8674 = !DILocation(line: 726, column: 17, scope: !8670)
!8675 = !DILocation(line: 727, column: 65, scope: !8667)
!8676 = !DILocation(line: 727, column: 68, scope: !8667)
!8677 = !DILocation(line: 727, column: 55, scope: !8667)
!8678 = !DILocation(line: 727, column: 41, scope: !8667)
!8679 = !DILocation(line: 727, column: 17, scope: !8667)
!8680 = !DILocation(line: 727, column: 32, scope: !8667)
!8681 = !DILocation(line: 727, column: 36, scope: !8667)
!8682 = !DILocation(line: 727, column: 20, scope: !8667)
!8683 = !DILocation(line: 727, column: 53, scope: !8667)
!8684 = !DILocation(line: 728, column: 17, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8661, file: !898, line: 728, column: 17)
!8686 = !DILocation(line: 728, column: 22, scope: !8685)
!8687 = !DILocation(line: 728, column: 25, scope: !8688)
!8688 = !DILexicalBlockFile(scope: !8685, file: !898, discriminator: 1)
!8689 = !DILocation(line: 728, column: 39, scope: !8688)
!8690 = !DILocation(line: 728, column: 42, scope: !8688)
!8691 = !DILocation(line: 728, column: 36, scope: !8688)
!8692 = !DILocation(line: 728, column: 17, scope: !8688)
!8693 = !DILocation(line: 729, column: 65, scope: !8685)
!8694 = !DILocation(line: 729, column: 68, scope: !8685)
!8695 = !DILocation(line: 729, column: 55, scope: !8685)
!8696 = !DILocation(line: 729, column: 41, scope: !8685)
!8697 = !DILocation(line: 729, column: 17, scope: !8685)
!8698 = !DILocation(line: 729, column: 32, scope: !8685)
!8699 = !DILocation(line: 729, column: 36, scope: !8685)
!8700 = !DILocation(line: 729, column: 20, scope: !8685)
!8701 = !DILocation(line: 729, column: 53, scope: !8685)
!8702 = !DILocation(line: 730, column: 9, scope: !8661)
!8703 = !DILocation(line: 732, column: 48, scope: !8553)
!8704 = !DILocation(line: 732, column: 23, scope: !8553)
!8705 = !DILocation(line: 732, column: 39, scope: !8553)
!8706 = !DILocation(line: 732, column: 43, scope: !8553)
!8707 = !DILocation(line: 732, column: 26, scope: !8553)
!8708 = !DILocation(line: 732, column: 21, scope: !8553)
!8709 = !DILocation(line: 733, column: 14, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8553, file: !898, line: 733, column: 13)
!8711 = !DILocation(line: 733, column: 13, scope: !8553)
!8712 = !DILocation(line: 734, column: 13, scope: !8710)
!8713 = !DILocation(line: 737, column: 13, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8553, file: !898, line: 737, column: 13)
!8715 = !DILocation(line: 737, column: 18, scope: !8714)
!8716 = !DILocation(line: 737, column: 21, scope: !8714)
!8717 = !DILocation(line: 737, column: 16, scope: !8714)
!8718 = !DILocation(line: 737, column: 38, scope: !8714)
!8719 = !DILocation(line: 737, column: 41, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8714, file: !898, discriminator: 1)
!8721 = !DILocation(line: 737, column: 55, scope: !8720)
!8722 = !DILocation(line: 737, column: 58, scope: !8720)
!8723 = !DILocation(line: 737, column: 52, scope: !8720)
!8724 = !DILocation(line: 737, column: 13, scope: !8720)
!8725 = !DILocation(line: 738, column: 18, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !898, line: 738, column: 17)
!8727 = distinct !DILexicalBlock(scope: !8714, file: !898, line: 737, column: 76)
!8728 = !DILocation(line: 738, column: 17, scope: !8727)
!8729 = !DILocation(line: 739, column: 26, scope: !8726)
!8730 = !DILocation(line: 739, column: 29, scope: !8726)
!8731 = !DILocation(line: 739, column: 34, scope: !8726)
!8732 = !DILocation(line: 739, column: 46, scope: !8726)
!8733 = !DILocation(line: 739, column: 17, scope: !8726)
!8734 = !DILocation(line: 740, column: 22, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8726, file: !898, line: 740, column: 22)
!8736 = !DILocation(line: 740, column: 29, scope: !8735)
!8737 = !DILocation(line: 740, column: 26, scope: !8735)
!8738 = !DILocation(line: 740, column: 22, scope: !8726)
!8739 = !DILocation(line: 741, column: 26, scope: !8735)
!8740 = !DILocation(line: 741, column: 29, scope: !8735)
!8741 = !DILocation(line: 741, column: 34, scope: !8735)
!8742 = !DILocation(line: 741, column: 46, scope: !8735)
!8743 = !DILocation(line: 741, column: 17, scope: !8735)
!8744 = !DILocation(line: 742, column: 9, scope: !8727)
!8745 = !DILocation(line: 743, column: 22, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8714, file: !898, line: 742, column: 16)
!8747 = !DILocation(line: 743, column: 25, scope: !8746)
!8748 = !DILocation(line: 743, column: 30, scope: !8746)
!8749 = !DILocation(line: 743, column: 42, scope: !8746)
!8750 = !DILocation(line: 743, column: 13, scope: !8746)
!8751 = !DILocation(line: 744, column: 17, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8746, file: !898, line: 744, column: 17)
!8753 = !DILocation(line: 744, column: 24, scope: !8752)
!8754 = !DILocation(line: 744, column: 21, scope: !8752)
!8755 = !DILocation(line: 744, column: 17, scope: !8746)
!8756 = !DILocation(line: 745, column: 26, scope: !8752)
!8757 = !DILocation(line: 745, column: 29, scope: !8752)
!8758 = !DILocation(line: 745, column: 34, scope: !8752)
!8759 = !DILocation(line: 745, column: 46, scope: !8752)
!8760 = !DILocation(line: 745, column: 17, scope: !8752)
!8761 = !DILocation(line: 747, column: 5, scope: !8553)
!8762 = !DILocation(line: 697, column: 40, scope: !8763)
!8763 = !DILexicalBlockFile(scope: !8547, file: !898, discriminator: 2)
!8764 = !DILocation(line: 697, column: 5, scope: !8763)
!8765 = distinct !{!8765, !8766}
!8766 = !DILocation(line: 697, column: 5, scope: !8518)
!8767 = !DILocation(line: 749, column: 5, scope: !8518)
!8768 = !DILocation(line: 750, column: 1, scope: !8518)
!8769 = distinct !DISubprogram(name: "convert_lpc", scope: !898, file: !898, line: 755, type: !8770, isLocal: true, isDefinition: true, scopeLine: 756, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{null, !1006, !1143}
!8772 = !DILocalVariable(name: "coeff", arg: 1, scope: !8769, file: !898, line: 755, type: !1006)
!8773 = !DILocation(line: 755, column: 32, scope: !8769)
!8774 = !DILocalVariable(name: "codes", arg: 2, scope: !8769, file: !898, line: 755, type: !1143)
!8775 = !DILocation(line: 755, column: 50, scope: !8769)
!8776 = !DILocalVariable(name: "i", scope: !8769, file: !898, line: 757, type: !1004)
!8777 = !DILocation(line: 757, column: 9, scope: !8769)
!8778 = !DILocalVariable(name: "j", scope: !8769, file: !898, line: 757, type: !1004)
!8779 = !DILocation(line: 757, column: 12, scope: !8769)
!8780 = !DILocation(line: 759, column: 12, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8769, file: !898, line: 759, column: 5)
!8782 = !DILocation(line: 759, column: 10, scope: !8781)
!8783 = !DILocation(line: 759, column: 17, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !8785, file: !898, discriminator: 1)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !898, line: 759, column: 5)
!8786 = !DILocation(line: 759, column: 19, scope: !8784)
!8787 = !DILocation(line: 759, column: 5, scope: !8784)
!8788 = !DILocalVariable(name: "rc", scope: !8789, file: !898, line: 760, type: !1007)
!8789 = distinct !DILexicalBlock(scope: !8785, file: !898, line: 759, column: 29)
!8790 = !DILocation(line: 760, column: 15, scope: !8789)
!8791 = !DILocation(line: 760, column: 34, scope: !8789)
!8792 = !DILocation(line: 760, column: 28, scope: !8789)
!8793 = !DILocation(line: 760, column: 20, scope: !8789)
!8794 = !DILocation(line: 761, column: 16, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8789, file: !898, line: 761, column: 9)
!8796 = !DILocation(line: 761, column: 14, scope: !8795)
!8797 = !DILocation(line: 761, column: 21, scope: !8798)
!8798 = !DILexicalBlockFile(scope: !8799, file: !898, discriminator: 1)
!8799 = distinct !DILexicalBlock(scope: !8795, file: !898, line: 761, column: 9)
!8800 = !DILocation(line: 761, column: 26, scope: !8798)
!8801 = !DILocation(line: 761, column: 28, scope: !8798)
!8802 = !DILocation(line: 761, column: 33, scope: !8798)
!8803 = !DILocation(line: 761, column: 23, scope: !8798)
!8804 = !DILocation(line: 761, column: 9, scope: !8798)
!8805 = !DILocalVariable(name: "tmp1", scope: !8806, file: !898, line: 762, type: !1007)
!8806 = distinct !DILexicalBlock(scope: !8799, file: !898, line: 761, column: 43)
!8807 = !DILocation(line: 762, column: 19, scope: !8806)
!8808 = !DILocation(line: 762, column: 33, scope: !8806)
!8809 = !DILocation(line: 762, column: 26, scope: !8806)
!8810 = !DILocalVariable(name: "tmp2", scope: !8806, file: !898, line: 763, type: !1007)
!8811 = !DILocation(line: 763, column: 19, scope: !8806)
!8812 = !DILocation(line: 763, column: 32, scope: !8806)
!8813 = !DILocation(line: 763, column: 36, scope: !8806)
!8814 = !DILocation(line: 763, column: 34, scope: !8806)
!8815 = !DILocation(line: 763, column: 38, scope: !8806)
!8816 = !DILocation(line: 763, column: 26, scope: !8806)
!8817 = !DILocation(line: 764, column: 26, scope: !8806)
!8818 = !DILocation(line: 764, column: 33, scope: !8806)
!8819 = !DILocation(line: 764, column: 38, scope: !8806)
!8820 = !DILocation(line: 764, column: 36, scope: !8806)
!8821 = !DILocation(line: 764, column: 31, scope: !8806)
!8822 = !DILocation(line: 764, column: 20, scope: !8806)
!8823 = !DILocation(line: 764, column: 13, scope: !8806)
!8824 = !DILocation(line: 764, column: 24, scope: !8806)
!8825 = !DILocation(line: 765, column: 32, scope: !8806)
!8826 = !DILocation(line: 765, column: 39, scope: !8806)
!8827 = !DILocation(line: 765, column: 44, scope: !8806)
!8828 = !DILocation(line: 765, column: 42, scope: !8806)
!8829 = !DILocation(line: 765, column: 37, scope: !8806)
!8830 = !DILocation(line: 765, column: 19, scope: !8806)
!8831 = !DILocation(line: 765, column: 23, scope: !8806)
!8832 = !DILocation(line: 765, column: 21, scope: !8806)
!8833 = !DILocation(line: 765, column: 25, scope: !8806)
!8834 = !DILocation(line: 765, column: 13, scope: !8806)
!8835 = !DILocation(line: 765, column: 30, scope: !8806)
!8836 = !DILocation(line: 766, column: 9, scope: !8806)
!8837 = !DILocation(line: 761, column: 39, scope: !8838)
!8838 = !DILexicalBlockFile(scope: !8799, file: !898, discriminator: 2)
!8839 = !DILocation(line: 761, column: 9, scope: !8838)
!8840 = distinct !{!8840, !8841}
!8841 = !DILocation(line: 761, column: 9, scope: !8789)
!8842 = !DILocation(line: 767, column: 20, scope: !8789)
!8843 = !DILocation(line: 767, column: 15, scope: !8789)
!8844 = !DILocation(line: 767, column: 9, scope: !8789)
!8845 = !DILocation(line: 767, column: 18, scope: !8789)
!8846 = !DILocation(line: 768, column: 5, scope: !8789)
!8847 = !DILocation(line: 759, column: 25, scope: !8848)
!8848 = !DILexicalBlockFile(scope: !8785, file: !898, discriminator: 2)
!8849 = !DILocation(line: 759, column: 5, scope: !8848)
!8850 = distinct !{!8850, !8851}
!8851 = !DILocation(line: 759, column: 5, scope: !8769)
!8852 = !DILocation(line: 769, column: 1, scope: !8769)
!8853 = distinct !DISubprogram(name: "parse_grid_3", scope: !898, file: !898, line: 587, type: !8854, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{null, !1064, !1004, !1004, !1004, !1004}
!8856 = !DILocalVariable(name: "s", arg: 1, scope: !8853, file: !898, line: 587, type: !1064)
!8857 = !DILocation(line: 587, column: 41, scope: !8853)
!8858 = !DILocalVariable(name: "ch1", arg: 2, scope: !8853, file: !898, line: 587, type: !1004)
!8859 = !DILocation(line: 587, column: 48, scope: !8853)
!8860 = !DILocalVariable(name: "ch2", arg: 3, scope: !8853, file: !898, line: 587, type: !1004)
!8861 = !DILocation(line: 587, column: 57, scope: !8853)
!8862 = !DILocalVariable(name: "sb", arg: 4, scope: !8853, file: !898, line: 587, type: !1004)
!8863 = !DILocation(line: 587, column: 66, scope: !8853)
!8864 = !DILocalVariable(name: "flag", arg: 5, scope: !8853, file: !898, line: 587, type: !1004)
!8865 = !DILocation(line: 587, column: 74, scope: !8853)
!8866 = !DILocalVariable(name: "i", scope: !8853, file: !898, line: 589, type: !1004)
!8867 = !DILocation(line: 589, column: 9, scope: !8853)
!8868 = !DILocalVariable(name: "ch", scope: !8853, file: !898, line: 589, type: !1004)
!8869 = !DILocation(line: 589, column: 12, scope: !8853)
!8870 = !DILocation(line: 591, column: 15, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8853, file: !898, line: 591, column: 5)
!8872 = !DILocation(line: 591, column: 13, scope: !8871)
!8873 = !DILocation(line: 591, column: 10, scope: !8871)
!8874 = !DILocation(line: 591, column: 20, scope: !8875)
!8875 = !DILexicalBlockFile(scope: !8876, file: !898, discriminator: 1)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !898, line: 591, column: 5)
!8877 = !DILocation(line: 591, column: 26, scope: !8875)
!8878 = !DILocation(line: 591, column: 23, scope: !8875)
!8879 = !DILocation(line: 591, column: 5, scope: !8875)
!8880 = !DILocation(line: 592, column: 14, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !898, line: 592, column: 13)
!8882 = distinct !DILexicalBlock(scope: !8876, file: !898, line: 591, column: 37)
!8883 = !DILocation(line: 592, column: 20, scope: !8881)
!8884 = !DILocation(line: 592, column: 17, scope: !8881)
!8885 = !DILocation(line: 592, column: 24, scope: !8881)
!8886 = !DILocation(line: 592, column: 27, scope: !8887)
!8887 = !DILexicalBlockFile(scope: !8881, file: !898, discriminator: 1)
!8888 = !DILocation(line: 592, column: 30, scope: !8887)
!8889 = !DILocation(line: 592, column: 37, scope: !8887)
!8890 = !DILocation(line: 592, column: 40, scope: !8887)
!8891 = !DILocation(line: 592, column: 34, scope: !8887)
!8892 = !DILocation(line: 592, column: 24, scope: !8893)
!8893 = !DILexicalBlockFile(scope: !8881, file: !898, discriminator: 2)
!8894 = !DILocation(line: 592, column: 61, scope: !8893)
!8895 = !DILocation(line: 592, column: 58, scope: !8893)
!8896 = !DILocation(line: 592, column: 13, scope: !8893)
!8897 = !DILocation(line: 593, column: 13, scope: !8881)
!8898 = !DILocation(line: 595, column: 28, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8882, file: !898, line: 595, column: 13)
!8900 = !DILocation(line: 595, column: 13, scope: !8899)
!8901 = !DILocation(line: 595, column: 16, scope: !8899)
!8902 = !DILocation(line: 595, column: 41, scope: !8899)
!8903 = !DILocation(line: 595, column: 38, scope: !8899)
!8904 = !DILocation(line: 595, column: 32, scope: !8899)
!8905 = !DILocation(line: 595, column: 13, scope: !8882)
!8906 = !DILocation(line: 596, column: 13, scope: !8899)
!8907 = !DILocation(line: 598, column: 16, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8882, file: !898, line: 598, column: 9)
!8909 = !DILocation(line: 598, column: 14, scope: !8908)
!8910 = !DILocation(line: 598, column: 21, scope: !8911)
!8911 = !DILexicalBlockFile(scope: !8912, file: !898, discriminator: 1)
!8912 = distinct !DILexicalBlock(scope: !8908, file: !898, line: 598, column: 9)
!8913 = !DILocation(line: 598, column: 23, scope: !8911)
!8914 = !DILocation(line: 598, column: 9, scope: !8911)
!8915 = !DILocation(line: 599, column: 30, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !898, line: 599, column: 17)
!8917 = distinct !DILexicalBlock(scope: !8912, file: !898, line: 598, column: 33)
!8918 = !DILocation(line: 599, column: 33, scope: !8916)
!8919 = !DILocation(line: 599, column: 17, scope: !8916)
!8920 = !DILocation(line: 599, column: 17, scope: !8917)
!8921 = !DILocation(line: 600, column: 17, scope: !8916)
!8922 = !DILocation(line: 601, column: 51, scope: !8917)
!8923 = !DILocation(line: 601, column: 54, scope: !8917)
!8924 = !DILocation(line: 601, column: 40, scope: !8917)
!8925 = !DILocation(line: 601, column: 81, scope: !8917)
!8926 = !DILocation(line: 601, column: 35, scope: !8917)
!8927 = !DILocation(line: 601, column: 13, scope: !8917)
!8928 = !DILocation(line: 601, column: 31, scope: !8917)
!8929 = !DILocation(line: 601, column: 27, scope: !8917)
!8930 = !DILocation(line: 601, column: 16, scope: !8917)
!8931 = !DILocation(line: 601, column: 38, scope: !8917)
!8932 = !DILocation(line: 602, column: 9, scope: !8917)
!8933 = !DILocation(line: 598, column: 29, scope: !8934)
!8934 = !DILexicalBlockFile(scope: !8912, file: !898, discriminator: 2)
!8935 = !DILocation(line: 598, column: 9, scope: !8934)
!8936 = distinct !{!8936, !8937}
!8937 = !DILocation(line: 598, column: 9, scope: !8882)
!8938 = !DILocation(line: 605, column: 37, scope: !8882)
!8939 = !DILocation(line: 605, column: 34, scope: !8882)
!8940 = !DILocation(line: 605, column: 24, scope: !8882)
!8941 = !DILocation(line: 605, column: 9, scope: !8882)
!8942 = !DILocation(line: 605, column: 12, scope: !8882)
!8943 = !DILocation(line: 605, column: 28, scope: !8882)
!8944 = !DILocation(line: 606, column: 5, scope: !8882)
!8945 = !DILocation(line: 591, column: 33, scope: !8946)
!8946 = !DILexicalBlockFile(scope: !8876, file: !898, discriminator: 2)
!8947 = !DILocation(line: 591, column: 5, scope: !8946)
!8948 = distinct !{!8948, !8949}
!8949 = !DILocation(line: 591, column: 5, scope: !8853)
!8950 = !DILocation(line: 607, column: 1, scope: !8853)
!8951 = distinct !DISubprogram(name: "parse_ch", scope: !898, file: !898, line: 618, type: !8854, isLocal: true, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!8952 = !DILocation(line: 762, column: 74, scope: !7819, inlinedAt: !8953)
!8953 = distinct !DILocation(line: 670, column: 45, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !898, line: 669, column: 9)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !898, line: 669, column: 9)
!8956 = distinct !DILexicalBlock(scope: !8951, file: !898, line: 628, column: 26)
!8957 = !DILocation(line: 762, column: 87, scope: !7819, inlinedAt: !8953)
!8958 = !DILocation(line: 763, column: 42, scope: !7819, inlinedAt: !8953)
!8959 = !DILocation(line: 763, column: 52, scope: !7819, inlinedAt: !8953)
!8960 = !DILocation(line: 783, column: 9, scope: !7819, inlinedAt: !8953)
!8961 = !DILocation(line: 785, column: 18, scope: !7819, inlinedAt: !8953)
!8962 = !DILocation(line: 785, column: 78, scope: !7819, inlinedAt: !8953)
!8963 = !DILocation(line: 785, column: 101, scope: !7819, inlinedAt: !8953)
!8964 = !DILocation(line: 788, column: 14, scope: !7839, inlinedAt: !8953)
!8965 = !DILocation(line: 788, column: 17, scope: !7839, inlinedAt: !8953)
!8966 = !DILocation(line: 788, column: 39, scope: !7839, inlinedAt: !8953)
!8967 = !DILocalVariable(name: "s", arg: 1, scope: !8951, file: !898, line: 618, type: !1064)
!8968 = !DILocation(line: 618, column: 37, scope: !8951)
!8969 = !DILocalVariable(name: "ch", arg: 2, scope: !8951, file: !898, line: 618, type: !1004)
!8970 = !DILocation(line: 618, column: 44, scope: !8951)
!8971 = !DILocalVariable(name: "sb", arg: 3, scope: !8951, file: !898, line: 618, type: !1004)
!8972 = !DILocation(line: 618, column: 52, scope: !8951)
!8973 = !DILocalVariable(name: "quant_level", arg: 4, scope: !8951, file: !898, line: 618, type: !1004)
!8974 = !DILocation(line: 618, column: 60, scope: !8951)
!8975 = !DILocalVariable(name: "flag", arg: 5, scope: !8951, file: !898, line: 618, type: !1004)
!8976 = !DILocation(line: 618, column: 77, scope: !8951)
!8977 = !DILocalVariable(name: "samples", scope: !8951, file: !898, line: 620, type: !1006)
!8978 = !DILocation(line: 620, column: 12, scope: !8951)
!8979 = !DILocation(line: 620, column: 42, scope: !8951)
!8980 = !DILocation(line: 620, column: 22, scope: !8951)
!8981 = !DILocation(line: 620, column: 38, scope: !8951)
!8982 = !DILocation(line: 620, column: 25, scope: !8951)
!8983 = !DILocalVariable(name: "i", scope: !8951, file: !898, line: 621, type: !1004)
!8984 = !DILocation(line: 621, column: 9, scope: !8951)
!8985 = !DILocalVariable(name: "j", scope: !8951, file: !898, line: 621, type: !1004)
!8986 = !DILocation(line: 621, column: 12, scope: !8951)
!8987 = !DILocalVariable(name: "code", scope: !8951, file: !898, line: 621, type: !1004)
!8988 = !DILocation(line: 621, column: 15, scope: !8951)
!8989 = !DILocalVariable(name: "nblocks", scope: !8951, file: !898, line: 621, type: !1004)
!8990 = !DILocation(line: 621, column: 21, scope: !8951)
!8991 = !DILocalVariable(name: "coding_method", scope: !8951, file: !898, line: 621, type: !1004)
!8992 = !DILocation(line: 621, column: 30, scope: !8951)
!8993 = !DILocation(line: 623, column: 22, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8951, file: !898, line: 623, column: 9)
!8995 = !DILocation(line: 623, column: 25, scope: !8994)
!8996 = !DILocation(line: 623, column: 9, scope: !8994)
!8997 = !DILocation(line: 623, column: 9, scope: !8951)
!8998 = !DILocation(line: 624, column: 9, scope: !8994)
!8999 = !DILocation(line: 626, column: 32, scope: !8951)
!9000 = !DILocation(line: 626, column: 35, scope: !8951)
!9001 = !DILocation(line: 626, column: 21, scope: !8951)
!9002 = !DILocation(line: 626, column: 19, scope: !8951)
!9003 = !DILocation(line: 628, column: 13, scope: !8951)
!9004 = !DILocation(line: 628, column: 5, scope: !8951)
!9005 = !DILocation(line: 630, column: 36, scope: !8956)
!9006 = !DILocation(line: 630, column: 39, scope: !8956)
!9007 = !DILocation(line: 630, column: 21, scope: !8956)
!9008 = !DILocation(line: 630, column: 43, scope: !8956)
!9009 = !DILocation(line: 630, column: 48, scope: !8956)
!9010 = !DILocation(line: 630, column: 20, scope: !8956)
!9011 = !DILocation(line: 630, column: 20, scope: !9012)
!9012 = !DILexicalBlockFile(scope: !8956, file: !898, discriminator: 1)
!9013 = !DILocation(line: 630, column: 90, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !8956, file: !898, discriminator: 2)
!9015 = !DILocation(line: 630, column: 93, scope: !9014)
!9016 = !DILocation(line: 630, column: 75, scope: !9014)
!9017 = !DILocation(line: 630, column: 97, scope: !9014)
!9018 = !DILocation(line: 630, column: 20, scope: !9014)
!9019 = !DILocation(line: 630, column: 20, scope: !9020)
!9020 = !DILexicalBlockFile(scope: !8956, file: !898, discriminator: 3)
!9021 = !DILocation(line: 630, column: 17, scope: !9020)
!9022 = !DILocation(line: 631, column: 16, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !8956, file: !898, line: 631, column: 9)
!9024 = !DILocation(line: 631, column: 14, scope: !9023)
!9025 = !DILocation(line: 631, column: 21, scope: !9026)
!9026 = !DILexicalBlockFile(scope: !9027, file: !898, discriminator: 1)
!9027 = distinct !DILexicalBlock(scope: !9023, file: !898, line: 631, column: 9)
!9028 = !DILocation(line: 631, column: 25, scope: !9026)
!9029 = !DILocation(line: 631, column: 23, scope: !9026)
!9030 = !DILocation(line: 631, column: 9, scope: !9026)
!9031 = !DILocation(line: 632, column: 30, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9027, file: !898, line: 631, column: 53)
!9033 = !DILocation(line: 632, column: 33, scope: !9032)
!9034 = !DILocation(line: 632, column: 20, scope: !9032)
!9035 = !DILocation(line: 632, column: 18, scope: !9032)
!9036 = !DILocation(line: 633, column: 20, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9032, file: !898, line: 633, column: 13)
!9038 = !DILocation(line: 633, column: 18, scope: !9037)
!9039 = !DILocation(line: 633, column: 25, scope: !9040)
!9040 = !DILexicalBlockFile(scope: !9041, file: !898, discriminator: 1)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !898, line: 633, column: 13)
!9042 = !DILocation(line: 633, column: 27, scope: !9040)
!9043 = !DILocation(line: 633, column: 13, scope: !9040)
!9044 = !DILocation(line: 634, column: 51, scope: !9041)
!9045 = !DILocation(line: 634, column: 59, scope: !9041)
!9046 = !DILocation(line: 634, column: 56, scope: !9041)
!9047 = !DILocation(line: 634, column: 62, scope: !9041)
!9048 = !DILocation(line: 634, column: 30, scope: !9041)
!9049 = !DILocation(line: 634, column: 25, scope: !9041)
!9050 = !DILocation(line: 634, column: 17, scope: !9041)
!9051 = !DILocation(line: 634, column: 28, scope: !9041)
!9052 = !DILocation(line: 633, column: 33, scope: !9053)
!9053 = !DILexicalBlockFile(scope: !9041, file: !898, discriminator: 2)
!9054 = !DILocation(line: 633, column: 13, scope: !9053)
!9055 = distinct !{!9055, !9056}
!9056 = !DILocation(line: 633, column: 13, scope: !9032)
!9057 = !DILocation(line: 635, column: 9, scope: !9032)
!9058 = !DILocation(line: 631, column: 35, scope: !9059)
!9059 = !DILexicalBlockFile(scope: !9027, file: !898, discriminator: 2)
!9060 = !DILocation(line: 631, column: 47, scope: !9059)
!9061 = !DILocation(line: 631, column: 9, scope: !9059)
!9062 = distinct !{!9062, !9063}
!9063 = !DILocation(line: 631, column: 9, scope: !8956)
!9064 = !DILocation(line: 636, column: 13, scope: !8956)
!9065 = !DILocation(line: 636, column: 21, scope: !8956)
!9066 = !DILocation(line: 636, column: 11, scope: !8956)
!9067 = !DILocation(line: 637, column: 9, scope: !8956)
!9068 = !DILocation(line: 640, column: 13, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !8956, file: !898, line: 640, column: 13)
!9070 = !DILocation(line: 640, column: 13, scope: !8956)
!9071 = !DILocation(line: 641, column: 20, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !898, line: 641, column: 13)
!9073 = distinct !DILexicalBlock(scope: !9069, file: !898, line: 640, column: 28)
!9074 = !DILocation(line: 641, column: 18, scope: !9072)
!9075 = !DILocation(line: 641, column: 25, scope: !9076)
!9076 = !DILexicalBlockFile(scope: !9077, file: !898, discriminator: 1)
!9077 = distinct !DILexicalBlock(scope: !9072, file: !898, line: 641, column: 13)
!9078 = !DILocation(line: 641, column: 27, scope: !9076)
!9079 = !DILocation(line: 641, column: 33, scope: !9076)
!9080 = !DILocation(line: 641, column: 51, scope: !9081)
!9081 = !DILexicalBlockFile(scope: !9077, file: !898, discriminator: 2)
!9082 = !DILocation(line: 641, column: 54, scope: !9081)
!9083 = !DILocation(line: 641, column: 36, scope: !9081)
!9084 = !DILocation(line: 641, column: 58, scope: !9081)
!9085 = !DILocation(line: 641, column: 13, scope: !9086)
!9086 = !DILexicalBlockFile(scope: !9072, file: !898, discriminator: 3)
!9087 = !DILocation(line: 642, column: 32, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !898, line: 642, column: 21)
!9089 = distinct !DILexicalBlock(scope: !9077, file: !898, line: 641, column: 69)
!9090 = !DILocation(line: 642, column: 35, scope: !9088)
!9091 = !DILocation(line: 642, column: 21, scope: !9088)
!9092 = !DILocation(line: 642, column: 21, scope: !9089)
!9093 = !DILocation(line: 643, column: 65, scope: !9088)
!9094 = !DILocation(line: 643, column: 68, scope: !9088)
!9095 = !DILocation(line: 643, column: 54, scope: !9088)
!9096 = !DILocation(line: 643, column: 34, scope: !9088)
!9097 = !DILocation(line: 643, column: 29, scope: !9088)
!9098 = !DILocation(line: 643, column: 21, scope: !9088)
!9099 = !DILocation(line: 643, column: 32, scope: !9088)
!9100 = !DILocation(line: 645, column: 29, scope: !9088)
!9101 = !DILocation(line: 645, column: 21, scope: !9088)
!9102 = !DILocation(line: 645, column: 32, scope: !9088)
!9103 = !DILocation(line: 646, column: 13, scope: !9089)
!9104 = !DILocation(line: 641, column: 65, scope: !9105)
!9105 = !DILexicalBlockFile(scope: !9077, file: !898, discriminator: 4)
!9106 = !DILocation(line: 641, column: 13, scope: !9105)
!9107 = distinct !{!9107, !9108}
!9108 = !DILocation(line: 641, column: 13, scope: !9073)
!9109 = !DILocation(line: 647, column: 9, scope: !9073)
!9110 = !DILocation(line: 648, column: 40, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9069, file: !898, line: 647, column: 16)
!9112 = !DILocation(line: 648, column: 43, scope: !9111)
!9113 = !DILocation(line: 648, column: 25, scope: !9111)
!9114 = !DILocation(line: 648, column: 47, scope: !9111)
!9115 = !DILocation(line: 648, column: 52, scope: !9111)
!9116 = !DILocation(line: 648, column: 24, scope: !9111)
!9117 = !DILocation(line: 648, column: 24, scope: !9118)
!9118 = !DILexicalBlockFile(scope: !9111, file: !898, discriminator: 1)
!9119 = !DILocation(line: 648, column: 106, scope: !9120)
!9120 = !DILexicalBlockFile(scope: !9111, file: !898, discriminator: 2)
!9121 = !DILocation(line: 648, column: 109, scope: !9120)
!9122 = !DILocation(line: 648, column: 91, scope: !9120)
!9123 = !DILocation(line: 648, column: 113, scope: !9120)
!9124 = !DILocation(line: 648, column: 24, scope: !9120)
!9125 = !DILocation(line: 648, column: 24, scope: !9126)
!9126 = !DILexicalBlockFile(scope: !9111, file: !898, discriminator: 3)
!9127 = !DILocation(line: 648, column: 21, scope: !9126)
!9128 = !DILocation(line: 649, column: 20, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9111, file: !898, line: 649, column: 13)
!9130 = !DILocation(line: 649, column: 18, scope: !9129)
!9131 = !DILocation(line: 649, column: 25, scope: !9132)
!9132 = !DILexicalBlockFile(scope: !9133, file: !898, discriminator: 1)
!9133 = distinct !DILexicalBlock(scope: !9129, file: !898, line: 649, column: 13)
!9134 = !DILocation(line: 649, column: 29, scope: !9132)
!9135 = !DILocation(line: 649, column: 27, scope: !9132)
!9136 = !DILocation(line: 649, column: 13, scope: !9132)
!9137 = !DILocation(line: 650, column: 57, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9133, file: !898, line: 649, column: 57)
!9139 = !DILocation(line: 650, column: 60, scope: !9138)
!9140 = !DILocation(line: 650, column: 47, scope: !9138)
!9141 = !DILocation(line: 650, column: 24, scope: !9138)
!9142 = !DILocation(line: 650, column: 22, scope: !9138)
!9143 = !DILocation(line: 651, column: 24, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9138, file: !898, line: 651, column: 17)
!9145 = !DILocation(line: 651, column: 22, scope: !9144)
!9146 = !DILocation(line: 651, column: 29, scope: !9147)
!9147 = !DILexicalBlockFile(scope: !9148, file: !898, discriminator: 1)
!9148 = distinct !DILexicalBlock(scope: !9144, file: !898, line: 651, column: 17)
!9149 = !DILocation(line: 651, column: 31, scope: !9147)
!9150 = !DILocation(line: 651, column: 17, scope: !9147)
!9151 = !DILocation(line: 652, column: 54, scope: !9148)
!9152 = !DILocation(line: 652, column: 62, scope: !9148)
!9153 = !DILocation(line: 652, column: 64, scope: !9148)
!9154 = !DILocation(line: 652, column: 59, scope: !9148)
!9155 = !DILocation(line: 652, column: 69, scope: !9148)
!9156 = !DILocation(line: 652, column: 34, scope: !9148)
!9157 = !DILocation(line: 652, column: 29, scope: !9148)
!9158 = !DILocation(line: 652, column: 21, scope: !9148)
!9159 = !DILocation(line: 652, column: 32, scope: !9148)
!9160 = !DILocation(line: 651, column: 37, scope: !9161)
!9161 = !DILexicalBlockFile(scope: !9148, file: !898, discriminator: 2)
!9162 = !DILocation(line: 651, column: 17, scope: !9161)
!9163 = distinct !{!9163, !9164}
!9164 = !DILocation(line: 651, column: 17, scope: !9138)
!9165 = !DILocation(line: 653, column: 13, scope: !9138)
!9166 = !DILocation(line: 649, column: 39, scope: !9167)
!9167 = !DILexicalBlockFile(scope: !9133, file: !898, discriminator: 2)
!9168 = !DILocation(line: 649, column: 51, scope: !9167)
!9169 = !DILocation(line: 649, column: 13, scope: !9167)
!9170 = distinct !{!9170, !9171}
!9171 = !DILocation(line: 649, column: 13, scope: !9111)
!9172 = !DILocation(line: 654, column: 17, scope: !9111)
!9173 = !DILocation(line: 654, column: 25, scope: !9111)
!9174 = !DILocation(line: 654, column: 15, scope: !9111)
!9175 = !DILocation(line: 656, column: 9, scope: !8956)
!9176 = !DILocation(line: 659, column: 36, scope: !8956)
!9177 = !DILocation(line: 659, column: 39, scope: !8956)
!9178 = !DILocation(line: 659, column: 21, scope: !8956)
!9179 = !DILocation(line: 659, column: 43, scope: !8956)
!9180 = !DILocation(line: 659, column: 48, scope: !8956)
!9181 = !DILocation(line: 659, column: 20, scope: !8956)
!9182 = !DILocation(line: 659, column: 20, scope: !9012)
!9183 = !DILocation(line: 659, column: 102, scope: !9014)
!9184 = !DILocation(line: 659, column: 105, scope: !9014)
!9185 = !DILocation(line: 659, column: 87, scope: !9014)
!9186 = !DILocation(line: 659, column: 109, scope: !9014)
!9187 = !DILocation(line: 659, column: 20, scope: !9014)
!9188 = !DILocation(line: 659, column: 20, scope: !9020)
!9189 = !DILocation(line: 659, column: 17, scope: !9020)
!9190 = !DILocation(line: 660, column: 16, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !8956, file: !898, line: 660, column: 9)
!9192 = !DILocation(line: 660, column: 14, scope: !9191)
!9193 = !DILocation(line: 660, column: 21, scope: !9194)
!9194 = !DILexicalBlockFile(scope: !9195, file: !898, discriminator: 1)
!9195 = distinct !DILexicalBlock(scope: !9191, file: !898, line: 660, column: 9)
!9196 = !DILocation(line: 660, column: 25, scope: !9194)
!9197 = !DILocation(line: 660, column: 23, scope: !9194)
!9198 = !DILocation(line: 660, column: 9, scope: !9194)
!9199 = !DILocation(line: 661, column: 30, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9195, file: !898, line: 660, column: 53)
!9201 = !DILocation(line: 661, column: 33, scope: !9200)
!9202 = !DILocation(line: 661, column: 20, scope: !9200)
!9203 = !DILocation(line: 661, column: 18, scope: !9200)
!9204 = !DILocation(line: 662, column: 20, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9200, file: !898, line: 662, column: 13)
!9206 = !DILocation(line: 662, column: 18, scope: !9205)
!9207 = !DILocation(line: 662, column: 25, scope: !9208)
!9208 = !DILexicalBlockFile(scope: !9209, file: !898, discriminator: 1)
!9209 = distinct !DILexicalBlock(scope: !9205, file: !898, line: 662, column: 13)
!9210 = !DILocation(line: 662, column: 27, scope: !9208)
!9211 = !DILocation(line: 662, column: 13, scope: !9208)
!9212 = !DILocation(line: 663, column: 78, scope: !9209)
!9213 = !DILocation(line: 663, column: 49, scope: !9209)
!9214 = !DILocation(line: 663, column: 72, scope: !9209)
!9215 = !DILocation(line: 663, column: 30, scope: !9209)
!9216 = !DILocation(line: 663, column: 25, scope: !9209)
!9217 = !DILocation(line: 663, column: 17, scope: !9209)
!9218 = !DILocation(line: 663, column: 28, scope: !9209)
!9219 = !DILocation(line: 662, column: 33, scope: !9220)
!9220 = !DILexicalBlockFile(scope: !9209, file: !898, discriminator: 2)
!9221 = !DILocation(line: 662, column: 13, scope: !9220)
!9222 = distinct !{!9222, !9223}
!9223 = !DILocation(line: 662, column: 13, scope: !9200)
!9224 = !DILocation(line: 664, column: 9, scope: !9200)
!9225 = !DILocation(line: 660, column: 35, scope: !9226)
!9226 = !DILexicalBlockFile(scope: !9195, file: !898, discriminator: 2)
!9227 = !DILocation(line: 660, column: 47, scope: !9226)
!9228 = !DILocation(line: 660, column: 9, scope: !9226)
!9229 = distinct !{!9229, !9230}
!9230 = !DILocation(line: 660, column: 9, scope: !8956)
!9231 = !DILocation(line: 665, column: 13, scope: !8956)
!9232 = !DILocation(line: 665, column: 21, scope: !8956)
!9233 = !DILocation(line: 665, column: 11, scope: !8956)
!9234 = !DILocation(line: 666, column: 9, scope: !8956)
!9235 = !DILocation(line: 669, column: 16, scope: !8955)
!9236 = !DILocation(line: 669, column: 14, scope: !8955)
!9237 = !DILocation(line: 669, column: 21, scope: !9238)
!9238 = !DILexicalBlockFile(scope: !8954, file: !898, discriminator: 1)
!9239 = !DILocation(line: 669, column: 23, scope: !9238)
!9240 = !DILocation(line: 669, column: 29, scope: !9238)
!9241 = !DILocation(line: 669, column: 47, scope: !9242)
!9242 = !DILexicalBlockFile(scope: !8954, file: !898, discriminator: 2)
!9243 = !DILocation(line: 669, column: 50, scope: !9242)
!9244 = !DILocation(line: 669, column: 32, scope: !9242)
!9245 = !DILocation(line: 669, column: 54, scope: !9242)
!9246 = !DILocation(line: 669, column: 9, scope: !9247)
!9247 = !DILexicalBlockFile(scope: !8955, file: !898, discriminator: 3)
!9248 = !DILocation(line: 670, column: 55, scope: !8954)
!9249 = !DILocation(line: 670, column: 58, scope: !8954)
!9250 = !DILocation(line: 670, column: 77, scope: !8954)
!9251 = !DILocation(line: 670, column: 45, scope: !8954)
!9252 = !DILocation(line: 785, column: 30, scope: !7819, inlinedAt: !8953)
!9253 = !DILocation(line: 785, column: 34, scope: !7819, inlinedAt: !8953)
!9254 = !DILocation(line: 785, column: 118, scope: !7819, inlinedAt: !8953)
!9255 = !DILocation(line: 785, column: 122, scope: !7819, inlinedAt: !8953)
!9256 = !DILocation(line: 786, column: 49, scope: !7819, inlinedAt: !8953)
!9257 = !DILocation(line: 786, column: 53, scope: !7819, inlinedAt: !8953)
!9258 = !DILocation(line: 786, column: 63, scope: !7819, inlinedAt: !8953)
!9259 = !DILocation(line: 786, column: 72, scope: !7819, inlinedAt: !8953)
!9260 = !DILocation(line: 786, column: 60, scope: !7819, inlinedAt: !8953)
!9261 = !DILocation(line: 786, column: 81, scope: !7819, inlinedAt: !8953)
!9262 = !DILocation(line: 786, column: 88, scope: !7819, inlinedAt: !8953)
!9263 = !DILocation(line: 786, column: 97, scope: !7819, inlinedAt: !8953)
!9264 = !DILocation(line: 786, column: 84, scope: !7819, inlinedAt: !8953)
!9265 = !DILocation(line: 786, column: 14, scope: !7819, inlinedAt: !8953)
!9266 = !DILocation(line: 788, column: 66, scope: !7875, inlinedAt: !8953)
!9267 = !DILocation(line: 788, column: 76, scope: !7875, inlinedAt: !8953)
!9268 = !DILocation(line: 788, column: 54, scope: !7875, inlinedAt: !8953)
!9269 = !DILocation(line: 788, column: 52, scope: !7875, inlinedAt: !8953)
!9270 = !DILocation(line: 788, column: 96, scope: !7875, inlinedAt: !8953)
!9271 = !DILocation(line: 788, column: 90, scope: !7875, inlinedAt: !8953)
!9272 = !DILocation(line: 788, column: 88, scope: !7875, inlinedAt: !8953)
!9273 = !DILocation(line: 788, column: 117, scope: !7875, inlinedAt: !8953)
!9274 = !DILocation(line: 788, column: 111, scope: !7875, inlinedAt: !8953)
!9275 = !DILocation(line: 788, column: 109, scope: !7875, inlinedAt: !8953)
!9276 = !DILocation(line: 788, column: 132, scope: !7875, inlinedAt: !8953)
!9277 = !DILocation(line: 788, column: 142, scope: !7875, inlinedAt: !8953)
!9278 = !DILocation(line: 788, column: 146, scope: !7875, inlinedAt: !8953)
!9279 = !DILocation(line: 788, column: 149, scope: !7889, inlinedAt: !8953)
!9280 = !DILocation(line: 788, column: 151, scope: !7889, inlinedAt: !8953)
!9281 = !DILocation(line: 788, column: 132, scope: !7889, inlinedAt: !8953)
!9282 = !DILocation(line: 788, column: 171, scope: !7894, inlinedAt: !8953)
!9283 = !DILocation(line: 788, column: 189, scope: !7894, inlinedAt: !8953)
!9284 = !DILocation(line: 788, column: 201, scope: !7894, inlinedAt: !8953)
!9285 = !DILocation(line: 788, column: 198, scope: !7894, inlinedAt: !8953)
!9286 = !DILocation(line: 788, column: 186, scope: !7894, inlinedAt: !8953)
!9287 = !DILocation(line: 788, column: 170, scope: !7894, inlinedAt: !8953)
!9288 = !DILocation(line: 788, column: 211, scope: !7902, inlinedAt: !8953)
!9289 = !DILocation(line: 788, column: 223, scope: !7902, inlinedAt: !8953)
!9290 = !DILocation(line: 788, column: 220, scope: !7902, inlinedAt: !8953)
!9291 = !DILocation(line: 788, column: 170, scope: !7902, inlinedAt: !8953)
!9292 = !DILocation(line: 788, column: 233, scope: !7907, inlinedAt: !8953)
!9293 = !DILocation(line: 788, column: 170, scope: !7907, inlinedAt: !8953)
!9294 = !DILocation(line: 788, column: 170, scope: !7910, inlinedAt: !8953)
!9295 = !DILocation(line: 788, column: 167, scope: !7910, inlinedAt: !8953)
!9296 = !DILocation(line: 788, column: 294, scope: !7910, inlinedAt: !8953)
!9297 = !DILocation(line: 788, column: 298, scope: !7910, inlinedAt: !8953)
!9298 = !DILocation(line: 788, column: 308, scope: !7910, inlinedAt: !8953)
!9299 = !DILocation(line: 788, column: 317, scope: !7910, inlinedAt: !8953)
!9300 = !DILocation(line: 788, column: 305, scope: !7910, inlinedAt: !8953)
!9301 = !DILocation(line: 788, column: 326, scope: !7910, inlinedAt: !8953)
!9302 = !DILocation(line: 788, column: 333, scope: !7910, inlinedAt: !8953)
!9303 = !DILocation(line: 788, column: 342, scope: !7910, inlinedAt: !8953)
!9304 = !DILocation(line: 788, column: 329, scope: !7910, inlinedAt: !8953)
!9305 = !DILocation(line: 788, column: 259, scope: !7910, inlinedAt: !8953)
!9306 = !DILocation(line: 788, column: 359, scope: !7910, inlinedAt: !8953)
!9307 = !DILocation(line: 788, column: 358, scope: !7910, inlinedAt: !8953)
!9308 = !DILocation(line: 788, column: 356, scope: !7910, inlinedAt: !8953)
!9309 = !DILocation(line: 788, column: 382, scope: !7910, inlinedAt: !8953)
!9310 = !DILocation(line: 788, column: 392, scope: !7910, inlinedAt: !8953)
!9311 = !DILocation(line: 788, column: 370, scope: !7910, inlinedAt: !8953)
!9312 = !DILocation(line: 788, column: 403, scope: !7910, inlinedAt: !8953)
!9313 = !DILocation(line: 788, column: 401, scope: !7910, inlinedAt: !8953)
!9314 = !DILocation(line: 788, column: 368, scope: !7910, inlinedAt: !8953)
!9315 = !DILocation(line: 788, column: 422, scope: !7910, inlinedAt: !8953)
!9316 = !DILocation(line: 788, column: 416, scope: !7910, inlinedAt: !8953)
!9317 = !DILocation(line: 788, column: 414, scope: !7910, inlinedAt: !8953)
!9318 = !DILocation(line: 788, column: 443, scope: !7910, inlinedAt: !8953)
!9319 = !DILocation(line: 788, column: 437, scope: !7910, inlinedAt: !8953)
!9320 = !DILocation(line: 788, column: 435, scope: !7910, inlinedAt: !8953)
!9321 = !DILocation(line: 788, column: 458, scope: !7910, inlinedAt: !8953)
!9322 = !DILocation(line: 788, column: 468, scope: !7910, inlinedAt: !8953)
!9323 = !DILocation(line: 788, column: 472, scope: !7910, inlinedAt: !8953)
!9324 = !DILocation(line: 788, column: 475, scope: !7941, inlinedAt: !8953)
!9325 = !DILocation(line: 788, column: 477, scope: !7941, inlinedAt: !8953)
!9326 = !DILocation(line: 788, column: 458, scope: !7941, inlinedAt: !8953)
!9327 = !DILocation(line: 788, column: 497, scope: !7946, inlinedAt: !8953)
!9328 = !DILocation(line: 788, column: 515, scope: !7946, inlinedAt: !8953)
!9329 = !DILocation(line: 788, column: 527, scope: !7946, inlinedAt: !8953)
!9330 = !DILocation(line: 788, column: 524, scope: !7946, inlinedAt: !8953)
!9331 = !DILocation(line: 788, column: 512, scope: !7946, inlinedAt: !8953)
!9332 = !DILocation(line: 788, column: 496, scope: !7946, inlinedAt: !8953)
!9333 = !DILocation(line: 788, column: 540, scope: !7954, inlinedAt: !8953)
!9334 = !DILocation(line: 788, column: 552, scope: !7954, inlinedAt: !8953)
!9335 = !DILocation(line: 788, column: 549, scope: !7954, inlinedAt: !8953)
!9336 = !DILocation(line: 788, column: 496, scope: !7954, inlinedAt: !8953)
!9337 = !DILocation(line: 788, column: 565, scope: !7959, inlinedAt: !8953)
!9338 = !DILocation(line: 788, column: 496, scope: !7959, inlinedAt: !8953)
!9339 = !DILocation(line: 788, column: 496, scope: !7962, inlinedAt: !8953)
!9340 = !DILocation(line: 788, column: 493, scope: !7962, inlinedAt: !8953)
!9341 = !DILocation(line: 788, column: 626, scope: !7962, inlinedAt: !8953)
!9342 = !DILocation(line: 788, column: 630, scope: !7962, inlinedAt: !8953)
!9343 = !DILocation(line: 788, column: 640, scope: !7962, inlinedAt: !8953)
!9344 = !DILocation(line: 788, column: 649, scope: !7962, inlinedAt: !8953)
!9345 = !DILocation(line: 788, column: 637, scope: !7962, inlinedAt: !8953)
!9346 = !DILocation(line: 788, column: 658, scope: !7962, inlinedAt: !8953)
!9347 = !DILocation(line: 788, column: 665, scope: !7962, inlinedAt: !8953)
!9348 = !DILocation(line: 788, column: 674, scope: !7962, inlinedAt: !8953)
!9349 = !DILocation(line: 788, column: 661, scope: !7962, inlinedAt: !8953)
!9350 = !DILocation(line: 788, column: 591, scope: !7962, inlinedAt: !8953)
!9351 = !DILocation(line: 788, column: 691, scope: !7962, inlinedAt: !8953)
!9352 = !DILocation(line: 788, column: 690, scope: !7962, inlinedAt: !8953)
!9353 = !DILocation(line: 788, column: 688, scope: !7962, inlinedAt: !8953)
!9354 = !DILocation(line: 788, column: 714, scope: !7962, inlinedAt: !8953)
!9355 = !DILocation(line: 788, column: 724, scope: !7962, inlinedAt: !8953)
!9356 = !DILocation(line: 788, column: 702, scope: !7962, inlinedAt: !8953)
!9357 = !DILocation(line: 788, column: 735, scope: !7962, inlinedAt: !8953)
!9358 = !DILocation(line: 788, column: 733, scope: !7962, inlinedAt: !8953)
!9359 = !DILocation(line: 788, column: 700, scope: !7962, inlinedAt: !8953)
!9360 = !DILocation(line: 788, column: 754, scope: !7962, inlinedAt: !8953)
!9361 = !DILocation(line: 788, column: 748, scope: !7962, inlinedAt: !8953)
!9362 = !DILocation(line: 788, column: 746, scope: !7962, inlinedAt: !8953)
!9363 = !DILocation(line: 788, column: 775, scope: !7962, inlinedAt: !8953)
!9364 = !DILocation(line: 788, column: 769, scope: !7962, inlinedAt: !8953)
!9365 = !DILocation(line: 788, column: 767, scope: !7962, inlinedAt: !8953)
!9366 = !DILocation(line: 788, column: 786, scope: !7962, inlinedAt: !8953)
!9367 = !DILocation(line: 788, column: 788, scope: !7991, inlinedAt: !8953)
!9368 = !DILocation(line: 788, column: 809, scope: !7993, inlinedAt: !8953)
!9369 = !DILocation(line: 788, column: 804, scope: !7993, inlinedAt: !8953)
!9370 = !DILocation(line: 788, column: 826, scope: !7993, inlinedAt: !8953)
!9371 = !DILocation(line: 788, column: 844, scope: !7993, inlinedAt: !8953)
!9372 = !DILocation(line: 788, column: 856, scope: !7993, inlinedAt: !8953)
!9373 = !DILocation(line: 788, column: 853, scope: !7993, inlinedAt: !8953)
!9374 = !DILocation(line: 788, column: 841, scope: !7993, inlinedAt: !8953)
!9375 = !DILocation(line: 788, column: 825, scope: !7993, inlinedAt: !8953)
!9376 = !DILocation(line: 788, column: 863, scope: !8003, inlinedAt: !8953)
!9377 = !DILocation(line: 788, column: 875, scope: !8003, inlinedAt: !8953)
!9378 = !DILocation(line: 788, column: 872, scope: !8003, inlinedAt: !8953)
!9379 = !DILocation(line: 788, column: 825, scope: !8003, inlinedAt: !8953)
!9380 = !DILocation(line: 788, column: 882, scope: !8008, inlinedAt: !8953)
!9381 = !DILocation(line: 788, column: 825, scope: !8008, inlinedAt: !8953)
!9382 = !DILocation(line: 788, column: 825, scope: !8011, inlinedAt: !8953)
!9383 = !DILocation(line: 788, column: 822, scope: !8011, inlinedAt: !8953)
!9384 = !DILocation(line: 790, column: 18, scope: !7819, inlinedAt: !8953)
!9385 = !DILocation(line: 790, column: 6, scope: !7819, inlinedAt: !8953)
!9386 = !DILocation(line: 790, column: 10, scope: !7819, inlinedAt: !8953)
!9387 = !DILocation(line: 790, column: 16, scope: !7819, inlinedAt: !8953)
!9388 = !DILocation(line: 792, column: 12, scope: !7819, inlinedAt: !8953)
!9389 = !DILocation(line: 670, column: 26, scope: !8954)
!9390 = !DILocation(line: 670, column: 21, scope: !8954)
!9391 = !DILocation(line: 670, column: 13, scope: !8954)
!9392 = !DILocation(line: 670, column: 24, scope: !8954)
!9393 = !DILocation(line: 669, column: 61, scope: !9394)
!9394 = !DILexicalBlockFile(scope: !8954, file: !898, discriminator: 4)
!9395 = !DILocation(line: 669, column: 9, scope: !9394)
!9396 = distinct !{!9396, !9397}
!9397 = !DILocation(line: 669, column: 9, scope: !8956)
!9398 = !DILocation(line: 671, column: 9, scope: !8956)
!9399 = !DILocation(line: 674, column: 36, scope: !8956)
!9400 = !DILocation(line: 674, column: 39, scope: !8956)
!9401 = !DILocation(line: 674, column: 21, scope: !8956)
!9402 = !DILocation(line: 674, column: 43, scope: !8956)
!9403 = !DILocation(line: 674, column: 48, scope: !8956)
!9404 = !DILocation(line: 674, column: 20, scope: !8956)
!9405 = !DILocation(line: 674, column: 20, scope: !9012)
!9406 = !DILocation(line: 674, column: 82, scope: !9014)
!9407 = !DILocation(line: 674, column: 85, scope: !9014)
!9408 = !DILocation(line: 674, column: 67, scope: !9014)
!9409 = !DILocation(line: 674, column: 89, scope: !9014)
!9410 = !DILocation(line: 674, column: 20, scope: !9014)
!9411 = !DILocation(line: 674, column: 20, scope: !9020)
!9412 = !DILocation(line: 674, column: 17, scope: !9020)
!9413 = !DILocation(line: 675, column: 16, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !8956, file: !898, line: 675, column: 9)
!9415 = !DILocation(line: 675, column: 14, scope: !9414)
!9416 = !DILocation(line: 675, column: 21, scope: !9417)
!9417 = !DILexicalBlockFile(scope: !9418, file: !898, discriminator: 1)
!9418 = distinct !DILexicalBlock(scope: !9414, file: !898, line: 675, column: 9)
!9419 = !DILocation(line: 675, column: 25, scope: !9417)
!9420 = !DILocation(line: 675, column: 23, scope: !9417)
!9421 = !DILocation(line: 675, column: 9, scope: !9417)
!9422 = !DILocation(line: 676, column: 56, scope: !9418)
!9423 = !DILocation(line: 676, column: 59, scope: !9418)
!9424 = !DILocation(line: 676, column: 46, scope: !9418)
!9425 = !DILocation(line: 676, column: 26, scope: !9418)
!9426 = !DILocation(line: 676, column: 21, scope: !9418)
!9427 = !DILocation(line: 676, column: 13, scope: !9418)
!9428 = !DILocation(line: 676, column: 24, scope: !9418)
!9429 = !DILocation(line: 675, column: 35, scope: !9430)
!9430 = !DILexicalBlockFile(scope: !9418, file: !898, discriminator: 2)
!9431 = !DILocation(line: 675, column: 9, scope: !9430)
!9432 = distinct !{!9432, !9433}
!9433 = !DILocation(line: 675, column: 9, scope: !8956)
!9434 = !DILocation(line: 677, column: 9, scope: !8956)
!9435 = !DILocation(line: 680, column: 9, scope: !8956)
!9436 = distinct !{!9436, !9435}
!9437 = !DILocation(line: 680, column: 26, scope: !9438)
!9438 = !DILexicalBlockFile(scope: !9439, file: !898, discriminator: 1)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !898, line: 680, column: 24)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !898, line: 680, column: 18)
!9441 = distinct !DILexicalBlock(scope: !8956, file: !898, line: 680, column: 12)
!9442 = !DILocation(line: 680, column: 82, scope: !9443)
!9443 = !DILexicalBlockFile(scope: !9438, file: !898, discriminator: 2)
!9444 = !DILocation(line: 680, column: 82, scope: !9438)
!9445 = !DILocation(line: 681, column: 5, scope: !8956)
!9446 = !DILocation(line: 683, column: 9, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !8951, file: !898, line: 683, column: 9)
!9448 = !DILocation(line: 683, column: 14, scope: !9447)
!9449 = !DILocation(line: 683, column: 32, scope: !9450)
!9450 = !DILexicalBlockFile(scope: !9447, file: !898, discriminator: 1)
!9451 = !DILocation(line: 683, column: 35, scope: !9450)
!9452 = !DILocation(line: 683, column: 17, scope: !9450)
!9453 = !DILocation(line: 683, column: 39, scope: !9450)
!9454 = !DILocation(line: 683, column: 9, scope: !9450)
!9455 = !DILocation(line: 684, column: 9, scope: !9447)
!9456 = !DILocation(line: 686, column: 5, scope: !8951)
!9457 = !DILocation(line: 686, column: 12, scope: !9458)
!9458 = !DILexicalBlockFile(scope: !9459, file: !898, discriminator: 1)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !898, line: 686, column: 5)
!9460 = distinct !DILexicalBlock(scope: !8951, file: !898, line: 686, column: 5)
!9461 = !DILocation(line: 686, column: 14, scope: !9458)
!9462 = !DILocation(line: 686, column: 5, scope: !9458)
!9463 = !DILocation(line: 687, column: 47, scope: !9459)
!9464 = !DILocation(line: 687, column: 50, scope: !9459)
!9465 = !DILocation(line: 687, column: 38, scope: !9459)
!9466 = !DILocation(line: 687, column: 33, scope: !9459)
!9467 = !DILocation(line: 687, column: 9, scope: !9459)
!9468 = !DILocation(line: 687, column: 29, scope: !9459)
!9469 = !DILocation(line: 687, column: 25, scope: !9459)
!9470 = !DILocation(line: 687, column: 12, scope: !9459)
!9471 = !DILocation(line: 687, column: 36, scope: !9459)
!9472 = !DILocation(line: 686, column: 22, scope: !9473)
!9473 = !DILexicalBlockFile(scope: !9459, file: !898, discriminator: 2)
!9474 = !DILocation(line: 686, column: 5, scope: !9473)
!9475 = distinct !{!9475, !9456}
!9476 = !DILocation(line: 689, column: 29, scope: !8951)
!9477 = !DILocation(line: 689, column: 26, scope: !8951)
!9478 = !DILocation(line: 689, column: 16, scope: !8951)
!9479 = !DILocation(line: 689, column: 5, scope: !8951)
!9480 = !DILocation(line: 689, column: 8, scope: !8951)
!9481 = !DILocation(line: 689, column: 20, scope: !8951)
!9482 = !DILocation(line: 690, column: 1, scope: !8951)
!9483 = !DILocation(line: 690, column: 1, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !8951, file: !898, discriminator: 1)
!9485 = distinct !DISubprogram(name: "lbr_rand", scope: !898, file: !898, line: 609, type: !9486, isLocal: true, isDefinition: true, scopeLine: 610, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!1007, !1064, !1004}
!9488 = !DILocalVariable(name: "s", arg: 1, scope: !9485, file: !898, line: 609, type: !1064)
!9489 = !DILocation(line: 609, column: 38, scope: !9485)
!9490 = !DILocalVariable(name: "sb", arg: 2, scope: !9485, file: !898, line: 609, type: !1004)
!9491 = !DILocation(line: 609, column: 45, scope: !9485)
!9492 = !DILocation(line: 611, column: 33, scope: !9485)
!9493 = !DILocation(line: 611, column: 36, scope: !9485)
!9494 = !DILocation(line: 611, column: 31, scope: !9485)
!9495 = !DILocation(line: 611, column: 45, scope: !9485)
!9496 = !DILocation(line: 611, column: 5, scope: !9485)
!9497 = !DILocation(line: 611, column: 8, scope: !9485)
!9498 = !DILocation(line: 611, column: 17, scope: !9485)
!9499 = !DILocation(line: 612, column: 12, scope: !9485)
!9500 = !DILocation(line: 612, column: 15, scope: !9485)
!9501 = !DILocation(line: 612, column: 36, scope: !9485)
!9502 = !DILocation(line: 612, column: 26, scope: !9485)
!9503 = !DILocation(line: 612, column: 29, scope: !9485)
!9504 = !DILocation(line: 612, column: 24, scope: !9485)
!9505 = !DILocation(line: 612, column: 5, scope: !9485)
!9506 = distinct !DISubprogram(name: "parse_grid_2", scope: !898, file: !898, line: 851, type: !8519, isLocal: true, isDefinition: true, scopeLine: 853, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!9507 = !DILocalVariable(name: "s", arg: 1, scope: !9506, file: !898, line: 851, type: !1064)
!9508 = !DILocation(line: 851, column: 40, scope: !9506)
!9509 = !DILocalVariable(name: "ch1", arg: 2, scope: !9506, file: !898, line: 851, type: !1004)
!9510 = !DILocation(line: 851, column: 47, scope: !9506)
!9511 = !DILocalVariable(name: "ch2", arg: 3, scope: !9506, file: !898, line: 851, type: !1004)
!9512 = !DILocation(line: 851, column: 56, scope: !9506)
!9513 = !DILocalVariable(name: "start_sb", arg: 4, scope: !9506, file: !898, line: 852, type: !1004)
!9514 = !DILocation(line: 852, column: 29, scope: !9506)
!9515 = !DILocalVariable(name: "end_sb", arg: 5, scope: !9506, file: !898, line: 852, type: !1004)
!9516 = !DILocation(line: 852, column: 43, scope: !9506)
!9517 = !DILocalVariable(name: "flag", arg: 6, scope: !9506, file: !898, line: 852, type: !1004)
!9518 = !DILocation(line: 852, column: 55, scope: !9506)
!9519 = !DILocalVariable(name: "i", scope: !9506, file: !898, line: 854, type: !1004)
!9520 = !DILocation(line: 854, column: 9, scope: !9506)
!9521 = !DILocalVariable(name: "j", scope: !9506, file: !898, line: 854, type: !1004)
!9522 = !DILocation(line: 854, column: 12, scope: !9506)
!9523 = !DILocalVariable(name: "sb", scope: !9506, file: !898, line: 854, type: !1004)
!9524 = !DILocation(line: 854, column: 15, scope: !9506)
!9525 = !DILocalVariable(name: "ch", scope: !9506, file: !898, line: 854, type: !1004)
!9526 = !DILocation(line: 854, column: 19, scope: !9506)
!9527 = !DILocalVariable(name: "nsubbands", scope: !9506, file: !898, line: 854, type: !1004)
!9528 = !DILocation(line: 854, column: 23, scope: !9506)
!9529 = !DILocation(line: 856, column: 38, scope: !9506)
!9530 = !DILocation(line: 856, column: 41, scope: !9506)
!9531 = !DILocation(line: 856, column: 51, scope: !9506)
!9532 = !DILocation(line: 856, column: 17, scope: !9506)
!9533 = !DILocation(line: 856, column: 56, scope: !9506)
!9534 = !DILocation(line: 856, column: 15, scope: !9506)
!9535 = !DILocation(line: 857, column: 9, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9506, file: !898, line: 857, column: 9)
!9537 = !DILocation(line: 857, column: 18, scope: !9536)
!9538 = !DILocation(line: 857, column: 16, scope: !9536)
!9539 = !DILocation(line: 857, column: 9, scope: !9506)
!9540 = !DILocation(line: 858, column: 18, scope: !9536)
!9541 = !DILocation(line: 858, column: 16, scope: !9536)
!9542 = !DILocation(line: 858, column: 9, scope: !9536)
!9543 = !DILocation(line: 860, column: 15, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9506, file: !898, line: 860, column: 5)
!9545 = !DILocation(line: 860, column: 13, scope: !9544)
!9546 = !DILocation(line: 860, column: 10, scope: !9544)
!9547 = !DILocation(line: 860, column: 25, scope: !9548)
!9548 = !DILexicalBlockFile(scope: !9549, file: !898, discriminator: 1)
!9549 = distinct !DILexicalBlock(scope: !9544, file: !898, line: 860, column: 5)
!9550 = !DILocation(line: 860, column: 30, scope: !9548)
!9551 = !DILocation(line: 860, column: 28, scope: !9548)
!9552 = !DILocation(line: 860, column: 5, scope: !9548)
!9553 = !DILocation(line: 861, column: 19, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !898, line: 861, column: 9)
!9555 = distinct !DILexicalBlock(scope: !9549, file: !898, line: 860, column: 44)
!9556 = !DILocation(line: 861, column: 17, scope: !9554)
!9557 = !DILocation(line: 861, column: 14, scope: !9554)
!9558 = !DILocation(line: 861, column: 24, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !9560, file: !898, discriminator: 1)
!9560 = distinct !DILexicalBlock(scope: !9554, file: !898, line: 861, column: 9)
!9561 = !DILocation(line: 861, column: 30, scope: !9559)
!9562 = !DILocation(line: 861, column: 27, scope: !9559)
!9563 = !DILocation(line: 861, column: 9, scope: !9559)
!9564 = !DILocalVariable(name: "g2_scf", scope: !9565, file: !898, line: 862, type: !1195)
!9565 = distinct !DILexicalBlock(scope: !9560, file: !898, line: 861, column: 41)
!9566 = !DILocation(line: 862, column: 22, scope: !9565)
!9567 = !DILocation(line: 862, column: 49, scope: !9565)
!9568 = !DILocation(line: 862, column: 31, scope: !9565)
!9569 = !DILocation(line: 862, column: 45, scope: !9565)
!9570 = !DILocation(line: 862, column: 34, scope: !9565)
!9571 = !DILocation(line: 864, column: 18, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9565, file: !898, line: 864, column: 17)
!9573 = !DILocation(line: 864, column: 24, scope: !9572)
!9574 = !DILocation(line: 864, column: 21, scope: !9572)
!9575 = !DILocation(line: 864, column: 28, scope: !9572)
!9576 = !DILocation(line: 864, column: 52, scope: !9577)
!9577 = !DILexicalBlockFile(scope: !9572, file: !898, discriminator: 1)
!9578 = !DILocation(line: 864, column: 31, scope: !9577)
!9579 = !DILocation(line: 864, column: 59, scope: !9577)
!9580 = !DILocation(line: 864, column: 62, scope: !9577)
!9581 = !DILocation(line: 864, column: 56, scope: !9577)
!9582 = !DILocation(line: 864, column: 28, scope: !9583)
!9583 = !DILexicalBlockFile(scope: !9572, file: !898, discriminator: 2)
!9584 = !DILocation(line: 864, column: 83, scope: !9583)
!9585 = !DILocation(line: 864, column: 80, scope: !9583)
!9586 = !DILocation(line: 864, column: 17, scope: !9583)
!9587 = !DILocation(line: 865, column: 22, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !898, line: 865, column: 21)
!9589 = distinct !DILexicalBlock(scope: !9572, file: !898, line: 864, column: 89)
!9590 = !DILocation(line: 865, column: 21, scope: !9589)
!9591 = !DILocation(line: 866, column: 28, scope: !9588)
!9592 = !DILocation(line: 866, column: 55, scope: !9588)
!9593 = !DILocation(line: 866, column: 36, scope: !9588)
!9594 = !DILocation(line: 866, column: 50, scope: !9588)
!9595 = !DILocation(line: 866, column: 39, scope: !9588)
!9596 = !DILocation(line: 866, column: 21, scope: !9588)
!9597 = !DILocation(line: 867, column: 17, scope: !9589)
!9598 = !DILocation(line: 871, column: 20, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9565, file: !898, line: 871, column: 13)
!9600 = !DILocation(line: 871, column: 18, scope: !9599)
!9601 = !DILocation(line: 871, column: 25, scope: !9602)
!9602 = !DILexicalBlockFile(scope: !9603, file: !898, discriminator: 1)
!9603 = distinct !DILexicalBlock(scope: !9599, file: !898, line: 871, column: 13)
!9604 = !DILocation(line: 871, column: 27, scope: !9602)
!9605 = !DILocation(line: 871, column: 13, scope: !9602)
!9606 = !DILocation(line: 872, column: 36, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !898, line: 872, column: 21)
!9608 = distinct !DILexicalBlock(scope: !9603, file: !898, line: 871, column: 50)
!9609 = !DILocation(line: 872, column: 39, scope: !9607)
!9610 = !DILocation(line: 872, column: 21, scope: !9607)
!9611 = !DILocation(line: 872, column: 43, scope: !9607)
!9612 = !DILocation(line: 872, column: 21, scope: !9608)
!9613 = !DILocation(line: 873, column: 28, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9607, file: !898, line: 872, column: 48)
!9615 = !DILocation(line: 873, column: 44, scope: !9614)
!9616 = !DILocation(line: 873, column: 46, scope: !9614)
!9617 = !DILocation(line: 873, column: 42, scope: !9614)
!9618 = !DILocation(line: 873, column: 39, scope: !9614)
!9619 = !DILocation(line: 873, column: 21, scope: !9614)
!9620 = !DILocation(line: 874, column: 21, scope: !9614)
!9621 = !DILocation(line: 877, column: 32, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9608, file: !898, line: 877, column: 21)
!9623 = !DILocation(line: 877, column: 35, scope: !9622)
!9624 = !DILocation(line: 877, column: 21, scope: !9622)
!9625 = !DILocation(line: 877, column: 21, scope: !9608)
!9626 = !DILocation(line: 878, column: 28, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9628, file: !898, line: 878, column: 21)
!9628 = distinct !DILexicalBlock(scope: !9622, file: !898, line: 877, column: 40)
!9629 = !DILocation(line: 878, column: 26, scope: !9627)
!9630 = !DILocation(line: 878, column: 33, scope: !9631)
!9631 = !DILexicalBlockFile(scope: !9632, file: !898, discriminator: 1)
!9632 = distinct !DILexicalBlock(scope: !9627, file: !898, line: 878, column: 21)
!9633 = !DILocation(line: 878, column: 35, scope: !9631)
!9634 = !DILocation(line: 878, column: 21, scope: !9631)
!9635 = !DILocation(line: 879, column: 42, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !898, line: 879, column: 29)
!9637 = distinct !DILexicalBlock(scope: !9632, file: !898, line: 878, column: 45)
!9638 = !DILocation(line: 879, column: 45, scope: !9636)
!9639 = !DILocation(line: 879, column: 29, scope: !9636)
!9640 = !DILocation(line: 879, column: 29, scope: !9637)
!9641 = !DILocation(line: 880, column: 29, scope: !9636)
!9642 = !DILocation(line: 881, column: 48, scope: !9637)
!9643 = !DILocation(line: 881, column: 51, scope: !9637)
!9644 = !DILocation(line: 881, column: 37, scope: !9637)
!9645 = !DILocation(line: 881, column: 32, scope: !9637)
!9646 = !DILocation(line: 881, column: 25, scope: !9637)
!9647 = !DILocation(line: 881, column: 35, scope: !9637)
!9648 = !DILocation(line: 882, column: 21, scope: !9637)
!9649 = !DILocation(line: 878, column: 41, scope: !9650)
!9650 = !DILexicalBlockFile(scope: !9632, file: !898, discriminator: 2)
!9651 = !DILocation(line: 878, column: 21, scope: !9650)
!9652 = distinct !{!9652, !9653}
!9653 = !DILocation(line: 878, column: 21, scope: !9628)
!9654 = !DILocation(line: 883, column: 17, scope: !9628)
!9655 = !DILocation(line: 884, column: 28, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9622, file: !898, line: 883, column: 24)
!9657 = !DILocation(line: 884, column: 21, scope: !9656)
!9658 = !DILocation(line: 886, column: 13, scope: !9608)
!9659 = !DILocation(line: 871, column: 33, scope: !9660)
!9660 = !DILexicalBlockFile(scope: !9603, file: !898, discriminator: 2)
!9661 = !DILocation(line: 871, column: 44, scope: !9660)
!9662 = !DILocation(line: 871, column: 13, scope: !9660)
!9663 = distinct !{!9663, !9664}
!9664 = !DILocation(line: 871, column: 13, scope: !9565)
!9665 = !DILocation(line: 887, column: 9, scope: !9565)
!9666 = !DILocation(line: 861, column: 37, scope: !9667)
!9667 = !DILexicalBlockFile(scope: !9560, file: !898, discriminator: 2)
!9668 = !DILocation(line: 861, column: 9, scope: !9667)
!9669 = distinct !{!9669, !9670}
!9670 = !DILocation(line: 861, column: 9, scope: !9555)
!9671 = !DILocation(line: 888, column: 5, scope: !9555)
!9672 = !DILocation(line: 860, column: 40, scope: !9673)
!9673 = !DILexicalBlockFile(scope: !9549, file: !898, discriminator: 2)
!9674 = !DILocation(line: 860, column: 5, scope: !9673)
!9675 = distinct !{!9675, !9676}
!9676 = !DILocation(line: 860, column: 5, scope: !9506)
!9677 = !DILocation(line: 890, column: 5, scope: !9506)
!9678 = distinct !DISubprogram(name: "parse_grid_1_sec_ch", scope: !898, file: !898, line: 563, type: !7403, isLocal: true, isDefinition: true, scopeLine: 564, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!9679 = !DILocalVariable(name: "s", arg: 1, scope: !9678, file: !898, line: 563, type: !1064)
!9680 = !DILocation(line: 563, column: 47, scope: !9678)
!9681 = !DILocalVariable(name: "ch2", arg: 2, scope: !9678, file: !898, line: 563, type: !1004)
!9682 = !DILocation(line: 563, column: 54, scope: !9678)
!9683 = !DILocalVariable(name: "sb", scope: !9678, file: !898, line: 565, type: !1004)
!9684 = !DILocation(line: 565, column: 9, scope: !9678)
!9685 = !DILocalVariable(name: "nsubbands", scope: !9678, file: !898, line: 565, type: !1004)
!9686 = !DILocation(line: 565, column: 13, scope: !9678)
!9687 = !DILocation(line: 568, column: 38, scope: !9678)
!9688 = !DILocation(line: 568, column: 41, scope: !9678)
!9689 = !DILocation(line: 568, column: 51, scope: !9678)
!9690 = !DILocation(line: 568, column: 17, scope: !9678)
!9691 = !DILocation(line: 568, column: 56, scope: !9678)
!9692 = !DILocation(line: 568, column: 15, scope: !9678)
!9693 = !DILocation(line: 569, column: 13, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9678, file: !898, line: 569, column: 5)
!9695 = !DILocation(line: 569, column: 10, scope: !9694)
!9696 = !DILocation(line: 569, column: 18, scope: !9697)
!9697 = !DILexicalBlockFile(scope: !9698, file: !898, discriminator: 1)
!9698 = distinct !DILexicalBlock(scope: !9694, file: !898, line: 569, column: 5)
!9699 = !DILocation(line: 569, column: 23, scope: !9697)
!9700 = !DILocation(line: 569, column: 21, scope: !9697)
!9701 = !DILocation(line: 569, column: 5, scope: !9697)
!9702 = !DILocation(line: 570, column: 34, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !898, line: 570, column: 13)
!9704 = distinct !DILexicalBlock(scope: !9698, file: !898, line: 569, column: 40)
!9705 = !DILocation(line: 570, column: 13, scope: !9703)
!9706 = !DILocation(line: 570, column: 41, scope: !9703)
!9707 = !DILocation(line: 570, column: 44, scope: !9703)
!9708 = !DILocation(line: 570, column: 38, scope: !9703)
!9709 = !DILocation(line: 571, column: 13, scope: !9703)
!9710 = !DILocation(line: 571, column: 36, scope: !9711)
!9711 = !DILexicalBlockFile(scope: !9703, file: !898, discriminator: 1)
!9712 = !DILocation(line: 571, column: 58, scope: !9711)
!9713 = !DILocation(line: 571, column: 39, scope: !9711)
!9714 = !DILocation(line: 571, column: 53, scope: !9711)
!9715 = !DILocation(line: 571, column: 42, scope: !9711)
!9716 = !DILocation(line: 571, column: 16, scope: !9711)
!9717 = !DILocation(line: 571, column: 63, scope: !9711)
!9718 = !DILocation(line: 570, column: 13, scope: !9719)
!9719 = !DILexicalBlockFile(scope: !9704, file: !898, discriminator: 1)
!9720 = !DILocation(line: 572, column: 13, scope: !9703)
!9721 = !DILocation(line: 573, column: 5, scope: !9704)
!9722 = !DILocation(line: 569, column: 36, scope: !9723)
!9723 = !DILexicalBlockFile(scope: !9698, file: !898, discriminator: 2)
!9724 = !DILocation(line: 569, column: 5, scope: !9723)
!9725 = distinct !{!9725, !9726}
!9726 = !DILocation(line: 569, column: 5, scope: !9678)
!9727 = !DILocation(line: 576, column: 13, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9678, file: !898, line: 576, column: 5)
!9729 = !DILocation(line: 576, column: 10, scope: !9728)
!9730 = !DILocation(line: 576, column: 18, scope: !9731)
!9731 = !DILexicalBlockFile(scope: !9732, file: !898, discriminator: 1)
!9732 = distinct !DILexicalBlock(scope: !9728, file: !898, line: 576, column: 5)
!9733 = !DILocation(line: 576, column: 23, scope: !9731)
!9734 = !DILocation(line: 576, column: 26, scope: !9731)
!9735 = !DILocation(line: 576, column: 36, scope: !9731)
!9736 = !DILocation(line: 576, column: 21, scope: !9731)
!9737 = !DILocation(line: 576, column: 5, scope: !9731)
!9738 = !DILocation(line: 577, column: 13, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !898, line: 577, column: 13)
!9740 = distinct !DILexicalBlock(scope: !9732, file: !898, line: 576, column: 47)
!9741 = !DILocation(line: 577, column: 16, scope: !9739)
!9742 = !DILocation(line: 577, column: 23, scope: !9739)
!9743 = !DILocation(line: 577, column: 26, scope: !9739)
!9744 = !DILocation(line: 577, column: 20, scope: !9739)
!9745 = !DILocation(line: 577, column: 13, scope: !9740)
!9746 = !DILocation(line: 578, column: 30, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !898, line: 578, column: 17)
!9748 = distinct !DILexicalBlock(scope: !9739, file: !898, line: 577, column: 44)
!9749 = !DILocation(line: 578, column: 33, scope: !9747)
!9750 = !DILocation(line: 578, column: 17, scope: !9747)
!9751 = !DILocation(line: 578, column: 17, scope: !9748)
!9752 = !DILocation(line: 579, column: 17, scope: !9747)
!9753 = !DILocation(line: 580, column: 49, scope: !9748)
!9754 = !DILocation(line: 580, column: 52, scope: !9748)
!9755 = !DILocation(line: 580, column: 38, scope: !9748)
!9756 = !DILocation(line: 580, column: 79, scope: !9748)
!9757 = !DILocation(line: 580, column: 32, scope: !9748)
!9758 = !DILocation(line: 580, column: 13, scope: !9748)
!9759 = !DILocation(line: 580, column: 27, scope: !9748)
!9760 = !DILocation(line: 580, column: 16, scope: !9748)
!9761 = !DILocation(line: 580, column: 36, scope: !9748)
!9762 = !DILocation(line: 581, column: 9, scope: !9748)
!9763 = !DILocation(line: 582, column: 5, scope: !9740)
!9764 = !DILocation(line: 576, column: 43, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !9732, file: !898, discriminator: 2)
!9766 = !DILocation(line: 576, column: 5, scope: !9765)
!9767 = distinct !{!9767, !9768}
!9768 = !DILocation(line: 576, column: 5, scope: !9678)
!9769 = !DILocation(line: 584, column: 5, scope: !9678)
!9770 = !DILocation(line: 585, column: 1, scope: !9678)
!9771 = distinct !DISubprogram(name: "synth_lpc", scope: !898, file: !898, line: 1465, type: !9772, isLocal: true, isDefinition: true, scopeLine: 1466, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!9772 = !DISubroutineType(types: !9773)
!9773 = !{null, !1064, !1004, !1004, !1004}
!9774 = !DILocalVariable(name: "s", arg: 1, scope: !9771, file: !898, line: 1465, type: !1064)
!9775 = !DILocation(line: 1465, column: 38, scope: !9771)
!9776 = !DILocalVariable(name: "ch1", arg: 2, scope: !9771, file: !898, line: 1465, type: !1004)
!9777 = !DILocation(line: 1465, column: 45, scope: !9771)
!9778 = !DILocalVariable(name: "ch2", arg: 3, scope: !9771, file: !898, line: 1465, type: !1004)
!9779 = !DILocation(line: 1465, column: 54, scope: !9771)
!9780 = !DILocalVariable(name: "sb", arg: 4, scope: !9771, file: !898, line: 1465, type: !1004)
!9781 = !DILocation(line: 1465, column: 63, scope: !9771)
!9782 = !DILocalVariable(name: "f", scope: !9771, file: !898, line: 1467, type: !1004)
!9783 = !DILocation(line: 1467, column: 9, scope: !9771)
!9784 = !DILocation(line: 1467, column: 13, scope: !9771)
!9785 = !DILocation(line: 1467, column: 16, scope: !9771)
!9786 = !DILocation(line: 1467, column: 25, scope: !9771)
!9787 = !DILocalVariable(name: "ch", scope: !9771, file: !898, line: 1468, type: !1004)
!9788 = !DILocation(line: 1468, column: 9, scope: !9771)
!9789 = !DILocation(line: 1470, column: 15, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9771, file: !898, line: 1470, column: 5)
!9791 = !DILocation(line: 1470, column: 13, scope: !9790)
!9792 = !DILocation(line: 1470, column: 10, scope: !9790)
!9793 = !DILocation(line: 1470, column: 20, scope: !9794)
!9794 = !DILexicalBlockFile(scope: !9795, file: !898, discriminator: 1)
!9795 = distinct !DILexicalBlock(scope: !9790, file: !898, line: 1470, column: 5)
!9796 = !DILocation(line: 1470, column: 26, scope: !9794)
!9797 = !DILocation(line: 1470, column: 23, scope: !9794)
!9798 = !DILocation(line: 1470, column: 5, scope: !9794)
!9799 = !DILocalVariable(name: "samples", scope: !9800, file: !898, line: 1471, type: !1006)
!9800 = distinct !DILexicalBlock(scope: !9795, file: !898, line: 1470, column: 37)
!9801 = !DILocation(line: 1471, column: 16, scope: !9800)
!9802 = !DILocation(line: 1471, column: 46, scope: !9800)
!9803 = !DILocation(line: 1471, column: 26, scope: !9800)
!9804 = !DILocation(line: 1471, column: 42, scope: !9800)
!9805 = !DILocation(line: 1471, column: 29, scope: !9800)
!9806 = !DILocation(line: 1473, column: 26, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9800, file: !898, line: 1473, column: 13)
!9808 = !DILocation(line: 1473, column: 15, scope: !9807)
!9809 = !DILocation(line: 1473, column: 18, scope: !9807)
!9810 = !DILocation(line: 1473, column: 39, scope: !9807)
!9811 = !DILocation(line: 1473, column: 36, scope: !9807)
!9812 = !DILocation(line: 1473, column: 30, scope: !9807)
!9813 = !DILocation(line: 1473, column: 13, scope: !9800)
!9814 = !DILocation(line: 1474, column: 13, scope: !9807)
!9815 = !DILocation(line: 1476, column: 13, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9800, file: !898, line: 1476, column: 13)
!9817 = !DILocation(line: 1476, column: 16, scope: !9816)
!9818 = !DILocation(line: 1476, column: 13, scope: !9800)
!9819 = !DILocation(line: 1477, column: 21, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9816, file: !898, line: 1476, column: 21)
!9821 = !DILocation(line: 1477, column: 52, scope: !9820)
!9822 = !DILocation(line: 1477, column: 30, scope: !9820)
!9823 = !DILocation(line: 1477, column: 48, scope: !9820)
!9824 = !DILocation(line: 1477, column: 43, scope: !9820)
!9825 = !DILocation(line: 1477, column: 44, scope: !9820)
!9826 = !DILocation(line: 1477, column: 33, scope: !9820)
!9827 = !DILocation(line: 1477, column: 13, scope: !9820)
!9828 = !DILocation(line: 1478, column: 21, scope: !9820)
!9829 = !DILocation(line: 1478, column: 29, scope: !9820)
!9830 = !DILocation(line: 1478, column: 56, scope: !9820)
!9831 = !DILocation(line: 1478, column: 35, scope: !9820)
!9832 = !DILocation(line: 1478, column: 52, scope: !9820)
!9833 = !DILocation(line: 1478, column: 48, scope: !9820)
!9834 = !DILocation(line: 1478, column: 38, scope: !9820)
!9835 = !DILocation(line: 1478, column: 13, scope: !9820)
!9836 = !DILocation(line: 1479, column: 21, scope: !9820)
!9837 = !DILocation(line: 1479, column: 29, scope: !9820)
!9838 = !DILocation(line: 1479, column: 56, scope: !9820)
!9839 = !DILocation(line: 1479, column: 35, scope: !9820)
!9840 = !DILocation(line: 1479, column: 52, scope: !9820)
!9841 = !DILocation(line: 1479, column: 48, scope: !9820)
!9842 = !DILocation(line: 1479, column: 38, scope: !9820)
!9843 = !DILocation(line: 1479, column: 13, scope: !9820)
!9844 = !DILocation(line: 1480, column: 9, scope: !9820)
!9845 = !DILocation(line: 1481, column: 21, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9816, file: !898, line: 1480, column: 16)
!9847 = !DILocation(line: 1481, column: 52, scope: !9846)
!9848 = !DILocation(line: 1481, column: 30, scope: !9846)
!9849 = !DILocation(line: 1481, column: 48, scope: !9846)
!9850 = !DILocation(line: 1481, column: 43, scope: !9846)
!9851 = !DILocation(line: 1481, column: 44, scope: !9846)
!9852 = !DILocation(line: 1481, column: 33, scope: !9846)
!9853 = !DILocation(line: 1481, column: 13, scope: !9846)
!9854 = !DILocation(line: 1482, column: 21, scope: !9846)
!9855 = !DILocation(line: 1482, column: 29, scope: !9846)
!9856 = !DILocation(line: 1482, column: 56, scope: !9846)
!9857 = !DILocation(line: 1482, column: 35, scope: !9846)
!9858 = !DILocation(line: 1482, column: 52, scope: !9846)
!9859 = !DILocation(line: 1482, column: 48, scope: !9846)
!9860 = !DILocation(line: 1482, column: 38, scope: !9846)
!9861 = !DILocation(line: 1482, column: 13, scope: !9846)
!9862 = !DILocation(line: 1484, column: 5, scope: !9800)
!9863 = !DILocation(line: 1470, column: 33, scope: !9864)
!9864 = !DILexicalBlockFile(scope: !9795, file: !898, discriminator: 2)
!9865 = !DILocation(line: 1470, column: 5, scope: !9864)
!9866 = distinct !{!9866, !9867}
!9867 = !DILocation(line: 1470, column: 5, scope: !9771)
!9868 = !DILocation(line: 1485, column: 1, scope: !9771)
!9869 = distinct !DISubprogram(name: "predict", scope: !898, file: !898, line: 1453, type: !9870, isLocal: true, isDefinition: true, scopeLine: 1454, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!9870 = !DISubroutineType(types: !9871)
!9871 = !{null, !1006, !1953, !1004}
!9872 = !DILocalVariable(name: "samples", arg: 1, scope: !9869, file: !898, line: 1453, type: !1006)
!9873 = !DILocation(line: 1453, column: 28, scope: !9869)
!9874 = !DILocalVariable(name: "coeff", arg: 2, scope: !9869, file: !898, line: 1453, type: !1953)
!9875 = !DILocation(line: 1453, column: 50, scope: !9869)
!9876 = !DILocalVariable(name: "nsamples", arg: 3, scope: !9869, file: !898, line: 1453, type: !1004)
!9877 = !DILocation(line: 1453, column: 61, scope: !9869)
!9878 = !DILocalVariable(name: "i", scope: !9869, file: !898, line: 1455, type: !1004)
!9879 = !DILocation(line: 1455, column: 9, scope: !9869)
!9880 = !DILocalVariable(name: "j", scope: !9869, file: !898, line: 1455, type: !1004)
!9881 = !DILocation(line: 1455, column: 12, scope: !9869)
!9882 = !DILocation(line: 1457, column: 12, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9869, file: !898, line: 1457, column: 5)
!9884 = !DILocation(line: 1457, column: 10, scope: !9883)
!9885 = !DILocation(line: 1457, column: 17, scope: !9886)
!9886 = !DILexicalBlockFile(scope: !9887, file: !898, discriminator: 1)
!9887 = distinct !DILexicalBlock(scope: !9883, file: !898, line: 1457, column: 5)
!9888 = !DILocation(line: 1457, column: 21, scope: !9886)
!9889 = !DILocation(line: 1457, column: 19, scope: !9886)
!9890 = !DILocation(line: 1457, column: 5, scope: !9886)
!9891 = !DILocalVariable(name: "res", scope: !9892, file: !898, line: 1458, type: !1007)
!9892 = distinct !DILexicalBlock(scope: !9887, file: !898, line: 1457, column: 36)
!9893 = !DILocation(line: 1458, column: 15, scope: !9892)
!9894 = !DILocation(line: 1459, column: 16, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9892, file: !898, line: 1459, column: 9)
!9896 = !DILocation(line: 1459, column: 14, scope: !9895)
!9897 = !DILocation(line: 1459, column: 21, scope: !9898)
!9898 = !DILexicalBlockFile(scope: !9899, file: !898, discriminator: 1)
!9899 = distinct !DILexicalBlock(scope: !9895, file: !898, line: 1459, column: 9)
!9900 = !DILocation(line: 1459, column: 23, scope: !9898)
!9901 = !DILocation(line: 1459, column: 9, scope: !9898)
!9902 = !DILocation(line: 1460, column: 26, scope: !9899)
!9903 = !DILocation(line: 1460, column: 20, scope: !9899)
!9904 = !DILocation(line: 1460, column: 39, scope: !9899)
!9905 = !DILocation(line: 1460, column: 43, scope: !9899)
!9906 = !DILocation(line: 1460, column: 41, scope: !9899)
!9907 = !DILocation(line: 1460, column: 45, scope: !9899)
!9908 = !DILocation(line: 1460, column: 31, scope: !9899)
!9909 = !DILocation(line: 1460, column: 29, scope: !9899)
!9910 = !DILocation(line: 1460, column: 17, scope: !9899)
!9911 = !DILocation(line: 1460, column: 13, scope: !9899)
!9912 = !DILocation(line: 1459, column: 29, scope: !9913)
!9913 = !DILexicalBlockFile(scope: !9899, file: !898, discriminator: 2)
!9914 = !DILocation(line: 1459, column: 9, scope: !9913)
!9915 = distinct !{!9915, !9916}
!9916 = !DILocation(line: 1459, column: 9, scope: !9892)
!9917 = !DILocation(line: 1461, column: 23, scope: !9892)
!9918 = !DILocation(line: 1461, column: 17, scope: !9892)
!9919 = !DILocation(line: 1461, column: 9, scope: !9892)
!9920 = !DILocation(line: 1461, column: 20, scope: !9892)
!9921 = !DILocation(line: 1462, column: 5, scope: !9892)
!9922 = !DILocation(line: 1457, column: 32, scope: !9923)
!9923 = !DILexicalBlockFile(scope: !9887, file: !898, discriminator: 2)
!9924 = !DILocation(line: 1457, column: 5, scope: !9923)
!9925 = distinct !{!9925, !9926}
!9926 = !DILocation(line: 1457, column: 5, scope: !9869)
!9927 = !DILocation(line: 1463, column: 1, scope: !9869)
!9928 = distinct !DISubprogram(name: "base_func_synth", scope: !898, file: !898, line: 1662, type: !9929, isLocal: true, isDefinition: true, scopeLine: 1663, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!9929 = !DISubroutineType(types: !9930)
!9930 = !{null, !1064, !1004, !1006, !1004}
!9931 = !DILocalVariable(name: "s", arg: 1, scope: !9928, file: !898, line: 1662, type: !1064)
!9932 = !DILocation(line: 1662, column: 44, scope: !9928)
!9933 = !DILocalVariable(name: "ch", arg: 2, scope: !9928, file: !898, line: 1662, type: !1004)
!9934 = !DILocation(line: 1662, column: 51, scope: !9928)
!9935 = !DILocalVariable(name: "values", arg: 3, scope: !9928, file: !898, line: 1662, type: !1006)
!9936 = !DILocation(line: 1662, column: 62, scope: !9928)
!9937 = !DILocalVariable(name: "sf", arg: 4, scope: !9928, file: !898, line: 1662, type: !1004)
!9938 = !DILocation(line: 1662, column: 74, scope: !9928)
!9939 = !DILocalVariable(name: "group", scope: !9928, file: !898, line: 1664, type: !1004)
!9940 = !DILocation(line: 1664, column: 9, scope: !9928)
!9941 = !DILocation(line: 1667, column: 16, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9928, file: !898, line: 1667, column: 5)
!9943 = !DILocation(line: 1667, column: 10, scope: !9942)
!9944 = !DILocation(line: 1667, column: 21, scope: !9945)
!9945 = !DILexicalBlockFile(scope: !9946, file: !898, discriminator: 1)
!9946 = distinct !DILexicalBlock(scope: !9942, file: !898, line: 1667, column: 5)
!9947 = !DILocation(line: 1667, column: 27, scope: !9945)
!9948 = !DILocation(line: 1667, column: 5, scope: !9945)
!9949 = !DILocalVariable(name: "group_sf", scope: !9950, file: !898, line: 1668, type: !1004)
!9950 = distinct !DILexicalBlock(scope: !9946, file: !898, line: 1667, column: 41)
!9951 = !DILocation(line: 1668, column: 13, scope: !9950)
!9952 = !DILocation(line: 1668, column: 25, scope: !9950)
!9953 = !DILocation(line: 1668, column: 28, scope: !9950)
!9954 = !DILocation(line: 1668, column: 40, scope: !9950)
!9955 = !DILocation(line: 1668, column: 37, scope: !9950)
!9956 = !DILocation(line: 1668, column: 51, scope: !9950)
!9957 = !DILocation(line: 1668, column: 54, scope: !9950)
!9958 = !DILocation(line: 1668, column: 68, scope: !9950)
!9959 = !DILocation(line: 1668, column: 66, scope: !9950)
!9960 = !DILocation(line: 1668, column: 60, scope: !9950)
!9961 = !DILocation(line: 1668, column: 47, scope: !9950)
!9962 = !DILocalVariable(name: "synth_idx", scope: !9950, file: !898, line: 1669, type: !1004)
!9963 = !DILocation(line: 1669, column: 13, scope: !9950)
!9964 = !DILocation(line: 1669, column: 29, scope: !9950)
!9965 = !DILocation(line: 1669, column: 32, scope: !9950)
!9966 = !DILocation(line: 1669, column: 38, scope: !9950)
!9967 = !DILocation(line: 1669, column: 47, scope: !9950)
!9968 = !DILocation(line: 1669, column: 44, scope: !9950)
!9969 = !DILocation(line: 1669, column: 54, scope: !9950)
!9970 = !DILocation(line: 1669, column: 68, scope: !9950)
!9971 = !DILocation(line: 1669, column: 65, scope: !9950)
!9972 = !DILocation(line: 1669, column: 60, scope: !9950)
!9973 = !DILocation(line: 1669, column: 75, scope: !9950)
!9974 = !DILocation(line: 1671, column: 21, scope: !9950)
!9975 = !DILocation(line: 1671, column: 24, scope: !9950)
!9976 = !DILocation(line: 1671, column: 28, scope: !9950)
!9977 = !DILocation(line: 1671, column: 36, scope: !9950)
!9978 = !DILocation(line: 1671, column: 44, scope: !9950)
!9979 = !DILocation(line: 1671, column: 53, scope: !9950)
!9980 = !DILocation(line: 1671, column: 58, scope: !9950)
!9981 = !DILocation(line: 1671, column: 69, scope: !9950)
!9982 = !DILocation(line: 1671, column: 67, scope: !9950)
!9983 = !DILocation(line: 1671, column: 9, scope: !9950)
!9984 = !DILocation(line: 1672, column: 21, scope: !9950)
!9985 = !DILocation(line: 1672, column: 24, scope: !9950)
!9986 = !DILocation(line: 1672, column: 28, scope: !9950)
!9987 = !DILocation(line: 1672, column: 36, scope: !9950)
!9988 = !DILocation(line: 1672, column: 44, scope: !9950)
!9989 = !DILocation(line: 1672, column: 55, scope: !9950)
!9990 = !DILocation(line: 1672, column: 61, scope: !9950)
!9991 = !DILocation(line: 1672, column: 9, scope: !9950)
!9992 = !DILocation(line: 1673, column: 5, scope: !9950)
!9993 = !DILocation(line: 1667, column: 37, scope: !9994)
!9994 = !DILexicalBlockFile(scope: !9946, file: !898, discriminator: 2)
!9995 = !DILocation(line: 1667, column: 5, scope: !9994)
!9996 = distinct !{!9996, !9997}
!9997 = !DILocation(line: 1667, column: 5, scope: !9928)
!9998 = !DILocation(line: 1674, column: 1, scope: !9928)
!9999 = distinct !DISubprogram(name: "synth_tones", scope: !898, file: !898, line: 1598, type: !10000, isLocal: true, isDefinition: true, scopeLine: 1600, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1057)
!10000 = !DISubroutineType(types: !10001)
!10001 = !{null, !1064, !1004, !1006, !1004, !1004, !1004}
!10002 = !DILocalVariable(name: "s", arg: 1, scope: !9999, file: !898, line: 1598, type: !1064)
!10003 = !DILocation(line: 1598, column: 40, scope: !9999)
!10004 = !DILocalVariable(name: "ch", arg: 2, scope: !9999, file: !898, line: 1598, type: !1004)
!10005 = !DILocation(line: 1598, column: 47, scope: !9999)
!10006 = !DILocalVariable(name: "values", arg: 3, scope: !9999, file: !898, line: 1598, type: !1006)
!10007 = !DILocation(line: 1598, column: 58, scope: !9999)
!10008 = !DILocalVariable(name: "group", arg: 4, scope: !9999, file: !898, line: 1599, type: !1004)
!10009 = !DILocation(line: 1599, column: 29, scope: !9999)
!10010 = !DILocalVariable(name: "group_sf", arg: 5, scope: !9999, file: !898, line: 1599, type: !1004)
!10011 = !DILocation(line: 1599, column: 40, scope: !9999)
!10012 = !DILocalVariable(name: "synth_idx", arg: 6, scope: !9999, file: !898, line: 1599, type: !1004)
!10013 = !DILocation(line: 1599, column: 54, scope: !9999)
!10014 = !DILocalVariable(name: "i", scope: !9999, file: !898, line: 1601, type: !1004)
!10015 = !DILocation(line: 1601, column: 9, scope: !9999)
!10016 = !DILocalVariable(name: "start", scope: !9999, file: !898, line: 1601, type: !1004)
!10017 = !DILocation(line: 1601, column: 12, scope: !9999)
!10018 = !DILocalVariable(name: "count", scope: !9999, file: !898, line: 1601, type: !1004)
!10019 = !DILocation(line: 1601, column: 19, scope: !9999)
!10020 = !DILocation(line: 1603, column: 9, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9999, file: !898, line: 1603, column: 9)
!10022 = !DILocation(line: 1603, column: 19, scope: !10021)
!10023 = !DILocation(line: 1603, column: 9, scope: !9999)
!10024 = !DILocation(line: 1604, column: 9, scope: !10021)
!10025 = !DILocation(line: 1606, column: 36, scope: !9999)
!10026 = !DILocation(line: 1606, column: 13, scope: !9999)
!10027 = !DILocation(line: 1606, column: 29, scope: !9999)
!10028 = !DILocation(line: 1606, column: 16, scope: !9999)
!10029 = !DILocation(line: 1606, column: 11, scope: !9999)
!10030 = !DILocation(line: 1607, column: 37, scope: !9999)
!10031 = !DILocation(line: 1607, column: 14, scope: !9999)
!10032 = !DILocation(line: 1607, column: 30, scope: !9999)
!10033 = !DILocation(line: 1607, column: 17, scope: !9999)
!10034 = !DILocation(line: 1607, column: 52, scope: !9999)
!10035 = !DILocation(line: 1607, column: 50, scope: !9999)
!10036 = !DILocation(line: 1607, column: 59, scope: !9999)
!10037 = !DILocation(line: 1607, column: 11, scope: !9999)
!10038 = !DILocation(line: 1609, column: 12, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !9999, file: !898, line: 1609, column: 5)
!10040 = !DILocation(line: 1609, column: 10, scope: !10039)
!10041 = !DILocation(line: 1609, column: 17, scope: !10042)
!10042 = !DILexicalBlockFile(scope: !10043, file: !898, discriminator: 1)
!10043 = distinct !DILexicalBlock(scope: !10039, file: !898, line: 1609, column: 5)
!10044 = !DILocation(line: 1609, column: 21, scope: !10042)
!10045 = !DILocation(line: 1609, column: 19, scope: !10042)
!10046 = !DILocation(line: 1609, column: 5, scope: !10042)
!10047 = !DILocalVariable(name: "t", scope: !10048, file: !898, line: 1610, type: !7665)
!10048 = distinct !DILexicalBlock(scope: !10043, file: !898, line: 1609, column: 33)
!10049 = !DILocation(line: 1610, column: 21, scope: !10048)
!10050 = !DILocation(line: 1610, column: 36, scope: !10048)
!10051 = !DILocation(line: 1610, column: 44, scope: !10048)
!10052 = !DILocation(line: 1610, column: 42, scope: !10048)
!10053 = !DILocation(line: 1610, column: 47, scope: !10048)
!10054 = !DILocation(line: 1610, column: 26, scope: !10048)
!10055 = !DILocation(line: 1610, column: 29, scope: !10048)
!10056 = !DILocation(line: 1612, column: 20, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10048, file: !898, line: 1612, column: 13)
!10058 = !DILocation(line: 1612, column: 13, scope: !10057)
!10059 = !DILocation(line: 1612, column: 16, scope: !10057)
!10060 = !DILocation(line: 1612, column: 13, scope: !10048)
!10061 = !DILocalVariable(name: "amp", scope: !10062, file: !898, line: 1613, type: !1007)
!10062 = distinct !DILexicalBlock(scope: !10057, file: !898, line: 1612, column: 25)
!10063 = !DILocation(line: 1613, column: 19, scope: !10062)
!10064 = !DILocation(line: 1613, column: 42, scope: !10062)
!10065 = !DILocation(line: 1613, column: 25, scope: !10062)
!10066 = !DILocation(line: 1613, column: 79, scope: !10062)
!10067 = !DILocation(line: 1613, column: 72, scope: !10062)
!10068 = !DILocation(line: 1613, column: 75, scope: !10062)
!10069 = !DILocation(line: 1613, column: 55, scope: !10062)
!10070 = !DILocation(line: 1613, column: 53, scope: !10062)
!10071 = !DILocalVariable(name: "c", scope: !10062, file: !898, line: 1614, type: !1007)
!10072 = !DILocation(line: 1614, column: 19, scope: !10062)
!10073 = !DILocation(line: 1614, column: 23, scope: !10062)
!10074 = !DILocation(line: 1614, column: 45, scope: !10062)
!10075 = !DILocation(line: 1614, column: 38, scope: !10062)
!10076 = !DILocation(line: 1614, column: 41, scope: !10062)
!10077 = !DILocation(line: 1614, column: 37, scope: !10062)
!10078 = !DILocation(line: 1614, column: 51, scope: !10062)
!10079 = !DILocation(line: 1614, column: 29, scope: !10062)
!10080 = !DILocation(line: 1614, column: 27, scope: !10062)
!10081 = !DILocalVariable(name: "s", scope: !10062, file: !898, line: 1615, type: !1007)
!10082 = !DILocation(line: 1615, column: 19, scope: !10062)
!10083 = !DILocation(line: 1615, column: 23, scope: !10062)
!10084 = !DILocation(line: 1615, column: 45, scope: !10062)
!10085 = !DILocation(line: 1615, column: 38, scope: !10062)
!10086 = !DILocation(line: 1615, column: 41, scope: !10062)
!10087 = !DILocation(line: 1615, column: 49, scope: !10062)
!10088 = !DILocation(line: 1615, column: 55, scope: !10062)
!10089 = !DILocation(line: 1615, column: 29, scope: !10062)
!10090 = !DILocation(line: 1615, column: 27, scope: !10062)
!10091 = !DILocalVariable(name: "cf", scope: !10062, file: !898, line: 1616, type: !1953)
!10092 = !DILocation(line: 1616, column: 26, scope: !10062)
!10093 = !DILocation(line: 1616, column: 46, scope: !10062)
!10094 = !DILocation(line: 1616, column: 49, scope: !10062)
!10095 = !DILocation(line: 1616, column: 31, scope: !10062)
!10096 = !DILocalVariable(name: "x_freq", scope: !10062, file: !898, line: 1617, type: !1004)
!10097 = !DILocation(line: 1617, column: 17, scope: !10062)
!10098 = !DILocation(line: 1617, column: 26, scope: !10062)
!10099 = !DILocation(line: 1617, column: 29, scope: !10062)
!10100 = !DILocation(line: 1619, column: 21, scope: !10062)
!10101 = !DILocation(line: 1619, column: 13, scope: !10062)
!10102 = !DILocation(line: 1621, column: 17, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10062, file: !898, line: 1619, column: 29)
!10104 = !DILocation(line: 1623, column: 30, scope: !10103)
!10105 = !DILocation(line: 1623, column: 39, scope: !10103)
!10106 = !DILocation(line: 1623, column: 38, scope: !10103)
!10107 = !DILocation(line: 1623, column: 36, scope: !10103)
!10108 = !DILocation(line: 1623, column: 17, scope: !10103)
!10109 = !DILocation(line: 1623, column: 27, scope: !10103)
!10110 = !DILocation(line: 1624, column: 30, scope: !10103)
!10111 = !DILocation(line: 1624, column: 38, scope: !10103)
!10112 = !DILocation(line: 1624, column: 36, scope: !10103)
!10113 = !DILocation(line: 1624, column: 17, scope: !10103)
!10114 = !DILocation(line: 1624, column: 27, scope: !10103)
!10115 = !DILocation(line: 1625, column: 30, scope: !10103)
!10116 = !DILocation(line: 1625, column: 38, scope: !10103)
!10117 = !DILocation(line: 1625, column: 36, scope: !10103)
!10118 = !DILocation(line: 1625, column: 17, scope: !10103)
!10119 = !DILocation(line: 1625, column: 27, scope: !10103)
!10120 = !DILocation(line: 1626, column: 30, scope: !10103)
!10121 = !DILocation(line: 1626, column: 39, scope: !10103)
!10122 = !DILocation(line: 1626, column: 38, scope: !10103)
!10123 = !DILocation(line: 1626, column: 36, scope: !10103)
!10124 = !DILocation(line: 1626, column: 17, scope: !10103)
!10125 = !DILocation(line: 1626, column: 27, scope: !10103)
!10126 = !DILocation(line: 1627, column: 17, scope: !10103)
!10127 = !DILocation(line: 1629, column: 30, scope: !10103)
!10128 = !DILocation(line: 1629, column: 39, scope: !10103)
!10129 = !DILocation(line: 1629, column: 38, scope: !10103)
!10130 = !DILocation(line: 1629, column: 36, scope: !10103)
!10131 = !DILocation(line: 1629, column: 17, scope: !10103)
!10132 = !DILocation(line: 1629, column: 27, scope: !10103)
!10133 = !DILocation(line: 1630, column: 30, scope: !10103)
!10134 = !DILocation(line: 1630, column: 38, scope: !10103)
!10135 = !DILocation(line: 1630, column: 36, scope: !10103)
!10136 = !DILocation(line: 1630, column: 17, scope: !10103)
!10137 = !DILocation(line: 1630, column: 27, scope: !10103)
!10138 = !DILocation(line: 1631, column: 30, scope: !10103)
!10139 = !DILocation(line: 1631, column: 38, scope: !10103)
!10140 = !DILocation(line: 1631, column: 36, scope: !10103)
!10141 = !DILocation(line: 1631, column: 17, scope: !10103)
!10142 = !DILocation(line: 1631, column: 27, scope: !10103)
!10143 = !DILocation(line: 1632, column: 17, scope: !10103)
!10144 = !DILocation(line: 1634, column: 30, scope: !10103)
!10145 = !DILocation(line: 1634, column: 39, scope: !10103)
!10146 = !DILocation(line: 1634, column: 38, scope: !10103)
!10147 = !DILocation(line: 1634, column: 36, scope: !10103)
!10148 = !DILocation(line: 1634, column: 17, scope: !10103)
!10149 = !DILocation(line: 1634, column: 27, scope: !10103)
!10150 = !DILocation(line: 1635, column: 30, scope: !10103)
!10151 = !DILocation(line: 1635, column: 38, scope: !10103)
!10152 = !DILocation(line: 1635, column: 36, scope: !10103)
!10153 = !DILocation(line: 1635, column: 17, scope: !10103)
!10154 = !DILocation(line: 1635, column: 27, scope: !10103)
!10155 = !DILocation(line: 1636, column: 17, scope: !10103)
!10156 = !DILocation(line: 1638, column: 30, scope: !10103)
!10157 = !DILocation(line: 1638, column: 39, scope: !10103)
!10158 = !DILocation(line: 1638, column: 38, scope: !10103)
!10159 = !DILocation(line: 1638, column: 36, scope: !10103)
!10160 = !DILocation(line: 1638, column: 17, scope: !10103)
!10161 = !DILocation(line: 1638, column: 27, scope: !10103)
!10162 = !DILocation(line: 1639, column: 17, scope: !10103)
!10163 = !DILocation(line: 1642, column: 35, scope: !10062)
!10164 = !DILocation(line: 1642, column: 45, scope: !10062)
!10165 = !DILocation(line: 1642, column: 44, scope: !10062)
!10166 = !DILocation(line: 1642, column: 42, scope: !10062)
!10167 = !DILocation(line: 1642, column: 20, scope: !10062)
!10168 = !DILocation(line: 1642, column: 27, scope: !10062)
!10169 = !DILocation(line: 1642, column: 13, scope: !10062)
!10170 = !DILocation(line: 1642, column: 32, scope: !10062)
!10171 = !DILocation(line: 1643, column: 35, scope: !10062)
!10172 = !DILocation(line: 1643, column: 44, scope: !10062)
!10173 = !DILocation(line: 1643, column: 42, scope: !10062)
!10174 = !DILocation(line: 1643, column: 20, scope: !10062)
!10175 = !DILocation(line: 1643, column: 27, scope: !10062)
!10176 = !DILocation(line: 1643, column: 13, scope: !10062)
!10177 = !DILocation(line: 1643, column: 32, scope: !10062)
!10178 = !DILocation(line: 1644, column: 35, scope: !10062)
!10179 = !DILocation(line: 1644, column: 44, scope: !10062)
!10180 = !DILocation(line: 1644, column: 42, scope: !10062)
!10181 = !DILocation(line: 1644, column: 20, scope: !10062)
!10182 = !DILocation(line: 1644, column: 27, scope: !10062)
!10183 = !DILocation(line: 1644, column: 13, scope: !10062)
!10184 = !DILocation(line: 1644, column: 32, scope: !10062)
!10185 = !DILocation(line: 1645, column: 35, scope: !10062)
!10186 = !DILocation(line: 1645, column: 45, scope: !10062)
!10187 = !DILocation(line: 1645, column: 44, scope: !10062)
!10188 = !DILocation(line: 1645, column: 42, scope: !10062)
!10189 = !DILocation(line: 1645, column: 20, scope: !10062)
!10190 = !DILocation(line: 1645, column: 27, scope: !10062)
!10191 = !DILocation(line: 1645, column: 13, scope: !10062)
!10192 = !DILocation(line: 1645, column: 32, scope: !10062)
!10193 = !DILocation(line: 1646, column: 35, scope: !10062)
!10194 = !DILocation(line: 1646, column: 45, scope: !10062)
!10195 = !DILocation(line: 1646, column: 44, scope: !10062)
!10196 = !DILocation(line: 1646, column: 42, scope: !10062)
!10197 = !DILocation(line: 1646, column: 20, scope: !10062)
!10198 = !DILocation(line: 1646, column: 27, scope: !10062)
!10199 = !DILocation(line: 1646, column: 13, scope: !10062)
!10200 = !DILocation(line: 1646, column: 32, scope: !10062)
!10201 = !DILocation(line: 1647, column: 32, scope: !10062)
!10202 = !DILocation(line: 1647, column: 41, scope: !10062)
!10203 = !DILocation(line: 1647, column: 39, scope: !10062)
!10204 = !DILocation(line: 1647, column: 20, scope: !10062)
!10205 = !DILocation(line: 1647, column: 13, scope: !10062)
!10206 = !DILocation(line: 1647, column: 29, scope: !10062)
!10207 = !DILocation(line: 1648, column: 35, scope: !10062)
!10208 = !DILocation(line: 1648, column: 44, scope: !10062)
!10209 = !DILocation(line: 1648, column: 42, scope: !10062)
!10210 = !DILocation(line: 1648, column: 20, scope: !10062)
!10211 = !DILocation(line: 1648, column: 27, scope: !10062)
!10212 = !DILocation(line: 1648, column: 13, scope: !10062)
!10213 = !DILocation(line: 1648, column: 32, scope: !10062)
!10214 = !DILocation(line: 1649, column: 35, scope: !10062)
!10215 = !DILocation(line: 1649, column: 45, scope: !10062)
!10216 = !DILocation(line: 1649, column: 44, scope: !10062)
!10217 = !DILocation(line: 1649, column: 42, scope: !10062)
!10218 = !DILocation(line: 1649, column: 20, scope: !10062)
!10219 = !DILocation(line: 1649, column: 27, scope: !10062)
!10220 = !DILocation(line: 1649, column: 13, scope: !10062)
!10221 = !DILocation(line: 1649, column: 32, scope: !10062)
!10222 = !DILocation(line: 1650, column: 35, scope: !10062)
!10223 = !DILocation(line: 1650, column: 45, scope: !10062)
!10224 = !DILocation(line: 1650, column: 44, scope: !10062)
!10225 = !DILocation(line: 1650, column: 42, scope: !10062)
!10226 = !DILocation(line: 1650, column: 20, scope: !10062)
!10227 = !DILocation(line: 1650, column: 27, scope: !10062)
!10228 = !DILocation(line: 1650, column: 13, scope: !10062)
!10229 = !DILocation(line: 1650, column: 32, scope: !10062)
!10230 = !DILocation(line: 1651, column: 35, scope: !10062)
!10231 = !DILocation(line: 1651, column: 44, scope: !10062)
!10232 = !DILocation(line: 1651, column: 42, scope: !10062)
!10233 = !DILocation(line: 1651, column: 20, scope: !10062)
!10234 = !DILocation(line: 1651, column: 27, scope: !10062)
!10235 = !DILocation(line: 1651, column: 13, scope: !10062)
!10236 = !DILocation(line: 1651, column: 32, scope: !10062)
!10237 = !DILocation(line: 1652, column: 35, scope: !10062)
!10238 = !DILocation(line: 1652, column: 44, scope: !10062)
!10239 = !DILocation(line: 1652, column: 42, scope: !10062)
!10240 = !DILocation(line: 1652, column: 20, scope: !10062)
!10241 = !DILocation(line: 1652, column: 27, scope: !10062)
!10242 = !DILocation(line: 1652, column: 13, scope: !10062)
!10243 = !DILocation(line: 1652, column: 32, scope: !10062)
!10244 = !DILocation(line: 1653, column: 9, scope: !10062)
!10245 = !DILocation(line: 1655, column: 23, scope: !10048)
!10246 = !DILocation(line: 1655, column: 26, scope: !10048)
!10247 = !DILocation(line: 1655, column: 16, scope: !10048)
!10248 = !DILocation(line: 1655, column: 9, scope: !10048)
!10249 = !DILocation(line: 1655, column: 12, scope: !10048)
!10250 = !DILocation(line: 1655, column: 20, scope: !10048)
!10251 = !DILocation(line: 1656, column: 5, scope: !10048)
!10252 = !DILocation(line: 1609, column: 29, scope: !10253)
!10253 = !DILexicalBlockFile(scope: !10043, file: !898, discriminator: 2)
!10254 = !DILocation(line: 1609, column: 5, scope: !10253)
!10255 = distinct !{!10255, !10256}
!10256 = !DILocation(line: 1609, column: 5, scope: !9999)
!10257 = !DILocation(line: 1657, column: 1, scope: !9999)
