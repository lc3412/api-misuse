; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aaccoder.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aaccoder.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AACCoefficientsEncoder = type { void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)*, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AACEncContext = type { %struct.AVClass*, %struct.AACEncOptions, %struct.PutBitContext, %struct.FFTContext, %struct.FFTContext, %struct.AVFloatDSPContext*, %struct.AACPCEInfo, [16 x float*], i32, i32, [8 x i8], %struct.LPCContext, i32, i32, i8*, i8*, %struct.ChannelElement*, %struct.FFPsyContext, %struct.FFPsyPreprocessContext*, %struct.AACCoefficientsEncoder*, i32, i32, float, i32, float, i32, i32, %struct.AudioFrameQueue, [96 x i32], [1024 x float], i16, [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]], void (float*, float*, i32)*, void (i32*, float*, float*, i32, i32, i32, float, float)*, %struct.anon.0 }
%struct.AACEncOptions = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.AACPCEInfo = type { i64, [4 x i32], [3 x [8 x i32]], [4 x [8 x i32]], [16 x i8], [16 x i8] }
%struct.LPCContext = type { i32, i32, i32, double*, double*, void (i32*, i32, double*)*, void (double*, i32, i32, double*)*, [16 x i8], [2 x %struct.LLSModel] }
%struct.LLSModel = type { [36 x [36 x double]], [32 x [32 x double]], [32 x double], i32, void (%struct.LLSModel*, double*)*, double (%struct.LLSModel*, double*, i32)*, [8 x i8] }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x float], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x float], [1024 x float], [1536 x float], [2048 x float], [3072 x float], [1024 x float], [1024 x float], [672 x %struct.PredictorState], float*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, float, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x float]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { float, float, float, float, float, float, float, float }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x float]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x float]]], [64 x [40 x [2 x float]]], [2 x [2 x [38 x [64 x float]]]], [64 x [2 x float]], [64 x [2 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x i8]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [16 x i8], [5 x [64 x float]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x float], [1312 x float], i32, [2 x i32], [5 x float], [2 x [32 x [32 x [2 x float]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x float]]]], [42 x [48 x float]], [42 x [48 x float]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x float]], [3 x [5 x i8]], [3 x [5 x float]], [8 x i8], i8, [3 x i8], i32, i32, [16 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x float]]], [91 x [46 x [2 x float]]], [50 x [3 x [37 x [2 x float]]]], [34 x float], [8 x i8], [34 x float], [8 x i8], [34 x float], [8 x i8], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [91 x [32 x [2 x float]]], [91 x [32 x [2 x float]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (float*, [2 x float]*, i32)*, void ([2 x float]*, [2 x float]*, float*, i32)*, void ([2 x float]*, [2 x float]*, [8 x [2 x float]]*, i64, i32)*, void ([32 x [2 x float]]*, [38 x [64 x float]]*, i32, i32)*, void ([38 x [64 x float]]*, [32 x [2 x float]]*, i32, i32)*, void ([2 x float]*, [2 x float]*, [37 x [2 x float]]*, float*, [2 x float]*, float*, float, i32)*, [2 x void ([2 x float]*, [2 x float]*, [4 x float]*, [4 x float]*, i32)*] }
%struct.SBRDSPContext = type { void (float*)*, float ([2 x float]*, i32)*, void (float*)*, void (float*)*, void ([2 x float]*, float*)*, void (float*, float*)*, void (float*, float*, float*)*, void ([2 x float]*, [2 x [2 x float]]*)*, void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)*, void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)*, [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)*, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)*, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)* }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x float], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.AVFloatDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [16 x i8], [128 x float], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.MDCT15Context = type { i32, i32, i32, i32, i32*, i32*, %struct.FFTContext, %struct.FFTComplex*, %struct.FFTComplex*, [64 x %struct.FFTComplex], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i64)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i32*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FFPsyContext = type { %struct.AVCodecContext*, %struct.FFPsyModel*, %struct.FFPsyChannel*, %struct.FFPsyChannelGroup*, i32, i32, i8**, i32*, i32, %struct.anon, i8* }
%struct.FFPsyModel = type { i8*, i32 (%struct.FFPsyContext*)*, void (%struct.FFPsyWindowInfo*, %struct.FFPsyContext*, float*, float*, i32, i32)*, void (%struct.FFPsyContext*, i32, float**, %struct.FFPsyWindowInfo*)*, void (%struct.FFPsyContext*)* }
%struct.FFPsyWindowInfo = type { [3 x i32], i32, i32, [8 x i32], [8 x float], i32* }
%struct.FFPsyChannel = type { [128 x %struct.FFPsyBand], float }
%struct.FFPsyBand = type { i32, float, float, float }
%struct.FFPsyChannelGroup = type { [20 x %struct.FFPsyChannel*], i8, [128 x i8] }
%struct.anon = type { i32, i32, i32 }
%struct.FFPsyPreprocessContext = type opaque
%struct.AudioFrameQueue = type { %struct.AVCodecContext*, i32, i32, %struct.AudioFrame*, i32, i32 }
%struct.AudioFrame = type { i64, i32 }
%struct.AACQuantizeBandCostCacheEntry = type { float, float, i32, i8, i8, i16 }
%struct.anon.0 = type { float* }
%struct.TrellisPath = type { float, i32 }
%struct.BandCodingPath = type { i32, float, i32 }
%union.anon = type { i32 }
%struct.TrellisBandCodingPath = type { i32, float, i32 }
%union.unaligned_32 = type { i32 }

@ff_aac_coders = constant [3 x %struct.AACCoefficientsEncoder] [%struct.AACCoefficientsEncoder { void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)* @search_for_quantizers_anmr, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)* @encode_window_bands_info, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)* @quantize_and_encode_band, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_encode_tns_info, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* @ff_aac_encode_ltp_info, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_encode_main_pred, void (%struct.AACEncContext*, %struct.ChannelElement*)* @ff_aac_adjust_common_pred, void (%struct.AACEncContext*, %struct.ChannelElement*)* @ff_aac_adjust_common_ltp, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_apply_main_pred, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_apply_tns, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_update_ltp, void (%struct.AACEncContext*)* @ff_aac_ltp_insert_new_frame, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @set_special_band_scalefactors, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* @search_for_pns, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* @mark_pns, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_search_for_tns, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* @ff_aac_search_for_ltp, void (%struct.AACEncContext*, %struct.ChannelElement*)* @search_for_ms, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)* @ff_aac_search_for_is, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_search_for_pred }, %struct.AACCoefficientsEncoder { void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)* @search_for_quantizers_twoloop, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)* @codebook_trellis_rate, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)* @quantize_and_encode_band, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_encode_tns_info, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* @ff_aac_encode_ltp_info, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_encode_main_pred, void (%struct.AACEncContext*, %struct.ChannelElement*)* @ff_aac_adjust_common_pred, void (%struct.AACEncContext*, %struct.ChannelElement*)* @ff_aac_adjust_common_ltp, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_apply_main_pred, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_apply_tns, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_update_ltp, void (%struct.AACEncContext*)* @ff_aac_ltp_insert_new_frame, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @set_special_band_scalefactors, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* @search_for_pns, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* @mark_pns, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_search_for_tns, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* @ff_aac_search_for_ltp, void (%struct.AACEncContext*, %struct.ChannelElement*)* @search_for_ms, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)* @ff_aac_search_for_is, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_search_for_pred }, %struct.AACCoefficientsEncoder { void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)* @search_for_quantizers_fast, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)* @codebook_trellis_rate, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)* @quantize_and_encode_band, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_encode_tns_info, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* @ff_aac_encode_ltp_info, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_encode_main_pred, void (%struct.AACEncContext*, %struct.ChannelElement*)* @ff_aac_adjust_common_pred, void (%struct.AACEncContext*, %struct.ChannelElement*)* @ff_aac_adjust_common_ltp, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_apply_main_pred, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_apply_tns, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_update_ltp, void (%struct.AACEncContext*)* @ff_aac_ltp_insert_new_frame, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @set_special_band_scalefactors, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* @search_for_pns, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* @mark_pns, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_search_for_tns, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* @ff_aac_search_for_ltp, void (%struct.AACEncContext*, %struct.ChannelElement*)* @search_for_ms, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)* @ff_aac_search_for_is, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* @ff_aac_search_for_pred }], align 16
@ff_aac_scalefactor_bits = external constant [121 x i8], align 16
@ff_aac_pow34sf_tab = external global [428 x float], align 16
@aac_maxval_cb = internal constant [14 x i8] c"\00\01\03\05\05\07\07\07\09\09\09\09\09\0B", align 1
@quantize_and_encode_band_cost_rtz_arr = internal constant [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*] [float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ZERO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ESC_RTZ, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NONE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NOISE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO], align 16
@quantize_and_encode_band_cost_arr = internal constant [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*] [float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ZERO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ESC, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NONE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NOISE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO], align 16
@ff_aac_pow2sf_tab = external global [428 x float], align 16
@aac_cb_maxval = internal constant [12 x i8] c"\00\01\01\02\02\04\04\07\07\0C\0C\10", align 1
@aac_cb_range = internal constant [12 x i8] c"\00\03\03\03\03\09\09\08\08\0D\0D\11", align 1
@ff_aac_spectral_bits = external constant [11 x i8*], align 16
@ff_aac_codebook_vectors = external global [0 x float*], align 8
@ff_aac_spectral_codes = external constant [11 x i16*], align 16
@.str = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"libavcodec/aacenc_quantization.h\00", align 1
@aac_cb_out_map = internal constant [15 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0D\0E\0F", align 1
@aac_cb_in_map = internal constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\00\0C\0D\0E", align 16
@run_value_bits = internal constant [2 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @run_value_bits_long, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @run_value_bits_short, i32 0, i32 0)], align 16
@run_value_bits_long = internal constant [64 x i8] c"\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0F", align 16
@run_value_bits_short = internal constant [16 x i8] c"\03\03\03\03\03\03\03\06\06\06\06\06\06\06\06\09", align 16

; Function Attrs: nounwind uwtable
define internal void @search_for_quantizers_anmr(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, float %lambda) #0 !dbg !2761 {
entry:
  %retval.i533 = alloca i32, align 4
  %a.addr.i534 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i534, metadata !2767, metadata !2772), !dbg !2773
  %amin.addr.i535 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i535, metadata !2777, metadata !2772), !dbg !2778
  %amax.addr.i536 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i536, metadata !2779, metadata !2772), !dbg !2780
  %retval.i522 = alloca i32, align 4
  %a.addr.i523 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i523, metadata !2767, metadata !2772), !dbg !2781
  %amin.addr.i524 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i524, metadata !2777, metadata !2772), !dbg !2791
  %amax.addr.i525 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i525, metadata !2779, metadata !2772), !dbg !2792
  %retval.i511 = alloca i32, align 4
  %a.addr.i512 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i512, metadata !2767, metadata !2772), !dbg !2793
  %amin.addr.i513 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i513, metadata !2777, metadata !2772), !dbg !2795
  %amax.addr.i514 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i514, metadata !2779, metadata !2772), !dbg !2796
  %retval.i500 = alloca i32, align 4
  %a.addr.i501 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i501, metadata !2767, metadata !2772), !dbg !2797
  %amin.addr.i502 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i502, metadata !2777, metadata !2772), !dbg !2801
  %amax.addr.i503 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i503, metadata !2779, metadata !2772), !dbg !2802
  %retval.i489 = alloca i32, align 4
  %a.addr.i490 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i490, metadata !2767, metadata !2772), !dbg !2803
  %amin.addr.i491 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i491, metadata !2777, metadata !2772), !dbg !2805
  %amax.addr.i492 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i492, metadata !2779, metadata !2772), !dbg !2806
  %retval.i478 = alloca i32, align 4
  %a.addr.i479 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i479, metadata !2767, metadata !2772), !dbg !2807
  %amin.addr.i480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i480, metadata !2777, metadata !2772), !dbg !2809
  %amax.addr.i481 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i481, metadata !2779, metadata !2772), !dbg !2810
  %retval.i474 = alloca i8, align 1
  %a.addr.i475 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i475, metadata !2811, metadata !2772), !dbg !2815
  %retval.i463 = alloca i32, align 4
  %a.addr.i464 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i464, metadata !2767, metadata !2772), !dbg !2820
  %amin.addr.i465 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i465, metadata !2777, metadata !2772), !dbg !2823
  %amax.addr.i466 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i466, metadata !2779, metadata !2772), !dbg !2824
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2767, metadata !2772), !dbg !2825
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2777, metadata !2772), !dbg !2827
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2779, metadata !2772), !dbg !2828
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %lambda.addr = alloca float, align 4
  %q = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %idx = alloca i32, align 4
  %paths = alloca [121 x [61 x %struct.TrellisPath]], align 16
  %bandaddr = alloca [121 x i32], align 16
  %minq = alloca i32, align 4
  %mincost = alloca float, align 4
  %q0f = alloca float, align 4
  %q1f = alloca float, align 4
  %qnrgf = alloca float, align 4
  %q0 = alloca i32, align 4
  %q1 = alloca i32, align 4
  %qcnt = alloca i32, align 4
  %t = alloca float, align 4
  %q0low = alloca i32, align 4
  %q1high = alloca i32, align 4
  %qnrg = alloca i32, align 4
  %coefs = alloca float*, align 8
  %qmin = alloca float, align 4
  %qmax = alloca float, align 4
  %nz = alloca i32, align 4
  %band = alloca %struct.FFPsyBand*, align 8
  %t152 = alloca float, align 4
  %minscale = alloca i32, align 4
  %maxscale = alloca i32, align 4
  %minrd = alloca float, align 4
  %maxval = alloca float, align 4
  %dist = alloca float, align 4
  %cb = alloca i32, align 4
  %band230 = alloca %struct.FFPsyBand*, align 8
  %cost276 = alloca float, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2829, metadata !2772), !dbg !2830
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !2831, metadata !2772), !dbg !2832
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !2833, metadata !2772), !dbg !2834
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !2835, metadata !2772), !dbg !2836
  call void @llvm.dbg.declare(metadata i32* %q, metadata !2837, metadata !2772), !dbg !2838
  call void @llvm.dbg.declare(metadata i32* %w, metadata !2839, metadata !2772), !dbg !2840
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !2841, metadata !2772), !dbg !2842
  call void @llvm.dbg.declare(metadata i32* %g, metadata !2843, metadata !2772), !dbg !2844
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2845, metadata !2772), !dbg !2846
  store i32 0, i32* %start, align 4, !dbg !2846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2847, metadata !2772), !dbg !2848
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2849, metadata !2772), !dbg !2850
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !2851, metadata !2772), !dbg !2852
  call void @llvm.dbg.declare(metadata [121 x [61 x %struct.TrellisPath]]* %paths, metadata !2853, metadata !2772), !dbg !2863
  call void @llvm.dbg.declare(metadata [121 x i32]* %bandaddr, metadata !2864, metadata !2772), !dbg !2867
  call void @llvm.dbg.declare(metadata i32* %minq, metadata !2868, metadata !2772), !dbg !2869
  call void @llvm.dbg.declare(metadata float* %mincost, metadata !2870, metadata !2772), !dbg !2871
  call void @llvm.dbg.declare(metadata float* %q0f, metadata !2872, metadata !2772), !dbg !2873
  store float 0x47EFFFFFE0000000, float* %q0f, align 4, !dbg !2873
  call void @llvm.dbg.declare(metadata float* %q1f, metadata !2874, metadata !2772), !dbg !2875
  store float 0.000000e+00, float* %q1f, align 4, !dbg !2875
  call void @llvm.dbg.declare(metadata float* %qnrgf, metadata !2876, metadata !2772), !dbg !2877
  store float 0.000000e+00, float* %qnrgf, align 4, !dbg !2877
  call void @llvm.dbg.declare(metadata i32* %q0, metadata !2878, metadata !2772), !dbg !2879
  call void @llvm.dbg.declare(metadata i32* %q1, metadata !2880, metadata !2772), !dbg !2881
  call void @llvm.dbg.declare(metadata i32* %qcnt, metadata !2882, metadata !2772), !dbg !2883
  store i32 0, i32* %qcnt, align 4, !dbg !2883
  store i32 0, i32* %i, align 4, !dbg !2884
  br label %for.cond, !dbg !2886

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2887
  %cmp = icmp slt i32 %0, 1024, !dbg !2890
  br i1 %cmp, label %for.body, label %for.end, !dbg !2891

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %t, metadata !2892, metadata !2772), !dbg !2894
  %1 = load i32, i32* %i, align 4, !dbg !2895
  %idxprom = sext i32 %1 to i64, !dbg !2896
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !2896
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 14, !dbg !2897
  %arrayidx = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom, !dbg !2896
  %3 = load float, float* %arrayidx, align 4, !dbg !2896
  %call = call float @fabsf(float %3) #3, !dbg !2898
  store float %call, float* %t, align 4, !dbg !2894
  %4 = load float, float* %t, align 4, !dbg !2899
  %cmp1 = fcmp ogt float %4, 0.000000e+00, !dbg !2901
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2902

if.then:                                          ; preds = %for.body
  %5 = load float, float* %q0f, align 4, !dbg !2903
  %6 = load float, float* %t, align 4, !dbg !2905
  %cmp2 = fcmp ogt float %5, %6, !dbg !2906
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2907

cond.true:                                        ; preds = %if.then
  %7 = load float, float* %t, align 4, !dbg !2908
  br label %cond.end, !dbg !2910

cond.false:                                       ; preds = %if.then
  %8 = load float, float* %q0f, align 4, !dbg !2911
  br label %cond.end, !dbg !2913

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %7, %cond.true ], [ %8, %cond.false ], !dbg !2914
  store float %cond, float* %q0f, align 4, !dbg !2916
  %9 = load float, float* %q1f, align 4, !dbg !2917
  %10 = load float, float* %t, align 4, !dbg !2918
  %cmp3 = fcmp ogt float %9, %10, !dbg !2919
  br i1 %cmp3, label %cond.true4, label %cond.false5, !dbg !2920

cond.true4:                                       ; preds = %cond.end
  %11 = load float, float* %q1f, align 4, !dbg !2921
  br label %cond.end6, !dbg !2922

cond.false5:                                      ; preds = %cond.end
  %12 = load float, float* %t, align 4, !dbg !2923
  br label %cond.end6, !dbg !2924

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi float [ %11, %cond.true4 ], [ %12, %cond.false5 ], !dbg !2925
  store float %cond7, float* %q1f, align 4, !dbg !2926
  %13 = load float, float* %t, align 4, !dbg !2927
  %14 = load float, float* %t, align 4, !dbg !2928
  %mul = fmul float %13, %14, !dbg !2929
  %15 = load float, float* %qnrgf, align 4, !dbg !2930
  %add = fadd float %15, %mul, !dbg !2930
  store float %add, float* %qnrgf, align 4, !dbg !2930
  %16 = load i32, i32* %qcnt, align 4, !dbg !2931
  %inc = add nsw i32 %16, 1, !dbg !2931
  store i32 %inc, i32* %qcnt, align 4, !dbg !2931
  br label %if.end, !dbg !2932

if.end:                                           ; preds = %cond.end6, %for.body
  br label %for.inc, !dbg !2933

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %i, align 4, !dbg !2934
  %inc8 = add nsw i32 %17, 1, !dbg !2934
  store i32 %inc8, i32* %i, align 4, !dbg !2934
  br label %for.cond, !dbg !2936, !llvm.loop !2937

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %qcnt, align 4, !dbg !2939
  %tobool = icmp ne i32 %18, 0, !dbg !2939
  br i1 %tobool, label %if.end11, label %if.then9, !dbg !2941

if.then9:                                         ; preds = %for.end
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !2942
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 7, !dbg !2944
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i32 0, i32 0, !dbg !2945
  %20 = bitcast i32* %arraydecay to i8*, !dbg !2945
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 512, i32 4, i1 false), !dbg !2945
  %21 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !2946
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %21, i32 0, i32 8, !dbg !2947
  %arraydecay10 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i32 0, i32 0, !dbg !2948
  call void @llvm.memset.p0i8.i64(i8* %arraydecay10, i8 1, i64 128, i32 4, i1 false), !dbg !2948
  br label %for.end462, !dbg !2949

if.end11:                                         ; preds = %for.end
  %22 = load float, float* %q0f, align 4, !dbg !2950
  %call12 = call zeroext i8 @coef2minsf(float %22), !dbg !2951
  %conv = zext i8 %call12 to i32, !dbg !2951
  store i32 %conv, i32* %a.addr.i, align 4, !dbg !2952
  store i32 0, i32* %amin.addr.i, align 4, !dbg !2952
  store i32 254, i32* %amax.addr.i, align 4, !dbg !2952
  %23 = load i32, i32* %a.addr.i, align 4, !dbg !2953
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !2955
  %cmp.i = icmp slt i32 %23, %24, !dbg !2956
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !2957

if.then.i:                                        ; preds = %if.end11
  %25 = load i32, i32* %amin.addr.i, align 4, !dbg !2958
  store i32 %25, i32* %retval.i, align 4, !dbg !2960
  br label %av_clip_c.exit, !dbg !2960

if.else.i:                                        ; preds = %if.end11
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !2961
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !2963
  %cmp1.i = icmp sgt i32 %26, %27, !dbg !2964
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !2965

if.then2.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %amax.addr.i, align 4, !dbg !2966
  store i32 %28, i32* %retval.i, align 4, !dbg !2968
  br label %av_clip_c.exit, !dbg !2968

if.else3.i:                                       ; preds = %if.else.i
  %29 = load i32, i32* %a.addr.i, align 4, !dbg !2969
  store i32 %29, i32* %retval.i, align 4, !dbg !2970
  br label %av_clip_c.exit, !dbg !2970

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %30 = load i32, i32* %retval.i, align 4, !dbg !2971
  store i32 %30, i32* %q0, align 4, !dbg !2972
  %31 = load float, float* %q1f, align 4, !dbg !2973
  %call14 = call zeroext i8 @coef2maxsf(float %31), !dbg !2974
  %conv15 = zext i8 %call14 to i32, !dbg !2974
  store i32 %conv15, i32* %a.addr.i464, align 4, !dbg !2975
  store i32 1, i32* %amin.addr.i465, align 4, !dbg !2975
  store i32 255, i32* %amax.addr.i466, align 4, !dbg !2975
  %32 = load i32, i32* %a.addr.i464, align 4, !dbg !2976
  %33 = load i32, i32* %amin.addr.i465, align 4, !dbg !2977
  %cmp.i467 = icmp slt i32 %32, %33, !dbg !2978
  br i1 %cmp.i467, label %if.then.i468, label %if.else.i470, !dbg !2979

if.then.i468:                                     ; preds = %av_clip_c.exit
  %34 = load i32, i32* %amin.addr.i465, align 4, !dbg !2980
  store i32 %34, i32* %retval.i463, align 4, !dbg !2981
  br label %av_clip_c.exit473, !dbg !2981

if.else.i470:                                     ; preds = %av_clip_c.exit
  %35 = load i32, i32* %a.addr.i464, align 4, !dbg !2982
  %36 = load i32, i32* %amax.addr.i466, align 4, !dbg !2983
  %cmp1.i469 = icmp sgt i32 %35, %36, !dbg !2984
  br i1 %cmp1.i469, label %if.then2.i471, label %if.else3.i472, !dbg !2985

if.then2.i471:                                    ; preds = %if.else.i470
  %37 = load i32, i32* %amax.addr.i466, align 4, !dbg !2986
  store i32 %37, i32* %retval.i463, align 4, !dbg !2987
  br label %av_clip_c.exit473, !dbg !2987

if.else3.i472:                                    ; preds = %if.else.i470
  %38 = load i32, i32* %a.addr.i464, align 4, !dbg !2988
  store i32 %38, i32* %retval.i463, align 4, !dbg !2989
  br label %av_clip_c.exit473, !dbg !2989

av_clip_c.exit473:                                ; preds = %if.then.i468, %if.then2.i471, %if.else3.i472
  %39 = load i32, i32* %retval.i463, align 4, !dbg !2990
  store i32 %39, i32* %q1, align 4, !dbg !2991
  %40 = load i32, i32* %q1, align 4, !dbg !2992
  %41 = load i32, i32* %q0, align 4, !dbg !2993
  %sub = sub nsw i32 %40, %41, !dbg !2994
  %cmp17 = icmp sgt i32 %sub, 60, !dbg !2995
  br i1 %cmp17, label %if.then19, label %if.end44, !dbg !2996

if.then19:                                        ; preds = %av_clip_c.exit473
  call void @llvm.dbg.declare(metadata i32* %q0low, metadata !2997, metadata !2772), !dbg !2998
  %42 = load i32, i32* %q0, align 4, !dbg !2999
  store i32 %42, i32* %q0low, align 4, !dbg !2998
  call void @llvm.dbg.declare(metadata i32* %q1high, metadata !3000, metadata !2772), !dbg !3001
  %43 = load i32, i32* %q1, align 4, !dbg !3002
  store i32 %43, i32* %q1high, align 4, !dbg !3001
  call void @llvm.dbg.declare(metadata i32* %qnrg, metadata !3003, metadata !2772), !dbg !3004
  %44 = load float, float* %qnrgf, align 4, !dbg !3005
  %45 = load i32, i32* %qcnt, align 4, !dbg !3006
  %conv20 = sitofp i32 %45 to float, !dbg !3006
  %div = fdiv float %44, %conv20, !dbg !3007
  %call21 = call float @sqrtf(float %div) #9, !dbg !3008
  %call22 = call float @log2f(float %call21) #9, !dbg !3009
  %mul23 = fmul float %call22, 4.000000e+00, !dbg !3011
  %sub24 = fsub float %mul23, 3.100000e+01, !dbg !3012
  %add25 = fadd float %sub24, 1.400000e+02, !dbg !3013
  %sub26 = fsub float %add25, 3.600000e+01, !dbg !3014
  %conv27 = fptosi float %sub26 to i32, !dbg !3015
  store i32 %conv27, i32* %a.addr.i475, align 4, !dbg !3016
  %46 = load i32, i32* %a.addr.i475, align 4, !dbg !3017
  %and.i = and i32 %46, -256, !dbg !3019
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3019
  br i1 %tobool.i, label %if.then.i476, label %if.else.i477, !dbg !3020

if.then.i476:                                     ; preds = %if.then19
  %47 = load i32, i32* %a.addr.i475, align 4, !dbg !3021
  %neg.i = xor i32 %47, -1, !dbg !3023
  %shr.i = ashr i32 %neg.i, 31, !dbg !3024
  %conv.i = trunc i32 %shr.i to i8, !dbg !3025
  store i8 %conv.i, i8* %retval.i474, align 1, !dbg !3026
  br label %av_clip_uint8_c.exit, !dbg !3026

if.else.i477:                                     ; preds = %if.then19
  %48 = load i32, i32* %a.addr.i475, align 4, !dbg !3027
  %conv1.i = trunc i32 %48 to i8, !dbg !3027
  store i8 %conv1.i, i8* %retval.i474, align 1, !dbg !3028
  br label %av_clip_uint8_c.exit, !dbg !3028

av_clip_uint8_c.exit:                             ; preds = %if.then.i476, %if.else.i477
  %49 = load i8, i8* %retval.i474, align 1, !dbg !3029
  %conv29 = zext i8 %49 to i32, !dbg !3030
  store i32 %conv29, i32* %qnrg, align 4, !dbg !3004
  %50 = load i32, i32* %qnrg, align 4, !dbg !3031
  %add30 = add nsw i32 %50, 30, !dbg !3032
  store i32 %add30, i32* %q1, align 4, !dbg !3033
  %51 = load i32, i32* %qnrg, align 4, !dbg !3034
  %sub31 = sub nsw i32 %51, 30, !dbg !3035
  store i32 %sub31, i32* %q0, align 4, !dbg !3036
  %52 = load i32, i32* %q0, align 4, !dbg !3037
  %53 = load i32, i32* %q0low, align 4, !dbg !3039
  %cmp32 = icmp slt i32 %52, %53, !dbg !3040
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !3041

if.then34:                                        ; preds = %av_clip_uint8_c.exit
  %54 = load i32, i32* %q0low, align 4, !dbg !3042
  %55 = load i32, i32* %q0, align 4, !dbg !3044
  %sub35 = sub nsw i32 %54, %55, !dbg !3045
  %56 = load i32, i32* %q1, align 4, !dbg !3046
  %add36 = add nsw i32 %56, %sub35, !dbg !3046
  store i32 %add36, i32* %q1, align 4, !dbg !3046
  %57 = load i32, i32* %q0low, align 4, !dbg !3047
  store i32 %57, i32* %q0, align 4, !dbg !3048
  br label %if.end43, !dbg !3049

if.else:                                          ; preds = %av_clip_uint8_c.exit
  %58 = load i32, i32* %q1, align 4, !dbg !3050
  %59 = load i32, i32* %q1high, align 4, !dbg !3053
  %cmp37 = icmp sgt i32 %58, %59, !dbg !3054
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !3050

if.then39:                                        ; preds = %if.else
  %60 = load i32, i32* %q1, align 4, !dbg !3055
  %61 = load i32, i32* %q1high, align 4, !dbg !3057
  %sub40 = sub nsw i32 %60, %61, !dbg !3058
  %62 = load i32, i32* %q0, align 4, !dbg !3059
  %sub41 = sub nsw i32 %62, %sub40, !dbg !3059
  store i32 %sub41, i32* %q0, align 4, !dbg !3059
  %63 = load i32, i32* %q1high, align 4, !dbg !3060
  store i32 %63, i32* %q1, align 4, !dbg !3061
  br label %if.end42, !dbg !3062

if.end42:                                         ; preds = %if.then39, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then34
  br label %if.end44, !dbg !3063

if.end44:                                         ; preds = %if.end43, %av_clip_c.exit473
  %64 = load i32, i32* %q0, align 4, !dbg !3064
  %65 = load i32, i32* %q1, align 4, !dbg !3065
  %cmp45 = icmp eq i32 %64, %65, !dbg !3066
  br i1 %cmp45, label %if.then47, label %if.end52, !dbg !3067

if.then47:                                        ; preds = %if.end44
  %66 = load i32, i32* %q0, align 4, !dbg !3068
  %add48 = add nsw i32 %66, 1, !dbg !3069
  store i32 %add48, i32* %a.addr.i479, align 4, !dbg !3070
  store i32 1, i32* %amin.addr.i480, align 4, !dbg !3070
  store i32 255, i32* %amax.addr.i481, align 4, !dbg !3070
  %67 = load i32, i32* %a.addr.i479, align 4, !dbg !3071
  %68 = load i32, i32* %amin.addr.i480, align 4, !dbg !3072
  %cmp.i482 = icmp slt i32 %67, %68, !dbg !3073
  br i1 %cmp.i482, label %if.then.i483, label %if.else.i485, !dbg !3074

if.then.i483:                                     ; preds = %if.then47
  %69 = load i32, i32* %amin.addr.i480, align 4, !dbg !3075
  store i32 %69, i32* %retval.i478, align 4, !dbg !3076
  br label %av_clip_c.exit488, !dbg !3076

if.else.i485:                                     ; preds = %if.then47
  %70 = load i32, i32* %a.addr.i479, align 4, !dbg !3077
  %71 = load i32, i32* %amax.addr.i481, align 4, !dbg !3078
  %cmp1.i484 = icmp sgt i32 %70, %71, !dbg !3079
  br i1 %cmp1.i484, label %if.then2.i486, label %if.else3.i487, !dbg !3080

if.then2.i486:                                    ; preds = %if.else.i485
  %72 = load i32, i32* %amax.addr.i481, align 4, !dbg !3081
  store i32 %72, i32* %retval.i478, align 4, !dbg !3082
  br label %av_clip_c.exit488, !dbg !3082

if.else3.i487:                                    ; preds = %if.else.i485
  %73 = load i32, i32* %a.addr.i479, align 4, !dbg !3083
  store i32 %73, i32* %retval.i478, align 4, !dbg !3084
  br label %av_clip_c.exit488, !dbg !3084

av_clip_c.exit488:                                ; preds = %if.then.i483, %if.then2.i486, %if.else3.i487
  %74 = load i32, i32* %retval.i478, align 4, !dbg !3085
  store i32 %74, i32* %q1, align 4, !dbg !3086
  %75 = load i32, i32* %q1, align 4, !dbg !3087
  %sub50 = sub nsw i32 %75, 1, !dbg !3088
  store i32 %sub50, i32* %a.addr.i534, align 4, !dbg !3089
  store i32 0, i32* %amin.addr.i535, align 4, !dbg !3089
  store i32 254, i32* %amax.addr.i536, align 4, !dbg !3089
  %76 = load i32, i32* %a.addr.i534, align 4, !dbg !3090
  %77 = load i32, i32* %amin.addr.i535, align 4, !dbg !3091
  %cmp.i537 = icmp slt i32 %76, %77, !dbg !3092
  br i1 %cmp.i537, label %if.then.i538, label %if.else.i540, !dbg !3093

if.then.i538:                                     ; preds = %av_clip_c.exit488
  %78 = load i32, i32* %amin.addr.i535, align 4, !dbg !3094
  store i32 %78, i32* %retval.i533, align 4, !dbg !3095
  br label %av_clip_c.exit543, !dbg !3095

if.else.i540:                                     ; preds = %av_clip_c.exit488
  %79 = load i32, i32* %a.addr.i534, align 4, !dbg !3096
  %80 = load i32, i32* %amax.addr.i536, align 4, !dbg !3097
  %cmp1.i539 = icmp sgt i32 %79, %80, !dbg !3098
  br i1 %cmp1.i539, label %if.then2.i541, label %if.else3.i542, !dbg !3099

if.then2.i541:                                    ; preds = %if.else.i540
  %81 = load i32, i32* %amax.addr.i536, align 4, !dbg !3100
  store i32 %81, i32* %retval.i533, align 4, !dbg !3101
  br label %av_clip_c.exit543, !dbg !3101

if.else3.i542:                                    ; preds = %if.else.i540
  %82 = load i32, i32* %a.addr.i534, align 4, !dbg !3102
  store i32 %82, i32* %retval.i533, align 4, !dbg !3103
  br label %av_clip_c.exit543, !dbg !3103

av_clip_c.exit543:                                ; preds = %if.then.i538, %if.then2.i541, %if.else3.i542
  %83 = load i32, i32* %retval.i533, align 4, !dbg !3104
  store i32 %83, i32* %q0, align 4, !dbg !3105
  br label %if.end52, !dbg !3106

if.end52:                                         ; preds = %av_clip_c.exit543, %if.end44
  store i32 0, i32* %i, align 4, !dbg !3107
  br label %for.cond53, !dbg !3109

for.cond53:                                       ; preds = %for.inc63, %if.end52
  %84 = load i32, i32* %i, align 4, !dbg !3110
  %cmp54 = icmp slt i32 %84, 61, !dbg !3113
  br i1 %cmp54, label %for.body56, label %for.end65, !dbg !3114

for.body56:                                       ; preds = %for.cond53
  %85 = load i32, i32* %i, align 4, !dbg !3115
  %idxprom57 = sext i32 %85 to i64, !dbg !3117
  %arrayidx58 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 0, !dbg !3117
  %arrayidx59 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx58, i64 0, i64 %idxprom57, !dbg !3117
  %cost = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx59, i32 0, i32 0, !dbg !3118
  store float 0.000000e+00, float* %cost, align 8, !dbg !3119
  %86 = load i32, i32* %i, align 4, !dbg !3120
  %idxprom60 = sext i32 %86 to i64, !dbg !3121
  %arrayidx61 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 0, !dbg !3121
  %arrayidx62 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx61, i64 0, i64 %idxprom60, !dbg !3121
  %prev = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx62, i32 0, i32 1, !dbg !3122
  store i32 -1, i32* %prev, align 4, !dbg !3123
  br label %for.inc63, !dbg !3124

for.inc63:                                        ; preds = %for.body56
  %87 = load i32, i32* %i, align 4, !dbg !3125
  %inc64 = add nsw i32 %87, 1, !dbg !3125
  store i32 %inc64, i32* %i, align 4, !dbg !3125
  br label %for.cond53, !dbg !3127, !llvm.loop !3128

for.end65:                                        ; preds = %for.cond53
  store i32 1, i32* %j, align 4, !dbg !3130
  br label %for.cond66, !dbg !3132

for.cond66:                                       ; preds = %for.inc87, %for.end65
  %88 = load i32, i32* %j, align 4, !dbg !3133
  %cmp67 = icmp slt i32 %88, 121, !dbg !3136
  br i1 %cmp67, label %for.body69, label %for.end89, !dbg !3137

for.body69:                                       ; preds = %for.cond66
  store i32 0, i32* %i, align 4, !dbg !3138
  br label %for.cond70, !dbg !3141

for.cond70:                                       ; preds = %for.inc84, %for.body69
  %89 = load i32, i32* %i, align 4, !dbg !3142
  %cmp71 = icmp slt i32 %89, 61, !dbg !3145
  br i1 %cmp71, label %for.body73, label %for.end86, !dbg !3146

for.body73:                                       ; preds = %for.cond70
  %90 = load i32, i32* %i, align 4, !dbg !3147
  %idxprom74 = sext i32 %90 to i64, !dbg !3149
  %91 = load i32, i32* %j, align 4, !dbg !3150
  %idxprom75 = sext i32 %91 to i64, !dbg !3149
  %arrayidx76 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom75, !dbg !3149
  %arrayidx77 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx76, i64 0, i64 %idxprom74, !dbg !3149
  %cost78 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx77, i32 0, i32 0, !dbg !3151
  store float 0x7FF0000000000000, float* %cost78, align 8, !dbg !3152
  %92 = load i32, i32* %i, align 4, !dbg !3153
  %idxprom79 = sext i32 %92 to i64, !dbg !3154
  %93 = load i32, i32* %j, align 4, !dbg !3155
  %idxprom80 = sext i32 %93 to i64, !dbg !3154
  %arrayidx81 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom80, !dbg !3154
  %arrayidx82 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx81, i64 0, i64 %idxprom79, !dbg !3154
  %prev83 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx82, i32 0, i32 1, !dbg !3156
  store i32 -2, i32* %prev83, align 4, !dbg !3157
  br label %for.inc84, !dbg !3158

for.inc84:                                        ; preds = %for.body73
  %94 = load i32, i32* %i, align 4, !dbg !3159
  %inc85 = add nsw i32 %94, 1, !dbg !3159
  store i32 %inc85, i32* %i, align 4, !dbg !3159
  br label %for.cond70, !dbg !3161, !llvm.loop !3162

for.end86:                                        ; preds = %for.cond70
  br label %for.inc87, !dbg !3164

for.inc87:                                        ; preds = %for.end86
  %95 = load i32, i32* %j, align 4, !dbg !3165
  %inc88 = add nsw i32 %95, 1, !dbg !3165
  store i32 %inc88, i32* %j, align 4, !dbg !3165
  br label %for.cond66, !dbg !3167, !llvm.loop !3168

for.end89:                                        ; preds = %for.cond66
  store i32 1, i32* %idx, align 4, !dbg !3170
  %96 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3171
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %96, i32 0, i32 32, !dbg !3172
  %97 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !3172
  %98 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3173
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %98, i32 0, i32 29, !dbg !3174
  %arraydecay90 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i32 0, i32 0, !dbg !3173
  %99 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3175
  %coeffs91 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %99, i32 0, i32 14, !dbg !3176
  %arraydecay92 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs91, i32 0, i32 0, !dbg !3175
  call void %97(float* %arraydecay90, float* %arraydecay92, i32 1024), !dbg !3171
  store i32 0, i32* %w, align 4, !dbg !3177
  br label %for.cond93, !dbg !3178

for.cond93:                                       ; preds = %for.inc360, %for.end89
  %100 = load i32, i32* %w, align 4, !dbg !3179
  %101 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3181
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %101, i32 0, i32 0, !dbg !3182
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !3183
  %102 = load i32, i32* %num_windows, align 4, !dbg !3183
  %cmp94 = icmp slt i32 %100, %102, !dbg !3184
  br i1 %cmp94, label %for.body96, label %for.end367, !dbg !3185

for.body96:                                       ; preds = %for.cond93
  %103 = load i32, i32* %w, align 4, !dbg !3186
  %mul97 = mul nsw i32 %103, 128, !dbg !3187
  store i32 %mul97, i32* %start, align 4, !dbg !3188
  store i32 0, i32* %g, align 4, !dbg !3189
  br label %for.cond98, !dbg !3190

for.cond98:                                       ; preds = %for.inc357, %for.body96
  %104 = load i32, i32* %g, align 4, !dbg !3191
  %105 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3193
  %ics99 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %105, i32 0, i32 0, !dbg !3194
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics99, i32 0, i32 8, !dbg !3195
  %106 = load i32, i32* %num_swb, align 32, !dbg !3195
  %cmp100 = icmp slt i32 %104, %106, !dbg !3196
  br i1 %cmp100, label %for.body102, label %for.end359, !dbg !3197

for.body102:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata float** %coefs, metadata !3198, metadata !2772), !dbg !3199
  %107 = load i32, i32* %start, align 4, !dbg !3200
  %idxprom103 = sext i32 %107 to i64, !dbg !3201
  %108 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3201
  %coeffs104 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %108, i32 0, i32 14, !dbg !3202
  %arrayidx105 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs104, i64 0, i64 %idxprom103, !dbg !3201
  store float* %arrayidx105, float** %coefs, align 8, !dbg !3199
  call void @llvm.dbg.declare(metadata float* %qmin, metadata !3203, metadata !2772), !dbg !3204
  call void @llvm.dbg.declare(metadata float* %qmax, metadata !3205, metadata !2772), !dbg !3206
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !3207, metadata !2772), !dbg !3208
  store i32 0, i32* %nz, align 4, !dbg !3208
  %109 = load i32, i32* %w, align 4, !dbg !3209
  %mul106 = mul nsw i32 %109, 16, !dbg !3210
  %110 = load i32, i32* %g, align 4, !dbg !3211
  %add107 = add nsw i32 %mul106, %110, !dbg !3212
  %111 = load i32, i32* %idx, align 4, !dbg !3213
  %idxprom108 = sext i32 %111 to i64, !dbg !3214
  %arrayidx109 = getelementptr inbounds [121 x i32], [121 x i32]* %bandaddr, i64 0, i64 %idxprom108, !dbg !3214
  store i32 %add107, i32* %arrayidx109, align 4, !dbg !3215
  store float 0x41E0000000000000, float* %qmin, align 4, !dbg !3216
  store float 0.000000e+00, float* %qmax, align 4, !dbg !3217
  store i32 0, i32* %w2, align 4, !dbg !3218
  br label %for.cond110, !dbg !3220

for.cond110:                                      ; preds = %for.inc177, %for.body102
  %112 = load i32, i32* %w2, align 4, !dbg !3221
  %113 = load i32, i32* %w, align 4, !dbg !3224
  %idxprom111 = sext i32 %113 to i64, !dbg !3225
  %114 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3225
  %ics112 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %114, i32 0, i32 0, !dbg !3226
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics112, i32 0, i32 4, !dbg !3227
  %arrayidx113 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom111, !dbg !3225
  %115 = load i8, i8* %arrayidx113, align 1, !dbg !3225
  %conv114 = zext i8 %115 to i32, !dbg !3225
  %cmp115 = icmp slt i32 %112, %conv114, !dbg !3228
  br i1 %cmp115, label %for.body117, label %for.end179, !dbg !3229

for.body117:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band, metadata !3230, metadata !2772), !dbg !3233
  %116 = load i32, i32* %w, align 4, !dbg !3234
  %117 = load i32, i32* %w2, align 4, !dbg !3235
  %add118 = add nsw i32 %116, %117, !dbg !3236
  %mul119 = mul nsw i32 %add118, 16, !dbg !3237
  %118 = load i32, i32* %g, align 4, !dbg !3238
  %add120 = add nsw i32 %mul119, %118, !dbg !3239
  %idxprom121 = sext i32 %add120 to i64, !dbg !3240
  %119 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3241
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %119, i32 0, i32 20, !dbg !3242
  %120 = load i32, i32* %cur_channel, align 32, !dbg !3242
  %idxprom122 = sext i32 %120 to i64, !dbg !3240
  %121 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3240
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %121, i32 0, i32 17, !dbg !3243
  %ch = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !3244
  %122 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch, align 16, !dbg !3244
  %arrayidx123 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %122, i64 %idxprom122, !dbg !3240
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx123, i32 0, i32 0, !dbg !3245
  %arrayidx124 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom121, !dbg !3240
  store %struct.FFPsyBand* %arrayidx124, %struct.FFPsyBand** %band, align 8, !dbg !3233
  %123 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !3246
  %energy = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %123, i32 0, i32 1, !dbg !3248
  %124 = load float, float* %energy, align 4, !dbg !3248
  %125 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !3249
  %threshold = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %125, i32 0, i32 2, !dbg !3250
  %126 = load float, float* %threshold, align 4, !dbg !3250
  %cmp125 = fcmp ole float %124, %126, !dbg !3251
  br i1 %cmp125, label %if.then130, label %lor.lhs.false, !dbg !3252

lor.lhs.false:                                    ; preds = %for.body117
  %127 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !3253
  %threshold127 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %127, i32 0, i32 2, !dbg !3255
  %128 = load float, float* %threshold127, align 4, !dbg !3255
  %cmp128 = fcmp oeq float %128, 0.000000e+00, !dbg !3256
  br i1 %cmp128, label %if.then130, label %if.end137, !dbg !3257

if.then130:                                       ; preds = %lor.lhs.false, %for.body117
  %129 = load i32, i32* %w, align 4, !dbg !3258
  %130 = load i32, i32* %w2, align 4, !dbg !3260
  %add131 = add nsw i32 %129, %130, !dbg !3261
  %mul132 = mul nsw i32 %add131, 16, !dbg !3262
  %131 = load i32, i32* %g, align 4, !dbg !3263
  %add133 = add nsw i32 %mul132, %131, !dbg !3264
  %idxprom134 = sext i32 %add133 to i64, !dbg !3265
  %132 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3265
  %zeroes135 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %132, i32 0, i32 8, !dbg !3266
  %arrayidx136 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes135, i64 0, i64 %idxprom134, !dbg !3265
  store i8 1, i8* %arrayidx136, align 1, !dbg !3267
  br label %for.inc177, !dbg !3268

if.end137:                                        ; preds = %lor.lhs.false
  %133 = load i32, i32* %w, align 4, !dbg !3269
  %134 = load i32, i32* %w2, align 4, !dbg !3270
  %add138 = add nsw i32 %133, %134, !dbg !3271
  %mul139 = mul nsw i32 %add138, 16, !dbg !3272
  %135 = load i32, i32* %g, align 4, !dbg !3273
  %add140 = add nsw i32 %mul139, %135, !dbg !3274
  %idxprom141 = sext i32 %add140 to i64, !dbg !3275
  %136 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3275
  %zeroes142 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %136, i32 0, i32 8, !dbg !3276
  %arrayidx143 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes142, i64 0, i64 %idxprom141, !dbg !3275
  store i8 0, i8* %arrayidx143, align 1, !dbg !3277
  store i32 1, i32* %nz, align 4, !dbg !3278
  store i32 0, i32* %i, align 4, !dbg !3279
  br label %for.cond144, !dbg !3281

for.cond144:                                      ; preds = %for.inc174, %if.end137
  %137 = load i32, i32* %i, align 4, !dbg !3282
  %138 = load i32, i32* %g, align 4, !dbg !3285
  %idxprom145 = sext i32 %138 to i64, !dbg !3286
  %139 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3286
  %ics146 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %139, i32 0, i32 0, !dbg !3287
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics146, i32 0, i32 7, !dbg !3288
  %140 = load i8*, i8** %swb_sizes, align 8, !dbg !3288
  %arrayidx147 = getelementptr inbounds i8, i8* %140, i64 %idxprom145, !dbg !3286
  %141 = load i8, i8* %arrayidx147, align 1, !dbg !3286
  %conv148 = zext i8 %141 to i32, !dbg !3286
  %cmp149 = icmp slt i32 %137, %conv148, !dbg !3289
  br i1 %cmp149, label %for.body151, label %for.end176, !dbg !3290

for.body151:                                      ; preds = %for.cond144
  call void @llvm.dbg.declare(metadata float* %t152, metadata !3291, metadata !2772), !dbg !3293
  %142 = load i32, i32* %w2, align 4, !dbg !3294
  %mul153 = mul nsw i32 %142, 128, !dbg !3295
  %143 = load i32, i32* %i, align 4, !dbg !3296
  %add154 = add nsw i32 %mul153, %143, !dbg !3297
  %idxprom155 = sext i32 %add154 to i64, !dbg !3298
  %144 = load float*, float** %coefs, align 8, !dbg !3298
  %arrayidx156 = getelementptr inbounds float, float* %144, i64 %idxprom155, !dbg !3298
  %145 = load float, float* %arrayidx156, align 4, !dbg !3298
  %call157 = call float @fabsf(float %145) #3, !dbg !3299
  store float %call157, float* %t152, align 4, !dbg !3293
  %146 = load float, float* %t152, align 4, !dbg !3300
  %cmp158 = fcmp ogt float %146, 0.000000e+00, !dbg !3302
  br i1 %cmp158, label %if.then160, label %if.end167, !dbg !3303

if.then160:                                       ; preds = %for.body151
  %147 = load float, float* %qmin, align 4, !dbg !3304
  %148 = load float, float* %t152, align 4, !dbg !3305
  %cmp161 = fcmp ogt float %147, %148, !dbg !3306
  br i1 %cmp161, label %cond.true163, label %cond.false164, !dbg !3307

cond.true163:                                     ; preds = %if.then160
  %149 = load float, float* %t152, align 4, !dbg !3308
  br label %cond.end165, !dbg !3310

cond.false164:                                    ; preds = %if.then160
  %150 = load float, float* %qmin, align 4, !dbg !3311
  br label %cond.end165, !dbg !3313

cond.end165:                                      ; preds = %cond.false164, %cond.true163
  %cond166 = phi float [ %149, %cond.true163 ], [ %150, %cond.false164 ], !dbg !3314
  store float %cond166, float* %qmin, align 4, !dbg !3316
  br label %if.end167, !dbg !3317

if.end167:                                        ; preds = %cond.end165, %for.body151
  %151 = load float, float* %qmax, align 4, !dbg !3318
  %152 = load float, float* %t152, align 4, !dbg !3319
  %cmp168 = fcmp ogt float %151, %152, !dbg !3320
  br i1 %cmp168, label %cond.true170, label %cond.false171, !dbg !3321

cond.true170:                                     ; preds = %if.end167
  %153 = load float, float* %qmax, align 4, !dbg !3322
  br label %cond.end172, !dbg !3324

cond.false171:                                    ; preds = %if.end167
  %154 = load float, float* %t152, align 4, !dbg !3325
  br label %cond.end172, !dbg !3327

cond.end172:                                      ; preds = %cond.false171, %cond.true170
  %cond173 = phi float [ %153, %cond.true170 ], [ %154, %cond.false171 ], !dbg !3328
  store float %cond173, float* %qmax, align 4, !dbg !3330
  br label %for.inc174, !dbg !3331

for.inc174:                                       ; preds = %cond.end172
  %155 = load i32, i32* %i, align 4, !dbg !3332
  %inc175 = add nsw i32 %155, 1, !dbg !3332
  store i32 %inc175, i32* %i, align 4, !dbg !3332
  br label %for.cond144, !dbg !3334, !llvm.loop !3335

for.end176:                                       ; preds = %for.cond144
  br label %for.inc177, !dbg !3337

for.inc177:                                       ; preds = %for.end176, %if.then130
  %156 = load i32, i32* %w2, align 4, !dbg !3338
  %inc178 = add nsw i32 %156, 1, !dbg !3338
  store i32 %inc178, i32* %w2, align 4, !dbg !3338
  br label %for.cond110, !dbg !3340, !llvm.loop !3341

for.end179:                                       ; preds = %for.cond110
  %157 = load i32, i32* %nz, align 4, !dbg !3343
  %tobool180 = icmp ne i32 %157, 0, !dbg !3343
  br i1 %tobool180, label %if.then181, label %if.else316, !dbg !3344

if.then181:                                       ; preds = %for.end179
  call void @llvm.dbg.declare(metadata i32* %minscale, metadata !3345, metadata !2772), !dbg !3346
  call void @llvm.dbg.declare(metadata i32* %maxscale, metadata !3347, metadata !2772), !dbg !3348
  call void @llvm.dbg.declare(metadata float* %minrd, metadata !3349, metadata !2772), !dbg !3350
  store float 0x7FF0000000000000, float* %minrd, align 4, !dbg !3350
  call void @llvm.dbg.declare(metadata float* %maxval, metadata !3351, metadata !2772), !dbg !3352
  %158 = load float, float* %qmin, align 4, !dbg !3353
  %call182 = call zeroext i8 @coef2minsf(float %158), !dbg !3354
  %conv183 = zext i8 %call182 to i32, !dbg !3354
  store i32 %conv183, i32* %minscale, align 4, !dbg !3355
  %159 = load float, float* %qmax, align 4, !dbg !3356
  %call184 = call zeroext i8 @coef2maxsf(float %159), !dbg !3357
  %conv185 = zext i8 %call184 to i32, !dbg !3357
  store i32 %conv185, i32* %maxscale, align 4, !dbg !3358
  %160 = load i32, i32* %minscale, align 4, !dbg !3359
  %161 = load i32, i32* %q0, align 4, !dbg !3360
  %sub186 = sub nsw i32 %160, %161, !dbg !3361
  store i32 %sub186, i32* %a.addr.i523, align 4, !dbg !3362
  store i32 0, i32* %amin.addr.i524, align 4, !dbg !3362
  store i32 60, i32* %amax.addr.i525, align 4, !dbg !3362
  %162 = load i32, i32* %a.addr.i523, align 4, !dbg !3363
  %163 = load i32, i32* %amin.addr.i524, align 4, !dbg !3364
  %cmp.i526 = icmp slt i32 %162, %163, !dbg !3365
  br i1 %cmp.i526, label %if.then.i527, label %if.else.i529, !dbg !3366

if.then.i527:                                     ; preds = %if.then181
  %164 = load i32, i32* %amin.addr.i524, align 4, !dbg !3367
  store i32 %164, i32* %retval.i522, align 4, !dbg !3368
  br label %av_clip_c.exit532, !dbg !3368

if.else.i529:                                     ; preds = %if.then181
  %165 = load i32, i32* %a.addr.i523, align 4, !dbg !3369
  %166 = load i32, i32* %amax.addr.i525, align 4, !dbg !3370
  %cmp1.i528 = icmp sgt i32 %165, %166, !dbg !3371
  br i1 %cmp1.i528, label %if.then2.i530, label %if.else3.i531, !dbg !3372

if.then2.i530:                                    ; preds = %if.else.i529
  %167 = load i32, i32* %amax.addr.i525, align 4, !dbg !3373
  store i32 %167, i32* %retval.i522, align 4, !dbg !3374
  br label %av_clip_c.exit532, !dbg !3374

if.else3.i531:                                    ; preds = %if.else.i529
  %168 = load i32, i32* %a.addr.i523, align 4, !dbg !3375
  store i32 %168, i32* %retval.i522, align 4, !dbg !3376
  br label %av_clip_c.exit532, !dbg !3376

av_clip_c.exit532:                                ; preds = %if.then.i527, %if.then2.i530, %if.else3.i531
  %169 = load i32, i32* %retval.i522, align 4, !dbg !3377
  store i32 %169, i32* %minscale, align 4, !dbg !3378
  %170 = load i32, i32* %maxscale, align 4, !dbg !3379
  %171 = load i32, i32* %q0, align 4, !dbg !3380
  %sub188 = sub nsw i32 %170, %171, !dbg !3381
  store i32 %sub188, i32* %a.addr.i512, align 4, !dbg !3382
  store i32 0, i32* %amin.addr.i513, align 4, !dbg !3382
  store i32 61, i32* %amax.addr.i514, align 4, !dbg !3382
  %172 = load i32, i32* %a.addr.i512, align 4, !dbg !3383
  %173 = load i32, i32* %amin.addr.i513, align 4, !dbg !3384
  %cmp.i515 = icmp slt i32 %172, %173, !dbg !3385
  br i1 %cmp.i515, label %if.then.i516, label %if.else.i518, !dbg !3386

if.then.i516:                                     ; preds = %av_clip_c.exit532
  %174 = load i32, i32* %amin.addr.i513, align 4, !dbg !3387
  store i32 %174, i32* %retval.i511, align 4, !dbg !3388
  br label %av_clip_c.exit521, !dbg !3388

if.else.i518:                                     ; preds = %av_clip_c.exit532
  %175 = load i32, i32* %a.addr.i512, align 4, !dbg !3389
  %176 = load i32, i32* %amax.addr.i514, align 4, !dbg !3390
  %cmp1.i517 = icmp sgt i32 %175, %176, !dbg !3391
  br i1 %cmp1.i517, label %if.then2.i519, label %if.else3.i520, !dbg !3392

if.then2.i519:                                    ; preds = %if.else.i518
  %177 = load i32, i32* %amax.addr.i514, align 4, !dbg !3393
  store i32 %177, i32* %retval.i511, align 4, !dbg !3394
  br label %av_clip_c.exit521, !dbg !3394

if.else3.i520:                                    ; preds = %if.else.i518
  %178 = load i32, i32* %a.addr.i512, align 4, !dbg !3395
  store i32 %178, i32* %retval.i511, align 4, !dbg !3396
  br label %av_clip_c.exit521, !dbg !3396

av_clip_c.exit521:                                ; preds = %if.then.i516, %if.then2.i519, %if.else3.i520
  %179 = load i32, i32* %retval.i511, align 4, !dbg !3397
  store i32 %179, i32* %maxscale, align 4, !dbg !3398
  %180 = load i32, i32* %minscale, align 4, !dbg !3399
  %181 = load i32, i32* %maxscale, align 4, !dbg !3400
  %cmp190 = icmp eq i32 %180, %181, !dbg !3401
  br i1 %cmp190, label %if.then192, label %if.end197, !dbg !3402

if.then192:                                       ; preds = %av_clip_c.exit521
  %182 = load i32, i32* %minscale, align 4, !dbg !3403
  %add193 = add nsw i32 %182, 1, !dbg !3404
  store i32 %add193, i32* %a.addr.i501, align 4, !dbg !3405
  store i32 1, i32* %amin.addr.i502, align 4, !dbg !3405
  store i32 61, i32* %amax.addr.i503, align 4, !dbg !3405
  %183 = load i32, i32* %a.addr.i501, align 4, !dbg !3406
  %184 = load i32, i32* %amin.addr.i502, align 4, !dbg !3407
  %cmp.i504 = icmp slt i32 %183, %184, !dbg !3408
  br i1 %cmp.i504, label %if.then.i505, label %if.else.i507, !dbg !3409

if.then.i505:                                     ; preds = %if.then192
  %185 = load i32, i32* %amin.addr.i502, align 4, !dbg !3410
  store i32 %185, i32* %retval.i500, align 4, !dbg !3411
  br label %av_clip_c.exit510, !dbg !3411

if.else.i507:                                     ; preds = %if.then192
  %186 = load i32, i32* %a.addr.i501, align 4, !dbg !3412
  %187 = load i32, i32* %amax.addr.i503, align 4, !dbg !3413
  %cmp1.i506 = icmp sgt i32 %186, %187, !dbg !3414
  br i1 %cmp1.i506, label %if.then2.i508, label %if.else3.i509, !dbg !3415

if.then2.i508:                                    ; preds = %if.else.i507
  %188 = load i32, i32* %amax.addr.i503, align 4, !dbg !3416
  store i32 %188, i32* %retval.i500, align 4, !dbg !3417
  br label %av_clip_c.exit510, !dbg !3417

if.else3.i509:                                    ; preds = %if.else.i507
  %189 = load i32, i32* %a.addr.i501, align 4, !dbg !3418
  store i32 %189, i32* %retval.i500, align 4, !dbg !3419
  br label %av_clip_c.exit510, !dbg !3419

av_clip_c.exit510:                                ; preds = %if.then.i505, %if.then2.i508, %if.else3.i509
  %190 = load i32, i32* %retval.i500, align 4, !dbg !3420
  store i32 %190, i32* %maxscale, align 4, !dbg !3421
  %191 = load i32, i32* %maxscale, align 4, !dbg !3422
  %sub195 = sub nsw i32 %191, 1, !dbg !3423
  store i32 %sub195, i32* %a.addr.i490, align 4, !dbg !3424
  store i32 0, i32* %amin.addr.i491, align 4, !dbg !3424
  store i32 60, i32* %amax.addr.i492, align 4, !dbg !3424
  %192 = load i32, i32* %a.addr.i490, align 4, !dbg !3425
  %193 = load i32, i32* %amin.addr.i491, align 4, !dbg !3426
  %cmp.i493 = icmp slt i32 %192, %193, !dbg !3427
  br i1 %cmp.i493, label %if.then.i494, label %if.else.i496, !dbg !3428

if.then.i494:                                     ; preds = %av_clip_c.exit510
  %194 = load i32, i32* %amin.addr.i491, align 4, !dbg !3429
  store i32 %194, i32* %retval.i489, align 4, !dbg !3430
  br label %av_clip_c.exit499, !dbg !3430

if.else.i496:                                     ; preds = %av_clip_c.exit510
  %195 = load i32, i32* %a.addr.i490, align 4, !dbg !3431
  %196 = load i32, i32* %amax.addr.i492, align 4, !dbg !3432
  %cmp1.i495 = icmp sgt i32 %195, %196, !dbg !3433
  br i1 %cmp1.i495, label %if.then2.i497, label %if.else3.i498, !dbg !3434

if.then2.i497:                                    ; preds = %if.else.i496
  %197 = load i32, i32* %amax.addr.i492, align 4, !dbg !3435
  store i32 %197, i32* %retval.i489, align 4, !dbg !3436
  br label %av_clip_c.exit499, !dbg !3436

if.else3.i498:                                    ; preds = %if.else.i496
  %198 = load i32, i32* %a.addr.i490, align 4, !dbg !3437
  store i32 %198, i32* %retval.i489, align 4, !dbg !3438
  br label %av_clip_c.exit499, !dbg !3438

av_clip_c.exit499:                                ; preds = %if.then.i494, %if.then2.i497, %if.else3.i498
  %199 = load i32, i32* %retval.i489, align 4, !dbg !3439
  store i32 %199, i32* %minscale, align 4, !dbg !3440
  br label %if.end197, !dbg !3441

if.end197:                                        ; preds = %av_clip_c.exit499, %av_clip_c.exit521
  %200 = load i32, i32* %w, align 4, !dbg !3442
  %idxprom198 = sext i32 %200 to i64, !dbg !3443
  %201 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3443
  %ics199 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %201, i32 0, i32 0, !dbg !3444
  %group_len200 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics199, i32 0, i32 4, !dbg !3445
  %arrayidx201 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len200, i64 0, i64 %idxprom198, !dbg !3443
  %202 = load i8, i8* %arrayidx201, align 1, !dbg !3443
  %conv202 = zext i8 %202 to i32, !dbg !3443
  %203 = load i32, i32* %g, align 4, !dbg !3446
  %idxprom203 = sext i32 %203 to i64, !dbg !3447
  %204 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3447
  %ics204 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %204, i32 0, i32 0, !dbg !3448
  %swb_sizes205 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics204, i32 0, i32 7, !dbg !3449
  %205 = load i8*, i8** %swb_sizes205, align 8, !dbg !3449
  %arrayidx206 = getelementptr inbounds i8, i8* %205, i64 %idxprom203, !dbg !3447
  %206 = load i8, i8* %arrayidx206, align 1, !dbg !3447
  %conv207 = zext i8 %206 to i32, !dbg !3447
  %207 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3450
  %scoefs208 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %207, i32 0, i32 29, !dbg !3451
  %arraydecay209 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs208, i32 0, i32 0, !dbg !3450
  %208 = load i32, i32* %start, align 4, !dbg !3452
  %idx.ext = sext i32 %208 to i64, !dbg !3453
  %add.ptr = getelementptr inbounds float, float* %arraydecay209, i64 %idx.ext, !dbg !3453
  %call210 = call float @find_max_val(i32 %conv202, i32 %conv207, float* %add.ptr), !dbg !3454
  store float %call210, float* %maxval, align 4, !dbg !3455
  %209 = load i32, i32* %minscale, align 4, !dbg !3456
  store i32 %209, i32* %q, align 4, !dbg !3458
  br label %for.cond211, !dbg !3459

for.cond211:                                      ; preds = %for.inc313, %if.end197
  %210 = load i32, i32* %q, align 4, !dbg !3460
  %211 = load i32, i32* %maxscale, align 4, !dbg !3463
  %cmp212 = icmp slt i32 %210, %211, !dbg !3464
  br i1 %cmp212, label %for.body214, label %for.end315, !dbg !3465

for.body214:                                      ; preds = %for.cond211
  call void @llvm.dbg.declare(metadata float* %dist, metadata !3466, metadata !2772), !dbg !3468
  store float 0.000000e+00, float* %dist, align 4, !dbg !3468
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !3469, metadata !2772), !dbg !3470
  %212 = load float, float* %maxval, align 4, !dbg !3471
  %213 = load i32, i32* %w, align 4, !dbg !3472
  %mul215 = mul nsw i32 %213, 16, !dbg !3473
  %214 = load i32, i32* %g, align 4, !dbg !3474
  %add216 = add nsw i32 %mul215, %214, !dbg !3475
  %idxprom217 = sext i32 %add216 to i64, !dbg !3476
  %215 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3476
  %sf_idx218 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %215, i32 0, i32 7, !dbg !3477
  %arrayidx219 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx218, i64 0, i64 %idxprom217, !dbg !3476
  %216 = load i32, i32* %arrayidx219, align 4, !dbg !3476
  %call220 = call i32 @find_min_book(float %212, i32 %216), !dbg !3478
  store i32 %call220, i32* %cb, align 4, !dbg !3470
  store i32 0, i32* %w2, align 4, !dbg !3479
  br label %for.cond221, !dbg !3481

for.cond221:                                      ; preds = %for.inc262, %for.body214
  %217 = load i32, i32* %w2, align 4, !dbg !3482
  %218 = load i32, i32* %w, align 4, !dbg !3485
  %idxprom222 = sext i32 %218 to i64, !dbg !3486
  %219 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3486
  %ics223 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %219, i32 0, i32 0, !dbg !3487
  %group_len224 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics223, i32 0, i32 4, !dbg !3488
  %arrayidx225 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len224, i64 0, i64 %idxprom222, !dbg !3486
  %220 = load i8, i8* %arrayidx225, align 1, !dbg !3486
  %conv226 = zext i8 %220 to i32, !dbg !3486
  %cmp227 = icmp slt i32 %217, %conv226, !dbg !3489
  br i1 %cmp227, label %for.body229, label %for.end264, !dbg !3490

for.body229:                                      ; preds = %for.cond221
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band230, metadata !3491, metadata !2772), !dbg !3493
  %221 = load i32, i32* %w, align 4, !dbg !3494
  %222 = load i32, i32* %w2, align 4, !dbg !3495
  %add231 = add nsw i32 %221, %222, !dbg !3496
  %mul232 = mul nsw i32 %add231, 16, !dbg !3497
  %223 = load i32, i32* %g, align 4, !dbg !3498
  %add233 = add nsw i32 %mul232, %223, !dbg !3499
  %idxprom234 = sext i32 %add233 to i64, !dbg !3500
  %224 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3501
  %cur_channel235 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %224, i32 0, i32 20, !dbg !3502
  %225 = load i32, i32* %cur_channel235, align 32, !dbg !3502
  %idxprom236 = sext i32 %225 to i64, !dbg !3500
  %226 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3500
  %psy237 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %226, i32 0, i32 17, !dbg !3503
  %ch238 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy237, i32 0, i32 2, !dbg !3504
  %227 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch238, align 16, !dbg !3504
  %arrayidx239 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %227, i64 %idxprom236, !dbg !3500
  %psy_bands240 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx239, i32 0, i32 0, !dbg !3505
  %arrayidx241 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands240, i64 0, i64 %idxprom234, !dbg !3500
  store %struct.FFPsyBand* %arrayidx241, %struct.FFPsyBand** %band230, align 8, !dbg !3493
  %228 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3506
  %229 = load float*, float** %coefs, align 8, !dbg !3507
  %230 = load i32, i32* %w2, align 4, !dbg !3508
  %mul242 = mul nsw i32 %230, 128, !dbg !3509
  %idx.ext243 = sext i32 %mul242 to i64, !dbg !3510
  %add.ptr244 = getelementptr inbounds float, float* %229, i64 %idx.ext243, !dbg !3510
  %231 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3511
  %scoefs245 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %231, i32 0, i32 29, !dbg !3512
  %arraydecay246 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs245, i32 0, i32 0, !dbg !3511
  %232 = load i32, i32* %start, align 4, !dbg !3513
  %idx.ext247 = sext i32 %232 to i64, !dbg !3514
  %add.ptr248 = getelementptr inbounds float, float* %arraydecay246, i64 %idx.ext247, !dbg !3514
  %233 = load i32, i32* %w2, align 4, !dbg !3515
  %mul249 = mul nsw i32 %233, 128, !dbg !3516
  %idx.ext250 = sext i32 %mul249 to i64, !dbg !3517
  %add.ptr251 = getelementptr inbounds float, float* %add.ptr248, i64 %idx.ext250, !dbg !3517
  %234 = load i32, i32* %g, align 4, !dbg !3518
  %idxprom252 = sext i32 %234 to i64, !dbg !3519
  %235 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3519
  %ics253 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %235, i32 0, i32 0, !dbg !3520
  %swb_sizes254 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics253, i32 0, i32 7, !dbg !3521
  %236 = load i8*, i8** %swb_sizes254, align 8, !dbg !3521
  %arrayidx255 = getelementptr inbounds i8, i8* %236, i64 %idxprom252, !dbg !3519
  %237 = load i8, i8* %arrayidx255, align 1, !dbg !3519
  %conv256 = zext i8 %237 to i32, !dbg !3519
  %238 = load i32, i32* %q, align 4, !dbg !3522
  %239 = load i32, i32* %q0, align 4, !dbg !3523
  %add257 = add nsw i32 %238, %239, !dbg !3524
  %240 = load i32, i32* %cb, align 4, !dbg !3525
  %241 = load float, float* %lambda.addr, align 4, !dbg !3526
  %242 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band230, align 8, !dbg !3527
  %threshold258 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %242, i32 0, i32 2, !dbg !3528
  %243 = load float, float* %threshold258, align 4, !dbg !3528
  %div259 = fdiv float %241, %243, !dbg !3529
  %call260 = call float @quantize_band_cost(%struct.AACEncContext* %228, float* %add.ptr244, float* %add.ptr251, i32 %conv256, i32 %add257, i32 %240, float %div259, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !3530
  %244 = load float, float* %dist, align 4, !dbg !3531
  %add261 = fadd float %244, %call260, !dbg !3531
  store float %add261, float* %dist, align 4, !dbg !3531
  br label %for.inc262, !dbg !3532

for.inc262:                                       ; preds = %for.body229
  %245 = load i32, i32* %w2, align 4, !dbg !3533
  %inc263 = add nsw i32 %245, 1, !dbg !3533
  store i32 %inc263, i32* %w2, align 4, !dbg !3533
  br label %for.cond221, !dbg !3535, !llvm.loop !3536

for.end264:                                       ; preds = %for.cond221
  %246 = load float, float* %minrd, align 4, !dbg !3538
  %247 = load float, float* %dist, align 4, !dbg !3539
  %cmp265 = fcmp ogt float %246, %247, !dbg !3540
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !3541

cond.true267:                                     ; preds = %for.end264
  %248 = load float, float* %dist, align 4, !dbg !3542
  br label %cond.end269, !dbg !3544

cond.false268:                                    ; preds = %for.end264
  %249 = load float, float* %minrd, align 4, !dbg !3545
  br label %cond.end269, !dbg !3547

cond.end269:                                      ; preds = %cond.false268, %cond.true267
  %cond270 = phi float [ %248, %cond.true267 ], [ %249, %cond.false268 ], !dbg !3548
  store float %cond270, float* %minrd, align 4, !dbg !3550
  store i32 0, i32* %i, align 4, !dbg !3551
  br label %for.cond271, !dbg !3553

for.cond271:                                      ; preds = %for.inc310, %cond.end269
  %250 = load i32, i32* %i, align 4, !dbg !3554
  %251 = load i32, i32* %q1, align 4, !dbg !3557
  %252 = load i32, i32* %q0, align 4, !dbg !3558
  %sub272 = sub nsw i32 %251, %252, !dbg !3559
  %cmp273 = icmp slt i32 %250, %sub272, !dbg !3560
  br i1 %cmp273, label %for.body275, label %for.end312, !dbg !3561

for.body275:                                      ; preds = %for.cond271
  call void @llvm.dbg.declare(metadata float* %cost276, metadata !3562, metadata !2772), !dbg !3564
  %253 = load i32, i32* %i, align 4, !dbg !3565
  %idxprom277 = sext i32 %253 to i64, !dbg !3566
  %254 = load i32, i32* %idx, align 4, !dbg !3567
  %sub278 = sub nsw i32 %254, 1, !dbg !3568
  %idxprom279 = sext i32 %sub278 to i64, !dbg !3566
  %arrayidx280 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom279, !dbg !3566
  %arrayidx281 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx280, i64 0, i64 %idxprom277, !dbg !3566
  %cost282 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx281, i32 0, i32 0, !dbg !3569
  %255 = load float, float* %cost282, align 8, !dbg !3569
  %256 = load float, float* %dist, align 4, !dbg !3570
  %add283 = fadd float %255, %256, !dbg !3571
  %257 = load i32, i32* %q, align 4, !dbg !3572
  %258 = load i32, i32* %i, align 4, !dbg !3573
  %sub284 = sub nsw i32 %257, %258, !dbg !3574
  %add285 = add nsw i32 %sub284, 60, !dbg !3575
  %idxprom286 = sext i32 %add285 to i64, !dbg !3576
  %arrayidx287 = getelementptr inbounds [121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i64 0, i64 %idxprom286, !dbg !3576
  %259 = load i8, i8* %arrayidx287, align 1, !dbg !3576
  %conv288 = zext i8 %259 to i32, !dbg !3576
  %conv289 = sitofp i32 %conv288 to float, !dbg !3576
  %add290 = fadd float %add283, %conv289, !dbg !3577
  store float %add290, float* %cost276, align 4, !dbg !3578
  %260 = load float, float* %cost276, align 4, !dbg !3579
  %261 = load i32, i32* %q, align 4, !dbg !3581
  %idxprom291 = sext i32 %261 to i64, !dbg !3582
  %262 = load i32, i32* %idx, align 4, !dbg !3583
  %idxprom292 = sext i32 %262 to i64, !dbg !3582
  %arrayidx293 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom292, !dbg !3582
  %arrayidx294 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx293, i64 0, i64 %idxprom291, !dbg !3582
  %cost295 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx294, i32 0, i32 0, !dbg !3584
  %263 = load float, float* %cost295, align 8, !dbg !3584
  %cmp296 = fcmp olt float %260, %263, !dbg !3585
  br i1 %cmp296, label %if.then298, label %if.end309, !dbg !3586

if.then298:                                       ; preds = %for.body275
  %264 = load float, float* %cost276, align 4, !dbg !3587
  %265 = load i32, i32* %q, align 4, !dbg !3589
  %idxprom299 = sext i32 %265 to i64, !dbg !3590
  %266 = load i32, i32* %idx, align 4, !dbg !3591
  %idxprom300 = sext i32 %266 to i64, !dbg !3590
  %arrayidx301 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom300, !dbg !3590
  %arrayidx302 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx301, i64 0, i64 %idxprom299, !dbg !3590
  %cost303 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx302, i32 0, i32 0, !dbg !3592
  store float %264, float* %cost303, align 8, !dbg !3593
  %267 = load i32, i32* %i, align 4, !dbg !3594
  %268 = load i32, i32* %q, align 4, !dbg !3595
  %idxprom304 = sext i32 %268 to i64, !dbg !3596
  %269 = load i32, i32* %idx, align 4, !dbg !3597
  %idxprom305 = sext i32 %269 to i64, !dbg !3596
  %arrayidx306 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom305, !dbg !3596
  %arrayidx307 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx306, i64 0, i64 %idxprom304, !dbg !3596
  %prev308 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx307, i32 0, i32 1, !dbg !3598
  store i32 %267, i32* %prev308, align 4, !dbg !3599
  br label %if.end309, !dbg !3600

if.end309:                                        ; preds = %if.then298, %for.body275
  br label %for.inc310, !dbg !3601

for.inc310:                                       ; preds = %if.end309
  %270 = load i32, i32* %i, align 4, !dbg !3602
  %inc311 = add nsw i32 %270, 1, !dbg !3602
  store i32 %inc311, i32* %i, align 4, !dbg !3602
  br label %for.cond271, !dbg !3604, !llvm.loop !3605

for.end312:                                       ; preds = %for.cond271
  br label %for.inc313, !dbg !3607

for.inc313:                                       ; preds = %for.end312
  %271 = load i32, i32* %q, align 4, !dbg !3608
  %inc314 = add nsw i32 %271, 1, !dbg !3608
  store i32 %inc314, i32* %q, align 4, !dbg !3608
  br label %for.cond211, !dbg !3610, !llvm.loop !3611

for.end315:                                       ; preds = %for.cond211
  br label %if.end342, !dbg !3613

if.else316:                                       ; preds = %for.end179
  store i32 0, i32* %q, align 4, !dbg !3614
  br label %for.cond317, !dbg !3617

for.cond317:                                      ; preds = %for.inc339, %if.else316
  %272 = load i32, i32* %q, align 4, !dbg !3618
  %273 = load i32, i32* %q1, align 4, !dbg !3621
  %274 = load i32, i32* %q0, align 4, !dbg !3622
  %sub318 = sub nsw i32 %273, %274, !dbg !3623
  %cmp319 = icmp slt i32 %272, %sub318, !dbg !3624
  br i1 %cmp319, label %for.body321, label %for.end341, !dbg !3625

for.body321:                                      ; preds = %for.cond317
  %275 = load i32, i32* %q, align 4, !dbg !3626
  %idxprom322 = sext i32 %275 to i64, !dbg !3628
  %276 = load i32, i32* %idx, align 4, !dbg !3629
  %sub323 = sub nsw i32 %276, 1, !dbg !3630
  %idxprom324 = sext i32 %sub323 to i64, !dbg !3628
  %arrayidx325 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom324, !dbg !3628
  %arrayidx326 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx325, i64 0, i64 %idxprom322, !dbg !3628
  %cost327 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx326, i32 0, i32 0, !dbg !3631
  %277 = load float, float* %cost327, align 8, !dbg !3631
  %add328 = fadd float %277, 1.000000e+00, !dbg !3632
  %278 = load i32, i32* %q, align 4, !dbg !3633
  %idxprom329 = sext i32 %278 to i64, !dbg !3634
  %279 = load i32, i32* %idx, align 4, !dbg !3635
  %idxprom330 = sext i32 %279 to i64, !dbg !3634
  %arrayidx331 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom330, !dbg !3634
  %arrayidx332 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx331, i64 0, i64 %idxprom329, !dbg !3634
  %cost333 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx332, i32 0, i32 0, !dbg !3636
  store float %add328, float* %cost333, align 8, !dbg !3637
  %280 = load i32, i32* %q, align 4, !dbg !3638
  %281 = load i32, i32* %q, align 4, !dbg !3639
  %idxprom334 = sext i32 %281 to i64, !dbg !3640
  %282 = load i32, i32* %idx, align 4, !dbg !3641
  %idxprom335 = sext i32 %282 to i64, !dbg !3640
  %arrayidx336 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom335, !dbg !3640
  %arrayidx337 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx336, i64 0, i64 %idxprom334, !dbg !3640
  %prev338 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx337, i32 0, i32 1, !dbg !3642
  store i32 %280, i32* %prev338, align 4, !dbg !3643
  br label %for.inc339, !dbg !3644

for.inc339:                                       ; preds = %for.body321
  %283 = load i32, i32* %q, align 4, !dbg !3645
  %inc340 = add nsw i32 %283, 1, !dbg !3645
  store i32 %inc340, i32* %q, align 4, !dbg !3645
  br label %for.cond317, !dbg !3647, !llvm.loop !3648

for.end341:                                       ; preds = %for.cond317
  br label %if.end342

if.end342:                                        ; preds = %for.end341, %for.end315
  %284 = load i32, i32* %nz, align 4, !dbg !3650
  %tobool343 = icmp ne i32 %284, 0, !dbg !3651
  %lnot = xor i1 %tobool343, true, !dbg !3651
  %lnot.ext = zext i1 %lnot to i32, !dbg !3651
  %conv344 = trunc i32 %lnot.ext to i8, !dbg !3651
  %285 = load i32, i32* %w, align 4, !dbg !3652
  %mul345 = mul nsw i32 %285, 16, !dbg !3653
  %286 = load i32, i32* %g, align 4, !dbg !3654
  %add346 = add nsw i32 %mul345, %286, !dbg !3655
  %idxprom347 = sext i32 %add346 to i64, !dbg !3656
  %287 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3656
  %zeroes348 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %287, i32 0, i32 8, !dbg !3657
  %arrayidx349 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes348, i64 0, i64 %idxprom347, !dbg !3656
  store i8 %conv344, i8* %arrayidx349, align 1, !dbg !3658
  %288 = load i32, i32* %g, align 4, !dbg !3659
  %idxprom350 = sext i32 %288 to i64, !dbg !3660
  %289 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3660
  %ics351 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %289, i32 0, i32 0, !dbg !3661
  %swb_sizes352 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics351, i32 0, i32 7, !dbg !3662
  %290 = load i8*, i8** %swb_sizes352, align 8, !dbg !3662
  %arrayidx353 = getelementptr inbounds i8, i8* %290, i64 %idxprom350, !dbg !3660
  %291 = load i8, i8* %arrayidx353, align 1, !dbg !3660
  %conv354 = zext i8 %291 to i32, !dbg !3660
  %292 = load i32, i32* %start, align 4, !dbg !3663
  %add355 = add nsw i32 %292, %conv354, !dbg !3663
  store i32 %add355, i32* %start, align 4, !dbg !3663
  %293 = load i32, i32* %idx, align 4, !dbg !3664
  %inc356 = add nsw i32 %293, 1, !dbg !3664
  store i32 %inc356, i32* %idx, align 4, !dbg !3664
  br label %for.inc357, !dbg !3665

for.inc357:                                       ; preds = %if.end342
  %294 = load i32, i32* %g, align 4, !dbg !3666
  %inc358 = add nsw i32 %294, 1, !dbg !3666
  store i32 %inc358, i32* %g, align 4, !dbg !3666
  br label %for.cond98, !dbg !3668, !llvm.loop !3669

for.end359:                                       ; preds = %for.cond98
  br label %for.inc360, !dbg !3671

for.inc360:                                       ; preds = %for.end359
  %295 = load i32, i32* %w, align 4, !dbg !3672
  %idxprom361 = sext i32 %295 to i64, !dbg !3674
  %296 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3674
  %ics362 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %296, i32 0, i32 0, !dbg !3675
  %group_len363 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics362, i32 0, i32 4, !dbg !3676
  %arrayidx364 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len363, i64 0, i64 %idxprom361, !dbg !3674
  %297 = load i8, i8* %arrayidx364, align 1, !dbg !3674
  %conv365 = zext i8 %297 to i32, !dbg !3674
  %298 = load i32, i32* %w, align 4, !dbg !3677
  %add366 = add nsw i32 %298, %conv365, !dbg !3677
  store i32 %add366, i32* %w, align 4, !dbg !3677
  br label %for.cond93, !dbg !3678, !llvm.loop !3679

for.end367:                                       ; preds = %for.cond93
  %299 = load i32, i32* %idx, align 4, !dbg !3681
  %dec = add nsw i32 %299, -1, !dbg !3681
  store i32 %dec, i32* %idx, align 4, !dbg !3681
  %300 = load i32, i32* %idx, align 4, !dbg !3682
  %idxprom368 = sext i32 %300 to i64, !dbg !3683
  %arrayidx369 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom368, !dbg !3683
  %arrayidx370 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx369, i64 0, i64 0, !dbg !3683
  %cost371 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx370, i32 0, i32 0, !dbg !3684
  %301 = load float, float* %cost371, align 8, !dbg !3684
  store float %301, float* %mincost, align 4, !dbg !3685
  store i32 0, i32* %minq, align 4, !dbg !3686
  store i32 1, i32* %i, align 4, !dbg !3687
  br label %for.cond372, !dbg !3689

for.cond372:                                      ; preds = %for.inc390, %for.end367
  %302 = load i32, i32* %i, align 4, !dbg !3690
  %cmp373 = icmp slt i32 %302, 61, !dbg !3693
  br i1 %cmp373, label %for.body375, label %for.end392, !dbg !3694

for.body375:                                      ; preds = %for.cond372
  %303 = load i32, i32* %i, align 4, !dbg !3695
  %idxprom376 = sext i32 %303 to i64, !dbg !3698
  %304 = load i32, i32* %idx, align 4, !dbg !3699
  %idxprom377 = sext i32 %304 to i64, !dbg !3698
  %arrayidx378 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom377, !dbg !3698
  %arrayidx379 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx378, i64 0, i64 %idxprom376, !dbg !3698
  %cost380 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx379, i32 0, i32 0, !dbg !3700
  %305 = load float, float* %cost380, align 8, !dbg !3700
  %306 = load float, float* %mincost, align 4, !dbg !3701
  %cmp381 = fcmp olt float %305, %306, !dbg !3702
  br i1 %cmp381, label %if.then383, label %if.end389, !dbg !3703

if.then383:                                       ; preds = %for.body375
  %307 = load i32, i32* %i, align 4, !dbg !3704
  %idxprom384 = sext i32 %307 to i64, !dbg !3706
  %308 = load i32, i32* %idx, align 4, !dbg !3707
  %idxprom385 = sext i32 %308 to i64, !dbg !3706
  %arrayidx386 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom385, !dbg !3706
  %arrayidx387 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx386, i64 0, i64 %idxprom384, !dbg !3706
  %cost388 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx387, i32 0, i32 0, !dbg !3708
  %309 = load float, float* %cost388, align 8, !dbg !3708
  store float %309, float* %mincost, align 4, !dbg !3709
  %310 = load i32, i32* %i, align 4, !dbg !3710
  store i32 %310, i32* %minq, align 4, !dbg !3711
  br label %if.end389, !dbg !3712

if.end389:                                        ; preds = %if.then383, %for.body375
  br label %for.inc390, !dbg !3713

for.inc390:                                       ; preds = %if.end389
  %311 = load i32, i32* %i, align 4, !dbg !3714
  %inc391 = add nsw i32 %311, 1, !dbg !3714
  store i32 %inc391, i32* %i, align 4, !dbg !3714
  br label %for.cond372, !dbg !3716, !llvm.loop !3717

for.end392:                                       ; preds = %for.cond372
  br label %while.cond, !dbg !3719

while.cond:                                       ; preds = %cond.end414, %for.end392
  %312 = load i32, i32* %idx, align 4, !dbg !3720
  %tobool393 = icmp ne i32 %312, 0, !dbg !3721
  br i1 %tobool393, label %while.body, label %while.end, !dbg !3721

while.body:                                       ; preds = %while.cond
  %313 = load i32, i32* %minq, align 4, !dbg !3722
  %314 = load i32, i32* %q0, align 4, !dbg !3724
  %add394 = add nsw i32 %313, %314, !dbg !3725
  %315 = load i32, i32* %idx, align 4, !dbg !3726
  %idxprom395 = sext i32 %315 to i64, !dbg !3727
  %arrayidx396 = getelementptr inbounds [121 x i32], [121 x i32]* %bandaddr, i64 0, i64 %idxprom395, !dbg !3727
  %316 = load i32, i32* %arrayidx396, align 4, !dbg !3727
  %idxprom397 = sext i32 %316 to i64, !dbg !3728
  %317 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3728
  %sf_idx398 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %317, i32 0, i32 7, !dbg !3729
  %arrayidx399 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx398, i64 0, i64 %idxprom397, !dbg !3728
  store i32 %add394, i32* %arrayidx399, align 4, !dbg !3730
  %318 = load i32, i32* %minq, align 4, !dbg !3731
  %idxprom400 = sext i32 %318 to i64, !dbg !3732
  %319 = load i32, i32* %idx, align 4, !dbg !3733
  %idxprom401 = sext i32 %319 to i64, !dbg !3732
  %arrayidx402 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom401, !dbg !3732
  %arrayidx403 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx402, i64 0, i64 %idxprom400, !dbg !3732
  %prev404 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx403, i32 0, i32 1, !dbg !3734
  %320 = load i32, i32* %prev404, align 4, !dbg !3734
  %cmp405 = icmp sgt i32 %320, 0, !dbg !3735
  br i1 %cmp405, label %cond.true407, label %cond.false413, !dbg !3736

cond.true407:                                     ; preds = %while.body
  %321 = load i32, i32* %minq, align 4, !dbg !3737
  %idxprom408 = sext i32 %321 to i64, !dbg !3739
  %322 = load i32, i32* %idx, align 4, !dbg !3740
  %idxprom409 = sext i32 %322 to i64, !dbg !3739
  %arrayidx410 = getelementptr inbounds [121 x [61 x %struct.TrellisPath]], [121 x [61 x %struct.TrellisPath]]* %paths, i64 0, i64 %idxprom409, !dbg !3739
  %arrayidx411 = getelementptr inbounds [61 x %struct.TrellisPath], [61 x %struct.TrellisPath]* %arrayidx410, i64 0, i64 %idxprom408, !dbg !3739
  %prev412 = getelementptr inbounds %struct.TrellisPath, %struct.TrellisPath* %arrayidx411, i32 0, i32 1, !dbg !3741
  %323 = load i32, i32* %prev412, align 4, !dbg !3741
  br label %cond.end414, !dbg !3742

cond.false413:                                    ; preds = %while.body
  br label %cond.end414, !dbg !3743

cond.end414:                                      ; preds = %cond.false413, %cond.true407
  %cond415 = phi i32 [ %323, %cond.true407 ], [ 0, %cond.false413 ], !dbg !3745
  store i32 %cond415, i32* %minq, align 4, !dbg !3747
  %324 = load i32, i32* %idx, align 4, !dbg !3748
  %dec416 = add nsw i32 %324, -1, !dbg !3748
  store i32 %dec416, i32* %idx, align 4, !dbg !3748
  br label %while.cond, !dbg !3749, !llvm.loop !3751

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %w, align 4, !dbg !3752
  br label %for.cond417, !dbg !3754

for.cond417:                                      ; preds = %for.inc455, %while.end
  %325 = load i32, i32* %w, align 4, !dbg !3755
  %326 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3758
  %ics418 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %326, i32 0, i32 0, !dbg !3759
  %num_windows419 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics418, i32 0, i32 9, !dbg !3760
  %327 = load i32, i32* %num_windows419, align 4, !dbg !3760
  %cmp420 = icmp slt i32 %325, %327, !dbg !3761
  br i1 %cmp420, label %for.body422, label %for.end462, !dbg !3762

for.body422:                                      ; preds = %for.cond417
  store i32 0, i32* %g, align 4, !dbg !3763
  br label %for.cond423, !dbg !3765

for.cond423:                                      ; preds = %for.inc452, %for.body422
  %328 = load i32, i32* %g, align 4, !dbg !3766
  %329 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3769
  %ics424 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %329, i32 0, i32 0, !dbg !3770
  %num_swb425 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics424, i32 0, i32 8, !dbg !3771
  %330 = load i32, i32* %num_swb425, align 32, !dbg !3771
  %cmp426 = icmp slt i32 %328, %330, !dbg !3772
  br i1 %cmp426, label %for.body428, label %for.end454, !dbg !3773

for.body428:                                      ; preds = %for.cond423
  store i32 1, i32* %w2, align 4, !dbg !3774
  br label %for.cond429, !dbg !3776

for.cond429:                                      ; preds = %for.inc449, %for.body428
  %331 = load i32, i32* %w2, align 4, !dbg !3777
  %332 = load i32, i32* %w, align 4, !dbg !3780
  %idxprom430 = sext i32 %332 to i64, !dbg !3781
  %333 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3781
  %ics431 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %333, i32 0, i32 0, !dbg !3782
  %group_len432 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics431, i32 0, i32 4, !dbg !3783
  %arrayidx433 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len432, i64 0, i64 %idxprom430, !dbg !3781
  %334 = load i8, i8* %arrayidx433, align 1, !dbg !3781
  %conv434 = zext i8 %334 to i32, !dbg !3781
  %cmp435 = icmp slt i32 %331, %conv434, !dbg !3784
  br i1 %cmp435, label %for.body437, label %for.end451, !dbg !3785

for.body437:                                      ; preds = %for.cond429
  %335 = load i32, i32* %w, align 4, !dbg !3786
  %mul438 = mul nsw i32 %335, 16, !dbg !3787
  %336 = load i32, i32* %g, align 4, !dbg !3788
  %add439 = add nsw i32 %mul438, %336, !dbg !3789
  %idxprom440 = sext i32 %add439 to i64, !dbg !3790
  %337 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3790
  %sf_idx441 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %337, i32 0, i32 7, !dbg !3791
  %arrayidx442 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx441, i64 0, i64 %idxprom440, !dbg !3790
  %338 = load i32, i32* %arrayidx442, align 4, !dbg !3790
  %339 = load i32, i32* %w, align 4, !dbg !3792
  %340 = load i32, i32* %w2, align 4, !dbg !3793
  %add443 = add nsw i32 %339, %340, !dbg !3794
  %mul444 = mul nsw i32 %add443, 16, !dbg !3795
  %341 = load i32, i32* %g, align 4, !dbg !3796
  %add445 = add nsw i32 %mul444, %341, !dbg !3797
  %idxprom446 = sext i32 %add445 to i64, !dbg !3798
  %342 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3798
  %sf_idx447 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %342, i32 0, i32 7, !dbg !3799
  %arrayidx448 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx447, i64 0, i64 %idxprom446, !dbg !3798
  store i32 %338, i32* %arrayidx448, align 4, !dbg !3800
  br label %for.inc449, !dbg !3798

for.inc449:                                       ; preds = %for.body437
  %343 = load i32, i32* %w2, align 4, !dbg !3801
  %inc450 = add nsw i32 %343, 1, !dbg !3801
  store i32 %inc450, i32* %w2, align 4, !dbg !3801
  br label %for.cond429, !dbg !3803, !llvm.loop !3804

for.end451:                                       ; preds = %for.cond429
  br label %for.inc452, !dbg !3806

for.inc452:                                       ; preds = %for.end451
  %344 = load i32, i32* %g, align 4, !dbg !3808
  %inc453 = add nsw i32 %344, 1, !dbg !3808
  store i32 %inc453, i32* %g, align 4, !dbg !3808
  br label %for.cond423, !dbg !3810, !llvm.loop !3811

for.end454:                                       ; preds = %for.cond423
  br label %for.inc455, !dbg !3813

for.inc455:                                       ; preds = %for.end454
  %345 = load i32, i32* %w, align 4, !dbg !3815
  %idxprom456 = sext i32 %345 to i64, !dbg !3817
  %346 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3817
  %ics457 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %346, i32 0, i32 0, !dbg !3818
  %group_len458 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics457, i32 0, i32 4, !dbg !3819
  %arrayidx459 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len458, i64 0, i64 %idxprom456, !dbg !3817
  %347 = load i8, i8* %arrayidx459, align 1, !dbg !3817
  %conv460 = zext i8 %347 to i32, !dbg !3817
  %348 = load i32, i32* %w, align 4, !dbg !3820
  %add461 = add nsw i32 %348, %conv460, !dbg !3820
  store i32 %add461, i32* %w, align 4, !dbg !3820
  br label %for.cond417, !dbg !3821, !llvm.loop !3822

for.end462:                                       ; preds = %if.then9, %for.cond417
  ret void, !dbg !3824
}

; Function Attrs: nounwind uwtable
define internal void @encode_window_bands_info(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, i32 %win, i32 %group_len, float %lambda) #0 !dbg !3825 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %win.addr = alloca i32, align 4
  %group_len.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %path = alloca [120 x [15 x %struct.BandCodingPath]], align 16
  %w = alloca i32, align 4
  %swb = alloca i32, align 4
  %cb = alloca i32, align 4
  %start = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_sfb = alloca i32, align 4
  %run_bits = alloca i32, align 4
  %run_esc = alloca i32, align 4
  %idx = alloca i32, align 4
  %ppos = alloca i32, align 4
  %count = alloca i32, align 4
  %stackrun = alloca [120 x i32], align 16
  %stackcb = alloca [120 x i32], align 16
  %stack_len = alloca i32, align 4
  %next_minrd = alloca float, align 4
  %next_mincb = alloca i32, align 4
  %minrd = alloca float, align 4
  %mincb = alloca i32, align 4
  %cost_stay_here = alloca float, align 4
  %cost_get_here = alloca float, align 4
  %rd = alloca float, align 4
  %band = alloca %struct.FFPsyBand*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !3828, metadata !2772), !dbg !3829
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !3830, metadata !2772), !dbg !3831
  store i32 %win, i32* %win.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %win.addr, metadata !3832, metadata !2772), !dbg !3833
  store i32 %group_len, i32* %group_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_len.addr, metadata !3834, metadata !2772), !dbg !3835
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !3836, metadata !2772), !dbg !3837
  call void @llvm.dbg.declare(metadata [120 x [15 x %struct.BandCodingPath]]* %path, metadata !3838, metadata !2772), !dbg !3847
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3848, metadata !2772), !dbg !3849
  call void @llvm.dbg.declare(metadata i32* %swb, metadata !3850, metadata !2772), !dbg !3851
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !3852, metadata !2772), !dbg !3853
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3854, metadata !2772), !dbg !3855
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3856, metadata !2772), !dbg !3857
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3858, metadata !2772), !dbg !3859
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3860, metadata !2772), !dbg !3861
  call void @llvm.dbg.declare(metadata i32* %max_sfb, metadata !3862, metadata !2772), !dbg !3863
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3864
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !3865
  %max_sfb1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 0, !dbg !3866
  %1 = load i8, i8* %max_sfb1, align 32, !dbg !3866
  %conv = zext i8 %1 to i32, !dbg !3864
  store i32 %conv, i32* %max_sfb, align 4, !dbg !3863
  call void @llvm.dbg.declare(metadata i32* %run_bits, metadata !3867, metadata !2772), !dbg !3868
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3869
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 0, !dbg !3870
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 9, !dbg !3871
  %3 = load i32, i32* %num_windows, align 4, !dbg !3871
  %cmp = icmp eq i32 %3, 1, !dbg !3872
  %cond = select i1 %cmp, i32 5, i32 3, !dbg !3869
  store i32 %cond, i32* %run_bits, align 4, !dbg !3868
  call void @llvm.dbg.declare(metadata i32* %run_esc, metadata !3873, metadata !2772), !dbg !3874
  %4 = load i32, i32* %run_bits, align 4, !dbg !3875
  %shl = shl i32 1, %4, !dbg !3876
  %sub = sub nsw i32 %shl, 1, !dbg !3877
  store i32 %sub, i32* %run_esc, align 4, !dbg !3874
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !3878, metadata !2772), !dbg !3879
  call void @llvm.dbg.declare(metadata i32* %ppos, metadata !3880, metadata !2772), !dbg !3881
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3882, metadata !2772), !dbg !3883
  call void @llvm.dbg.declare(metadata [120 x i32]* %stackrun, metadata !3884, metadata !2772), !dbg !3885
  call void @llvm.dbg.declare(metadata [120 x i32]* %stackcb, metadata !3886, metadata !2772), !dbg !3887
  call void @llvm.dbg.declare(metadata i32* %stack_len, metadata !3888, metadata !2772), !dbg !3889
  call void @llvm.dbg.declare(metadata float* %next_minrd, metadata !3890, metadata !2772), !dbg !3891
  store float 0x7FF0000000000000, float* %next_minrd, align 4, !dbg !3891
  call void @llvm.dbg.declare(metadata i32* %next_mincb, metadata !3892, metadata !2772), !dbg !3893
  store i32 0, i32* %next_mincb, align 4, !dbg !3893
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3894
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 32, !dbg !3895
  %6 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !3895
  %7 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3896
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %7, i32 0, i32 29, !dbg !3897
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i32 0, i32 0, !dbg !3896
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3898
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %8, i32 0, i32 14, !dbg !3899
  %arraydecay4 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !3898
  call void %6(float* %arraydecay, float* %arraydecay4, i32 1024), !dbg !3894
  %9 = load i32, i32* %win.addr, align 4, !dbg !3900
  %mul = mul nsw i32 %9, 128, !dbg !3901
  store i32 %mul, i32* %start, align 4, !dbg !3902
  store i32 0, i32* %cb, align 4, !dbg !3903
  br label %for.cond, !dbg !3905

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %cb, align 4, !dbg !3906
  %cmp5 = icmp slt i32 %10, 15, !dbg !3909
  br i1 %cmp5, label %for.body, label %for.end, !dbg !3910

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %cb, align 4, !dbg !3911
  %idxprom = sext i32 %11 to i64, !dbg !3913
  %arrayidx = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 0, !dbg !3913
  %arrayidx7 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx, i64 0, i64 %idxprom, !dbg !3913
  %cost = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx7, i32 0, i32 1, !dbg !3914
  store float 0.000000e+00, float* %cost, align 4, !dbg !3915
  %12 = load i32, i32* %cb, align 4, !dbg !3916
  %idxprom8 = sext i32 %12 to i64, !dbg !3917
  %arrayidx9 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 0, !dbg !3917
  %arrayidx10 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx9, i64 0, i64 %idxprom8, !dbg !3917
  %prev_idx = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx10, i32 0, i32 0, !dbg !3918
  store i32 -1, i32* %prev_idx, align 4, !dbg !3919
  %13 = load i32, i32* %cb, align 4, !dbg !3920
  %idxprom11 = sext i32 %13 to i64, !dbg !3921
  %arrayidx12 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 0, !dbg !3921
  %arrayidx13 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx12, i64 0, i64 %idxprom11, !dbg !3921
  %run = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx13, i32 0, i32 2, !dbg !3922
  store i32 0, i32* %run, align 4, !dbg !3923
  br label %for.inc, !dbg !3924

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %cb, align 4, !dbg !3925
  %inc = add nsw i32 %14, 1, !dbg !3925
  store i32 %inc, i32* %cb, align 4, !dbg !3925
  br label %for.cond, !dbg !3927, !llvm.loop !3928

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %swb, align 4, !dbg !3930
  br label %for.cond14, !dbg !3932

for.cond14:                                       ; preds = %for.inc273, %for.end
  %15 = load i32, i32* %swb, align 4, !dbg !3933
  %16 = load i32, i32* %max_sfb, align 4, !dbg !3936
  %cmp15 = icmp slt i32 %15, %16, !dbg !3937
  br i1 %cmp15, label %for.body17, label %for.end275, !dbg !3938

for.body17:                                       ; preds = %for.cond14
  %17 = load i32, i32* %swb, align 4, !dbg !3939
  %idxprom18 = sext i32 %17 to i64, !dbg !3941
  %18 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3941
  %ics19 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %18, i32 0, i32 0, !dbg !3942
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics19, i32 0, i32 7, !dbg !3943
  %19 = load i8*, i8** %swb_sizes, align 8, !dbg !3943
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %idxprom18, !dbg !3941
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !3941
  %conv21 = zext i8 %20 to i32, !dbg !3941
  store i32 %conv21, i32* %size, align 4, !dbg !3944
  %21 = load i32, i32* %win.addr, align 4, !dbg !3945
  %mul22 = mul nsw i32 %21, 16, !dbg !3947
  %22 = load i32, i32* %swb, align 4, !dbg !3948
  %add = add nsw i32 %mul22, %22, !dbg !3949
  %idxprom23 = sext i32 %add to i64, !dbg !3950
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3950
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 8, !dbg !3951
  %arrayidx24 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom23, !dbg !3950
  %24 = load i8, i8* %arrayidx24, align 1, !dbg !3950
  %tobool = icmp ne i8 %24, 0, !dbg !3950
  br i1 %tobool, label %if.then, label %if.else, !dbg !3952

if.then:                                          ; preds = %for.body17
  store i32 0, i32* %cb, align 4, !dbg !3953
  br label %for.cond25, !dbg !3956

for.cond25:                                       ; preds = %for.inc58, %if.then
  %25 = load i32, i32* %cb, align 4, !dbg !3957
  %cmp26 = icmp slt i32 %25, 15, !dbg !3960
  br i1 %cmp26, label %for.body28, label %for.end60, !dbg !3961

for.body28:                                       ; preds = %for.cond25
  %26 = load i32, i32* %cb, align 4, !dbg !3962
  %27 = load i32, i32* %cb, align 4, !dbg !3964
  %idxprom29 = sext i32 %27 to i64, !dbg !3965
  %28 = load i32, i32* %swb, align 4, !dbg !3966
  %add30 = add nsw i32 %28, 1, !dbg !3967
  %idxprom31 = sext i32 %add30 to i64, !dbg !3965
  %arrayidx32 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom31, !dbg !3965
  %arrayidx33 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !3965
  %prev_idx34 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx33, i32 0, i32 0, !dbg !3968
  store i32 %26, i32* %prev_idx34, align 4, !dbg !3969
  %29 = load i32, i32* %cb, align 4, !dbg !3970
  %idxprom35 = sext i32 %29 to i64, !dbg !3971
  %30 = load i32, i32* %swb, align 4, !dbg !3972
  %idxprom36 = sext i32 %30 to i64, !dbg !3971
  %arrayidx37 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom36, !dbg !3971
  %arrayidx38 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx37, i64 0, i64 %idxprom35, !dbg !3971
  %cost39 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx38, i32 0, i32 1, !dbg !3973
  %31 = load float, float* %cost39, align 4, !dbg !3973
  %32 = load i32, i32* %cb, align 4, !dbg !3974
  %idxprom40 = sext i32 %32 to i64, !dbg !3975
  %33 = load i32, i32* %swb, align 4, !dbg !3976
  %add41 = add nsw i32 %33, 1, !dbg !3977
  %idxprom42 = sext i32 %add41 to i64, !dbg !3975
  %arrayidx43 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom42, !dbg !3975
  %arrayidx44 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx43, i64 0, i64 %idxprom40, !dbg !3975
  %cost45 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx44, i32 0, i32 1, !dbg !3978
  store float %31, float* %cost45, align 4, !dbg !3979
  %34 = load i32, i32* %cb, align 4, !dbg !3980
  %idxprom46 = sext i32 %34 to i64, !dbg !3981
  %35 = load i32, i32* %swb, align 4, !dbg !3982
  %idxprom47 = sext i32 %35 to i64, !dbg !3981
  %arrayidx48 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom47, !dbg !3981
  %arrayidx49 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx48, i64 0, i64 %idxprom46, !dbg !3981
  %run50 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx49, i32 0, i32 2, !dbg !3983
  %36 = load i32, i32* %run50, align 4, !dbg !3983
  %add51 = add nsw i32 %36, 1, !dbg !3984
  %37 = load i32, i32* %cb, align 4, !dbg !3985
  %idxprom52 = sext i32 %37 to i64, !dbg !3986
  %38 = load i32, i32* %swb, align 4, !dbg !3987
  %add53 = add nsw i32 %38, 1, !dbg !3988
  %idxprom54 = sext i32 %add53 to i64, !dbg !3986
  %arrayidx55 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom54, !dbg !3986
  %arrayidx56 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx55, i64 0, i64 %idxprom52, !dbg !3986
  %run57 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx56, i32 0, i32 2, !dbg !3989
  store i32 %add51, i32* %run57, align 4, !dbg !3990
  br label %for.inc58, !dbg !3991

for.inc58:                                        ; preds = %for.body28
  %39 = load i32, i32* %cb, align 4, !dbg !3992
  %inc59 = add nsw i32 %39, 1, !dbg !3992
  store i32 %inc59, i32* %cb, align 4, !dbg !3992
  br label %for.cond25, !dbg !3994, !llvm.loop !3995

for.end60:                                        ; preds = %for.cond25
  br label %if.end266, !dbg !3997

if.else:                                          ; preds = %for.body17
  call void @llvm.dbg.declare(metadata float* %minrd, metadata !3998, metadata !2772), !dbg !4000
  %40 = load float, float* %next_minrd, align 4, !dbg !4001
  store float %40, float* %minrd, align 4, !dbg !4000
  call void @llvm.dbg.declare(metadata i32* %mincb, metadata !4002, metadata !2772), !dbg !4003
  %41 = load i32, i32* %next_mincb, align 4, !dbg !4004
  store i32 %41, i32* %mincb, align 4, !dbg !4003
  store float 0x7FF0000000000000, float* %next_minrd, align 4, !dbg !4005
  store i32 0, i32* %next_mincb, align 4, !dbg !4006
  store i32 0, i32* %cb, align 4, !dbg !4007
  br label %for.cond61, !dbg !4009

for.cond61:                                       ; preds = %for.inc263, %if.else
  %42 = load i32, i32* %cb, align 4, !dbg !4010
  %cmp62 = icmp slt i32 %42, 15, !dbg !4013
  br i1 %cmp62, label %for.body64, label %for.end265, !dbg !4014

for.body64:                                       ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata float* %cost_stay_here, metadata !4015, metadata !2772), !dbg !4017
  call void @llvm.dbg.declare(metadata float* %cost_get_here, metadata !4018, metadata !2772), !dbg !4019
  call void @llvm.dbg.declare(metadata float* %rd, metadata !4020, metadata !2772), !dbg !4021
  store float 0.000000e+00, float* %rd, align 4, !dbg !4021
  %43 = load i32, i32* %cb, align 4, !dbg !4022
  %cmp65 = icmp sge i32 %43, 12, !dbg !4024
  br i1 %cmp65, label %land.lhs.true, label %lor.lhs.false, !dbg !4025

land.lhs.true:                                    ; preds = %for.body64
  %44 = load i32, i32* %win.addr, align 4, !dbg !4026
  %mul67 = mul nsw i32 %44, 16, !dbg !4028
  %45 = load i32, i32* %swb, align 4, !dbg !4029
  %add68 = add nsw i32 %mul67, %45, !dbg !4030
  %idxprom69 = sext i32 %add68 to i64, !dbg !4031
  %46 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4031
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %46, i32 0, i32 3, !dbg !4032
  %arrayidx70 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom69, !dbg !4031
  %47 = load i32, i32* %arrayidx70, align 4, !dbg !4031
  %48 = load i32, i32* %cb, align 4, !dbg !4033
  %idxprom71 = sext i32 %48 to i64, !dbg !4034
  %arrayidx72 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom71, !dbg !4034
  %49 = load i8, i8* %arrayidx72, align 1, !dbg !4034
  %conv73 = zext i8 %49 to i32, !dbg !4034
  %cmp74 = icmp ult i32 %47, %conv73, !dbg !4035
  br i1 %cmp74, label %if.then97, label %lor.lhs.false, !dbg !4036

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body64
  %50 = load i32, i32* %cb, align 4, !dbg !4037
  %51 = load i32, i32* %win.addr, align 4, !dbg !4038
  %mul76 = mul nsw i32 %51, 16, !dbg !4039
  %52 = load i32, i32* %swb, align 4, !dbg !4040
  %add77 = add nsw i32 %mul76, %52, !dbg !4041
  %idxprom78 = sext i32 %add77 to i64, !dbg !4042
  %53 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4042
  %band_type79 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %53, i32 0, i32 3, !dbg !4043
  %arrayidx80 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type79, i64 0, i64 %idxprom78, !dbg !4042
  %54 = load i32, i32* %arrayidx80, align 4, !dbg !4042
  %idxprom81 = zext i32 %54 to i64, !dbg !4044
  %arrayidx82 = getelementptr inbounds [16 x i8], [16 x i8]* @aac_cb_in_map, i64 0, i64 %idxprom81, !dbg !4044
  %55 = load i8, i8* %arrayidx82, align 1, !dbg !4044
  %conv83 = zext i8 %55 to i32, !dbg !4044
  %cmp84 = icmp slt i32 %50, %conv83, !dbg !4045
  br i1 %cmp84, label %land.lhs.true86, label %if.end, !dbg !4046

land.lhs.true86:                                  ; preds = %lor.lhs.false
  %56 = load i32, i32* %win.addr, align 4, !dbg !4047
  %mul87 = mul nsw i32 %56, 16, !dbg !4048
  %57 = load i32, i32* %swb, align 4, !dbg !4049
  %add88 = add nsw i32 %mul87, %57, !dbg !4050
  %idxprom89 = sext i32 %add88 to i64, !dbg !4051
  %58 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4051
  %band_type90 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %58, i32 0, i32 3, !dbg !4052
  %arrayidx91 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type90, i64 0, i64 %idxprom89, !dbg !4051
  %59 = load i32, i32* %arrayidx91, align 4, !dbg !4051
  %60 = load i32, i32* %cb, align 4, !dbg !4053
  %idxprom92 = sext i32 %60 to i64, !dbg !4054
  %arrayidx93 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom92, !dbg !4054
  %61 = load i8, i8* %arrayidx93, align 1, !dbg !4054
  %conv94 = zext i8 %61 to i32, !dbg !4054
  %cmp95 = icmp ugt i32 %59, %conv94, !dbg !4055
  br i1 %cmp95, label %if.then97, label %if.end, !dbg !4056

if.then97:                                        ; preds = %land.lhs.true86, %land.lhs.true
  %62 = load i32, i32* %cb, align 4, !dbg !4058
  %idxprom98 = sext i32 %62 to i64, !dbg !4060
  %63 = load i32, i32* %swb, align 4, !dbg !4061
  %add99 = add nsw i32 %63, 1, !dbg !4062
  %idxprom100 = sext i32 %add99 to i64, !dbg !4060
  %arrayidx101 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom100, !dbg !4060
  %arrayidx102 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx101, i64 0, i64 %idxprom98, !dbg !4060
  %prev_idx103 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx102, i32 0, i32 0, !dbg !4063
  store i32 -1, i32* %prev_idx103, align 4, !dbg !4064
  %64 = load i32, i32* %cb, align 4, !dbg !4065
  %idxprom104 = sext i32 %64 to i64, !dbg !4066
  %65 = load i32, i32* %swb, align 4, !dbg !4067
  %add105 = add nsw i32 %65, 1, !dbg !4068
  %idxprom106 = sext i32 %add105 to i64, !dbg !4066
  %arrayidx107 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom106, !dbg !4066
  %arrayidx108 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx107, i64 0, i64 %idxprom104, !dbg !4066
  %cost109 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx108, i32 0, i32 1, !dbg !4069
  store float 0x7FF0000000000000, float* %cost109, align 4, !dbg !4070
  %66 = load i32, i32* %cb, align 4, !dbg !4071
  %idxprom110 = sext i32 %66 to i64, !dbg !4072
  %67 = load i32, i32* %swb, align 4, !dbg !4073
  %idxprom111 = sext i32 %67 to i64, !dbg !4072
  %arrayidx112 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom111, !dbg !4072
  %arrayidx113 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx112, i64 0, i64 %idxprom110, !dbg !4072
  %run114 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx113, i32 0, i32 2, !dbg !4074
  %68 = load i32, i32* %run114, align 4, !dbg !4074
  %add115 = add nsw i32 %68, 1, !dbg !4075
  %69 = load i32, i32* %cb, align 4, !dbg !4076
  %idxprom116 = sext i32 %69 to i64, !dbg !4077
  %70 = load i32, i32* %swb, align 4, !dbg !4078
  %add117 = add nsw i32 %70, 1, !dbg !4079
  %idxprom118 = sext i32 %add117 to i64, !dbg !4077
  %arrayidx119 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom118, !dbg !4077
  %arrayidx120 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx119, i64 0, i64 %idxprom116, !dbg !4077
  %run121 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx120, i32 0, i32 2, !dbg !4080
  store i32 %add115, i32* %run121, align 4, !dbg !4081
  br label %for.inc263, !dbg !4082

if.end:                                           ; preds = %land.lhs.true86, %lor.lhs.false
  store i32 0, i32* %w, align 4, !dbg !4083
  br label %for.cond122, !dbg !4085

for.cond122:                                      ; preds = %for.inc152, %if.end
  %71 = load i32, i32* %w, align 4, !dbg !4086
  %72 = load i32, i32* %group_len.addr, align 4, !dbg !4089
  %cmp123 = icmp slt i32 %71, %72, !dbg !4090
  br i1 %cmp123, label %for.body125, label %for.end154, !dbg !4091

for.body125:                                      ; preds = %for.cond122
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band, metadata !4092, metadata !2772), !dbg !4094
  %73 = load i32, i32* %win.addr, align 4, !dbg !4095
  %74 = load i32, i32* %w, align 4, !dbg !4096
  %add126 = add nsw i32 %73, %74, !dbg !4097
  %mul127 = mul nsw i32 %add126, 16, !dbg !4098
  %75 = load i32, i32* %swb, align 4, !dbg !4099
  %add128 = add nsw i32 %mul127, %75, !dbg !4100
  %idxprom129 = sext i32 %add128 to i64, !dbg !4101
  %76 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4102
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %76, i32 0, i32 20, !dbg !4103
  %77 = load i32, i32* %cur_channel, align 32, !dbg !4103
  %idxprom130 = sext i32 %77 to i64, !dbg !4101
  %78 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4101
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %78, i32 0, i32 17, !dbg !4104
  %ch = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !4105
  %79 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch, align 16, !dbg !4105
  %arrayidx131 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %79, i64 %idxprom130, !dbg !4101
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx131, i32 0, i32 0, !dbg !4106
  %arrayidx132 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom129, !dbg !4101
  store %struct.FFPsyBand* %arrayidx132, %struct.FFPsyBand** %band, align 8, !dbg !4094
  %80 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4107
  %81 = load i32, i32* %start, align 4, !dbg !4108
  %82 = load i32, i32* %w, align 4, !dbg !4109
  %mul133 = mul nsw i32 %82, 128, !dbg !4110
  %add134 = add nsw i32 %81, %mul133, !dbg !4111
  %idxprom135 = sext i32 %add134 to i64, !dbg !4112
  %83 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4112
  %coeffs136 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %83, i32 0, i32 14, !dbg !4113
  %arrayidx137 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs136, i64 0, i64 %idxprom135, !dbg !4112
  %84 = load i32, i32* %start, align 4, !dbg !4114
  %85 = load i32, i32* %w, align 4, !dbg !4115
  %mul138 = mul nsw i32 %85, 128, !dbg !4116
  %add139 = add nsw i32 %84, %mul138, !dbg !4117
  %idxprom140 = sext i32 %add139 to i64, !dbg !4118
  %86 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4118
  %scoefs141 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %86, i32 0, i32 29, !dbg !4119
  %arrayidx142 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs141, i64 0, i64 %idxprom140, !dbg !4118
  %87 = load i32, i32* %size, align 4, !dbg !4120
  %88 = load i32, i32* %win.addr, align 4, !dbg !4121
  %89 = load i32, i32* %w, align 4, !dbg !4122
  %add143 = add nsw i32 %88, %89, !dbg !4123
  %mul144 = mul nsw i32 %add143, 16, !dbg !4124
  %90 = load i32, i32* %swb, align 4, !dbg !4125
  %add145 = add nsw i32 %mul144, %90, !dbg !4126
  %idxprom146 = sext i32 %add145 to i64, !dbg !4127
  %91 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4127
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %91, i32 0, i32 7, !dbg !4128
  %arrayidx147 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom146, !dbg !4127
  %92 = load i32, i32* %arrayidx147, align 4, !dbg !4127
  %93 = load i32, i32* %cb, align 4, !dbg !4129
  %idxprom148 = sext i32 %93 to i64, !dbg !4130
  %arrayidx149 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom148, !dbg !4130
  %94 = load i8, i8* %arrayidx149, align 1, !dbg !4130
  %conv150 = zext i8 %94 to i32, !dbg !4130
  %95 = load float, float* %lambda.addr, align 4, !dbg !4131
  %96 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !4132
  %threshold = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %96, i32 0, i32 2, !dbg !4133
  %97 = load float, float* %threshold, align 4, !dbg !4133
  %div = fdiv float %95, %97, !dbg !4134
  %call = call float @quantize_band_cost(%struct.AACEncContext* %80, float* %arrayidx137, float* %arrayidx142, i32 %87, i32 %92, i32 %conv150, float %div, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !4135
  %98 = load float, float* %rd, align 4, !dbg !4136
  %add151 = fadd float %98, %call, !dbg !4136
  store float %add151, float* %rd, align 4, !dbg !4136
  br label %for.inc152, !dbg !4137

for.inc152:                                       ; preds = %for.body125
  %99 = load i32, i32* %w, align 4, !dbg !4138
  %inc153 = add nsw i32 %99, 1, !dbg !4138
  store i32 %inc153, i32* %w, align 4, !dbg !4138
  br label %for.cond122, !dbg !4140, !llvm.loop !4141

for.end154:                                       ; preds = %for.cond122
  %100 = load i32, i32* %cb, align 4, !dbg !4143
  %idxprom155 = sext i32 %100 to i64, !dbg !4144
  %101 = load i32, i32* %swb, align 4, !dbg !4145
  %idxprom156 = sext i32 %101 to i64, !dbg !4144
  %arrayidx157 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom156, !dbg !4144
  %arrayidx158 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx157, i64 0, i64 %idxprom155, !dbg !4144
  %cost159 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx158, i32 0, i32 1, !dbg !4146
  %102 = load float, float* %cost159, align 4, !dbg !4146
  %103 = load float, float* %rd, align 4, !dbg !4147
  %add160 = fadd float %102, %103, !dbg !4148
  store float %add160, float* %cost_stay_here, align 4, !dbg !4149
  %104 = load float, float* %minrd, align 4, !dbg !4150
  %105 = load float, float* %rd, align 4, !dbg !4151
  %add161 = fadd float %104, %105, !dbg !4152
  %106 = load i32, i32* %run_bits, align 4, !dbg !4153
  %conv162 = sitofp i32 %106 to float, !dbg !4153
  %add163 = fadd float %add161, %conv162, !dbg !4154
  %add164 = fadd float %add163, 4.000000e+00, !dbg !4155
  store float %add164, float* %cost_get_here, align 4, !dbg !4156
  %107 = load i32, i32* %cb, align 4, !dbg !4157
  %idxprom165 = sext i32 %107 to i64, !dbg !4159
  %108 = load i32, i32* %swb, align 4, !dbg !4160
  %idxprom166 = sext i32 %108 to i64, !dbg !4159
  %arrayidx167 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom166, !dbg !4159
  %arrayidx168 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx167, i64 0, i64 %idxprom165, !dbg !4159
  %run169 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx168, i32 0, i32 2, !dbg !4161
  %109 = load i32, i32* %run169, align 4, !dbg !4161
  %idxprom170 = sext i32 %109 to i64, !dbg !4162
  %110 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4163
  %ics171 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %110, i32 0, i32 0, !dbg !4164
  %num_windows172 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics171, i32 0, i32 9, !dbg !4165
  %111 = load i32, i32* %num_windows172, align 4, !dbg !4165
  %cmp173 = icmp eq i32 %111, 8, !dbg !4166
  %conv174 = zext i1 %cmp173 to i32, !dbg !4166
  %idxprom175 = sext i32 %conv174 to i64, !dbg !4162
  %arrayidx176 = getelementptr inbounds [2 x i8*], [2 x i8*]* @run_value_bits, i64 0, i64 %idxprom175, !dbg !4162
  %112 = load i8*, i8** %arrayidx176, align 8, !dbg !4162
  %arrayidx177 = getelementptr inbounds i8, i8* %112, i64 %idxprom170, !dbg !4162
  %113 = load i8, i8* %arrayidx177, align 1, !dbg !4162
  %conv178 = zext i8 %113 to i32, !dbg !4162
  %114 = load i32, i32* %cb, align 4, !dbg !4167
  %idxprom179 = sext i32 %114 to i64, !dbg !4168
  %115 = load i32, i32* %swb, align 4, !dbg !4169
  %idxprom180 = sext i32 %115 to i64, !dbg !4168
  %arrayidx181 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom180, !dbg !4168
  %arrayidx182 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx181, i64 0, i64 %idxprom179, !dbg !4168
  %run183 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx182, i32 0, i32 2, !dbg !4170
  %116 = load i32, i32* %run183, align 4, !dbg !4170
  %add184 = add nsw i32 %116, 1, !dbg !4171
  %idxprom185 = sext i32 %add184 to i64, !dbg !4172
  %117 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4173
  %ics186 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %117, i32 0, i32 0, !dbg !4174
  %num_windows187 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics186, i32 0, i32 9, !dbg !4175
  %118 = load i32, i32* %num_windows187, align 4, !dbg !4175
  %cmp188 = icmp eq i32 %118, 8, !dbg !4176
  %conv189 = zext i1 %cmp188 to i32, !dbg !4176
  %idxprom190 = sext i32 %conv189 to i64, !dbg !4172
  %arrayidx191 = getelementptr inbounds [2 x i8*], [2 x i8*]* @run_value_bits, i64 0, i64 %idxprom190, !dbg !4172
  %119 = load i8*, i8** %arrayidx191, align 8, !dbg !4172
  %arrayidx192 = getelementptr inbounds i8, i8* %119, i64 %idxprom185, !dbg !4172
  %120 = load i8, i8* %arrayidx192, align 1, !dbg !4172
  %conv193 = zext i8 %120 to i32, !dbg !4172
  %cmp194 = icmp ne i32 %conv178, %conv193, !dbg !4177
  br i1 %cmp194, label %if.then196, label %if.end199, !dbg !4178

if.then196:                                       ; preds = %for.end154
  %121 = load i32, i32* %run_bits, align 4, !dbg !4179
  %conv197 = sitofp i32 %121 to float, !dbg !4179
  %122 = load float, float* %cost_stay_here, align 4, !dbg !4180
  %add198 = fadd float %122, %conv197, !dbg !4180
  store float %add198, float* %cost_stay_here, align 4, !dbg !4180
  br label %if.end199, !dbg !4181

if.end199:                                        ; preds = %if.then196, %for.end154
  %123 = load float, float* %cost_get_here, align 4, !dbg !4182
  %124 = load float, float* %cost_stay_here, align 4, !dbg !4184
  %cmp200 = fcmp olt float %123, %124, !dbg !4185
  br i1 %cmp200, label %if.then202, label %if.else221, !dbg !4186

if.then202:                                       ; preds = %if.end199
  %125 = load i32, i32* %mincb, align 4, !dbg !4187
  %126 = load i32, i32* %cb, align 4, !dbg !4189
  %idxprom203 = sext i32 %126 to i64, !dbg !4190
  %127 = load i32, i32* %swb, align 4, !dbg !4191
  %add204 = add nsw i32 %127, 1, !dbg !4192
  %idxprom205 = sext i32 %add204 to i64, !dbg !4190
  %arrayidx206 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom205, !dbg !4190
  %arrayidx207 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx206, i64 0, i64 %idxprom203, !dbg !4190
  %prev_idx208 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx207, i32 0, i32 0, !dbg !4193
  store i32 %125, i32* %prev_idx208, align 4, !dbg !4194
  %128 = load float, float* %cost_get_here, align 4, !dbg !4195
  %129 = load i32, i32* %cb, align 4, !dbg !4196
  %idxprom209 = sext i32 %129 to i64, !dbg !4197
  %130 = load i32, i32* %swb, align 4, !dbg !4198
  %add210 = add nsw i32 %130, 1, !dbg !4199
  %idxprom211 = sext i32 %add210 to i64, !dbg !4197
  %arrayidx212 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom211, !dbg !4197
  %arrayidx213 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx212, i64 0, i64 %idxprom209, !dbg !4197
  %cost214 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx213, i32 0, i32 1, !dbg !4200
  store float %128, float* %cost214, align 4, !dbg !4201
  %131 = load i32, i32* %cb, align 4, !dbg !4202
  %idxprom215 = sext i32 %131 to i64, !dbg !4203
  %132 = load i32, i32* %swb, align 4, !dbg !4204
  %add216 = add nsw i32 %132, 1, !dbg !4205
  %idxprom217 = sext i32 %add216 to i64, !dbg !4203
  %arrayidx218 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom217, !dbg !4203
  %arrayidx219 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx218, i64 0, i64 %idxprom215, !dbg !4203
  %run220 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx219, i32 0, i32 2, !dbg !4206
  store i32 1, i32* %run220, align 4, !dbg !4207
  br label %if.end246, !dbg !4208

if.else221:                                       ; preds = %if.end199
  %133 = load i32, i32* %cb, align 4, !dbg !4209
  %134 = load i32, i32* %cb, align 4, !dbg !4211
  %idxprom222 = sext i32 %134 to i64, !dbg !4212
  %135 = load i32, i32* %swb, align 4, !dbg !4213
  %add223 = add nsw i32 %135, 1, !dbg !4214
  %idxprom224 = sext i32 %add223 to i64, !dbg !4212
  %arrayidx225 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom224, !dbg !4212
  %arrayidx226 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx225, i64 0, i64 %idxprom222, !dbg !4212
  %prev_idx227 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx226, i32 0, i32 0, !dbg !4215
  store i32 %133, i32* %prev_idx227, align 4, !dbg !4216
  %136 = load float, float* %cost_stay_here, align 4, !dbg !4217
  %137 = load i32, i32* %cb, align 4, !dbg !4218
  %idxprom228 = sext i32 %137 to i64, !dbg !4219
  %138 = load i32, i32* %swb, align 4, !dbg !4220
  %add229 = add nsw i32 %138, 1, !dbg !4221
  %idxprom230 = sext i32 %add229 to i64, !dbg !4219
  %arrayidx231 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom230, !dbg !4219
  %arrayidx232 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx231, i64 0, i64 %idxprom228, !dbg !4219
  %cost233 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx232, i32 0, i32 1, !dbg !4222
  store float %136, float* %cost233, align 4, !dbg !4223
  %139 = load i32, i32* %cb, align 4, !dbg !4224
  %idxprom234 = sext i32 %139 to i64, !dbg !4225
  %140 = load i32, i32* %swb, align 4, !dbg !4226
  %idxprom235 = sext i32 %140 to i64, !dbg !4225
  %arrayidx236 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom235, !dbg !4225
  %arrayidx237 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx236, i64 0, i64 %idxprom234, !dbg !4225
  %run238 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx237, i32 0, i32 2, !dbg !4227
  %141 = load i32, i32* %run238, align 4, !dbg !4227
  %add239 = add nsw i32 %141, 1, !dbg !4228
  %142 = load i32, i32* %cb, align 4, !dbg !4229
  %idxprom240 = sext i32 %142 to i64, !dbg !4230
  %143 = load i32, i32* %swb, align 4, !dbg !4231
  %add241 = add nsw i32 %143, 1, !dbg !4232
  %idxprom242 = sext i32 %add241 to i64, !dbg !4230
  %arrayidx243 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom242, !dbg !4230
  %arrayidx244 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx243, i64 0, i64 %idxprom240, !dbg !4230
  %run245 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx244, i32 0, i32 2, !dbg !4233
  store i32 %add239, i32* %run245, align 4, !dbg !4234
  br label %if.end246

if.end246:                                        ; preds = %if.else221, %if.then202
  %144 = load i32, i32* %cb, align 4, !dbg !4235
  %idxprom247 = sext i32 %144 to i64, !dbg !4237
  %145 = load i32, i32* %swb, align 4, !dbg !4238
  %add248 = add nsw i32 %145, 1, !dbg !4239
  %idxprom249 = sext i32 %add248 to i64, !dbg !4237
  %arrayidx250 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom249, !dbg !4237
  %arrayidx251 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx250, i64 0, i64 %idxprom247, !dbg !4237
  %cost252 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx251, i32 0, i32 1, !dbg !4240
  %146 = load float, float* %cost252, align 4, !dbg !4240
  %147 = load float, float* %next_minrd, align 4, !dbg !4241
  %cmp253 = fcmp olt float %146, %147, !dbg !4242
  br i1 %cmp253, label %if.then255, label %if.end262, !dbg !4243

if.then255:                                       ; preds = %if.end246
  %148 = load i32, i32* %cb, align 4, !dbg !4244
  %idxprom256 = sext i32 %148 to i64, !dbg !4246
  %149 = load i32, i32* %swb, align 4, !dbg !4247
  %add257 = add nsw i32 %149, 1, !dbg !4248
  %idxprom258 = sext i32 %add257 to i64, !dbg !4246
  %arrayidx259 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom258, !dbg !4246
  %arrayidx260 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx259, i64 0, i64 %idxprom256, !dbg !4246
  %cost261 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx260, i32 0, i32 1, !dbg !4249
  %150 = load float, float* %cost261, align 4, !dbg !4249
  store float %150, float* %next_minrd, align 4, !dbg !4250
  %151 = load i32, i32* %cb, align 4, !dbg !4251
  store i32 %151, i32* %next_mincb, align 4, !dbg !4252
  br label %if.end262, !dbg !4253

if.end262:                                        ; preds = %if.then255, %if.end246
  br label %for.inc263, !dbg !4254

for.inc263:                                       ; preds = %if.end262, %if.then97
  %152 = load i32, i32* %cb, align 4, !dbg !4255
  %inc264 = add nsw i32 %152, 1, !dbg !4255
  store i32 %inc264, i32* %cb, align 4, !dbg !4255
  br label %for.cond61, !dbg !4257, !llvm.loop !4258

for.end265:                                       ; preds = %for.cond61
  br label %if.end266

if.end266:                                        ; preds = %for.end265, %for.end60
  %153 = load i32, i32* %swb, align 4, !dbg !4260
  %idxprom267 = sext i32 %153 to i64, !dbg !4261
  %154 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4261
  %ics268 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %154, i32 0, i32 0, !dbg !4262
  %swb_sizes269 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics268, i32 0, i32 7, !dbg !4263
  %155 = load i8*, i8** %swb_sizes269, align 8, !dbg !4263
  %arrayidx270 = getelementptr inbounds i8, i8* %155, i64 %idxprom267, !dbg !4261
  %156 = load i8, i8* %arrayidx270, align 1, !dbg !4261
  %conv271 = zext i8 %156 to i32, !dbg !4261
  %157 = load i32, i32* %start, align 4, !dbg !4264
  %add272 = add nsw i32 %157, %conv271, !dbg !4264
  store i32 %add272, i32* %start, align 4, !dbg !4264
  br label %for.inc273, !dbg !4265

for.inc273:                                       ; preds = %if.end266
  %158 = load i32, i32* %swb, align 4, !dbg !4266
  %inc274 = add nsw i32 %158, 1, !dbg !4266
  store i32 %inc274, i32* %swb, align 4, !dbg !4266
  br label %for.cond14, !dbg !4268, !llvm.loop !4269

for.end275:                                       ; preds = %for.cond14
  store i32 0, i32* %stack_len, align 4, !dbg !4271
  store i32 0, i32* %idx, align 4, !dbg !4272
  store i32 1, i32* %cb, align 4, !dbg !4273
  br label %for.cond276, !dbg !4275

for.cond276:                                      ; preds = %for.inc294, %for.end275
  %159 = load i32, i32* %cb, align 4, !dbg !4276
  %cmp277 = icmp slt i32 %159, 15, !dbg !4279
  br i1 %cmp277, label %for.body279, label %for.end296, !dbg !4280

for.body279:                                      ; preds = %for.cond276
  %160 = load i32, i32* %cb, align 4, !dbg !4281
  %idxprom280 = sext i32 %160 to i64, !dbg !4283
  %161 = load i32, i32* %max_sfb, align 4, !dbg !4284
  %idxprom281 = sext i32 %161 to i64, !dbg !4283
  %arrayidx282 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom281, !dbg !4283
  %arrayidx283 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx282, i64 0, i64 %idxprom280, !dbg !4283
  %cost284 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx283, i32 0, i32 1, !dbg !4285
  %162 = load float, float* %cost284, align 4, !dbg !4285
  %163 = load i32, i32* %idx, align 4, !dbg !4286
  %idxprom285 = sext i32 %163 to i64, !dbg !4287
  %164 = load i32, i32* %max_sfb, align 4, !dbg !4288
  %idxprom286 = sext i32 %164 to i64, !dbg !4287
  %arrayidx287 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom286, !dbg !4287
  %arrayidx288 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx287, i64 0, i64 %idxprom285, !dbg !4287
  %cost289 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx288, i32 0, i32 1, !dbg !4289
  %165 = load float, float* %cost289, align 4, !dbg !4289
  %cmp290 = fcmp olt float %162, %165, !dbg !4290
  br i1 %cmp290, label %if.then292, label %if.end293, !dbg !4291

if.then292:                                       ; preds = %for.body279
  %166 = load i32, i32* %cb, align 4, !dbg !4292
  store i32 %166, i32* %idx, align 4, !dbg !4293
  br label %if.end293, !dbg !4294

if.end293:                                        ; preds = %if.then292, %for.body279
  br label %for.inc294, !dbg !4295

for.inc294:                                       ; preds = %if.end293
  %167 = load i32, i32* %cb, align 4, !dbg !4297
  %inc295 = add nsw i32 %167, 1, !dbg !4297
  store i32 %inc295, i32* %cb, align 4, !dbg !4297
  br label %for.cond276, !dbg !4299, !llvm.loop !4300

for.end296:                                       ; preds = %for.cond276
  %168 = load i32, i32* %max_sfb, align 4, !dbg !4302
  store i32 %168, i32* %ppos, align 4, !dbg !4303
  br label %while.cond, !dbg !4304

while.cond:                                       ; preds = %while.body, %for.end296
  %169 = load i32, i32* %ppos, align 4, !dbg !4305
  %cmp297 = icmp sgt i32 %169, 0, !dbg !4307
  br i1 %cmp297, label %while.body, label %while.end, !dbg !4308

while.body:                                       ; preds = %while.cond
  %170 = load i32, i32* %idx, align 4, !dbg !4309
  store i32 %170, i32* %cb, align 4, !dbg !4311
  %171 = load i32, i32* %cb, align 4, !dbg !4312
  %idxprom299 = sext i32 %171 to i64, !dbg !4313
  %172 = load i32, i32* %ppos, align 4, !dbg !4314
  %idxprom300 = sext i32 %172 to i64, !dbg !4313
  %arrayidx301 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom300, !dbg !4313
  %arrayidx302 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx301, i64 0, i64 %idxprom299, !dbg !4313
  %run303 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx302, i32 0, i32 2, !dbg !4315
  %173 = load i32, i32* %run303, align 4, !dbg !4315
  %174 = load i32, i32* %stack_len, align 4, !dbg !4316
  %idxprom304 = sext i32 %174 to i64, !dbg !4317
  %arrayidx305 = getelementptr inbounds [120 x i32], [120 x i32]* %stackrun, i64 0, i64 %idxprom304, !dbg !4317
  store i32 %173, i32* %arrayidx305, align 4, !dbg !4318
  %175 = load i32, i32* %cb, align 4, !dbg !4319
  %176 = load i32, i32* %stack_len, align 4, !dbg !4320
  %idxprom306 = sext i32 %176 to i64, !dbg !4321
  %arrayidx307 = getelementptr inbounds [120 x i32], [120 x i32]* %stackcb, i64 0, i64 %idxprom306, !dbg !4321
  store i32 %175, i32* %arrayidx307, align 4, !dbg !4322
  %177 = load i32, i32* %cb, align 4, !dbg !4323
  %idxprom308 = sext i32 %177 to i64, !dbg !4324
  %178 = load i32, i32* %ppos, align 4, !dbg !4325
  %179 = load i32, i32* %cb, align 4, !dbg !4326
  %idxprom309 = sext i32 %179 to i64, !dbg !4327
  %180 = load i32, i32* %ppos, align 4, !dbg !4328
  %idxprom310 = sext i32 %180 to i64, !dbg !4327
  %arrayidx311 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom310, !dbg !4327
  %arrayidx312 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx311, i64 0, i64 %idxprom309, !dbg !4327
  %run313 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx312, i32 0, i32 2, !dbg !4329
  %181 = load i32, i32* %run313, align 4, !dbg !4329
  %sub314 = sub nsw i32 %178, %181, !dbg !4330
  %add315 = add nsw i32 %sub314, 1, !dbg !4331
  %idxprom316 = sext i32 %add315 to i64, !dbg !4324
  %arrayidx317 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom316, !dbg !4324
  %arrayidx318 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx317, i64 0, i64 %idxprom308, !dbg !4324
  %prev_idx319 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx318, i32 0, i32 0, !dbg !4332
  %182 = load i32, i32* %prev_idx319, align 4, !dbg !4332
  store i32 %182, i32* %idx, align 4, !dbg !4333
  %183 = load i32, i32* %cb, align 4, !dbg !4334
  %idxprom320 = sext i32 %183 to i64, !dbg !4335
  %184 = load i32, i32* %ppos, align 4, !dbg !4336
  %idxprom321 = sext i32 %184 to i64, !dbg !4335
  %arrayidx322 = getelementptr inbounds [120 x [15 x %struct.BandCodingPath]], [120 x [15 x %struct.BandCodingPath]]* %path, i64 0, i64 %idxprom321, !dbg !4335
  %arrayidx323 = getelementptr inbounds [15 x %struct.BandCodingPath], [15 x %struct.BandCodingPath]* %arrayidx322, i64 0, i64 %idxprom320, !dbg !4335
  %run324 = getelementptr inbounds %struct.BandCodingPath, %struct.BandCodingPath* %arrayidx323, i32 0, i32 2, !dbg !4337
  %185 = load i32, i32* %run324, align 4, !dbg !4337
  %186 = load i32, i32* %ppos, align 4, !dbg !4338
  %sub325 = sub nsw i32 %186, %185, !dbg !4338
  store i32 %sub325, i32* %ppos, align 4, !dbg !4338
  %187 = load i32, i32* %stack_len, align 4, !dbg !4339
  %inc326 = add nsw i32 %187, 1, !dbg !4339
  store i32 %inc326, i32* %stack_len, align 4, !dbg !4339
  br label %while.cond, !dbg !4340, !llvm.loop !4342

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %start, align 4, !dbg !4343
  %188 = load i32, i32* %stack_len, align 4, !dbg !4344
  %sub327 = sub nsw i32 %188, 1, !dbg !4346
  store i32 %sub327, i32* %i, align 4, !dbg !4347
  br label %for.cond328, !dbg !4348

for.cond328:                                      ; preds = %for.inc367, %while.end
  %189 = load i32, i32* %i, align 4, !dbg !4349
  %cmp329 = icmp sge i32 %189, 0, !dbg !4352
  br i1 %cmp329, label %for.body331, label %for.end368, !dbg !4353

for.body331:                                      ; preds = %for.cond328
  %190 = load i32, i32* %i, align 4, !dbg !4354
  %idxprom332 = sext i32 %190 to i64, !dbg !4356
  %arrayidx333 = getelementptr inbounds [120 x i32], [120 x i32]* %stackcb, i64 0, i64 %idxprom332, !dbg !4356
  %191 = load i32, i32* %arrayidx333, align 4, !dbg !4356
  %idxprom334 = sext i32 %191 to i64, !dbg !4357
  %arrayidx335 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom334, !dbg !4357
  %192 = load i8, i8* %arrayidx335, align 1, !dbg !4357
  %conv336 = zext i8 %192 to i32, !dbg !4357
  store i32 %conv336, i32* %cb, align 4, !dbg !4358
  %193 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4359
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %193, i32 0, i32 2, !dbg !4360
  %194 = load i32, i32* %cb, align 4, !dbg !4361
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %194), !dbg !4362
  %195 = load i32, i32* %i, align 4, !dbg !4363
  %idxprom337 = sext i32 %195 to i64, !dbg !4364
  %arrayidx338 = getelementptr inbounds [120 x i32], [120 x i32]* %stackrun, i64 0, i64 %idxprom337, !dbg !4364
  %196 = load i32, i32* %arrayidx338, align 4, !dbg !4364
  store i32 %196, i32* %count, align 4, !dbg !4365
  %197 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4366
  %zeroes339 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %197, i32 0, i32 8, !dbg !4367
  %arraydecay340 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes339, i32 0, i32 0, !dbg !4366
  %198 = load i32, i32* %win.addr, align 4, !dbg !4368
  %mul341 = mul nsw i32 %198, 16, !dbg !4369
  %idx.ext = sext i32 %mul341 to i64, !dbg !4370
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay340, i64 %idx.ext, !dbg !4370
  %199 = load i32, i32* %start, align 4, !dbg !4371
  %idx.ext342 = sext i32 %199 to i64, !dbg !4372
  %add.ptr343 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext342, !dbg !4372
  %200 = load i32, i32* %cb, align 4, !dbg !4373
  %tobool344 = icmp ne i32 %200, 0, !dbg !4374
  %lnot = xor i1 %tobool344, true, !dbg !4374
  %lnot.ext = zext i1 %lnot to i32, !dbg !4374
  %201 = trunc i32 %lnot.ext to i8, !dbg !4375
  %202 = load i32, i32* %count, align 4, !dbg !4376
  %conv345 = sext i32 %202 to i64, !dbg !4376
  call void @llvm.memset.p0i8.i64(i8* %add.ptr343, i8 %201, i64 %conv345, i32 1, i1 false), !dbg !4375
  store i32 0, i32* %j, align 4, !dbg !4377
  br label %for.cond346, !dbg !4379

for.cond346:                                      ; preds = %for.inc356, %for.body331
  %203 = load i32, i32* %j, align 4, !dbg !4380
  %204 = load i32, i32* %count, align 4, !dbg !4383
  %cmp347 = icmp slt i32 %203, %204, !dbg !4384
  br i1 %cmp347, label %for.body349, label %for.end358, !dbg !4385

for.body349:                                      ; preds = %for.cond346
  %205 = load i32, i32* %cb, align 4, !dbg !4386
  %206 = load i32, i32* %win.addr, align 4, !dbg !4388
  %mul350 = mul nsw i32 %206, 16, !dbg !4389
  %207 = load i32, i32* %start, align 4, !dbg !4390
  %add351 = add nsw i32 %mul350, %207, !dbg !4391
  %idxprom352 = sext i32 %add351 to i64, !dbg !4392
  %208 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4392
  %band_type353 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %208, i32 0, i32 3, !dbg !4393
  %arrayidx354 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type353, i64 0, i64 %idxprom352, !dbg !4392
  store i32 %205, i32* %arrayidx354, align 4, !dbg !4394
  %209 = load i32, i32* %start, align 4, !dbg !4395
  %inc355 = add nsw i32 %209, 1, !dbg !4395
  store i32 %inc355, i32* %start, align 4, !dbg !4395
  br label %for.inc356, !dbg !4396

for.inc356:                                       ; preds = %for.body349
  %210 = load i32, i32* %j, align 4, !dbg !4397
  %inc357 = add nsw i32 %210, 1, !dbg !4397
  store i32 %inc357, i32* %j, align 4, !dbg !4397
  br label %for.cond346, !dbg !4399, !llvm.loop !4400

for.end358:                                       ; preds = %for.cond346
  br label %while.cond359, !dbg !4402

while.cond359:                                    ; preds = %while.body362, %for.end358
  %211 = load i32, i32* %count, align 4, !dbg !4403
  %212 = load i32, i32* %run_esc, align 4, !dbg !4405
  %cmp360 = icmp sge i32 %211, %212, !dbg !4406
  br i1 %cmp360, label %while.body362, label %while.end365, !dbg !4407

while.body362:                                    ; preds = %while.cond359
  %213 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4408
  %pb363 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %213, i32 0, i32 2, !dbg !4410
  %214 = load i32, i32* %run_bits, align 4, !dbg !4411
  %215 = load i32, i32* %run_esc, align 4, !dbg !4412
  call void @put_bits(%struct.PutBitContext* %pb363, i32 %214, i32 %215), !dbg !4413
  %216 = load i32, i32* %run_esc, align 4, !dbg !4414
  %217 = load i32, i32* %count, align 4, !dbg !4415
  %sub364 = sub nsw i32 %217, %216, !dbg !4415
  store i32 %sub364, i32* %count, align 4, !dbg !4415
  br label %while.cond359, !dbg !4416, !llvm.loop !4418

while.end365:                                     ; preds = %while.cond359
  %218 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4419
  %pb366 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %218, i32 0, i32 2, !dbg !4420
  %219 = load i32, i32* %run_bits, align 4, !dbg !4421
  %220 = load i32, i32* %count, align 4, !dbg !4422
  call void @put_bits(%struct.PutBitContext* %pb366, i32 %219, i32 %220), !dbg !4423
  br label %for.inc367, !dbg !4424

for.inc367:                                       ; preds = %while.end365
  %221 = load i32, i32* %i, align 4, !dbg !4425
  %dec = add nsw i32 %221, -1, !dbg !4425
  store i32 %dec, i32* %i, align 4, !dbg !4425
  br label %for.cond328, !dbg !4427, !llvm.loop !4428

for.end368:                                       ; preds = %for.cond328
  ret void, !dbg !4430
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @quantize_and_encode_band(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %out, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, i32 %rtz) #1 !dbg !4431 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %rtz.addr = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !4432, metadata !2772), !dbg !4433
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !4434, metadata !2772), !dbg !4435
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !4436, metadata !2772), !dbg !4437
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !4438, metadata !2772), !dbg !4439
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4440, metadata !2772), !dbg !4441
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !4442, metadata !2772), !dbg !4443
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !4444, metadata !2772), !dbg !4445
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !4446, metadata !2772), !dbg !4447
  store i32 %rtz, i32* %rtz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtz.addr, metadata !4448, metadata !2772), !dbg !4449
  %0 = load i32, i32* %cb.addr, align 4, !dbg !4450
  %idxprom = sext i32 %0 to i64, !dbg !4451
  %1 = load i32, i32* %rtz.addr, align 4, !dbg !4452
  %tobool = icmp ne i32 %1, 0, !dbg !4453
  %cond = select i1 %tobool, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_rtz_arr, i32 0, i32 0), float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_arr, i32 0, i32 0), !dbg !4453
  %arrayidx = getelementptr inbounds float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %cond, i64 %idxprom, !dbg !4451
  %2 = load float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %arrayidx, align 8, !dbg !4451
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4454
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4455
  %5 = load float*, float** %in.addr, align 8, !dbg !4456
  %6 = load float*, float** %out.addr, align 8, !dbg !4457
  %7 = load i32, i32* %size.addr, align 4, !dbg !4453
  %8 = load i32, i32* %scale_idx.addr, align 4, !dbg !4458
  %9 = load i32, i32* %cb.addr, align 4, !dbg !4459
  %10 = load float, float* %lambda.addr, align 4, !dbg !4460
  %call = call float %2(%struct.AACEncContext* %3, %struct.PutBitContext* %4, float* %5, float* %6, float* null, i32 %7, i32 %8, i32 %9, float %10, float 0x7FF0000000000000, i32* null, float* null), !dbg !4451
  ret void, !dbg !4461
}

declare void @ff_aac_encode_tns_info(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

declare void @ff_aac_encode_ltp_info(%struct.AACEncContext*, %struct.SingleChannelElement*, i32) #2

declare void @ff_aac_encode_main_pred(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

declare void @ff_aac_adjust_common_pred(%struct.AACEncContext*, %struct.ChannelElement*) #2

declare void @ff_aac_adjust_common_ltp(%struct.AACEncContext*, %struct.ChannelElement*) #2

declare void @ff_aac_apply_main_pred(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

declare void @ff_aac_apply_tns(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

declare void @ff_aac_update_ltp(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

declare void @ff_aac_ltp_insert_new_frame(%struct.AACEncContext*) #2

; Function Attrs: nounwind uwtable
define internal void @set_special_band_scalefactors(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce) #0 !dbg !4462 {
entry:
  %retval.i179 = alloca i32, align 4
  %a.addr.i180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i180, metadata !2767, metadata !2772), !dbg !4465
  %amin.addr.i181 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i181, metadata !2777, metadata !2772), !dbg !4477
  %amax.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i182, metadata !2779, metadata !2772), !dbg !4478
  %retval.i168 = alloca i32, align 4
  %a.addr.i169 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i169, metadata !2767, metadata !2772), !dbg !4479
  %amin.addr.i170 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i170, metadata !2777, metadata !2772), !dbg !4489
  %amax.addr.i171 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i171, metadata !2779, metadata !2772), !dbg !4490
  %retval.i157 = alloca i32, align 4
  %a.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i158, metadata !2767, metadata !2772), !dbg !4491
  %amin.addr.i159 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i159, metadata !2777, metadata !2772), !dbg !4495
  %amax.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i160, metadata !2779, metadata !2772), !dbg !4496
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2767, metadata !2772), !dbg !4497
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2777, metadata !2772), !dbg !4501
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2779, metadata !2772), !dbg !4502
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %w = alloca i32, align 4
  %g = alloca i32, align 4
  %prevscaler_n = alloca i32, align 4
  %prevscaler_i = alloca i32, align 4
  %bands = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !4503, metadata !2772), !dbg !4504
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4505, metadata !2772), !dbg !4506
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4507, metadata !2772), !dbg !4508
  call void @llvm.dbg.declare(metadata i32* %g, metadata !4509, metadata !2772), !dbg !4510
  call void @llvm.dbg.declare(metadata i32* %prevscaler_n, metadata !4511, metadata !2772), !dbg !4512
  store i32 -255, i32* %prevscaler_n, align 4, !dbg !4512
  call void @llvm.dbg.declare(metadata i32* %prevscaler_i, metadata !4513, metadata !2772), !dbg !4514
  store i32 0, i32* %prevscaler_i, align 4, !dbg !4514
  call void @llvm.dbg.declare(metadata i32* %bands, metadata !4515, metadata !2772), !dbg !4516
  store i32 0, i32* %bands, align 4, !dbg !4516
  store i32 0, i32* %w, align 4, !dbg !4517
  br label %for.cond, !dbg !4518

for.cond:                                         ; preds = %for.inc64, %entry
  %0 = load i32, i32* %w, align 4, !dbg !4519
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4521
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !4522
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !4523
  %2 = load i32, i32* %num_windows, align 4, !dbg !4523
  %cmp = icmp slt i32 %0, %2, !dbg !4524
  br i1 %cmp, label %for.body, label %for.end70, !dbg !4525

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %g, align 4, !dbg !4526
  br label %for.cond1, !dbg !4527

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %g, align 4, !dbg !4528
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4530
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 0, !dbg !4531
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 8, !dbg !4532
  %5 = load i32, i32* %num_swb, align 32, !dbg !4532
  %cmp3 = icmp slt i32 %3, %5, !dbg !4533
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !4534

for.body4:                                        ; preds = %for.cond1
  %6 = load i32, i32* %w, align 4, !dbg !4535
  %mul = mul nsw i32 %6, 16, !dbg !4537
  %7 = load i32, i32* %g, align 4, !dbg !4538
  %add = add nsw i32 %mul, %7, !dbg !4539
  %idxprom = sext i32 %add to i64, !dbg !4540
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4540
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %8, i32 0, i32 8, !dbg !4541
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom, !dbg !4540
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4540
  %tobool = icmp ne i8 %9, 0, !dbg !4540
  br i1 %tobool, label %if.then, label %if.end, !dbg !4542

if.then:                                          ; preds = %for.body4
  br label %for.inc, !dbg !4543

if.end:                                           ; preds = %for.body4
  %10 = load i32, i32* %w, align 4, !dbg !4544
  %mul5 = mul nsw i32 %10, 16, !dbg !4545
  %11 = load i32, i32* %g, align 4, !dbg !4546
  %add6 = add nsw i32 %mul5, %11, !dbg !4547
  %idxprom7 = sext i32 %add6 to i64, !dbg !4548
  %12 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4548
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %12, i32 0, i32 3, !dbg !4549
  %arrayidx8 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom7, !dbg !4548
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !4548
  %cmp9 = icmp eq i32 %13, 15, !dbg !4550
  br i1 %cmp9, label %if.then16, label %lor.lhs.false, !dbg !4551

lor.lhs.false:                                    ; preds = %if.end
  %14 = load i32, i32* %w, align 4, !dbg !4552
  %mul10 = mul nsw i32 %14, 16, !dbg !4554
  %15 = load i32, i32* %g, align 4, !dbg !4555
  %add11 = add nsw i32 %mul10, %15, !dbg !4556
  %idxprom12 = sext i32 %add11 to i64, !dbg !4557
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4557
  %band_type13 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 3, !dbg !4558
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type13, i64 0, i64 %idxprom12, !dbg !4557
  %17 = load i32, i32* %arrayidx14, align 4, !dbg !4557
  %cmp15 = icmp eq i32 %17, 14, !dbg !4559
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !4560

if.then16:                                        ; preds = %lor.lhs.false, %if.end
  %18 = load i32, i32* %w, align 4, !dbg !4561
  %mul17 = mul nsw i32 %18, 16, !dbg !4562
  %19 = load i32, i32* %g, align 4, !dbg !4563
  %add18 = add nsw i32 %mul17, %19, !dbg !4564
  %idxprom19 = sext i32 %add18 to i64, !dbg !4565
  %20 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4565
  %is_ener = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %20, i32 0, i32 10, !dbg !4566
  %arrayidx20 = getelementptr inbounds [128 x float], [128 x float]* %is_ener, i64 0, i64 %idxprom19, !dbg !4565
  %21 = load float, float* %arrayidx20, align 4, !dbg !4565
  %call = call float @log2f(float %21) #9, !dbg !4567
  %mul21 = fmul float %call, 2.000000e+00, !dbg !4568
  %call22 = call float @roundf(float %mul21) #3, !dbg !4569
  %conv = fptosi float %call22 to i32, !dbg !4571
  store i32 %conv, i32* %a.addr.i, align 4, !dbg !4572
  store i32 -155, i32* %amin.addr.i, align 4, !dbg !4572
  store i32 100, i32* %amax.addr.i, align 4, !dbg !4572
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !4573
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !4574
  %cmp.i = icmp slt i32 %22, %23, !dbg !4575
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4576

if.then.i:                                        ; preds = %if.then16
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !4577
  store i32 %24, i32* %retval.i, align 4, !dbg !4578
  br label %av_clip_c.exit, !dbg !4578

if.else.i:                                        ; preds = %if.then16
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !4579
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !4580
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !4581
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4582

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !4583
  store i32 %27, i32* %retval.i, align 4, !dbg !4584
  br label %av_clip_c.exit, !dbg !4584

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !4585
  store i32 %28, i32* %retval.i, align 4, !dbg !4586
  br label %av_clip_c.exit, !dbg !4586

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !4587
  %30 = load i32, i32* %w, align 4, !dbg !4588
  %mul24 = mul nsw i32 %30, 16, !dbg !4589
  %31 = load i32, i32* %g, align 4, !dbg !4590
  %add25 = add nsw i32 %mul24, %31, !dbg !4591
  %idxprom26 = sext i32 %add25 to i64, !dbg !4592
  %32 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4592
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %32, i32 0, i32 7, !dbg !4593
  %arrayidx27 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom26, !dbg !4592
  store i32 %29, i32* %arrayidx27, align 4, !dbg !4594
  %33 = load i32, i32* %bands, align 4, !dbg !4595
  %inc = add nsw i32 %33, 1, !dbg !4595
  store i32 %inc, i32* %bands, align 4, !dbg !4595
  br label %if.end62, !dbg !4596

if.else:                                          ; preds = %lor.lhs.false
  %34 = load i32, i32* %w, align 4, !dbg !4597
  %mul28 = mul nsw i32 %34, 16, !dbg !4599
  %35 = load i32, i32* %g, align 4, !dbg !4600
  %add29 = add nsw i32 %mul28, %35, !dbg !4601
  %idxprom30 = sext i32 %add29 to i64, !dbg !4602
  %36 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4602
  %band_type31 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %36, i32 0, i32 3, !dbg !4603
  %arrayidx32 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type31, i64 0, i64 %idxprom30, !dbg !4602
  %37 = load i32, i32* %arrayidx32, align 4, !dbg !4602
  %cmp33 = icmp eq i32 %37, 13, !dbg !4604
  br i1 %cmp33, label %if.then35, label %if.end61, !dbg !4602

if.then35:                                        ; preds = %if.else
  %38 = load i32, i32* %w, align 4, !dbg !4605
  %mul36 = mul nsw i32 %38, 16, !dbg !4606
  %39 = load i32, i32* %g, align 4, !dbg !4607
  %add37 = add nsw i32 %mul36, %39, !dbg !4608
  %idxprom38 = sext i32 %add37 to i64, !dbg !4609
  %40 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4609
  %pns_ener = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %40, i32 0, i32 11, !dbg !4610
  %arrayidx39 = getelementptr inbounds [128 x float], [128 x float]* %pns_ener, i64 0, i64 %idxprom38, !dbg !4609
  %41 = load float, float* %arrayidx39, align 4, !dbg !4609
  %call40 = call float @log2f(float %41) #9, !dbg !4611
  %mul41 = fmul float %call40, 2.000000e+00, !dbg !4612
  %call42 = call float @ceilf(float %mul41) #3, !dbg !4613
  %add43 = fadd float 3.000000e+00, %call42, !dbg !4615
  %conv44 = fptosi float %add43 to i32, !dbg !4616
  store i32 %conv44, i32* %a.addr.i180, align 4, !dbg !4617
  store i32 -100, i32* %amin.addr.i181, align 4, !dbg !4617
  store i32 155, i32* %amax.addr.i182, align 4, !dbg !4617
  %42 = load i32, i32* %a.addr.i180, align 4, !dbg !4618
  %43 = load i32, i32* %amin.addr.i181, align 4, !dbg !4619
  %cmp.i183 = icmp slt i32 %42, %43, !dbg !4620
  br i1 %cmp.i183, label %if.then.i184, label %if.else.i186, !dbg !4621

if.then.i184:                                     ; preds = %if.then35
  %44 = load i32, i32* %amin.addr.i181, align 4, !dbg !4622
  store i32 %44, i32* %retval.i179, align 4, !dbg !4623
  br label %av_clip_c.exit189, !dbg !4623

if.else.i186:                                     ; preds = %if.then35
  %45 = load i32, i32* %a.addr.i180, align 4, !dbg !4624
  %46 = load i32, i32* %amax.addr.i182, align 4, !dbg !4625
  %cmp1.i185 = icmp sgt i32 %45, %46, !dbg !4626
  br i1 %cmp1.i185, label %if.then2.i187, label %if.else3.i188, !dbg !4627

if.then2.i187:                                    ; preds = %if.else.i186
  %47 = load i32, i32* %amax.addr.i182, align 4, !dbg !4628
  store i32 %47, i32* %retval.i179, align 4, !dbg !4629
  br label %av_clip_c.exit189, !dbg !4629

if.else3.i188:                                    ; preds = %if.else.i186
  %48 = load i32, i32* %a.addr.i180, align 4, !dbg !4630
  store i32 %48, i32* %retval.i179, align 4, !dbg !4631
  br label %av_clip_c.exit189, !dbg !4631

av_clip_c.exit189:                                ; preds = %if.then.i184, %if.then2.i187, %if.else3.i188
  %49 = load i32, i32* %retval.i179, align 4, !dbg !4632
  %50 = load i32, i32* %w, align 4, !dbg !4633
  %mul46 = mul nsw i32 %50, 16, !dbg !4634
  %51 = load i32, i32* %g, align 4, !dbg !4635
  %add47 = add nsw i32 %mul46, %51, !dbg !4636
  %idxprom48 = sext i32 %add47 to i64, !dbg !4637
  %52 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4637
  %sf_idx49 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %52, i32 0, i32 7, !dbg !4638
  %arrayidx50 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx49, i64 0, i64 %idxprom48, !dbg !4637
  store i32 %49, i32* %arrayidx50, align 4, !dbg !4639
  %53 = load i32, i32* %prevscaler_n, align 4, !dbg !4640
  %cmp51 = icmp eq i32 %53, -255, !dbg !4642
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !4643

if.then53:                                        ; preds = %av_clip_c.exit189
  %54 = load i32, i32* %w, align 4, !dbg !4644
  %mul54 = mul nsw i32 %54, 16, !dbg !4645
  %55 = load i32, i32* %g, align 4, !dbg !4646
  %add55 = add nsw i32 %mul54, %55, !dbg !4647
  %idxprom56 = sext i32 %add55 to i64, !dbg !4648
  %56 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4648
  %sf_idx57 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %56, i32 0, i32 7, !dbg !4649
  %arrayidx58 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx57, i64 0, i64 %idxprom56, !dbg !4648
  %57 = load i32, i32* %arrayidx58, align 4, !dbg !4648
  store i32 %57, i32* %prevscaler_n, align 4, !dbg !4650
  br label %if.end59, !dbg !4651

if.end59:                                         ; preds = %if.then53, %av_clip_c.exit189
  %58 = load i32, i32* %bands, align 4, !dbg !4652
  %inc60 = add nsw i32 %58, 1, !dbg !4652
  store i32 %inc60, i32* %bands, align 4, !dbg !4652
  br label %if.end61, !dbg !4653

if.end61:                                         ; preds = %if.end59, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %av_clip_c.exit
  br label %for.inc, !dbg !4654

for.inc:                                          ; preds = %if.end62, %if.then
  %59 = load i32, i32* %g, align 4, !dbg !4655
  %inc63 = add nsw i32 %59, 1, !dbg !4655
  store i32 %inc63, i32* %g, align 4, !dbg !4655
  br label %for.cond1, !dbg !4657, !llvm.loop !4658

for.end:                                          ; preds = %for.cond1
  br label %for.inc64, !dbg !4660

for.inc64:                                        ; preds = %for.end
  %60 = load i32, i32* %w, align 4, !dbg !4661
  %idxprom65 = sext i32 %60 to i64, !dbg !4663
  %61 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4663
  %ics66 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %61, i32 0, i32 0, !dbg !4664
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics66, i32 0, i32 4, !dbg !4665
  %arrayidx67 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom65, !dbg !4663
  %62 = load i8, i8* %arrayidx67, align 1, !dbg !4663
  %conv68 = zext i8 %62 to i32, !dbg !4663
  %63 = load i32, i32* %w, align 4, !dbg !4666
  %add69 = add nsw i32 %63, %conv68, !dbg !4666
  store i32 %add69, i32* %w, align 4, !dbg !4666
  br label %for.cond, !dbg !4667, !llvm.loop !4668

for.end70:                                        ; preds = %for.cond
  %64 = load i32, i32* %bands, align 4, !dbg !4670
  %tobool71 = icmp ne i32 %64, 0, !dbg !4670
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !4672

if.then72:                                        ; preds = %for.end70
  br label %for.end156, !dbg !4673

if.end73:                                         ; preds = %for.end70
  store i32 0, i32* %w, align 4, !dbg !4674
  br label %for.cond74, !dbg !4675

for.cond74:                                       ; preds = %for.inc149, %if.end73
  %65 = load i32, i32* %w, align 4, !dbg !4676
  %66 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4678
  %ics75 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %66, i32 0, i32 0, !dbg !4679
  %num_windows76 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics75, i32 0, i32 9, !dbg !4680
  %67 = load i32, i32* %num_windows76, align 4, !dbg !4680
  %cmp77 = icmp slt i32 %65, %67, !dbg !4681
  br i1 %cmp77, label %for.body79, label %for.end156, !dbg !4682

for.body79:                                       ; preds = %for.cond74
  store i32 0, i32* %g, align 4, !dbg !4683
  br label %for.cond80, !dbg !4684

for.cond80:                                       ; preds = %for.inc146, %for.body79
  %68 = load i32, i32* %g, align 4, !dbg !4685
  %69 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4687
  %ics81 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %69, i32 0, i32 0, !dbg !4688
  %num_swb82 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics81, i32 0, i32 8, !dbg !4689
  %70 = load i32, i32* %num_swb82, align 32, !dbg !4689
  %cmp83 = icmp slt i32 %68, %70, !dbg !4690
  br i1 %cmp83, label %for.body85, label %for.end148, !dbg !4691

for.body85:                                       ; preds = %for.cond80
  %71 = load i32, i32* %w, align 4, !dbg !4692
  %mul86 = mul nsw i32 %71, 16, !dbg !4694
  %72 = load i32, i32* %g, align 4, !dbg !4695
  %add87 = add nsw i32 %mul86, %72, !dbg !4696
  %idxprom88 = sext i32 %add87 to i64, !dbg !4697
  %73 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4697
  %zeroes89 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %73, i32 0, i32 8, !dbg !4698
  %arrayidx90 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes89, i64 0, i64 %idxprom88, !dbg !4697
  %74 = load i8, i8* %arrayidx90, align 1, !dbg !4697
  %tobool91 = icmp ne i8 %74, 0, !dbg !4697
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !4699

if.then92:                                        ; preds = %for.body85
  br label %for.inc146, !dbg !4700

if.end93:                                         ; preds = %for.body85
  %75 = load i32, i32* %w, align 4, !dbg !4701
  %mul94 = mul nsw i32 %75, 16, !dbg !4702
  %76 = load i32, i32* %g, align 4, !dbg !4703
  %add95 = add nsw i32 %mul94, %76, !dbg !4704
  %idxprom96 = sext i32 %add95 to i64, !dbg !4705
  %77 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4705
  %band_type97 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %77, i32 0, i32 3, !dbg !4706
  %arrayidx98 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type97, i64 0, i64 %idxprom96, !dbg !4705
  %78 = load i32, i32* %arrayidx98, align 4, !dbg !4705
  %cmp99 = icmp eq i32 %78, 15, !dbg !4707
  br i1 %cmp99, label %if.then109, label %lor.lhs.false101, !dbg !4708

lor.lhs.false101:                                 ; preds = %if.end93
  %79 = load i32, i32* %w, align 4, !dbg !4709
  %mul102 = mul nsw i32 %79, 16, !dbg !4711
  %80 = load i32, i32* %g, align 4, !dbg !4712
  %add103 = add nsw i32 %mul102, %80, !dbg !4713
  %idxprom104 = sext i32 %add103 to i64, !dbg !4714
  %81 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4714
  %band_type105 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %81, i32 0, i32 3, !dbg !4715
  %arrayidx106 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type105, i64 0, i64 %idxprom104, !dbg !4714
  %82 = load i32, i32* %arrayidx106, align 4, !dbg !4714
  %cmp107 = icmp eq i32 %82, 14, !dbg !4716
  br i1 %cmp107, label %if.then109, label %if.else122, !dbg !4717

if.then109:                                       ; preds = %lor.lhs.false101, %if.end93
  %83 = load i32, i32* %w, align 4, !dbg !4718
  %mul110 = mul nsw i32 %83, 16, !dbg !4719
  %84 = load i32, i32* %g, align 4, !dbg !4720
  %add111 = add nsw i32 %mul110, %84, !dbg !4721
  %idxprom112 = sext i32 %add111 to i64, !dbg !4722
  %85 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4722
  %sf_idx113 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %85, i32 0, i32 7, !dbg !4723
  %arrayidx114 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx113, i64 0, i64 %idxprom112, !dbg !4722
  %86 = load i32, i32* %arrayidx114, align 4, !dbg !4722
  %87 = load i32, i32* %prevscaler_i, align 4, !dbg !4724
  %sub = sub nsw i32 %87, 60, !dbg !4725
  %88 = load i32, i32* %prevscaler_i, align 4, !dbg !4726
  %add115 = add nsw i32 %88, 60, !dbg !4727
  store i32 %86, i32* %a.addr.i169, align 4, !dbg !4728
  store i32 %sub, i32* %amin.addr.i170, align 4, !dbg !4728
  store i32 %add115, i32* %amax.addr.i171, align 4, !dbg !4728
  %89 = load i32, i32* %a.addr.i169, align 4, !dbg !4729
  %90 = load i32, i32* %amin.addr.i170, align 4, !dbg !4730
  %cmp.i172 = icmp slt i32 %89, %90, !dbg !4731
  br i1 %cmp.i172, label %if.then.i173, label %if.else.i175, !dbg !4732

if.then.i173:                                     ; preds = %if.then109
  %91 = load i32, i32* %amin.addr.i170, align 4, !dbg !4733
  store i32 %91, i32* %retval.i168, align 4, !dbg !4734
  br label %av_clip_c.exit178, !dbg !4734

if.else.i175:                                     ; preds = %if.then109
  %92 = load i32, i32* %a.addr.i169, align 4, !dbg !4735
  %93 = load i32, i32* %amax.addr.i171, align 4, !dbg !4736
  %cmp1.i174 = icmp sgt i32 %92, %93, !dbg !4737
  br i1 %cmp1.i174, label %if.then2.i176, label %if.else3.i177, !dbg !4738

if.then2.i176:                                    ; preds = %if.else.i175
  %94 = load i32, i32* %amax.addr.i171, align 4, !dbg !4739
  store i32 %94, i32* %retval.i168, align 4, !dbg !4740
  br label %av_clip_c.exit178, !dbg !4740

if.else3.i177:                                    ; preds = %if.else.i175
  %95 = load i32, i32* %a.addr.i169, align 4, !dbg !4741
  store i32 %95, i32* %retval.i168, align 4, !dbg !4742
  br label %av_clip_c.exit178, !dbg !4742

av_clip_c.exit178:                                ; preds = %if.then.i173, %if.then2.i176, %if.else3.i177
  %96 = load i32, i32* %retval.i168, align 4, !dbg !4743
  store i32 %96, i32* %prevscaler_i, align 4, !dbg !4744
  %97 = load i32, i32* %w, align 4, !dbg !4745
  %mul117 = mul nsw i32 %97, 16, !dbg !4746
  %98 = load i32, i32* %g, align 4, !dbg !4747
  %add118 = add nsw i32 %mul117, %98, !dbg !4748
  %idxprom119 = sext i32 %add118 to i64, !dbg !4749
  %99 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4749
  %sf_idx120 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %99, i32 0, i32 7, !dbg !4750
  %arrayidx121 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx120, i64 0, i64 %idxprom119, !dbg !4749
  store i32 %96, i32* %arrayidx121, align 4, !dbg !4751
  br label %if.end145, !dbg !4752

if.else122:                                       ; preds = %lor.lhs.false101
  %100 = load i32, i32* %w, align 4, !dbg !4753
  %mul123 = mul nsw i32 %100, 16, !dbg !4755
  %101 = load i32, i32* %g, align 4, !dbg !4756
  %add124 = add nsw i32 %mul123, %101, !dbg !4757
  %idxprom125 = sext i32 %add124 to i64, !dbg !4758
  %102 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4758
  %band_type126 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %102, i32 0, i32 3, !dbg !4759
  %arrayidx127 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type126, i64 0, i64 %idxprom125, !dbg !4758
  %103 = load i32, i32* %arrayidx127, align 4, !dbg !4758
  %cmp128 = icmp eq i32 %103, 13, !dbg !4760
  br i1 %cmp128, label %if.then130, label %if.end144, !dbg !4758

if.then130:                                       ; preds = %if.else122
  %104 = load i32, i32* %w, align 4, !dbg !4761
  %mul131 = mul nsw i32 %104, 16, !dbg !4762
  %105 = load i32, i32* %g, align 4, !dbg !4763
  %add132 = add nsw i32 %mul131, %105, !dbg !4764
  %idxprom133 = sext i32 %add132 to i64, !dbg !4765
  %106 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4765
  %sf_idx134 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %106, i32 0, i32 7, !dbg !4766
  %arrayidx135 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx134, i64 0, i64 %idxprom133, !dbg !4765
  %107 = load i32, i32* %arrayidx135, align 4, !dbg !4765
  %108 = load i32, i32* %prevscaler_n, align 4, !dbg !4767
  %sub136 = sub nsw i32 %108, 60, !dbg !4768
  %109 = load i32, i32* %prevscaler_n, align 4, !dbg !4769
  %add137 = add nsw i32 %109, 60, !dbg !4770
  store i32 %107, i32* %a.addr.i158, align 4, !dbg !4771
  store i32 %sub136, i32* %amin.addr.i159, align 4, !dbg !4771
  store i32 %add137, i32* %amax.addr.i160, align 4, !dbg !4771
  %110 = load i32, i32* %a.addr.i158, align 4, !dbg !4772
  %111 = load i32, i32* %amin.addr.i159, align 4, !dbg !4773
  %cmp.i161 = icmp slt i32 %110, %111, !dbg !4774
  br i1 %cmp.i161, label %if.then.i162, label %if.else.i164, !dbg !4775

if.then.i162:                                     ; preds = %if.then130
  %112 = load i32, i32* %amin.addr.i159, align 4, !dbg !4776
  store i32 %112, i32* %retval.i157, align 4, !dbg !4777
  br label %av_clip_c.exit167, !dbg !4777

if.else.i164:                                     ; preds = %if.then130
  %113 = load i32, i32* %a.addr.i158, align 4, !dbg !4778
  %114 = load i32, i32* %amax.addr.i160, align 4, !dbg !4779
  %cmp1.i163 = icmp sgt i32 %113, %114, !dbg !4780
  br i1 %cmp1.i163, label %if.then2.i165, label %if.else3.i166, !dbg !4781

if.then2.i165:                                    ; preds = %if.else.i164
  %115 = load i32, i32* %amax.addr.i160, align 4, !dbg !4782
  store i32 %115, i32* %retval.i157, align 4, !dbg !4783
  br label %av_clip_c.exit167, !dbg !4783

if.else3.i166:                                    ; preds = %if.else.i164
  %116 = load i32, i32* %a.addr.i158, align 4, !dbg !4784
  store i32 %116, i32* %retval.i157, align 4, !dbg !4785
  br label %av_clip_c.exit167, !dbg !4785

av_clip_c.exit167:                                ; preds = %if.then.i162, %if.then2.i165, %if.else3.i166
  %117 = load i32, i32* %retval.i157, align 4, !dbg !4786
  store i32 %117, i32* %prevscaler_n, align 4, !dbg !4787
  %118 = load i32, i32* %w, align 4, !dbg !4788
  %mul139 = mul nsw i32 %118, 16, !dbg !4789
  %119 = load i32, i32* %g, align 4, !dbg !4790
  %add140 = add nsw i32 %mul139, %119, !dbg !4791
  %idxprom141 = sext i32 %add140 to i64, !dbg !4792
  %120 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4792
  %sf_idx142 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %120, i32 0, i32 7, !dbg !4793
  %arrayidx143 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx142, i64 0, i64 %idxprom141, !dbg !4792
  store i32 %117, i32* %arrayidx143, align 4, !dbg !4794
  br label %if.end144, !dbg !4795

if.end144:                                        ; preds = %av_clip_c.exit167, %if.else122
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %av_clip_c.exit178
  br label %for.inc146, !dbg !4796

for.inc146:                                       ; preds = %if.end145, %if.then92
  %121 = load i32, i32* %g, align 4, !dbg !4797
  %inc147 = add nsw i32 %121, 1, !dbg !4797
  store i32 %inc147, i32* %g, align 4, !dbg !4797
  br label %for.cond80, !dbg !4799, !llvm.loop !4800

for.end148:                                       ; preds = %for.cond80
  br label %for.inc149, !dbg !4802

for.inc149:                                       ; preds = %for.end148
  %122 = load i32, i32* %w, align 4, !dbg !4803
  %idxprom150 = sext i32 %122 to i64, !dbg !4805
  %123 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4805
  %ics151 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %123, i32 0, i32 0, !dbg !4806
  %group_len152 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics151, i32 0, i32 4, !dbg !4807
  %arrayidx153 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len152, i64 0, i64 %idxprom150, !dbg !4805
  %124 = load i8, i8* %arrayidx153, align 1, !dbg !4805
  %conv154 = zext i8 %124 to i32, !dbg !4805
  %125 = load i32, i32* %w, align 4, !dbg !4808
  %add155 = add nsw i32 %125, %conv154, !dbg !4808
  store i32 %add155, i32* %w, align 4, !dbg !4808
  br label %for.cond74, !dbg !4809, !llvm.loop !4810

for.end156:                                       ; preds = %if.then72, %for.cond74
  ret void, !dbg !4812
}

; Function Attrs: nounwind uwtable
define internal void @search_for_pns(%struct.AACEncContext* %s, %struct.AVCodecContext* %avctx, %struct.SingleChannelElement* %sce) #0 !dbg !4813 {
entry:
  %previous_val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %previous_val.addr.i, metadata !4816, metadata !2772), !dbg !4821
  %v.i = alloca %union.anon, align 4
  call void @llvm.dbg.declare(metadata %union.anon* %v.i, metadata !4835, metadata !2772), !dbg !4840
  %retval.i = alloca i32, align 4
  %a.addr.i1431 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i1431, metadata !2767, metadata !2772), !dbg !4841
  %amin.addr.i1432 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i1432, metadata !2777, metadata !2772), !dbg !4844
  %amax.addr.i1433 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i1433, metadata !2779, metadata !2772), !dbg !4845
  %a.addr.i1428 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i1428, metadata !4846, metadata !2772), !dbg !4851
  %amin.addr.i1429 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i1429, metadata !4853, metadata !2772), !dbg !4854
  %amax.addr.i1430 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i1430, metadata !4855, metadata !2772), !dbg !4856
  %a.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i, metadata !4846, metadata !2772), !dbg !4857
  %amin.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i, metadata !4853, metadata !2772), !dbg !4859
  %amax.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i, metadata !4855, metadata !2772), !dbg !4860
  %s.addr = alloca %struct.AACEncContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %band = alloca %struct.FFPsyBand*, align 8
  %w = alloca i32, align 4
  %g = alloca i32, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  %wlen = alloca i32, align 4
  %bandwidth = alloca i32, align 4
  %cutoff = alloca i32, align 4
  %PNS = alloca float*, align 8
  %PNS34 = alloca float*, align 8
  %NOR34 = alloca float*, align 8
  %nextband = alloca [128 x i8], align 16
  %lambda = alloca float, align 4
  %freq_mult = alloca float, align 4
  %thr_mult = alloca float, align 4
  %spread_threshold = alloca float, align 4
  %dist_bias = alloca float, align 4
  %pns_transient_energy_r = alloca float, align 4
  %refbits = alloca i32, align 4
  %rate_bandwidth_multiplier = alloca float, align 4
  %prev = alloca i32, align 4
  %prev_sf = alloca i32, align 4
  %frame_bit_rate = alloca i32, align 4
  %wstart = alloca i32, align 4
  %noise_sfi = alloca i32, align 4
  %dist1 = alloca float, align 4
  %dist2 = alloca float, align 4
  %noise_amp = alloca float, align 4
  %pns_energy = alloca float, align 4
  %pns_tgt_energy = alloca float, align 4
  %energy_ratio = alloca float, align 4
  %dist_thresh = alloca float, align 4
  %sfb_energy = alloca float, align 4
  %threshold = alloca float, align 4
  %spread = alloca float, align 4
  %min_energy = alloca float, align 4
  %max_energy = alloca float, align 4
  %start = alloca i32, align 4
  %freq = alloca float, align 4
  %freq_boost = alloca float, align 4
  %noise_sfdiff = alloca i32, align 4
  %band_energy = alloca float, align 4
  %scale = alloca float, align 4
  %pns_senergy = alloca float, align 4
  %start_c = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !4861, metadata !2772), !dbg !4862
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4863, metadata !2772), !dbg !4864
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !4865, metadata !2772), !dbg !4866
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band, metadata !4867, metadata !2772), !dbg !4868
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4869, metadata !2772), !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %g, metadata !4871, metadata !2772), !dbg !4872
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !4873, metadata !2772), !dbg !4874
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4875, metadata !2772), !dbg !4876
  call void @llvm.dbg.declare(metadata i32* %wlen, metadata !4877, metadata !2772), !dbg !4878
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !4879
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !4880
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !4881
  %1 = load i32, i32* %num_windows, align 4, !dbg !4881
  %div = sdiv i32 1024, %1, !dbg !4882
  store i32 %div, i32* %wlen, align 4, !dbg !4878
  call void @llvm.dbg.declare(metadata i32* %bandwidth, metadata !4883, metadata !2772), !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %cutoff, metadata !4885, metadata !2772), !dbg !4886
  call void @llvm.dbg.declare(metadata float** %PNS, metadata !4887, metadata !2772), !dbg !4888
  %2 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4889
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %2, i32 0, i32 29, !dbg !4890
  %arrayidx = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i64 0, i64 0, !dbg !4889
  store float* %arrayidx, float** %PNS, align 8, !dbg !4888
  call void @llvm.dbg.declare(metadata float** %PNS34, metadata !4891, metadata !2772), !dbg !4892
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4893
  %scoefs1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 29, !dbg !4894
  %arrayidx2 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs1, i64 0, i64 128, !dbg !4893
  store float* %arrayidx2, float** %PNS34, align 8, !dbg !4892
  call void @llvm.dbg.declare(metadata float** %NOR34, metadata !4895, metadata !2772), !dbg !4896
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4897
  %scoefs3 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %4, i32 0, i32 29, !dbg !4898
  %arrayidx4 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs3, i64 0, i64 384, !dbg !4897
  store float* %arrayidx4, float** %NOR34, align 8, !dbg !4896
  call void @llvm.dbg.declare(metadata [128 x i8]* %nextband, metadata !4899, metadata !2772), !dbg !4900
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !4901, metadata !2772), !dbg !4902
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4903
  %lambda5 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 22, !dbg !4904
  %6 = load float, float* %lambda5, align 8, !dbg !4904
  store float %6, float* %lambda, align 4, !dbg !4902
  call void @llvm.dbg.declare(metadata float* %freq_mult, metadata !4905, metadata !2772), !dbg !4906
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4907
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 82, !dbg !4908
  %8 = load i32, i32* %sample_rate, align 8, !dbg !4908
  %conv = sitofp i32 %8 to float, !dbg !4907
  %mul = fmul float %conv, 5.000000e-01, !dbg !4909
  %9 = load i32, i32* %wlen, align 4, !dbg !4910
  %conv6 = sitofp i32 %9 to float, !dbg !4910
  %div7 = fdiv float %mul, %conv6, !dbg !4911
  store float %div7, float* %freq_mult, align 4, !dbg !4906
  call void @llvm.dbg.declare(metadata float* %thr_mult, metadata !4912, metadata !2772), !dbg !4913
  %10 = load float, float* %lambda, align 4, !dbg !4914
  %div8 = fdiv float 1.000000e+02, %10, !dbg !4915
  %mul9 = fmul float 0x3FFF2B0200000000, %div8, !dbg !4916
  store float %mul9, float* %thr_mult, align 4, !dbg !4913
  call void @llvm.dbg.declare(metadata float* %spread_threshold, metadata !4917, metadata !2772), !dbg !4918
  %11 = load float, float* %lambda, align 4, !dbg !4919
  %div10 = fdiv float %11, 1.000000e+02, !dbg !4920
  %cmp = fcmp ogt float 5.000000e-01, %div10, !dbg !4921
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4922

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4923

cond.false:                                       ; preds = %entry
  %12 = load float, float* %lambda, align 4, !dbg !4925
  %div12 = fdiv float %12, 1.000000e+02, !dbg !4927
  br label %cond.end, !dbg !4928

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 5.000000e-01, %cond.true ], [ %div12, %cond.false ], !dbg !4929
  %mul13 = fmul float 0x3FECCCCCC0000000, %cond, !dbg !4931
  %cmp14 = fcmp ogt float 7.500000e-01, %mul13, !dbg !4932
  br i1 %cmp14, label %cond.true16, label %cond.false26, !dbg !4933

cond.true16:                                      ; preds = %cond.end
  %13 = load float, float* %lambda, align 4, !dbg !4934
  %div17 = fdiv float %13, 1.000000e+02, !dbg !4936
  %cmp18 = fcmp ogt float 5.000000e-01, %div17, !dbg !4937
  br i1 %cmp18, label %cond.true20, label %cond.false21, !dbg !4938

cond.true20:                                      ; preds = %cond.true16
  br label %cond.end23, !dbg !4939

cond.false21:                                     ; preds = %cond.true16
  %14 = load float, float* %lambda, align 4, !dbg !4941
  %div22 = fdiv float %14, 1.000000e+02, !dbg !4943
  br label %cond.end23, !dbg !4944

cond.end23:                                       ; preds = %cond.false21, %cond.true20
  %cond24 = phi float [ 5.000000e-01, %cond.true20 ], [ %div22, %cond.false21 ], !dbg !4945
  %mul25 = fmul float 0x3FECCCCCC0000000, %cond24, !dbg !4947
  br label %cond.end27, !dbg !4948

cond.false26:                                     ; preds = %cond.end
  br label %cond.end27, !dbg !4949

cond.end27:                                       ; preds = %cond.false26, %cond.end23
  %cond28 = phi float [ %mul25, %cond.end23 ], [ 7.500000e-01, %cond.false26 ], !dbg !4951
  store float %cond28, float* %spread_threshold, align 4, !dbg !4953
  call void @llvm.dbg.declare(metadata float* %dist_bias, metadata !4954, metadata !2772), !dbg !4955
  %15 = load float, float* %lambda, align 4, !dbg !4956
  %div29 = fdiv float 4.800000e+02, %15, !dbg !4957
  store float %div29, float* %a.addr.i, align 4, !dbg !4958
  store float 2.500000e-01, float* %amin.addr.i, align 4, !dbg !4958
  store float 4.000000e+00, float* %amax.addr.i, align 4, !dbg !4958
  %16 = load float, float* %a.addr.i, align 4, !dbg !4959
  %17 = load float, float* %amin.addr.i, align 4, !dbg !4960
  %18 = load float, float* %amax.addr.i, align 4, !dbg !4961
  %19 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %17, float %18, float %16) #10, !dbg !4959, !srcloc !4962
  store float %19, float* %a.addr.i, align 4, !dbg !4959
  %20 = load float, float* %a.addr.i, align 4, !dbg !4963
  store float %20, float* %dist_bias, align 4, !dbg !4955
  call void @llvm.dbg.declare(metadata float* %pns_transient_energy_r, metadata !4964, metadata !2772), !dbg !4965
  %21 = load float, float* %lambda, align 4, !dbg !4966
  %div30 = fdiv float %21, 1.400000e+02, !dbg !4967
  %cmp31 = fcmp ogt float 0x3FE6666660000000, %div30, !dbg !4968
  br i1 %cmp31, label %cond.true33, label %cond.false35, !dbg !4969

cond.true33:                                      ; preds = %cond.end27
  %22 = load float, float* %lambda, align 4, !dbg !4970
  %div34 = fdiv float %22, 1.400000e+02, !dbg !4971
  br label %cond.end36, !dbg !4972

cond.false35:                                     ; preds = %cond.end27
  br label %cond.end36, !dbg !4973

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi float [ %div34, %cond.true33 ], [ 0x3FE6666660000000, %cond.false35 ], !dbg !4974
  store float %cond37, float* %pns_transient_energy_r, align 4, !dbg !4975
  call void @llvm.dbg.declare(metadata i32* %refbits, metadata !4976, metadata !2772), !dbg !4977
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4978
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 9, !dbg !4979
  %24 = load i64, i64* %bit_rate, align 8, !dbg !4979
  %conv38 = sitofp i64 %24 to double, !dbg !4978
  %mul39 = fmul double %conv38, 1.024000e+03, !dbg !4980
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4981
  %sample_rate40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %25, i32 0, i32 82, !dbg !4982
  %26 = load i32, i32* %sample_rate40, align 8, !dbg !4982
  %conv41 = sitofp i32 %26 to double, !dbg !4981
  %div42 = fdiv double %mul39, %conv41, !dbg !4983
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4984
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 13, !dbg !4985
  %28 = load i32, i32* %flags, align 4, !dbg !4985
  %and = and i32 %28, 2, !dbg !4986
  %tobool = icmp ne i32 %and, 0, !dbg !4986
  br i1 %tobool, label %cond.true43, label %cond.false44, !dbg !4987

cond.true43:                                      ; preds = %cond.end36
  br label %cond.end46, !dbg !4988

cond.false44:                                     ; preds = %cond.end36
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4989
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 83, !dbg !4990
  %30 = load i32, i32* %channels, align 4, !dbg !4990
  %conv45 = sitofp i32 %30 to float, !dbg !4989
  br label %cond.end46, !dbg !4991

cond.end46:                                       ; preds = %cond.false44, %cond.true43
  %cond47 = phi float [ 2.000000e+00, %cond.true43 ], [ %conv45, %cond.false44 ], !dbg !4992
  %conv48 = fpext float %cond47 to double, !dbg !4993
  %div49 = fdiv double %div42, %conv48, !dbg !4994
  %31 = load float, float* %lambda, align 4, !dbg !4995
  %div50 = fdiv float %31, 1.200000e+02, !dbg !4996
  %conv51 = fpext float %div50 to double, !dbg !4997
  %mul52 = fmul double %div49, %conv51, !dbg !4998
  %conv53 = fptosi double %mul52 to i32, !dbg !4999
  store i32 %conv53, i32* %refbits, align 4, !dbg !5000
  call void @llvm.dbg.declare(metadata float* %rate_bandwidth_multiplier, metadata !5001, metadata !2772), !dbg !5002
  store float 1.500000e+00, float* %rate_bandwidth_multiplier, align 4, !dbg !5002
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !5003, metadata !2772), !dbg !5004
  store i32 -1000, i32* %prev, align 4, !dbg !5004
  call void @llvm.dbg.declare(metadata i32* %prev_sf, metadata !5005, metadata !2772), !dbg !5006
  store i32 -1, i32* %prev_sf, align 4, !dbg !5006
  call void @llvm.dbg.declare(metadata i32* %frame_bit_rate, metadata !5007, metadata !2772), !dbg !5008
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5009
  %flags54 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 13, !dbg !5010
  %33 = load i32, i32* %flags54, align 4, !dbg !5010
  %and55 = and i32 %33, 2, !dbg !5011
  %tobool56 = icmp ne i32 %and55, 0, !dbg !5011
  br i1 %tobool56, label %cond.true57, label %cond.false64, !dbg !5012

cond.true57:                                      ; preds = %cond.end46
  %34 = load i32, i32* %refbits, align 4, !dbg !5013
  %conv58 = sitofp i32 %34 to float, !dbg !5013
  %35 = load float, float* %rate_bandwidth_multiplier, align 4, !dbg !5014
  %mul59 = fmul float %conv58, %35, !dbg !5015
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5016
  %sample_rate60 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %36, i32 0, i32 82, !dbg !5017
  %37 = load i32, i32* %sample_rate60, align 8, !dbg !5017
  %conv61 = sitofp i32 %37 to float, !dbg !5016
  %mul62 = fmul float %mul59, %conv61, !dbg !5018
  %div63 = fdiv float %mul62, 1.024000e+03, !dbg !5019
  br label %cond.end70, !dbg !5020

cond.false64:                                     ; preds = %cond.end46
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5021
  %bit_rate65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 9, !dbg !5022
  %39 = load i64, i64* %bit_rate65, align 8, !dbg !5022
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5023
  %channels66 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 83, !dbg !5024
  %41 = load i32, i32* %channels66, align 4, !dbg !5024
  %conv67 = sext i32 %41 to i64, !dbg !5023
  %div68 = sdiv i64 %39, %conv67, !dbg !5025
  %conv69 = sitofp i64 %div68 to float, !dbg !5026
  br label %cond.end70, !dbg !5027

cond.end70:                                       ; preds = %cond.false64, %cond.true57
  %cond71 = phi float [ %div63, %cond.true57 ], [ %conv69, %cond.false64 ], !dbg !5028
  %conv72 = fptosi float %cond71 to i32, !dbg !5028
  store i32 %conv72, i32* %frame_bit_rate, align 4, !dbg !5029
  %42 = load i32, i32* %frame_bit_rate, align 4, !dbg !5030
  %conv73 = sitofp i32 %42 to float, !dbg !5030
  %mul74 = fmul float %conv73, 0x3FF2666660000000, !dbg !5030
  %conv75 = fptosi float %mul74 to i32, !dbg !5030
  store i32 %conv75, i32* %frame_bit_rate, align 4, !dbg !5030
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5031
  %cutoff76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 88, !dbg !5033
  %44 = load i32, i32* %cutoff76, align 8, !dbg !5033
  %cmp77 = icmp sgt i32 %44, 0, !dbg !5034
  br i1 %cmp77, label %if.then, label %if.else, !dbg !5035

if.then:                                          ; preds = %cond.end70
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5036
  %cutoff79 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 88, !dbg !5038
  %46 = load i32, i32* %cutoff79, align 8, !dbg !5038
  store i32 %46, i32* %bandwidth, align 4, !dbg !5039
  br label %if.end, !dbg !5040

if.else:                                          ; preds = %cond.end70
  %47 = load i32, i32* %frame_bit_rate, align 4, !dbg !5041
  %tobool80 = icmp ne i32 %47, 0, !dbg !5041
  br i1 %tobool80, label %cond.true81, label %cond.false534, !dbg !5041

cond.true81:                                      ; preds = %if.else
  %48 = load i32, i32* %frame_bit_rate, align 4, !dbg !5043
  %div82 = sdiv i32 %48, 1, !dbg !5045
  %div83 = sdiv i32 %div82, 5, !dbg !5046
  %49 = load i32, i32* %frame_bit_rate, align 4, !dbg !5047
  %div84 = sdiv i32 %49, 1, !dbg !5048
  %mul85 = mul nsw i32 %div84, 15, !dbg !5049
  %div86 = sdiv i32 %mul85, 32, !dbg !5050
  %sub = sub nsw i32 %div86, 5500, !dbg !5051
  %cmp87 = icmp sgt i32 %div83, %sub, !dbg !5052
  br i1 %cmp87, label %cond.true89, label %cond.false92, !dbg !5053

cond.true89:                                      ; preds = %cond.true81
  %50 = load i32, i32* %frame_bit_rate, align 4, !dbg !5054
  %div90 = sdiv i32 %50, 1, !dbg !5056
  %div91 = sdiv i32 %div90, 5, !dbg !5057
  br label %cond.end97, !dbg !5058

cond.false92:                                     ; preds = %cond.true81
  %51 = load i32, i32* %frame_bit_rate, align 4, !dbg !5059
  %div93 = sdiv i32 %51, 1, !dbg !5061
  %mul94 = mul nsw i32 %div93, 15, !dbg !5062
  %div95 = sdiv i32 %mul94, 32, !dbg !5063
  %sub96 = sub nsw i32 %div95, 5500, !dbg !5064
  br label %cond.end97, !dbg !5065

cond.end97:                                       ; preds = %cond.false92, %cond.true89
  %cond98 = phi i32 [ %div91, %cond.true89 ], [ %sub96, %cond.false92 ], !dbg !5066
  %52 = load i32, i32* %frame_bit_rate, align 4, !dbg !5068
  %div99 = sdiv i32 %52, 1, !dbg !5069
  %div100 = sdiv i32 %div99, 4, !dbg !5070
  %add = add nsw i32 3000, %div100, !dbg !5071
  %cmp101 = icmp sgt i32 %cond98, %add, !dbg !5072
  br i1 %cmp101, label %cond.true103, label %cond.false107, !dbg !5073

cond.true103:                                     ; preds = %cond.end97
  %53 = load i32, i32* %frame_bit_rate, align 4, !dbg !5074
  %div104 = sdiv i32 %53, 1, !dbg !5076
  %div105 = sdiv i32 %div104, 4, !dbg !5077
  %add106 = add nsw i32 3000, %div105, !dbg !5078
  br label %cond.end126, !dbg !5079

cond.false107:                                    ; preds = %cond.end97
  %54 = load i32, i32* %frame_bit_rate, align 4, !dbg !5080
  %div108 = sdiv i32 %54, 1, !dbg !5082
  %div109 = sdiv i32 %div108, 5, !dbg !5083
  %55 = load i32, i32* %frame_bit_rate, align 4, !dbg !5084
  %div110 = sdiv i32 %55, 1, !dbg !5085
  %mul111 = mul nsw i32 %div110, 15, !dbg !5086
  %div112 = sdiv i32 %mul111, 32, !dbg !5087
  %sub113 = sub nsw i32 %div112, 5500, !dbg !5088
  %cmp114 = icmp sgt i32 %div109, %sub113, !dbg !5089
  br i1 %cmp114, label %cond.true116, label %cond.false119, !dbg !5090

cond.true116:                                     ; preds = %cond.false107
  %56 = load i32, i32* %frame_bit_rate, align 4, !dbg !5091
  %div117 = sdiv i32 %56, 1, !dbg !5093
  %div118 = sdiv i32 %div117, 5, !dbg !5094
  br label %cond.end124, !dbg !5095

cond.false119:                                    ; preds = %cond.false107
  %57 = load i32, i32* %frame_bit_rate, align 4, !dbg !5096
  %div120 = sdiv i32 %57, 1, !dbg !5098
  %mul121 = mul nsw i32 %div120, 15, !dbg !5099
  %div122 = sdiv i32 %mul121, 32, !dbg !5100
  %sub123 = sub nsw i32 %div122, 5500, !dbg !5101
  br label %cond.end124, !dbg !5102

cond.end124:                                      ; preds = %cond.false119, %cond.true116
  %cond125 = phi i32 [ %div118, %cond.true116 ], [ %sub123, %cond.false119 ], !dbg !5103
  br label %cond.end126, !dbg !5105

cond.end126:                                      ; preds = %cond.end124, %cond.true103
  %cond127 = phi i32 [ %add106, %cond.true103 ], [ %cond125, %cond.end124 ], !dbg !5106
  %58 = load i32, i32* %frame_bit_rate, align 4, !dbg !5108
  %div128 = sdiv i32 %58, 1, !dbg !5109
  %div129 = sdiv i32 %div128, 16, !dbg !5110
  %add130 = add nsw i32 12000, %div129, !dbg !5111
  %cmp131 = icmp sgt i32 %cond127, %add130, !dbg !5112
  br i1 %cmp131, label %cond.true133, label %cond.false137, !dbg !5113

cond.true133:                                     ; preds = %cond.end126
  %59 = load i32, i32* %frame_bit_rate, align 4, !dbg !5114
  %div134 = sdiv i32 %59, 1, !dbg !5116
  %div135 = sdiv i32 %div134, 16, !dbg !5117
  %add136 = add nsw i32 12000, %div135, !dbg !5118
  br label %cond.end186, !dbg !5119

cond.false137:                                    ; preds = %cond.end126
  %60 = load i32, i32* %frame_bit_rate, align 4, !dbg !5120
  %div138 = sdiv i32 %60, 1, !dbg !5122
  %div139 = sdiv i32 %div138, 5, !dbg !5123
  %61 = load i32, i32* %frame_bit_rate, align 4, !dbg !5124
  %div140 = sdiv i32 %61, 1, !dbg !5125
  %mul141 = mul nsw i32 %div140, 15, !dbg !5126
  %div142 = sdiv i32 %mul141, 32, !dbg !5127
  %sub143 = sub nsw i32 %div142, 5500, !dbg !5128
  %cmp144 = icmp sgt i32 %div139, %sub143, !dbg !5129
  br i1 %cmp144, label %cond.true146, label %cond.false149, !dbg !5130

cond.true146:                                     ; preds = %cond.false137
  %62 = load i32, i32* %frame_bit_rate, align 4, !dbg !5131
  %div147 = sdiv i32 %62, 1, !dbg !5133
  %div148 = sdiv i32 %div147, 5, !dbg !5134
  br label %cond.end154, !dbg !5135

cond.false149:                                    ; preds = %cond.false137
  %63 = load i32, i32* %frame_bit_rate, align 4, !dbg !5136
  %div150 = sdiv i32 %63, 1, !dbg !5138
  %mul151 = mul nsw i32 %div150, 15, !dbg !5139
  %div152 = sdiv i32 %mul151, 32, !dbg !5140
  %sub153 = sub nsw i32 %div152, 5500, !dbg !5141
  br label %cond.end154, !dbg !5142

cond.end154:                                      ; preds = %cond.false149, %cond.true146
  %cond155 = phi i32 [ %div148, %cond.true146 ], [ %sub153, %cond.false149 ], !dbg !5143
  %64 = load i32, i32* %frame_bit_rate, align 4, !dbg !5145
  %div156 = sdiv i32 %64, 1, !dbg !5146
  %div157 = sdiv i32 %div156, 4, !dbg !5147
  %add158 = add nsw i32 3000, %div157, !dbg !5148
  %cmp159 = icmp sgt i32 %cond155, %add158, !dbg !5149
  br i1 %cmp159, label %cond.true161, label %cond.false165, !dbg !5150

cond.true161:                                     ; preds = %cond.end154
  %65 = load i32, i32* %frame_bit_rate, align 4, !dbg !5151
  %div162 = sdiv i32 %65, 1, !dbg !5153
  %div163 = sdiv i32 %div162, 4, !dbg !5154
  %add164 = add nsw i32 3000, %div163, !dbg !5155
  br label %cond.end184, !dbg !5156

cond.false165:                                    ; preds = %cond.end154
  %66 = load i32, i32* %frame_bit_rate, align 4, !dbg !5157
  %div166 = sdiv i32 %66, 1, !dbg !5159
  %div167 = sdiv i32 %div166, 5, !dbg !5160
  %67 = load i32, i32* %frame_bit_rate, align 4, !dbg !5161
  %div168 = sdiv i32 %67, 1, !dbg !5162
  %mul169 = mul nsw i32 %div168, 15, !dbg !5163
  %div170 = sdiv i32 %mul169, 32, !dbg !5164
  %sub171 = sub nsw i32 %div170, 5500, !dbg !5165
  %cmp172 = icmp sgt i32 %div167, %sub171, !dbg !5166
  br i1 %cmp172, label %cond.true174, label %cond.false177, !dbg !5167

cond.true174:                                     ; preds = %cond.false165
  %68 = load i32, i32* %frame_bit_rate, align 4, !dbg !5168
  %div175 = sdiv i32 %68, 1, !dbg !5170
  %div176 = sdiv i32 %div175, 5, !dbg !5171
  br label %cond.end182, !dbg !5172

cond.false177:                                    ; preds = %cond.false165
  %69 = load i32, i32* %frame_bit_rate, align 4, !dbg !5173
  %div178 = sdiv i32 %69, 1, !dbg !5175
  %mul179 = mul nsw i32 %div178, 15, !dbg !5176
  %div180 = sdiv i32 %mul179, 32, !dbg !5177
  %sub181 = sub nsw i32 %div180, 5500, !dbg !5178
  br label %cond.end182, !dbg !5179

cond.end182:                                      ; preds = %cond.false177, %cond.true174
  %cond183 = phi i32 [ %div176, %cond.true174 ], [ %sub181, %cond.false177 ], !dbg !5180
  br label %cond.end184, !dbg !5182

cond.end184:                                      ; preds = %cond.end182, %cond.true161
  %cond185 = phi i32 [ %add164, %cond.true161 ], [ %cond183, %cond.end182 ], !dbg !5183
  br label %cond.end186, !dbg !5185

cond.end186:                                      ; preds = %cond.end184, %cond.true133
  %cond187 = phi i32 [ %add136, %cond.true133 ], [ %cond185, %cond.end184 ], !dbg !5186
  %cmp188 = icmp sgt i32 %cond187, 22000, !dbg !5188
  br i1 %cmp188, label %cond.true190, label %cond.false191, !dbg !5189

cond.true190:                                     ; preds = %cond.end186
  br label %cond.end300, !dbg !5190

cond.false191:                                    ; preds = %cond.end186
  %70 = load i32, i32* %frame_bit_rate, align 4, !dbg !5192
  %div192 = sdiv i32 %70, 1, !dbg !5194
  %div193 = sdiv i32 %div192, 5, !dbg !5195
  %71 = load i32, i32* %frame_bit_rate, align 4, !dbg !5196
  %div194 = sdiv i32 %71, 1, !dbg !5197
  %mul195 = mul nsw i32 %div194, 15, !dbg !5198
  %div196 = sdiv i32 %mul195, 32, !dbg !5199
  %sub197 = sub nsw i32 %div196, 5500, !dbg !5200
  %cmp198 = icmp sgt i32 %div193, %sub197, !dbg !5201
  br i1 %cmp198, label %cond.true200, label %cond.false203, !dbg !5202

cond.true200:                                     ; preds = %cond.false191
  %72 = load i32, i32* %frame_bit_rate, align 4, !dbg !5203
  %div201 = sdiv i32 %72, 1, !dbg !5205
  %div202 = sdiv i32 %div201, 5, !dbg !5206
  br label %cond.end208, !dbg !5207

cond.false203:                                    ; preds = %cond.false191
  %73 = load i32, i32* %frame_bit_rate, align 4, !dbg !5208
  %div204 = sdiv i32 %73, 1, !dbg !5210
  %mul205 = mul nsw i32 %div204, 15, !dbg !5211
  %div206 = sdiv i32 %mul205, 32, !dbg !5212
  %sub207 = sub nsw i32 %div206, 5500, !dbg !5213
  br label %cond.end208, !dbg !5214

cond.end208:                                      ; preds = %cond.false203, %cond.true200
  %cond209 = phi i32 [ %div202, %cond.true200 ], [ %sub207, %cond.false203 ], !dbg !5215
  %74 = load i32, i32* %frame_bit_rate, align 4, !dbg !5217
  %div210 = sdiv i32 %74, 1, !dbg !5218
  %div211 = sdiv i32 %div210, 4, !dbg !5219
  %add212 = add nsw i32 3000, %div211, !dbg !5220
  %cmp213 = icmp sgt i32 %cond209, %add212, !dbg !5221
  br i1 %cmp213, label %cond.true215, label %cond.false219, !dbg !5222

cond.true215:                                     ; preds = %cond.end208
  %75 = load i32, i32* %frame_bit_rate, align 4, !dbg !5223
  %div216 = sdiv i32 %75, 1, !dbg !5225
  %div217 = sdiv i32 %div216, 4, !dbg !5226
  %add218 = add nsw i32 3000, %div217, !dbg !5227
  br label %cond.end238, !dbg !5228

cond.false219:                                    ; preds = %cond.end208
  %76 = load i32, i32* %frame_bit_rate, align 4, !dbg !5229
  %div220 = sdiv i32 %76, 1, !dbg !5231
  %div221 = sdiv i32 %div220, 5, !dbg !5232
  %77 = load i32, i32* %frame_bit_rate, align 4, !dbg !5233
  %div222 = sdiv i32 %77, 1, !dbg !5234
  %mul223 = mul nsw i32 %div222, 15, !dbg !5235
  %div224 = sdiv i32 %mul223, 32, !dbg !5236
  %sub225 = sub nsw i32 %div224, 5500, !dbg !5237
  %cmp226 = icmp sgt i32 %div221, %sub225, !dbg !5238
  br i1 %cmp226, label %cond.true228, label %cond.false231, !dbg !5239

cond.true228:                                     ; preds = %cond.false219
  %78 = load i32, i32* %frame_bit_rate, align 4, !dbg !5240
  %div229 = sdiv i32 %78, 1, !dbg !5242
  %div230 = sdiv i32 %div229, 5, !dbg !5243
  br label %cond.end236, !dbg !5244

cond.false231:                                    ; preds = %cond.false219
  %79 = load i32, i32* %frame_bit_rate, align 4, !dbg !5245
  %div232 = sdiv i32 %79, 1, !dbg !5247
  %mul233 = mul nsw i32 %div232, 15, !dbg !5248
  %div234 = sdiv i32 %mul233, 32, !dbg !5249
  %sub235 = sub nsw i32 %div234, 5500, !dbg !5250
  br label %cond.end236, !dbg !5251

cond.end236:                                      ; preds = %cond.false231, %cond.true228
  %cond237 = phi i32 [ %div230, %cond.true228 ], [ %sub235, %cond.false231 ], !dbg !5252
  br label %cond.end238, !dbg !5254

cond.end238:                                      ; preds = %cond.end236, %cond.true215
  %cond239 = phi i32 [ %add218, %cond.true215 ], [ %cond237, %cond.end236 ], !dbg !5255
  %80 = load i32, i32* %frame_bit_rate, align 4, !dbg !5257
  %div240 = sdiv i32 %80, 1, !dbg !5258
  %div241 = sdiv i32 %div240, 16, !dbg !5259
  %add242 = add nsw i32 12000, %div241, !dbg !5260
  %cmp243 = icmp sgt i32 %cond239, %add242, !dbg !5261
  br i1 %cmp243, label %cond.true245, label %cond.false249, !dbg !5262

cond.true245:                                     ; preds = %cond.end238
  %81 = load i32, i32* %frame_bit_rate, align 4, !dbg !5263
  %div246 = sdiv i32 %81, 1, !dbg !5265
  %div247 = sdiv i32 %div246, 16, !dbg !5266
  %add248 = add nsw i32 12000, %div247, !dbg !5267
  br label %cond.end298, !dbg !5268

cond.false249:                                    ; preds = %cond.end238
  %82 = load i32, i32* %frame_bit_rate, align 4, !dbg !5269
  %div250 = sdiv i32 %82, 1, !dbg !5271
  %div251 = sdiv i32 %div250, 5, !dbg !5272
  %83 = load i32, i32* %frame_bit_rate, align 4, !dbg !5273
  %div252 = sdiv i32 %83, 1, !dbg !5274
  %mul253 = mul nsw i32 %div252, 15, !dbg !5275
  %div254 = sdiv i32 %mul253, 32, !dbg !5276
  %sub255 = sub nsw i32 %div254, 5500, !dbg !5277
  %cmp256 = icmp sgt i32 %div251, %sub255, !dbg !5278
  br i1 %cmp256, label %cond.true258, label %cond.false261, !dbg !5279

cond.true258:                                     ; preds = %cond.false249
  %84 = load i32, i32* %frame_bit_rate, align 4, !dbg !5280
  %div259 = sdiv i32 %84, 1, !dbg !5282
  %div260 = sdiv i32 %div259, 5, !dbg !5283
  br label %cond.end266, !dbg !5284

cond.false261:                                    ; preds = %cond.false249
  %85 = load i32, i32* %frame_bit_rate, align 4, !dbg !5285
  %div262 = sdiv i32 %85, 1, !dbg !5287
  %mul263 = mul nsw i32 %div262, 15, !dbg !5288
  %div264 = sdiv i32 %mul263, 32, !dbg !5289
  %sub265 = sub nsw i32 %div264, 5500, !dbg !5290
  br label %cond.end266, !dbg !5291

cond.end266:                                      ; preds = %cond.false261, %cond.true258
  %cond267 = phi i32 [ %div260, %cond.true258 ], [ %sub265, %cond.false261 ], !dbg !5292
  %86 = load i32, i32* %frame_bit_rate, align 4, !dbg !5294
  %div268 = sdiv i32 %86, 1, !dbg !5295
  %div269 = sdiv i32 %div268, 4, !dbg !5296
  %add270 = add nsw i32 3000, %div269, !dbg !5297
  %cmp271 = icmp sgt i32 %cond267, %add270, !dbg !5298
  br i1 %cmp271, label %cond.true273, label %cond.false277, !dbg !5299

cond.true273:                                     ; preds = %cond.end266
  %87 = load i32, i32* %frame_bit_rate, align 4, !dbg !5300
  %div274 = sdiv i32 %87, 1, !dbg !5302
  %div275 = sdiv i32 %div274, 4, !dbg !5303
  %add276 = add nsw i32 3000, %div275, !dbg !5304
  br label %cond.end296, !dbg !5305

cond.false277:                                    ; preds = %cond.end266
  %88 = load i32, i32* %frame_bit_rate, align 4, !dbg !5306
  %div278 = sdiv i32 %88, 1, !dbg !5308
  %div279 = sdiv i32 %div278, 5, !dbg !5309
  %89 = load i32, i32* %frame_bit_rate, align 4, !dbg !5310
  %div280 = sdiv i32 %89, 1, !dbg !5311
  %mul281 = mul nsw i32 %div280, 15, !dbg !5312
  %div282 = sdiv i32 %mul281, 32, !dbg !5313
  %sub283 = sub nsw i32 %div282, 5500, !dbg !5314
  %cmp284 = icmp sgt i32 %div279, %sub283, !dbg !5315
  br i1 %cmp284, label %cond.true286, label %cond.false289, !dbg !5316

cond.true286:                                     ; preds = %cond.false277
  %90 = load i32, i32* %frame_bit_rate, align 4, !dbg !5317
  %div287 = sdiv i32 %90, 1, !dbg !5319
  %div288 = sdiv i32 %div287, 5, !dbg !5320
  br label %cond.end294, !dbg !5321

cond.false289:                                    ; preds = %cond.false277
  %91 = load i32, i32* %frame_bit_rate, align 4, !dbg !5322
  %div290 = sdiv i32 %91, 1, !dbg !5324
  %mul291 = mul nsw i32 %div290, 15, !dbg !5325
  %div292 = sdiv i32 %mul291, 32, !dbg !5326
  %sub293 = sub nsw i32 %div292, 5500, !dbg !5327
  br label %cond.end294, !dbg !5328

cond.end294:                                      ; preds = %cond.false289, %cond.true286
  %cond295 = phi i32 [ %div288, %cond.true286 ], [ %sub293, %cond.false289 ], !dbg !5329
  br label %cond.end296, !dbg !5331

cond.end296:                                      ; preds = %cond.end294, %cond.true273
  %cond297 = phi i32 [ %add276, %cond.true273 ], [ %cond295, %cond.end294 ], !dbg !5332
  br label %cond.end298, !dbg !5334

cond.end298:                                      ; preds = %cond.end296, %cond.true245
  %cond299 = phi i32 [ %add248, %cond.true245 ], [ %cond297, %cond.end296 ], !dbg !5335
  br label %cond.end300, !dbg !5337

cond.end300:                                      ; preds = %cond.end298, %cond.true190
  %cond301 = phi i32 [ 22000, %cond.true190 ], [ %cond299, %cond.end298 ], !dbg !5338
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5340
  %sample_rate302 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %92, i32 0, i32 82, !dbg !5341
  %93 = load i32, i32* %sample_rate302, align 8, !dbg !5341
  %div303 = sdiv i32 %93, 2, !dbg !5342
  %cmp304 = icmp sgt i32 %cond301, %div303, !dbg !5343
  br i1 %cmp304, label %cond.true306, label %cond.false309, !dbg !5344

cond.true306:                                     ; preds = %cond.end300
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5345
  %sample_rate307 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %94, i32 0, i32 82, !dbg !5347
  %95 = load i32, i32* %sample_rate307, align 8, !dbg !5347
  %div308 = sdiv i32 %95, 2, !dbg !5348
  br label %cond.end532, !dbg !5349

cond.false309:                                    ; preds = %cond.end300
  %96 = load i32, i32* %frame_bit_rate, align 4, !dbg !5350
  %div310 = sdiv i32 %96, 1, !dbg !5352
  %div311 = sdiv i32 %div310, 5, !dbg !5353
  %97 = load i32, i32* %frame_bit_rate, align 4, !dbg !5354
  %div312 = sdiv i32 %97, 1, !dbg !5355
  %mul313 = mul nsw i32 %div312, 15, !dbg !5356
  %div314 = sdiv i32 %mul313, 32, !dbg !5357
  %sub315 = sub nsw i32 %div314, 5500, !dbg !5358
  %cmp316 = icmp sgt i32 %div311, %sub315, !dbg !5359
  br i1 %cmp316, label %cond.true318, label %cond.false321, !dbg !5360

cond.true318:                                     ; preds = %cond.false309
  %98 = load i32, i32* %frame_bit_rate, align 4, !dbg !5361
  %div319 = sdiv i32 %98, 1, !dbg !5363
  %div320 = sdiv i32 %div319, 5, !dbg !5364
  br label %cond.end326, !dbg !5365

cond.false321:                                    ; preds = %cond.false309
  %99 = load i32, i32* %frame_bit_rate, align 4, !dbg !5366
  %div322 = sdiv i32 %99, 1, !dbg !5368
  %mul323 = mul nsw i32 %div322, 15, !dbg !5369
  %div324 = sdiv i32 %mul323, 32, !dbg !5370
  %sub325 = sub nsw i32 %div324, 5500, !dbg !5371
  br label %cond.end326, !dbg !5372

cond.end326:                                      ; preds = %cond.false321, %cond.true318
  %cond327 = phi i32 [ %div320, %cond.true318 ], [ %sub325, %cond.false321 ], !dbg !5373
  %100 = load i32, i32* %frame_bit_rate, align 4, !dbg !5375
  %div328 = sdiv i32 %100, 1, !dbg !5376
  %div329 = sdiv i32 %div328, 4, !dbg !5377
  %add330 = add nsw i32 3000, %div329, !dbg !5378
  %cmp331 = icmp sgt i32 %cond327, %add330, !dbg !5379
  br i1 %cmp331, label %cond.true333, label %cond.false337, !dbg !5380

cond.true333:                                     ; preds = %cond.end326
  %101 = load i32, i32* %frame_bit_rate, align 4, !dbg !5381
  %div334 = sdiv i32 %101, 1, !dbg !5383
  %div335 = sdiv i32 %div334, 4, !dbg !5384
  %add336 = add nsw i32 3000, %div335, !dbg !5385
  br label %cond.end356, !dbg !5386

cond.false337:                                    ; preds = %cond.end326
  %102 = load i32, i32* %frame_bit_rate, align 4, !dbg !5387
  %div338 = sdiv i32 %102, 1, !dbg !5389
  %div339 = sdiv i32 %div338, 5, !dbg !5390
  %103 = load i32, i32* %frame_bit_rate, align 4, !dbg !5391
  %div340 = sdiv i32 %103, 1, !dbg !5392
  %mul341 = mul nsw i32 %div340, 15, !dbg !5393
  %div342 = sdiv i32 %mul341, 32, !dbg !5394
  %sub343 = sub nsw i32 %div342, 5500, !dbg !5395
  %cmp344 = icmp sgt i32 %div339, %sub343, !dbg !5396
  br i1 %cmp344, label %cond.true346, label %cond.false349, !dbg !5397

cond.true346:                                     ; preds = %cond.false337
  %104 = load i32, i32* %frame_bit_rate, align 4, !dbg !5398
  %div347 = sdiv i32 %104, 1, !dbg !5400
  %div348 = sdiv i32 %div347, 5, !dbg !5401
  br label %cond.end354, !dbg !5402

cond.false349:                                    ; preds = %cond.false337
  %105 = load i32, i32* %frame_bit_rate, align 4, !dbg !5403
  %div350 = sdiv i32 %105, 1, !dbg !5405
  %mul351 = mul nsw i32 %div350, 15, !dbg !5406
  %div352 = sdiv i32 %mul351, 32, !dbg !5407
  %sub353 = sub nsw i32 %div352, 5500, !dbg !5408
  br label %cond.end354, !dbg !5409

cond.end354:                                      ; preds = %cond.false349, %cond.true346
  %cond355 = phi i32 [ %div348, %cond.true346 ], [ %sub353, %cond.false349 ], !dbg !5410
  br label %cond.end356, !dbg !5412

cond.end356:                                      ; preds = %cond.end354, %cond.true333
  %cond357 = phi i32 [ %add336, %cond.true333 ], [ %cond355, %cond.end354 ], !dbg !5413
  %106 = load i32, i32* %frame_bit_rate, align 4, !dbg !5415
  %div358 = sdiv i32 %106, 1, !dbg !5416
  %div359 = sdiv i32 %div358, 16, !dbg !5417
  %add360 = add nsw i32 12000, %div359, !dbg !5418
  %cmp361 = icmp sgt i32 %cond357, %add360, !dbg !5419
  br i1 %cmp361, label %cond.true363, label %cond.false367, !dbg !5420

cond.true363:                                     ; preds = %cond.end356
  %107 = load i32, i32* %frame_bit_rate, align 4, !dbg !5421
  %div364 = sdiv i32 %107, 1, !dbg !5423
  %div365 = sdiv i32 %div364, 16, !dbg !5424
  %add366 = add nsw i32 12000, %div365, !dbg !5425
  br label %cond.end416, !dbg !5426

cond.false367:                                    ; preds = %cond.end356
  %108 = load i32, i32* %frame_bit_rate, align 4, !dbg !5427
  %div368 = sdiv i32 %108, 1, !dbg !5429
  %div369 = sdiv i32 %div368, 5, !dbg !5430
  %109 = load i32, i32* %frame_bit_rate, align 4, !dbg !5431
  %div370 = sdiv i32 %109, 1, !dbg !5432
  %mul371 = mul nsw i32 %div370, 15, !dbg !5433
  %div372 = sdiv i32 %mul371, 32, !dbg !5434
  %sub373 = sub nsw i32 %div372, 5500, !dbg !5435
  %cmp374 = icmp sgt i32 %div369, %sub373, !dbg !5436
  br i1 %cmp374, label %cond.true376, label %cond.false379, !dbg !5437

cond.true376:                                     ; preds = %cond.false367
  %110 = load i32, i32* %frame_bit_rate, align 4, !dbg !5438
  %div377 = sdiv i32 %110, 1, !dbg !5440
  %div378 = sdiv i32 %div377, 5, !dbg !5441
  br label %cond.end384, !dbg !5442

cond.false379:                                    ; preds = %cond.false367
  %111 = load i32, i32* %frame_bit_rate, align 4, !dbg !5443
  %div380 = sdiv i32 %111, 1, !dbg !5445
  %mul381 = mul nsw i32 %div380, 15, !dbg !5446
  %div382 = sdiv i32 %mul381, 32, !dbg !5447
  %sub383 = sub nsw i32 %div382, 5500, !dbg !5448
  br label %cond.end384, !dbg !5449

cond.end384:                                      ; preds = %cond.false379, %cond.true376
  %cond385 = phi i32 [ %div378, %cond.true376 ], [ %sub383, %cond.false379 ], !dbg !5450
  %112 = load i32, i32* %frame_bit_rate, align 4, !dbg !5452
  %div386 = sdiv i32 %112, 1, !dbg !5453
  %div387 = sdiv i32 %div386, 4, !dbg !5454
  %add388 = add nsw i32 3000, %div387, !dbg !5455
  %cmp389 = icmp sgt i32 %cond385, %add388, !dbg !5456
  br i1 %cmp389, label %cond.true391, label %cond.false395, !dbg !5457

cond.true391:                                     ; preds = %cond.end384
  %113 = load i32, i32* %frame_bit_rate, align 4, !dbg !5458
  %div392 = sdiv i32 %113, 1, !dbg !5460
  %div393 = sdiv i32 %div392, 4, !dbg !5461
  %add394 = add nsw i32 3000, %div393, !dbg !5462
  br label %cond.end414, !dbg !5463

cond.false395:                                    ; preds = %cond.end384
  %114 = load i32, i32* %frame_bit_rate, align 4, !dbg !5464
  %div396 = sdiv i32 %114, 1, !dbg !5466
  %div397 = sdiv i32 %div396, 5, !dbg !5467
  %115 = load i32, i32* %frame_bit_rate, align 4, !dbg !5468
  %div398 = sdiv i32 %115, 1, !dbg !5469
  %mul399 = mul nsw i32 %div398, 15, !dbg !5470
  %div400 = sdiv i32 %mul399, 32, !dbg !5471
  %sub401 = sub nsw i32 %div400, 5500, !dbg !5472
  %cmp402 = icmp sgt i32 %div397, %sub401, !dbg !5473
  br i1 %cmp402, label %cond.true404, label %cond.false407, !dbg !5474

cond.true404:                                     ; preds = %cond.false395
  %116 = load i32, i32* %frame_bit_rate, align 4, !dbg !5475
  %div405 = sdiv i32 %116, 1, !dbg !5477
  %div406 = sdiv i32 %div405, 5, !dbg !5478
  br label %cond.end412, !dbg !5479

cond.false407:                                    ; preds = %cond.false395
  %117 = load i32, i32* %frame_bit_rate, align 4, !dbg !5480
  %div408 = sdiv i32 %117, 1, !dbg !5482
  %mul409 = mul nsw i32 %div408, 15, !dbg !5483
  %div410 = sdiv i32 %mul409, 32, !dbg !5484
  %sub411 = sub nsw i32 %div410, 5500, !dbg !5485
  br label %cond.end412, !dbg !5486

cond.end412:                                      ; preds = %cond.false407, %cond.true404
  %cond413 = phi i32 [ %div406, %cond.true404 ], [ %sub411, %cond.false407 ], !dbg !5487
  br label %cond.end414, !dbg !5489

cond.end414:                                      ; preds = %cond.end412, %cond.true391
  %cond415 = phi i32 [ %add394, %cond.true391 ], [ %cond413, %cond.end412 ], !dbg !5490
  br label %cond.end416, !dbg !5492

cond.end416:                                      ; preds = %cond.end414, %cond.true363
  %cond417 = phi i32 [ %add366, %cond.true363 ], [ %cond415, %cond.end414 ], !dbg !5493
  %cmp418 = icmp sgt i32 %cond417, 22000, !dbg !5495
  br i1 %cmp418, label %cond.true420, label %cond.false421, !dbg !5496

cond.true420:                                     ; preds = %cond.end416
  br label %cond.end530, !dbg !5497

cond.false421:                                    ; preds = %cond.end416
  %118 = load i32, i32* %frame_bit_rate, align 4, !dbg !5499
  %div422 = sdiv i32 %118, 1, !dbg !5501
  %div423 = sdiv i32 %div422, 5, !dbg !5502
  %119 = load i32, i32* %frame_bit_rate, align 4, !dbg !5503
  %div424 = sdiv i32 %119, 1, !dbg !5504
  %mul425 = mul nsw i32 %div424, 15, !dbg !5505
  %div426 = sdiv i32 %mul425, 32, !dbg !5506
  %sub427 = sub nsw i32 %div426, 5500, !dbg !5507
  %cmp428 = icmp sgt i32 %div423, %sub427, !dbg !5508
  br i1 %cmp428, label %cond.true430, label %cond.false433, !dbg !5509

cond.true430:                                     ; preds = %cond.false421
  %120 = load i32, i32* %frame_bit_rate, align 4, !dbg !5510
  %div431 = sdiv i32 %120, 1, !dbg !5512
  %div432 = sdiv i32 %div431, 5, !dbg !5513
  br label %cond.end438, !dbg !5514

cond.false433:                                    ; preds = %cond.false421
  %121 = load i32, i32* %frame_bit_rate, align 4, !dbg !5515
  %div434 = sdiv i32 %121, 1, !dbg !5517
  %mul435 = mul nsw i32 %div434, 15, !dbg !5518
  %div436 = sdiv i32 %mul435, 32, !dbg !5519
  %sub437 = sub nsw i32 %div436, 5500, !dbg !5520
  br label %cond.end438, !dbg !5521

cond.end438:                                      ; preds = %cond.false433, %cond.true430
  %cond439 = phi i32 [ %div432, %cond.true430 ], [ %sub437, %cond.false433 ], !dbg !5522
  %122 = load i32, i32* %frame_bit_rate, align 4, !dbg !5524
  %div440 = sdiv i32 %122, 1, !dbg !5525
  %div441 = sdiv i32 %div440, 4, !dbg !5526
  %add442 = add nsw i32 3000, %div441, !dbg !5527
  %cmp443 = icmp sgt i32 %cond439, %add442, !dbg !5528
  br i1 %cmp443, label %cond.true445, label %cond.false449, !dbg !5529

cond.true445:                                     ; preds = %cond.end438
  %123 = load i32, i32* %frame_bit_rate, align 4, !dbg !5530
  %div446 = sdiv i32 %123, 1, !dbg !5532
  %div447 = sdiv i32 %div446, 4, !dbg !5533
  %add448 = add nsw i32 3000, %div447, !dbg !5534
  br label %cond.end468, !dbg !5535

cond.false449:                                    ; preds = %cond.end438
  %124 = load i32, i32* %frame_bit_rate, align 4, !dbg !5536
  %div450 = sdiv i32 %124, 1, !dbg !5538
  %div451 = sdiv i32 %div450, 5, !dbg !5539
  %125 = load i32, i32* %frame_bit_rate, align 4, !dbg !5540
  %div452 = sdiv i32 %125, 1, !dbg !5541
  %mul453 = mul nsw i32 %div452, 15, !dbg !5542
  %div454 = sdiv i32 %mul453, 32, !dbg !5543
  %sub455 = sub nsw i32 %div454, 5500, !dbg !5544
  %cmp456 = icmp sgt i32 %div451, %sub455, !dbg !5545
  br i1 %cmp456, label %cond.true458, label %cond.false461, !dbg !5546

cond.true458:                                     ; preds = %cond.false449
  %126 = load i32, i32* %frame_bit_rate, align 4, !dbg !5547
  %div459 = sdiv i32 %126, 1, !dbg !5549
  %div460 = sdiv i32 %div459, 5, !dbg !5550
  br label %cond.end466, !dbg !5551

cond.false461:                                    ; preds = %cond.false449
  %127 = load i32, i32* %frame_bit_rate, align 4, !dbg !5552
  %div462 = sdiv i32 %127, 1, !dbg !5554
  %mul463 = mul nsw i32 %div462, 15, !dbg !5555
  %div464 = sdiv i32 %mul463, 32, !dbg !5556
  %sub465 = sub nsw i32 %div464, 5500, !dbg !5557
  br label %cond.end466, !dbg !5558

cond.end466:                                      ; preds = %cond.false461, %cond.true458
  %cond467 = phi i32 [ %div460, %cond.true458 ], [ %sub465, %cond.false461 ], !dbg !5559
  br label %cond.end468, !dbg !5561

cond.end468:                                      ; preds = %cond.end466, %cond.true445
  %cond469 = phi i32 [ %add448, %cond.true445 ], [ %cond467, %cond.end466 ], !dbg !5562
  %128 = load i32, i32* %frame_bit_rate, align 4, !dbg !5564
  %div470 = sdiv i32 %128, 1, !dbg !5565
  %div471 = sdiv i32 %div470, 16, !dbg !5566
  %add472 = add nsw i32 12000, %div471, !dbg !5567
  %cmp473 = icmp sgt i32 %cond469, %add472, !dbg !5568
  br i1 %cmp473, label %cond.true475, label %cond.false479, !dbg !5569

cond.true475:                                     ; preds = %cond.end468
  %129 = load i32, i32* %frame_bit_rate, align 4, !dbg !5570
  %div476 = sdiv i32 %129, 1, !dbg !5572
  %div477 = sdiv i32 %div476, 16, !dbg !5573
  %add478 = add nsw i32 12000, %div477, !dbg !5574
  br label %cond.end528, !dbg !5575

cond.false479:                                    ; preds = %cond.end468
  %130 = load i32, i32* %frame_bit_rate, align 4, !dbg !5576
  %div480 = sdiv i32 %130, 1, !dbg !5578
  %div481 = sdiv i32 %div480, 5, !dbg !5579
  %131 = load i32, i32* %frame_bit_rate, align 4, !dbg !5580
  %div482 = sdiv i32 %131, 1, !dbg !5581
  %mul483 = mul nsw i32 %div482, 15, !dbg !5582
  %div484 = sdiv i32 %mul483, 32, !dbg !5583
  %sub485 = sub nsw i32 %div484, 5500, !dbg !5584
  %cmp486 = icmp sgt i32 %div481, %sub485, !dbg !5585
  br i1 %cmp486, label %cond.true488, label %cond.false491, !dbg !5586

cond.true488:                                     ; preds = %cond.false479
  %132 = load i32, i32* %frame_bit_rate, align 4, !dbg !5587
  %div489 = sdiv i32 %132, 1, !dbg !5589
  %div490 = sdiv i32 %div489, 5, !dbg !5590
  br label %cond.end496, !dbg !5591

cond.false491:                                    ; preds = %cond.false479
  %133 = load i32, i32* %frame_bit_rate, align 4, !dbg !5592
  %div492 = sdiv i32 %133, 1, !dbg !5594
  %mul493 = mul nsw i32 %div492, 15, !dbg !5595
  %div494 = sdiv i32 %mul493, 32, !dbg !5596
  %sub495 = sub nsw i32 %div494, 5500, !dbg !5597
  br label %cond.end496, !dbg !5598

cond.end496:                                      ; preds = %cond.false491, %cond.true488
  %cond497 = phi i32 [ %div490, %cond.true488 ], [ %sub495, %cond.false491 ], !dbg !5599
  %134 = load i32, i32* %frame_bit_rate, align 4, !dbg !5601
  %div498 = sdiv i32 %134, 1, !dbg !5602
  %div499 = sdiv i32 %div498, 4, !dbg !5603
  %add500 = add nsw i32 3000, %div499, !dbg !5604
  %cmp501 = icmp sgt i32 %cond497, %add500, !dbg !5605
  br i1 %cmp501, label %cond.true503, label %cond.false507, !dbg !5606

cond.true503:                                     ; preds = %cond.end496
  %135 = load i32, i32* %frame_bit_rate, align 4, !dbg !5607
  %div504 = sdiv i32 %135, 1, !dbg !5609
  %div505 = sdiv i32 %div504, 4, !dbg !5610
  %add506 = add nsw i32 3000, %div505, !dbg !5611
  br label %cond.end526, !dbg !5612

cond.false507:                                    ; preds = %cond.end496
  %136 = load i32, i32* %frame_bit_rate, align 4, !dbg !5613
  %div508 = sdiv i32 %136, 1, !dbg !5615
  %div509 = sdiv i32 %div508, 5, !dbg !5616
  %137 = load i32, i32* %frame_bit_rate, align 4, !dbg !5617
  %div510 = sdiv i32 %137, 1, !dbg !5618
  %mul511 = mul nsw i32 %div510, 15, !dbg !5619
  %div512 = sdiv i32 %mul511, 32, !dbg !5620
  %sub513 = sub nsw i32 %div512, 5500, !dbg !5621
  %cmp514 = icmp sgt i32 %div509, %sub513, !dbg !5622
  br i1 %cmp514, label %cond.true516, label %cond.false519, !dbg !5623

cond.true516:                                     ; preds = %cond.false507
  %138 = load i32, i32* %frame_bit_rate, align 4, !dbg !5624
  %div517 = sdiv i32 %138, 1, !dbg !5626
  %div518 = sdiv i32 %div517, 5, !dbg !5627
  br label %cond.end524, !dbg !5628

cond.false519:                                    ; preds = %cond.false507
  %139 = load i32, i32* %frame_bit_rate, align 4, !dbg !5629
  %div520 = sdiv i32 %139, 1, !dbg !5631
  %mul521 = mul nsw i32 %div520, 15, !dbg !5632
  %div522 = sdiv i32 %mul521, 32, !dbg !5633
  %sub523 = sub nsw i32 %div522, 5500, !dbg !5634
  br label %cond.end524, !dbg !5635

cond.end524:                                      ; preds = %cond.false519, %cond.true516
  %cond525 = phi i32 [ %div518, %cond.true516 ], [ %sub523, %cond.false519 ], !dbg !5636
  br label %cond.end526, !dbg !5638

cond.end526:                                      ; preds = %cond.end524, %cond.true503
  %cond527 = phi i32 [ %add506, %cond.true503 ], [ %cond525, %cond.end524 ], !dbg !5639
  br label %cond.end528, !dbg !5641

cond.end528:                                      ; preds = %cond.end526, %cond.true475
  %cond529 = phi i32 [ %add478, %cond.true475 ], [ %cond527, %cond.end526 ], !dbg !5642
  br label %cond.end530, !dbg !5644

cond.end530:                                      ; preds = %cond.end528, %cond.true420
  %cond531 = phi i32 [ 22000, %cond.true420 ], [ %cond529, %cond.end528 ], !dbg !5645
  br label %cond.end532, !dbg !5647

cond.end532:                                      ; preds = %cond.end530, %cond.true306
  %cond533 = phi i32 [ %div308, %cond.true306 ], [ %cond531, %cond.end530 ], !dbg !5648
  br label %cond.end537, !dbg !5650

cond.false534:                                    ; preds = %if.else
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5651
  %sample_rate535 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 82, !dbg !5653
  %141 = load i32, i32* %sample_rate535, align 8, !dbg !5653
  %div536 = sdiv i32 %141, 2, !dbg !5654
  br label %cond.end537, !dbg !5655

cond.end537:                                      ; preds = %cond.false534, %cond.end532
  %cond538 = phi i32 [ %cond533, %cond.end532 ], [ %div536, %cond.false534 ], !dbg !5656
  %cmp539 = icmp sgt i32 3000, %cond538, !dbg !5658
  br i1 %cmp539, label %cond.true541, label %cond.false542, !dbg !5659

cond.true541:                                     ; preds = %cond.end537
  br label %cond.end1004, !dbg !5660

cond.false542:                                    ; preds = %cond.end537
  %142 = load i32, i32* %frame_bit_rate, align 4, !dbg !5662
  %tobool543 = icmp ne i32 %142, 0, !dbg !5662
  br i1 %tobool543, label %cond.true544, label %cond.false999, !dbg !5662

cond.true544:                                     ; preds = %cond.false542
  %143 = load i32, i32* %frame_bit_rate, align 4, !dbg !5664
  %div545 = sdiv i32 %143, 1, !dbg !5666
  %div546 = sdiv i32 %div545, 5, !dbg !5667
  %144 = load i32, i32* %frame_bit_rate, align 4, !dbg !5668
  %div547 = sdiv i32 %144, 1, !dbg !5669
  %mul548 = mul nsw i32 %div547, 15, !dbg !5670
  %div549 = sdiv i32 %mul548, 32, !dbg !5671
  %sub550 = sub nsw i32 %div549, 5500, !dbg !5672
  %cmp551 = icmp sgt i32 %div546, %sub550, !dbg !5673
  br i1 %cmp551, label %cond.true553, label %cond.false556, !dbg !5674

cond.true553:                                     ; preds = %cond.true544
  %145 = load i32, i32* %frame_bit_rate, align 4, !dbg !5675
  %div554 = sdiv i32 %145, 1, !dbg !5677
  %div555 = sdiv i32 %div554, 5, !dbg !5678
  br label %cond.end561, !dbg !5679

cond.false556:                                    ; preds = %cond.true544
  %146 = load i32, i32* %frame_bit_rate, align 4, !dbg !5680
  %div557 = sdiv i32 %146, 1, !dbg !5682
  %mul558 = mul nsw i32 %div557, 15, !dbg !5683
  %div559 = sdiv i32 %mul558, 32, !dbg !5684
  %sub560 = sub nsw i32 %div559, 5500, !dbg !5685
  br label %cond.end561, !dbg !5686

cond.end561:                                      ; preds = %cond.false556, %cond.true553
  %cond562 = phi i32 [ %div555, %cond.true553 ], [ %sub560, %cond.false556 ], !dbg !5687
  %147 = load i32, i32* %frame_bit_rate, align 4, !dbg !5689
  %div563 = sdiv i32 %147, 1, !dbg !5690
  %div564 = sdiv i32 %div563, 4, !dbg !5691
  %add565 = add nsw i32 3000, %div564, !dbg !5692
  %cmp566 = icmp sgt i32 %cond562, %add565, !dbg !5693
  br i1 %cmp566, label %cond.true568, label %cond.false572, !dbg !5694

cond.true568:                                     ; preds = %cond.end561
  %148 = load i32, i32* %frame_bit_rate, align 4, !dbg !5695
  %div569 = sdiv i32 %148, 1, !dbg !5697
  %div570 = sdiv i32 %div569, 4, !dbg !5698
  %add571 = add nsw i32 3000, %div570, !dbg !5699
  br label %cond.end591, !dbg !5700

cond.false572:                                    ; preds = %cond.end561
  %149 = load i32, i32* %frame_bit_rate, align 4, !dbg !5701
  %div573 = sdiv i32 %149, 1, !dbg !5703
  %div574 = sdiv i32 %div573, 5, !dbg !5704
  %150 = load i32, i32* %frame_bit_rate, align 4, !dbg !5705
  %div575 = sdiv i32 %150, 1, !dbg !5706
  %mul576 = mul nsw i32 %div575, 15, !dbg !5707
  %div577 = sdiv i32 %mul576, 32, !dbg !5708
  %sub578 = sub nsw i32 %div577, 5500, !dbg !5709
  %cmp579 = icmp sgt i32 %div574, %sub578, !dbg !5710
  br i1 %cmp579, label %cond.true581, label %cond.false584, !dbg !5711

cond.true581:                                     ; preds = %cond.false572
  %151 = load i32, i32* %frame_bit_rate, align 4, !dbg !5712
  %div582 = sdiv i32 %151, 1, !dbg !5714
  %div583 = sdiv i32 %div582, 5, !dbg !5715
  br label %cond.end589, !dbg !5716

cond.false584:                                    ; preds = %cond.false572
  %152 = load i32, i32* %frame_bit_rate, align 4, !dbg !5717
  %div585 = sdiv i32 %152, 1, !dbg !5719
  %mul586 = mul nsw i32 %div585, 15, !dbg !5720
  %div587 = sdiv i32 %mul586, 32, !dbg !5721
  %sub588 = sub nsw i32 %div587, 5500, !dbg !5722
  br label %cond.end589, !dbg !5723

cond.end589:                                      ; preds = %cond.false584, %cond.true581
  %cond590 = phi i32 [ %div583, %cond.true581 ], [ %sub588, %cond.false584 ], !dbg !5724
  br label %cond.end591, !dbg !5726

cond.end591:                                      ; preds = %cond.end589, %cond.true568
  %cond592 = phi i32 [ %add571, %cond.true568 ], [ %cond590, %cond.end589 ], !dbg !5727
  %153 = load i32, i32* %frame_bit_rate, align 4, !dbg !5729
  %div593 = sdiv i32 %153, 1, !dbg !5730
  %div594 = sdiv i32 %div593, 16, !dbg !5731
  %add595 = add nsw i32 12000, %div594, !dbg !5732
  %cmp596 = icmp sgt i32 %cond592, %add595, !dbg !5733
  br i1 %cmp596, label %cond.true598, label %cond.false602, !dbg !5734

cond.true598:                                     ; preds = %cond.end591
  %154 = load i32, i32* %frame_bit_rate, align 4, !dbg !5735
  %div599 = sdiv i32 %154, 1, !dbg !5737
  %div600 = sdiv i32 %div599, 16, !dbg !5738
  %add601 = add nsw i32 12000, %div600, !dbg !5739
  br label %cond.end651, !dbg !5740

cond.false602:                                    ; preds = %cond.end591
  %155 = load i32, i32* %frame_bit_rate, align 4, !dbg !5741
  %div603 = sdiv i32 %155, 1, !dbg !5743
  %div604 = sdiv i32 %div603, 5, !dbg !5744
  %156 = load i32, i32* %frame_bit_rate, align 4, !dbg !5745
  %div605 = sdiv i32 %156, 1, !dbg !5746
  %mul606 = mul nsw i32 %div605, 15, !dbg !5747
  %div607 = sdiv i32 %mul606, 32, !dbg !5748
  %sub608 = sub nsw i32 %div607, 5500, !dbg !5749
  %cmp609 = icmp sgt i32 %div604, %sub608, !dbg !5750
  br i1 %cmp609, label %cond.true611, label %cond.false614, !dbg !5751

cond.true611:                                     ; preds = %cond.false602
  %157 = load i32, i32* %frame_bit_rate, align 4, !dbg !5752
  %div612 = sdiv i32 %157, 1, !dbg !5754
  %div613 = sdiv i32 %div612, 5, !dbg !5755
  br label %cond.end619, !dbg !5756

cond.false614:                                    ; preds = %cond.false602
  %158 = load i32, i32* %frame_bit_rate, align 4, !dbg !5757
  %div615 = sdiv i32 %158, 1, !dbg !5759
  %mul616 = mul nsw i32 %div615, 15, !dbg !5760
  %div617 = sdiv i32 %mul616, 32, !dbg !5761
  %sub618 = sub nsw i32 %div617, 5500, !dbg !5762
  br label %cond.end619, !dbg !5763

cond.end619:                                      ; preds = %cond.false614, %cond.true611
  %cond620 = phi i32 [ %div613, %cond.true611 ], [ %sub618, %cond.false614 ], !dbg !5764
  %159 = load i32, i32* %frame_bit_rate, align 4, !dbg !5766
  %div621 = sdiv i32 %159, 1, !dbg !5767
  %div622 = sdiv i32 %div621, 4, !dbg !5768
  %add623 = add nsw i32 3000, %div622, !dbg !5769
  %cmp624 = icmp sgt i32 %cond620, %add623, !dbg !5770
  br i1 %cmp624, label %cond.true626, label %cond.false630, !dbg !5771

cond.true626:                                     ; preds = %cond.end619
  %160 = load i32, i32* %frame_bit_rate, align 4, !dbg !5772
  %div627 = sdiv i32 %160, 1, !dbg !5774
  %div628 = sdiv i32 %div627, 4, !dbg !5775
  %add629 = add nsw i32 3000, %div628, !dbg !5776
  br label %cond.end649, !dbg !5777

cond.false630:                                    ; preds = %cond.end619
  %161 = load i32, i32* %frame_bit_rate, align 4, !dbg !5778
  %div631 = sdiv i32 %161, 1, !dbg !5780
  %div632 = sdiv i32 %div631, 5, !dbg !5781
  %162 = load i32, i32* %frame_bit_rate, align 4, !dbg !5782
  %div633 = sdiv i32 %162, 1, !dbg !5783
  %mul634 = mul nsw i32 %div633, 15, !dbg !5784
  %div635 = sdiv i32 %mul634, 32, !dbg !5785
  %sub636 = sub nsw i32 %div635, 5500, !dbg !5786
  %cmp637 = icmp sgt i32 %div632, %sub636, !dbg !5787
  br i1 %cmp637, label %cond.true639, label %cond.false642, !dbg !5788

cond.true639:                                     ; preds = %cond.false630
  %163 = load i32, i32* %frame_bit_rate, align 4, !dbg !5789
  %div640 = sdiv i32 %163, 1, !dbg !5791
  %div641 = sdiv i32 %div640, 5, !dbg !5792
  br label %cond.end647, !dbg !5793

cond.false642:                                    ; preds = %cond.false630
  %164 = load i32, i32* %frame_bit_rate, align 4, !dbg !5794
  %div643 = sdiv i32 %164, 1, !dbg !5796
  %mul644 = mul nsw i32 %div643, 15, !dbg !5797
  %div645 = sdiv i32 %mul644, 32, !dbg !5798
  %sub646 = sub nsw i32 %div645, 5500, !dbg !5799
  br label %cond.end647, !dbg !5800

cond.end647:                                      ; preds = %cond.false642, %cond.true639
  %cond648 = phi i32 [ %div641, %cond.true639 ], [ %sub646, %cond.false642 ], !dbg !5801
  br label %cond.end649, !dbg !5803

cond.end649:                                      ; preds = %cond.end647, %cond.true626
  %cond650 = phi i32 [ %add629, %cond.true626 ], [ %cond648, %cond.end647 ], !dbg !5804
  br label %cond.end651, !dbg !5806

cond.end651:                                      ; preds = %cond.end649, %cond.true598
  %cond652 = phi i32 [ %add601, %cond.true598 ], [ %cond650, %cond.end649 ], !dbg !5807
  %cmp653 = icmp sgt i32 %cond652, 22000, !dbg !5809
  br i1 %cmp653, label %cond.true655, label %cond.false656, !dbg !5810

cond.true655:                                     ; preds = %cond.end651
  br label %cond.end765, !dbg !5811

cond.false656:                                    ; preds = %cond.end651
  %165 = load i32, i32* %frame_bit_rate, align 4, !dbg !5813
  %div657 = sdiv i32 %165, 1, !dbg !5815
  %div658 = sdiv i32 %div657, 5, !dbg !5816
  %166 = load i32, i32* %frame_bit_rate, align 4, !dbg !5817
  %div659 = sdiv i32 %166, 1, !dbg !5818
  %mul660 = mul nsw i32 %div659, 15, !dbg !5819
  %div661 = sdiv i32 %mul660, 32, !dbg !5820
  %sub662 = sub nsw i32 %div661, 5500, !dbg !5821
  %cmp663 = icmp sgt i32 %div658, %sub662, !dbg !5822
  br i1 %cmp663, label %cond.true665, label %cond.false668, !dbg !5823

cond.true665:                                     ; preds = %cond.false656
  %167 = load i32, i32* %frame_bit_rate, align 4, !dbg !5824
  %div666 = sdiv i32 %167, 1, !dbg !5826
  %div667 = sdiv i32 %div666, 5, !dbg !5827
  br label %cond.end673, !dbg !5828

cond.false668:                                    ; preds = %cond.false656
  %168 = load i32, i32* %frame_bit_rate, align 4, !dbg !5829
  %div669 = sdiv i32 %168, 1, !dbg !5831
  %mul670 = mul nsw i32 %div669, 15, !dbg !5832
  %div671 = sdiv i32 %mul670, 32, !dbg !5833
  %sub672 = sub nsw i32 %div671, 5500, !dbg !5834
  br label %cond.end673, !dbg !5835

cond.end673:                                      ; preds = %cond.false668, %cond.true665
  %cond674 = phi i32 [ %div667, %cond.true665 ], [ %sub672, %cond.false668 ], !dbg !5836
  %169 = load i32, i32* %frame_bit_rate, align 4, !dbg !5838
  %div675 = sdiv i32 %169, 1, !dbg !5839
  %div676 = sdiv i32 %div675, 4, !dbg !5840
  %add677 = add nsw i32 3000, %div676, !dbg !5841
  %cmp678 = icmp sgt i32 %cond674, %add677, !dbg !5842
  br i1 %cmp678, label %cond.true680, label %cond.false684, !dbg !5843

cond.true680:                                     ; preds = %cond.end673
  %170 = load i32, i32* %frame_bit_rate, align 4, !dbg !5844
  %div681 = sdiv i32 %170, 1, !dbg !5846
  %div682 = sdiv i32 %div681, 4, !dbg !5847
  %add683 = add nsw i32 3000, %div682, !dbg !5848
  br label %cond.end703, !dbg !5849

cond.false684:                                    ; preds = %cond.end673
  %171 = load i32, i32* %frame_bit_rate, align 4, !dbg !5850
  %div685 = sdiv i32 %171, 1, !dbg !5852
  %div686 = sdiv i32 %div685, 5, !dbg !5853
  %172 = load i32, i32* %frame_bit_rate, align 4, !dbg !5854
  %div687 = sdiv i32 %172, 1, !dbg !5855
  %mul688 = mul nsw i32 %div687, 15, !dbg !5856
  %div689 = sdiv i32 %mul688, 32, !dbg !5857
  %sub690 = sub nsw i32 %div689, 5500, !dbg !5858
  %cmp691 = icmp sgt i32 %div686, %sub690, !dbg !5859
  br i1 %cmp691, label %cond.true693, label %cond.false696, !dbg !5860

cond.true693:                                     ; preds = %cond.false684
  %173 = load i32, i32* %frame_bit_rate, align 4, !dbg !5861
  %div694 = sdiv i32 %173, 1, !dbg !5863
  %div695 = sdiv i32 %div694, 5, !dbg !5864
  br label %cond.end701, !dbg !5865

cond.false696:                                    ; preds = %cond.false684
  %174 = load i32, i32* %frame_bit_rate, align 4, !dbg !5866
  %div697 = sdiv i32 %174, 1, !dbg !5868
  %mul698 = mul nsw i32 %div697, 15, !dbg !5869
  %div699 = sdiv i32 %mul698, 32, !dbg !5870
  %sub700 = sub nsw i32 %div699, 5500, !dbg !5871
  br label %cond.end701, !dbg !5872

cond.end701:                                      ; preds = %cond.false696, %cond.true693
  %cond702 = phi i32 [ %div695, %cond.true693 ], [ %sub700, %cond.false696 ], !dbg !5873
  br label %cond.end703, !dbg !5875

cond.end703:                                      ; preds = %cond.end701, %cond.true680
  %cond704 = phi i32 [ %add683, %cond.true680 ], [ %cond702, %cond.end701 ], !dbg !5876
  %175 = load i32, i32* %frame_bit_rate, align 4, !dbg !5878
  %div705 = sdiv i32 %175, 1, !dbg !5879
  %div706 = sdiv i32 %div705, 16, !dbg !5880
  %add707 = add nsw i32 12000, %div706, !dbg !5881
  %cmp708 = icmp sgt i32 %cond704, %add707, !dbg !5882
  br i1 %cmp708, label %cond.true710, label %cond.false714, !dbg !5883

cond.true710:                                     ; preds = %cond.end703
  %176 = load i32, i32* %frame_bit_rate, align 4, !dbg !5884
  %div711 = sdiv i32 %176, 1, !dbg !5886
  %div712 = sdiv i32 %div711, 16, !dbg !5887
  %add713 = add nsw i32 12000, %div712, !dbg !5888
  br label %cond.end763, !dbg !5889

cond.false714:                                    ; preds = %cond.end703
  %177 = load i32, i32* %frame_bit_rate, align 4, !dbg !5890
  %div715 = sdiv i32 %177, 1, !dbg !5892
  %div716 = sdiv i32 %div715, 5, !dbg !5893
  %178 = load i32, i32* %frame_bit_rate, align 4, !dbg !5894
  %div717 = sdiv i32 %178, 1, !dbg !5895
  %mul718 = mul nsw i32 %div717, 15, !dbg !5896
  %div719 = sdiv i32 %mul718, 32, !dbg !5897
  %sub720 = sub nsw i32 %div719, 5500, !dbg !5898
  %cmp721 = icmp sgt i32 %div716, %sub720, !dbg !5899
  br i1 %cmp721, label %cond.true723, label %cond.false726, !dbg !5900

cond.true723:                                     ; preds = %cond.false714
  %179 = load i32, i32* %frame_bit_rate, align 4, !dbg !5901
  %div724 = sdiv i32 %179, 1, !dbg !5903
  %div725 = sdiv i32 %div724, 5, !dbg !5904
  br label %cond.end731, !dbg !5905

cond.false726:                                    ; preds = %cond.false714
  %180 = load i32, i32* %frame_bit_rate, align 4, !dbg !5906
  %div727 = sdiv i32 %180, 1, !dbg !5908
  %mul728 = mul nsw i32 %div727, 15, !dbg !5909
  %div729 = sdiv i32 %mul728, 32, !dbg !5910
  %sub730 = sub nsw i32 %div729, 5500, !dbg !5911
  br label %cond.end731, !dbg !5912

cond.end731:                                      ; preds = %cond.false726, %cond.true723
  %cond732 = phi i32 [ %div725, %cond.true723 ], [ %sub730, %cond.false726 ], !dbg !5913
  %181 = load i32, i32* %frame_bit_rate, align 4, !dbg !5915
  %div733 = sdiv i32 %181, 1, !dbg !5916
  %div734 = sdiv i32 %div733, 4, !dbg !5917
  %add735 = add nsw i32 3000, %div734, !dbg !5918
  %cmp736 = icmp sgt i32 %cond732, %add735, !dbg !5919
  br i1 %cmp736, label %cond.true738, label %cond.false742, !dbg !5920

cond.true738:                                     ; preds = %cond.end731
  %182 = load i32, i32* %frame_bit_rate, align 4, !dbg !5921
  %div739 = sdiv i32 %182, 1, !dbg !5923
  %div740 = sdiv i32 %div739, 4, !dbg !5924
  %add741 = add nsw i32 3000, %div740, !dbg !5925
  br label %cond.end761, !dbg !5926

cond.false742:                                    ; preds = %cond.end731
  %183 = load i32, i32* %frame_bit_rate, align 4, !dbg !5927
  %div743 = sdiv i32 %183, 1, !dbg !5929
  %div744 = sdiv i32 %div743, 5, !dbg !5930
  %184 = load i32, i32* %frame_bit_rate, align 4, !dbg !5931
  %div745 = sdiv i32 %184, 1, !dbg !5932
  %mul746 = mul nsw i32 %div745, 15, !dbg !5933
  %div747 = sdiv i32 %mul746, 32, !dbg !5934
  %sub748 = sub nsw i32 %div747, 5500, !dbg !5935
  %cmp749 = icmp sgt i32 %div744, %sub748, !dbg !5936
  br i1 %cmp749, label %cond.true751, label %cond.false754, !dbg !5937

cond.true751:                                     ; preds = %cond.false742
  %185 = load i32, i32* %frame_bit_rate, align 4, !dbg !5938
  %div752 = sdiv i32 %185, 1, !dbg !5940
  %div753 = sdiv i32 %div752, 5, !dbg !5941
  br label %cond.end759, !dbg !5942

cond.false754:                                    ; preds = %cond.false742
  %186 = load i32, i32* %frame_bit_rate, align 4, !dbg !5943
  %div755 = sdiv i32 %186, 1, !dbg !5945
  %mul756 = mul nsw i32 %div755, 15, !dbg !5946
  %div757 = sdiv i32 %mul756, 32, !dbg !5947
  %sub758 = sub nsw i32 %div757, 5500, !dbg !5948
  br label %cond.end759, !dbg !5949

cond.end759:                                      ; preds = %cond.false754, %cond.true751
  %cond760 = phi i32 [ %div753, %cond.true751 ], [ %sub758, %cond.false754 ], !dbg !5950
  br label %cond.end761, !dbg !5952

cond.end761:                                      ; preds = %cond.end759, %cond.true738
  %cond762 = phi i32 [ %add741, %cond.true738 ], [ %cond760, %cond.end759 ], !dbg !5953
  br label %cond.end763, !dbg !5955

cond.end763:                                      ; preds = %cond.end761, %cond.true710
  %cond764 = phi i32 [ %add713, %cond.true710 ], [ %cond762, %cond.end761 ], !dbg !5956
  br label %cond.end765, !dbg !5958

cond.end765:                                      ; preds = %cond.end763, %cond.true655
  %cond766 = phi i32 [ 22000, %cond.true655 ], [ %cond764, %cond.end763 ], !dbg !5959
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5961
  %sample_rate767 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %187, i32 0, i32 82, !dbg !5962
  %188 = load i32, i32* %sample_rate767, align 8, !dbg !5962
  %div768 = sdiv i32 %188, 2, !dbg !5963
  %cmp769 = icmp sgt i32 %cond766, %div768, !dbg !5964
  br i1 %cmp769, label %cond.true771, label %cond.false774, !dbg !5965

cond.true771:                                     ; preds = %cond.end765
  %189 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5966
  %sample_rate772 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %189, i32 0, i32 82, !dbg !5968
  %190 = load i32, i32* %sample_rate772, align 8, !dbg !5968
  %div773 = sdiv i32 %190, 2, !dbg !5969
  br label %cond.end997, !dbg !5970

cond.false774:                                    ; preds = %cond.end765
  %191 = load i32, i32* %frame_bit_rate, align 4, !dbg !5971
  %div775 = sdiv i32 %191, 1, !dbg !5973
  %div776 = sdiv i32 %div775, 5, !dbg !5974
  %192 = load i32, i32* %frame_bit_rate, align 4, !dbg !5975
  %div777 = sdiv i32 %192, 1, !dbg !5976
  %mul778 = mul nsw i32 %div777, 15, !dbg !5977
  %div779 = sdiv i32 %mul778, 32, !dbg !5978
  %sub780 = sub nsw i32 %div779, 5500, !dbg !5979
  %cmp781 = icmp sgt i32 %div776, %sub780, !dbg !5980
  br i1 %cmp781, label %cond.true783, label %cond.false786, !dbg !5981

cond.true783:                                     ; preds = %cond.false774
  %193 = load i32, i32* %frame_bit_rate, align 4, !dbg !5982
  %div784 = sdiv i32 %193, 1, !dbg !5984
  %div785 = sdiv i32 %div784, 5, !dbg !5985
  br label %cond.end791, !dbg !5986

cond.false786:                                    ; preds = %cond.false774
  %194 = load i32, i32* %frame_bit_rate, align 4, !dbg !5987
  %div787 = sdiv i32 %194, 1, !dbg !5989
  %mul788 = mul nsw i32 %div787, 15, !dbg !5990
  %div789 = sdiv i32 %mul788, 32, !dbg !5991
  %sub790 = sub nsw i32 %div789, 5500, !dbg !5992
  br label %cond.end791, !dbg !5993

cond.end791:                                      ; preds = %cond.false786, %cond.true783
  %cond792 = phi i32 [ %div785, %cond.true783 ], [ %sub790, %cond.false786 ], !dbg !5994
  %195 = load i32, i32* %frame_bit_rate, align 4, !dbg !5996
  %div793 = sdiv i32 %195, 1, !dbg !5997
  %div794 = sdiv i32 %div793, 4, !dbg !5998
  %add795 = add nsw i32 3000, %div794, !dbg !5999
  %cmp796 = icmp sgt i32 %cond792, %add795, !dbg !6000
  br i1 %cmp796, label %cond.true798, label %cond.false802, !dbg !6001

cond.true798:                                     ; preds = %cond.end791
  %196 = load i32, i32* %frame_bit_rate, align 4, !dbg !6002
  %div799 = sdiv i32 %196, 1, !dbg !6004
  %div800 = sdiv i32 %div799, 4, !dbg !6005
  %add801 = add nsw i32 3000, %div800, !dbg !6006
  br label %cond.end821, !dbg !6007

cond.false802:                                    ; preds = %cond.end791
  %197 = load i32, i32* %frame_bit_rate, align 4, !dbg !6008
  %div803 = sdiv i32 %197, 1, !dbg !6010
  %div804 = sdiv i32 %div803, 5, !dbg !6011
  %198 = load i32, i32* %frame_bit_rate, align 4, !dbg !6012
  %div805 = sdiv i32 %198, 1, !dbg !6013
  %mul806 = mul nsw i32 %div805, 15, !dbg !6014
  %div807 = sdiv i32 %mul806, 32, !dbg !6015
  %sub808 = sub nsw i32 %div807, 5500, !dbg !6016
  %cmp809 = icmp sgt i32 %div804, %sub808, !dbg !6017
  br i1 %cmp809, label %cond.true811, label %cond.false814, !dbg !6018

cond.true811:                                     ; preds = %cond.false802
  %199 = load i32, i32* %frame_bit_rate, align 4, !dbg !6019
  %div812 = sdiv i32 %199, 1, !dbg !6021
  %div813 = sdiv i32 %div812, 5, !dbg !6022
  br label %cond.end819, !dbg !6023

cond.false814:                                    ; preds = %cond.false802
  %200 = load i32, i32* %frame_bit_rate, align 4, !dbg !6024
  %div815 = sdiv i32 %200, 1, !dbg !6026
  %mul816 = mul nsw i32 %div815, 15, !dbg !6027
  %div817 = sdiv i32 %mul816, 32, !dbg !6028
  %sub818 = sub nsw i32 %div817, 5500, !dbg !6029
  br label %cond.end819, !dbg !6030

cond.end819:                                      ; preds = %cond.false814, %cond.true811
  %cond820 = phi i32 [ %div813, %cond.true811 ], [ %sub818, %cond.false814 ], !dbg !6031
  br label %cond.end821, !dbg !6033

cond.end821:                                      ; preds = %cond.end819, %cond.true798
  %cond822 = phi i32 [ %add801, %cond.true798 ], [ %cond820, %cond.end819 ], !dbg !6034
  %201 = load i32, i32* %frame_bit_rate, align 4, !dbg !6036
  %div823 = sdiv i32 %201, 1, !dbg !6037
  %div824 = sdiv i32 %div823, 16, !dbg !6038
  %add825 = add nsw i32 12000, %div824, !dbg !6039
  %cmp826 = icmp sgt i32 %cond822, %add825, !dbg !6040
  br i1 %cmp826, label %cond.true828, label %cond.false832, !dbg !6041

cond.true828:                                     ; preds = %cond.end821
  %202 = load i32, i32* %frame_bit_rate, align 4, !dbg !6042
  %div829 = sdiv i32 %202, 1, !dbg !6044
  %div830 = sdiv i32 %div829, 16, !dbg !6045
  %add831 = add nsw i32 12000, %div830, !dbg !6046
  br label %cond.end881, !dbg !6047

cond.false832:                                    ; preds = %cond.end821
  %203 = load i32, i32* %frame_bit_rate, align 4, !dbg !6048
  %div833 = sdiv i32 %203, 1, !dbg !6050
  %div834 = sdiv i32 %div833, 5, !dbg !6051
  %204 = load i32, i32* %frame_bit_rate, align 4, !dbg !6052
  %div835 = sdiv i32 %204, 1, !dbg !6053
  %mul836 = mul nsw i32 %div835, 15, !dbg !6054
  %div837 = sdiv i32 %mul836, 32, !dbg !6055
  %sub838 = sub nsw i32 %div837, 5500, !dbg !6056
  %cmp839 = icmp sgt i32 %div834, %sub838, !dbg !6057
  br i1 %cmp839, label %cond.true841, label %cond.false844, !dbg !6058

cond.true841:                                     ; preds = %cond.false832
  %205 = load i32, i32* %frame_bit_rate, align 4, !dbg !6059
  %div842 = sdiv i32 %205, 1, !dbg !6061
  %div843 = sdiv i32 %div842, 5, !dbg !6062
  br label %cond.end849, !dbg !6063

cond.false844:                                    ; preds = %cond.false832
  %206 = load i32, i32* %frame_bit_rate, align 4, !dbg !6064
  %div845 = sdiv i32 %206, 1, !dbg !6066
  %mul846 = mul nsw i32 %div845, 15, !dbg !6067
  %div847 = sdiv i32 %mul846, 32, !dbg !6068
  %sub848 = sub nsw i32 %div847, 5500, !dbg !6069
  br label %cond.end849, !dbg !6070

cond.end849:                                      ; preds = %cond.false844, %cond.true841
  %cond850 = phi i32 [ %div843, %cond.true841 ], [ %sub848, %cond.false844 ], !dbg !6071
  %207 = load i32, i32* %frame_bit_rate, align 4, !dbg !6073
  %div851 = sdiv i32 %207, 1, !dbg !6074
  %div852 = sdiv i32 %div851, 4, !dbg !6075
  %add853 = add nsw i32 3000, %div852, !dbg !6076
  %cmp854 = icmp sgt i32 %cond850, %add853, !dbg !6077
  br i1 %cmp854, label %cond.true856, label %cond.false860, !dbg !6078

cond.true856:                                     ; preds = %cond.end849
  %208 = load i32, i32* %frame_bit_rate, align 4, !dbg !6079
  %div857 = sdiv i32 %208, 1, !dbg !6081
  %div858 = sdiv i32 %div857, 4, !dbg !6082
  %add859 = add nsw i32 3000, %div858, !dbg !6083
  br label %cond.end879, !dbg !6084

cond.false860:                                    ; preds = %cond.end849
  %209 = load i32, i32* %frame_bit_rate, align 4, !dbg !6085
  %div861 = sdiv i32 %209, 1, !dbg !6087
  %div862 = sdiv i32 %div861, 5, !dbg !6088
  %210 = load i32, i32* %frame_bit_rate, align 4, !dbg !6089
  %div863 = sdiv i32 %210, 1, !dbg !6090
  %mul864 = mul nsw i32 %div863, 15, !dbg !6091
  %div865 = sdiv i32 %mul864, 32, !dbg !6092
  %sub866 = sub nsw i32 %div865, 5500, !dbg !6093
  %cmp867 = icmp sgt i32 %div862, %sub866, !dbg !6094
  br i1 %cmp867, label %cond.true869, label %cond.false872, !dbg !6095

cond.true869:                                     ; preds = %cond.false860
  %211 = load i32, i32* %frame_bit_rate, align 4, !dbg !6096
  %div870 = sdiv i32 %211, 1, !dbg !6098
  %div871 = sdiv i32 %div870, 5, !dbg !6099
  br label %cond.end877, !dbg !6100

cond.false872:                                    ; preds = %cond.false860
  %212 = load i32, i32* %frame_bit_rate, align 4, !dbg !6101
  %div873 = sdiv i32 %212, 1, !dbg !6103
  %mul874 = mul nsw i32 %div873, 15, !dbg !6104
  %div875 = sdiv i32 %mul874, 32, !dbg !6105
  %sub876 = sub nsw i32 %div875, 5500, !dbg !6106
  br label %cond.end877, !dbg !6107

cond.end877:                                      ; preds = %cond.false872, %cond.true869
  %cond878 = phi i32 [ %div871, %cond.true869 ], [ %sub876, %cond.false872 ], !dbg !6108
  br label %cond.end879, !dbg !6110

cond.end879:                                      ; preds = %cond.end877, %cond.true856
  %cond880 = phi i32 [ %add859, %cond.true856 ], [ %cond878, %cond.end877 ], !dbg !6111
  br label %cond.end881, !dbg !6113

cond.end881:                                      ; preds = %cond.end879, %cond.true828
  %cond882 = phi i32 [ %add831, %cond.true828 ], [ %cond880, %cond.end879 ], !dbg !6114
  %cmp883 = icmp sgt i32 %cond882, 22000, !dbg !6116
  br i1 %cmp883, label %cond.true885, label %cond.false886, !dbg !6117

cond.true885:                                     ; preds = %cond.end881
  br label %cond.end995, !dbg !6118

cond.false886:                                    ; preds = %cond.end881
  %213 = load i32, i32* %frame_bit_rate, align 4, !dbg !6120
  %div887 = sdiv i32 %213, 1, !dbg !6122
  %div888 = sdiv i32 %div887, 5, !dbg !6123
  %214 = load i32, i32* %frame_bit_rate, align 4, !dbg !6124
  %div889 = sdiv i32 %214, 1, !dbg !6125
  %mul890 = mul nsw i32 %div889, 15, !dbg !6126
  %div891 = sdiv i32 %mul890, 32, !dbg !6127
  %sub892 = sub nsw i32 %div891, 5500, !dbg !6128
  %cmp893 = icmp sgt i32 %div888, %sub892, !dbg !6129
  br i1 %cmp893, label %cond.true895, label %cond.false898, !dbg !6130

cond.true895:                                     ; preds = %cond.false886
  %215 = load i32, i32* %frame_bit_rate, align 4, !dbg !6131
  %div896 = sdiv i32 %215, 1, !dbg !6133
  %div897 = sdiv i32 %div896, 5, !dbg !6134
  br label %cond.end903, !dbg !6135

cond.false898:                                    ; preds = %cond.false886
  %216 = load i32, i32* %frame_bit_rate, align 4, !dbg !6136
  %div899 = sdiv i32 %216, 1, !dbg !6138
  %mul900 = mul nsw i32 %div899, 15, !dbg !6139
  %div901 = sdiv i32 %mul900, 32, !dbg !6140
  %sub902 = sub nsw i32 %div901, 5500, !dbg !6141
  br label %cond.end903, !dbg !6142

cond.end903:                                      ; preds = %cond.false898, %cond.true895
  %cond904 = phi i32 [ %div897, %cond.true895 ], [ %sub902, %cond.false898 ], !dbg !6143
  %217 = load i32, i32* %frame_bit_rate, align 4, !dbg !6145
  %div905 = sdiv i32 %217, 1, !dbg !6146
  %div906 = sdiv i32 %div905, 4, !dbg !6147
  %add907 = add nsw i32 3000, %div906, !dbg !6148
  %cmp908 = icmp sgt i32 %cond904, %add907, !dbg !6149
  br i1 %cmp908, label %cond.true910, label %cond.false914, !dbg !6150

cond.true910:                                     ; preds = %cond.end903
  %218 = load i32, i32* %frame_bit_rate, align 4, !dbg !6151
  %div911 = sdiv i32 %218, 1, !dbg !6153
  %div912 = sdiv i32 %div911, 4, !dbg !6154
  %add913 = add nsw i32 3000, %div912, !dbg !6155
  br label %cond.end933, !dbg !6156

cond.false914:                                    ; preds = %cond.end903
  %219 = load i32, i32* %frame_bit_rate, align 4, !dbg !6157
  %div915 = sdiv i32 %219, 1, !dbg !6159
  %div916 = sdiv i32 %div915, 5, !dbg !6160
  %220 = load i32, i32* %frame_bit_rate, align 4, !dbg !6161
  %div917 = sdiv i32 %220, 1, !dbg !6162
  %mul918 = mul nsw i32 %div917, 15, !dbg !6163
  %div919 = sdiv i32 %mul918, 32, !dbg !6164
  %sub920 = sub nsw i32 %div919, 5500, !dbg !6165
  %cmp921 = icmp sgt i32 %div916, %sub920, !dbg !6166
  br i1 %cmp921, label %cond.true923, label %cond.false926, !dbg !6167

cond.true923:                                     ; preds = %cond.false914
  %221 = load i32, i32* %frame_bit_rate, align 4, !dbg !6168
  %div924 = sdiv i32 %221, 1, !dbg !6170
  %div925 = sdiv i32 %div924, 5, !dbg !6171
  br label %cond.end931, !dbg !6172

cond.false926:                                    ; preds = %cond.false914
  %222 = load i32, i32* %frame_bit_rate, align 4, !dbg !6173
  %div927 = sdiv i32 %222, 1, !dbg !6175
  %mul928 = mul nsw i32 %div927, 15, !dbg !6176
  %div929 = sdiv i32 %mul928, 32, !dbg !6177
  %sub930 = sub nsw i32 %div929, 5500, !dbg !6178
  br label %cond.end931, !dbg !6179

cond.end931:                                      ; preds = %cond.false926, %cond.true923
  %cond932 = phi i32 [ %div925, %cond.true923 ], [ %sub930, %cond.false926 ], !dbg !6180
  br label %cond.end933, !dbg !6182

cond.end933:                                      ; preds = %cond.end931, %cond.true910
  %cond934 = phi i32 [ %add913, %cond.true910 ], [ %cond932, %cond.end931 ], !dbg !6183
  %223 = load i32, i32* %frame_bit_rate, align 4, !dbg !6185
  %div935 = sdiv i32 %223, 1, !dbg !6186
  %div936 = sdiv i32 %div935, 16, !dbg !6187
  %add937 = add nsw i32 12000, %div936, !dbg !6188
  %cmp938 = icmp sgt i32 %cond934, %add937, !dbg !6189
  br i1 %cmp938, label %cond.true940, label %cond.false944, !dbg !6190

cond.true940:                                     ; preds = %cond.end933
  %224 = load i32, i32* %frame_bit_rate, align 4, !dbg !6191
  %div941 = sdiv i32 %224, 1, !dbg !6193
  %div942 = sdiv i32 %div941, 16, !dbg !6194
  %add943 = add nsw i32 12000, %div942, !dbg !6195
  br label %cond.end993, !dbg !6196

cond.false944:                                    ; preds = %cond.end933
  %225 = load i32, i32* %frame_bit_rate, align 4, !dbg !6197
  %div945 = sdiv i32 %225, 1, !dbg !6199
  %div946 = sdiv i32 %div945, 5, !dbg !6200
  %226 = load i32, i32* %frame_bit_rate, align 4, !dbg !6201
  %div947 = sdiv i32 %226, 1, !dbg !6202
  %mul948 = mul nsw i32 %div947, 15, !dbg !6203
  %div949 = sdiv i32 %mul948, 32, !dbg !6204
  %sub950 = sub nsw i32 %div949, 5500, !dbg !6205
  %cmp951 = icmp sgt i32 %div946, %sub950, !dbg !6206
  br i1 %cmp951, label %cond.true953, label %cond.false956, !dbg !6207

cond.true953:                                     ; preds = %cond.false944
  %227 = load i32, i32* %frame_bit_rate, align 4, !dbg !6208
  %div954 = sdiv i32 %227, 1, !dbg !6210
  %div955 = sdiv i32 %div954, 5, !dbg !6211
  br label %cond.end961, !dbg !6212

cond.false956:                                    ; preds = %cond.false944
  %228 = load i32, i32* %frame_bit_rate, align 4, !dbg !6213
  %div957 = sdiv i32 %228, 1, !dbg !6215
  %mul958 = mul nsw i32 %div957, 15, !dbg !6216
  %div959 = sdiv i32 %mul958, 32, !dbg !6217
  %sub960 = sub nsw i32 %div959, 5500, !dbg !6218
  br label %cond.end961, !dbg !6219

cond.end961:                                      ; preds = %cond.false956, %cond.true953
  %cond962 = phi i32 [ %div955, %cond.true953 ], [ %sub960, %cond.false956 ], !dbg !6220
  %229 = load i32, i32* %frame_bit_rate, align 4, !dbg !6222
  %div963 = sdiv i32 %229, 1, !dbg !6223
  %div964 = sdiv i32 %div963, 4, !dbg !6224
  %add965 = add nsw i32 3000, %div964, !dbg !6225
  %cmp966 = icmp sgt i32 %cond962, %add965, !dbg !6226
  br i1 %cmp966, label %cond.true968, label %cond.false972, !dbg !6227

cond.true968:                                     ; preds = %cond.end961
  %230 = load i32, i32* %frame_bit_rate, align 4, !dbg !6228
  %div969 = sdiv i32 %230, 1, !dbg !6230
  %div970 = sdiv i32 %div969, 4, !dbg !6231
  %add971 = add nsw i32 3000, %div970, !dbg !6232
  br label %cond.end991, !dbg !6233

cond.false972:                                    ; preds = %cond.end961
  %231 = load i32, i32* %frame_bit_rate, align 4, !dbg !6234
  %div973 = sdiv i32 %231, 1, !dbg !6236
  %div974 = sdiv i32 %div973, 5, !dbg !6237
  %232 = load i32, i32* %frame_bit_rate, align 4, !dbg !6238
  %div975 = sdiv i32 %232, 1, !dbg !6239
  %mul976 = mul nsw i32 %div975, 15, !dbg !6240
  %div977 = sdiv i32 %mul976, 32, !dbg !6241
  %sub978 = sub nsw i32 %div977, 5500, !dbg !6242
  %cmp979 = icmp sgt i32 %div974, %sub978, !dbg !6243
  br i1 %cmp979, label %cond.true981, label %cond.false984, !dbg !6244

cond.true981:                                     ; preds = %cond.false972
  %233 = load i32, i32* %frame_bit_rate, align 4, !dbg !6245
  %div982 = sdiv i32 %233, 1, !dbg !6247
  %div983 = sdiv i32 %div982, 5, !dbg !6248
  br label %cond.end989, !dbg !6249

cond.false984:                                    ; preds = %cond.false972
  %234 = load i32, i32* %frame_bit_rate, align 4, !dbg !6250
  %div985 = sdiv i32 %234, 1, !dbg !6252
  %mul986 = mul nsw i32 %div985, 15, !dbg !6253
  %div987 = sdiv i32 %mul986, 32, !dbg !6254
  %sub988 = sub nsw i32 %div987, 5500, !dbg !6255
  br label %cond.end989, !dbg !6256

cond.end989:                                      ; preds = %cond.false984, %cond.true981
  %cond990 = phi i32 [ %div983, %cond.true981 ], [ %sub988, %cond.false984 ], !dbg !6257
  br label %cond.end991, !dbg !6259

cond.end991:                                      ; preds = %cond.end989, %cond.true968
  %cond992 = phi i32 [ %add971, %cond.true968 ], [ %cond990, %cond.end989 ], !dbg !6260
  br label %cond.end993, !dbg !6262

cond.end993:                                      ; preds = %cond.end991, %cond.true940
  %cond994 = phi i32 [ %add943, %cond.true940 ], [ %cond992, %cond.end991 ], !dbg !6263
  br label %cond.end995, !dbg !6265

cond.end995:                                      ; preds = %cond.end993, %cond.true885
  %cond996 = phi i32 [ 22000, %cond.true885 ], [ %cond994, %cond.end993 ], !dbg !6266
  br label %cond.end997, !dbg !6268

cond.end997:                                      ; preds = %cond.end995, %cond.true771
  %cond998 = phi i32 [ %div773, %cond.true771 ], [ %cond996, %cond.end995 ], !dbg !6269
  br label %cond.end1002, !dbg !6271

cond.false999:                                    ; preds = %cond.false542
  %235 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6272
  %sample_rate1000 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %235, i32 0, i32 82, !dbg !6274
  %236 = load i32, i32* %sample_rate1000, align 8, !dbg !6274
  %div1001 = sdiv i32 %236, 2, !dbg !6275
  br label %cond.end1002, !dbg !6276

cond.end1002:                                     ; preds = %cond.false999, %cond.end997
  %cond1003 = phi i32 [ %cond998, %cond.end997 ], [ %div1001, %cond.false999 ], !dbg !6277
  br label %cond.end1004, !dbg !6279

cond.end1004:                                     ; preds = %cond.end1002, %cond.true541
  %cond1005 = phi i32 [ 3000, %cond.true541 ], [ %cond1003, %cond.end1002 ], !dbg !6280
  store i32 %cond1005, i32* %bandwidth, align 4, !dbg !6282
  br label %if.end

if.end:                                           ; preds = %cond.end1004, %if.then
  %237 = load i32, i32* %bandwidth, align 4, !dbg !6283
  %mul1006 = mul nsw i32 %237, 2, !dbg !6284
  %238 = load i32, i32* %wlen, align 4, !dbg !6285
  %mul1007 = mul nsw i32 %mul1006, %238, !dbg !6286
  %239 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6287
  %sample_rate1008 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %239, i32 0, i32 82, !dbg !6288
  %240 = load i32, i32* %sample_rate1008, align 8, !dbg !6288
  %div1009 = sdiv i32 %mul1007, %240, !dbg !6289
  store i32 %div1009, i32* %cutoff, align 4, !dbg !6290
  %241 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6291
  %band_alt = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %241, i32 0, i32 4, !dbg !6292
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %band_alt, i32 0, i32 0, !dbg !6293
  %242 = bitcast i32* %arraydecay to i8*, !dbg !6293
  %243 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6294
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %243, i32 0, i32 3, !dbg !6295
  %arraydecay1010 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i32 0, i32 0, !dbg !6293
  %244 = bitcast i32* %arraydecay1010 to i8*, !dbg !6293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %242, i8* %244, i64 512, i32 4, i1 false), !dbg !6293
  %245 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6296
  %arraydecay1011 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband, i32 0, i32 0, !dbg !6297
  call void @ff_init_nextband_map(%struct.SingleChannelElement* %245, i8* %arraydecay1011), !dbg !6298
  store i32 0, i32* %w, align 4, !dbg !6299
  br label %for.cond, !dbg !6300

for.cond:                                         ; preds = %for.inc1420, %if.end
  %246 = load i32, i32* %w, align 4, !dbg !6301
  %247 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6303
  %ics1012 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %247, i32 0, i32 0, !dbg !6304
  %num_windows1013 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1012, i32 0, i32 9, !dbg !6305
  %248 = load i32, i32* %num_windows1013, align 4, !dbg !6305
  %cmp1014 = icmp slt i32 %246, %248, !dbg !6306
  br i1 %cmp1014, label %for.body, label %for.end1427, !dbg !6307

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %wstart, metadata !6308, metadata !2772), !dbg !6309
  %249 = load i32, i32* %w, align 4, !dbg !6310
  %mul1016 = mul nsw i32 %249, 128, !dbg !6311
  store i32 %mul1016, i32* %wstart, align 4, !dbg !6309
  store i32 0, i32* %g, align 4, !dbg !6312
  br label %for.cond1017, !dbg !6313

for.cond1017:                                     ; preds = %for.inc1417, %for.body
  %250 = load i32, i32* %g, align 4, !dbg !6314
  %251 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6316
  %ics1018 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %251, i32 0, i32 0, !dbg !6317
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1018, i32 0, i32 8, !dbg !6318
  %252 = load i32, i32* %num_swb, align 32, !dbg !6318
  %cmp1019 = icmp slt i32 %250, %252, !dbg !6319
  br i1 %cmp1019, label %for.body1021, label %for.end1419, !dbg !6320

for.body1021:                                     ; preds = %for.cond1017
  call void @llvm.dbg.declare(metadata i32* %noise_sfi, metadata !6321, metadata !2772), !dbg !6322
  call void @llvm.dbg.declare(metadata float* %dist1, metadata !6323, metadata !2772), !dbg !6324
  store float 0.000000e+00, float* %dist1, align 4, !dbg !6324
  call void @llvm.dbg.declare(metadata float* %dist2, metadata !6325, metadata !2772), !dbg !6326
  store float 0.000000e+00, float* %dist2, align 4, !dbg !6326
  call void @llvm.dbg.declare(metadata float* %noise_amp, metadata !6327, metadata !2772), !dbg !6328
  call void @llvm.dbg.declare(metadata float* %pns_energy, metadata !6329, metadata !2772), !dbg !6330
  store float 0.000000e+00, float* %pns_energy, align 4, !dbg !6330
  call void @llvm.dbg.declare(metadata float* %pns_tgt_energy, metadata !6331, metadata !2772), !dbg !6332
  call void @llvm.dbg.declare(metadata float* %energy_ratio, metadata !6333, metadata !2772), !dbg !6334
  call void @llvm.dbg.declare(metadata float* %dist_thresh, metadata !6335, metadata !2772), !dbg !6336
  call void @llvm.dbg.declare(metadata float* %sfb_energy, metadata !6337, metadata !2772), !dbg !6338
  store float 0.000000e+00, float* %sfb_energy, align 4, !dbg !6338
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !6339, metadata !2772), !dbg !6340
  store float 0.000000e+00, float* %threshold, align 4, !dbg !6340
  call void @llvm.dbg.declare(metadata float* %spread, metadata !6341, metadata !2772), !dbg !6342
  store float 2.000000e+00, float* %spread, align 4, !dbg !6342
  call void @llvm.dbg.declare(metadata float* %min_energy, metadata !6343, metadata !2772), !dbg !6344
  store float -1.000000e+00, float* %min_energy, align 4, !dbg !6344
  call void @llvm.dbg.declare(metadata float* %max_energy, metadata !6345, metadata !2772), !dbg !6346
  store float 0.000000e+00, float* %max_energy, align 4, !dbg !6346
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6347, metadata !2772), !dbg !6348
  %253 = load i32, i32* %wstart, align 4, !dbg !6349
  %254 = load i32, i32* %g, align 4, !dbg !6350
  %idxprom = sext i32 %254 to i64, !dbg !6351
  %255 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6351
  %ics1022 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %255, i32 0, i32 0, !dbg !6352
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1022, i32 0, i32 6, !dbg !6353
  %256 = load i16*, i16** %swb_offset, align 16, !dbg !6353
  %arrayidx1023 = getelementptr inbounds i16, i16* %256, i64 %idxprom, !dbg !6351
  %257 = load i16, i16* %arrayidx1023, align 2, !dbg !6351
  %conv1024 = zext i16 %257 to i32, !dbg !6351
  %add1025 = add nsw i32 %253, %conv1024, !dbg !6354
  store i32 %add1025, i32* %start, align 4, !dbg !6348
  call void @llvm.dbg.declare(metadata float* %freq, metadata !6355, metadata !2772), !dbg !6356
  %258 = load i32, i32* %start, align 4, !dbg !6357
  %259 = load i32, i32* %wstart, align 4, !dbg !6358
  %sub1026 = sub nsw i32 %258, %259, !dbg !6359
  %conv1027 = sitofp i32 %sub1026 to float, !dbg !6360
  %260 = load float, float* %freq_mult, align 4, !dbg !6361
  %mul1028 = fmul float %conv1027, %260, !dbg !6362
  store float %mul1028, float* %freq, align 4, !dbg !6356
  call void @llvm.dbg.declare(metadata float* %freq_boost, metadata !6363, metadata !2772), !dbg !6364
  %261 = load float, float* %freq, align 4, !dbg !6365
  %mul1029 = fmul float 0x3FEC28F5C0000000, %261, !dbg !6366
  %div1030 = fdiv float %mul1029, 4.000000e+03, !dbg !6367
  %cmp1031 = fcmp ogt float %div1030, 1.000000e+00, !dbg !6368
  br i1 %cmp1031, label %cond.true1033, label %cond.false1036, !dbg !6369

cond.true1033:                                    ; preds = %for.body1021
  %262 = load float, float* %freq, align 4, !dbg !6370
  %mul1034 = fmul float 0x3FEC28F5C0000000, %262, !dbg !6372
  %div1035 = fdiv float %mul1034, 4.000000e+03, !dbg !6373
  br label %cond.end1037, !dbg !6374

cond.false1036:                                   ; preds = %for.body1021
  br label %cond.end1037, !dbg !6375

cond.end1037:                                     ; preds = %cond.false1036, %cond.true1033
  %cond1038 = phi float [ %div1035, %cond.true1033 ], [ 1.000000e+00, %cond.false1036 ], !dbg !6376
  store float %cond1038, float* %freq_boost, align 4, !dbg !6378
  %263 = load float, float* %freq, align 4, !dbg !6379
  %cmp1039 = fcmp olt float %263, 4.000000e+03, !dbg !6381
  br i1 %cmp1039, label %if.then1044, label %lor.lhs.false, !dbg !6382

lor.lhs.false:                                    ; preds = %cond.end1037
  %264 = load i32, i32* %start, align 4, !dbg !6383
  %265 = load i32, i32* %wstart, align 4, !dbg !6385
  %sub1041 = sub nsw i32 %264, %265, !dbg !6386
  %266 = load i32, i32* %cutoff, align 4, !dbg !6387
  %cmp1042 = icmp sge i32 %sub1041, %266, !dbg !6388
  br i1 %cmp1042, label %if.then1044, label %if.end1056, !dbg !6389

if.then1044:                                      ; preds = %lor.lhs.false, %cond.end1037
  %267 = load i32, i32* %w, align 4, !dbg !6390
  %mul1045 = mul nsw i32 %267, 16, !dbg !6393
  %268 = load i32, i32* %g, align 4, !dbg !6394
  %add1046 = add nsw i32 %mul1045, %268, !dbg !6395
  %idxprom1047 = sext i32 %add1046 to i64, !dbg !6396
  %269 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6396
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %269, i32 0, i32 8, !dbg !6397
  %arrayidx1048 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom1047, !dbg !6396
  %270 = load i8, i8* %arrayidx1048, align 1, !dbg !6396
  %tobool1049 = icmp ne i8 %270, 0, !dbg !6396
  br i1 %tobool1049, label %if.end1055, label %if.then1050, !dbg !6398

if.then1050:                                      ; preds = %if.then1044
  %271 = load i32, i32* %w, align 4, !dbg !6399
  %mul1051 = mul nsw i32 %271, 16, !dbg !6400
  %272 = load i32, i32* %g, align 4, !dbg !6401
  %add1052 = add nsw i32 %mul1051, %272, !dbg !6402
  %idxprom1053 = sext i32 %add1052 to i64, !dbg !6403
  %273 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6403
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %273, i32 0, i32 7, !dbg !6404
  %arrayidx1054 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom1053, !dbg !6403
  %274 = load i32, i32* %arrayidx1054, align 4, !dbg !6403
  store i32 %274, i32* %prev_sf, align 4, !dbg !6405
  br label %if.end1055, !dbg !6406

if.end1055:                                       ; preds = %if.then1050, %if.then1044
  br label %for.inc1417, !dbg !6407

if.end1056:                                       ; preds = %lor.lhs.false
  store i32 0, i32* %w2, align 4, !dbg !6408
  br label %for.cond1057, !dbg !6410

for.cond1057:                                     ; preds = %for.inc, %if.end1056
  %275 = load i32, i32* %w2, align 4, !dbg !6411
  %276 = load i32, i32* %w, align 4, !dbg !6414
  %idxprom1058 = sext i32 %276 to i64, !dbg !6415
  %277 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6415
  %ics1059 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %277, i32 0, i32 0, !dbg !6416
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1059, i32 0, i32 4, !dbg !6417
  %arrayidx1060 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom1058, !dbg !6415
  %278 = load i8, i8* %arrayidx1060, align 1, !dbg !6415
  %conv1061 = zext i8 %278 to i32, !dbg !6415
  %cmp1062 = icmp slt i32 %275, %conv1061, !dbg !6418
  br i1 %cmp1062, label %for.body1064, label %for.end, !dbg !6419

for.body1064:                                     ; preds = %for.cond1057
  %279 = load i32, i32* %w, align 4, !dbg !6420
  %280 = load i32, i32* %w2, align 4, !dbg !6422
  %add1065 = add nsw i32 %279, %280, !dbg !6423
  %mul1066 = mul nsw i32 %add1065, 16, !dbg !6424
  %281 = load i32, i32* %g, align 4, !dbg !6425
  %add1067 = add nsw i32 %mul1066, %281, !dbg !6426
  %idxprom1068 = sext i32 %add1067 to i64, !dbg !6427
  %282 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6428
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %282, i32 0, i32 20, !dbg !6429
  %283 = load i32, i32* %cur_channel, align 32, !dbg !6429
  %idxprom1069 = sext i32 %283 to i64, !dbg !6427
  %284 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6427
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %284, i32 0, i32 17, !dbg !6430
  %ch = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !6431
  %285 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch, align 16, !dbg !6431
  %arrayidx1070 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %285, i64 %idxprom1069, !dbg !6427
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx1070, i32 0, i32 0, !dbg !6432
  %arrayidx1071 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom1068, !dbg !6427
  store %struct.FFPsyBand* %arrayidx1071, %struct.FFPsyBand** %band, align 8, !dbg !6433
  %286 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6434
  %energy = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %286, i32 0, i32 1, !dbg !6435
  %287 = load float, float* %energy, align 4, !dbg !6435
  %288 = load float, float* %sfb_energy, align 4, !dbg !6436
  %add1072 = fadd float %288, %287, !dbg !6436
  store float %add1072, float* %sfb_energy, align 4, !dbg !6436
  %289 = load float, float* %spread, align 4, !dbg !6437
  %290 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6438
  %spread1073 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %290, i32 0, i32 3, !dbg !6439
  %291 = load float, float* %spread1073, align 4, !dbg !6439
  %cmp1074 = fcmp ogt float %289, %291, !dbg !6440
  br i1 %cmp1074, label %cond.true1076, label %cond.false1078, !dbg !6441

cond.true1076:                                    ; preds = %for.body1064
  %292 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6442
  %spread1077 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %292, i32 0, i32 3, !dbg !6444
  %293 = load float, float* %spread1077, align 4, !dbg !6444
  br label %cond.end1079, !dbg !6445

cond.false1078:                                   ; preds = %for.body1064
  %294 = load float, float* %spread, align 4, !dbg !6446
  br label %cond.end1079, !dbg !6448

cond.end1079:                                     ; preds = %cond.false1078, %cond.true1076
  %cond1080 = phi float [ %293, %cond.true1076 ], [ %294, %cond.false1078 ], !dbg !6449
  store float %cond1080, float* %spread, align 4, !dbg !6451
  %295 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6452
  %threshold1081 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %295, i32 0, i32 2, !dbg !6453
  %296 = load float, float* %threshold1081, align 4, !dbg !6453
  %297 = load float, float* %threshold, align 4, !dbg !6454
  %add1082 = fadd float %297, %296, !dbg !6454
  store float %add1082, float* %threshold, align 4, !dbg !6454
  %298 = load i32, i32* %w2, align 4, !dbg !6455
  %tobool1083 = icmp ne i32 %298, 0, !dbg !6455
  br i1 %tobool1083, label %if.else1086, label %if.then1084, !dbg !6457

if.then1084:                                      ; preds = %cond.end1079
  %299 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6458
  %energy1085 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %299, i32 0, i32 1, !dbg !6460
  %300 = load float, float* %energy1085, align 4, !dbg !6460
  store float %300, float* %max_energy, align 4, !dbg !6461
  store float %300, float* %min_energy, align 4, !dbg !6462
  br label %if.end1103, !dbg !6463

if.else1086:                                      ; preds = %cond.end1079
  %301 = load float, float* %min_energy, align 4, !dbg !6464
  %302 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6466
  %energy1087 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %302, i32 0, i32 1, !dbg !6467
  %303 = load float, float* %energy1087, align 4, !dbg !6467
  %cmp1088 = fcmp ogt float %301, %303, !dbg !6468
  br i1 %cmp1088, label %cond.true1090, label %cond.false1092, !dbg !6469

cond.true1090:                                    ; preds = %if.else1086
  %304 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6470
  %energy1091 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %304, i32 0, i32 1, !dbg !6472
  %305 = load float, float* %energy1091, align 4, !dbg !6472
  br label %cond.end1093, !dbg !6473

cond.false1092:                                   ; preds = %if.else1086
  %306 = load float, float* %min_energy, align 4, !dbg !6474
  br label %cond.end1093, !dbg !6476

cond.end1093:                                     ; preds = %cond.false1092, %cond.true1090
  %cond1094 = phi float [ %305, %cond.true1090 ], [ %306, %cond.false1092 ], !dbg !6477
  store float %cond1094, float* %min_energy, align 4, !dbg !6479
  %307 = load float, float* %max_energy, align 4, !dbg !6480
  %308 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6481
  %energy1095 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %308, i32 0, i32 1, !dbg !6482
  %309 = load float, float* %energy1095, align 4, !dbg !6482
  %cmp1096 = fcmp ogt float %307, %309, !dbg !6483
  br i1 %cmp1096, label %cond.true1098, label %cond.false1099, !dbg !6484

cond.true1098:                                    ; preds = %cond.end1093
  %310 = load float, float* %max_energy, align 4, !dbg !6485
  br label %cond.end1101, !dbg !6486

cond.false1099:                                   ; preds = %cond.end1093
  %311 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6487
  %energy1100 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %311, i32 0, i32 1, !dbg !6488
  %312 = load float, float* %energy1100, align 4, !dbg !6488
  br label %cond.end1101, !dbg !6489

cond.end1101:                                     ; preds = %cond.false1099, %cond.true1098
  %cond1102 = phi float [ %310, %cond.true1098 ], [ %312, %cond.false1099 ], !dbg !6490
  store float %cond1102, float* %max_energy, align 4, !dbg !6491
  br label %if.end1103

if.end1103:                                       ; preds = %cond.end1101, %if.then1084
  br label %for.inc, !dbg !6492

for.inc:                                          ; preds = %if.end1103
  %313 = load i32, i32* %w2, align 4, !dbg !6493
  %inc = add nsw i32 %313, 1, !dbg !6493
  store i32 %inc, i32* %w2, align 4, !dbg !6493
  br label %for.cond1057, !dbg !6495, !llvm.loop !6496

for.end:                                          ; preds = %for.cond1057
  %314 = load float, float* %freq, align 4, !dbg !6498
  %div1104 = fdiv float 1.000000e+04, %314, !dbg !6499
  store float %div1104, float* %a.addr.i1428, align 4, !dbg !6500
  store float 5.000000e-01, float* %amin.addr.i1429, align 4, !dbg !6500
  store float 2.500000e+00, float* %amax.addr.i1430, align 4, !dbg !6500
  %315 = load float, float* %a.addr.i1428, align 4, !dbg !6501
  %316 = load float, float* %amin.addr.i1429, align 4, !dbg !6502
  %317 = load float, float* %amax.addr.i1430, align 4, !dbg !6503
  %318 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %316, float %317, float %315) #10, !dbg !6501, !srcloc !4962
  store float %318, float* %a.addr.i1428, align 4, !dbg !6501
  %319 = load float, float* %a.addr.i1428, align 4, !dbg !6504
  %320 = load float, float* %dist_bias, align 4, !dbg !6505
  %mul1106 = fmul float %319, %320, !dbg !6506
  store float %mul1106, float* %dist_thresh, align 4, !dbg !6507
  %321 = load i32, i32* %w, align 4, !dbg !6508
  %mul1107 = mul nsw i32 %321, 16, !dbg !6510
  %322 = load i32, i32* %g, align 4, !dbg !6511
  %add1108 = add nsw i32 %mul1107, %322, !dbg !6512
  %idxprom1109 = sext i32 %add1108 to i64, !dbg !6513
  %323 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6513
  %zeroes1110 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %323, i32 0, i32 8, !dbg !6514
  %arrayidx1111 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1110, i64 0, i64 %idxprom1109, !dbg !6513
  %324 = load i8, i8* %arrayidx1111, align 1, !dbg !6513
  %tobool1112 = icmp ne i8 %324, 0, !dbg !6513
  br i1 %tobool1112, label %lor.lhs.false1118, label %land.lhs.true, !dbg !6515

land.lhs.true:                                    ; preds = %for.end
  %325 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6516
  %arraydecay1113 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband, i32 0, i32 0, !dbg !6518
  %326 = load i32, i32* %prev_sf, align 4, !dbg !6519
  %327 = load i32, i32* %w, align 4, !dbg !6520
  %mul1114 = mul nsw i32 %327, 16, !dbg !6521
  %328 = load i32, i32* %g, align 4, !dbg !6522
  %add1115 = add nsw i32 %mul1114, %328, !dbg !6523
  %call1116 = call i32 @ff_sfdelta_can_remove_band(%struct.SingleChannelElement* %325, i8* %arraydecay1113, i32 %326, i32 %add1115), !dbg !6524
  %tobool1117 = icmp ne i32 %call1116, 0, !dbg !6524
  br i1 %tobool1117, label %lor.lhs.false1118, label %if.then1165, !dbg !6525

lor.lhs.false1118:                                ; preds = %land.lhs.true, %for.end
  %329 = load i32, i32* %w, align 4, !dbg !6526
  %mul1119 = mul nsw i32 %329, 16, !dbg !6527
  %330 = load i32, i32* %g, align 4, !dbg !6528
  %add1120 = add nsw i32 %mul1119, %330, !dbg !6529
  %idxprom1121 = sext i32 %add1120 to i64, !dbg !6530
  %331 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6530
  %zeroes1122 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %331, i32 0, i32 8, !dbg !6531
  %arrayidx1123 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1122, i64 0, i64 %idxprom1121, !dbg !6530
  %332 = load i8, i8* %arrayidx1123, align 1, !dbg !6530
  %conv1124 = zext i8 %332 to i32, !dbg !6530
  %tobool1125 = icmp ne i32 %conv1124, 0, !dbg !6530
  br i1 %tobool1125, label %land.lhs.true1133, label %lor.lhs.false1126, !dbg !6532

lor.lhs.false1126:                                ; preds = %lor.lhs.false1118
  %333 = load i32, i32* %w, align 4, !dbg !6533
  %mul1127 = mul nsw i32 %333, 16, !dbg !6534
  %334 = load i32, i32* %g, align 4, !dbg !6535
  %add1128 = add nsw i32 %mul1127, %334, !dbg !6536
  %idxprom1129 = sext i32 %add1128 to i64, !dbg !6537
  %335 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6537
  %band_alt1130 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %335, i32 0, i32 4, !dbg !6538
  %arrayidx1131 = getelementptr inbounds [128 x i32], [128 x i32]* %band_alt1130, i64 0, i64 %idxprom1129, !dbg !6537
  %336 = load i32, i32* %arrayidx1131, align 4, !dbg !6537
  %tobool1132 = icmp ne i32 %336, 0, !dbg !6537
  br i1 %tobool1132, label %lor.lhs.false1139, label %land.lhs.true1133, !dbg !6539

land.lhs.true1133:                                ; preds = %lor.lhs.false1126, %lor.lhs.false1118
  %337 = load float, float* %sfb_energy, align 4, !dbg !6540
  %338 = load float, float* %threshold, align 4, !dbg !6542
  %339 = load float, float* %freq_boost, align 4, !dbg !6543
  %div1134 = fdiv float 1.000000e+00, %339, !dbg !6544
  %call1135 = call float @sqrtf(float %div1134) #9, !dbg !6545
  %mul1136 = fmul float %338, %call1135, !dbg !6546
  %cmp1137 = fcmp olt float %337, %mul1136, !dbg !6547
  br i1 %cmp1137, label %if.then1165, label %lor.lhs.false1139, !dbg !6548

lor.lhs.false1139:                                ; preds = %land.lhs.true1133, %lor.lhs.false1126
  %340 = load float, float* %spread, align 4, !dbg !6549
  %341 = load float, float* %spread_threshold, align 4, !dbg !6551
  %cmp1140 = fcmp olt float %340, %341, !dbg !6552
  br i1 %cmp1140, label %if.then1165, label %lor.lhs.false1142, !dbg !6553

lor.lhs.false1142:                                ; preds = %lor.lhs.false1139
  %342 = load i32, i32* %w, align 4, !dbg !6554
  %mul1143 = mul nsw i32 %342, 16, !dbg !6555
  %343 = load i32, i32* %g, align 4, !dbg !6556
  %add1144 = add nsw i32 %mul1143, %343, !dbg !6557
  %idxprom1145 = sext i32 %add1144 to i64, !dbg !6558
  %344 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6558
  %zeroes1146 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %344, i32 0, i32 8, !dbg !6559
  %arrayidx1147 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1146, i64 0, i64 %idxprom1145, !dbg !6558
  %345 = load i8, i8* %arrayidx1147, align 1, !dbg !6558
  %tobool1148 = icmp ne i8 %345, 0, !dbg !6558
  br i1 %tobool1148, label %lor.lhs.false1161, label %land.lhs.true1149, !dbg !6560

land.lhs.true1149:                                ; preds = %lor.lhs.false1142
  %346 = load i32, i32* %w, align 4, !dbg !6561
  %mul1150 = mul nsw i32 %346, 16, !dbg !6562
  %347 = load i32, i32* %g, align 4, !dbg !6563
  %add1151 = add nsw i32 %mul1150, %347, !dbg !6564
  %idxprom1152 = sext i32 %add1151 to i64, !dbg !6565
  %348 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6565
  %band_alt1153 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %348, i32 0, i32 4, !dbg !6566
  %arrayidx1154 = getelementptr inbounds [128 x i32], [128 x i32]* %band_alt1153, i64 0, i64 %idxprom1152, !dbg !6565
  %349 = load i32, i32* %arrayidx1154, align 4, !dbg !6565
  %tobool1155 = icmp ne i32 %349, 0, !dbg !6565
  br i1 %tobool1155, label %land.lhs.true1156, label %lor.lhs.false1161, !dbg !6567

land.lhs.true1156:                                ; preds = %land.lhs.true1149
  %350 = load float, float* %sfb_energy, align 4, !dbg !6568
  %351 = load float, float* %threshold, align 4, !dbg !6569
  %352 = load float, float* %thr_mult, align 4, !dbg !6570
  %mul1157 = fmul float %351, %352, !dbg !6571
  %353 = load float, float* %freq_boost, align 4, !dbg !6572
  %mul1158 = fmul float %mul1157, %353, !dbg !6573
  %cmp1159 = fcmp ogt float %350, %mul1158, !dbg !6574
  br i1 %cmp1159, label %if.then1165, label %lor.lhs.false1161, !dbg !6575

lor.lhs.false1161:                                ; preds = %land.lhs.true1156, %land.lhs.true1149, %lor.lhs.false1142
  %354 = load float, float* %min_energy, align 4, !dbg !6576
  %355 = load float, float* %pns_transient_energy_r, align 4, !dbg !6577
  %356 = load float, float* %max_energy, align 4, !dbg !6578
  %mul1162 = fmul float %355, %356, !dbg !6579
  %cmp1163 = fcmp olt float %354, %mul1162, !dbg !6580
  br i1 %cmp1163, label %if.then1165, label %if.end1183, !dbg !6581

if.then1165:                                      ; preds = %lor.lhs.false1161, %land.lhs.true1156, %lor.lhs.false1139, %land.lhs.true1133, %land.lhs.true
  %357 = load float, float* %sfb_energy, align 4, !dbg !6582
  %358 = load i32, i32* %w, align 4, !dbg !6584
  %mul1166 = mul nsw i32 %358, 16, !dbg !6585
  %359 = load i32, i32* %g, align 4, !dbg !6586
  %add1167 = add nsw i32 %mul1166, %359, !dbg !6587
  %idxprom1168 = sext i32 %add1167 to i64, !dbg !6588
  %360 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6588
  %pns_ener = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %360, i32 0, i32 11, !dbg !6589
  %arrayidx1169 = getelementptr inbounds [128 x float], [128 x float]* %pns_ener, i64 0, i64 %idxprom1168, !dbg !6588
  store float %357, float* %arrayidx1169, align 4, !dbg !6590
  %361 = load i32, i32* %w, align 4, !dbg !6591
  %mul1170 = mul nsw i32 %361, 16, !dbg !6593
  %362 = load i32, i32* %g, align 4, !dbg !6594
  %add1171 = add nsw i32 %mul1170, %362, !dbg !6595
  %idxprom1172 = sext i32 %add1171 to i64, !dbg !6596
  %363 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6596
  %zeroes1173 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %363, i32 0, i32 8, !dbg !6597
  %arrayidx1174 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1173, i64 0, i64 %idxprom1172, !dbg !6596
  %364 = load i8, i8* %arrayidx1174, align 1, !dbg !6596
  %tobool1175 = icmp ne i8 %364, 0, !dbg !6596
  br i1 %tobool1175, label %if.end1182, label %if.then1176, !dbg !6598

if.then1176:                                      ; preds = %if.then1165
  %365 = load i32, i32* %w, align 4, !dbg !6599
  %mul1177 = mul nsw i32 %365, 16, !dbg !6600
  %366 = load i32, i32* %g, align 4, !dbg !6601
  %add1178 = add nsw i32 %mul1177, %366, !dbg !6602
  %idxprom1179 = sext i32 %add1178 to i64, !dbg !6603
  %367 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6603
  %sf_idx1180 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %367, i32 0, i32 7, !dbg !6604
  %arrayidx1181 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1180, i64 0, i64 %idxprom1179, !dbg !6603
  %368 = load i32, i32* %arrayidx1181, align 4, !dbg !6603
  store i32 %368, i32* %prev_sf, align 4, !dbg !6605
  br label %if.end1182, !dbg !6606

if.end1182:                                       ; preds = %if.then1176, %if.then1165
  br label %for.inc1417, !dbg !6607

if.end1183:                                       ; preds = %lor.lhs.false1161
  %369 = load float, float* %sfb_energy, align 4, !dbg !6608
  %370 = load float, float* %spread, align 4, !dbg !6609
  %371 = load float, float* %spread, align 4, !dbg !6610
  %mul1184 = fmul float %370, %371, !dbg !6611
  %cmp1185 = fcmp ogt float 1.000000e+00, %mul1184, !dbg !6612
  br i1 %cmp1185, label %cond.true1187, label %cond.false1189, !dbg !6613

cond.true1187:                                    ; preds = %if.end1183
  %372 = load float, float* %spread, align 4, !dbg !6614
  %373 = load float, float* %spread, align 4, !dbg !6615
  %mul1188 = fmul float %372, %373, !dbg !6616
  br label %cond.end1190, !dbg !6617

cond.false1189:                                   ; preds = %if.end1183
  br label %cond.end1190, !dbg !6618

cond.end1190:                                     ; preds = %cond.false1189, %cond.true1187
  %cond1191 = phi float [ %mul1188, %cond.true1187 ], [ 1.000000e+00, %cond.false1189 ], !dbg !6619
  %mul1192 = fmul float %369, %cond1191, !dbg !6620
  store float %mul1192, float* %pns_tgt_energy, align 4, !dbg !6621
  %374 = load float, float* %pns_tgt_energy, align 4, !dbg !6622
  %call1193 = call float @log2f(float %374) #9, !dbg !6623
  %mul1194 = fmul float %call1193, 2.000000e+00, !dbg !6624
  %call1195 = call float @roundf(float %mul1194) #3, !dbg !6625
  %conv1196 = fptosi float %call1195 to i32, !dbg !6626
  store i32 %conv1196, i32* %a.addr.i1431, align 4, !dbg !6627
  store i32 -100, i32* %amin.addr.i1432, align 4, !dbg !6627
  store i32 155, i32* %amax.addr.i1433, align 4, !dbg !6627
  %375 = load i32, i32* %a.addr.i1431, align 4, !dbg !6628
  %376 = load i32, i32* %amin.addr.i1432, align 4, !dbg !6629
  %cmp.i = icmp slt i32 %375, %376, !dbg !6630
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6631

if.then.i:                                        ; preds = %cond.end1190
  %377 = load i32, i32* %amin.addr.i1432, align 4, !dbg !6632
  store i32 %377, i32* %retval.i, align 4, !dbg !6633
  br label %av_clip_c.exit, !dbg !6633

if.else.i:                                        ; preds = %cond.end1190
  %378 = load i32, i32* %a.addr.i1431, align 4, !dbg !6634
  %379 = load i32, i32* %amax.addr.i1433, align 4, !dbg !6635
  %cmp1.i = icmp sgt i32 %378, %379, !dbg !6636
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6637

if.then2.i:                                       ; preds = %if.else.i
  %380 = load i32, i32* %amax.addr.i1433, align 4, !dbg !6638
  store i32 %380, i32* %retval.i, align 4, !dbg !6639
  br label %av_clip_c.exit, !dbg !6639

if.else3.i:                                       ; preds = %if.else.i
  %381 = load i32, i32* %a.addr.i1431, align 4, !dbg !6640
  store i32 %381, i32* %retval.i, align 4, !dbg !6641
  br label %av_clip_c.exit, !dbg !6641

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %382 = load i32, i32* %retval.i, align 4, !dbg !6642
  store i32 %382, i32* %noise_sfi, align 4, !dbg !6643
  %383 = load i32, i32* %noise_sfi, align 4, !dbg !6644
  %add1198 = add nsw i32 %383, 200, !dbg !6645
  %idxprom1199 = sext i32 %add1198 to i64, !dbg !6646
  %arrayidx1200 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom1199, !dbg !6646
  %384 = load float, float* %arrayidx1200, align 4, !dbg !6646
  %sub1201 = fsub float -0.000000e+00, %384, !dbg !6647
  store float %sub1201, float* %noise_amp, align 4, !dbg !6648
  %385 = load i32, i32* %prev, align 4, !dbg !6649
  %cmp1202 = icmp ne i32 %385, -1000, !dbg !6651
  br i1 %cmp1202, label %if.then1204, label %if.end1227, !dbg !6652

if.then1204:                                      ; preds = %av_clip_c.exit
  call void @llvm.dbg.declare(metadata i32* %noise_sfdiff, metadata !6653, metadata !2772), !dbg !6655
  %386 = load i32, i32* %noise_sfi, align 4, !dbg !6656
  %387 = load i32, i32* %prev, align 4, !dbg !6657
  %sub1205 = sub nsw i32 %386, %387, !dbg !6658
  %add1206 = add nsw i32 %sub1205, 60, !dbg !6659
  store i32 %add1206, i32* %noise_sfdiff, align 4, !dbg !6655
  %388 = load i32, i32* %noise_sfdiff, align 4, !dbg !6660
  %cmp1207 = icmp slt i32 %388, 0, !dbg !6662
  br i1 %cmp1207, label %if.then1212, label %lor.lhs.false1209, !dbg !6663

lor.lhs.false1209:                                ; preds = %if.then1204
  %389 = load i32, i32* %noise_sfdiff, align 4, !dbg !6664
  %cmp1210 = icmp sgt i32 %389, 120, !dbg !6666
  br i1 %cmp1210, label %if.then1212, label %if.end1226, !dbg !6667

if.then1212:                                      ; preds = %lor.lhs.false1209, %if.then1204
  %390 = load i32, i32* %w, align 4, !dbg !6668
  %mul1213 = mul nsw i32 %390, 16, !dbg !6671
  %391 = load i32, i32* %g, align 4, !dbg !6672
  %add1214 = add nsw i32 %mul1213, %391, !dbg !6673
  %idxprom1215 = sext i32 %add1214 to i64, !dbg !6674
  %392 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6674
  %zeroes1216 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %392, i32 0, i32 8, !dbg !6675
  %arrayidx1217 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1216, i64 0, i64 %idxprom1215, !dbg !6674
  %393 = load i8, i8* %arrayidx1217, align 1, !dbg !6674
  %tobool1218 = icmp ne i8 %393, 0, !dbg !6674
  br i1 %tobool1218, label %if.end1225, label %if.then1219, !dbg !6676

if.then1219:                                      ; preds = %if.then1212
  %394 = load i32, i32* %w, align 4, !dbg !6677
  %mul1220 = mul nsw i32 %394, 16, !dbg !6678
  %395 = load i32, i32* %g, align 4, !dbg !6679
  %add1221 = add nsw i32 %mul1220, %395, !dbg !6680
  %idxprom1222 = sext i32 %add1221 to i64, !dbg !6681
  %396 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6681
  %sf_idx1223 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %396, i32 0, i32 7, !dbg !6682
  %arrayidx1224 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1223, i64 0, i64 %idxprom1222, !dbg !6681
  %397 = load i32, i32* %arrayidx1224, align 4, !dbg !6681
  store i32 %397, i32* %prev_sf, align 4, !dbg !6683
  br label %if.end1225, !dbg !6684

if.end1225:                                       ; preds = %if.then1219, %if.then1212
  br label %for.inc1417, !dbg !6685

if.end1226:                                       ; preds = %lor.lhs.false1209
  br label %if.end1227, !dbg !6686

if.end1227:                                       ; preds = %if.end1226, %av_clip_c.exit
  store i32 0, i32* %w2, align 4, !dbg !6687
  br label %for.cond1228, !dbg !6688

for.cond1228:                                     ; preds = %for.inc1343, %if.end1227
  %398 = load i32, i32* %w2, align 4, !dbg !6689
  %399 = load i32, i32* %w, align 4, !dbg !6691
  %idxprom1229 = sext i32 %399 to i64, !dbg !6692
  %400 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6692
  %ics1230 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %400, i32 0, i32 0, !dbg !6693
  %group_len1231 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1230, i32 0, i32 4, !dbg !6694
  %arrayidx1232 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1231, i64 0, i64 %idxprom1229, !dbg !6692
  %401 = load i8, i8* %arrayidx1232, align 1, !dbg !6692
  %conv1233 = zext i8 %401 to i32, !dbg !6692
  %cmp1234 = icmp slt i32 %398, %conv1233, !dbg !6695
  br i1 %cmp1234, label %for.body1236, label %for.end1345, !dbg !6696

for.body1236:                                     ; preds = %for.cond1228
  call void @llvm.dbg.declare(metadata float* %band_energy, metadata !6697, metadata !2772), !dbg !6698
  call void @llvm.dbg.declare(metadata float* %scale, metadata !6699, metadata !2772), !dbg !6700
  call void @llvm.dbg.declare(metadata float* %pns_senergy, metadata !6701, metadata !2772), !dbg !6702
  call void @llvm.dbg.declare(metadata i32* %start_c, metadata !6703, metadata !2772), !dbg !6704
  %402 = load i32, i32* %w, align 4, !dbg !6705
  %403 = load i32, i32* %w2, align 4, !dbg !6706
  %add1237 = add nsw i32 %402, %403, !dbg !6707
  %mul1238 = mul nsw i32 %add1237, 128, !dbg !6708
  %404 = load i32, i32* %g, align 4, !dbg !6709
  %idxprom1239 = sext i32 %404 to i64, !dbg !6710
  %405 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6710
  %ics1240 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %405, i32 0, i32 0, !dbg !6711
  %swb_offset1241 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1240, i32 0, i32 6, !dbg !6712
  %406 = load i16*, i16** %swb_offset1241, align 16, !dbg !6712
  %arrayidx1242 = getelementptr inbounds i16, i16* %406, i64 %idxprom1239, !dbg !6710
  %407 = load i16, i16* %arrayidx1242, align 2, !dbg !6710
  %conv1243 = zext i16 %407 to i32, !dbg !6710
  %add1244 = add nsw i32 %mul1238, %conv1243, !dbg !6713
  store i32 %add1244, i32* %start_c, align 4, !dbg !6704
  %408 = load i32, i32* %w, align 4, !dbg !6714
  %409 = load i32, i32* %w2, align 4, !dbg !6715
  %add1245 = add nsw i32 %408, %409, !dbg !6716
  %mul1246 = mul nsw i32 %add1245, 16, !dbg !6717
  %410 = load i32, i32* %g, align 4, !dbg !6718
  %add1247 = add nsw i32 %mul1246, %410, !dbg !6719
  %idxprom1248 = sext i32 %add1247 to i64, !dbg !6720
  %411 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6721
  %cur_channel1249 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %411, i32 0, i32 20, !dbg !6722
  %412 = load i32, i32* %cur_channel1249, align 32, !dbg !6722
  %idxprom1250 = sext i32 %412 to i64, !dbg !6720
  %413 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6720
  %psy1251 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %413, i32 0, i32 17, !dbg !6723
  %ch1252 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy1251, i32 0, i32 2, !dbg !6724
  %414 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch1252, align 16, !dbg !6724
  %arrayidx1253 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %414, i64 %idxprom1250, !dbg !6720
  %psy_bands1254 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx1253, i32 0, i32 0, !dbg !6725
  %arrayidx1255 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands1254, i64 0, i64 %idxprom1248, !dbg !6720
  store %struct.FFPsyBand* %arrayidx1255, %struct.FFPsyBand** %band, align 8, !dbg !6726
  store i32 0, i32* %i, align 4, !dbg !6727
  br label %for.cond1256, !dbg !6728

for.cond1256:                                     ; preds = %for.inc1270, %for.body1236
  %415 = load i32, i32* %i, align 4, !dbg !6729
  %416 = load i32, i32* %g, align 4, !dbg !6731
  %idxprom1257 = sext i32 %416 to i64, !dbg !6732
  %417 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6732
  %ics1258 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %417, i32 0, i32 0, !dbg !6733
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1258, i32 0, i32 7, !dbg !6734
  %418 = load i8*, i8** %swb_sizes, align 8, !dbg !6734
  %arrayidx1259 = getelementptr inbounds i8, i8* %418, i64 %idxprom1257, !dbg !6732
  %419 = load i8, i8* %arrayidx1259, align 1, !dbg !6732
  %conv1260 = zext i8 %419 to i32, !dbg !6732
  %cmp1261 = icmp slt i32 %415, %conv1260, !dbg !6735
  br i1 %cmp1261, label %for.body1263, label %for.end1272, !dbg !6736

for.body1263:                                     ; preds = %for.cond1256
  %420 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6737
  %random_state = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %420, i32 0, i32 21, !dbg !6738
  %421 = load i32, i32* %random_state, align 4, !dbg !6738
  store i32 %421, i32* %previous_val.addr.i, align 4, !dbg !6739
  %u.i = bitcast %union.anon* %v.i to i32*, !dbg !6740
  %422 = load i32, i32* %previous_val.addr.i, align 4, !dbg !6741
  %mul.i = mul i32 %422, 1664525, !dbg !6742
  %add.i = add i32 %mul.i, 1013904223, !dbg !6743
  store i32 %add.i, i32* %u.i, align 4, !dbg !6740
  %s.i = bitcast %union.anon* %v.i to i32*, !dbg !6744
  %423 = load i32, i32* %s.i, align 4, !dbg !6744
  %424 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6745
  %random_state1265 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %424, i32 0, i32 21, !dbg !6746
  store i32 %423, i32* %random_state1265, align 4, !dbg !6747
  %425 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6748
  %random_state1266 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %425, i32 0, i32 21, !dbg !6749
  %426 = load i32, i32* %random_state1266, align 4, !dbg !6749
  %conv1267 = sitofp i32 %426 to float, !dbg !6748
  %427 = load i32, i32* %i, align 4, !dbg !6750
  %idxprom1268 = sext i32 %427 to i64, !dbg !6751
  %428 = load float*, float** %PNS, align 8, !dbg !6751
  %arrayidx1269 = getelementptr inbounds float, float* %428, i64 %idxprom1268, !dbg !6751
  store float %conv1267, float* %arrayidx1269, align 4, !dbg !6752
  br label %for.inc1270, !dbg !6753

for.inc1270:                                      ; preds = %for.body1263
  %429 = load i32, i32* %i, align 4, !dbg !6754
  %inc1271 = add nsw i32 %429, 1, !dbg !6754
  store i32 %inc1271, i32* %i, align 4, !dbg !6754
  br label %for.cond1256, !dbg !6756, !llvm.loop !6757

for.end1272:                                      ; preds = %for.cond1256
  %430 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6759
  %fdsp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %430, i32 0, i32 5, !dbg !6760
  %431 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 16, !dbg !6760
  %scalarproduct_float = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %431, i32 0, i32 9, !dbg !6761
  %432 = load float (float*, float*, i32)*, float (float*, float*, i32)** %scalarproduct_float, align 8, !dbg !6761
  %433 = load float*, float** %PNS, align 8, !dbg !6762
  %434 = load float*, float** %PNS, align 8, !dbg !6763
  %435 = load i32, i32* %g, align 4, !dbg !6764
  %idxprom1273 = sext i32 %435 to i64, !dbg !6765
  %436 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6765
  %ics1274 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %436, i32 0, i32 0, !dbg !6766
  %swb_sizes1275 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1274, i32 0, i32 7, !dbg !6767
  %437 = load i8*, i8** %swb_sizes1275, align 8, !dbg !6767
  %arrayidx1276 = getelementptr inbounds i8, i8* %437, i64 %idxprom1273, !dbg !6765
  %438 = load i8, i8* %arrayidx1276, align 1, !dbg !6765
  %conv1277 = zext i8 %438 to i32, !dbg !6765
  %call1278 = call float %432(float* %433, float* %434, i32 %conv1277), !dbg !6759
  store float %call1278, float* %band_energy, align 4, !dbg !6768
  %439 = load float, float* %noise_amp, align 4, !dbg !6769
  %440 = load float, float* %band_energy, align 4, !dbg !6770
  %call1279 = call float @sqrtf(float %440) #9, !dbg !6771
  %div1280 = fdiv float %439, %call1279, !dbg !6772
  store float %div1280, float* %scale, align 4, !dbg !6773
  %441 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6774
  %fdsp1281 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %441, i32 0, i32 5, !dbg !6775
  %442 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp1281, align 16, !dbg !6775
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %442, i32 0, i32 3, !dbg !6776
  %443 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !6776
  %444 = load float*, float** %PNS, align 8, !dbg !6777
  %445 = load float*, float** %PNS, align 8, !dbg !6778
  %446 = load float, float* %scale, align 4, !dbg !6779
  %447 = load i32, i32* %g, align 4, !dbg !6780
  %idxprom1282 = sext i32 %447 to i64, !dbg !6781
  %448 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6781
  %ics1283 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %448, i32 0, i32 0, !dbg !6782
  %swb_sizes1284 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1283, i32 0, i32 7, !dbg !6783
  %449 = load i8*, i8** %swb_sizes1284, align 8, !dbg !6783
  %arrayidx1285 = getelementptr inbounds i8, i8* %449, i64 %idxprom1282, !dbg !6781
  %450 = load i8, i8* %arrayidx1285, align 1, !dbg !6781
  %conv1286 = zext i8 %450 to i32, !dbg !6781
  call void %443(float* %444, float* %445, float %446, i32 %conv1286), !dbg !6774
  %451 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6784
  %fdsp1287 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %451, i32 0, i32 5, !dbg !6785
  %452 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp1287, align 16, !dbg !6785
  %scalarproduct_float1288 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %452, i32 0, i32 9, !dbg !6786
  %453 = load float (float*, float*, i32)*, float (float*, float*, i32)** %scalarproduct_float1288, align 8, !dbg !6786
  %454 = load float*, float** %PNS, align 8, !dbg !6787
  %455 = load float*, float** %PNS, align 8, !dbg !6788
  %456 = load i32, i32* %g, align 4, !dbg !6789
  %idxprom1289 = sext i32 %456 to i64, !dbg !6790
  %457 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6790
  %ics1290 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %457, i32 0, i32 0, !dbg !6791
  %swb_sizes1291 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1290, i32 0, i32 7, !dbg !6792
  %458 = load i8*, i8** %swb_sizes1291, align 8, !dbg !6792
  %arrayidx1292 = getelementptr inbounds i8, i8* %458, i64 %idxprom1289, !dbg !6790
  %459 = load i8, i8* %arrayidx1292, align 1, !dbg !6790
  %conv1293 = zext i8 %459 to i32, !dbg !6790
  %call1294 = call float %453(float* %454, float* %455, i32 %conv1293), !dbg !6784
  store float %call1294, float* %pns_senergy, align 4, !dbg !6793
  %460 = load float, float* %pns_senergy, align 4, !dbg !6794
  %461 = load float, float* %pns_energy, align 4, !dbg !6795
  %add1295 = fadd float %461, %460, !dbg !6795
  store float %add1295, float* %pns_energy, align 4, !dbg !6795
  %462 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6796
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %462, i32 0, i32 32, !dbg !6797
  %463 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !6797
  %464 = load float*, float** %NOR34, align 8, !dbg !6798
  %465 = load i32, i32* %start_c, align 4, !dbg !6799
  %idxprom1296 = sext i32 %465 to i64, !dbg !6800
  %466 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6800
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %466, i32 0, i32 14, !dbg !6801
  %arrayidx1297 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom1296, !dbg !6800
  %467 = load i32, i32* %g, align 4, !dbg !6802
  %idxprom1298 = sext i32 %467 to i64, !dbg !6803
  %468 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6803
  %ics1299 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %468, i32 0, i32 0, !dbg !6804
  %swb_sizes1300 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1299, i32 0, i32 7, !dbg !6805
  %469 = load i8*, i8** %swb_sizes1300, align 8, !dbg !6805
  %arrayidx1301 = getelementptr inbounds i8, i8* %469, i64 %idxprom1298, !dbg !6803
  %470 = load i8, i8* %arrayidx1301, align 1, !dbg !6803
  %conv1302 = zext i8 %470 to i32, !dbg !6803
  call void %463(float* %464, float* %arrayidx1297, i32 %conv1302), !dbg !6796
  %471 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6806
  %abs_pow341303 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %471, i32 0, i32 32, !dbg !6807
  %472 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow341303, align 8, !dbg !6807
  %473 = load float*, float** %PNS34, align 8, !dbg !6808
  %474 = load float*, float** %PNS, align 8, !dbg !6809
  %475 = load i32, i32* %g, align 4, !dbg !6810
  %idxprom1304 = sext i32 %475 to i64, !dbg !6811
  %476 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6811
  %ics1305 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %476, i32 0, i32 0, !dbg !6812
  %swb_sizes1306 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1305, i32 0, i32 7, !dbg !6813
  %477 = load i8*, i8** %swb_sizes1306, align 8, !dbg !6813
  %arrayidx1307 = getelementptr inbounds i8, i8* %477, i64 %idxprom1304, !dbg !6811
  %478 = load i8, i8* %arrayidx1307, align 1, !dbg !6811
  %conv1308 = zext i8 %478 to i32, !dbg !6811
  call void %472(float* %473, float* %474, i32 %conv1308), !dbg !6806
  %479 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6814
  %480 = load i32, i32* %start_c, align 4, !dbg !6815
  %idxprom1309 = sext i32 %480 to i64, !dbg !6816
  %481 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6816
  %coeffs1310 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %481, i32 0, i32 14, !dbg !6817
  %arrayidx1311 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs1310, i64 0, i64 %idxprom1309, !dbg !6816
  %482 = load float*, float** %NOR34, align 8, !dbg !6818
  %483 = load i32, i32* %g, align 4, !dbg !6819
  %idxprom1312 = sext i32 %483 to i64, !dbg !6820
  %484 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6820
  %ics1313 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %484, i32 0, i32 0, !dbg !6821
  %swb_sizes1314 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1313, i32 0, i32 7, !dbg !6822
  %485 = load i8*, i8** %swb_sizes1314, align 8, !dbg !6822
  %arrayidx1315 = getelementptr inbounds i8, i8* %485, i64 %idxprom1312, !dbg !6820
  %486 = load i8, i8* %arrayidx1315, align 1, !dbg !6820
  %conv1316 = zext i8 %486 to i32, !dbg !6820
  %487 = load i32, i32* %w, align 4, !dbg !6823
  %488 = load i32, i32* %w2, align 4, !dbg !6824
  %add1317 = add nsw i32 %487, %488, !dbg !6825
  %mul1318 = mul nsw i32 %add1317, 16, !dbg !6826
  %489 = load i32, i32* %g, align 4, !dbg !6827
  %add1319 = add nsw i32 %mul1318, %489, !dbg !6828
  %idxprom1320 = sext i32 %add1319 to i64, !dbg !6829
  %490 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6829
  %sf_idx1321 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %490, i32 0, i32 7, !dbg !6830
  %arrayidx1322 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1321, i64 0, i64 %idxprom1320, !dbg !6829
  %491 = load i32, i32* %arrayidx1322, align 4, !dbg !6829
  %492 = load i32, i32* %w, align 4, !dbg !6831
  %493 = load i32, i32* %w2, align 4, !dbg !6832
  %add1323 = add nsw i32 %492, %493, !dbg !6833
  %mul1324 = mul nsw i32 %add1323, 16, !dbg !6834
  %494 = load i32, i32* %g, align 4, !dbg !6835
  %add1325 = add nsw i32 %mul1324, %494, !dbg !6836
  %idxprom1326 = sext i32 %add1325 to i64, !dbg !6837
  %495 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6837
  %band_alt1327 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %495, i32 0, i32 4, !dbg !6838
  %arrayidx1328 = getelementptr inbounds [128 x i32], [128 x i32]* %band_alt1327, i64 0, i64 %idxprom1326, !dbg !6837
  %496 = load i32, i32* %arrayidx1328, align 4, !dbg !6837
  %497 = load float, float* %lambda, align 4, !dbg !6839
  %498 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6840
  %threshold1329 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %498, i32 0, i32 2, !dbg !6841
  %499 = load float, float* %threshold1329, align 4, !dbg !6841
  %div1330 = fdiv float %497, %499, !dbg !6842
  %call1331 = call float @quantize_band_cost(%struct.AACEncContext* %479, float* %arrayidx1311, float* %482, i32 %conv1316, i32 %491, i32 %496, float %div1330, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !6843
  %500 = load float, float* %dist1, align 4, !dbg !6844
  %add1332 = fadd float %500, %call1331, !dbg !6844
  store float %add1332, float* %dist1, align 4, !dbg !6844
  %501 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6845
  %energy1333 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %501, i32 0, i32 1, !dbg !6846
  %502 = load float, float* %energy1333, align 4, !dbg !6846
  %503 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6847
  %spread1334 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %503, i32 0, i32 3, !dbg !6848
  %504 = load float, float* %spread1334, align 4, !dbg !6848
  %505 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6849
  %spread1335 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %505, i32 0, i32 3, !dbg !6850
  %506 = load float, float* %spread1335, align 4, !dbg !6850
  %mul1336 = fmul float %504, %506, !dbg !6851
  %div1337 = fdiv float %502, %mul1336, !dbg !6852
  %507 = load float, float* %lambda, align 4, !dbg !6853
  %mul1338 = fmul float %div1337, %507, !dbg !6854
  %508 = load float, float* %dist_thresh, align 4, !dbg !6855
  %mul1339 = fmul float %mul1338, %508, !dbg !6856
  %509 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !6857
  %threshold1340 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %509, i32 0, i32 2, !dbg !6858
  %510 = load float, float* %threshold1340, align 4, !dbg !6858
  %div1341 = fdiv float %mul1339, %510, !dbg !6859
  %511 = load float, float* %dist2, align 4, !dbg !6860
  %add1342 = fadd float %511, %div1341, !dbg !6860
  store float %add1342, float* %dist2, align 4, !dbg !6860
  br label %for.inc1343, !dbg !6861

for.inc1343:                                      ; preds = %for.end1272
  %512 = load i32, i32* %w2, align 4, !dbg !6862
  %inc1344 = add nsw i32 %512, 1, !dbg !6862
  store i32 %inc1344, i32* %w2, align 4, !dbg !6862
  br label %for.cond1228, !dbg !6864, !llvm.loop !6865

for.end1345:                                      ; preds = %for.cond1228
  %513 = load i32, i32* %g, align 4, !dbg !6867
  %tobool1346 = icmp ne i32 %513, 0, !dbg !6867
  br i1 %tobool1346, label %land.lhs.true1347, label %if.else1358, !dbg !6869

land.lhs.true1347:                                ; preds = %for.end1345
  %514 = load i32, i32* %w, align 4, !dbg !6870
  %mul1348 = mul nsw i32 %514, 16, !dbg !6872
  %515 = load i32, i32* %g, align 4, !dbg !6873
  %add1349 = add nsw i32 %mul1348, %515, !dbg !6874
  %sub1350 = sub nsw i32 %add1349, 1, !dbg !6875
  %idxprom1351 = sext i32 %sub1350 to i64, !dbg !6876
  %516 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6876
  %band_type1352 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %516, i32 0, i32 3, !dbg !6877
  %arrayidx1353 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type1352, i64 0, i64 %idxprom1351, !dbg !6876
  %517 = load i32, i32* %arrayidx1353, align 4, !dbg !6876
  %cmp1354 = icmp eq i32 %517, 13, !dbg !6878
  br i1 %cmp1354, label %if.then1356, label %if.else1358, !dbg !6879

if.then1356:                                      ; preds = %land.lhs.true1347
  %518 = load float, float* %dist2, align 4, !dbg !6880
  %add1357 = fadd float %518, 5.000000e+00, !dbg !6880
  store float %add1357, float* %dist2, align 4, !dbg !6880
  br label %if.end1360, !dbg !6882

if.else1358:                                      ; preds = %land.lhs.true1347, %for.end1345
  %519 = load float, float* %dist2, align 4, !dbg !6883
  %add1359 = fadd float %519, 9.000000e+00, !dbg !6883
  store float %add1359, float* %dist2, align 4, !dbg !6883
  br label %if.end1360

if.end1360:                                       ; preds = %if.else1358, %if.then1356
  %520 = load float, float* %pns_tgt_energy, align 4, !dbg !6885
  %521 = load float, float* %pns_energy, align 4, !dbg !6886
  %div1361 = fdiv float %520, %521, !dbg !6887
  store float %div1361, float* %energy_ratio, align 4, !dbg !6888
  %522 = load float, float* %energy_ratio, align 4, !dbg !6889
  %523 = load float, float* %pns_tgt_energy, align 4, !dbg !6890
  %mul1362 = fmul float %522, %523, !dbg !6891
  %524 = load i32, i32* %w, align 4, !dbg !6892
  %mul1363 = mul nsw i32 %524, 16, !dbg !6893
  %525 = load i32, i32* %g, align 4, !dbg !6894
  %add1364 = add nsw i32 %mul1363, %525, !dbg !6895
  %idxprom1365 = sext i32 %add1364 to i64, !dbg !6896
  %526 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6896
  %pns_ener1366 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %526, i32 0, i32 11, !dbg !6897
  %arrayidx1367 = getelementptr inbounds [128 x float], [128 x float]* %pns_ener1366, i64 0, i64 %idxprom1365, !dbg !6896
  store float %mul1362, float* %arrayidx1367, align 4, !dbg !6898
  %527 = load i32, i32* %w, align 4, !dbg !6899
  %mul1368 = mul nsw i32 %527, 16, !dbg !6901
  %528 = load i32, i32* %g, align 4, !dbg !6902
  %add1369 = add nsw i32 %mul1368, %528, !dbg !6903
  %idxprom1370 = sext i32 %add1369 to i64, !dbg !6904
  %529 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6904
  %zeroes1371 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %529, i32 0, i32 8, !dbg !6905
  %arrayidx1372 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1371, i64 0, i64 %idxprom1370, !dbg !6904
  %530 = load i8, i8* %arrayidx1372, align 1, !dbg !6904
  %conv1373 = zext i8 %530 to i32, !dbg !6904
  %tobool1374 = icmp ne i32 %conv1373, 0, !dbg !6904
  br i1 %tobool1374, label %if.then1391, label %lor.lhs.false1375, !dbg !6906

lor.lhs.false1375:                                ; preds = %if.end1360
  %531 = load i32, i32* %w, align 4, !dbg !6907
  %mul1376 = mul nsw i32 %531, 16, !dbg !6909
  %532 = load i32, i32* %g, align 4, !dbg !6910
  %add1377 = add nsw i32 %mul1376, %532, !dbg !6911
  %idxprom1378 = sext i32 %add1377 to i64, !dbg !6912
  %533 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6912
  %band_alt1379 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %533, i32 0, i32 4, !dbg !6913
  %arrayidx1380 = getelementptr inbounds [128 x i32], [128 x i32]* %band_alt1379, i64 0, i64 %idxprom1378, !dbg !6912
  %534 = load i32, i32* %arrayidx1380, align 4, !dbg !6912
  %tobool1381 = icmp ne i32 %534, 0, !dbg !6912
  br i1 %tobool1381, label %lor.lhs.false1382, label %if.then1391, !dbg !6914

lor.lhs.false1382:                                ; preds = %lor.lhs.false1375
  %535 = load float, float* %energy_ratio, align 4, !dbg !6915
  %cmp1383 = fcmp ogt float %535, 0x3FEB333340000000, !dbg !6917
  br i1 %cmp1383, label %land.lhs.true1385, label %if.else1402, !dbg !6918

land.lhs.true1385:                                ; preds = %lor.lhs.false1382
  %536 = load float, float* %energy_ratio, align 4, !dbg !6919
  %cmp1386 = fcmp olt float %536, 1.250000e+00, !dbg !6921
  br i1 %cmp1386, label %land.lhs.true1388, label %if.else1402, !dbg !6922

land.lhs.true1388:                                ; preds = %land.lhs.true1385
  %537 = load float, float* %dist2, align 4, !dbg !6923
  %538 = load float, float* %dist1, align 4, !dbg !6925
  %cmp1389 = fcmp olt float %537, %538, !dbg !6926
  br i1 %cmp1389, label %if.then1391, label %if.else1402, !dbg !6927

if.then1391:                                      ; preds = %land.lhs.true1388, %lor.lhs.false1375, %if.end1360
  %539 = load i32, i32* %w, align 4, !dbg !6928
  %mul1392 = mul nsw i32 %539, 16, !dbg !6930
  %540 = load i32, i32* %g, align 4, !dbg !6931
  %add1393 = add nsw i32 %mul1392, %540, !dbg !6932
  %idxprom1394 = sext i32 %add1393 to i64, !dbg !6933
  %541 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6933
  %band_type1395 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %541, i32 0, i32 3, !dbg !6934
  %arrayidx1396 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type1395, i64 0, i64 %idxprom1394, !dbg !6933
  store i32 13, i32* %arrayidx1396, align 4, !dbg !6935
  %542 = load i32, i32* %w, align 4, !dbg !6936
  %mul1397 = mul nsw i32 %542, 16, !dbg !6937
  %543 = load i32, i32* %g, align 4, !dbg !6938
  %add1398 = add nsw i32 %mul1397, %543, !dbg !6939
  %idxprom1399 = sext i32 %add1398 to i64, !dbg !6940
  %544 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6940
  %zeroes1400 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %544, i32 0, i32 8, !dbg !6941
  %arrayidx1401 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1400, i64 0, i64 %idxprom1399, !dbg !6940
  store i8 0, i8* %arrayidx1401, align 1, !dbg !6942
  %545 = load i32, i32* %noise_sfi, align 4, !dbg !6943
  store i32 %545, i32* %prev, align 4, !dbg !6944
  br label %if.end1416, !dbg !6945

if.else1402:                                      ; preds = %land.lhs.true1388, %land.lhs.true1385, %lor.lhs.false1382
  %546 = load i32, i32* %w, align 4, !dbg !6946
  %mul1403 = mul nsw i32 %546, 16, !dbg !6949
  %547 = load i32, i32* %g, align 4, !dbg !6950
  %add1404 = add nsw i32 %mul1403, %547, !dbg !6951
  %idxprom1405 = sext i32 %add1404 to i64, !dbg !6952
  %548 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6952
  %zeroes1406 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %548, i32 0, i32 8, !dbg !6953
  %arrayidx1407 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1406, i64 0, i64 %idxprom1405, !dbg !6952
  %549 = load i8, i8* %arrayidx1407, align 1, !dbg !6952
  %tobool1408 = icmp ne i8 %549, 0, !dbg !6952
  br i1 %tobool1408, label %if.end1415, label %if.then1409, !dbg !6954

if.then1409:                                      ; preds = %if.else1402
  %550 = load i32, i32* %w, align 4, !dbg !6955
  %mul1410 = mul nsw i32 %550, 16, !dbg !6956
  %551 = load i32, i32* %g, align 4, !dbg !6957
  %add1411 = add nsw i32 %mul1410, %551, !dbg !6958
  %idxprom1412 = sext i32 %add1411 to i64, !dbg !6959
  %552 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6959
  %sf_idx1413 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %552, i32 0, i32 7, !dbg !6960
  %arrayidx1414 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1413, i64 0, i64 %idxprom1412, !dbg !6959
  %553 = load i32, i32* %arrayidx1414, align 4, !dbg !6959
  store i32 %553, i32* %prev_sf, align 4, !dbg !6961
  br label %if.end1415, !dbg !6962

if.end1415:                                       ; preds = %if.then1409, %if.else1402
  br label %if.end1416

if.end1416:                                       ; preds = %if.end1415, %if.then1391
  br label %for.inc1417, !dbg !6963

for.inc1417:                                      ; preds = %if.end1416, %if.end1225, %if.end1182, %if.end1055
  %554 = load i32, i32* %g, align 4, !dbg !6964
  %inc1418 = add nsw i32 %554, 1, !dbg !6964
  store i32 %inc1418, i32* %g, align 4, !dbg !6964
  br label %for.cond1017, !dbg !6966, !llvm.loop !6967

for.end1419:                                      ; preds = %for.cond1017
  br label %for.inc1420, !dbg !6969

for.inc1420:                                      ; preds = %for.end1419
  %555 = load i32, i32* %w, align 4, !dbg !6970
  %idxprom1421 = sext i32 %555 to i64, !dbg !6972
  %556 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6972
  %ics1422 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %556, i32 0, i32 0, !dbg !6973
  %group_len1423 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1422, i32 0, i32 4, !dbg !6974
  %arrayidx1424 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1423, i64 0, i64 %idxprom1421, !dbg !6972
  %557 = load i8, i8* %arrayidx1424, align 1, !dbg !6972
  %conv1425 = zext i8 %557 to i32, !dbg !6972
  %558 = load i32, i32* %w, align 4, !dbg !6975
  %add1426 = add nsw i32 %558, %conv1425, !dbg !6975
  store i32 %add1426, i32* %w, align 4, !dbg !6975
  br label %for.cond, !dbg !6976, !llvm.loop !6977

for.end1427:                                      ; preds = %for.cond
  ret void, !dbg !6979
}

; Function Attrs: nounwind uwtable
define internal void @mark_pns(%struct.AACEncContext* %s, %struct.AVCodecContext* %avctx, %struct.SingleChannelElement* %sce) #0 !dbg !6980 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %band = alloca %struct.FFPsyBand*, align 8
  %w = alloca i32, align 4
  %g = alloca i32, align 4
  %w2 = alloca i32, align 4
  %wlen = alloca i32, align 4
  %bandwidth = alloca i32, align 4
  %cutoff = alloca i32, align 4
  %lambda = alloca float, align 4
  %freq_mult = alloca float, align 4
  %spread_threshold = alloca float, align 4
  %pns_transient_energy_r = alloca float, align 4
  %refbits = alloca i32, align 4
  %rate_bandwidth_multiplier = alloca float, align 4
  %frame_bit_rate = alloca i32, align 4
  %sfb_energy = alloca float, align 4
  %threshold = alloca float, align 4
  %spread = alloca float, align 4
  %min_energy = alloca float, align 4
  %max_energy = alloca float, align 4
  %start = alloca i32, align 4
  %freq = alloca float, align 4
  %freq_boost = alloca float, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6981, metadata !2772), !dbg !6982
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6983, metadata !2772), !dbg !6984
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !6985, metadata !2772), !dbg !6986
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band, metadata !6987, metadata !2772), !dbg !6988
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6989, metadata !2772), !dbg !6990
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6991, metadata !2772), !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !6993, metadata !2772), !dbg !6994
  call void @llvm.dbg.declare(metadata i32* %wlen, metadata !6995, metadata !2772), !dbg !6996
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6997
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !6998
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !6999
  %1 = load i32, i32* %num_windows, align 4, !dbg !6999
  %div = sdiv i32 1024, %1, !dbg !7000
  store i32 %div, i32* %wlen, align 4, !dbg !6996
  call void @llvm.dbg.declare(metadata i32* %bandwidth, metadata !7001, metadata !2772), !dbg !7002
  call void @llvm.dbg.declare(metadata i32* %cutoff, metadata !7003, metadata !2772), !dbg !7004
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !7005, metadata !2772), !dbg !7006
  %2 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7007
  %lambda1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %2, i32 0, i32 22, !dbg !7008
  %3 = load float, float* %lambda1, align 8, !dbg !7008
  store float %3, float* %lambda, align 4, !dbg !7006
  call void @llvm.dbg.declare(metadata float* %freq_mult, metadata !7009, metadata !2772), !dbg !7010
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7011
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 82, !dbg !7012
  %5 = load i32, i32* %sample_rate, align 8, !dbg !7012
  %conv = sitofp i32 %5 to float, !dbg !7011
  %mul = fmul float %conv, 5.000000e-01, !dbg !7013
  %6 = load i32, i32* %wlen, align 4, !dbg !7014
  %conv2 = sitofp i32 %6 to float, !dbg !7014
  %div3 = fdiv float %mul, %conv2, !dbg !7015
  store float %div3, float* %freq_mult, align 4, !dbg !7010
  call void @llvm.dbg.declare(metadata float* %spread_threshold, metadata !7016, metadata !2772), !dbg !7017
  %7 = load float, float* %lambda, align 4, !dbg !7018
  %div4 = fdiv float %7, 1.000000e+02, !dbg !7019
  %cmp = fcmp ogt float 5.000000e-01, %div4, !dbg !7020
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7021

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7022

cond.false:                                       ; preds = %entry
  %8 = load float, float* %lambda, align 4, !dbg !7024
  %div6 = fdiv float %8, 1.000000e+02, !dbg !7026
  br label %cond.end, !dbg !7027

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 5.000000e-01, %cond.true ], [ %div6, %cond.false ], !dbg !7028
  %mul7 = fmul float 0x3FECCCCCC0000000, %cond, !dbg !7030
  %cmp8 = fcmp ogt float 7.500000e-01, %mul7, !dbg !7031
  br i1 %cmp8, label %cond.true10, label %cond.false20, !dbg !7032

cond.true10:                                      ; preds = %cond.end
  %9 = load float, float* %lambda, align 4, !dbg !7033
  %div11 = fdiv float %9, 1.000000e+02, !dbg !7035
  %cmp12 = fcmp ogt float 5.000000e-01, %div11, !dbg !7036
  br i1 %cmp12, label %cond.true14, label %cond.false15, !dbg !7037

cond.true14:                                      ; preds = %cond.true10
  br label %cond.end17, !dbg !7038

cond.false15:                                     ; preds = %cond.true10
  %10 = load float, float* %lambda, align 4, !dbg !7040
  %div16 = fdiv float %10, 1.000000e+02, !dbg !7042
  br label %cond.end17, !dbg !7043

cond.end17:                                       ; preds = %cond.false15, %cond.true14
  %cond18 = phi float [ 5.000000e-01, %cond.true14 ], [ %div16, %cond.false15 ], !dbg !7044
  %mul19 = fmul float 0x3FECCCCCC0000000, %cond18, !dbg !7046
  br label %cond.end21, !dbg !7047

cond.false20:                                     ; preds = %cond.end
  br label %cond.end21, !dbg !7048

cond.end21:                                       ; preds = %cond.false20, %cond.end17
  %cond22 = phi float [ %mul19, %cond.end17 ], [ 7.500000e-01, %cond.false20 ], !dbg !7050
  store float %cond22, float* %spread_threshold, align 4, !dbg !7052
  call void @llvm.dbg.declare(metadata float* %pns_transient_energy_r, metadata !7053, metadata !2772), !dbg !7054
  %11 = load float, float* %lambda, align 4, !dbg !7055
  %div23 = fdiv float %11, 1.400000e+02, !dbg !7056
  %cmp24 = fcmp ogt float 0x3FE6666660000000, %div23, !dbg !7057
  br i1 %cmp24, label %cond.true26, label %cond.false28, !dbg !7058

cond.true26:                                      ; preds = %cond.end21
  %12 = load float, float* %lambda, align 4, !dbg !7059
  %div27 = fdiv float %12, 1.400000e+02, !dbg !7060
  br label %cond.end29, !dbg !7061

cond.false28:                                     ; preds = %cond.end21
  br label %cond.end29, !dbg !7062

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi float [ %div27, %cond.true26 ], [ 0x3FE6666660000000, %cond.false28 ], !dbg !7063
  store float %cond30, float* %pns_transient_energy_r, align 4, !dbg !7064
  call void @llvm.dbg.declare(metadata i32* %refbits, metadata !7065, metadata !2772), !dbg !7066
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7067
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 9, !dbg !7068
  %14 = load i64, i64* %bit_rate, align 8, !dbg !7068
  %conv31 = sitofp i64 %14 to double, !dbg !7067
  %mul32 = fmul double %conv31, 1.024000e+03, !dbg !7069
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7070
  %sample_rate33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 82, !dbg !7071
  %16 = load i32, i32* %sample_rate33, align 8, !dbg !7071
  %conv34 = sitofp i32 %16 to double, !dbg !7070
  %div35 = fdiv double %mul32, %conv34, !dbg !7072
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7073
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 13, !dbg !7074
  %18 = load i32, i32* %flags, align 4, !dbg !7074
  %and = and i32 %18, 2, !dbg !7075
  %tobool = icmp ne i32 %and, 0, !dbg !7075
  br i1 %tobool, label %cond.true36, label %cond.false37, !dbg !7076

cond.true36:                                      ; preds = %cond.end29
  br label %cond.end39, !dbg !7077

cond.false37:                                     ; preds = %cond.end29
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7078
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 83, !dbg !7079
  %20 = load i32, i32* %channels, align 4, !dbg !7079
  %conv38 = sitofp i32 %20 to float, !dbg !7078
  br label %cond.end39, !dbg !7080

cond.end39:                                       ; preds = %cond.false37, %cond.true36
  %cond40 = phi float [ 2.000000e+00, %cond.true36 ], [ %conv38, %cond.false37 ], !dbg !7081
  %conv41 = fpext float %cond40 to double, !dbg !7082
  %div42 = fdiv double %div35, %conv41, !dbg !7083
  %21 = load float, float* %lambda, align 4, !dbg !7084
  %div43 = fdiv float %21, 1.200000e+02, !dbg !7085
  %conv44 = fpext float %div43 to double, !dbg !7086
  %mul45 = fmul double %div42, %conv44, !dbg !7087
  %conv46 = fptosi double %mul45 to i32, !dbg !7088
  store i32 %conv46, i32* %refbits, align 4, !dbg !7089
  call void @llvm.dbg.declare(metadata float* %rate_bandwidth_multiplier, metadata !7090, metadata !2772), !dbg !7091
  store float 1.500000e+00, float* %rate_bandwidth_multiplier, align 4, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %frame_bit_rate, metadata !7092, metadata !2772), !dbg !7093
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7094
  %flags47 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 13, !dbg !7095
  %23 = load i32, i32* %flags47, align 4, !dbg !7095
  %and48 = and i32 %23, 2, !dbg !7096
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7096
  br i1 %tobool49, label %cond.true50, label %cond.false57, !dbg !7097

cond.true50:                                      ; preds = %cond.end39
  %24 = load i32, i32* %refbits, align 4, !dbg !7098
  %conv51 = sitofp i32 %24 to float, !dbg !7098
  %25 = load float, float* %rate_bandwidth_multiplier, align 4, !dbg !7099
  %mul52 = fmul float %conv51, %25, !dbg !7100
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7101
  %sample_rate53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 82, !dbg !7102
  %27 = load i32, i32* %sample_rate53, align 8, !dbg !7102
  %conv54 = sitofp i32 %27 to float, !dbg !7101
  %mul55 = fmul float %mul52, %conv54, !dbg !7103
  %div56 = fdiv float %mul55, 1.024000e+03, !dbg !7104
  br label %cond.end63, !dbg !7105

cond.false57:                                     ; preds = %cond.end39
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7106
  %bit_rate58 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 9, !dbg !7107
  %29 = load i64, i64* %bit_rate58, align 8, !dbg !7107
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7108
  %channels59 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 83, !dbg !7109
  %31 = load i32, i32* %channels59, align 4, !dbg !7109
  %conv60 = sext i32 %31 to i64, !dbg !7108
  %div61 = sdiv i64 %29, %conv60, !dbg !7110
  %conv62 = sitofp i64 %div61 to float, !dbg !7111
  br label %cond.end63, !dbg !7112

cond.end63:                                       ; preds = %cond.false57, %cond.true50
  %cond64 = phi float [ %div56, %cond.true50 ], [ %conv62, %cond.false57 ], !dbg !7113
  %conv65 = fptosi float %cond64 to i32, !dbg !7113
  store i32 %conv65, i32* %frame_bit_rate, align 4, !dbg !7114
  %32 = load i32, i32* %frame_bit_rate, align 4, !dbg !7115
  %conv66 = sitofp i32 %32 to float, !dbg !7115
  %mul67 = fmul float %conv66, 0x3FF2666660000000, !dbg !7115
  %conv68 = fptosi float %mul67 to i32, !dbg !7115
  store i32 %conv68, i32* %frame_bit_rate, align 4, !dbg !7115
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7116
  %cutoff69 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 88, !dbg !7118
  %34 = load i32, i32* %cutoff69, align 8, !dbg !7118
  %cmp70 = icmp sgt i32 %34, 0, !dbg !7119
  br i1 %cmp70, label %if.then, label %if.else, !dbg !7120

if.then:                                          ; preds = %cond.end63
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7121
  %cutoff72 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 88, !dbg !7123
  %36 = load i32, i32* %cutoff72, align 8, !dbg !7123
  store i32 %36, i32* %bandwidth, align 4, !dbg !7124
  br label %if.end, !dbg !7125

if.else:                                          ; preds = %cond.end63
  %37 = load i32, i32* %frame_bit_rate, align 4, !dbg !7126
  %tobool73 = icmp ne i32 %37, 0, !dbg !7126
  br i1 %tobool73, label %cond.true74, label %cond.false527, !dbg !7126

cond.true74:                                      ; preds = %if.else
  %38 = load i32, i32* %frame_bit_rate, align 4, !dbg !7128
  %div75 = sdiv i32 %38, 1, !dbg !7130
  %div76 = sdiv i32 %div75, 5, !dbg !7131
  %39 = load i32, i32* %frame_bit_rate, align 4, !dbg !7132
  %div77 = sdiv i32 %39, 1, !dbg !7133
  %mul78 = mul nsw i32 %div77, 15, !dbg !7134
  %div79 = sdiv i32 %mul78, 32, !dbg !7135
  %sub = sub nsw i32 %div79, 5500, !dbg !7136
  %cmp80 = icmp sgt i32 %div76, %sub, !dbg !7137
  br i1 %cmp80, label %cond.true82, label %cond.false85, !dbg !7138

cond.true82:                                      ; preds = %cond.true74
  %40 = load i32, i32* %frame_bit_rate, align 4, !dbg !7139
  %div83 = sdiv i32 %40, 1, !dbg !7141
  %div84 = sdiv i32 %div83, 5, !dbg !7142
  br label %cond.end90, !dbg !7143

cond.false85:                                     ; preds = %cond.true74
  %41 = load i32, i32* %frame_bit_rate, align 4, !dbg !7144
  %div86 = sdiv i32 %41, 1, !dbg !7146
  %mul87 = mul nsw i32 %div86, 15, !dbg !7147
  %div88 = sdiv i32 %mul87, 32, !dbg !7148
  %sub89 = sub nsw i32 %div88, 5500, !dbg !7149
  br label %cond.end90, !dbg !7150

cond.end90:                                       ; preds = %cond.false85, %cond.true82
  %cond91 = phi i32 [ %div84, %cond.true82 ], [ %sub89, %cond.false85 ], !dbg !7151
  %42 = load i32, i32* %frame_bit_rate, align 4, !dbg !7153
  %div92 = sdiv i32 %42, 1, !dbg !7154
  %div93 = sdiv i32 %div92, 4, !dbg !7155
  %add = add nsw i32 3000, %div93, !dbg !7156
  %cmp94 = icmp sgt i32 %cond91, %add, !dbg !7157
  br i1 %cmp94, label %cond.true96, label %cond.false100, !dbg !7158

cond.true96:                                      ; preds = %cond.end90
  %43 = load i32, i32* %frame_bit_rate, align 4, !dbg !7159
  %div97 = sdiv i32 %43, 1, !dbg !7161
  %div98 = sdiv i32 %div97, 4, !dbg !7162
  %add99 = add nsw i32 3000, %div98, !dbg !7163
  br label %cond.end119, !dbg !7164

cond.false100:                                    ; preds = %cond.end90
  %44 = load i32, i32* %frame_bit_rate, align 4, !dbg !7165
  %div101 = sdiv i32 %44, 1, !dbg !7167
  %div102 = sdiv i32 %div101, 5, !dbg !7168
  %45 = load i32, i32* %frame_bit_rate, align 4, !dbg !7169
  %div103 = sdiv i32 %45, 1, !dbg !7170
  %mul104 = mul nsw i32 %div103, 15, !dbg !7171
  %div105 = sdiv i32 %mul104, 32, !dbg !7172
  %sub106 = sub nsw i32 %div105, 5500, !dbg !7173
  %cmp107 = icmp sgt i32 %div102, %sub106, !dbg !7174
  br i1 %cmp107, label %cond.true109, label %cond.false112, !dbg !7175

cond.true109:                                     ; preds = %cond.false100
  %46 = load i32, i32* %frame_bit_rate, align 4, !dbg !7176
  %div110 = sdiv i32 %46, 1, !dbg !7178
  %div111 = sdiv i32 %div110, 5, !dbg !7179
  br label %cond.end117, !dbg !7180

cond.false112:                                    ; preds = %cond.false100
  %47 = load i32, i32* %frame_bit_rate, align 4, !dbg !7181
  %div113 = sdiv i32 %47, 1, !dbg !7183
  %mul114 = mul nsw i32 %div113, 15, !dbg !7184
  %div115 = sdiv i32 %mul114, 32, !dbg !7185
  %sub116 = sub nsw i32 %div115, 5500, !dbg !7186
  br label %cond.end117, !dbg !7187

cond.end117:                                      ; preds = %cond.false112, %cond.true109
  %cond118 = phi i32 [ %div111, %cond.true109 ], [ %sub116, %cond.false112 ], !dbg !7188
  br label %cond.end119, !dbg !7190

cond.end119:                                      ; preds = %cond.end117, %cond.true96
  %cond120 = phi i32 [ %add99, %cond.true96 ], [ %cond118, %cond.end117 ], !dbg !7191
  %48 = load i32, i32* %frame_bit_rate, align 4, !dbg !7193
  %div121 = sdiv i32 %48, 1, !dbg !7194
  %div122 = sdiv i32 %div121, 16, !dbg !7195
  %add123 = add nsw i32 12000, %div122, !dbg !7196
  %cmp124 = icmp sgt i32 %cond120, %add123, !dbg !7197
  br i1 %cmp124, label %cond.true126, label %cond.false130, !dbg !7198

cond.true126:                                     ; preds = %cond.end119
  %49 = load i32, i32* %frame_bit_rate, align 4, !dbg !7199
  %div127 = sdiv i32 %49, 1, !dbg !7201
  %div128 = sdiv i32 %div127, 16, !dbg !7202
  %add129 = add nsw i32 12000, %div128, !dbg !7203
  br label %cond.end179, !dbg !7204

cond.false130:                                    ; preds = %cond.end119
  %50 = load i32, i32* %frame_bit_rate, align 4, !dbg !7205
  %div131 = sdiv i32 %50, 1, !dbg !7207
  %div132 = sdiv i32 %div131, 5, !dbg !7208
  %51 = load i32, i32* %frame_bit_rate, align 4, !dbg !7209
  %div133 = sdiv i32 %51, 1, !dbg !7210
  %mul134 = mul nsw i32 %div133, 15, !dbg !7211
  %div135 = sdiv i32 %mul134, 32, !dbg !7212
  %sub136 = sub nsw i32 %div135, 5500, !dbg !7213
  %cmp137 = icmp sgt i32 %div132, %sub136, !dbg !7214
  br i1 %cmp137, label %cond.true139, label %cond.false142, !dbg !7215

cond.true139:                                     ; preds = %cond.false130
  %52 = load i32, i32* %frame_bit_rate, align 4, !dbg !7216
  %div140 = sdiv i32 %52, 1, !dbg !7218
  %div141 = sdiv i32 %div140, 5, !dbg !7219
  br label %cond.end147, !dbg !7220

cond.false142:                                    ; preds = %cond.false130
  %53 = load i32, i32* %frame_bit_rate, align 4, !dbg !7221
  %div143 = sdiv i32 %53, 1, !dbg !7223
  %mul144 = mul nsw i32 %div143, 15, !dbg !7224
  %div145 = sdiv i32 %mul144, 32, !dbg !7225
  %sub146 = sub nsw i32 %div145, 5500, !dbg !7226
  br label %cond.end147, !dbg !7227

cond.end147:                                      ; preds = %cond.false142, %cond.true139
  %cond148 = phi i32 [ %div141, %cond.true139 ], [ %sub146, %cond.false142 ], !dbg !7228
  %54 = load i32, i32* %frame_bit_rate, align 4, !dbg !7230
  %div149 = sdiv i32 %54, 1, !dbg !7231
  %div150 = sdiv i32 %div149, 4, !dbg !7232
  %add151 = add nsw i32 3000, %div150, !dbg !7233
  %cmp152 = icmp sgt i32 %cond148, %add151, !dbg !7234
  br i1 %cmp152, label %cond.true154, label %cond.false158, !dbg !7235

cond.true154:                                     ; preds = %cond.end147
  %55 = load i32, i32* %frame_bit_rate, align 4, !dbg !7236
  %div155 = sdiv i32 %55, 1, !dbg !7238
  %div156 = sdiv i32 %div155, 4, !dbg !7239
  %add157 = add nsw i32 3000, %div156, !dbg !7240
  br label %cond.end177, !dbg !7241

cond.false158:                                    ; preds = %cond.end147
  %56 = load i32, i32* %frame_bit_rate, align 4, !dbg !7242
  %div159 = sdiv i32 %56, 1, !dbg !7244
  %div160 = sdiv i32 %div159, 5, !dbg !7245
  %57 = load i32, i32* %frame_bit_rate, align 4, !dbg !7246
  %div161 = sdiv i32 %57, 1, !dbg !7247
  %mul162 = mul nsw i32 %div161, 15, !dbg !7248
  %div163 = sdiv i32 %mul162, 32, !dbg !7249
  %sub164 = sub nsw i32 %div163, 5500, !dbg !7250
  %cmp165 = icmp sgt i32 %div160, %sub164, !dbg !7251
  br i1 %cmp165, label %cond.true167, label %cond.false170, !dbg !7252

cond.true167:                                     ; preds = %cond.false158
  %58 = load i32, i32* %frame_bit_rate, align 4, !dbg !7253
  %div168 = sdiv i32 %58, 1, !dbg !7255
  %div169 = sdiv i32 %div168, 5, !dbg !7256
  br label %cond.end175, !dbg !7257

cond.false170:                                    ; preds = %cond.false158
  %59 = load i32, i32* %frame_bit_rate, align 4, !dbg !7258
  %div171 = sdiv i32 %59, 1, !dbg !7260
  %mul172 = mul nsw i32 %div171, 15, !dbg !7261
  %div173 = sdiv i32 %mul172, 32, !dbg !7262
  %sub174 = sub nsw i32 %div173, 5500, !dbg !7263
  br label %cond.end175, !dbg !7264

cond.end175:                                      ; preds = %cond.false170, %cond.true167
  %cond176 = phi i32 [ %div169, %cond.true167 ], [ %sub174, %cond.false170 ], !dbg !7265
  br label %cond.end177, !dbg !7267

cond.end177:                                      ; preds = %cond.end175, %cond.true154
  %cond178 = phi i32 [ %add157, %cond.true154 ], [ %cond176, %cond.end175 ], !dbg !7268
  br label %cond.end179, !dbg !7270

cond.end179:                                      ; preds = %cond.end177, %cond.true126
  %cond180 = phi i32 [ %add129, %cond.true126 ], [ %cond178, %cond.end177 ], !dbg !7271
  %cmp181 = icmp sgt i32 %cond180, 22000, !dbg !7273
  br i1 %cmp181, label %cond.true183, label %cond.false184, !dbg !7274

cond.true183:                                     ; preds = %cond.end179
  br label %cond.end293, !dbg !7275

cond.false184:                                    ; preds = %cond.end179
  %60 = load i32, i32* %frame_bit_rate, align 4, !dbg !7277
  %div185 = sdiv i32 %60, 1, !dbg !7279
  %div186 = sdiv i32 %div185, 5, !dbg !7280
  %61 = load i32, i32* %frame_bit_rate, align 4, !dbg !7281
  %div187 = sdiv i32 %61, 1, !dbg !7282
  %mul188 = mul nsw i32 %div187, 15, !dbg !7283
  %div189 = sdiv i32 %mul188, 32, !dbg !7284
  %sub190 = sub nsw i32 %div189, 5500, !dbg !7285
  %cmp191 = icmp sgt i32 %div186, %sub190, !dbg !7286
  br i1 %cmp191, label %cond.true193, label %cond.false196, !dbg !7287

cond.true193:                                     ; preds = %cond.false184
  %62 = load i32, i32* %frame_bit_rate, align 4, !dbg !7288
  %div194 = sdiv i32 %62, 1, !dbg !7290
  %div195 = sdiv i32 %div194, 5, !dbg !7291
  br label %cond.end201, !dbg !7292

cond.false196:                                    ; preds = %cond.false184
  %63 = load i32, i32* %frame_bit_rate, align 4, !dbg !7293
  %div197 = sdiv i32 %63, 1, !dbg !7295
  %mul198 = mul nsw i32 %div197, 15, !dbg !7296
  %div199 = sdiv i32 %mul198, 32, !dbg !7297
  %sub200 = sub nsw i32 %div199, 5500, !dbg !7298
  br label %cond.end201, !dbg !7299

cond.end201:                                      ; preds = %cond.false196, %cond.true193
  %cond202 = phi i32 [ %div195, %cond.true193 ], [ %sub200, %cond.false196 ], !dbg !7300
  %64 = load i32, i32* %frame_bit_rate, align 4, !dbg !7302
  %div203 = sdiv i32 %64, 1, !dbg !7303
  %div204 = sdiv i32 %div203, 4, !dbg !7304
  %add205 = add nsw i32 3000, %div204, !dbg !7305
  %cmp206 = icmp sgt i32 %cond202, %add205, !dbg !7306
  br i1 %cmp206, label %cond.true208, label %cond.false212, !dbg !7307

cond.true208:                                     ; preds = %cond.end201
  %65 = load i32, i32* %frame_bit_rate, align 4, !dbg !7308
  %div209 = sdiv i32 %65, 1, !dbg !7310
  %div210 = sdiv i32 %div209, 4, !dbg !7311
  %add211 = add nsw i32 3000, %div210, !dbg !7312
  br label %cond.end231, !dbg !7313

cond.false212:                                    ; preds = %cond.end201
  %66 = load i32, i32* %frame_bit_rate, align 4, !dbg !7314
  %div213 = sdiv i32 %66, 1, !dbg !7316
  %div214 = sdiv i32 %div213, 5, !dbg !7317
  %67 = load i32, i32* %frame_bit_rate, align 4, !dbg !7318
  %div215 = sdiv i32 %67, 1, !dbg !7319
  %mul216 = mul nsw i32 %div215, 15, !dbg !7320
  %div217 = sdiv i32 %mul216, 32, !dbg !7321
  %sub218 = sub nsw i32 %div217, 5500, !dbg !7322
  %cmp219 = icmp sgt i32 %div214, %sub218, !dbg !7323
  br i1 %cmp219, label %cond.true221, label %cond.false224, !dbg !7324

cond.true221:                                     ; preds = %cond.false212
  %68 = load i32, i32* %frame_bit_rate, align 4, !dbg !7325
  %div222 = sdiv i32 %68, 1, !dbg !7327
  %div223 = sdiv i32 %div222, 5, !dbg !7328
  br label %cond.end229, !dbg !7329

cond.false224:                                    ; preds = %cond.false212
  %69 = load i32, i32* %frame_bit_rate, align 4, !dbg !7330
  %div225 = sdiv i32 %69, 1, !dbg !7332
  %mul226 = mul nsw i32 %div225, 15, !dbg !7333
  %div227 = sdiv i32 %mul226, 32, !dbg !7334
  %sub228 = sub nsw i32 %div227, 5500, !dbg !7335
  br label %cond.end229, !dbg !7336

cond.end229:                                      ; preds = %cond.false224, %cond.true221
  %cond230 = phi i32 [ %div223, %cond.true221 ], [ %sub228, %cond.false224 ], !dbg !7337
  br label %cond.end231, !dbg !7339

cond.end231:                                      ; preds = %cond.end229, %cond.true208
  %cond232 = phi i32 [ %add211, %cond.true208 ], [ %cond230, %cond.end229 ], !dbg !7340
  %70 = load i32, i32* %frame_bit_rate, align 4, !dbg !7342
  %div233 = sdiv i32 %70, 1, !dbg !7343
  %div234 = sdiv i32 %div233, 16, !dbg !7344
  %add235 = add nsw i32 12000, %div234, !dbg !7345
  %cmp236 = icmp sgt i32 %cond232, %add235, !dbg !7346
  br i1 %cmp236, label %cond.true238, label %cond.false242, !dbg !7347

cond.true238:                                     ; preds = %cond.end231
  %71 = load i32, i32* %frame_bit_rate, align 4, !dbg !7348
  %div239 = sdiv i32 %71, 1, !dbg !7350
  %div240 = sdiv i32 %div239, 16, !dbg !7351
  %add241 = add nsw i32 12000, %div240, !dbg !7352
  br label %cond.end291, !dbg !7353

cond.false242:                                    ; preds = %cond.end231
  %72 = load i32, i32* %frame_bit_rate, align 4, !dbg !7354
  %div243 = sdiv i32 %72, 1, !dbg !7356
  %div244 = sdiv i32 %div243, 5, !dbg !7357
  %73 = load i32, i32* %frame_bit_rate, align 4, !dbg !7358
  %div245 = sdiv i32 %73, 1, !dbg !7359
  %mul246 = mul nsw i32 %div245, 15, !dbg !7360
  %div247 = sdiv i32 %mul246, 32, !dbg !7361
  %sub248 = sub nsw i32 %div247, 5500, !dbg !7362
  %cmp249 = icmp sgt i32 %div244, %sub248, !dbg !7363
  br i1 %cmp249, label %cond.true251, label %cond.false254, !dbg !7364

cond.true251:                                     ; preds = %cond.false242
  %74 = load i32, i32* %frame_bit_rate, align 4, !dbg !7365
  %div252 = sdiv i32 %74, 1, !dbg !7367
  %div253 = sdiv i32 %div252, 5, !dbg !7368
  br label %cond.end259, !dbg !7369

cond.false254:                                    ; preds = %cond.false242
  %75 = load i32, i32* %frame_bit_rate, align 4, !dbg !7370
  %div255 = sdiv i32 %75, 1, !dbg !7372
  %mul256 = mul nsw i32 %div255, 15, !dbg !7373
  %div257 = sdiv i32 %mul256, 32, !dbg !7374
  %sub258 = sub nsw i32 %div257, 5500, !dbg !7375
  br label %cond.end259, !dbg !7376

cond.end259:                                      ; preds = %cond.false254, %cond.true251
  %cond260 = phi i32 [ %div253, %cond.true251 ], [ %sub258, %cond.false254 ], !dbg !7377
  %76 = load i32, i32* %frame_bit_rate, align 4, !dbg !7379
  %div261 = sdiv i32 %76, 1, !dbg !7380
  %div262 = sdiv i32 %div261, 4, !dbg !7381
  %add263 = add nsw i32 3000, %div262, !dbg !7382
  %cmp264 = icmp sgt i32 %cond260, %add263, !dbg !7383
  br i1 %cmp264, label %cond.true266, label %cond.false270, !dbg !7384

cond.true266:                                     ; preds = %cond.end259
  %77 = load i32, i32* %frame_bit_rate, align 4, !dbg !7385
  %div267 = sdiv i32 %77, 1, !dbg !7387
  %div268 = sdiv i32 %div267, 4, !dbg !7388
  %add269 = add nsw i32 3000, %div268, !dbg !7389
  br label %cond.end289, !dbg !7390

cond.false270:                                    ; preds = %cond.end259
  %78 = load i32, i32* %frame_bit_rate, align 4, !dbg !7391
  %div271 = sdiv i32 %78, 1, !dbg !7393
  %div272 = sdiv i32 %div271, 5, !dbg !7394
  %79 = load i32, i32* %frame_bit_rate, align 4, !dbg !7395
  %div273 = sdiv i32 %79, 1, !dbg !7396
  %mul274 = mul nsw i32 %div273, 15, !dbg !7397
  %div275 = sdiv i32 %mul274, 32, !dbg !7398
  %sub276 = sub nsw i32 %div275, 5500, !dbg !7399
  %cmp277 = icmp sgt i32 %div272, %sub276, !dbg !7400
  br i1 %cmp277, label %cond.true279, label %cond.false282, !dbg !7401

cond.true279:                                     ; preds = %cond.false270
  %80 = load i32, i32* %frame_bit_rate, align 4, !dbg !7402
  %div280 = sdiv i32 %80, 1, !dbg !7404
  %div281 = sdiv i32 %div280, 5, !dbg !7405
  br label %cond.end287, !dbg !7406

cond.false282:                                    ; preds = %cond.false270
  %81 = load i32, i32* %frame_bit_rate, align 4, !dbg !7407
  %div283 = sdiv i32 %81, 1, !dbg !7409
  %mul284 = mul nsw i32 %div283, 15, !dbg !7410
  %div285 = sdiv i32 %mul284, 32, !dbg !7411
  %sub286 = sub nsw i32 %div285, 5500, !dbg !7412
  br label %cond.end287, !dbg !7413

cond.end287:                                      ; preds = %cond.false282, %cond.true279
  %cond288 = phi i32 [ %div281, %cond.true279 ], [ %sub286, %cond.false282 ], !dbg !7414
  br label %cond.end289, !dbg !7416

cond.end289:                                      ; preds = %cond.end287, %cond.true266
  %cond290 = phi i32 [ %add269, %cond.true266 ], [ %cond288, %cond.end287 ], !dbg !7417
  br label %cond.end291, !dbg !7419

cond.end291:                                      ; preds = %cond.end289, %cond.true238
  %cond292 = phi i32 [ %add241, %cond.true238 ], [ %cond290, %cond.end289 ], !dbg !7420
  br label %cond.end293, !dbg !7422

cond.end293:                                      ; preds = %cond.end291, %cond.true183
  %cond294 = phi i32 [ 22000, %cond.true183 ], [ %cond292, %cond.end291 ], !dbg !7423
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7425
  %sample_rate295 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 82, !dbg !7426
  %83 = load i32, i32* %sample_rate295, align 8, !dbg !7426
  %div296 = sdiv i32 %83, 2, !dbg !7427
  %cmp297 = icmp sgt i32 %cond294, %div296, !dbg !7428
  br i1 %cmp297, label %cond.true299, label %cond.false302, !dbg !7429

cond.true299:                                     ; preds = %cond.end293
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7430
  %sample_rate300 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 82, !dbg !7432
  %85 = load i32, i32* %sample_rate300, align 8, !dbg !7432
  %div301 = sdiv i32 %85, 2, !dbg !7433
  br label %cond.end525, !dbg !7434

cond.false302:                                    ; preds = %cond.end293
  %86 = load i32, i32* %frame_bit_rate, align 4, !dbg !7435
  %div303 = sdiv i32 %86, 1, !dbg !7437
  %div304 = sdiv i32 %div303, 5, !dbg !7438
  %87 = load i32, i32* %frame_bit_rate, align 4, !dbg !7439
  %div305 = sdiv i32 %87, 1, !dbg !7440
  %mul306 = mul nsw i32 %div305, 15, !dbg !7441
  %div307 = sdiv i32 %mul306, 32, !dbg !7442
  %sub308 = sub nsw i32 %div307, 5500, !dbg !7443
  %cmp309 = icmp sgt i32 %div304, %sub308, !dbg !7444
  br i1 %cmp309, label %cond.true311, label %cond.false314, !dbg !7445

cond.true311:                                     ; preds = %cond.false302
  %88 = load i32, i32* %frame_bit_rate, align 4, !dbg !7446
  %div312 = sdiv i32 %88, 1, !dbg !7448
  %div313 = sdiv i32 %div312, 5, !dbg !7449
  br label %cond.end319, !dbg !7450

cond.false314:                                    ; preds = %cond.false302
  %89 = load i32, i32* %frame_bit_rate, align 4, !dbg !7451
  %div315 = sdiv i32 %89, 1, !dbg !7453
  %mul316 = mul nsw i32 %div315, 15, !dbg !7454
  %div317 = sdiv i32 %mul316, 32, !dbg !7455
  %sub318 = sub nsw i32 %div317, 5500, !dbg !7456
  br label %cond.end319, !dbg !7457

cond.end319:                                      ; preds = %cond.false314, %cond.true311
  %cond320 = phi i32 [ %div313, %cond.true311 ], [ %sub318, %cond.false314 ], !dbg !7458
  %90 = load i32, i32* %frame_bit_rate, align 4, !dbg !7460
  %div321 = sdiv i32 %90, 1, !dbg !7461
  %div322 = sdiv i32 %div321, 4, !dbg !7462
  %add323 = add nsw i32 3000, %div322, !dbg !7463
  %cmp324 = icmp sgt i32 %cond320, %add323, !dbg !7464
  br i1 %cmp324, label %cond.true326, label %cond.false330, !dbg !7465

cond.true326:                                     ; preds = %cond.end319
  %91 = load i32, i32* %frame_bit_rate, align 4, !dbg !7466
  %div327 = sdiv i32 %91, 1, !dbg !7468
  %div328 = sdiv i32 %div327, 4, !dbg !7469
  %add329 = add nsw i32 3000, %div328, !dbg !7470
  br label %cond.end349, !dbg !7471

cond.false330:                                    ; preds = %cond.end319
  %92 = load i32, i32* %frame_bit_rate, align 4, !dbg !7472
  %div331 = sdiv i32 %92, 1, !dbg !7474
  %div332 = sdiv i32 %div331, 5, !dbg !7475
  %93 = load i32, i32* %frame_bit_rate, align 4, !dbg !7476
  %div333 = sdiv i32 %93, 1, !dbg !7477
  %mul334 = mul nsw i32 %div333, 15, !dbg !7478
  %div335 = sdiv i32 %mul334, 32, !dbg !7479
  %sub336 = sub nsw i32 %div335, 5500, !dbg !7480
  %cmp337 = icmp sgt i32 %div332, %sub336, !dbg !7481
  br i1 %cmp337, label %cond.true339, label %cond.false342, !dbg !7482

cond.true339:                                     ; preds = %cond.false330
  %94 = load i32, i32* %frame_bit_rate, align 4, !dbg !7483
  %div340 = sdiv i32 %94, 1, !dbg !7485
  %div341 = sdiv i32 %div340, 5, !dbg !7486
  br label %cond.end347, !dbg !7487

cond.false342:                                    ; preds = %cond.false330
  %95 = load i32, i32* %frame_bit_rate, align 4, !dbg !7488
  %div343 = sdiv i32 %95, 1, !dbg !7490
  %mul344 = mul nsw i32 %div343, 15, !dbg !7491
  %div345 = sdiv i32 %mul344, 32, !dbg !7492
  %sub346 = sub nsw i32 %div345, 5500, !dbg !7493
  br label %cond.end347, !dbg !7494

cond.end347:                                      ; preds = %cond.false342, %cond.true339
  %cond348 = phi i32 [ %div341, %cond.true339 ], [ %sub346, %cond.false342 ], !dbg !7495
  br label %cond.end349, !dbg !7497

cond.end349:                                      ; preds = %cond.end347, %cond.true326
  %cond350 = phi i32 [ %add329, %cond.true326 ], [ %cond348, %cond.end347 ], !dbg !7498
  %96 = load i32, i32* %frame_bit_rate, align 4, !dbg !7500
  %div351 = sdiv i32 %96, 1, !dbg !7501
  %div352 = sdiv i32 %div351, 16, !dbg !7502
  %add353 = add nsw i32 12000, %div352, !dbg !7503
  %cmp354 = icmp sgt i32 %cond350, %add353, !dbg !7504
  br i1 %cmp354, label %cond.true356, label %cond.false360, !dbg !7505

cond.true356:                                     ; preds = %cond.end349
  %97 = load i32, i32* %frame_bit_rate, align 4, !dbg !7506
  %div357 = sdiv i32 %97, 1, !dbg !7508
  %div358 = sdiv i32 %div357, 16, !dbg !7509
  %add359 = add nsw i32 12000, %div358, !dbg !7510
  br label %cond.end409, !dbg !7511

cond.false360:                                    ; preds = %cond.end349
  %98 = load i32, i32* %frame_bit_rate, align 4, !dbg !7512
  %div361 = sdiv i32 %98, 1, !dbg !7514
  %div362 = sdiv i32 %div361, 5, !dbg !7515
  %99 = load i32, i32* %frame_bit_rate, align 4, !dbg !7516
  %div363 = sdiv i32 %99, 1, !dbg !7517
  %mul364 = mul nsw i32 %div363, 15, !dbg !7518
  %div365 = sdiv i32 %mul364, 32, !dbg !7519
  %sub366 = sub nsw i32 %div365, 5500, !dbg !7520
  %cmp367 = icmp sgt i32 %div362, %sub366, !dbg !7521
  br i1 %cmp367, label %cond.true369, label %cond.false372, !dbg !7522

cond.true369:                                     ; preds = %cond.false360
  %100 = load i32, i32* %frame_bit_rate, align 4, !dbg !7523
  %div370 = sdiv i32 %100, 1, !dbg !7525
  %div371 = sdiv i32 %div370, 5, !dbg !7526
  br label %cond.end377, !dbg !7527

cond.false372:                                    ; preds = %cond.false360
  %101 = load i32, i32* %frame_bit_rate, align 4, !dbg !7528
  %div373 = sdiv i32 %101, 1, !dbg !7530
  %mul374 = mul nsw i32 %div373, 15, !dbg !7531
  %div375 = sdiv i32 %mul374, 32, !dbg !7532
  %sub376 = sub nsw i32 %div375, 5500, !dbg !7533
  br label %cond.end377, !dbg !7534

cond.end377:                                      ; preds = %cond.false372, %cond.true369
  %cond378 = phi i32 [ %div371, %cond.true369 ], [ %sub376, %cond.false372 ], !dbg !7535
  %102 = load i32, i32* %frame_bit_rate, align 4, !dbg !7537
  %div379 = sdiv i32 %102, 1, !dbg !7538
  %div380 = sdiv i32 %div379, 4, !dbg !7539
  %add381 = add nsw i32 3000, %div380, !dbg !7540
  %cmp382 = icmp sgt i32 %cond378, %add381, !dbg !7541
  br i1 %cmp382, label %cond.true384, label %cond.false388, !dbg !7542

cond.true384:                                     ; preds = %cond.end377
  %103 = load i32, i32* %frame_bit_rate, align 4, !dbg !7543
  %div385 = sdiv i32 %103, 1, !dbg !7545
  %div386 = sdiv i32 %div385, 4, !dbg !7546
  %add387 = add nsw i32 3000, %div386, !dbg !7547
  br label %cond.end407, !dbg !7548

cond.false388:                                    ; preds = %cond.end377
  %104 = load i32, i32* %frame_bit_rate, align 4, !dbg !7549
  %div389 = sdiv i32 %104, 1, !dbg !7551
  %div390 = sdiv i32 %div389, 5, !dbg !7552
  %105 = load i32, i32* %frame_bit_rate, align 4, !dbg !7553
  %div391 = sdiv i32 %105, 1, !dbg !7554
  %mul392 = mul nsw i32 %div391, 15, !dbg !7555
  %div393 = sdiv i32 %mul392, 32, !dbg !7556
  %sub394 = sub nsw i32 %div393, 5500, !dbg !7557
  %cmp395 = icmp sgt i32 %div390, %sub394, !dbg !7558
  br i1 %cmp395, label %cond.true397, label %cond.false400, !dbg !7559

cond.true397:                                     ; preds = %cond.false388
  %106 = load i32, i32* %frame_bit_rate, align 4, !dbg !7560
  %div398 = sdiv i32 %106, 1, !dbg !7562
  %div399 = sdiv i32 %div398, 5, !dbg !7563
  br label %cond.end405, !dbg !7564

cond.false400:                                    ; preds = %cond.false388
  %107 = load i32, i32* %frame_bit_rate, align 4, !dbg !7565
  %div401 = sdiv i32 %107, 1, !dbg !7567
  %mul402 = mul nsw i32 %div401, 15, !dbg !7568
  %div403 = sdiv i32 %mul402, 32, !dbg !7569
  %sub404 = sub nsw i32 %div403, 5500, !dbg !7570
  br label %cond.end405, !dbg !7571

cond.end405:                                      ; preds = %cond.false400, %cond.true397
  %cond406 = phi i32 [ %div399, %cond.true397 ], [ %sub404, %cond.false400 ], !dbg !7572
  br label %cond.end407, !dbg !7574

cond.end407:                                      ; preds = %cond.end405, %cond.true384
  %cond408 = phi i32 [ %add387, %cond.true384 ], [ %cond406, %cond.end405 ], !dbg !7575
  br label %cond.end409, !dbg !7577

cond.end409:                                      ; preds = %cond.end407, %cond.true356
  %cond410 = phi i32 [ %add359, %cond.true356 ], [ %cond408, %cond.end407 ], !dbg !7578
  %cmp411 = icmp sgt i32 %cond410, 22000, !dbg !7580
  br i1 %cmp411, label %cond.true413, label %cond.false414, !dbg !7581

cond.true413:                                     ; preds = %cond.end409
  br label %cond.end523, !dbg !7582

cond.false414:                                    ; preds = %cond.end409
  %108 = load i32, i32* %frame_bit_rate, align 4, !dbg !7584
  %div415 = sdiv i32 %108, 1, !dbg !7586
  %div416 = sdiv i32 %div415, 5, !dbg !7587
  %109 = load i32, i32* %frame_bit_rate, align 4, !dbg !7588
  %div417 = sdiv i32 %109, 1, !dbg !7589
  %mul418 = mul nsw i32 %div417, 15, !dbg !7590
  %div419 = sdiv i32 %mul418, 32, !dbg !7591
  %sub420 = sub nsw i32 %div419, 5500, !dbg !7592
  %cmp421 = icmp sgt i32 %div416, %sub420, !dbg !7593
  br i1 %cmp421, label %cond.true423, label %cond.false426, !dbg !7594

cond.true423:                                     ; preds = %cond.false414
  %110 = load i32, i32* %frame_bit_rate, align 4, !dbg !7595
  %div424 = sdiv i32 %110, 1, !dbg !7597
  %div425 = sdiv i32 %div424, 5, !dbg !7598
  br label %cond.end431, !dbg !7599

cond.false426:                                    ; preds = %cond.false414
  %111 = load i32, i32* %frame_bit_rate, align 4, !dbg !7600
  %div427 = sdiv i32 %111, 1, !dbg !7602
  %mul428 = mul nsw i32 %div427, 15, !dbg !7603
  %div429 = sdiv i32 %mul428, 32, !dbg !7604
  %sub430 = sub nsw i32 %div429, 5500, !dbg !7605
  br label %cond.end431, !dbg !7606

cond.end431:                                      ; preds = %cond.false426, %cond.true423
  %cond432 = phi i32 [ %div425, %cond.true423 ], [ %sub430, %cond.false426 ], !dbg !7607
  %112 = load i32, i32* %frame_bit_rate, align 4, !dbg !7609
  %div433 = sdiv i32 %112, 1, !dbg !7610
  %div434 = sdiv i32 %div433, 4, !dbg !7611
  %add435 = add nsw i32 3000, %div434, !dbg !7612
  %cmp436 = icmp sgt i32 %cond432, %add435, !dbg !7613
  br i1 %cmp436, label %cond.true438, label %cond.false442, !dbg !7614

cond.true438:                                     ; preds = %cond.end431
  %113 = load i32, i32* %frame_bit_rate, align 4, !dbg !7615
  %div439 = sdiv i32 %113, 1, !dbg !7617
  %div440 = sdiv i32 %div439, 4, !dbg !7618
  %add441 = add nsw i32 3000, %div440, !dbg !7619
  br label %cond.end461, !dbg !7620

cond.false442:                                    ; preds = %cond.end431
  %114 = load i32, i32* %frame_bit_rate, align 4, !dbg !7621
  %div443 = sdiv i32 %114, 1, !dbg !7623
  %div444 = sdiv i32 %div443, 5, !dbg !7624
  %115 = load i32, i32* %frame_bit_rate, align 4, !dbg !7625
  %div445 = sdiv i32 %115, 1, !dbg !7626
  %mul446 = mul nsw i32 %div445, 15, !dbg !7627
  %div447 = sdiv i32 %mul446, 32, !dbg !7628
  %sub448 = sub nsw i32 %div447, 5500, !dbg !7629
  %cmp449 = icmp sgt i32 %div444, %sub448, !dbg !7630
  br i1 %cmp449, label %cond.true451, label %cond.false454, !dbg !7631

cond.true451:                                     ; preds = %cond.false442
  %116 = load i32, i32* %frame_bit_rate, align 4, !dbg !7632
  %div452 = sdiv i32 %116, 1, !dbg !7634
  %div453 = sdiv i32 %div452, 5, !dbg !7635
  br label %cond.end459, !dbg !7636

cond.false454:                                    ; preds = %cond.false442
  %117 = load i32, i32* %frame_bit_rate, align 4, !dbg !7637
  %div455 = sdiv i32 %117, 1, !dbg !7639
  %mul456 = mul nsw i32 %div455, 15, !dbg !7640
  %div457 = sdiv i32 %mul456, 32, !dbg !7641
  %sub458 = sub nsw i32 %div457, 5500, !dbg !7642
  br label %cond.end459, !dbg !7643

cond.end459:                                      ; preds = %cond.false454, %cond.true451
  %cond460 = phi i32 [ %div453, %cond.true451 ], [ %sub458, %cond.false454 ], !dbg !7644
  br label %cond.end461, !dbg !7646

cond.end461:                                      ; preds = %cond.end459, %cond.true438
  %cond462 = phi i32 [ %add441, %cond.true438 ], [ %cond460, %cond.end459 ], !dbg !7647
  %118 = load i32, i32* %frame_bit_rate, align 4, !dbg !7649
  %div463 = sdiv i32 %118, 1, !dbg !7650
  %div464 = sdiv i32 %div463, 16, !dbg !7651
  %add465 = add nsw i32 12000, %div464, !dbg !7652
  %cmp466 = icmp sgt i32 %cond462, %add465, !dbg !7653
  br i1 %cmp466, label %cond.true468, label %cond.false472, !dbg !7654

cond.true468:                                     ; preds = %cond.end461
  %119 = load i32, i32* %frame_bit_rate, align 4, !dbg !7655
  %div469 = sdiv i32 %119, 1, !dbg !7657
  %div470 = sdiv i32 %div469, 16, !dbg !7658
  %add471 = add nsw i32 12000, %div470, !dbg !7659
  br label %cond.end521, !dbg !7660

cond.false472:                                    ; preds = %cond.end461
  %120 = load i32, i32* %frame_bit_rate, align 4, !dbg !7661
  %div473 = sdiv i32 %120, 1, !dbg !7663
  %div474 = sdiv i32 %div473, 5, !dbg !7664
  %121 = load i32, i32* %frame_bit_rate, align 4, !dbg !7665
  %div475 = sdiv i32 %121, 1, !dbg !7666
  %mul476 = mul nsw i32 %div475, 15, !dbg !7667
  %div477 = sdiv i32 %mul476, 32, !dbg !7668
  %sub478 = sub nsw i32 %div477, 5500, !dbg !7669
  %cmp479 = icmp sgt i32 %div474, %sub478, !dbg !7670
  br i1 %cmp479, label %cond.true481, label %cond.false484, !dbg !7671

cond.true481:                                     ; preds = %cond.false472
  %122 = load i32, i32* %frame_bit_rate, align 4, !dbg !7672
  %div482 = sdiv i32 %122, 1, !dbg !7674
  %div483 = sdiv i32 %div482, 5, !dbg !7675
  br label %cond.end489, !dbg !7676

cond.false484:                                    ; preds = %cond.false472
  %123 = load i32, i32* %frame_bit_rate, align 4, !dbg !7677
  %div485 = sdiv i32 %123, 1, !dbg !7679
  %mul486 = mul nsw i32 %div485, 15, !dbg !7680
  %div487 = sdiv i32 %mul486, 32, !dbg !7681
  %sub488 = sub nsw i32 %div487, 5500, !dbg !7682
  br label %cond.end489, !dbg !7683

cond.end489:                                      ; preds = %cond.false484, %cond.true481
  %cond490 = phi i32 [ %div483, %cond.true481 ], [ %sub488, %cond.false484 ], !dbg !7684
  %124 = load i32, i32* %frame_bit_rate, align 4, !dbg !7686
  %div491 = sdiv i32 %124, 1, !dbg !7687
  %div492 = sdiv i32 %div491, 4, !dbg !7688
  %add493 = add nsw i32 3000, %div492, !dbg !7689
  %cmp494 = icmp sgt i32 %cond490, %add493, !dbg !7690
  br i1 %cmp494, label %cond.true496, label %cond.false500, !dbg !7691

cond.true496:                                     ; preds = %cond.end489
  %125 = load i32, i32* %frame_bit_rate, align 4, !dbg !7692
  %div497 = sdiv i32 %125, 1, !dbg !7694
  %div498 = sdiv i32 %div497, 4, !dbg !7695
  %add499 = add nsw i32 3000, %div498, !dbg !7696
  br label %cond.end519, !dbg !7697

cond.false500:                                    ; preds = %cond.end489
  %126 = load i32, i32* %frame_bit_rate, align 4, !dbg !7698
  %div501 = sdiv i32 %126, 1, !dbg !7700
  %div502 = sdiv i32 %div501, 5, !dbg !7701
  %127 = load i32, i32* %frame_bit_rate, align 4, !dbg !7702
  %div503 = sdiv i32 %127, 1, !dbg !7703
  %mul504 = mul nsw i32 %div503, 15, !dbg !7704
  %div505 = sdiv i32 %mul504, 32, !dbg !7705
  %sub506 = sub nsw i32 %div505, 5500, !dbg !7706
  %cmp507 = icmp sgt i32 %div502, %sub506, !dbg !7707
  br i1 %cmp507, label %cond.true509, label %cond.false512, !dbg !7708

cond.true509:                                     ; preds = %cond.false500
  %128 = load i32, i32* %frame_bit_rate, align 4, !dbg !7709
  %div510 = sdiv i32 %128, 1, !dbg !7711
  %div511 = sdiv i32 %div510, 5, !dbg !7712
  br label %cond.end517, !dbg !7713

cond.false512:                                    ; preds = %cond.false500
  %129 = load i32, i32* %frame_bit_rate, align 4, !dbg !7714
  %div513 = sdiv i32 %129, 1, !dbg !7716
  %mul514 = mul nsw i32 %div513, 15, !dbg !7717
  %div515 = sdiv i32 %mul514, 32, !dbg !7718
  %sub516 = sub nsw i32 %div515, 5500, !dbg !7719
  br label %cond.end517, !dbg !7720

cond.end517:                                      ; preds = %cond.false512, %cond.true509
  %cond518 = phi i32 [ %div511, %cond.true509 ], [ %sub516, %cond.false512 ], !dbg !7721
  br label %cond.end519, !dbg !7723

cond.end519:                                      ; preds = %cond.end517, %cond.true496
  %cond520 = phi i32 [ %add499, %cond.true496 ], [ %cond518, %cond.end517 ], !dbg !7724
  br label %cond.end521, !dbg !7726

cond.end521:                                      ; preds = %cond.end519, %cond.true468
  %cond522 = phi i32 [ %add471, %cond.true468 ], [ %cond520, %cond.end519 ], !dbg !7727
  br label %cond.end523, !dbg !7729

cond.end523:                                      ; preds = %cond.end521, %cond.true413
  %cond524 = phi i32 [ 22000, %cond.true413 ], [ %cond522, %cond.end521 ], !dbg !7730
  br label %cond.end525, !dbg !7732

cond.end525:                                      ; preds = %cond.end523, %cond.true299
  %cond526 = phi i32 [ %div301, %cond.true299 ], [ %cond524, %cond.end523 ], !dbg !7733
  br label %cond.end530, !dbg !7735

cond.false527:                                    ; preds = %if.else
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7736
  %sample_rate528 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %130, i32 0, i32 82, !dbg !7738
  %131 = load i32, i32* %sample_rate528, align 8, !dbg !7738
  %div529 = sdiv i32 %131, 2, !dbg !7739
  br label %cond.end530, !dbg !7740

cond.end530:                                      ; preds = %cond.false527, %cond.end525
  %cond531 = phi i32 [ %cond526, %cond.end525 ], [ %div529, %cond.false527 ], !dbg !7741
  %cmp532 = icmp sgt i32 3000, %cond531, !dbg !7743
  br i1 %cmp532, label %cond.true534, label %cond.false535, !dbg !7744

cond.true534:                                     ; preds = %cond.end530
  br label %cond.end997, !dbg !7745

cond.false535:                                    ; preds = %cond.end530
  %132 = load i32, i32* %frame_bit_rate, align 4, !dbg !7747
  %tobool536 = icmp ne i32 %132, 0, !dbg !7747
  br i1 %tobool536, label %cond.true537, label %cond.false992, !dbg !7747

cond.true537:                                     ; preds = %cond.false535
  %133 = load i32, i32* %frame_bit_rate, align 4, !dbg !7749
  %div538 = sdiv i32 %133, 1, !dbg !7751
  %div539 = sdiv i32 %div538, 5, !dbg !7752
  %134 = load i32, i32* %frame_bit_rate, align 4, !dbg !7753
  %div540 = sdiv i32 %134, 1, !dbg !7754
  %mul541 = mul nsw i32 %div540, 15, !dbg !7755
  %div542 = sdiv i32 %mul541, 32, !dbg !7756
  %sub543 = sub nsw i32 %div542, 5500, !dbg !7757
  %cmp544 = icmp sgt i32 %div539, %sub543, !dbg !7758
  br i1 %cmp544, label %cond.true546, label %cond.false549, !dbg !7759

cond.true546:                                     ; preds = %cond.true537
  %135 = load i32, i32* %frame_bit_rate, align 4, !dbg !7760
  %div547 = sdiv i32 %135, 1, !dbg !7762
  %div548 = sdiv i32 %div547, 5, !dbg !7763
  br label %cond.end554, !dbg !7764

cond.false549:                                    ; preds = %cond.true537
  %136 = load i32, i32* %frame_bit_rate, align 4, !dbg !7765
  %div550 = sdiv i32 %136, 1, !dbg !7767
  %mul551 = mul nsw i32 %div550, 15, !dbg !7768
  %div552 = sdiv i32 %mul551, 32, !dbg !7769
  %sub553 = sub nsw i32 %div552, 5500, !dbg !7770
  br label %cond.end554, !dbg !7771

cond.end554:                                      ; preds = %cond.false549, %cond.true546
  %cond555 = phi i32 [ %div548, %cond.true546 ], [ %sub553, %cond.false549 ], !dbg !7772
  %137 = load i32, i32* %frame_bit_rate, align 4, !dbg !7774
  %div556 = sdiv i32 %137, 1, !dbg !7775
  %div557 = sdiv i32 %div556, 4, !dbg !7776
  %add558 = add nsw i32 3000, %div557, !dbg !7777
  %cmp559 = icmp sgt i32 %cond555, %add558, !dbg !7778
  br i1 %cmp559, label %cond.true561, label %cond.false565, !dbg !7779

cond.true561:                                     ; preds = %cond.end554
  %138 = load i32, i32* %frame_bit_rate, align 4, !dbg !7780
  %div562 = sdiv i32 %138, 1, !dbg !7782
  %div563 = sdiv i32 %div562, 4, !dbg !7783
  %add564 = add nsw i32 3000, %div563, !dbg !7784
  br label %cond.end584, !dbg !7785

cond.false565:                                    ; preds = %cond.end554
  %139 = load i32, i32* %frame_bit_rate, align 4, !dbg !7786
  %div566 = sdiv i32 %139, 1, !dbg !7788
  %div567 = sdiv i32 %div566, 5, !dbg !7789
  %140 = load i32, i32* %frame_bit_rate, align 4, !dbg !7790
  %div568 = sdiv i32 %140, 1, !dbg !7791
  %mul569 = mul nsw i32 %div568, 15, !dbg !7792
  %div570 = sdiv i32 %mul569, 32, !dbg !7793
  %sub571 = sub nsw i32 %div570, 5500, !dbg !7794
  %cmp572 = icmp sgt i32 %div567, %sub571, !dbg !7795
  br i1 %cmp572, label %cond.true574, label %cond.false577, !dbg !7796

cond.true574:                                     ; preds = %cond.false565
  %141 = load i32, i32* %frame_bit_rate, align 4, !dbg !7797
  %div575 = sdiv i32 %141, 1, !dbg !7799
  %div576 = sdiv i32 %div575, 5, !dbg !7800
  br label %cond.end582, !dbg !7801

cond.false577:                                    ; preds = %cond.false565
  %142 = load i32, i32* %frame_bit_rate, align 4, !dbg !7802
  %div578 = sdiv i32 %142, 1, !dbg !7804
  %mul579 = mul nsw i32 %div578, 15, !dbg !7805
  %div580 = sdiv i32 %mul579, 32, !dbg !7806
  %sub581 = sub nsw i32 %div580, 5500, !dbg !7807
  br label %cond.end582, !dbg !7808

cond.end582:                                      ; preds = %cond.false577, %cond.true574
  %cond583 = phi i32 [ %div576, %cond.true574 ], [ %sub581, %cond.false577 ], !dbg !7809
  br label %cond.end584, !dbg !7811

cond.end584:                                      ; preds = %cond.end582, %cond.true561
  %cond585 = phi i32 [ %add564, %cond.true561 ], [ %cond583, %cond.end582 ], !dbg !7812
  %143 = load i32, i32* %frame_bit_rate, align 4, !dbg !7814
  %div586 = sdiv i32 %143, 1, !dbg !7815
  %div587 = sdiv i32 %div586, 16, !dbg !7816
  %add588 = add nsw i32 12000, %div587, !dbg !7817
  %cmp589 = icmp sgt i32 %cond585, %add588, !dbg !7818
  br i1 %cmp589, label %cond.true591, label %cond.false595, !dbg !7819

cond.true591:                                     ; preds = %cond.end584
  %144 = load i32, i32* %frame_bit_rate, align 4, !dbg !7820
  %div592 = sdiv i32 %144, 1, !dbg !7822
  %div593 = sdiv i32 %div592, 16, !dbg !7823
  %add594 = add nsw i32 12000, %div593, !dbg !7824
  br label %cond.end644, !dbg !7825

cond.false595:                                    ; preds = %cond.end584
  %145 = load i32, i32* %frame_bit_rate, align 4, !dbg !7826
  %div596 = sdiv i32 %145, 1, !dbg !7828
  %div597 = sdiv i32 %div596, 5, !dbg !7829
  %146 = load i32, i32* %frame_bit_rate, align 4, !dbg !7830
  %div598 = sdiv i32 %146, 1, !dbg !7831
  %mul599 = mul nsw i32 %div598, 15, !dbg !7832
  %div600 = sdiv i32 %mul599, 32, !dbg !7833
  %sub601 = sub nsw i32 %div600, 5500, !dbg !7834
  %cmp602 = icmp sgt i32 %div597, %sub601, !dbg !7835
  br i1 %cmp602, label %cond.true604, label %cond.false607, !dbg !7836

cond.true604:                                     ; preds = %cond.false595
  %147 = load i32, i32* %frame_bit_rate, align 4, !dbg !7837
  %div605 = sdiv i32 %147, 1, !dbg !7839
  %div606 = sdiv i32 %div605, 5, !dbg !7840
  br label %cond.end612, !dbg !7841

cond.false607:                                    ; preds = %cond.false595
  %148 = load i32, i32* %frame_bit_rate, align 4, !dbg !7842
  %div608 = sdiv i32 %148, 1, !dbg !7844
  %mul609 = mul nsw i32 %div608, 15, !dbg !7845
  %div610 = sdiv i32 %mul609, 32, !dbg !7846
  %sub611 = sub nsw i32 %div610, 5500, !dbg !7847
  br label %cond.end612, !dbg !7848

cond.end612:                                      ; preds = %cond.false607, %cond.true604
  %cond613 = phi i32 [ %div606, %cond.true604 ], [ %sub611, %cond.false607 ], !dbg !7849
  %149 = load i32, i32* %frame_bit_rate, align 4, !dbg !7851
  %div614 = sdiv i32 %149, 1, !dbg !7852
  %div615 = sdiv i32 %div614, 4, !dbg !7853
  %add616 = add nsw i32 3000, %div615, !dbg !7854
  %cmp617 = icmp sgt i32 %cond613, %add616, !dbg !7855
  br i1 %cmp617, label %cond.true619, label %cond.false623, !dbg !7856

cond.true619:                                     ; preds = %cond.end612
  %150 = load i32, i32* %frame_bit_rate, align 4, !dbg !7857
  %div620 = sdiv i32 %150, 1, !dbg !7859
  %div621 = sdiv i32 %div620, 4, !dbg !7860
  %add622 = add nsw i32 3000, %div621, !dbg !7861
  br label %cond.end642, !dbg !7862

cond.false623:                                    ; preds = %cond.end612
  %151 = load i32, i32* %frame_bit_rate, align 4, !dbg !7863
  %div624 = sdiv i32 %151, 1, !dbg !7865
  %div625 = sdiv i32 %div624, 5, !dbg !7866
  %152 = load i32, i32* %frame_bit_rate, align 4, !dbg !7867
  %div626 = sdiv i32 %152, 1, !dbg !7868
  %mul627 = mul nsw i32 %div626, 15, !dbg !7869
  %div628 = sdiv i32 %mul627, 32, !dbg !7870
  %sub629 = sub nsw i32 %div628, 5500, !dbg !7871
  %cmp630 = icmp sgt i32 %div625, %sub629, !dbg !7872
  br i1 %cmp630, label %cond.true632, label %cond.false635, !dbg !7873

cond.true632:                                     ; preds = %cond.false623
  %153 = load i32, i32* %frame_bit_rate, align 4, !dbg !7874
  %div633 = sdiv i32 %153, 1, !dbg !7876
  %div634 = sdiv i32 %div633, 5, !dbg !7877
  br label %cond.end640, !dbg !7878

cond.false635:                                    ; preds = %cond.false623
  %154 = load i32, i32* %frame_bit_rate, align 4, !dbg !7879
  %div636 = sdiv i32 %154, 1, !dbg !7881
  %mul637 = mul nsw i32 %div636, 15, !dbg !7882
  %div638 = sdiv i32 %mul637, 32, !dbg !7883
  %sub639 = sub nsw i32 %div638, 5500, !dbg !7884
  br label %cond.end640, !dbg !7885

cond.end640:                                      ; preds = %cond.false635, %cond.true632
  %cond641 = phi i32 [ %div634, %cond.true632 ], [ %sub639, %cond.false635 ], !dbg !7886
  br label %cond.end642, !dbg !7888

cond.end642:                                      ; preds = %cond.end640, %cond.true619
  %cond643 = phi i32 [ %add622, %cond.true619 ], [ %cond641, %cond.end640 ], !dbg !7889
  br label %cond.end644, !dbg !7891

cond.end644:                                      ; preds = %cond.end642, %cond.true591
  %cond645 = phi i32 [ %add594, %cond.true591 ], [ %cond643, %cond.end642 ], !dbg !7892
  %cmp646 = icmp sgt i32 %cond645, 22000, !dbg !7894
  br i1 %cmp646, label %cond.true648, label %cond.false649, !dbg !7895

cond.true648:                                     ; preds = %cond.end644
  br label %cond.end758, !dbg !7896

cond.false649:                                    ; preds = %cond.end644
  %155 = load i32, i32* %frame_bit_rate, align 4, !dbg !7898
  %div650 = sdiv i32 %155, 1, !dbg !7900
  %div651 = sdiv i32 %div650, 5, !dbg !7901
  %156 = load i32, i32* %frame_bit_rate, align 4, !dbg !7902
  %div652 = sdiv i32 %156, 1, !dbg !7903
  %mul653 = mul nsw i32 %div652, 15, !dbg !7904
  %div654 = sdiv i32 %mul653, 32, !dbg !7905
  %sub655 = sub nsw i32 %div654, 5500, !dbg !7906
  %cmp656 = icmp sgt i32 %div651, %sub655, !dbg !7907
  br i1 %cmp656, label %cond.true658, label %cond.false661, !dbg !7908

cond.true658:                                     ; preds = %cond.false649
  %157 = load i32, i32* %frame_bit_rate, align 4, !dbg !7909
  %div659 = sdiv i32 %157, 1, !dbg !7911
  %div660 = sdiv i32 %div659, 5, !dbg !7912
  br label %cond.end666, !dbg !7913

cond.false661:                                    ; preds = %cond.false649
  %158 = load i32, i32* %frame_bit_rate, align 4, !dbg !7914
  %div662 = sdiv i32 %158, 1, !dbg !7916
  %mul663 = mul nsw i32 %div662, 15, !dbg !7917
  %div664 = sdiv i32 %mul663, 32, !dbg !7918
  %sub665 = sub nsw i32 %div664, 5500, !dbg !7919
  br label %cond.end666, !dbg !7920

cond.end666:                                      ; preds = %cond.false661, %cond.true658
  %cond667 = phi i32 [ %div660, %cond.true658 ], [ %sub665, %cond.false661 ], !dbg !7921
  %159 = load i32, i32* %frame_bit_rate, align 4, !dbg !7923
  %div668 = sdiv i32 %159, 1, !dbg !7924
  %div669 = sdiv i32 %div668, 4, !dbg !7925
  %add670 = add nsw i32 3000, %div669, !dbg !7926
  %cmp671 = icmp sgt i32 %cond667, %add670, !dbg !7927
  br i1 %cmp671, label %cond.true673, label %cond.false677, !dbg !7928

cond.true673:                                     ; preds = %cond.end666
  %160 = load i32, i32* %frame_bit_rate, align 4, !dbg !7929
  %div674 = sdiv i32 %160, 1, !dbg !7931
  %div675 = sdiv i32 %div674, 4, !dbg !7932
  %add676 = add nsw i32 3000, %div675, !dbg !7933
  br label %cond.end696, !dbg !7934

cond.false677:                                    ; preds = %cond.end666
  %161 = load i32, i32* %frame_bit_rate, align 4, !dbg !7935
  %div678 = sdiv i32 %161, 1, !dbg !7937
  %div679 = sdiv i32 %div678, 5, !dbg !7938
  %162 = load i32, i32* %frame_bit_rate, align 4, !dbg !7939
  %div680 = sdiv i32 %162, 1, !dbg !7940
  %mul681 = mul nsw i32 %div680, 15, !dbg !7941
  %div682 = sdiv i32 %mul681, 32, !dbg !7942
  %sub683 = sub nsw i32 %div682, 5500, !dbg !7943
  %cmp684 = icmp sgt i32 %div679, %sub683, !dbg !7944
  br i1 %cmp684, label %cond.true686, label %cond.false689, !dbg !7945

cond.true686:                                     ; preds = %cond.false677
  %163 = load i32, i32* %frame_bit_rate, align 4, !dbg !7946
  %div687 = sdiv i32 %163, 1, !dbg !7948
  %div688 = sdiv i32 %div687, 5, !dbg !7949
  br label %cond.end694, !dbg !7950

cond.false689:                                    ; preds = %cond.false677
  %164 = load i32, i32* %frame_bit_rate, align 4, !dbg !7951
  %div690 = sdiv i32 %164, 1, !dbg !7953
  %mul691 = mul nsw i32 %div690, 15, !dbg !7954
  %div692 = sdiv i32 %mul691, 32, !dbg !7955
  %sub693 = sub nsw i32 %div692, 5500, !dbg !7956
  br label %cond.end694, !dbg !7957

cond.end694:                                      ; preds = %cond.false689, %cond.true686
  %cond695 = phi i32 [ %div688, %cond.true686 ], [ %sub693, %cond.false689 ], !dbg !7958
  br label %cond.end696, !dbg !7960

cond.end696:                                      ; preds = %cond.end694, %cond.true673
  %cond697 = phi i32 [ %add676, %cond.true673 ], [ %cond695, %cond.end694 ], !dbg !7961
  %165 = load i32, i32* %frame_bit_rate, align 4, !dbg !7963
  %div698 = sdiv i32 %165, 1, !dbg !7964
  %div699 = sdiv i32 %div698, 16, !dbg !7965
  %add700 = add nsw i32 12000, %div699, !dbg !7966
  %cmp701 = icmp sgt i32 %cond697, %add700, !dbg !7967
  br i1 %cmp701, label %cond.true703, label %cond.false707, !dbg !7968

cond.true703:                                     ; preds = %cond.end696
  %166 = load i32, i32* %frame_bit_rate, align 4, !dbg !7969
  %div704 = sdiv i32 %166, 1, !dbg !7971
  %div705 = sdiv i32 %div704, 16, !dbg !7972
  %add706 = add nsw i32 12000, %div705, !dbg !7973
  br label %cond.end756, !dbg !7974

cond.false707:                                    ; preds = %cond.end696
  %167 = load i32, i32* %frame_bit_rate, align 4, !dbg !7975
  %div708 = sdiv i32 %167, 1, !dbg !7977
  %div709 = sdiv i32 %div708, 5, !dbg !7978
  %168 = load i32, i32* %frame_bit_rate, align 4, !dbg !7979
  %div710 = sdiv i32 %168, 1, !dbg !7980
  %mul711 = mul nsw i32 %div710, 15, !dbg !7981
  %div712 = sdiv i32 %mul711, 32, !dbg !7982
  %sub713 = sub nsw i32 %div712, 5500, !dbg !7983
  %cmp714 = icmp sgt i32 %div709, %sub713, !dbg !7984
  br i1 %cmp714, label %cond.true716, label %cond.false719, !dbg !7985

cond.true716:                                     ; preds = %cond.false707
  %169 = load i32, i32* %frame_bit_rate, align 4, !dbg !7986
  %div717 = sdiv i32 %169, 1, !dbg !7988
  %div718 = sdiv i32 %div717, 5, !dbg !7989
  br label %cond.end724, !dbg !7990

cond.false719:                                    ; preds = %cond.false707
  %170 = load i32, i32* %frame_bit_rate, align 4, !dbg !7991
  %div720 = sdiv i32 %170, 1, !dbg !7993
  %mul721 = mul nsw i32 %div720, 15, !dbg !7994
  %div722 = sdiv i32 %mul721, 32, !dbg !7995
  %sub723 = sub nsw i32 %div722, 5500, !dbg !7996
  br label %cond.end724, !dbg !7997

cond.end724:                                      ; preds = %cond.false719, %cond.true716
  %cond725 = phi i32 [ %div718, %cond.true716 ], [ %sub723, %cond.false719 ], !dbg !7998
  %171 = load i32, i32* %frame_bit_rate, align 4, !dbg !8000
  %div726 = sdiv i32 %171, 1, !dbg !8001
  %div727 = sdiv i32 %div726, 4, !dbg !8002
  %add728 = add nsw i32 3000, %div727, !dbg !8003
  %cmp729 = icmp sgt i32 %cond725, %add728, !dbg !8004
  br i1 %cmp729, label %cond.true731, label %cond.false735, !dbg !8005

cond.true731:                                     ; preds = %cond.end724
  %172 = load i32, i32* %frame_bit_rate, align 4, !dbg !8006
  %div732 = sdiv i32 %172, 1, !dbg !8008
  %div733 = sdiv i32 %div732, 4, !dbg !8009
  %add734 = add nsw i32 3000, %div733, !dbg !8010
  br label %cond.end754, !dbg !8011

cond.false735:                                    ; preds = %cond.end724
  %173 = load i32, i32* %frame_bit_rate, align 4, !dbg !8012
  %div736 = sdiv i32 %173, 1, !dbg !8014
  %div737 = sdiv i32 %div736, 5, !dbg !8015
  %174 = load i32, i32* %frame_bit_rate, align 4, !dbg !8016
  %div738 = sdiv i32 %174, 1, !dbg !8017
  %mul739 = mul nsw i32 %div738, 15, !dbg !8018
  %div740 = sdiv i32 %mul739, 32, !dbg !8019
  %sub741 = sub nsw i32 %div740, 5500, !dbg !8020
  %cmp742 = icmp sgt i32 %div737, %sub741, !dbg !8021
  br i1 %cmp742, label %cond.true744, label %cond.false747, !dbg !8022

cond.true744:                                     ; preds = %cond.false735
  %175 = load i32, i32* %frame_bit_rate, align 4, !dbg !8023
  %div745 = sdiv i32 %175, 1, !dbg !8025
  %div746 = sdiv i32 %div745, 5, !dbg !8026
  br label %cond.end752, !dbg !8027

cond.false747:                                    ; preds = %cond.false735
  %176 = load i32, i32* %frame_bit_rate, align 4, !dbg !8028
  %div748 = sdiv i32 %176, 1, !dbg !8030
  %mul749 = mul nsw i32 %div748, 15, !dbg !8031
  %div750 = sdiv i32 %mul749, 32, !dbg !8032
  %sub751 = sub nsw i32 %div750, 5500, !dbg !8033
  br label %cond.end752, !dbg !8034

cond.end752:                                      ; preds = %cond.false747, %cond.true744
  %cond753 = phi i32 [ %div746, %cond.true744 ], [ %sub751, %cond.false747 ], !dbg !8035
  br label %cond.end754, !dbg !8037

cond.end754:                                      ; preds = %cond.end752, %cond.true731
  %cond755 = phi i32 [ %add734, %cond.true731 ], [ %cond753, %cond.end752 ], !dbg !8038
  br label %cond.end756, !dbg !8040

cond.end756:                                      ; preds = %cond.end754, %cond.true703
  %cond757 = phi i32 [ %add706, %cond.true703 ], [ %cond755, %cond.end754 ], !dbg !8041
  br label %cond.end758, !dbg !8043

cond.end758:                                      ; preds = %cond.end756, %cond.true648
  %cond759 = phi i32 [ 22000, %cond.true648 ], [ %cond757, %cond.end756 ], !dbg !8044
  %177 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8046
  %sample_rate760 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %177, i32 0, i32 82, !dbg !8047
  %178 = load i32, i32* %sample_rate760, align 8, !dbg !8047
  %div761 = sdiv i32 %178, 2, !dbg !8048
  %cmp762 = icmp sgt i32 %cond759, %div761, !dbg !8049
  br i1 %cmp762, label %cond.true764, label %cond.false767, !dbg !8050

cond.true764:                                     ; preds = %cond.end758
  %179 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8051
  %sample_rate765 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %179, i32 0, i32 82, !dbg !8053
  %180 = load i32, i32* %sample_rate765, align 8, !dbg !8053
  %div766 = sdiv i32 %180, 2, !dbg !8054
  br label %cond.end990, !dbg !8055

cond.false767:                                    ; preds = %cond.end758
  %181 = load i32, i32* %frame_bit_rate, align 4, !dbg !8056
  %div768 = sdiv i32 %181, 1, !dbg !8058
  %div769 = sdiv i32 %div768, 5, !dbg !8059
  %182 = load i32, i32* %frame_bit_rate, align 4, !dbg !8060
  %div770 = sdiv i32 %182, 1, !dbg !8061
  %mul771 = mul nsw i32 %div770, 15, !dbg !8062
  %div772 = sdiv i32 %mul771, 32, !dbg !8063
  %sub773 = sub nsw i32 %div772, 5500, !dbg !8064
  %cmp774 = icmp sgt i32 %div769, %sub773, !dbg !8065
  br i1 %cmp774, label %cond.true776, label %cond.false779, !dbg !8066

cond.true776:                                     ; preds = %cond.false767
  %183 = load i32, i32* %frame_bit_rate, align 4, !dbg !8067
  %div777 = sdiv i32 %183, 1, !dbg !8069
  %div778 = sdiv i32 %div777, 5, !dbg !8070
  br label %cond.end784, !dbg !8071

cond.false779:                                    ; preds = %cond.false767
  %184 = load i32, i32* %frame_bit_rate, align 4, !dbg !8072
  %div780 = sdiv i32 %184, 1, !dbg !8074
  %mul781 = mul nsw i32 %div780, 15, !dbg !8075
  %div782 = sdiv i32 %mul781, 32, !dbg !8076
  %sub783 = sub nsw i32 %div782, 5500, !dbg !8077
  br label %cond.end784, !dbg !8078

cond.end784:                                      ; preds = %cond.false779, %cond.true776
  %cond785 = phi i32 [ %div778, %cond.true776 ], [ %sub783, %cond.false779 ], !dbg !8079
  %185 = load i32, i32* %frame_bit_rate, align 4, !dbg !8081
  %div786 = sdiv i32 %185, 1, !dbg !8082
  %div787 = sdiv i32 %div786, 4, !dbg !8083
  %add788 = add nsw i32 3000, %div787, !dbg !8084
  %cmp789 = icmp sgt i32 %cond785, %add788, !dbg !8085
  br i1 %cmp789, label %cond.true791, label %cond.false795, !dbg !8086

cond.true791:                                     ; preds = %cond.end784
  %186 = load i32, i32* %frame_bit_rate, align 4, !dbg !8087
  %div792 = sdiv i32 %186, 1, !dbg !8089
  %div793 = sdiv i32 %div792, 4, !dbg !8090
  %add794 = add nsw i32 3000, %div793, !dbg !8091
  br label %cond.end814, !dbg !8092

cond.false795:                                    ; preds = %cond.end784
  %187 = load i32, i32* %frame_bit_rate, align 4, !dbg !8093
  %div796 = sdiv i32 %187, 1, !dbg !8095
  %div797 = sdiv i32 %div796, 5, !dbg !8096
  %188 = load i32, i32* %frame_bit_rate, align 4, !dbg !8097
  %div798 = sdiv i32 %188, 1, !dbg !8098
  %mul799 = mul nsw i32 %div798, 15, !dbg !8099
  %div800 = sdiv i32 %mul799, 32, !dbg !8100
  %sub801 = sub nsw i32 %div800, 5500, !dbg !8101
  %cmp802 = icmp sgt i32 %div797, %sub801, !dbg !8102
  br i1 %cmp802, label %cond.true804, label %cond.false807, !dbg !8103

cond.true804:                                     ; preds = %cond.false795
  %189 = load i32, i32* %frame_bit_rate, align 4, !dbg !8104
  %div805 = sdiv i32 %189, 1, !dbg !8106
  %div806 = sdiv i32 %div805, 5, !dbg !8107
  br label %cond.end812, !dbg !8108

cond.false807:                                    ; preds = %cond.false795
  %190 = load i32, i32* %frame_bit_rate, align 4, !dbg !8109
  %div808 = sdiv i32 %190, 1, !dbg !8111
  %mul809 = mul nsw i32 %div808, 15, !dbg !8112
  %div810 = sdiv i32 %mul809, 32, !dbg !8113
  %sub811 = sub nsw i32 %div810, 5500, !dbg !8114
  br label %cond.end812, !dbg !8115

cond.end812:                                      ; preds = %cond.false807, %cond.true804
  %cond813 = phi i32 [ %div806, %cond.true804 ], [ %sub811, %cond.false807 ], !dbg !8116
  br label %cond.end814, !dbg !8118

cond.end814:                                      ; preds = %cond.end812, %cond.true791
  %cond815 = phi i32 [ %add794, %cond.true791 ], [ %cond813, %cond.end812 ], !dbg !8119
  %191 = load i32, i32* %frame_bit_rate, align 4, !dbg !8121
  %div816 = sdiv i32 %191, 1, !dbg !8122
  %div817 = sdiv i32 %div816, 16, !dbg !8123
  %add818 = add nsw i32 12000, %div817, !dbg !8124
  %cmp819 = icmp sgt i32 %cond815, %add818, !dbg !8125
  br i1 %cmp819, label %cond.true821, label %cond.false825, !dbg !8126

cond.true821:                                     ; preds = %cond.end814
  %192 = load i32, i32* %frame_bit_rate, align 4, !dbg !8127
  %div822 = sdiv i32 %192, 1, !dbg !8129
  %div823 = sdiv i32 %div822, 16, !dbg !8130
  %add824 = add nsw i32 12000, %div823, !dbg !8131
  br label %cond.end874, !dbg !8132

cond.false825:                                    ; preds = %cond.end814
  %193 = load i32, i32* %frame_bit_rate, align 4, !dbg !8133
  %div826 = sdiv i32 %193, 1, !dbg !8135
  %div827 = sdiv i32 %div826, 5, !dbg !8136
  %194 = load i32, i32* %frame_bit_rate, align 4, !dbg !8137
  %div828 = sdiv i32 %194, 1, !dbg !8138
  %mul829 = mul nsw i32 %div828, 15, !dbg !8139
  %div830 = sdiv i32 %mul829, 32, !dbg !8140
  %sub831 = sub nsw i32 %div830, 5500, !dbg !8141
  %cmp832 = icmp sgt i32 %div827, %sub831, !dbg !8142
  br i1 %cmp832, label %cond.true834, label %cond.false837, !dbg !8143

cond.true834:                                     ; preds = %cond.false825
  %195 = load i32, i32* %frame_bit_rate, align 4, !dbg !8144
  %div835 = sdiv i32 %195, 1, !dbg !8146
  %div836 = sdiv i32 %div835, 5, !dbg !8147
  br label %cond.end842, !dbg !8148

cond.false837:                                    ; preds = %cond.false825
  %196 = load i32, i32* %frame_bit_rate, align 4, !dbg !8149
  %div838 = sdiv i32 %196, 1, !dbg !8151
  %mul839 = mul nsw i32 %div838, 15, !dbg !8152
  %div840 = sdiv i32 %mul839, 32, !dbg !8153
  %sub841 = sub nsw i32 %div840, 5500, !dbg !8154
  br label %cond.end842, !dbg !8155

cond.end842:                                      ; preds = %cond.false837, %cond.true834
  %cond843 = phi i32 [ %div836, %cond.true834 ], [ %sub841, %cond.false837 ], !dbg !8156
  %197 = load i32, i32* %frame_bit_rate, align 4, !dbg !8158
  %div844 = sdiv i32 %197, 1, !dbg !8159
  %div845 = sdiv i32 %div844, 4, !dbg !8160
  %add846 = add nsw i32 3000, %div845, !dbg !8161
  %cmp847 = icmp sgt i32 %cond843, %add846, !dbg !8162
  br i1 %cmp847, label %cond.true849, label %cond.false853, !dbg !8163

cond.true849:                                     ; preds = %cond.end842
  %198 = load i32, i32* %frame_bit_rate, align 4, !dbg !8164
  %div850 = sdiv i32 %198, 1, !dbg !8166
  %div851 = sdiv i32 %div850, 4, !dbg !8167
  %add852 = add nsw i32 3000, %div851, !dbg !8168
  br label %cond.end872, !dbg !8169

cond.false853:                                    ; preds = %cond.end842
  %199 = load i32, i32* %frame_bit_rate, align 4, !dbg !8170
  %div854 = sdiv i32 %199, 1, !dbg !8172
  %div855 = sdiv i32 %div854, 5, !dbg !8173
  %200 = load i32, i32* %frame_bit_rate, align 4, !dbg !8174
  %div856 = sdiv i32 %200, 1, !dbg !8175
  %mul857 = mul nsw i32 %div856, 15, !dbg !8176
  %div858 = sdiv i32 %mul857, 32, !dbg !8177
  %sub859 = sub nsw i32 %div858, 5500, !dbg !8178
  %cmp860 = icmp sgt i32 %div855, %sub859, !dbg !8179
  br i1 %cmp860, label %cond.true862, label %cond.false865, !dbg !8180

cond.true862:                                     ; preds = %cond.false853
  %201 = load i32, i32* %frame_bit_rate, align 4, !dbg !8181
  %div863 = sdiv i32 %201, 1, !dbg !8183
  %div864 = sdiv i32 %div863, 5, !dbg !8184
  br label %cond.end870, !dbg !8185

cond.false865:                                    ; preds = %cond.false853
  %202 = load i32, i32* %frame_bit_rate, align 4, !dbg !8186
  %div866 = sdiv i32 %202, 1, !dbg !8188
  %mul867 = mul nsw i32 %div866, 15, !dbg !8189
  %div868 = sdiv i32 %mul867, 32, !dbg !8190
  %sub869 = sub nsw i32 %div868, 5500, !dbg !8191
  br label %cond.end870, !dbg !8192

cond.end870:                                      ; preds = %cond.false865, %cond.true862
  %cond871 = phi i32 [ %div864, %cond.true862 ], [ %sub869, %cond.false865 ], !dbg !8193
  br label %cond.end872, !dbg !8195

cond.end872:                                      ; preds = %cond.end870, %cond.true849
  %cond873 = phi i32 [ %add852, %cond.true849 ], [ %cond871, %cond.end870 ], !dbg !8196
  br label %cond.end874, !dbg !8198

cond.end874:                                      ; preds = %cond.end872, %cond.true821
  %cond875 = phi i32 [ %add824, %cond.true821 ], [ %cond873, %cond.end872 ], !dbg !8199
  %cmp876 = icmp sgt i32 %cond875, 22000, !dbg !8201
  br i1 %cmp876, label %cond.true878, label %cond.false879, !dbg !8202

cond.true878:                                     ; preds = %cond.end874
  br label %cond.end988, !dbg !8203

cond.false879:                                    ; preds = %cond.end874
  %203 = load i32, i32* %frame_bit_rate, align 4, !dbg !8205
  %div880 = sdiv i32 %203, 1, !dbg !8207
  %div881 = sdiv i32 %div880, 5, !dbg !8208
  %204 = load i32, i32* %frame_bit_rate, align 4, !dbg !8209
  %div882 = sdiv i32 %204, 1, !dbg !8210
  %mul883 = mul nsw i32 %div882, 15, !dbg !8211
  %div884 = sdiv i32 %mul883, 32, !dbg !8212
  %sub885 = sub nsw i32 %div884, 5500, !dbg !8213
  %cmp886 = icmp sgt i32 %div881, %sub885, !dbg !8214
  br i1 %cmp886, label %cond.true888, label %cond.false891, !dbg !8215

cond.true888:                                     ; preds = %cond.false879
  %205 = load i32, i32* %frame_bit_rate, align 4, !dbg !8216
  %div889 = sdiv i32 %205, 1, !dbg !8218
  %div890 = sdiv i32 %div889, 5, !dbg !8219
  br label %cond.end896, !dbg !8220

cond.false891:                                    ; preds = %cond.false879
  %206 = load i32, i32* %frame_bit_rate, align 4, !dbg !8221
  %div892 = sdiv i32 %206, 1, !dbg !8223
  %mul893 = mul nsw i32 %div892, 15, !dbg !8224
  %div894 = sdiv i32 %mul893, 32, !dbg !8225
  %sub895 = sub nsw i32 %div894, 5500, !dbg !8226
  br label %cond.end896, !dbg !8227

cond.end896:                                      ; preds = %cond.false891, %cond.true888
  %cond897 = phi i32 [ %div890, %cond.true888 ], [ %sub895, %cond.false891 ], !dbg !8228
  %207 = load i32, i32* %frame_bit_rate, align 4, !dbg !8230
  %div898 = sdiv i32 %207, 1, !dbg !8231
  %div899 = sdiv i32 %div898, 4, !dbg !8232
  %add900 = add nsw i32 3000, %div899, !dbg !8233
  %cmp901 = icmp sgt i32 %cond897, %add900, !dbg !8234
  br i1 %cmp901, label %cond.true903, label %cond.false907, !dbg !8235

cond.true903:                                     ; preds = %cond.end896
  %208 = load i32, i32* %frame_bit_rate, align 4, !dbg !8236
  %div904 = sdiv i32 %208, 1, !dbg !8238
  %div905 = sdiv i32 %div904, 4, !dbg !8239
  %add906 = add nsw i32 3000, %div905, !dbg !8240
  br label %cond.end926, !dbg !8241

cond.false907:                                    ; preds = %cond.end896
  %209 = load i32, i32* %frame_bit_rate, align 4, !dbg !8242
  %div908 = sdiv i32 %209, 1, !dbg !8244
  %div909 = sdiv i32 %div908, 5, !dbg !8245
  %210 = load i32, i32* %frame_bit_rate, align 4, !dbg !8246
  %div910 = sdiv i32 %210, 1, !dbg !8247
  %mul911 = mul nsw i32 %div910, 15, !dbg !8248
  %div912 = sdiv i32 %mul911, 32, !dbg !8249
  %sub913 = sub nsw i32 %div912, 5500, !dbg !8250
  %cmp914 = icmp sgt i32 %div909, %sub913, !dbg !8251
  br i1 %cmp914, label %cond.true916, label %cond.false919, !dbg !8252

cond.true916:                                     ; preds = %cond.false907
  %211 = load i32, i32* %frame_bit_rate, align 4, !dbg !8253
  %div917 = sdiv i32 %211, 1, !dbg !8255
  %div918 = sdiv i32 %div917, 5, !dbg !8256
  br label %cond.end924, !dbg !8257

cond.false919:                                    ; preds = %cond.false907
  %212 = load i32, i32* %frame_bit_rate, align 4, !dbg !8258
  %div920 = sdiv i32 %212, 1, !dbg !8260
  %mul921 = mul nsw i32 %div920, 15, !dbg !8261
  %div922 = sdiv i32 %mul921, 32, !dbg !8262
  %sub923 = sub nsw i32 %div922, 5500, !dbg !8263
  br label %cond.end924, !dbg !8264

cond.end924:                                      ; preds = %cond.false919, %cond.true916
  %cond925 = phi i32 [ %div918, %cond.true916 ], [ %sub923, %cond.false919 ], !dbg !8265
  br label %cond.end926, !dbg !8267

cond.end926:                                      ; preds = %cond.end924, %cond.true903
  %cond927 = phi i32 [ %add906, %cond.true903 ], [ %cond925, %cond.end924 ], !dbg !8268
  %213 = load i32, i32* %frame_bit_rate, align 4, !dbg !8270
  %div928 = sdiv i32 %213, 1, !dbg !8271
  %div929 = sdiv i32 %div928, 16, !dbg !8272
  %add930 = add nsw i32 12000, %div929, !dbg !8273
  %cmp931 = icmp sgt i32 %cond927, %add930, !dbg !8274
  br i1 %cmp931, label %cond.true933, label %cond.false937, !dbg !8275

cond.true933:                                     ; preds = %cond.end926
  %214 = load i32, i32* %frame_bit_rate, align 4, !dbg !8276
  %div934 = sdiv i32 %214, 1, !dbg !8278
  %div935 = sdiv i32 %div934, 16, !dbg !8279
  %add936 = add nsw i32 12000, %div935, !dbg !8280
  br label %cond.end986, !dbg !8281

cond.false937:                                    ; preds = %cond.end926
  %215 = load i32, i32* %frame_bit_rate, align 4, !dbg !8282
  %div938 = sdiv i32 %215, 1, !dbg !8284
  %div939 = sdiv i32 %div938, 5, !dbg !8285
  %216 = load i32, i32* %frame_bit_rate, align 4, !dbg !8286
  %div940 = sdiv i32 %216, 1, !dbg !8287
  %mul941 = mul nsw i32 %div940, 15, !dbg !8288
  %div942 = sdiv i32 %mul941, 32, !dbg !8289
  %sub943 = sub nsw i32 %div942, 5500, !dbg !8290
  %cmp944 = icmp sgt i32 %div939, %sub943, !dbg !8291
  br i1 %cmp944, label %cond.true946, label %cond.false949, !dbg !8292

cond.true946:                                     ; preds = %cond.false937
  %217 = load i32, i32* %frame_bit_rate, align 4, !dbg !8293
  %div947 = sdiv i32 %217, 1, !dbg !8295
  %div948 = sdiv i32 %div947, 5, !dbg !8296
  br label %cond.end954, !dbg !8297

cond.false949:                                    ; preds = %cond.false937
  %218 = load i32, i32* %frame_bit_rate, align 4, !dbg !8298
  %div950 = sdiv i32 %218, 1, !dbg !8300
  %mul951 = mul nsw i32 %div950, 15, !dbg !8301
  %div952 = sdiv i32 %mul951, 32, !dbg !8302
  %sub953 = sub nsw i32 %div952, 5500, !dbg !8303
  br label %cond.end954, !dbg !8304

cond.end954:                                      ; preds = %cond.false949, %cond.true946
  %cond955 = phi i32 [ %div948, %cond.true946 ], [ %sub953, %cond.false949 ], !dbg !8305
  %219 = load i32, i32* %frame_bit_rate, align 4, !dbg !8307
  %div956 = sdiv i32 %219, 1, !dbg !8308
  %div957 = sdiv i32 %div956, 4, !dbg !8309
  %add958 = add nsw i32 3000, %div957, !dbg !8310
  %cmp959 = icmp sgt i32 %cond955, %add958, !dbg !8311
  br i1 %cmp959, label %cond.true961, label %cond.false965, !dbg !8312

cond.true961:                                     ; preds = %cond.end954
  %220 = load i32, i32* %frame_bit_rate, align 4, !dbg !8313
  %div962 = sdiv i32 %220, 1, !dbg !8315
  %div963 = sdiv i32 %div962, 4, !dbg !8316
  %add964 = add nsw i32 3000, %div963, !dbg !8317
  br label %cond.end984, !dbg !8318

cond.false965:                                    ; preds = %cond.end954
  %221 = load i32, i32* %frame_bit_rate, align 4, !dbg !8319
  %div966 = sdiv i32 %221, 1, !dbg !8321
  %div967 = sdiv i32 %div966, 5, !dbg !8322
  %222 = load i32, i32* %frame_bit_rate, align 4, !dbg !8323
  %div968 = sdiv i32 %222, 1, !dbg !8324
  %mul969 = mul nsw i32 %div968, 15, !dbg !8325
  %div970 = sdiv i32 %mul969, 32, !dbg !8326
  %sub971 = sub nsw i32 %div970, 5500, !dbg !8327
  %cmp972 = icmp sgt i32 %div967, %sub971, !dbg !8328
  br i1 %cmp972, label %cond.true974, label %cond.false977, !dbg !8329

cond.true974:                                     ; preds = %cond.false965
  %223 = load i32, i32* %frame_bit_rate, align 4, !dbg !8330
  %div975 = sdiv i32 %223, 1, !dbg !8332
  %div976 = sdiv i32 %div975, 5, !dbg !8333
  br label %cond.end982, !dbg !8334

cond.false977:                                    ; preds = %cond.false965
  %224 = load i32, i32* %frame_bit_rate, align 4, !dbg !8335
  %div978 = sdiv i32 %224, 1, !dbg !8337
  %mul979 = mul nsw i32 %div978, 15, !dbg !8338
  %div980 = sdiv i32 %mul979, 32, !dbg !8339
  %sub981 = sub nsw i32 %div980, 5500, !dbg !8340
  br label %cond.end982, !dbg !8341

cond.end982:                                      ; preds = %cond.false977, %cond.true974
  %cond983 = phi i32 [ %div976, %cond.true974 ], [ %sub981, %cond.false977 ], !dbg !8342
  br label %cond.end984, !dbg !8344

cond.end984:                                      ; preds = %cond.end982, %cond.true961
  %cond985 = phi i32 [ %add964, %cond.true961 ], [ %cond983, %cond.end982 ], !dbg !8345
  br label %cond.end986, !dbg !8347

cond.end986:                                      ; preds = %cond.end984, %cond.true933
  %cond987 = phi i32 [ %add936, %cond.true933 ], [ %cond985, %cond.end984 ], !dbg !8348
  br label %cond.end988, !dbg !8350

cond.end988:                                      ; preds = %cond.end986, %cond.true878
  %cond989 = phi i32 [ 22000, %cond.true878 ], [ %cond987, %cond.end986 ], !dbg !8351
  br label %cond.end990, !dbg !8353

cond.end990:                                      ; preds = %cond.end988, %cond.true764
  %cond991 = phi i32 [ %div766, %cond.true764 ], [ %cond989, %cond.end988 ], !dbg !8354
  br label %cond.end995, !dbg !8356

cond.false992:                                    ; preds = %cond.false535
  %225 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8357
  %sample_rate993 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %225, i32 0, i32 82, !dbg !8359
  %226 = load i32, i32* %sample_rate993, align 8, !dbg !8359
  %div994 = sdiv i32 %226, 2, !dbg !8360
  br label %cond.end995, !dbg !8361

cond.end995:                                      ; preds = %cond.false992, %cond.end990
  %cond996 = phi i32 [ %cond991, %cond.end990 ], [ %div994, %cond.false992 ], !dbg !8362
  br label %cond.end997, !dbg !8364

cond.end997:                                      ; preds = %cond.end995, %cond.true534
  %cond998 = phi i32 [ 3000, %cond.true534 ], [ %cond996, %cond.end995 ], !dbg !8365
  store i32 %cond998, i32* %bandwidth, align 4, !dbg !8367
  br label %if.end

if.end:                                           ; preds = %cond.end997, %if.then
  %227 = load i32, i32* %bandwidth, align 4, !dbg !8368
  %mul999 = mul nsw i32 %227, 2, !dbg !8369
  %228 = load i32, i32* %wlen, align 4, !dbg !8370
  %mul1000 = mul nsw i32 %mul999, %228, !dbg !8371
  %229 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8372
  %sample_rate1001 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %229, i32 0, i32 82, !dbg !8373
  %230 = load i32, i32* %sample_rate1001, align 8, !dbg !8373
  %div1002 = sdiv i32 %mul1000, %230, !dbg !8374
  store i32 %div1002, i32* %cutoff, align 4, !dbg !8375
  %231 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8376
  %band_alt = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %231, i32 0, i32 4, !dbg !8377
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %band_alt, i32 0, i32 0, !dbg !8378
  %232 = bitcast i32* %arraydecay to i8*, !dbg !8378
  %233 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8379
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %233, i32 0, i32 3, !dbg !8380
  %arraydecay1003 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i32 0, i32 0, !dbg !8378
  %234 = bitcast i32* %arraydecay1003 to i8*, !dbg !8378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %232, i8* %234, i64 512, i32 4, i1 false), !dbg !8378
  store i32 0, i32* %w, align 4, !dbg !8381
  br label %for.cond, !dbg !8383

for.cond:                                         ; preds = %for.inc1115, %if.end
  %235 = load i32, i32* %w, align 4, !dbg !8384
  %236 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8387
  %ics1004 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %236, i32 0, i32 0, !dbg !8388
  %num_windows1005 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1004, i32 0, i32 9, !dbg !8389
  %237 = load i32, i32* %num_windows1005, align 4, !dbg !8389
  %cmp1006 = icmp slt i32 %235, %237, !dbg !8390
  br i1 %cmp1006, label %for.body, label %for.end1122, !dbg !8391

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %g, align 4, !dbg !8392
  br label %for.cond1008, !dbg !8395

for.cond1008:                                     ; preds = %for.inc1112, %for.body
  %238 = load i32, i32* %g, align 4, !dbg !8396
  %239 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8399
  %ics1009 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %239, i32 0, i32 0, !dbg !8400
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1009, i32 0, i32 8, !dbg !8401
  %240 = load i32, i32* %num_swb, align 32, !dbg !8401
  %cmp1010 = icmp slt i32 %238, %240, !dbg !8402
  br i1 %cmp1010, label %for.body1012, label %for.end1114, !dbg !8403

for.body1012:                                     ; preds = %for.cond1008
  call void @llvm.dbg.declare(metadata float* %sfb_energy, metadata !8404, metadata !2772), !dbg !8406
  store float 0.000000e+00, float* %sfb_energy, align 4, !dbg !8406
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !8407, metadata !2772), !dbg !8408
  store float 0.000000e+00, float* %threshold, align 4, !dbg !8408
  call void @llvm.dbg.declare(metadata float* %spread, metadata !8409, metadata !2772), !dbg !8410
  store float 2.000000e+00, float* %spread, align 4, !dbg !8410
  call void @llvm.dbg.declare(metadata float* %min_energy, metadata !8411, metadata !2772), !dbg !8412
  store float -1.000000e+00, float* %min_energy, align 4, !dbg !8412
  call void @llvm.dbg.declare(metadata float* %max_energy, metadata !8413, metadata !2772), !dbg !8414
  store float 0.000000e+00, float* %max_energy, align 4, !dbg !8414
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8415, metadata !2772), !dbg !8416
  %241 = load i32, i32* %g, align 4, !dbg !8417
  %idxprom = sext i32 %241 to i64, !dbg !8418
  %242 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8418
  %ics1013 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %242, i32 0, i32 0, !dbg !8419
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1013, i32 0, i32 6, !dbg !8420
  %243 = load i16*, i16** %swb_offset, align 16, !dbg !8420
  %arrayidx = getelementptr inbounds i16, i16* %243, i64 %idxprom, !dbg !8418
  %244 = load i16, i16* %arrayidx, align 2, !dbg !8418
  %conv1014 = zext i16 %244 to i32, !dbg !8418
  store i32 %conv1014, i32* %start, align 4, !dbg !8416
  call void @llvm.dbg.declare(metadata float* %freq, metadata !8421, metadata !2772), !dbg !8422
  %245 = load i32, i32* %start, align 4, !dbg !8423
  %conv1015 = sitofp i32 %245 to float, !dbg !8423
  %246 = load float, float* %freq_mult, align 4, !dbg !8424
  %mul1016 = fmul float %conv1015, %246, !dbg !8425
  store float %mul1016, float* %freq, align 4, !dbg !8422
  call void @llvm.dbg.declare(metadata float* %freq_boost, metadata !8426, metadata !2772), !dbg !8427
  %247 = load float, float* %freq, align 4, !dbg !8428
  %mul1017 = fmul float 0x3FEC28F5C0000000, %247, !dbg !8429
  %div1018 = fdiv float %mul1017, 4.000000e+03, !dbg !8430
  %cmp1019 = fcmp ogt float %div1018, 1.000000e+00, !dbg !8431
  br i1 %cmp1019, label %cond.true1021, label %cond.false1024, !dbg !8432

cond.true1021:                                    ; preds = %for.body1012
  %248 = load float, float* %freq, align 4, !dbg !8433
  %mul1022 = fmul float 0x3FEC28F5C0000000, %248, !dbg !8435
  %div1023 = fdiv float %mul1022, 4.000000e+03, !dbg !8436
  br label %cond.end1025, !dbg !8437

cond.false1024:                                   ; preds = %for.body1012
  br label %cond.end1025, !dbg !8438

cond.end1025:                                     ; preds = %cond.false1024, %cond.true1021
  %cond1026 = phi float [ %div1023, %cond.true1021 ], [ 1.000000e+00, %cond.false1024 ], !dbg !8440
  store float %cond1026, float* %freq_boost, align 4, !dbg !8442
  %249 = load float, float* %freq, align 4, !dbg !8443
  %cmp1027 = fcmp olt float %249, 4.000000e+03, !dbg !8445
  br i1 %cmp1027, label %if.then1031, label %lor.lhs.false, !dbg !8446

lor.lhs.false:                                    ; preds = %cond.end1025
  %250 = load i32, i32* %start, align 4, !dbg !8447
  %251 = load i32, i32* %cutoff, align 4, !dbg !8449
  %cmp1029 = icmp sge i32 %250, %251, !dbg !8450
  br i1 %cmp1029, label %if.then1031, label %if.end1036, !dbg !8451

if.then1031:                                      ; preds = %lor.lhs.false, %cond.end1025
  %252 = load i32, i32* %w, align 4, !dbg !8452
  %mul1032 = mul nsw i32 %252, 16, !dbg !8454
  %253 = load i32, i32* %g, align 4, !dbg !8455
  %add1033 = add nsw i32 %mul1032, %253, !dbg !8456
  %idxprom1034 = sext i32 %add1033 to i64, !dbg !8457
  %254 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8457
  %can_pns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %254, i32 0, i32 9, !dbg !8458
  %arrayidx1035 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns, i64 0, i64 %idxprom1034, !dbg !8457
  store i8 0, i8* %arrayidx1035, align 1, !dbg !8459
  br label %for.inc1112, !dbg !8460

if.end1036:                                       ; preds = %lor.lhs.false
  store i32 0, i32* %w2, align 4, !dbg !8461
  br label %for.cond1037, !dbg !8463

for.cond1037:                                     ; preds = %for.inc, %if.end1036
  %255 = load i32, i32* %w2, align 4, !dbg !8464
  %256 = load i32, i32* %w, align 4, !dbg !8467
  %idxprom1038 = sext i32 %256 to i64, !dbg !8468
  %257 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8468
  %ics1039 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %257, i32 0, i32 0, !dbg !8469
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1039, i32 0, i32 4, !dbg !8470
  %arrayidx1040 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom1038, !dbg !8468
  %258 = load i8, i8* %arrayidx1040, align 1, !dbg !8468
  %conv1041 = zext i8 %258 to i32, !dbg !8468
  %cmp1042 = icmp slt i32 %255, %conv1041, !dbg !8471
  br i1 %cmp1042, label %for.body1044, label %for.end, !dbg !8472

for.body1044:                                     ; preds = %for.cond1037
  %259 = load i32, i32* %w, align 4, !dbg !8473
  %260 = load i32, i32* %w2, align 4, !dbg !8475
  %add1045 = add nsw i32 %259, %260, !dbg !8476
  %mul1046 = mul nsw i32 %add1045, 16, !dbg !8477
  %261 = load i32, i32* %g, align 4, !dbg !8478
  %add1047 = add nsw i32 %mul1046, %261, !dbg !8479
  %idxprom1048 = sext i32 %add1047 to i64, !dbg !8480
  %262 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8481
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %262, i32 0, i32 20, !dbg !8482
  %263 = load i32, i32* %cur_channel, align 32, !dbg !8482
  %idxprom1049 = sext i32 %263 to i64, !dbg !8480
  %264 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8480
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %264, i32 0, i32 17, !dbg !8483
  %ch = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !8484
  %265 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch, align 16, !dbg !8484
  %arrayidx1050 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %265, i64 %idxprom1049, !dbg !8480
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx1050, i32 0, i32 0, !dbg !8485
  %arrayidx1051 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom1048, !dbg !8480
  store %struct.FFPsyBand* %arrayidx1051, %struct.FFPsyBand** %band, align 8, !dbg !8486
  %266 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8487
  %energy = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %266, i32 0, i32 1, !dbg !8488
  %267 = load float, float* %energy, align 4, !dbg !8488
  %268 = load float, float* %sfb_energy, align 4, !dbg !8489
  %add1052 = fadd float %268, %267, !dbg !8489
  store float %add1052, float* %sfb_energy, align 4, !dbg !8489
  %269 = load float, float* %spread, align 4, !dbg !8490
  %270 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8491
  %spread1053 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %270, i32 0, i32 3, !dbg !8492
  %271 = load float, float* %spread1053, align 4, !dbg !8492
  %cmp1054 = fcmp ogt float %269, %271, !dbg !8493
  br i1 %cmp1054, label %cond.true1056, label %cond.false1058, !dbg !8494

cond.true1056:                                    ; preds = %for.body1044
  %272 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8495
  %spread1057 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %272, i32 0, i32 3, !dbg !8497
  %273 = load float, float* %spread1057, align 4, !dbg !8497
  br label %cond.end1059, !dbg !8498

cond.false1058:                                   ; preds = %for.body1044
  %274 = load float, float* %spread, align 4, !dbg !8499
  br label %cond.end1059, !dbg !8501

cond.end1059:                                     ; preds = %cond.false1058, %cond.true1056
  %cond1060 = phi float [ %273, %cond.true1056 ], [ %274, %cond.false1058 ], !dbg !8502
  store float %cond1060, float* %spread, align 4, !dbg !8504
  %275 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8505
  %threshold1061 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %275, i32 0, i32 2, !dbg !8506
  %276 = load float, float* %threshold1061, align 4, !dbg !8506
  %277 = load float, float* %threshold, align 4, !dbg !8507
  %add1062 = fadd float %277, %276, !dbg !8507
  store float %add1062, float* %threshold, align 4, !dbg !8507
  %278 = load i32, i32* %w2, align 4, !dbg !8508
  %tobool1063 = icmp ne i32 %278, 0, !dbg !8508
  br i1 %tobool1063, label %if.else1066, label %if.then1064, !dbg !8510

if.then1064:                                      ; preds = %cond.end1059
  %279 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8511
  %energy1065 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %279, i32 0, i32 1, !dbg !8513
  %280 = load float, float* %energy1065, align 4, !dbg !8513
  store float %280, float* %max_energy, align 4, !dbg !8514
  store float %280, float* %min_energy, align 4, !dbg !8515
  br label %if.end1083, !dbg !8516

if.else1066:                                      ; preds = %cond.end1059
  %281 = load float, float* %min_energy, align 4, !dbg !8517
  %282 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8519
  %energy1067 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %282, i32 0, i32 1, !dbg !8520
  %283 = load float, float* %energy1067, align 4, !dbg !8520
  %cmp1068 = fcmp ogt float %281, %283, !dbg !8521
  br i1 %cmp1068, label %cond.true1070, label %cond.false1072, !dbg !8522

cond.true1070:                                    ; preds = %if.else1066
  %284 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8523
  %energy1071 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %284, i32 0, i32 1, !dbg !8525
  %285 = load float, float* %energy1071, align 4, !dbg !8525
  br label %cond.end1073, !dbg !8526

cond.false1072:                                   ; preds = %if.else1066
  %286 = load float, float* %min_energy, align 4, !dbg !8527
  br label %cond.end1073, !dbg !8529

cond.end1073:                                     ; preds = %cond.false1072, %cond.true1070
  %cond1074 = phi float [ %285, %cond.true1070 ], [ %286, %cond.false1072 ], !dbg !8530
  store float %cond1074, float* %min_energy, align 4, !dbg !8532
  %287 = load float, float* %max_energy, align 4, !dbg !8533
  %288 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8534
  %energy1075 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %288, i32 0, i32 1, !dbg !8535
  %289 = load float, float* %energy1075, align 4, !dbg !8535
  %cmp1076 = fcmp ogt float %287, %289, !dbg !8536
  br i1 %cmp1076, label %cond.true1078, label %cond.false1079, !dbg !8537

cond.true1078:                                    ; preds = %cond.end1073
  %290 = load float, float* %max_energy, align 4, !dbg !8538
  br label %cond.end1081, !dbg !8539

cond.false1079:                                   ; preds = %cond.end1073
  %291 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !8540
  %energy1080 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %291, i32 0, i32 1, !dbg !8541
  %292 = load float, float* %energy1080, align 4, !dbg !8541
  br label %cond.end1081, !dbg !8542

cond.end1081:                                     ; preds = %cond.false1079, %cond.true1078
  %cond1082 = phi float [ %290, %cond.true1078 ], [ %292, %cond.false1079 ], !dbg !8543
  store float %cond1082, float* %max_energy, align 4, !dbg !8544
  br label %if.end1083

if.end1083:                                       ; preds = %cond.end1081, %if.then1064
  br label %for.inc, !dbg !8545

for.inc:                                          ; preds = %if.end1083
  %293 = load i32, i32* %w2, align 4, !dbg !8546
  %inc = add nsw i32 %293, 1, !dbg !8546
  store i32 %inc, i32* %w2, align 4, !dbg !8546
  br label %for.cond1037, !dbg !8548, !llvm.loop !8549

for.end:                                          ; preds = %for.cond1037
  %294 = load float, float* %sfb_energy, align 4, !dbg !8551
  %295 = load i32, i32* %w, align 4, !dbg !8552
  %mul1084 = mul nsw i32 %295, 16, !dbg !8553
  %296 = load i32, i32* %g, align 4, !dbg !8554
  %add1085 = add nsw i32 %mul1084, %296, !dbg !8555
  %idxprom1086 = sext i32 %add1085 to i64, !dbg !8556
  %297 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8556
  %pns_ener = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %297, i32 0, i32 11, !dbg !8557
  %arrayidx1087 = getelementptr inbounds [128 x float], [128 x float]* %pns_ener, i64 0, i64 %idxprom1086, !dbg !8556
  store float %294, float* %arrayidx1087, align 4, !dbg !8558
  %298 = load float, float* %sfb_energy, align 4, !dbg !8559
  %299 = load float, float* %threshold, align 4, !dbg !8561
  %300 = load float, float* %freq_boost, align 4, !dbg !8562
  %div1088 = fdiv float 1.500000e+00, %300, !dbg !8563
  %call = call float @sqrtf(float %div1088) #9, !dbg !8564
  %mul1089 = fmul float %299, %call, !dbg !8565
  %cmp1090 = fcmp olt float %298, %mul1089, !dbg !8566
  br i1 %cmp1090, label %if.then1099, label %lor.lhs.false1092, !dbg !8567

lor.lhs.false1092:                                ; preds = %for.end
  %301 = load float, float* %spread, align 4, !dbg !8568
  %302 = load float, float* %spread_threshold, align 4, !dbg !8570
  %cmp1093 = fcmp olt float %301, %302, !dbg !8571
  br i1 %cmp1093, label %if.then1099, label %lor.lhs.false1095, !dbg !8572

lor.lhs.false1095:                                ; preds = %lor.lhs.false1092
  %303 = load float, float* %min_energy, align 4, !dbg !8573
  %304 = load float, float* %pns_transient_energy_r, align 4, !dbg !8575
  %305 = load float, float* %max_energy, align 4, !dbg !8576
  %mul1096 = fmul float %304, %305, !dbg !8577
  %cmp1097 = fcmp olt float %303, %mul1096, !dbg !8578
  br i1 %cmp1097, label %if.then1099, label %if.else1105, !dbg !8579

if.then1099:                                      ; preds = %lor.lhs.false1095, %lor.lhs.false1092, %for.end
  %306 = load i32, i32* %w, align 4, !dbg !8580
  %mul1100 = mul nsw i32 %306, 16, !dbg !8582
  %307 = load i32, i32* %g, align 4, !dbg !8583
  %add1101 = add nsw i32 %mul1100, %307, !dbg !8584
  %idxprom1102 = sext i32 %add1101 to i64, !dbg !8585
  %308 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8585
  %can_pns1103 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %308, i32 0, i32 9, !dbg !8586
  %arrayidx1104 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns1103, i64 0, i64 %idxprom1102, !dbg !8585
  store i8 0, i8* %arrayidx1104, align 1, !dbg !8587
  br label %if.end1111, !dbg !8588

if.else1105:                                      ; preds = %lor.lhs.false1095
  %309 = load i32, i32* %w, align 4, !dbg !8589
  %mul1106 = mul nsw i32 %309, 16, !dbg !8591
  %310 = load i32, i32* %g, align 4, !dbg !8592
  %add1107 = add nsw i32 %mul1106, %310, !dbg !8593
  %idxprom1108 = sext i32 %add1107 to i64, !dbg !8594
  %311 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8594
  %can_pns1109 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %311, i32 0, i32 9, !dbg !8595
  %arrayidx1110 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns1109, i64 0, i64 %idxprom1108, !dbg !8594
  store i8 1, i8* %arrayidx1110, align 1, !dbg !8596
  br label %if.end1111

if.end1111:                                       ; preds = %if.else1105, %if.then1099
  br label %for.inc1112, !dbg !8597

for.inc1112:                                      ; preds = %if.end1111, %if.then1031
  %312 = load i32, i32* %g, align 4, !dbg !8598
  %inc1113 = add nsw i32 %312, 1, !dbg !8598
  store i32 %inc1113, i32* %g, align 4, !dbg !8598
  br label %for.cond1008, !dbg !8600, !llvm.loop !8601

for.end1114:                                      ; preds = %for.cond1008
  br label %for.inc1115, !dbg !8603

for.inc1115:                                      ; preds = %for.end1114
  %313 = load i32, i32* %w, align 4, !dbg !8604
  %idxprom1116 = sext i32 %313 to i64, !dbg !8606
  %314 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !8606
  %ics1117 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %314, i32 0, i32 0, !dbg !8607
  %group_len1118 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1117, i32 0, i32 4, !dbg !8608
  %arrayidx1119 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1118, i64 0, i64 %idxprom1116, !dbg !8606
  %315 = load i8, i8* %arrayidx1119, align 1, !dbg !8606
  %conv1120 = zext i8 %315 to i32, !dbg !8606
  %316 = load i32, i32* %w, align 4, !dbg !8609
  %add1121 = add nsw i32 %316, %conv1120, !dbg !8609
  store i32 %add1121, i32* %w, align 4, !dbg !8609
  br label %for.cond, !dbg !8610, !llvm.loop !8611

for.end1122:                                      ; preds = %for.cond
  ret void, !dbg !8613
}

declare void @ff_aac_search_for_tns(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

declare void @ff_aac_search_for_ltp(%struct.AACEncContext*, %struct.SingleChannelElement*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @search_for_ms(%struct.AACEncContext* %s, %struct.ChannelElement* %cpe) #0 !dbg !8614 {
entry:
  %retval.i584 = alloca i32, align 4
  %a.addr.i585 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i585, metadata !2767, metadata !2772), !dbg !8617
  %amin.addr.i586 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i586, metadata !2777, metadata !2772), !dbg !8630
  %amax.addr.i587 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i587, metadata !2779, metadata !2772), !dbg !8631
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2767, metadata !2772), !dbg !8632
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2777, metadata !2772), !dbg !8634
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2779, metadata !2772), !dbg !8635
  %b.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr.i, metadata !8636, metadata !2772), !dbg !8640
  %s.addr = alloca %struct.AACEncContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %sid_sf_boost = alloca i32, align 4
  %prev_mid = alloca i32, align 4
  %prev_side = alloca i32, align 4
  %nextband0 = alloca [128 x i8], align 16
  %nextband1 = alloca [128 x i8], align 16
  %M = alloca float*, align 8
  %S = alloca float*, align 8
  %L34 = alloca float*, align 8
  %R34 = alloca float*, align 8
  %M34 = alloca float*, align 8
  %S34 = alloca float*, align 8
  %lambda = alloca float, align 4
  %mslambda = alloca float, align 4
  %sce0 = alloca %struct.SingleChannelElement*, align 8
  %sce1 = alloca %struct.SingleChannelElement*, align 8
  %bmax = alloca float, align 4
  %Mmax = alloca float, align 4
  %Smax = alloca float, align 4
  %dist1 = alloca float, align 4
  %dist2 = alloca float, align 4
  %B0 = alloca i32, align 4
  %B1 = alloca i32, align 4
  %minidx = alloca i32, align 4
  %mididx = alloca i32, align 4
  %sididx = alloca i32, align 4
  %midcb = alloca i32, align 4
  %sidcb = alloca i32, align 4
  %band0 = alloca %struct.FFPsyBand*, align 8
  %band1 = alloca %struct.FFPsyBand*, align 8
  %minthr = alloca float, align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %b4 = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !8642, metadata !2772), !dbg !8643
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !8644, metadata !2772), !dbg !8645
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8646, metadata !2772), !dbg !8647
  store i32 0, i32* %start, align 4, !dbg !8647
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8648, metadata !2772), !dbg !8649
  call void @llvm.dbg.declare(metadata i32* %w, metadata !8650, metadata !2772), !dbg !8651
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !8652, metadata !2772), !dbg !8653
  call void @llvm.dbg.declare(metadata i32* %g, metadata !8654, metadata !2772), !dbg !8655
  call void @llvm.dbg.declare(metadata i32* %sid_sf_boost, metadata !8656, metadata !2772), !dbg !8657
  call void @llvm.dbg.declare(metadata i32* %prev_mid, metadata !8658, metadata !2772), !dbg !8659
  call void @llvm.dbg.declare(metadata i32* %prev_side, metadata !8660, metadata !2772), !dbg !8661
  call void @llvm.dbg.declare(metadata [128 x i8]* %nextband0, metadata !8662, metadata !2772), !dbg !8663
  call void @llvm.dbg.declare(metadata [128 x i8]* %nextband1, metadata !8664, metadata !2772), !dbg !8665
  call void @llvm.dbg.declare(metadata float** %M, metadata !8666, metadata !2772), !dbg !8667
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8668
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 29, !dbg !8669
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i32 0, i32 0, !dbg !8668
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 0, !dbg !8670
  store float* %add.ptr, float** %M, align 8, !dbg !8667
  call void @llvm.dbg.declare(metadata float** %S, metadata !8671, metadata !2772), !dbg !8672
  %1 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8673
  %scoefs1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %1, i32 0, i32 29, !dbg !8674
  %arraydecay2 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs1, i32 0, i32 0, !dbg !8673
  %add.ptr3 = getelementptr inbounds float, float* %arraydecay2, i64 128, !dbg !8675
  store float* %add.ptr3, float** %S, align 8, !dbg !8672
  call void @llvm.dbg.declare(metadata float** %L34, metadata !8676, metadata !2772), !dbg !8677
  %2 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8678
  %scoefs4 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %2, i32 0, i32 29, !dbg !8679
  %arraydecay5 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs4, i32 0, i32 0, !dbg !8678
  %add.ptr6 = getelementptr inbounds float, float* %arraydecay5, i64 256, !dbg !8680
  store float* %add.ptr6, float** %L34, align 8, !dbg !8677
  call void @llvm.dbg.declare(metadata float** %R34, metadata !8681, metadata !2772), !dbg !8682
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8683
  %scoefs7 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 29, !dbg !8684
  %arraydecay8 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs7, i32 0, i32 0, !dbg !8683
  %add.ptr9 = getelementptr inbounds float, float* %arraydecay8, i64 384, !dbg !8685
  store float* %add.ptr9, float** %R34, align 8, !dbg !8682
  call void @llvm.dbg.declare(metadata float** %M34, metadata !8686, metadata !2772), !dbg !8687
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8688
  %scoefs10 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %4, i32 0, i32 29, !dbg !8689
  %arraydecay11 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs10, i32 0, i32 0, !dbg !8688
  %add.ptr12 = getelementptr inbounds float, float* %arraydecay11, i64 512, !dbg !8690
  store float* %add.ptr12, float** %M34, align 8, !dbg !8687
  call void @llvm.dbg.declare(metadata float** %S34, metadata !8691, metadata !2772), !dbg !8692
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8693
  %scoefs13 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 29, !dbg !8694
  %arraydecay14 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs13, i32 0, i32 0, !dbg !8693
  %add.ptr15 = getelementptr inbounds float, float* %arraydecay14, i64 640, !dbg !8695
  store float* %add.ptr15, float** %S34, align 8, !dbg !8692
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !8696, metadata !2772), !dbg !8697
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8698
  %lambda16 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %6, i32 0, i32 22, !dbg !8699
  %7 = load float, float* %lambda16, align 8, !dbg !8699
  store float %7, float* %lambda, align 4, !dbg !8697
  call void @llvm.dbg.declare(metadata float* %mslambda, metadata !8700, metadata !2772), !dbg !8701
  %8 = load float, float* %lambda, align 4, !dbg !8702
  %div = fdiv float %8, 1.200000e+02, !dbg !8703
  %cmp = fcmp ogt float 1.000000e+00, %div, !dbg !8704
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8705

cond.true:                                        ; preds = %entry
  %9 = load float, float* %lambda, align 4, !dbg !8706
  %div17 = fdiv float %9, 1.200000e+02, !dbg !8708
  br label %cond.end, !dbg !8709

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8710

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div17, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !8712
  store float %cond, float* %mslambda, align 4, !dbg !8714
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce0, metadata !8715, metadata !2772), !dbg !8716
  %10 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8717
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %10, i32 0, i32 7, !dbg !8718
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !8717
  store %struct.SingleChannelElement* %arrayidx, %struct.SingleChannelElement** %sce0, align 8, !dbg !8716
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce1, metadata !8719, metadata !2772), !dbg !8720
  %11 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8721
  %ch18 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %11, i32 0, i32 7, !dbg !8722
  %arrayidx19 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch18, i64 0, i64 1, !dbg !8721
  store %struct.SingleChannelElement* %arrayidx19, %struct.SingleChannelElement** %sce1, align 8, !dbg !8720
  %12 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8723
  %common_window = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %12, i32 0, i32 1, !dbg !8725
  %13 = load i32, i32* %common_window, align 4, !dbg !8725
  %tobool = icmp ne i32 %13, 0, !dbg !8723
  br i1 %tobool, label %if.end, label %if.then, !dbg !8726

if.then:                                          ; preds = %cond.end
  br label %for.end583, !dbg !8727

if.end:                                           ; preds = %cond.end
  %14 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8728
  %arraydecay20 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband0, i32 0, i32 0, !dbg !8729
  call void @ff_init_nextband_map(%struct.SingleChannelElement* %14, i8* %arraydecay20), !dbg !8730
  %15 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !8731
  %arraydecay21 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband1, i32 0, i32 0, !dbg !8732
  call void @ff_init_nextband_map(%struct.SingleChannelElement* %15, i8* %arraydecay21), !dbg !8733
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8734
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 7, !dbg !8735
  %arrayidx22 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 0, !dbg !8734
  %17 = load i32, i32* %arrayidx22, align 4, !dbg !8734
  store i32 %17, i32* %prev_mid, align 4, !dbg !8736
  %18 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !8737
  %sf_idx23 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %18, i32 0, i32 7, !dbg !8738
  %arrayidx24 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx23, i64 0, i64 0, !dbg !8737
  %19 = load i32, i32* %arrayidx24, align 4, !dbg !8737
  store i32 %19, i32* %prev_side, align 4, !dbg !8739
  store i32 0, i32* %w, align 4, !dbg !8740
  br label %for.cond, !dbg !8741

for.cond:                                         ; preds = %for.inc576, %if.end
  %20 = load i32, i32* %w, align 4, !dbg !8742
  %21 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8744
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %21, i32 0, i32 0, !dbg !8745
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !8746
  %22 = load i32, i32* %num_windows, align 4, !dbg !8746
  %cmp25 = icmp slt i32 %20, %22, !dbg !8747
  br i1 %cmp25, label %for.body, label %for.end583, !dbg !8748

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %start, align 4, !dbg !8749
  store i32 0, i32* %g, align 4, !dbg !8750
  br label %for.cond26, !dbg !8751

for.cond26:                                       ; preds = %for.inc573, %for.body
  %23 = load i32, i32* %g, align 4, !dbg !8752
  %24 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8754
  %ics27 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %24, i32 0, i32 0, !dbg !8755
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics27, i32 0, i32 8, !dbg !8756
  %25 = load i32, i32* %num_swb, align 32, !dbg !8756
  %cmp28 = icmp slt i32 %23, %25, !dbg !8757
  br i1 %cmp28, label %for.body29, label %for.end575, !dbg !8758

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata float* %bmax, metadata !8759, metadata !2772), !dbg !8760
  %26 = load i32, i32* %g, align 4, !dbg !8761
  %conv = sitofp i32 %26 to float, !dbg !8761
  %mul = fmul float %conv, 1.700000e+01, !dbg !8762
  %27 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8763
  %ics30 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %27, i32 0, i32 0, !dbg !8764
  %num_swb31 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics30, i32 0, i32 8, !dbg !8765
  %28 = load i32, i32* %num_swb31, align 32, !dbg !8765
  %conv32 = sitofp i32 %28 to float, !dbg !8763
  %div33 = fdiv float %mul, %conv32, !dbg !8766
  store float %div33, float* %b.addr.i, align 4, !dbg !8767
  %29 = load float, float* %b.addr.i, align 4, !dbg !8768
  %30 = load float, float* %b.addr.i, align 4, !dbg !8769
  %mul.i = fmul float %29, %30, !dbg !8770
  %31 = load float, float* %b.addr.i, align 4, !dbg !8771
  %mul1.i = fmul float %mul.i, %31, !dbg !8772
  %mul2.i = fmul float 0x3F6CAC0840000000, %mul1.i, !dbg !8773
  %div.i = fdiv float %mul2.i, 3.723875e+03, !dbg !8774
  %add.i = fadd float 0x3F50624DE0000000, %div.i, !dbg !8775
  %div34 = fdiv float %add.i, 0x3F726E9780000000, !dbg !8776
  store float %div34, float* %bmax, align 4, !dbg !8760
  %32 = load i32, i32* %w, align 4, !dbg !8777
  %mul35 = mul nsw i32 %32, 16, !dbg !8779
  %33 = load i32, i32* %g, align 4, !dbg !8780
  %add = add nsw i32 %mul35, %33, !dbg !8781
  %idxprom = sext i32 %add to i64, !dbg !8782
  %34 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8782
  %is_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %34, i32 0, i32 5, !dbg !8783
  %arrayidx36 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask, i64 0, i64 %idxprom, !dbg !8782
  %35 = load i8, i8* %arrayidx36, align 1, !dbg !8782
  %tobool37 = icmp ne i8 %35, 0, !dbg !8782
  br i1 %tobool37, label %if.end43, label %if.then38, !dbg !8784

if.then38:                                        ; preds = %for.body29
  %36 = load i32, i32* %w, align 4, !dbg !8785
  %mul39 = mul nsw i32 %36, 16, !dbg !8786
  %37 = load i32, i32* %g, align 4, !dbg !8787
  %add40 = add nsw i32 %mul39, %37, !dbg !8788
  %idxprom41 = sext i32 %add40 to i64, !dbg !8789
  %38 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8789
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %38, i32 0, i32 4, !dbg !8790
  %arrayidx42 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom41, !dbg !8789
  store i8 0, i8* %arrayidx42, align 1, !dbg !8791
  br label %if.end43, !dbg !8789

if.end43:                                         ; preds = %if.then38, %for.body29
  %39 = load i32, i32* %w, align 4, !dbg !8792
  %mul44 = mul nsw i32 %39, 16, !dbg !8793
  %40 = load i32, i32* %g, align 4, !dbg !8794
  %add45 = add nsw i32 %mul44, %40, !dbg !8795
  %idxprom46 = sext i32 %add45 to i64, !dbg !8796
  %41 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8796
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %41, i32 0, i32 8, !dbg !8797
  %arrayidx47 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom46, !dbg !8796
  %42 = load i8, i8* %arrayidx47, align 1, !dbg !8796
  %tobool48 = icmp ne i8 %42, 0, !dbg !8796
  br i1 %tobool48, label %if.end517, label %land.lhs.true, !dbg !8798

land.lhs.true:                                    ; preds = %if.end43
  %43 = load i32, i32* %w, align 4, !dbg !8799
  %mul49 = mul nsw i32 %43, 16, !dbg !8801
  %44 = load i32, i32* %g, align 4, !dbg !8802
  %add50 = add nsw i32 %mul49, %44, !dbg !8803
  %idxprom51 = sext i32 %add50 to i64, !dbg !8804
  %45 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !8804
  %zeroes52 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %45, i32 0, i32 8, !dbg !8805
  %arrayidx53 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes52, i64 0, i64 %idxprom51, !dbg !8804
  %46 = load i8, i8* %arrayidx53, align 1, !dbg !8804
  %tobool54 = icmp ne i8 %46, 0, !dbg !8804
  br i1 %tobool54, label %if.end517, label %land.lhs.true55, !dbg !8806

land.lhs.true55:                                  ; preds = %land.lhs.true
  %47 = load i32, i32* %w, align 4, !dbg !8807
  %mul56 = mul nsw i32 %47, 16, !dbg !8809
  %48 = load i32, i32* %g, align 4, !dbg !8810
  %add57 = add nsw i32 %mul56, %48, !dbg !8811
  %idxprom58 = sext i32 %add57 to i64, !dbg !8812
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !8812
  %is_mask59 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %49, i32 0, i32 5, !dbg !8813
  %arrayidx60 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask59, i64 0, i64 %idxprom58, !dbg !8812
  %50 = load i8, i8* %arrayidx60, align 1, !dbg !8812
  %tobool61 = icmp ne i8 %50, 0, !dbg !8812
  br i1 %tobool61, label %if.end517, label %if.then62, !dbg !8814

if.then62:                                        ; preds = %land.lhs.true55
  call void @llvm.dbg.declare(metadata float* %Mmax, metadata !8815, metadata !2772), !dbg !8816
  store float 0.000000e+00, float* %Mmax, align 4, !dbg !8816
  call void @llvm.dbg.declare(metadata float* %Smax, metadata !8817, metadata !2772), !dbg !8818
  store float 0.000000e+00, float* %Smax, align 4, !dbg !8818
  store i32 0, i32* %w2, align 4, !dbg !8819
  br label %for.cond63, !dbg !8821

for.cond63:                                       ; preds = %for.inc152, %if.then62
  %51 = load i32, i32* %w2, align 4, !dbg !8822
  %52 = load i32, i32* %w, align 4, !dbg !8825
  %idxprom64 = sext i32 %52 to i64, !dbg !8826
  %53 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8826
  %ics65 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %53, i32 0, i32 0, !dbg !8827
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics65, i32 0, i32 4, !dbg !8828
  %arrayidx66 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom64, !dbg !8826
  %54 = load i8, i8* %arrayidx66, align 1, !dbg !8826
  %conv67 = zext i8 %54 to i32, !dbg !8826
  %cmp68 = icmp slt i32 %51, %conv67, !dbg !8829
  br i1 %cmp68, label %for.body70, label %for.end154, !dbg !8830

for.body70:                                       ; preds = %for.cond63
  store i32 0, i32* %i, align 4, !dbg !8831
  br label %for.cond71, !dbg !8834

for.cond71:                                       ; preds = %for.inc, %for.body70
  %55 = load i32, i32* %i, align 4, !dbg !8835
  %56 = load i32, i32* %g, align 4, !dbg !8838
  %idxprom72 = sext i32 %56 to i64, !dbg !8839
  %57 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8839
  %ics73 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %57, i32 0, i32 0, !dbg !8840
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics73, i32 0, i32 7, !dbg !8841
  %58 = load i8*, i8** %swb_sizes, align 8, !dbg !8841
  %arrayidx74 = getelementptr inbounds i8, i8* %58, i64 %idxprom72, !dbg !8839
  %59 = load i8, i8* %arrayidx74, align 1, !dbg !8839
  %conv75 = zext i8 %59 to i32, !dbg !8839
  %cmp76 = icmp slt i32 %55, %conv75, !dbg !8842
  br i1 %cmp76, label %for.body78, label %for.end, !dbg !8843

for.body78:                                       ; preds = %for.cond71
  %60 = load i32, i32* %start, align 4, !dbg !8844
  %61 = load i32, i32* %w, align 4, !dbg !8846
  %62 = load i32, i32* %w2, align 4, !dbg !8847
  %add79 = add nsw i32 %61, %62, !dbg !8848
  %mul80 = mul nsw i32 %add79, 128, !dbg !8849
  %add81 = add nsw i32 %60, %mul80, !dbg !8850
  %63 = load i32, i32* %i, align 4, !dbg !8851
  %add82 = add nsw i32 %add81, %63, !dbg !8852
  %idxprom83 = sext i32 %add82 to i64, !dbg !8853
  %64 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8853
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %64, i32 0, i32 14, !dbg !8854
  %arrayidx84 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom83, !dbg !8853
  %65 = load float, float* %arrayidx84, align 4, !dbg !8853
  %66 = load i32, i32* %start, align 4, !dbg !8855
  %67 = load i32, i32* %w, align 4, !dbg !8856
  %68 = load i32, i32* %w2, align 4, !dbg !8857
  %add85 = add nsw i32 %67, %68, !dbg !8858
  %mul86 = mul nsw i32 %add85, 128, !dbg !8859
  %add87 = add nsw i32 %66, %mul86, !dbg !8860
  %69 = load i32, i32* %i, align 4, !dbg !8861
  %add88 = add nsw i32 %add87, %69, !dbg !8862
  %idxprom89 = sext i32 %add88 to i64, !dbg !8863
  %70 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !8863
  %coeffs90 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %70, i32 0, i32 14, !dbg !8864
  %arrayidx91 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs90, i64 0, i64 %idxprom89, !dbg !8863
  %71 = load float, float* %arrayidx91, align 4, !dbg !8863
  %add92 = fadd float %65, %71, !dbg !8865
  %conv93 = fpext float %add92 to double, !dbg !8866
  %mul94 = fmul double %conv93, 5.000000e-01, !dbg !8867
  %conv95 = fptrunc double %mul94 to float, !dbg !8866
  %72 = load i32, i32* %i, align 4, !dbg !8868
  %idxprom96 = sext i32 %72 to i64, !dbg !8869
  %73 = load float*, float** %M, align 8, !dbg !8869
  %arrayidx97 = getelementptr inbounds float, float* %73, i64 %idxprom96, !dbg !8869
  store float %conv95, float* %arrayidx97, align 4, !dbg !8870
  %74 = load i32, i32* %i, align 4, !dbg !8871
  %idxprom98 = sext i32 %74 to i64, !dbg !8872
  %75 = load float*, float** %M, align 8, !dbg !8872
  %arrayidx99 = getelementptr inbounds float, float* %75, i64 %idxprom98, !dbg !8872
  %76 = load float, float* %arrayidx99, align 4, !dbg !8872
  %77 = load i32, i32* %start, align 4, !dbg !8873
  %78 = load i32, i32* %w, align 4, !dbg !8874
  %79 = load i32, i32* %w2, align 4, !dbg !8875
  %add100 = add nsw i32 %78, %79, !dbg !8876
  %mul101 = mul nsw i32 %add100, 128, !dbg !8877
  %add102 = add nsw i32 %77, %mul101, !dbg !8878
  %80 = load i32, i32* %i, align 4, !dbg !8879
  %add103 = add nsw i32 %add102, %80, !dbg !8880
  %idxprom104 = sext i32 %add103 to i64, !dbg !8881
  %81 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !8881
  %coeffs105 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %81, i32 0, i32 14, !dbg !8882
  %arrayidx106 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs105, i64 0, i64 %idxprom104, !dbg !8881
  %82 = load float, float* %arrayidx106, align 4, !dbg !8881
  %sub = fsub float %76, %82, !dbg !8883
  %83 = load i32, i32* %i, align 4, !dbg !8884
  %idxprom107 = sext i32 %83 to i64, !dbg !8885
  %84 = load float*, float** %S, align 8, !dbg !8885
  %arrayidx108 = getelementptr inbounds float, float* %84, i64 %idxprom107, !dbg !8885
  store float %sub, float* %arrayidx108, align 4, !dbg !8886
  br label %for.inc, !dbg !8887

for.inc:                                          ; preds = %for.body78
  %85 = load i32, i32* %i, align 4, !dbg !8888
  %inc = add nsw i32 %85, 1, !dbg !8888
  store i32 %inc, i32* %i, align 4, !dbg !8888
  br label %for.cond71, !dbg !8890, !llvm.loop !8891

for.end:                                          ; preds = %for.cond71
  %86 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8893
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %86, i32 0, i32 32, !dbg !8894
  %87 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !8894
  %88 = load float*, float** %M34, align 8, !dbg !8895
  %89 = load float*, float** %M, align 8, !dbg !8896
  %90 = load i32, i32* %g, align 4, !dbg !8897
  %idxprom109 = sext i32 %90 to i64, !dbg !8898
  %91 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8898
  %ics110 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %91, i32 0, i32 0, !dbg !8899
  %swb_sizes111 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics110, i32 0, i32 7, !dbg !8900
  %92 = load i8*, i8** %swb_sizes111, align 8, !dbg !8900
  %arrayidx112 = getelementptr inbounds i8, i8* %92, i64 %idxprom109, !dbg !8898
  %93 = load i8, i8* %arrayidx112, align 1, !dbg !8898
  %conv113 = zext i8 %93 to i32, !dbg !8898
  call void %87(float* %88, float* %89, i32 %conv113), !dbg !8893
  %94 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8901
  %abs_pow34114 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %94, i32 0, i32 32, !dbg !8902
  %95 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34114, align 8, !dbg !8902
  %96 = load float*, float** %S34, align 8, !dbg !8903
  %97 = load float*, float** %S, align 8, !dbg !8904
  %98 = load i32, i32* %g, align 4, !dbg !8905
  %idxprom115 = sext i32 %98 to i64, !dbg !8906
  %99 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8906
  %ics116 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %99, i32 0, i32 0, !dbg !8907
  %swb_sizes117 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics116, i32 0, i32 7, !dbg !8908
  %100 = load i8*, i8** %swb_sizes117, align 8, !dbg !8908
  %arrayidx118 = getelementptr inbounds i8, i8* %100, i64 %idxprom115, !dbg !8906
  %101 = load i8, i8* %arrayidx118, align 1, !dbg !8906
  %conv119 = zext i8 %101 to i32, !dbg !8906
  call void %95(float* %96, float* %97, i32 %conv119), !dbg !8901
  store i32 0, i32* %i, align 4, !dbg !8909
  br label %for.cond120, !dbg !8911

for.cond120:                                      ; preds = %for.inc149, %for.end
  %102 = load i32, i32* %i, align 4, !dbg !8912
  %103 = load i32, i32* %g, align 4, !dbg !8915
  %idxprom121 = sext i32 %103 to i64, !dbg !8916
  %104 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8916
  %ics122 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %104, i32 0, i32 0, !dbg !8917
  %swb_sizes123 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics122, i32 0, i32 7, !dbg !8918
  %105 = load i8*, i8** %swb_sizes123, align 8, !dbg !8918
  %arrayidx124 = getelementptr inbounds i8, i8* %105, i64 %idxprom121, !dbg !8916
  %106 = load i8, i8* %arrayidx124, align 1, !dbg !8916
  %conv125 = zext i8 %106 to i32, !dbg !8916
  %cmp126 = icmp slt i32 %102, %conv125, !dbg !8919
  br i1 %cmp126, label %for.body128, label %for.end151, !dbg !8920

for.body128:                                      ; preds = %for.cond120
  %107 = load float, float* %Mmax, align 4, !dbg !8921
  %108 = load i32, i32* %i, align 4, !dbg !8923
  %idxprom129 = sext i32 %108 to i64, !dbg !8924
  %109 = load float*, float** %M34, align 8, !dbg !8924
  %arrayidx130 = getelementptr inbounds float, float* %109, i64 %idxprom129, !dbg !8924
  %110 = load float, float* %arrayidx130, align 4, !dbg !8924
  %cmp131 = fcmp ogt float %107, %110, !dbg !8925
  br i1 %cmp131, label %cond.true133, label %cond.false134, !dbg !8926

cond.true133:                                     ; preds = %for.body128
  %111 = load float, float* %Mmax, align 4, !dbg !8927
  br label %cond.end137, !dbg !8929

cond.false134:                                    ; preds = %for.body128
  %112 = load i32, i32* %i, align 4, !dbg !8930
  %idxprom135 = sext i32 %112 to i64, !dbg !8932
  %113 = load float*, float** %M34, align 8, !dbg !8932
  %arrayidx136 = getelementptr inbounds float, float* %113, i64 %idxprom135, !dbg !8932
  %114 = load float, float* %arrayidx136, align 4, !dbg !8932
  br label %cond.end137, !dbg !8933

cond.end137:                                      ; preds = %cond.false134, %cond.true133
  %cond138 = phi float [ %111, %cond.true133 ], [ %114, %cond.false134 ], !dbg !8934
  store float %cond138, float* %Mmax, align 4, !dbg !8936
  %115 = load float, float* %Smax, align 4, !dbg !8937
  %116 = load i32, i32* %i, align 4, !dbg !8938
  %idxprom139 = sext i32 %116 to i64, !dbg !8939
  %117 = load float*, float** %S34, align 8, !dbg !8939
  %arrayidx140 = getelementptr inbounds float, float* %117, i64 %idxprom139, !dbg !8939
  %118 = load float, float* %arrayidx140, align 4, !dbg !8939
  %cmp141 = fcmp ogt float %115, %118, !dbg !8940
  br i1 %cmp141, label %cond.true143, label %cond.false144, !dbg !8941

cond.true143:                                     ; preds = %cond.end137
  %119 = load float, float* %Smax, align 4, !dbg !8942
  br label %cond.end147, !dbg !8943

cond.false144:                                    ; preds = %cond.end137
  %120 = load i32, i32* %i, align 4, !dbg !8944
  %idxprom145 = sext i32 %120 to i64, !dbg !8945
  %121 = load float*, float** %S34, align 8, !dbg !8945
  %arrayidx146 = getelementptr inbounds float, float* %121, i64 %idxprom145, !dbg !8945
  %122 = load float, float* %arrayidx146, align 4, !dbg !8945
  br label %cond.end147, !dbg !8946

cond.end147:                                      ; preds = %cond.false144, %cond.true143
  %cond148 = phi float [ %119, %cond.true143 ], [ %122, %cond.false144 ], !dbg !8947
  store float %cond148, float* %Smax, align 4, !dbg !8948
  br label %for.inc149, !dbg !8949

for.inc149:                                       ; preds = %cond.end147
  %123 = load i32, i32* %i, align 4, !dbg !8950
  %inc150 = add nsw i32 %123, 1, !dbg !8950
  store i32 %inc150, i32* %i, align 4, !dbg !8950
  br label %for.cond120, !dbg !8952, !llvm.loop !8953

for.end151:                                       ; preds = %for.cond120
  br label %for.inc152, !dbg !8955

for.inc152:                                       ; preds = %for.end151
  %124 = load i32, i32* %w2, align 4, !dbg !8956
  %inc153 = add nsw i32 %124, 1, !dbg !8956
  store i32 %inc153, i32* %w2, align 4, !dbg !8956
  br label %for.cond63, !dbg !8958, !llvm.loop !8959

for.end154:                                       ; preds = %for.cond63
  store i32 0, i32* %sid_sf_boost, align 4, !dbg !8961
  br label %for.cond155, !dbg !8962

for.cond155:                                      ; preds = %for.inc514, %for.end154
  %125 = load i32, i32* %sid_sf_boost, align 4, !dbg !8963
  %cmp156 = icmp slt i32 %125, 4, !dbg !8965
  br i1 %cmp156, label %for.body158, label %for.end516, !dbg !8966

for.body158:                                      ; preds = %for.cond155
  call void @llvm.dbg.declare(metadata float* %dist1, metadata !8967, metadata !2772), !dbg !8968
  store float 0.000000e+00, float* %dist1, align 4, !dbg !8968
  call void @llvm.dbg.declare(metadata float* %dist2, metadata !8969, metadata !2772), !dbg !8970
  store float 0.000000e+00, float* %dist2, align 4, !dbg !8970
  call void @llvm.dbg.declare(metadata i32* %B0, metadata !8971, metadata !2772), !dbg !8972
  store i32 0, i32* %B0, align 4, !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %B1, metadata !8973, metadata !2772), !dbg !8974
  store i32 0, i32* %B1, align 4, !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %minidx, metadata !8975, metadata !2772), !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %mididx, metadata !8977, metadata !2772), !dbg !8978
  call void @llvm.dbg.declare(metadata i32* %sididx, metadata !8979, metadata !2772), !dbg !8980
  call void @llvm.dbg.declare(metadata i32* %midcb, metadata !8981, metadata !2772), !dbg !8982
  call void @llvm.dbg.declare(metadata i32* %sidcb, metadata !8983, metadata !2772), !dbg !8984
  %126 = load i32, i32* %w, align 4, !dbg !8985
  %mul159 = mul nsw i32 %126, 16, !dbg !8986
  %127 = load i32, i32* %g, align 4, !dbg !8987
  %add160 = add nsw i32 %mul159, %127, !dbg !8988
  %idxprom161 = sext i32 %add160 to i64, !dbg !8989
  %128 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !8989
  %sf_idx162 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %128, i32 0, i32 7, !dbg !8990
  %arrayidx163 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx162, i64 0, i64 %idxprom161, !dbg !8989
  %129 = load i32, i32* %arrayidx163, align 4, !dbg !8989
  %130 = load i32, i32* %w, align 4, !dbg !8991
  %mul164 = mul nsw i32 %130, 16, !dbg !8992
  %131 = load i32, i32* %g, align 4, !dbg !8993
  %add165 = add nsw i32 %mul164, %131, !dbg !8994
  %idxprom166 = sext i32 %add165 to i64, !dbg !8995
  %132 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !8995
  %sf_idx167 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %132, i32 0, i32 7, !dbg !8996
  %arrayidx168 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx167, i64 0, i64 %idxprom166, !dbg !8995
  %133 = load i32, i32* %arrayidx168, align 4, !dbg !8995
  %cmp169 = icmp sgt i32 %129, %133, !dbg !8997
  br i1 %cmp169, label %cond.true171, label %cond.false177, !dbg !8998

cond.true171:                                     ; preds = %for.body158
  %134 = load i32, i32* %w, align 4, !dbg !8999
  %mul172 = mul nsw i32 %134, 16, !dbg !9001
  %135 = load i32, i32* %g, align 4, !dbg !9002
  %add173 = add nsw i32 %mul172, %135, !dbg !9003
  %idxprom174 = sext i32 %add173 to i64, !dbg !9004
  %136 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9004
  %sf_idx175 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %136, i32 0, i32 7, !dbg !9005
  %arrayidx176 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx175, i64 0, i64 %idxprom174, !dbg !9004
  %137 = load i32, i32* %arrayidx176, align 4, !dbg !9004
  br label %cond.end183, !dbg !9006

cond.false177:                                    ; preds = %for.body158
  %138 = load i32, i32* %w, align 4, !dbg !9007
  %mul178 = mul nsw i32 %138, 16, !dbg !9009
  %139 = load i32, i32* %g, align 4, !dbg !9010
  %add179 = add nsw i32 %mul178, %139, !dbg !9011
  %idxprom180 = sext i32 %add179 to i64, !dbg !9012
  %140 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9012
  %sf_idx181 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %140, i32 0, i32 7, !dbg !9013
  %arrayidx182 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx181, i64 0, i64 %idxprom180, !dbg !9012
  %141 = load i32, i32* %arrayidx182, align 4, !dbg !9012
  br label %cond.end183, !dbg !9014

cond.end183:                                      ; preds = %cond.false177, %cond.true171
  %cond184 = phi i32 [ %137, %cond.true171 ], [ %141, %cond.false177 ], !dbg !9015
  store i32 %cond184, i32* %minidx, align 4, !dbg !9017
  %142 = load i32, i32* %minidx, align 4, !dbg !9018
  store i32 %142, i32* %a.addr.i, align 4, !dbg !9019
  store i32 0, i32* %amin.addr.i, align 4, !dbg !9019
  store i32 219, i32* %amax.addr.i, align 4, !dbg !9019
  %143 = load i32, i32* %a.addr.i, align 4, !dbg !9020
  %144 = load i32, i32* %amin.addr.i, align 4, !dbg !9021
  %cmp.i = icmp slt i32 %143, %144, !dbg !9022
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !9023

if.then.i:                                        ; preds = %cond.end183
  %145 = load i32, i32* %amin.addr.i, align 4, !dbg !9024
  store i32 %145, i32* %retval.i, align 4, !dbg !9025
  br label %av_clip_c.exit, !dbg !9025

if.else.i:                                        ; preds = %cond.end183
  %146 = load i32, i32* %a.addr.i, align 4, !dbg !9026
  %147 = load i32, i32* %amax.addr.i, align 4, !dbg !9027
  %cmp1.i = icmp sgt i32 %146, %147, !dbg !9028
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !9029

if.then2.i:                                       ; preds = %if.else.i
  %148 = load i32, i32* %amax.addr.i, align 4, !dbg !9030
  store i32 %148, i32* %retval.i, align 4, !dbg !9031
  br label %av_clip_c.exit, !dbg !9031

if.else3.i:                                       ; preds = %if.else.i
  %149 = load i32, i32* %a.addr.i, align 4, !dbg !9032
  store i32 %149, i32* %retval.i, align 4, !dbg !9033
  br label %av_clip_c.exit, !dbg !9033

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %150 = load i32, i32* %retval.i, align 4, !dbg !9034
  store i32 %150, i32* %mididx, align 4, !dbg !9035
  %151 = load i32, i32* %minidx, align 4, !dbg !9036
  %152 = load i32, i32* %sid_sf_boost, align 4, !dbg !9037
  %mul186 = mul nsw i32 %152, 3, !dbg !9038
  %sub187 = sub nsw i32 %151, %mul186, !dbg !9039
  store i32 %sub187, i32* %a.addr.i585, align 4, !dbg !9040
  store i32 0, i32* %amin.addr.i586, align 4, !dbg !9040
  store i32 219, i32* %amax.addr.i587, align 4, !dbg !9040
  %153 = load i32, i32* %a.addr.i585, align 4, !dbg !9041
  %154 = load i32, i32* %amin.addr.i586, align 4, !dbg !9042
  %cmp.i588 = icmp slt i32 %153, %154, !dbg !9043
  br i1 %cmp.i588, label %if.then.i589, label %if.else.i591, !dbg !9044

if.then.i589:                                     ; preds = %av_clip_c.exit
  %155 = load i32, i32* %amin.addr.i586, align 4, !dbg !9045
  store i32 %155, i32* %retval.i584, align 4, !dbg !9046
  br label %av_clip_c.exit594, !dbg !9046

if.else.i591:                                     ; preds = %av_clip_c.exit
  %156 = load i32, i32* %a.addr.i585, align 4, !dbg !9047
  %157 = load i32, i32* %amax.addr.i587, align 4, !dbg !9048
  %cmp1.i590 = icmp sgt i32 %156, %157, !dbg !9049
  br i1 %cmp1.i590, label %if.then2.i592, label %if.else3.i593, !dbg !9050

if.then2.i592:                                    ; preds = %if.else.i591
  %158 = load i32, i32* %amax.addr.i587, align 4, !dbg !9051
  store i32 %158, i32* %retval.i584, align 4, !dbg !9052
  br label %av_clip_c.exit594, !dbg !9052

if.else3.i593:                                    ; preds = %if.else.i591
  %159 = load i32, i32* %a.addr.i585, align 4, !dbg !9053
  store i32 %159, i32* %retval.i584, align 4, !dbg !9054
  br label %av_clip_c.exit594, !dbg !9054

av_clip_c.exit594:                                ; preds = %if.then.i589, %if.then2.i592, %if.else3.i593
  %160 = load i32, i32* %retval.i584, align 4, !dbg !9055
  store i32 %160, i32* %sididx, align 4, !dbg !9056
  %161 = load i32, i32* %w, align 4, !dbg !9057
  %mul189 = mul nsw i32 %161, 16, !dbg !9059
  %162 = load i32, i32* %g, align 4, !dbg !9060
  %add190 = add nsw i32 %mul189, %162, !dbg !9061
  %idxprom191 = sext i32 %add190 to i64, !dbg !9062
  %163 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9062
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %163, i32 0, i32 3, !dbg !9063
  %arrayidx192 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom191, !dbg !9062
  %164 = load i32, i32* %arrayidx192, align 4, !dbg !9062
  %cmp193 = icmp ne i32 %164, 13, !dbg !9064
  br i1 %cmp193, label %land.lhs.true195, label %if.end215, !dbg !9065

land.lhs.true195:                                 ; preds = %av_clip_c.exit594
  %165 = load i32, i32* %w, align 4, !dbg !9066
  %mul196 = mul nsw i32 %165, 16, !dbg !9068
  %166 = load i32, i32* %g, align 4, !dbg !9069
  %add197 = add nsw i32 %mul196, %166, !dbg !9070
  %idxprom198 = sext i32 %add197 to i64, !dbg !9071
  %167 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9071
  %band_type199 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %167, i32 0, i32 3, !dbg !9072
  %arrayidx200 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type199, i64 0, i64 %idxprom198, !dbg !9071
  %168 = load i32, i32* %arrayidx200, align 4, !dbg !9071
  %cmp201 = icmp ne i32 %168, 13, !dbg !9073
  br i1 %cmp201, label %land.lhs.true203, label %if.end215, !dbg !9074

land.lhs.true203:                                 ; preds = %land.lhs.true195
  %169 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9075
  %arraydecay204 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband0, i32 0, i32 0, !dbg !9076
  %170 = load i32, i32* %prev_mid, align 4, !dbg !9077
  %171 = load i32, i32* %mididx, align 4, !dbg !9078
  %172 = load i32, i32* %w, align 4, !dbg !9079
  %mul205 = mul nsw i32 %172, 16, !dbg !9080
  %173 = load i32, i32* %g, align 4, !dbg !9081
  %add206 = add nsw i32 %mul205, %173, !dbg !9082
  %call207 = call i32 @ff_sfdelta_can_replace(%struct.SingleChannelElement* %169, i8* %arraydecay204, i32 %170, i32 %171, i32 %add206), !dbg !9083
  %tobool208 = icmp ne i32 %call207, 0, !dbg !9083
  br i1 %tobool208, label %lor.lhs.false, label %if.then214, !dbg !9084

lor.lhs.false:                                    ; preds = %land.lhs.true203
  %174 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9085
  %arraydecay209 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband1, i32 0, i32 0, !dbg !9086
  %175 = load i32, i32* %prev_side, align 4, !dbg !9087
  %176 = load i32, i32* %sididx, align 4, !dbg !9088
  %177 = load i32, i32* %w, align 4, !dbg !9089
  %mul210 = mul nsw i32 %177, 16, !dbg !9090
  %178 = load i32, i32* %g, align 4, !dbg !9091
  %add211 = add nsw i32 %mul210, %178, !dbg !9092
  %call212 = call i32 @ff_sfdelta_can_replace(%struct.SingleChannelElement* %174, i8* %arraydecay209, i32 %175, i32 %176, i32 %add211), !dbg !9093
  %tobool213 = icmp ne i32 %call212, 0, !dbg !9093
  br i1 %tobool213, label %if.end215, label %if.then214, !dbg !9094

if.then214:                                       ; preds = %lor.lhs.false, %land.lhs.true203
  br label %for.inc514, !dbg !9095

if.end215:                                        ; preds = %lor.lhs.false, %land.lhs.true195, %av_clip_c.exit594
  %179 = load float, float* %Mmax, align 4, !dbg !9097
  %180 = load i32, i32* %mididx, align 4, !dbg !9098
  %call216 = call i32 @find_min_book(float %179, i32 %180), !dbg !9099
  store i32 %call216, i32* %midcb, align 4, !dbg !9100
  %181 = load float, float* %Smax, align 4, !dbg !9101
  %182 = load i32, i32* %sididx, align 4, !dbg !9102
  %call217 = call i32 @find_min_book(float %181, i32 %182), !dbg !9103
  store i32 %call217, i32* %sidcb, align 4, !dbg !9104
  %183 = load i32, i32* %midcb, align 4, !dbg !9105
  %cmp218 = icmp sgt i32 1, %183, !dbg !9106
  br i1 %cmp218, label %cond.true220, label %cond.false221, !dbg !9107

cond.true220:                                     ; preds = %if.end215
  br label %cond.end222, !dbg !9108

cond.false221:                                    ; preds = %if.end215
  %184 = load i32, i32* %midcb, align 4, !dbg !9109
  br label %cond.end222, !dbg !9110

cond.end222:                                      ; preds = %cond.false221, %cond.true220
  %cond223 = phi i32 [ 1, %cond.true220 ], [ %184, %cond.false221 ], !dbg !9111
  store i32 %cond223, i32* %midcb, align 4, !dbg !9112
  %185 = load i32, i32* %sidcb, align 4, !dbg !9113
  %cmp224 = icmp sgt i32 1, %185, !dbg !9114
  br i1 %cmp224, label %cond.true226, label %cond.false227, !dbg !9115

cond.true226:                                     ; preds = %cond.end222
  br label %cond.end228, !dbg !9116

cond.false227:                                    ; preds = %cond.end222
  %186 = load i32, i32* %sidcb, align 4, !dbg !9117
  br label %cond.end228, !dbg !9118

cond.end228:                                      ; preds = %cond.false227, %cond.true226
  %cond229 = phi i32 [ 1, %cond.true226 ], [ %186, %cond.false227 ], !dbg !9119
  store i32 %cond229, i32* %sidcb, align 4, !dbg !9120
  store i32 0, i32* %w2, align 4, !dbg !9121
  br label %for.cond230, !dbg !9123

for.cond230:                                      ; preds = %for.inc429, %cond.end228
  %187 = load i32, i32* %w2, align 4, !dbg !9124
  %188 = load i32, i32* %w, align 4, !dbg !9127
  %idxprom231 = sext i32 %188 to i64, !dbg !9128
  %189 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9128
  %ics232 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %189, i32 0, i32 0, !dbg !9129
  %group_len233 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics232, i32 0, i32 4, !dbg !9130
  %arrayidx234 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len233, i64 0, i64 %idxprom231, !dbg !9128
  %190 = load i8, i8* %arrayidx234, align 1, !dbg !9128
  %conv235 = zext i8 %190 to i32, !dbg !9128
  %cmp236 = icmp slt i32 %187, %conv235, !dbg !9131
  br i1 %cmp236, label %for.body238, label %for.end431, !dbg !9132

for.body238:                                      ; preds = %for.cond230
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band0, metadata !9133, metadata !2772), !dbg !9135
  %191 = load i32, i32* %w, align 4, !dbg !9136
  %192 = load i32, i32* %w2, align 4, !dbg !9137
  %add239 = add nsw i32 %191, %192, !dbg !9138
  %mul240 = mul nsw i32 %add239, 16, !dbg !9139
  %193 = load i32, i32* %g, align 4, !dbg !9140
  %add241 = add nsw i32 %mul240, %193, !dbg !9141
  %idxprom242 = sext i32 %add241 to i64, !dbg !9142
  %194 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9143
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %194, i32 0, i32 20, !dbg !9144
  %195 = load i32, i32* %cur_channel, align 32, !dbg !9144
  %add243 = add nsw i32 %195, 0, !dbg !9145
  %idxprom244 = sext i32 %add243 to i64, !dbg !9142
  %196 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9142
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %196, i32 0, i32 17, !dbg !9146
  %ch245 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !9147
  %197 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch245, align 16, !dbg !9147
  %arrayidx246 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %197, i64 %idxprom244, !dbg !9142
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx246, i32 0, i32 0, !dbg !9148
  %arrayidx247 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom242, !dbg !9142
  store %struct.FFPsyBand* %arrayidx247, %struct.FFPsyBand** %band0, align 8, !dbg !9135
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band1, metadata !9149, metadata !2772), !dbg !9150
  %198 = load i32, i32* %w, align 4, !dbg !9151
  %199 = load i32, i32* %w2, align 4, !dbg !9152
  %add248 = add nsw i32 %198, %199, !dbg !9153
  %mul249 = mul nsw i32 %add248, 16, !dbg !9154
  %200 = load i32, i32* %g, align 4, !dbg !9155
  %add250 = add nsw i32 %mul249, %200, !dbg !9156
  %idxprom251 = sext i32 %add250 to i64, !dbg !9157
  %201 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9158
  %cur_channel252 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %201, i32 0, i32 20, !dbg !9159
  %202 = load i32, i32* %cur_channel252, align 32, !dbg !9159
  %add253 = add nsw i32 %202, 1, !dbg !9160
  %idxprom254 = sext i32 %add253 to i64, !dbg !9157
  %203 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9157
  %psy255 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %203, i32 0, i32 17, !dbg !9161
  %ch256 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy255, i32 0, i32 2, !dbg !9162
  %204 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch256, align 16, !dbg !9162
  %arrayidx257 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %204, i64 %idxprom254, !dbg !9157
  %psy_bands258 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx257, i32 0, i32 0, !dbg !9163
  %arrayidx259 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands258, i64 0, i64 %idxprom251, !dbg !9157
  store %struct.FFPsyBand* %arrayidx259, %struct.FFPsyBand** %band1, align 8, !dbg !9150
  call void @llvm.dbg.declare(metadata float* %minthr, metadata !9164, metadata !2772), !dbg !9165
  %205 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band0, align 8, !dbg !9166
  %threshold = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %205, i32 0, i32 2, !dbg !9167
  %206 = load float, float* %threshold, align 4, !dbg !9167
  %207 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1, align 8, !dbg !9168
  %threshold260 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %207, i32 0, i32 2, !dbg !9169
  %208 = load float, float* %threshold260, align 4, !dbg !9169
  %cmp261 = fcmp ogt float %206, %208, !dbg !9170
  br i1 %cmp261, label %cond.true263, label %cond.false265, !dbg !9171

cond.true263:                                     ; preds = %for.body238
  %209 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1, align 8, !dbg !9172
  %threshold264 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %209, i32 0, i32 2, !dbg !9174
  %210 = load float, float* %threshold264, align 4, !dbg !9174
  br label %cond.end267, !dbg !9175

cond.false265:                                    ; preds = %for.body238
  %211 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band0, align 8, !dbg !9176
  %threshold266 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %211, i32 0, i32 2, !dbg !9178
  %212 = load float, float* %threshold266, align 4, !dbg !9178
  br label %cond.end267, !dbg !9179

cond.end267:                                      ; preds = %cond.false265, %cond.true263
  %cond268 = phi float [ %210, %cond.true263 ], [ %212, %cond.false265 ], !dbg !9180
  store float %cond268, float* %minthr, align 4, !dbg !9182
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !9183, metadata !2772), !dbg !9184
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !9185, metadata !2772), !dbg !9186
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !9187, metadata !2772), !dbg !9188
  call void @llvm.dbg.declare(metadata i32* %b4, metadata !9189, metadata !2772), !dbg !9190
  store i32 0, i32* %i, align 4, !dbg !9191
  br label %for.cond269, !dbg !9193

for.cond269:                                      ; preds = %for.inc310, %cond.end267
  %213 = load i32, i32* %i, align 4, !dbg !9194
  %214 = load i32, i32* %g, align 4, !dbg !9197
  %idxprom270 = sext i32 %214 to i64, !dbg !9198
  %215 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9198
  %ics271 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %215, i32 0, i32 0, !dbg !9199
  %swb_sizes272 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics271, i32 0, i32 7, !dbg !9200
  %216 = load i8*, i8** %swb_sizes272, align 8, !dbg !9200
  %arrayidx273 = getelementptr inbounds i8, i8* %216, i64 %idxprom270, !dbg !9198
  %217 = load i8, i8* %arrayidx273, align 1, !dbg !9198
  %conv274 = zext i8 %217 to i32, !dbg !9198
  %cmp275 = icmp slt i32 %213, %conv274, !dbg !9201
  br i1 %cmp275, label %for.body277, label %for.end312, !dbg !9202

for.body277:                                      ; preds = %for.cond269
  %218 = load i32, i32* %start, align 4, !dbg !9203
  %219 = load i32, i32* %w, align 4, !dbg !9205
  %220 = load i32, i32* %w2, align 4, !dbg !9206
  %add278 = add nsw i32 %219, %220, !dbg !9207
  %mul279 = mul nsw i32 %add278, 128, !dbg !9208
  %add280 = add nsw i32 %218, %mul279, !dbg !9209
  %221 = load i32, i32* %i, align 4, !dbg !9210
  %add281 = add nsw i32 %add280, %221, !dbg !9211
  %idxprom282 = sext i32 %add281 to i64, !dbg !9212
  %222 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9212
  %coeffs283 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %222, i32 0, i32 14, !dbg !9213
  %arrayidx284 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs283, i64 0, i64 %idxprom282, !dbg !9212
  %223 = load float, float* %arrayidx284, align 4, !dbg !9212
  %224 = load i32, i32* %start, align 4, !dbg !9214
  %225 = load i32, i32* %w, align 4, !dbg !9215
  %226 = load i32, i32* %w2, align 4, !dbg !9216
  %add285 = add nsw i32 %225, %226, !dbg !9217
  %mul286 = mul nsw i32 %add285, 128, !dbg !9218
  %add287 = add nsw i32 %224, %mul286, !dbg !9219
  %227 = load i32, i32* %i, align 4, !dbg !9220
  %add288 = add nsw i32 %add287, %227, !dbg !9221
  %idxprom289 = sext i32 %add288 to i64, !dbg !9222
  %228 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9222
  %coeffs290 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %228, i32 0, i32 14, !dbg !9223
  %arrayidx291 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs290, i64 0, i64 %idxprom289, !dbg !9222
  %229 = load float, float* %arrayidx291, align 4, !dbg !9222
  %add292 = fadd float %223, %229, !dbg !9224
  %conv293 = fpext float %add292 to double, !dbg !9225
  %mul294 = fmul double %conv293, 5.000000e-01, !dbg !9226
  %conv295 = fptrunc double %mul294 to float, !dbg !9225
  %230 = load i32, i32* %i, align 4, !dbg !9227
  %idxprom296 = sext i32 %230 to i64, !dbg !9228
  %231 = load float*, float** %M, align 8, !dbg !9228
  %arrayidx297 = getelementptr inbounds float, float* %231, i64 %idxprom296, !dbg !9228
  store float %conv295, float* %arrayidx297, align 4, !dbg !9229
  %232 = load i32, i32* %i, align 4, !dbg !9230
  %idxprom298 = sext i32 %232 to i64, !dbg !9231
  %233 = load float*, float** %M, align 8, !dbg !9231
  %arrayidx299 = getelementptr inbounds float, float* %233, i64 %idxprom298, !dbg !9231
  %234 = load float, float* %arrayidx299, align 4, !dbg !9231
  %235 = load i32, i32* %start, align 4, !dbg !9232
  %236 = load i32, i32* %w, align 4, !dbg !9233
  %237 = load i32, i32* %w2, align 4, !dbg !9234
  %add300 = add nsw i32 %236, %237, !dbg !9235
  %mul301 = mul nsw i32 %add300, 128, !dbg !9236
  %add302 = add nsw i32 %235, %mul301, !dbg !9237
  %238 = load i32, i32* %i, align 4, !dbg !9238
  %add303 = add nsw i32 %add302, %238, !dbg !9239
  %idxprom304 = sext i32 %add303 to i64, !dbg !9240
  %239 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9240
  %coeffs305 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %239, i32 0, i32 14, !dbg !9241
  %arrayidx306 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs305, i64 0, i64 %idxprom304, !dbg !9240
  %240 = load float, float* %arrayidx306, align 4, !dbg !9240
  %sub307 = fsub float %234, %240, !dbg !9242
  %241 = load i32, i32* %i, align 4, !dbg !9243
  %idxprom308 = sext i32 %241 to i64, !dbg !9244
  %242 = load float*, float** %S, align 8, !dbg !9244
  %arrayidx309 = getelementptr inbounds float, float* %242, i64 %idxprom308, !dbg !9244
  store float %sub307, float* %arrayidx309, align 4, !dbg !9245
  br label %for.inc310, !dbg !9246

for.inc310:                                       ; preds = %for.body277
  %243 = load i32, i32* %i, align 4, !dbg !9247
  %inc311 = add nsw i32 %243, 1, !dbg !9247
  store i32 %inc311, i32* %i, align 4, !dbg !9247
  br label %for.cond269, !dbg !9249, !llvm.loop !9250

for.end312:                                       ; preds = %for.cond269
  %244 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9252
  %abs_pow34313 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %244, i32 0, i32 32, !dbg !9253
  %245 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34313, align 8, !dbg !9253
  %246 = load float*, float** %L34, align 8, !dbg !9254
  %247 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9255
  %coeffs314 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %247, i32 0, i32 14, !dbg !9256
  %arraydecay315 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs314, i32 0, i32 0, !dbg !9255
  %248 = load i32, i32* %start, align 4, !dbg !9257
  %idx.ext = sext i32 %248 to i64, !dbg !9258
  %add.ptr316 = getelementptr inbounds float, float* %arraydecay315, i64 %idx.ext, !dbg !9258
  %249 = load i32, i32* %w, align 4, !dbg !9259
  %250 = load i32, i32* %w2, align 4, !dbg !9260
  %add317 = add nsw i32 %249, %250, !dbg !9261
  %mul318 = mul nsw i32 %add317, 128, !dbg !9262
  %idx.ext319 = sext i32 %mul318 to i64, !dbg !9263
  %add.ptr320 = getelementptr inbounds float, float* %add.ptr316, i64 %idx.ext319, !dbg !9263
  %251 = load i32, i32* %g, align 4, !dbg !9264
  %idxprom321 = sext i32 %251 to i64, !dbg !9265
  %252 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9265
  %ics322 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %252, i32 0, i32 0, !dbg !9266
  %swb_sizes323 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics322, i32 0, i32 7, !dbg !9267
  %253 = load i8*, i8** %swb_sizes323, align 8, !dbg !9267
  %arrayidx324 = getelementptr inbounds i8, i8* %253, i64 %idxprom321, !dbg !9265
  %254 = load i8, i8* %arrayidx324, align 1, !dbg !9265
  %conv325 = zext i8 %254 to i32, !dbg !9265
  call void %245(float* %246, float* %add.ptr320, i32 %conv325), !dbg !9252
  %255 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9268
  %abs_pow34326 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %255, i32 0, i32 32, !dbg !9269
  %256 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34326, align 8, !dbg !9269
  %257 = load float*, float** %R34, align 8, !dbg !9270
  %258 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9271
  %coeffs327 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %258, i32 0, i32 14, !dbg !9272
  %arraydecay328 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs327, i32 0, i32 0, !dbg !9271
  %259 = load i32, i32* %start, align 4, !dbg !9273
  %idx.ext329 = sext i32 %259 to i64, !dbg !9274
  %add.ptr330 = getelementptr inbounds float, float* %arraydecay328, i64 %idx.ext329, !dbg !9274
  %260 = load i32, i32* %w, align 4, !dbg !9275
  %261 = load i32, i32* %w2, align 4, !dbg !9276
  %add331 = add nsw i32 %260, %261, !dbg !9277
  %mul332 = mul nsw i32 %add331, 128, !dbg !9278
  %idx.ext333 = sext i32 %mul332 to i64, !dbg !9279
  %add.ptr334 = getelementptr inbounds float, float* %add.ptr330, i64 %idx.ext333, !dbg !9279
  %262 = load i32, i32* %g, align 4, !dbg !9280
  %idxprom335 = sext i32 %262 to i64, !dbg !9281
  %263 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9281
  %ics336 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %263, i32 0, i32 0, !dbg !9282
  %swb_sizes337 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics336, i32 0, i32 7, !dbg !9283
  %264 = load i8*, i8** %swb_sizes337, align 8, !dbg !9283
  %arrayidx338 = getelementptr inbounds i8, i8* %264, i64 %idxprom335, !dbg !9281
  %265 = load i8, i8* %arrayidx338, align 1, !dbg !9281
  %conv339 = zext i8 %265 to i32, !dbg !9281
  call void %256(float* %257, float* %add.ptr334, i32 %conv339), !dbg !9268
  %266 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9284
  %abs_pow34340 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %266, i32 0, i32 32, !dbg !9285
  %267 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34340, align 8, !dbg !9285
  %268 = load float*, float** %M34, align 8, !dbg !9286
  %269 = load float*, float** %M, align 8, !dbg !9287
  %270 = load i32, i32* %g, align 4, !dbg !9288
  %idxprom341 = sext i32 %270 to i64, !dbg !9289
  %271 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9289
  %ics342 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %271, i32 0, i32 0, !dbg !9290
  %swb_sizes343 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics342, i32 0, i32 7, !dbg !9291
  %272 = load i8*, i8** %swb_sizes343, align 8, !dbg !9291
  %arrayidx344 = getelementptr inbounds i8, i8* %272, i64 %idxprom341, !dbg !9289
  %273 = load i8, i8* %arrayidx344, align 1, !dbg !9289
  %conv345 = zext i8 %273 to i32, !dbg !9289
  call void %267(float* %268, float* %269, i32 %conv345), !dbg !9284
  %274 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9292
  %abs_pow34346 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %274, i32 0, i32 32, !dbg !9293
  %275 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34346, align 8, !dbg !9293
  %276 = load float*, float** %S34, align 8, !dbg !9294
  %277 = load float*, float** %S, align 8, !dbg !9295
  %278 = load i32, i32* %g, align 4, !dbg !9296
  %idxprom347 = sext i32 %278 to i64, !dbg !9297
  %279 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9297
  %ics348 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %279, i32 0, i32 0, !dbg !9298
  %swb_sizes349 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics348, i32 0, i32 7, !dbg !9299
  %280 = load i8*, i8** %swb_sizes349, align 8, !dbg !9299
  %arrayidx350 = getelementptr inbounds i8, i8* %280, i64 %idxprom347, !dbg !9297
  %281 = load i8, i8* %arrayidx350, align 1, !dbg !9297
  %conv351 = zext i8 %281 to i32, !dbg !9297
  call void %275(float* %276, float* %277, i32 %conv351), !dbg !9292
  %282 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9300
  %283 = load i32, i32* %start, align 4, !dbg !9301
  %284 = load i32, i32* %w, align 4, !dbg !9302
  %285 = load i32, i32* %w2, align 4, !dbg !9303
  %add352 = add nsw i32 %284, %285, !dbg !9304
  %mul353 = mul nsw i32 %add352, 128, !dbg !9305
  %add354 = add nsw i32 %283, %mul353, !dbg !9306
  %idxprom355 = sext i32 %add354 to i64, !dbg !9307
  %286 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9307
  %coeffs356 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %286, i32 0, i32 14, !dbg !9308
  %arrayidx357 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs356, i64 0, i64 %idxprom355, !dbg !9307
  %287 = load float*, float** %L34, align 8, !dbg !9309
  %288 = load i32, i32* %g, align 4, !dbg !9310
  %idxprom358 = sext i32 %288 to i64, !dbg !9311
  %289 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9311
  %ics359 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %289, i32 0, i32 0, !dbg !9312
  %swb_sizes360 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics359, i32 0, i32 7, !dbg !9313
  %290 = load i8*, i8** %swb_sizes360, align 8, !dbg !9313
  %arrayidx361 = getelementptr inbounds i8, i8* %290, i64 %idxprom358, !dbg !9311
  %291 = load i8, i8* %arrayidx361, align 1, !dbg !9311
  %conv362 = zext i8 %291 to i32, !dbg !9311
  %292 = load i32, i32* %w, align 4, !dbg !9314
  %mul363 = mul nsw i32 %292, 16, !dbg !9315
  %293 = load i32, i32* %g, align 4, !dbg !9316
  %add364 = add nsw i32 %mul363, %293, !dbg !9317
  %idxprom365 = sext i32 %add364 to i64, !dbg !9318
  %294 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9318
  %sf_idx366 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %294, i32 0, i32 7, !dbg !9319
  %arrayidx367 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx366, i64 0, i64 %idxprom365, !dbg !9318
  %295 = load i32, i32* %arrayidx367, align 4, !dbg !9318
  %296 = load i32, i32* %w, align 4, !dbg !9320
  %mul368 = mul nsw i32 %296, 16, !dbg !9321
  %297 = load i32, i32* %g, align 4, !dbg !9322
  %add369 = add nsw i32 %mul368, %297, !dbg !9323
  %idxprom370 = sext i32 %add369 to i64, !dbg !9324
  %298 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9324
  %band_type371 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %298, i32 0, i32 3, !dbg !9325
  %arrayidx372 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type371, i64 0, i64 %idxprom370, !dbg !9324
  %299 = load i32, i32* %arrayidx372, align 4, !dbg !9324
  %300 = load float, float* %lambda, align 4, !dbg !9326
  %301 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band0, align 8, !dbg !9327
  %threshold373 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %301, i32 0, i32 2, !dbg !9328
  %302 = load float, float* %threshold373, align 4, !dbg !9328
  %div374 = fdiv float %300, %302, !dbg !9329
  %call375 = call float @quantize_band_cost(%struct.AACEncContext* %282, float* %arrayidx357, float* %287, i32 %conv362, i32 %295, i32 %299, float %div374, float 0x7FF0000000000000, i32* %b1, float* null, i32 0), !dbg !9330
  %303 = load float, float* %dist1, align 4, !dbg !9331
  %add376 = fadd float %303, %call375, !dbg !9331
  store float %add376, float* %dist1, align 4, !dbg !9331
  %304 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9332
  %305 = load i32, i32* %start, align 4, !dbg !9333
  %306 = load i32, i32* %w, align 4, !dbg !9334
  %307 = load i32, i32* %w2, align 4, !dbg !9335
  %add377 = add nsw i32 %306, %307, !dbg !9336
  %mul378 = mul nsw i32 %add377, 128, !dbg !9337
  %add379 = add nsw i32 %305, %mul378, !dbg !9338
  %idxprom380 = sext i32 %add379 to i64, !dbg !9339
  %308 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9339
  %coeffs381 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %308, i32 0, i32 14, !dbg !9340
  %arrayidx382 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs381, i64 0, i64 %idxprom380, !dbg !9339
  %309 = load float*, float** %R34, align 8, !dbg !9341
  %310 = load i32, i32* %g, align 4, !dbg !9342
  %idxprom383 = sext i32 %310 to i64, !dbg !9343
  %311 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9343
  %ics384 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %311, i32 0, i32 0, !dbg !9344
  %swb_sizes385 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics384, i32 0, i32 7, !dbg !9345
  %312 = load i8*, i8** %swb_sizes385, align 8, !dbg !9345
  %arrayidx386 = getelementptr inbounds i8, i8* %312, i64 %idxprom383, !dbg !9343
  %313 = load i8, i8* %arrayidx386, align 1, !dbg !9343
  %conv387 = zext i8 %313 to i32, !dbg !9343
  %314 = load i32, i32* %w, align 4, !dbg !9346
  %mul388 = mul nsw i32 %314, 16, !dbg !9347
  %315 = load i32, i32* %g, align 4, !dbg !9348
  %add389 = add nsw i32 %mul388, %315, !dbg !9349
  %idxprom390 = sext i32 %add389 to i64, !dbg !9350
  %316 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9350
  %sf_idx391 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %316, i32 0, i32 7, !dbg !9351
  %arrayidx392 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx391, i64 0, i64 %idxprom390, !dbg !9350
  %317 = load i32, i32* %arrayidx392, align 4, !dbg !9350
  %318 = load i32, i32* %w, align 4, !dbg !9352
  %mul393 = mul nsw i32 %318, 16, !dbg !9353
  %319 = load i32, i32* %g, align 4, !dbg !9354
  %add394 = add nsw i32 %mul393, %319, !dbg !9355
  %idxprom395 = sext i32 %add394 to i64, !dbg !9356
  %320 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9356
  %band_type396 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %320, i32 0, i32 3, !dbg !9357
  %arrayidx397 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type396, i64 0, i64 %idxprom395, !dbg !9356
  %321 = load i32, i32* %arrayidx397, align 4, !dbg !9356
  %322 = load float, float* %lambda, align 4, !dbg !9358
  %323 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1, align 8, !dbg !9359
  %threshold398 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %323, i32 0, i32 2, !dbg !9360
  %324 = load float, float* %threshold398, align 4, !dbg !9360
  %div399 = fdiv float %322, %324, !dbg !9361
  %call400 = call float @quantize_band_cost(%struct.AACEncContext* %304, float* %arrayidx382, float* %309, i32 %conv387, i32 %317, i32 %321, float %div399, float 0x7FF0000000000000, i32* %b2, float* null, i32 0), !dbg !9362
  %325 = load float, float* %dist1, align 4, !dbg !9363
  %add401 = fadd float %325, %call400, !dbg !9363
  store float %add401, float* %dist1, align 4, !dbg !9363
  %326 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9364
  %327 = load float*, float** %M, align 8, !dbg !9365
  %328 = load float*, float** %M34, align 8, !dbg !9366
  %329 = load i32, i32* %g, align 4, !dbg !9367
  %idxprom402 = sext i32 %329 to i64, !dbg !9368
  %330 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9368
  %ics403 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %330, i32 0, i32 0, !dbg !9369
  %swb_sizes404 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics403, i32 0, i32 7, !dbg !9370
  %331 = load i8*, i8** %swb_sizes404, align 8, !dbg !9370
  %arrayidx405 = getelementptr inbounds i8, i8* %331, i64 %idxprom402, !dbg !9368
  %332 = load i8, i8* %arrayidx405, align 1, !dbg !9368
  %conv406 = zext i8 %332 to i32, !dbg !9368
  %333 = load i32, i32* %mididx, align 4, !dbg !9371
  %334 = load i32, i32* %midcb, align 4, !dbg !9372
  %335 = load float, float* %lambda, align 4, !dbg !9373
  %336 = load float, float* %minthr, align 4, !dbg !9374
  %div407 = fdiv float %335, %336, !dbg !9375
  %call408 = call float @quantize_band_cost(%struct.AACEncContext* %326, float* %327, float* %328, i32 %conv406, i32 %333, i32 %334, float %div407, float 0x7FF0000000000000, i32* %b3, float* null, i32 0), !dbg !9376
  %337 = load float, float* %dist2, align 4, !dbg !9377
  %add409 = fadd float %337, %call408, !dbg !9377
  store float %add409, float* %dist2, align 4, !dbg !9377
  %338 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9378
  %339 = load float*, float** %S, align 8, !dbg !9379
  %340 = load float*, float** %S34, align 8, !dbg !9380
  %341 = load i32, i32* %g, align 4, !dbg !9381
  %idxprom410 = sext i32 %341 to i64, !dbg !9382
  %342 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9382
  %ics411 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %342, i32 0, i32 0, !dbg !9383
  %swb_sizes412 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics411, i32 0, i32 7, !dbg !9384
  %343 = load i8*, i8** %swb_sizes412, align 8, !dbg !9384
  %arrayidx413 = getelementptr inbounds i8, i8* %343, i64 %idxprom410, !dbg !9382
  %344 = load i8, i8* %arrayidx413, align 1, !dbg !9382
  %conv414 = zext i8 %344 to i32, !dbg !9382
  %345 = load i32, i32* %sididx, align 4, !dbg !9385
  %346 = load i32, i32* %sidcb, align 4, !dbg !9386
  %347 = load float, float* %mslambda, align 4, !dbg !9387
  %348 = load float, float* %minthr, align 4, !dbg !9388
  %349 = load float, float* %bmax, align 4, !dbg !9389
  %mul415 = fmul float %348, %349, !dbg !9390
  %div416 = fdiv float %347, %mul415, !dbg !9391
  %call417 = call float @quantize_band_cost(%struct.AACEncContext* %338, float* %339, float* %340, i32 %conv414, i32 %345, i32 %346, float %div416, float 0x7FF0000000000000, i32* %b4, float* null, i32 0), !dbg !9392
  %350 = load float, float* %dist2, align 4, !dbg !9393
  %add418 = fadd float %350, %call417, !dbg !9393
  store float %add418, float* %dist2, align 4, !dbg !9393
  %351 = load i32, i32* %b1, align 4, !dbg !9394
  %352 = load i32, i32* %b2, align 4, !dbg !9395
  %add419 = add nsw i32 %351, %352, !dbg !9396
  %353 = load i32, i32* %B0, align 4, !dbg !9397
  %add420 = add nsw i32 %353, %add419, !dbg !9397
  store i32 %add420, i32* %B0, align 4, !dbg !9397
  %354 = load i32, i32* %b3, align 4, !dbg !9398
  %355 = load i32, i32* %b4, align 4, !dbg !9399
  %add421 = add nsw i32 %354, %355, !dbg !9400
  %356 = load i32, i32* %B1, align 4, !dbg !9401
  %add422 = add nsw i32 %356, %add421, !dbg !9401
  store i32 %add422, i32* %B1, align 4, !dbg !9401
  %357 = load i32, i32* %b1, align 4, !dbg !9402
  %358 = load i32, i32* %b2, align 4, !dbg !9403
  %add423 = add nsw i32 %357, %358, !dbg !9404
  %conv424 = sitofp i32 %add423 to float, !dbg !9402
  %359 = load float, float* %dist1, align 4, !dbg !9405
  %sub425 = fsub float %359, %conv424, !dbg !9405
  store float %sub425, float* %dist1, align 4, !dbg !9405
  %360 = load i32, i32* %b3, align 4, !dbg !9406
  %361 = load i32, i32* %b4, align 4, !dbg !9407
  %add426 = add nsw i32 %360, %361, !dbg !9408
  %conv427 = sitofp i32 %add426 to float, !dbg !9406
  %362 = load float, float* %dist2, align 4, !dbg !9409
  %sub428 = fsub float %362, %conv427, !dbg !9409
  store float %sub428, float* %dist2, align 4, !dbg !9409
  br label %for.inc429, !dbg !9410

for.inc429:                                       ; preds = %for.end312
  %363 = load i32, i32* %w2, align 4, !dbg !9411
  %inc430 = add nsw i32 %363, 1, !dbg !9411
  store i32 %inc430, i32* %w2, align 4, !dbg !9411
  br label %for.cond230, !dbg !9413, !llvm.loop !9414

for.end431:                                       ; preds = %for.cond230
  %364 = load float, float* %dist2, align 4, !dbg !9416
  %365 = load float, float* %dist1, align 4, !dbg !9417
  %cmp432 = fcmp ole float %364, %365, !dbg !9418
  br i1 %cmp432, label %land.rhs, label %land.end, !dbg !9419

land.rhs:                                         ; preds = %for.end431
  %366 = load i32, i32* %B1, align 4, !dbg !9420
  %367 = load i32, i32* %B0, align 4, !dbg !9421
  %cmp434 = icmp slt i32 %366, %367, !dbg !9422
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end431
  %368 = phi i1 [ false, %for.end431 ], [ %cmp434, %land.rhs ]
  %land.ext = zext i1 %368 to i32, !dbg !9423
  %conv436 = trunc i32 %land.ext to i8, !dbg !9424
  %369 = load i32, i32* %w, align 4, !dbg !9425
  %mul437 = mul nsw i32 %369, 16, !dbg !9426
  %370 = load i32, i32* %g, align 4, !dbg !9427
  %add438 = add nsw i32 %mul437, %370, !dbg !9428
  %idxprom439 = sext i32 %add438 to i64, !dbg !9429
  %371 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !9429
  %ms_mask440 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %371, i32 0, i32 4, !dbg !9430
  %arrayidx441 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask440, i64 0, i64 %idxprom439, !dbg !9429
  store i8 %conv436, i8* %arrayidx441, align 1, !dbg !9431
  %372 = load i32, i32* %w, align 4, !dbg !9432
  %mul442 = mul nsw i32 %372, 16, !dbg !9434
  %373 = load i32, i32* %g, align 4, !dbg !9435
  %add443 = add nsw i32 %mul442, %373, !dbg !9436
  %idxprom444 = sext i32 %add443 to i64, !dbg !9437
  %374 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !9437
  %ms_mask445 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %374, i32 0, i32 4, !dbg !9438
  %arrayidx446 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask445, i64 0, i64 %idxprom444, !dbg !9437
  %375 = load i8, i8* %arrayidx446, align 1, !dbg !9437
  %tobool447 = icmp ne i8 %375, 0, !dbg !9437
  br i1 %tobool447, label %if.then448, label %if.else508, !dbg !9439

if.then448:                                       ; preds = %land.end
  %376 = load i32, i32* %w, align 4, !dbg !9440
  %mul449 = mul nsw i32 %376, 16, !dbg !9443
  %377 = load i32, i32* %g, align 4, !dbg !9444
  %add450 = add nsw i32 %mul449, %377, !dbg !9445
  %idxprom451 = sext i32 %add450 to i64, !dbg !9446
  %378 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9446
  %band_type452 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %378, i32 0, i32 3, !dbg !9447
  %arrayidx453 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type452, i64 0, i64 %idxprom451, !dbg !9446
  %379 = load i32, i32* %arrayidx453, align 4, !dbg !9446
  %cmp454 = icmp ne i32 %379, 13, !dbg !9448
  br i1 %cmp454, label %land.lhs.true456, label %if.else, !dbg !9449

land.lhs.true456:                                 ; preds = %if.then448
  %380 = load i32, i32* %w, align 4, !dbg !9450
  %mul457 = mul nsw i32 %380, 16, !dbg !9452
  %381 = load i32, i32* %g, align 4, !dbg !9453
  %add458 = add nsw i32 %mul457, %381, !dbg !9454
  %idxprom459 = sext i32 %add458 to i64, !dbg !9455
  %382 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9455
  %band_type460 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %382, i32 0, i32 3, !dbg !9456
  %arrayidx461 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type460, i64 0, i64 %idxprom459, !dbg !9455
  %383 = load i32, i32* %arrayidx461, align 4, !dbg !9455
  %cmp462 = icmp ne i32 %383, 13, !dbg !9457
  br i1 %cmp462, label %if.then464, label %if.else, !dbg !9458

if.then464:                                       ; preds = %land.lhs.true456
  %384 = load i32, i32* %mididx, align 4, !dbg !9459
  %385 = load i32, i32* %w, align 4, !dbg !9461
  %mul465 = mul nsw i32 %385, 16, !dbg !9462
  %386 = load i32, i32* %g, align 4, !dbg !9463
  %add466 = add nsw i32 %mul465, %386, !dbg !9464
  %idxprom467 = sext i32 %add466 to i64, !dbg !9465
  %387 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9465
  %sf_idx468 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %387, i32 0, i32 7, !dbg !9466
  %arrayidx469 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx468, i64 0, i64 %idxprom467, !dbg !9465
  store i32 %384, i32* %arrayidx469, align 4, !dbg !9467
  %388 = load i32, i32* %sididx, align 4, !dbg !9468
  %389 = load i32, i32* %w, align 4, !dbg !9469
  %mul470 = mul nsw i32 %389, 16, !dbg !9470
  %390 = load i32, i32* %g, align 4, !dbg !9471
  %add471 = add nsw i32 %mul470, %390, !dbg !9472
  %idxprom472 = sext i32 %add471 to i64, !dbg !9473
  %391 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9473
  %sf_idx473 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %391, i32 0, i32 7, !dbg !9474
  %arrayidx474 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx473, i64 0, i64 %idxprom472, !dbg !9473
  store i32 %388, i32* %arrayidx474, align 4, !dbg !9475
  %392 = load i32, i32* %midcb, align 4, !dbg !9476
  %393 = load i32, i32* %w, align 4, !dbg !9477
  %mul475 = mul nsw i32 %393, 16, !dbg !9478
  %394 = load i32, i32* %g, align 4, !dbg !9479
  %add476 = add nsw i32 %mul475, %394, !dbg !9480
  %idxprom477 = sext i32 %add476 to i64, !dbg !9481
  %395 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9481
  %band_type478 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %395, i32 0, i32 3, !dbg !9482
  %arrayidx479 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type478, i64 0, i64 %idxprom477, !dbg !9481
  store i32 %392, i32* %arrayidx479, align 4, !dbg !9483
  %396 = load i32, i32* %sidcb, align 4, !dbg !9484
  %397 = load i32, i32* %w, align 4, !dbg !9485
  %mul480 = mul nsw i32 %397, 16, !dbg !9486
  %398 = load i32, i32* %g, align 4, !dbg !9487
  %add481 = add nsw i32 %mul480, %398, !dbg !9488
  %idxprom482 = sext i32 %add481 to i64, !dbg !9489
  %399 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9489
  %band_type483 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %399, i32 0, i32 3, !dbg !9490
  %arrayidx484 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type483, i64 0, i64 %idxprom482, !dbg !9489
  store i32 %396, i32* %arrayidx484, align 4, !dbg !9491
  br label %if.end507, !dbg !9492

if.else:                                          ; preds = %land.lhs.true456, %if.then448
  %400 = load i32, i32* %w, align 4, !dbg !9493
  %mul485 = mul nsw i32 %400, 16, !dbg !9496
  %401 = load i32, i32* %g, align 4, !dbg !9497
  %add486 = add nsw i32 %mul485, %401, !dbg !9498
  %idxprom487 = sext i32 %add486 to i64, !dbg !9499
  %402 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9499
  %band_type488 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %402, i32 0, i32 3, !dbg !9500
  %arrayidx489 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type488, i64 0, i64 %idxprom487, !dbg !9499
  %403 = load i32, i32* %arrayidx489, align 4, !dbg !9499
  %cmp490 = icmp ne i32 %403, 13, !dbg !9501
  %conv491 = zext i1 %cmp490 to i32, !dbg !9501
  %404 = load i32, i32* %w, align 4, !dbg !9502
  %mul492 = mul nsw i32 %404, 16, !dbg !9503
  %405 = load i32, i32* %g, align 4, !dbg !9504
  %add493 = add nsw i32 %mul492, %405, !dbg !9505
  %idxprom494 = sext i32 %add493 to i64, !dbg !9506
  %406 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9506
  %band_type495 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %406, i32 0, i32 3, !dbg !9507
  %arrayidx496 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type495, i64 0, i64 %idxprom494, !dbg !9506
  %407 = load i32, i32* %arrayidx496, align 4, !dbg !9506
  %cmp497 = icmp ne i32 %407, 13, !dbg !9508
  %conv498 = zext i1 %cmp497 to i32, !dbg !9508
  %xor = xor i32 %conv491, %conv498, !dbg !9509
  %tobool499 = icmp ne i32 %xor, 0, !dbg !9509
  br i1 %tobool499, label %if.then500, label %if.end506, !dbg !9510

if.then500:                                       ; preds = %if.else
  %408 = load i32, i32* %w, align 4, !dbg !9511
  %mul501 = mul nsw i32 %408, 16, !dbg !9513
  %409 = load i32, i32* %g, align 4, !dbg !9514
  %add502 = add nsw i32 %mul501, %409, !dbg !9515
  %idxprom503 = sext i32 %add502 to i64, !dbg !9516
  %410 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !9516
  %ms_mask504 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %410, i32 0, i32 4, !dbg !9517
  %arrayidx505 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask504, i64 0, i64 %idxprom503, !dbg !9516
  store i8 0, i8* %arrayidx505, align 1, !dbg !9518
  br label %if.end506, !dbg !9519

if.end506:                                        ; preds = %if.then500, %if.else
  br label %if.end507

if.end507:                                        ; preds = %if.end506, %if.then464
  br label %for.end516, !dbg !9520

if.else508:                                       ; preds = %land.end
  %411 = load i32, i32* %B1, align 4, !dbg !9521
  %412 = load i32, i32* %B0, align 4, !dbg !9523
  %cmp509 = icmp sgt i32 %411, %412, !dbg !9524
  br i1 %cmp509, label %if.then511, label %if.end512, !dbg !9525

if.then511:                                       ; preds = %if.else508
  br label %for.end516, !dbg !9526

if.end512:                                        ; preds = %if.else508
  br label %if.end513

if.end513:                                        ; preds = %if.end512
  br label %for.inc514, !dbg !9528

for.inc514:                                       ; preds = %if.end513, %if.then214
  %413 = load i32, i32* %sid_sf_boost, align 4, !dbg !9529
  %inc515 = add nsw i32 %413, 1, !dbg !9529
  store i32 %inc515, i32* %sid_sf_boost, align 4, !dbg !9529
  br label %for.cond155, !dbg !9531, !llvm.loop !9532

for.end516:                                       ; preds = %if.then511, %if.end507, %for.cond155
  br label %if.end517, !dbg !9534

if.end517:                                        ; preds = %for.end516, %land.lhs.true55, %land.lhs.true, %if.end43
  %414 = load i32, i32* %w, align 4, !dbg !9535
  %mul518 = mul nsw i32 %414, 16, !dbg !9537
  %415 = load i32, i32* %g, align 4, !dbg !9538
  %add519 = add nsw i32 %mul518, %415, !dbg !9539
  %idxprom520 = sext i32 %add519 to i64, !dbg !9540
  %416 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9540
  %zeroes521 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %416, i32 0, i32 8, !dbg !9541
  %arrayidx522 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes521, i64 0, i64 %idxprom520, !dbg !9540
  %417 = load i8, i8* %arrayidx522, align 1, !dbg !9540
  %tobool523 = icmp ne i8 %417, 0, !dbg !9540
  br i1 %tobool523, label %if.end538, label %land.lhs.true524, !dbg !9542

land.lhs.true524:                                 ; preds = %if.end517
  %418 = load i32, i32* %w, align 4, !dbg !9543
  %mul525 = mul nsw i32 %418, 16, !dbg !9545
  %419 = load i32, i32* %g, align 4, !dbg !9546
  %add526 = add nsw i32 %mul525, %419, !dbg !9547
  %idxprom527 = sext i32 %add526 to i64, !dbg !9548
  %420 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9548
  %band_type528 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %420, i32 0, i32 3, !dbg !9549
  %arrayidx529 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type528, i64 0, i64 %idxprom527, !dbg !9548
  %421 = load i32, i32* %arrayidx529, align 4, !dbg !9548
  %cmp530 = icmp ult i32 %421, 12, !dbg !9550
  br i1 %cmp530, label %if.then532, label %if.end538, !dbg !9551

if.then532:                                       ; preds = %land.lhs.true524
  %422 = load i32, i32* %w, align 4, !dbg !9552
  %mul533 = mul nsw i32 %422, 16, !dbg !9553
  %423 = load i32, i32* %g, align 4, !dbg !9554
  %add534 = add nsw i32 %mul533, %423, !dbg !9555
  %idxprom535 = sext i32 %add534 to i64, !dbg !9556
  %424 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9556
  %sf_idx536 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %424, i32 0, i32 7, !dbg !9557
  %arrayidx537 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx536, i64 0, i64 %idxprom535, !dbg !9556
  %425 = load i32, i32* %arrayidx537, align 4, !dbg !9556
  store i32 %425, i32* %prev_mid, align 4, !dbg !9558
  br label %if.end538, !dbg !9559

if.end538:                                        ; preds = %if.then532, %land.lhs.true524, %if.end517
  %426 = load i32, i32* %w, align 4, !dbg !9560
  %mul539 = mul nsw i32 %426, 16, !dbg !9562
  %427 = load i32, i32* %g, align 4, !dbg !9563
  %add540 = add nsw i32 %mul539, %427, !dbg !9564
  %idxprom541 = sext i32 %add540 to i64, !dbg !9565
  %428 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9565
  %zeroes542 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %428, i32 0, i32 8, !dbg !9566
  %arrayidx543 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes542, i64 0, i64 %idxprom541, !dbg !9565
  %429 = load i8, i8* %arrayidx543, align 1, !dbg !9565
  %tobool544 = icmp ne i8 %429, 0, !dbg !9565
  br i1 %tobool544, label %if.end566, label %land.lhs.true545, !dbg !9567

land.lhs.true545:                                 ; preds = %if.end538
  %430 = load i32, i32* %w, align 4, !dbg !9568
  %mul546 = mul nsw i32 %430, 16, !dbg !9570
  %431 = load i32, i32* %g, align 4, !dbg !9571
  %add547 = add nsw i32 %mul546, %431, !dbg !9572
  %idxprom548 = sext i32 %add547 to i64, !dbg !9573
  %432 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !9573
  %is_mask549 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %432, i32 0, i32 5, !dbg !9574
  %arrayidx550 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask549, i64 0, i64 %idxprom548, !dbg !9573
  %433 = load i8, i8* %arrayidx550, align 1, !dbg !9573
  %tobool551 = icmp ne i8 %433, 0, !dbg !9573
  br i1 %tobool551, label %if.end566, label %land.lhs.true552, !dbg !9575

land.lhs.true552:                                 ; preds = %land.lhs.true545
  %434 = load i32, i32* %w, align 4, !dbg !9576
  %mul553 = mul nsw i32 %434, 16, !dbg !9578
  %435 = load i32, i32* %g, align 4, !dbg !9579
  %add554 = add nsw i32 %mul553, %435, !dbg !9580
  %idxprom555 = sext i32 %add554 to i64, !dbg !9581
  %436 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9581
  %band_type556 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %436, i32 0, i32 3, !dbg !9582
  %arrayidx557 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type556, i64 0, i64 %idxprom555, !dbg !9581
  %437 = load i32, i32* %arrayidx557, align 4, !dbg !9581
  %cmp558 = icmp ult i32 %437, 12, !dbg !9583
  br i1 %cmp558, label %if.then560, label %if.end566, !dbg !9584

if.then560:                                       ; preds = %land.lhs.true552
  %438 = load i32, i32* %w, align 4, !dbg !9585
  %mul561 = mul nsw i32 %438, 16, !dbg !9586
  %439 = load i32, i32* %g, align 4, !dbg !9587
  %add562 = add nsw i32 %mul561, %439, !dbg !9588
  %idxprom563 = sext i32 %add562 to i64, !dbg !9589
  %440 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !9589
  %sf_idx564 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %440, i32 0, i32 7, !dbg !9590
  %arrayidx565 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx564, i64 0, i64 %idxprom563, !dbg !9589
  %441 = load i32, i32* %arrayidx565, align 4, !dbg !9589
  store i32 %441, i32* %prev_side, align 4, !dbg !9591
  br label %if.end566, !dbg !9592

if.end566:                                        ; preds = %if.then560, %land.lhs.true552, %land.lhs.true545, %if.end538
  %442 = load i32, i32* %g, align 4, !dbg !9593
  %idxprom567 = sext i32 %442 to i64, !dbg !9594
  %443 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9594
  %ics568 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %443, i32 0, i32 0, !dbg !9595
  %swb_sizes569 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics568, i32 0, i32 7, !dbg !9596
  %444 = load i8*, i8** %swb_sizes569, align 8, !dbg !9596
  %arrayidx570 = getelementptr inbounds i8, i8* %444, i64 %idxprom567, !dbg !9594
  %445 = load i8, i8* %arrayidx570, align 1, !dbg !9594
  %conv571 = zext i8 %445 to i32, !dbg !9594
  %446 = load i32, i32* %start, align 4, !dbg !9597
  %add572 = add nsw i32 %446, %conv571, !dbg !9597
  store i32 %add572, i32* %start, align 4, !dbg !9597
  br label %for.inc573, !dbg !9598

for.inc573:                                       ; preds = %if.end566
  %447 = load i32, i32* %g, align 4, !dbg !9599
  %inc574 = add nsw i32 %447, 1, !dbg !9599
  store i32 %inc574, i32* %g, align 4, !dbg !9599
  br label %for.cond26, !dbg !9601, !llvm.loop !9602

for.end575:                                       ; preds = %for.cond26
  br label %for.inc576, !dbg !9604

for.inc576:                                       ; preds = %for.end575
  %448 = load i32, i32* %w, align 4, !dbg !9605
  %idxprom577 = sext i32 %448 to i64, !dbg !9607
  %449 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !9607
  %ics578 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %449, i32 0, i32 0, !dbg !9608
  %group_len579 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics578, i32 0, i32 4, !dbg !9609
  %arrayidx580 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len579, i64 0, i64 %idxprom577, !dbg !9607
  %450 = load i8, i8* %arrayidx580, align 1, !dbg !9607
  %conv581 = zext i8 %450 to i32, !dbg !9607
  %451 = load i32, i32* %w, align 4, !dbg !9610
  %add582 = add nsw i32 %451, %conv581, !dbg !9610
  store i32 %add582, i32* %w, align 4, !dbg !9610
  br label %for.cond, !dbg !9611, !llvm.loop !9612

for.end583:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !9614
}

declare void @ff_aac_search_for_is(%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*) #2

declare void @ff_aac_search_for_pred(%struct.AACEncContext*, %struct.SingleChannelElement*) #2

; Function Attrs: nounwind uwtable
define internal void @search_for_quantizers_twoloop(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, float %lambda) #0 !dbg !9615 {
entry:
  %retval.i3584 = alloca i32, align 4
  %a.addr.i3585 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3585, metadata !2767, metadata !2772), !dbg !9617
  %amin.addr.i3586 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3586, metadata !2777, metadata !2772), !dbg !9628
  %amax.addr.i3587 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3587, metadata !2779, metadata !2772), !dbg !9629
  %retval.i3573 = alloca i32, align 4
  %a.addr.i3574 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3574, metadata !2767, metadata !2772), !dbg !9630
  %amin.addr.i3575 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3575, metadata !2777, metadata !2772), !dbg !9632
  %amax.addr.i3576 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3576, metadata !2779, metadata !2772), !dbg !9633
  %retval.i3562 = alloca i32, align 4
  %a.addr.i3563 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3563, metadata !2767, metadata !2772), !dbg !9634
  %amin.addr.i3564 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3564, metadata !2777, metadata !2772), !dbg !9644
  %amax.addr.i3565 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3565, metadata !2779, metadata !2772), !dbg !9645
  %retval.i3551 = alloca i32, align 4
  %a.addr.i3552 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3552, metadata !2767, metadata !2772), !dbg !9646
  %amin.addr.i3553 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3553, metadata !2777, metadata !2772), !dbg !9661
  %amax.addr.i3554 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3554, metadata !2779, metadata !2772), !dbg !9662
  %retval.i3540 = alloca i32, align 4
  %a.addr.i3541 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3541, metadata !2767, metadata !2772), !dbg !9663
  %amin.addr.i3542 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3542, metadata !2777, metadata !2772), !dbg !9674
  %amax.addr.i3543 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3543, metadata !2779, metadata !2772), !dbg !9675
  %a.addr.i3537 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i3537, metadata !4846, metadata !2772), !dbg !9676
  %amin.addr.i3538 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i3538, metadata !4853, metadata !2772), !dbg !9686
  %amax.addr.i3539 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i3539, metadata !4855, metadata !2772), !dbg !9687
  %a.addr.i3534 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i3534, metadata !4846, metadata !2772), !dbg !9688
  %amin.addr.i3535 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i3535, metadata !4853, metadata !2772), !dbg !9690
  %amax.addr.i3536 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i3536, metadata !4855, metadata !2772), !dbg !9691
  %a.addr.i3531 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i3531, metadata !4846, metadata !2772), !dbg !9692
  %amin.addr.i3532 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i3532, metadata !4853, metadata !2772), !dbg !9694
  %amax.addr.i3533 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i3533, metadata !4855, metadata !2772), !dbg !9695
  %retval.i3520 = alloca i32, align 4
  %a.addr.i3521 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3521, metadata !2767, metadata !2772), !dbg !9696
  %amin.addr.i3522 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3522, metadata !2777, metadata !2772), !dbg !9703
  %amax.addr.i3523 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3523, metadata !2779, metadata !2772), !dbg !9704
  %retval.i3509 = alloca i32, align 4
  %a.addr.i3510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3510, metadata !2767, metadata !2772), !dbg !9705
  %amin.addr.i3511 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3511, metadata !2777, metadata !2772), !dbg !9707
  %amax.addr.i3512 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3512, metadata !2779, metadata !2772), !dbg !9708
  %retval.i = alloca i32, align 4
  %a.addr.i3506 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i3506, metadata !2767, metadata !2772), !dbg !9709
  %amin.addr.i3507 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i3507, metadata !2777, metadata !2772), !dbg !9717
  %amax.addr.i3508 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i3508, metadata !2779, metadata !2772), !dbg !9718
  %a.addr.i3503 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i3503, metadata !4846, metadata !2772), !dbg !9719
  %amin.addr.i3504 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i3504, metadata !4853, metadata !2772), !dbg !9724
  %amax.addr.i3505 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i3505, metadata !4855, metadata !2772), !dbg !9725
  %a.addr.i3500 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i3500, metadata !4846, metadata !2772), !dbg !9726
  %amin.addr.i3501 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i3501, metadata !4853, metadata !2772), !dbg !9729
  %amax.addr.i3502 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i3502, metadata !4855, metadata !2772), !dbg !9730
  %a.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i, metadata !4846, metadata !2772), !dbg !9731
  %amin.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i, metadata !4853, metadata !2772), !dbg !9733
  %amax.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i, metadata !4855, metadata !2772), !dbg !9734
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %lambda.addr = alloca float, align 4
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %recomprd = alloca i32, align 4
  %destbits = alloca i32, align 4
  %refbits = alloca i32, align 4
  %toomanybits = alloca i32, align 4
  %toofewbits = alloca i32, align 4
  %nzs = alloca [128 x i8], align 16
  %nextband = alloca [128 x i8], align 16
  %maxsf = alloca [128 x i32], align 16
  %minsf = alloca [128 x i32], align 16
  %dists = alloca [128 x float], align 16
  %qenergies = alloca [128 x float], align 16
  %uplims = alloca [128 x float], align 16
  %euplims = alloca [128 x float], align 16
  %energies = alloca [128 x float], align 16
  %maxvals = alloca [128 x float], align 16
  %spread_thr_r = alloca [128 x float], align 16
  %min_spread_thr_r = alloca float, align 4
  %max_spread_thr_r = alloca float, align 4
  %rdlambda = alloca float, align 4
  %nzslope = alloca float, align 4
  %rdmin = alloca float, align 4
  %rdmax = alloca float, align 4
  %sfoffs = alloca float, align 4
  %fflag = alloca i32, align 4
  %minscaler = alloca i32, align 4
  %maxscaler = alloca i32, align 4
  %nminscaler = alloca i32, align 4
  %its = alloca i32, align 4
  %maxits = alloca i32, align 4
  %allz = alloca i32, align 4
  %tbits = alloca i32, align 4
  %cutoff = alloca i32, align 4
  %pns_start_pos = alloca i32, align 4
  %prev = alloca i32, align 4
  %zeroscale = alloca float, align 4
  %wlen = alloca i32, align 4
  %bandwidth = alloca i32, align 4
  %rate_bandwidth_multiplier = alloca float, align 4
  %frame_bit_rate = alloca i32, align 4
  %nz = alloca i32, align 4
  %uplim = alloca float, align 4
  %energy = alloca float, align 4
  %spread = alloca float, align 4
  %band = alloca %struct.FFPsyBand*, align 8
  %band1102 = alloca %struct.FFPsyBand*, align 8
  %scaled = alloca float*, align 8
  %minsfidx = alloca i32, align 4
  %de_psy_factor = alloca float, align 4
  %cleanup_factor = alloca float, align 4
  %energy2uplim = alloca float, align 4
  %overdist = alloca i32, align 4
  %qstep = alloca i32, align 4
  %changed = alloca i32, align 4
  %coefs = alloca float*, align 8
  %scaled1677 = alloca float*, align 8
  %bits = alloca i32, align 4
  %cb = alloca i32, align 4
  %dist = alloca float, align 4
  %qenergy = alloca float, align 4
  %b = alloca i32, align 4
  %sqenergy = alloca float, align 4
  %sfdiff = alloca i32, align 4
  %maxsf_i = alloca i32, align 4
  %new_sf = alloca i32, align 4
  %new_sf1869 = alloca i32, align 4
  %coefs1957 = alloca float*, align 8
  %scaled1962 = alloca float*, align 8
  %bits1967 = alloca i32, align 4
  %cb1968 = alloca i32, align 4
  %dist1969 = alloca float, align 4
  %qenergy1970 = alloca float, align 4
  %b2023 = alloca i32, align 4
  %sqenergy2024 = alloca float, align 4
  %sfdiff2062 = alloca i32, align 4
  %maxoverdist = alloca float, align 4
  %ovrfactor = alloca float, align 4
  %ovrdist = alloca float, align 4
  %minspread = alloca float, align 4
  %maxspread = alloca float, align 4
  %zspread = alloca float, align 4
  %zeroable = alloca i32, align 4
  %zeroed = alloca i32, align 4
  %maxzeroed = alloca i32, align 4
  %zloop = alloca i32, align 4
  %loopovrfactor = alloca float, align 4
  %loopminsf = alloca i32, align 4
  %mcb = alloca i32, align 4
  %depth = alloca i32, align 4
  %edepth = alloca i32, align 4
  %uplmax = alloca float, align 4
  %prevsc = alloca i32, align 4
  %coefs2680 = alloca float*, align 8
  %scaled2685 = alloca float*, align 8
  %cmb = alloca i32, align 4
  %mindeltasf = alloca i32, align 4
  %maxdeltasf = alloca i32, align 4
  %cb2764 = alloca i32, align 4
  %bits2765 = alloca i32, align 4
  %dist2766 = alloca float, align 4
  %qenergy2767 = alloca float, align 4
  %mb = alloca i32, align 4
  %b2894 = alloca i32, align 4
  %sqenergy2895 = alloca float, align 4
  %cb3084 = alloca i32, align 4
  %bits3085 = alloca i32, align 4
  %dist3086 = alloca float, align 4
  %qenergy3087 = alloca float, align 4
  %b3111 = alloca i32, align 4
  %sqenergy3112 = alloca float, align 4
  %prevsf = alloca i32, align 4
  %sfdiff3461 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !9735, metadata !2772), !dbg !9736
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !9737, metadata !2772), !dbg !9738
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !9739, metadata !2772), !dbg !9740
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !9741, metadata !2772), !dbg !9742
  call void @llvm.dbg.declare(metadata i32* %start, metadata !9743, metadata !2772), !dbg !9744
  store i32 0, i32* %start, align 4, !dbg !9744
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9745, metadata !2772), !dbg !9746
  call void @llvm.dbg.declare(metadata i32* %w, metadata !9747, metadata !2772), !dbg !9748
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !9749, metadata !2772), !dbg !9750
  call void @llvm.dbg.declare(metadata i32* %g, metadata !9751, metadata !2772), !dbg !9752
  call void @llvm.dbg.declare(metadata i32* %recomprd, metadata !9753, metadata !2772), !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %destbits, metadata !9755, metadata !2772), !dbg !9756
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9757
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 9, !dbg !9758
  %1 = load i64, i64* %bit_rate, align 8, !dbg !9758
  %conv = sitofp i64 %1 to double, !dbg !9757
  %mul = fmul double %conv, 1.024000e+03, !dbg !9759
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9760
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 82, !dbg !9761
  %3 = load i32, i32* %sample_rate, align 8, !dbg !9761
  %conv1 = sitofp i32 %3 to double, !dbg !9760
  %div = fdiv double %mul, %conv1, !dbg !9762
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9763
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 13, !dbg !9764
  %5 = load i32, i32* %flags, align 4, !dbg !9764
  %and = and i32 %5, 2, !dbg !9765
  %tobool = icmp ne i32 %and, 0, !dbg !9765
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9766

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9767

cond.false:                                       ; preds = %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9768
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 83, !dbg !9770
  %7 = load i32, i32* %channels, align 4, !dbg !9770
  %conv2 = sitofp i32 %7 to float, !dbg !9768
  br label %cond.end, !dbg !9771

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 2.000000e+00, %cond.true ], [ %conv2, %cond.false ], !dbg !9772
  %conv3 = fpext float %cond to double, !dbg !9774
  %div4 = fdiv double %div, %conv3, !dbg !9775
  %8 = load float, float* %lambda.addr, align 4, !dbg !9776
  %div5 = fdiv float %8, 1.200000e+02, !dbg !9777
  %conv6 = fpext float %div5 to double, !dbg !9778
  %mul7 = fmul double %div4, %conv6, !dbg !9779
  %conv8 = fptosi double %mul7 to i32, !dbg !9780
  store i32 %conv8, i32* %destbits, align 4, !dbg !9781
  call void @llvm.dbg.declare(metadata i32* %refbits, metadata !9782, metadata !2772), !dbg !9783
  %9 = load i32, i32* %destbits, align 4, !dbg !9784
  store i32 %9, i32* %refbits, align 4, !dbg !9783
  call void @llvm.dbg.declare(metadata i32* %toomanybits, metadata !9785, metadata !2772), !dbg !9786
  call void @llvm.dbg.declare(metadata i32* %toofewbits, metadata !9787, metadata !2772), !dbg !9788
  call void @llvm.dbg.declare(metadata [128 x i8]* %nzs, metadata !9789, metadata !2772), !dbg !9791
  call void @llvm.dbg.declare(metadata [128 x i8]* %nextband, metadata !9792, metadata !2772), !dbg !9793
  call void @llvm.dbg.declare(metadata [128 x i32]* %maxsf, metadata !9794, metadata !2772), !dbg !9795
  call void @llvm.dbg.declare(metadata [128 x i32]* %minsf, metadata !9796, metadata !2772), !dbg !9797
  call void @llvm.dbg.declare(metadata [128 x float]* %dists, metadata !9798, metadata !2772), !dbg !9799
  %10 = bitcast [128 x float]* %dists to i8*, !dbg !9799
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 512, i32 16, i1 false), !dbg !9799
  call void @llvm.dbg.declare(metadata [128 x float]* %qenergies, metadata !9800, metadata !2772), !dbg !9801
  %11 = bitcast [128 x float]* %qenergies to i8*, !dbg !9801
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 512, i32 16, i1 false), !dbg !9802
  call void @llvm.dbg.declare(metadata [128 x float]* %uplims, metadata !9803, metadata !2772), !dbg !9804
  call void @llvm.dbg.declare(metadata [128 x float]* %euplims, metadata !9805, metadata !2772), !dbg !9806
  call void @llvm.dbg.declare(metadata [128 x float]* %energies, metadata !9807, metadata !2772), !dbg !9808
  call void @llvm.dbg.declare(metadata [128 x float]* %maxvals, metadata !9809, metadata !2772), !dbg !9810
  call void @llvm.dbg.declare(metadata [128 x float]* %spread_thr_r, metadata !9811, metadata !2772), !dbg !9812
  call void @llvm.dbg.declare(metadata float* %min_spread_thr_r, metadata !9813, metadata !2772), !dbg !9814
  call void @llvm.dbg.declare(metadata float* %max_spread_thr_r, metadata !9815, metadata !2772), !dbg !9816
  call void @llvm.dbg.declare(metadata float* %rdlambda, metadata !9817, metadata !2772), !dbg !9818
  %12 = load float, float* %lambda.addr, align 4, !dbg !9819
  %div9 = fdiv float 2.400000e+02, %12, !dbg !9820
  store float %div9, float* %a.addr.i, align 4, !dbg !9821
  store float 6.250000e-02, float* %amin.addr.i, align 4, !dbg !9821
  store float 1.600000e+01, float* %amax.addr.i, align 4, !dbg !9821
  %13 = load float, float* %a.addr.i, align 4, !dbg !9822
  %14 = load float, float* %amin.addr.i, align 4, !dbg !9823
  %15 = load float, float* %amax.addr.i, align 4, !dbg !9824
  %16 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %14, float %15, float %13) #10, !dbg !9822, !srcloc !4962
  store float %16, float* %a.addr.i, align 4, !dbg !9822
  %17 = load float, float* %a.addr.i, align 4, !dbg !9825
  store float %17, float* %rdlambda, align 4, !dbg !9818
  call void @llvm.dbg.declare(metadata float* %nzslope, metadata !9826, metadata !2772), !dbg !9827
  store float 1.500000e+00, float* %nzslope, align 4, !dbg !9827
  call void @llvm.dbg.declare(metadata float* %rdmin, metadata !9828, metadata !2772), !dbg !9829
  store float 3.125000e-02, float* %rdmin, align 4, !dbg !9829
  call void @llvm.dbg.declare(metadata float* %rdmax, metadata !9830, metadata !2772), !dbg !9831
  store float 1.000000e+00, float* %rdmax, align 4, !dbg !9831
  call void @llvm.dbg.declare(metadata float* %sfoffs, metadata !9832, metadata !2772), !dbg !9833
  %18 = load float, float* %lambda.addr, align 4, !dbg !9834
  %div10 = fdiv float 1.200000e+02, %18, !dbg !9835
  %call11 = call float @log2f(float %div10) #9, !dbg !9836
  %mul12 = fmul float %call11, 4.000000e+00, !dbg !9837
  store float %mul12, float* %a.addr.i3500, align 4, !dbg !9838
  store float -5.000000e+00, float* %amin.addr.i3501, align 4, !dbg !9838
  store float 1.000000e+01, float* %amax.addr.i3502, align 4, !dbg !9838
  %19 = load float, float* %a.addr.i3500, align 4, !dbg !9839
  %20 = load float, float* %amin.addr.i3501, align 4, !dbg !9840
  %21 = load float, float* %amax.addr.i3502, align 4, !dbg !9841
  %22 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %20, float %21, float %19) #10, !dbg !9839, !srcloc !4962
  store float %22, float* %a.addr.i3500, align 4, !dbg !9839
  %23 = load float, float* %a.addr.i3500, align 4, !dbg !9842
  store float %23, float* %sfoffs, align 4, !dbg !9833
  call void @llvm.dbg.declare(metadata i32* %fflag, metadata !9843, metadata !2772), !dbg !9844
  call void @llvm.dbg.declare(metadata i32* %minscaler, metadata !9845, metadata !2772), !dbg !9846
  call void @llvm.dbg.declare(metadata i32* %maxscaler, metadata !9847, metadata !2772), !dbg !9848
  call void @llvm.dbg.declare(metadata i32* %nminscaler, metadata !9849, metadata !2772), !dbg !9850
  call void @llvm.dbg.declare(metadata i32* %its, metadata !9851, metadata !2772), !dbg !9852
  store i32 0, i32* %its, align 4, !dbg !9852
  call void @llvm.dbg.declare(metadata i32* %maxits, metadata !9853, metadata !2772), !dbg !9854
  store i32 30, i32* %maxits, align 4, !dbg !9854
  call void @llvm.dbg.declare(metadata i32* %allz, metadata !9855, metadata !2772), !dbg !9856
  store i32 0, i32* %allz, align 4, !dbg !9856
  call void @llvm.dbg.declare(metadata i32* %tbits, metadata !9857, metadata !2772), !dbg !9858
  call void @llvm.dbg.declare(metadata i32* %cutoff, metadata !9859, metadata !2772), !dbg !9860
  store i32 1024, i32* %cutoff, align 4, !dbg !9860
  call void @llvm.dbg.declare(metadata i32* %pns_start_pos, metadata !9861, metadata !2772), !dbg !9862
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !9863, metadata !2772), !dbg !9864
  call void @llvm.dbg.declare(metadata float* %zeroscale, metadata !9865, metadata !2772), !dbg !9866
  %24 = load float, float* %lambda.addr, align 4, !dbg !9867
  %cmp = fcmp ogt float %24, 1.200000e+02, !dbg !9868
  br i1 %cmp, label %if.then, label %if.else, !dbg !9869

if.then:                                          ; preds = %cond.end
  %25 = load float, float* %lambda.addr, align 4, !dbg !9870
  %div15 = fdiv float 1.200000e+02, %25, !dbg !9871
  %call16 = call float @powf(float %div15, float 2.500000e-01) #9, !dbg !9872
  store float %call16, float* %a.addr.i3503, align 4, !dbg !9873
  store float 6.250000e-02, float* %amin.addr.i3504, align 4, !dbg !9873
  store float 1.000000e+00, float* %amax.addr.i3505, align 4, !dbg !9873
  %26 = load float, float* %a.addr.i3503, align 4, !dbg !9874
  %27 = load float, float* %amin.addr.i3504, align 4, !dbg !9875
  %28 = load float, float* %amax.addr.i3505, align 4, !dbg !9876
  %29 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %27, float %28, float %26) #10, !dbg !9874, !srcloc !4962
  store float %29, float* %a.addr.i3503, align 4, !dbg !9874
  %30 = load float, float* %a.addr.i3503, align 4, !dbg !9877
  store float %30, float* %zeroscale, align 4, !dbg !9878
  br label %if.end, !dbg !9879

if.else:                                          ; preds = %cond.end
  store float 1.000000e+00, float* %zeroscale, align 4, !dbg !9880
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9882
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %31, i32 0, i32 17, !dbg !9884
  %bitres = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 9, !dbg !9885
  %alloc = getelementptr inbounds %struct.anon, %struct.anon* %bitres, i32 0, i32 2, !dbg !9886
  %32 = load i32, i32* %alloc, align 4, !dbg !9886
  %cmp18 = icmp sge i32 %32, 0, !dbg !9887
  br i1 %cmp18, label %if.then20, label %if.end35, !dbg !9888

if.then20:                                        ; preds = %if.end
  %33 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9889
  %psy21 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %33, i32 0, i32 17, !dbg !9891
  %bitres22 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy21, i32 0, i32 9, !dbg !9892
  %alloc23 = getelementptr inbounds %struct.anon, %struct.anon* %bitres22, i32 0, i32 2, !dbg !9893
  %34 = load i32, i32* %alloc23, align 4, !dbg !9893
  %conv24 = sitofp i32 %34 to float, !dbg !9889
  %35 = load float, float* %lambda.addr, align 4, !dbg !9894
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9895
  %global_quality = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %36, i32 0, i32 11, !dbg !9896
  %37 = load i32, i32* %global_quality, align 4, !dbg !9896
  %tobool25 = icmp ne i32 %37, 0, !dbg !9895
  br i1 %tobool25, label %cond.true26, label %cond.false28, !dbg !9895

cond.true26:                                      ; preds = %if.then20
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9897
  %global_quality27 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 11, !dbg !9899
  %39 = load i32, i32* %global_quality27, align 4, !dbg !9899
  br label %cond.end29, !dbg !9900

cond.false28:                                     ; preds = %if.then20
  br label %cond.end29, !dbg !9901

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi i32 [ %39, %cond.true26 ], [ 120, %cond.false28 ], !dbg !9903
  %conv31 = sitofp i32 %cond30 to float, !dbg !9905
  %div32 = fdiv float %35, %conv31, !dbg !9906
  %mul33 = fmul float %conv24, %div32, !dbg !9907
  %conv34 = fptosi float %mul33 to i32, !dbg !9908
  store i32 %conv34, i32* %destbits, align 4, !dbg !9909
  br label %if.end35, !dbg !9910

if.end35:                                         ; preds = %cond.end29, %if.end
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9911
  %flags36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 13, !dbg !9913
  %41 = load i32, i32* %flags36, align 4, !dbg !9913
  %and37 = and i32 %41, 2, !dbg !9914
  %tobool38 = icmp ne i32 %and37, 0, !dbg !9914
  br i1 %tobool38, label %if.then39, label %if.else50, !dbg !9915

if.then39:                                        ; preds = %if.end35
  %42 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9916
  %options = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %42, i32 0, i32 1, !dbg !9919
  %mid_side = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options, i32 0, i32 6, !dbg !9920
  %43 = load i32, i32* %mid_side, align 8, !dbg !9920
  %tobool40 = icmp ne i32 %43, 0, !dbg !9916
  br i1 %tobool40, label %land.lhs.true, label %if.end45, !dbg !9921

land.lhs.true:                                    ; preds = %if.then39
  %44 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9922
  %cur_type = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %44, i32 0, i32 26, !dbg !9924
  %45 = load i32, i32* %cur_type, align 8, !dbg !9924
  %cmp41 = icmp eq i32 %45, 1, !dbg !9925
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !9926

if.then43:                                        ; preds = %land.lhs.true
  %46 = load i32, i32* %destbits, align 4, !dbg !9927
  %mul44 = mul nsw i32 %46, 2, !dbg !9927
  store i32 %mul44, i32* %destbits, align 4, !dbg !9927
  br label %if.end45, !dbg !9928

if.end45:                                         ; preds = %if.then43, %land.lhs.true, %if.then39
  store i32 5800, i32* %toomanybits, align 4, !dbg !9929
  %47 = load i32, i32* %destbits, align 4, !dbg !9930
  %div46 = sdiv i32 %47, 16, !dbg !9931
  store i32 %div46, i32* %toofewbits, align 4, !dbg !9932
  %48 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !9933
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %48, i32 0, i32 0, !dbg !9934
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !9935
  %49 = load i32, i32* %num_windows, align 4, !dbg !9935
  %sub = sub nsw i32 %49, 1, !dbg !9936
  %conv47 = sitofp i32 %sub to float, !dbg !9933
  store float %conv47, float* %sfoffs, align 4, !dbg !9937
  %50 = load float, float* %rdlambda, align 4, !dbg !9938
  %call48 = call float @sqrtf(float %50) #9, !dbg !9939
  store float %call48, float* %rdlambda, align 4, !dbg !9940
  %51 = load i32, i32* %maxits, align 4, !dbg !9941
  %mul49 = mul nsw i32 %51, 2, !dbg !9941
  store i32 %mul49, i32* %maxits, align 4, !dbg !9941
  br label %if.end55, !dbg !9942

if.else50:                                        ; preds = %if.end35
  %52 = load i32, i32* %destbits, align 4, !dbg !9943
  %53 = load i32, i32* %destbits, align 4, !dbg !9945
  %div51 = sdiv i32 %53, 8, !dbg !9946
  %add = add nsw i32 %52, %div51, !dbg !9947
  store i32 %add, i32* %toomanybits, align 4, !dbg !9948
  %54 = load i32, i32* %destbits, align 4, !dbg !9949
  %55 = load i32, i32* %destbits, align 4, !dbg !9950
  %div52 = sdiv i32 %55, 8, !dbg !9951
  %sub53 = sub nsw i32 %54, %div52, !dbg !9952
  store i32 %sub53, i32* %toofewbits, align 4, !dbg !9953
  store float 0.000000e+00, float* %sfoffs, align 4, !dbg !9954
  %56 = load float, float* %rdlambda, align 4, !dbg !9955
  %call54 = call float @sqrtf(float %56) #9, !dbg !9956
  store float %call54, float* %rdlambda, align 4, !dbg !9957
  br label %if.end55

if.end55:                                         ; preds = %if.else50, %if.end45
  call void @llvm.dbg.declare(metadata i32* %wlen, metadata !9958, metadata !2772), !dbg !9960
  %57 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !9961
  %ics56 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %57, i32 0, i32 0, !dbg !9962
  %num_windows57 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics56, i32 0, i32 9, !dbg !9963
  %58 = load i32, i32* %num_windows57, align 4, !dbg !9963
  %div58 = sdiv i32 1024, %58, !dbg !9964
  store i32 %div58, i32* %wlen, align 4, !dbg !9960
  call void @llvm.dbg.declare(metadata i32* %bandwidth, metadata !9965, metadata !2772), !dbg !9966
  call void @llvm.dbg.declare(metadata float* %rate_bandwidth_multiplier, metadata !9967, metadata !2772), !dbg !9968
  store float 1.500000e+00, float* %rate_bandwidth_multiplier, align 4, !dbg !9968
  call void @llvm.dbg.declare(metadata i32* %frame_bit_rate, metadata !9969, metadata !2772), !dbg !9970
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9971
  %flags59 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 13, !dbg !9972
  %60 = load i32, i32* %flags59, align 4, !dbg !9972
  %and60 = and i32 %60, 2, !dbg !9973
  %tobool61 = icmp ne i32 %and60, 0, !dbg !9973
  br i1 %tobool61, label %cond.true62, label %cond.false69, !dbg !9974

cond.true62:                                      ; preds = %if.end55
  %61 = load i32, i32* %refbits, align 4, !dbg !9975
  %conv63 = sitofp i32 %61 to float, !dbg !9975
  %62 = load float, float* %rate_bandwidth_multiplier, align 4, !dbg !9976
  %mul64 = fmul float %conv63, %62, !dbg !9977
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9978
  %sample_rate65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 82, !dbg !9979
  %64 = load i32, i32* %sample_rate65, align 8, !dbg !9979
  %conv66 = sitofp i32 %64 to float, !dbg !9978
  %mul67 = fmul float %mul64, %conv66, !dbg !9980
  %div68 = fdiv float %mul67, 1.024000e+03, !dbg !9981
  br label %cond.end75, !dbg !9982

cond.false69:                                     ; preds = %if.end55
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9984
  %bit_rate70 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 9, !dbg !9985
  %66 = load i64, i64* %bit_rate70, align 8, !dbg !9985
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9986
  %channels71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 83, !dbg !9987
  %68 = load i32, i32* %channels71, align 4, !dbg !9987
  %conv72 = sext i32 %68 to i64, !dbg !9986
  %div73 = sdiv i64 %66, %conv72, !dbg !9988
  %conv74 = sitofp i64 %div73 to float, !dbg !9989
  br label %cond.end75, !dbg !9990

cond.end75:                                       ; preds = %cond.false69, %cond.true62
  %cond76 = phi float [ %div68, %cond.true62 ], [ %conv74, %cond.false69 ], !dbg !9992
  %conv77 = fptosi float %cond76 to i32, !dbg !9992
  store i32 %conv77, i32* %frame_bit_rate, align 4, !dbg !9994
  %69 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !9995
  %options78 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %69, i32 0, i32 1, !dbg !9997
  %pns = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options78, i32 0, i32 1, !dbg !9998
  %70 = load i32, i32* %pns, align 4, !dbg !9998
  %tobool79 = icmp ne i32 %70, 0, !dbg !9995
  br i1 %tobool79, label %if.then82, label %lor.lhs.false, !dbg !9999

lor.lhs.false:                                    ; preds = %cond.end75
  %71 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !10000
  %options80 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %71, i32 0, i32 1, !dbg !10002
  %intensity_stereo = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options80, i32 0, i32 7, !dbg !10003
  %72 = load i32, i32* %intensity_stereo, align 4, !dbg !10003
  %tobool81 = icmp ne i32 %72, 0, !dbg !10000
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !10004

if.then82:                                        ; preds = %lor.lhs.false, %cond.end75
  %73 = load i32, i32* %frame_bit_rate, align 4, !dbg !10005
  %conv83 = sitofp i32 %73 to float, !dbg !10005
  %mul84 = fmul float %conv83, 0x3FF2666660000000, !dbg !10005
  %conv85 = fptosi float %mul84 to i32, !dbg !10005
  store i32 %conv85, i32* %frame_bit_rate, align 4, !dbg !10005
  br label %if.end86, !dbg !10006

if.end86:                                         ; preds = %if.then82, %lor.lhs.false
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10007
  %cutoff87 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 88, !dbg !10009
  %75 = load i32, i32* %cutoff87, align 8, !dbg !10009
  %cmp88 = icmp sgt i32 %75, 0, !dbg !10010
  br i1 %cmp88, label %if.then90, label %if.else92, !dbg !10011

if.then90:                                        ; preds = %if.end86
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10012
  %cutoff91 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 88, !dbg !10014
  %77 = load i32, i32* %cutoff91, align 8, !dbg !10014
  store i32 %77, i32* %bandwidth, align 4, !dbg !10015
  br label %if.end1023, !dbg !10016

if.else92:                                        ; preds = %if.end86
  %78 = load i32, i32* %frame_bit_rate, align 4, !dbg !10017
  %tobool93 = icmp ne i32 %78, 0, !dbg !10017
  br i1 %tobool93, label %cond.true94, label %cond.false549, !dbg !10017

cond.true94:                                      ; preds = %if.else92
  %79 = load i32, i32* %frame_bit_rate, align 4, !dbg !10019
  %div95 = sdiv i32 %79, 1, !dbg !10021
  %div96 = sdiv i32 %div95, 5, !dbg !10022
  %80 = load i32, i32* %frame_bit_rate, align 4, !dbg !10023
  %div97 = sdiv i32 %80, 1, !dbg !10024
  %mul98 = mul nsw i32 %div97, 15, !dbg !10025
  %div99 = sdiv i32 %mul98, 32, !dbg !10026
  %sub100 = sub nsw i32 %div99, 5500, !dbg !10027
  %cmp101 = icmp sgt i32 %div96, %sub100, !dbg !10028
  br i1 %cmp101, label %cond.true103, label %cond.false106, !dbg !10029

cond.true103:                                     ; preds = %cond.true94
  %81 = load i32, i32* %frame_bit_rate, align 4, !dbg !10030
  %div104 = sdiv i32 %81, 1, !dbg !10032
  %div105 = sdiv i32 %div104, 5, !dbg !10033
  br label %cond.end111, !dbg !10034

cond.false106:                                    ; preds = %cond.true94
  %82 = load i32, i32* %frame_bit_rate, align 4, !dbg !10035
  %div107 = sdiv i32 %82, 1, !dbg !10037
  %mul108 = mul nsw i32 %div107, 15, !dbg !10038
  %div109 = sdiv i32 %mul108, 32, !dbg !10039
  %sub110 = sub nsw i32 %div109, 5500, !dbg !10040
  br label %cond.end111, !dbg !10041

cond.end111:                                      ; preds = %cond.false106, %cond.true103
  %cond112 = phi i32 [ %div105, %cond.true103 ], [ %sub110, %cond.false106 ], !dbg !10042
  %83 = load i32, i32* %frame_bit_rate, align 4, !dbg !10044
  %div113 = sdiv i32 %83, 1, !dbg !10045
  %div114 = sdiv i32 %div113, 4, !dbg !10046
  %add115 = add nsw i32 3000, %div114, !dbg !10047
  %cmp116 = icmp sgt i32 %cond112, %add115, !dbg !10048
  br i1 %cmp116, label %cond.true118, label %cond.false122, !dbg !10049

cond.true118:                                     ; preds = %cond.end111
  %84 = load i32, i32* %frame_bit_rate, align 4, !dbg !10050
  %div119 = sdiv i32 %84, 1, !dbg !10052
  %div120 = sdiv i32 %div119, 4, !dbg !10053
  %add121 = add nsw i32 3000, %div120, !dbg !10054
  br label %cond.end141, !dbg !10055

cond.false122:                                    ; preds = %cond.end111
  %85 = load i32, i32* %frame_bit_rate, align 4, !dbg !10056
  %div123 = sdiv i32 %85, 1, !dbg !10058
  %div124 = sdiv i32 %div123, 5, !dbg !10059
  %86 = load i32, i32* %frame_bit_rate, align 4, !dbg !10060
  %div125 = sdiv i32 %86, 1, !dbg !10061
  %mul126 = mul nsw i32 %div125, 15, !dbg !10062
  %div127 = sdiv i32 %mul126, 32, !dbg !10063
  %sub128 = sub nsw i32 %div127, 5500, !dbg !10064
  %cmp129 = icmp sgt i32 %div124, %sub128, !dbg !10065
  br i1 %cmp129, label %cond.true131, label %cond.false134, !dbg !10066

cond.true131:                                     ; preds = %cond.false122
  %87 = load i32, i32* %frame_bit_rate, align 4, !dbg !10067
  %div132 = sdiv i32 %87, 1, !dbg !10069
  %div133 = sdiv i32 %div132, 5, !dbg !10070
  br label %cond.end139, !dbg !10071

cond.false134:                                    ; preds = %cond.false122
  %88 = load i32, i32* %frame_bit_rate, align 4, !dbg !10072
  %div135 = sdiv i32 %88, 1, !dbg !10074
  %mul136 = mul nsw i32 %div135, 15, !dbg !10075
  %div137 = sdiv i32 %mul136, 32, !dbg !10076
  %sub138 = sub nsw i32 %div137, 5500, !dbg !10077
  br label %cond.end139, !dbg !10078

cond.end139:                                      ; preds = %cond.false134, %cond.true131
  %cond140 = phi i32 [ %div133, %cond.true131 ], [ %sub138, %cond.false134 ], !dbg !10079
  br label %cond.end141, !dbg !10081

cond.end141:                                      ; preds = %cond.end139, %cond.true118
  %cond142 = phi i32 [ %add121, %cond.true118 ], [ %cond140, %cond.end139 ], !dbg !10082
  %89 = load i32, i32* %frame_bit_rate, align 4, !dbg !10084
  %div143 = sdiv i32 %89, 1, !dbg !10085
  %div144 = sdiv i32 %div143, 16, !dbg !10086
  %add145 = add nsw i32 12000, %div144, !dbg !10087
  %cmp146 = icmp sgt i32 %cond142, %add145, !dbg !10088
  br i1 %cmp146, label %cond.true148, label %cond.false152, !dbg !10089

cond.true148:                                     ; preds = %cond.end141
  %90 = load i32, i32* %frame_bit_rate, align 4, !dbg !10090
  %div149 = sdiv i32 %90, 1, !dbg !10092
  %div150 = sdiv i32 %div149, 16, !dbg !10093
  %add151 = add nsw i32 12000, %div150, !dbg !10094
  br label %cond.end201, !dbg !10095

cond.false152:                                    ; preds = %cond.end141
  %91 = load i32, i32* %frame_bit_rate, align 4, !dbg !10096
  %div153 = sdiv i32 %91, 1, !dbg !10098
  %div154 = sdiv i32 %div153, 5, !dbg !10099
  %92 = load i32, i32* %frame_bit_rate, align 4, !dbg !10100
  %div155 = sdiv i32 %92, 1, !dbg !10101
  %mul156 = mul nsw i32 %div155, 15, !dbg !10102
  %div157 = sdiv i32 %mul156, 32, !dbg !10103
  %sub158 = sub nsw i32 %div157, 5500, !dbg !10104
  %cmp159 = icmp sgt i32 %div154, %sub158, !dbg !10105
  br i1 %cmp159, label %cond.true161, label %cond.false164, !dbg !10106

cond.true161:                                     ; preds = %cond.false152
  %93 = load i32, i32* %frame_bit_rate, align 4, !dbg !10107
  %div162 = sdiv i32 %93, 1, !dbg !10109
  %div163 = sdiv i32 %div162, 5, !dbg !10110
  br label %cond.end169, !dbg !10111

cond.false164:                                    ; preds = %cond.false152
  %94 = load i32, i32* %frame_bit_rate, align 4, !dbg !10112
  %div165 = sdiv i32 %94, 1, !dbg !10114
  %mul166 = mul nsw i32 %div165, 15, !dbg !10115
  %div167 = sdiv i32 %mul166, 32, !dbg !10116
  %sub168 = sub nsw i32 %div167, 5500, !dbg !10117
  br label %cond.end169, !dbg !10118

cond.end169:                                      ; preds = %cond.false164, %cond.true161
  %cond170 = phi i32 [ %div163, %cond.true161 ], [ %sub168, %cond.false164 ], !dbg !10119
  %95 = load i32, i32* %frame_bit_rate, align 4, !dbg !10121
  %div171 = sdiv i32 %95, 1, !dbg !10122
  %div172 = sdiv i32 %div171, 4, !dbg !10123
  %add173 = add nsw i32 3000, %div172, !dbg !10124
  %cmp174 = icmp sgt i32 %cond170, %add173, !dbg !10125
  br i1 %cmp174, label %cond.true176, label %cond.false180, !dbg !10126

cond.true176:                                     ; preds = %cond.end169
  %96 = load i32, i32* %frame_bit_rate, align 4, !dbg !10127
  %div177 = sdiv i32 %96, 1, !dbg !10129
  %div178 = sdiv i32 %div177, 4, !dbg !10130
  %add179 = add nsw i32 3000, %div178, !dbg !10131
  br label %cond.end199, !dbg !10132

cond.false180:                                    ; preds = %cond.end169
  %97 = load i32, i32* %frame_bit_rate, align 4, !dbg !10133
  %div181 = sdiv i32 %97, 1, !dbg !10135
  %div182 = sdiv i32 %div181, 5, !dbg !10136
  %98 = load i32, i32* %frame_bit_rate, align 4, !dbg !10137
  %div183 = sdiv i32 %98, 1, !dbg !10138
  %mul184 = mul nsw i32 %div183, 15, !dbg !10139
  %div185 = sdiv i32 %mul184, 32, !dbg !10140
  %sub186 = sub nsw i32 %div185, 5500, !dbg !10141
  %cmp187 = icmp sgt i32 %div182, %sub186, !dbg !10142
  br i1 %cmp187, label %cond.true189, label %cond.false192, !dbg !10143

cond.true189:                                     ; preds = %cond.false180
  %99 = load i32, i32* %frame_bit_rate, align 4, !dbg !10144
  %div190 = sdiv i32 %99, 1, !dbg !10146
  %div191 = sdiv i32 %div190, 5, !dbg !10147
  br label %cond.end197, !dbg !10148

cond.false192:                                    ; preds = %cond.false180
  %100 = load i32, i32* %frame_bit_rate, align 4, !dbg !10149
  %div193 = sdiv i32 %100, 1, !dbg !10151
  %mul194 = mul nsw i32 %div193, 15, !dbg !10152
  %div195 = sdiv i32 %mul194, 32, !dbg !10153
  %sub196 = sub nsw i32 %div195, 5500, !dbg !10154
  br label %cond.end197, !dbg !10155

cond.end197:                                      ; preds = %cond.false192, %cond.true189
  %cond198 = phi i32 [ %div191, %cond.true189 ], [ %sub196, %cond.false192 ], !dbg !10156
  br label %cond.end199, !dbg !10158

cond.end199:                                      ; preds = %cond.end197, %cond.true176
  %cond200 = phi i32 [ %add179, %cond.true176 ], [ %cond198, %cond.end197 ], !dbg !10159
  br label %cond.end201, !dbg !10161

cond.end201:                                      ; preds = %cond.end199, %cond.true148
  %cond202 = phi i32 [ %add151, %cond.true148 ], [ %cond200, %cond.end199 ], !dbg !10162
  %cmp203 = icmp sgt i32 %cond202, 22000, !dbg !10164
  br i1 %cmp203, label %cond.true205, label %cond.false206, !dbg !10165

cond.true205:                                     ; preds = %cond.end201
  br label %cond.end315, !dbg !10166

cond.false206:                                    ; preds = %cond.end201
  %101 = load i32, i32* %frame_bit_rate, align 4, !dbg !10168
  %div207 = sdiv i32 %101, 1, !dbg !10170
  %div208 = sdiv i32 %div207, 5, !dbg !10171
  %102 = load i32, i32* %frame_bit_rate, align 4, !dbg !10172
  %div209 = sdiv i32 %102, 1, !dbg !10173
  %mul210 = mul nsw i32 %div209, 15, !dbg !10174
  %div211 = sdiv i32 %mul210, 32, !dbg !10175
  %sub212 = sub nsw i32 %div211, 5500, !dbg !10176
  %cmp213 = icmp sgt i32 %div208, %sub212, !dbg !10177
  br i1 %cmp213, label %cond.true215, label %cond.false218, !dbg !10178

cond.true215:                                     ; preds = %cond.false206
  %103 = load i32, i32* %frame_bit_rate, align 4, !dbg !10179
  %div216 = sdiv i32 %103, 1, !dbg !10181
  %div217 = sdiv i32 %div216, 5, !dbg !10182
  br label %cond.end223, !dbg !10183

cond.false218:                                    ; preds = %cond.false206
  %104 = load i32, i32* %frame_bit_rate, align 4, !dbg !10184
  %div219 = sdiv i32 %104, 1, !dbg !10186
  %mul220 = mul nsw i32 %div219, 15, !dbg !10187
  %div221 = sdiv i32 %mul220, 32, !dbg !10188
  %sub222 = sub nsw i32 %div221, 5500, !dbg !10189
  br label %cond.end223, !dbg !10190

cond.end223:                                      ; preds = %cond.false218, %cond.true215
  %cond224 = phi i32 [ %div217, %cond.true215 ], [ %sub222, %cond.false218 ], !dbg !10191
  %105 = load i32, i32* %frame_bit_rate, align 4, !dbg !10193
  %div225 = sdiv i32 %105, 1, !dbg !10194
  %div226 = sdiv i32 %div225, 4, !dbg !10195
  %add227 = add nsw i32 3000, %div226, !dbg !10196
  %cmp228 = icmp sgt i32 %cond224, %add227, !dbg !10197
  br i1 %cmp228, label %cond.true230, label %cond.false234, !dbg !10198

cond.true230:                                     ; preds = %cond.end223
  %106 = load i32, i32* %frame_bit_rate, align 4, !dbg !10199
  %div231 = sdiv i32 %106, 1, !dbg !10201
  %div232 = sdiv i32 %div231, 4, !dbg !10202
  %add233 = add nsw i32 3000, %div232, !dbg !10203
  br label %cond.end253, !dbg !10204

cond.false234:                                    ; preds = %cond.end223
  %107 = load i32, i32* %frame_bit_rate, align 4, !dbg !10205
  %div235 = sdiv i32 %107, 1, !dbg !10207
  %div236 = sdiv i32 %div235, 5, !dbg !10208
  %108 = load i32, i32* %frame_bit_rate, align 4, !dbg !10209
  %div237 = sdiv i32 %108, 1, !dbg !10210
  %mul238 = mul nsw i32 %div237, 15, !dbg !10211
  %div239 = sdiv i32 %mul238, 32, !dbg !10212
  %sub240 = sub nsw i32 %div239, 5500, !dbg !10213
  %cmp241 = icmp sgt i32 %div236, %sub240, !dbg !10214
  br i1 %cmp241, label %cond.true243, label %cond.false246, !dbg !10215

cond.true243:                                     ; preds = %cond.false234
  %109 = load i32, i32* %frame_bit_rate, align 4, !dbg !10216
  %div244 = sdiv i32 %109, 1, !dbg !10218
  %div245 = sdiv i32 %div244, 5, !dbg !10219
  br label %cond.end251, !dbg !10220

cond.false246:                                    ; preds = %cond.false234
  %110 = load i32, i32* %frame_bit_rate, align 4, !dbg !10221
  %div247 = sdiv i32 %110, 1, !dbg !10223
  %mul248 = mul nsw i32 %div247, 15, !dbg !10224
  %div249 = sdiv i32 %mul248, 32, !dbg !10225
  %sub250 = sub nsw i32 %div249, 5500, !dbg !10226
  br label %cond.end251, !dbg !10227

cond.end251:                                      ; preds = %cond.false246, %cond.true243
  %cond252 = phi i32 [ %div245, %cond.true243 ], [ %sub250, %cond.false246 ], !dbg !10228
  br label %cond.end253, !dbg !10230

cond.end253:                                      ; preds = %cond.end251, %cond.true230
  %cond254 = phi i32 [ %add233, %cond.true230 ], [ %cond252, %cond.end251 ], !dbg !10231
  %111 = load i32, i32* %frame_bit_rate, align 4, !dbg !10233
  %div255 = sdiv i32 %111, 1, !dbg !10234
  %div256 = sdiv i32 %div255, 16, !dbg !10235
  %add257 = add nsw i32 12000, %div256, !dbg !10236
  %cmp258 = icmp sgt i32 %cond254, %add257, !dbg !10237
  br i1 %cmp258, label %cond.true260, label %cond.false264, !dbg !10238

cond.true260:                                     ; preds = %cond.end253
  %112 = load i32, i32* %frame_bit_rate, align 4, !dbg !10239
  %div261 = sdiv i32 %112, 1, !dbg !10241
  %div262 = sdiv i32 %div261, 16, !dbg !10242
  %add263 = add nsw i32 12000, %div262, !dbg !10243
  br label %cond.end313, !dbg !10244

cond.false264:                                    ; preds = %cond.end253
  %113 = load i32, i32* %frame_bit_rate, align 4, !dbg !10245
  %div265 = sdiv i32 %113, 1, !dbg !10247
  %div266 = sdiv i32 %div265, 5, !dbg !10248
  %114 = load i32, i32* %frame_bit_rate, align 4, !dbg !10249
  %div267 = sdiv i32 %114, 1, !dbg !10250
  %mul268 = mul nsw i32 %div267, 15, !dbg !10251
  %div269 = sdiv i32 %mul268, 32, !dbg !10252
  %sub270 = sub nsw i32 %div269, 5500, !dbg !10253
  %cmp271 = icmp sgt i32 %div266, %sub270, !dbg !10254
  br i1 %cmp271, label %cond.true273, label %cond.false276, !dbg !10255

cond.true273:                                     ; preds = %cond.false264
  %115 = load i32, i32* %frame_bit_rate, align 4, !dbg !10256
  %div274 = sdiv i32 %115, 1, !dbg !10258
  %div275 = sdiv i32 %div274, 5, !dbg !10259
  br label %cond.end281, !dbg !10260

cond.false276:                                    ; preds = %cond.false264
  %116 = load i32, i32* %frame_bit_rate, align 4, !dbg !10261
  %div277 = sdiv i32 %116, 1, !dbg !10263
  %mul278 = mul nsw i32 %div277, 15, !dbg !10264
  %div279 = sdiv i32 %mul278, 32, !dbg !10265
  %sub280 = sub nsw i32 %div279, 5500, !dbg !10266
  br label %cond.end281, !dbg !10267

cond.end281:                                      ; preds = %cond.false276, %cond.true273
  %cond282 = phi i32 [ %div275, %cond.true273 ], [ %sub280, %cond.false276 ], !dbg !10268
  %117 = load i32, i32* %frame_bit_rate, align 4, !dbg !10270
  %div283 = sdiv i32 %117, 1, !dbg !10271
  %div284 = sdiv i32 %div283, 4, !dbg !10272
  %add285 = add nsw i32 3000, %div284, !dbg !10273
  %cmp286 = icmp sgt i32 %cond282, %add285, !dbg !10274
  br i1 %cmp286, label %cond.true288, label %cond.false292, !dbg !10275

cond.true288:                                     ; preds = %cond.end281
  %118 = load i32, i32* %frame_bit_rate, align 4, !dbg !10276
  %div289 = sdiv i32 %118, 1, !dbg !10278
  %div290 = sdiv i32 %div289, 4, !dbg !10279
  %add291 = add nsw i32 3000, %div290, !dbg !10280
  br label %cond.end311, !dbg !10281

cond.false292:                                    ; preds = %cond.end281
  %119 = load i32, i32* %frame_bit_rate, align 4, !dbg !10282
  %div293 = sdiv i32 %119, 1, !dbg !10284
  %div294 = sdiv i32 %div293, 5, !dbg !10285
  %120 = load i32, i32* %frame_bit_rate, align 4, !dbg !10286
  %div295 = sdiv i32 %120, 1, !dbg !10287
  %mul296 = mul nsw i32 %div295, 15, !dbg !10288
  %div297 = sdiv i32 %mul296, 32, !dbg !10289
  %sub298 = sub nsw i32 %div297, 5500, !dbg !10290
  %cmp299 = icmp sgt i32 %div294, %sub298, !dbg !10291
  br i1 %cmp299, label %cond.true301, label %cond.false304, !dbg !10292

cond.true301:                                     ; preds = %cond.false292
  %121 = load i32, i32* %frame_bit_rate, align 4, !dbg !10293
  %div302 = sdiv i32 %121, 1, !dbg !10295
  %div303 = sdiv i32 %div302, 5, !dbg !10296
  br label %cond.end309, !dbg !10297

cond.false304:                                    ; preds = %cond.false292
  %122 = load i32, i32* %frame_bit_rate, align 4, !dbg !10298
  %div305 = sdiv i32 %122, 1, !dbg !10300
  %mul306 = mul nsw i32 %div305, 15, !dbg !10301
  %div307 = sdiv i32 %mul306, 32, !dbg !10302
  %sub308 = sub nsw i32 %div307, 5500, !dbg !10303
  br label %cond.end309, !dbg !10304

cond.end309:                                      ; preds = %cond.false304, %cond.true301
  %cond310 = phi i32 [ %div303, %cond.true301 ], [ %sub308, %cond.false304 ], !dbg !10305
  br label %cond.end311, !dbg !10307

cond.end311:                                      ; preds = %cond.end309, %cond.true288
  %cond312 = phi i32 [ %add291, %cond.true288 ], [ %cond310, %cond.end309 ], !dbg !10308
  br label %cond.end313, !dbg !10310

cond.end313:                                      ; preds = %cond.end311, %cond.true260
  %cond314 = phi i32 [ %add263, %cond.true260 ], [ %cond312, %cond.end311 ], !dbg !10311
  br label %cond.end315, !dbg !10313

cond.end315:                                      ; preds = %cond.end313, %cond.true205
  %cond316 = phi i32 [ 22000, %cond.true205 ], [ %cond314, %cond.end313 ], !dbg !10314
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10316
  %sample_rate317 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 82, !dbg !10317
  %124 = load i32, i32* %sample_rate317, align 8, !dbg !10317
  %div318 = sdiv i32 %124, 2, !dbg !10318
  %cmp319 = icmp sgt i32 %cond316, %div318, !dbg !10319
  br i1 %cmp319, label %cond.true321, label %cond.false324, !dbg !10320

cond.true321:                                     ; preds = %cond.end315
  %125 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10321
  %sample_rate322 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %125, i32 0, i32 82, !dbg !10323
  %126 = load i32, i32* %sample_rate322, align 8, !dbg !10323
  %div323 = sdiv i32 %126, 2, !dbg !10324
  br label %cond.end547, !dbg !10325

cond.false324:                                    ; preds = %cond.end315
  %127 = load i32, i32* %frame_bit_rate, align 4, !dbg !10326
  %div325 = sdiv i32 %127, 1, !dbg !10328
  %div326 = sdiv i32 %div325, 5, !dbg !10329
  %128 = load i32, i32* %frame_bit_rate, align 4, !dbg !10330
  %div327 = sdiv i32 %128, 1, !dbg !10331
  %mul328 = mul nsw i32 %div327, 15, !dbg !10332
  %div329 = sdiv i32 %mul328, 32, !dbg !10333
  %sub330 = sub nsw i32 %div329, 5500, !dbg !10334
  %cmp331 = icmp sgt i32 %div326, %sub330, !dbg !10335
  br i1 %cmp331, label %cond.true333, label %cond.false336, !dbg !10336

cond.true333:                                     ; preds = %cond.false324
  %129 = load i32, i32* %frame_bit_rate, align 4, !dbg !10337
  %div334 = sdiv i32 %129, 1, !dbg !10339
  %div335 = sdiv i32 %div334, 5, !dbg !10340
  br label %cond.end341, !dbg !10341

cond.false336:                                    ; preds = %cond.false324
  %130 = load i32, i32* %frame_bit_rate, align 4, !dbg !10342
  %div337 = sdiv i32 %130, 1, !dbg !10344
  %mul338 = mul nsw i32 %div337, 15, !dbg !10345
  %div339 = sdiv i32 %mul338, 32, !dbg !10346
  %sub340 = sub nsw i32 %div339, 5500, !dbg !10347
  br label %cond.end341, !dbg !10348

cond.end341:                                      ; preds = %cond.false336, %cond.true333
  %cond342 = phi i32 [ %div335, %cond.true333 ], [ %sub340, %cond.false336 ], !dbg !10349
  %131 = load i32, i32* %frame_bit_rate, align 4, !dbg !10351
  %div343 = sdiv i32 %131, 1, !dbg !10352
  %div344 = sdiv i32 %div343, 4, !dbg !10353
  %add345 = add nsw i32 3000, %div344, !dbg !10354
  %cmp346 = icmp sgt i32 %cond342, %add345, !dbg !10355
  br i1 %cmp346, label %cond.true348, label %cond.false352, !dbg !10356

cond.true348:                                     ; preds = %cond.end341
  %132 = load i32, i32* %frame_bit_rate, align 4, !dbg !10357
  %div349 = sdiv i32 %132, 1, !dbg !10359
  %div350 = sdiv i32 %div349, 4, !dbg !10360
  %add351 = add nsw i32 3000, %div350, !dbg !10361
  br label %cond.end371, !dbg !10362

cond.false352:                                    ; preds = %cond.end341
  %133 = load i32, i32* %frame_bit_rate, align 4, !dbg !10363
  %div353 = sdiv i32 %133, 1, !dbg !10365
  %div354 = sdiv i32 %div353, 5, !dbg !10366
  %134 = load i32, i32* %frame_bit_rate, align 4, !dbg !10367
  %div355 = sdiv i32 %134, 1, !dbg !10368
  %mul356 = mul nsw i32 %div355, 15, !dbg !10369
  %div357 = sdiv i32 %mul356, 32, !dbg !10370
  %sub358 = sub nsw i32 %div357, 5500, !dbg !10371
  %cmp359 = icmp sgt i32 %div354, %sub358, !dbg !10372
  br i1 %cmp359, label %cond.true361, label %cond.false364, !dbg !10373

cond.true361:                                     ; preds = %cond.false352
  %135 = load i32, i32* %frame_bit_rate, align 4, !dbg !10374
  %div362 = sdiv i32 %135, 1, !dbg !10376
  %div363 = sdiv i32 %div362, 5, !dbg !10377
  br label %cond.end369, !dbg !10378

cond.false364:                                    ; preds = %cond.false352
  %136 = load i32, i32* %frame_bit_rate, align 4, !dbg !10379
  %div365 = sdiv i32 %136, 1, !dbg !10381
  %mul366 = mul nsw i32 %div365, 15, !dbg !10382
  %div367 = sdiv i32 %mul366, 32, !dbg !10383
  %sub368 = sub nsw i32 %div367, 5500, !dbg !10384
  br label %cond.end369, !dbg !10385

cond.end369:                                      ; preds = %cond.false364, %cond.true361
  %cond370 = phi i32 [ %div363, %cond.true361 ], [ %sub368, %cond.false364 ], !dbg !10386
  br label %cond.end371, !dbg !10388

cond.end371:                                      ; preds = %cond.end369, %cond.true348
  %cond372 = phi i32 [ %add351, %cond.true348 ], [ %cond370, %cond.end369 ], !dbg !10389
  %137 = load i32, i32* %frame_bit_rate, align 4, !dbg !10391
  %div373 = sdiv i32 %137, 1, !dbg !10392
  %div374 = sdiv i32 %div373, 16, !dbg !10393
  %add375 = add nsw i32 12000, %div374, !dbg !10394
  %cmp376 = icmp sgt i32 %cond372, %add375, !dbg !10395
  br i1 %cmp376, label %cond.true378, label %cond.false382, !dbg !10396

cond.true378:                                     ; preds = %cond.end371
  %138 = load i32, i32* %frame_bit_rate, align 4, !dbg !10397
  %div379 = sdiv i32 %138, 1, !dbg !10399
  %div380 = sdiv i32 %div379, 16, !dbg !10400
  %add381 = add nsw i32 12000, %div380, !dbg !10401
  br label %cond.end431, !dbg !10402

cond.false382:                                    ; preds = %cond.end371
  %139 = load i32, i32* %frame_bit_rate, align 4, !dbg !10403
  %div383 = sdiv i32 %139, 1, !dbg !10405
  %div384 = sdiv i32 %div383, 5, !dbg !10406
  %140 = load i32, i32* %frame_bit_rate, align 4, !dbg !10407
  %div385 = sdiv i32 %140, 1, !dbg !10408
  %mul386 = mul nsw i32 %div385, 15, !dbg !10409
  %div387 = sdiv i32 %mul386, 32, !dbg !10410
  %sub388 = sub nsw i32 %div387, 5500, !dbg !10411
  %cmp389 = icmp sgt i32 %div384, %sub388, !dbg !10412
  br i1 %cmp389, label %cond.true391, label %cond.false394, !dbg !10413

cond.true391:                                     ; preds = %cond.false382
  %141 = load i32, i32* %frame_bit_rate, align 4, !dbg !10414
  %div392 = sdiv i32 %141, 1, !dbg !10416
  %div393 = sdiv i32 %div392, 5, !dbg !10417
  br label %cond.end399, !dbg !10418

cond.false394:                                    ; preds = %cond.false382
  %142 = load i32, i32* %frame_bit_rate, align 4, !dbg !10419
  %div395 = sdiv i32 %142, 1, !dbg !10421
  %mul396 = mul nsw i32 %div395, 15, !dbg !10422
  %div397 = sdiv i32 %mul396, 32, !dbg !10423
  %sub398 = sub nsw i32 %div397, 5500, !dbg !10424
  br label %cond.end399, !dbg !10425

cond.end399:                                      ; preds = %cond.false394, %cond.true391
  %cond400 = phi i32 [ %div393, %cond.true391 ], [ %sub398, %cond.false394 ], !dbg !10426
  %143 = load i32, i32* %frame_bit_rate, align 4, !dbg !10428
  %div401 = sdiv i32 %143, 1, !dbg !10429
  %div402 = sdiv i32 %div401, 4, !dbg !10430
  %add403 = add nsw i32 3000, %div402, !dbg !10431
  %cmp404 = icmp sgt i32 %cond400, %add403, !dbg !10432
  br i1 %cmp404, label %cond.true406, label %cond.false410, !dbg !10433

cond.true406:                                     ; preds = %cond.end399
  %144 = load i32, i32* %frame_bit_rate, align 4, !dbg !10434
  %div407 = sdiv i32 %144, 1, !dbg !10436
  %div408 = sdiv i32 %div407, 4, !dbg !10437
  %add409 = add nsw i32 3000, %div408, !dbg !10438
  br label %cond.end429, !dbg !10439

cond.false410:                                    ; preds = %cond.end399
  %145 = load i32, i32* %frame_bit_rate, align 4, !dbg !10440
  %div411 = sdiv i32 %145, 1, !dbg !10442
  %div412 = sdiv i32 %div411, 5, !dbg !10443
  %146 = load i32, i32* %frame_bit_rate, align 4, !dbg !10444
  %div413 = sdiv i32 %146, 1, !dbg !10445
  %mul414 = mul nsw i32 %div413, 15, !dbg !10446
  %div415 = sdiv i32 %mul414, 32, !dbg !10447
  %sub416 = sub nsw i32 %div415, 5500, !dbg !10448
  %cmp417 = icmp sgt i32 %div412, %sub416, !dbg !10449
  br i1 %cmp417, label %cond.true419, label %cond.false422, !dbg !10450

cond.true419:                                     ; preds = %cond.false410
  %147 = load i32, i32* %frame_bit_rate, align 4, !dbg !10451
  %div420 = sdiv i32 %147, 1, !dbg !10453
  %div421 = sdiv i32 %div420, 5, !dbg !10454
  br label %cond.end427, !dbg !10455

cond.false422:                                    ; preds = %cond.false410
  %148 = load i32, i32* %frame_bit_rate, align 4, !dbg !10456
  %div423 = sdiv i32 %148, 1, !dbg !10458
  %mul424 = mul nsw i32 %div423, 15, !dbg !10459
  %div425 = sdiv i32 %mul424, 32, !dbg !10460
  %sub426 = sub nsw i32 %div425, 5500, !dbg !10461
  br label %cond.end427, !dbg !10462

cond.end427:                                      ; preds = %cond.false422, %cond.true419
  %cond428 = phi i32 [ %div421, %cond.true419 ], [ %sub426, %cond.false422 ], !dbg !10463
  br label %cond.end429, !dbg !10465

cond.end429:                                      ; preds = %cond.end427, %cond.true406
  %cond430 = phi i32 [ %add409, %cond.true406 ], [ %cond428, %cond.end427 ], !dbg !10466
  br label %cond.end431, !dbg !10468

cond.end431:                                      ; preds = %cond.end429, %cond.true378
  %cond432 = phi i32 [ %add381, %cond.true378 ], [ %cond430, %cond.end429 ], !dbg !10469
  %cmp433 = icmp sgt i32 %cond432, 22000, !dbg !10471
  br i1 %cmp433, label %cond.true435, label %cond.false436, !dbg !10472

cond.true435:                                     ; preds = %cond.end431
  br label %cond.end545, !dbg !10473

cond.false436:                                    ; preds = %cond.end431
  %149 = load i32, i32* %frame_bit_rate, align 4, !dbg !10475
  %div437 = sdiv i32 %149, 1, !dbg !10477
  %div438 = sdiv i32 %div437, 5, !dbg !10478
  %150 = load i32, i32* %frame_bit_rate, align 4, !dbg !10479
  %div439 = sdiv i32 %150, 1, !dbg !10480
  %mul440 = mul nsw i32 %div439, 15, !dbg !10481
  %div441 = sdiv i32 %mul440, 32, !dbg !10482
  %sub442 = sub nsw i32 %div441, 5500, !dbg !10483
  %cmp443 = icmp sgt i32 %div438, %sub442, !dbg !10484
  br i1 %cmp443, label %cond.true445, label %cond.false448, !dbg !10485

cond.true445:                                     ; preds = %cond.false436
  %151 = load i32, i32* %frame_bit_rate, align 4, !dbg !10486
  %div446 = sdiv i32 %151, 1, !dbg !10488
  %div447 = sdiv i32 %div446, 5, !dbg !10489
  br label %cond.end453, !dbg !10490

cond.false448:                                    ; preds = %cond.false436
  %152 = load i32, i32* %frame_bit_rate, align 4, !dbg !10491
  %div449 = sdiv i32 %152, 1, !dbg !10493
  %mul450 = mul nsw i32 %div449, 15, !dbg !10494
  %div451 = sdiv i32 %mul450, 32, !dbg !10495
  %sub452 = sub nsw i32 %div451, 5500, !dbg !10496
  br label %cond.end453, !dbg !10497

cond.end453:                                      ; preds = %cond.false448, %cond.true445
  %cond454 = phi i32 [ %div447, %cond.true445 ], [ %sub452, %cond.false448 ], !dbg !10498
  %153 = load i32, i32* %frame_bit_rate, align 4, !dbg !10500
  %div455 = sdiv i32 %153, 1, !dbg !10501
  %div456 = sdiv i32 %div455, 4, !dbg !10502
  %add457 = add nsw i32 3000, %div456, !dbg !10503
  %cmp458 = icmp sgt i32 %cond454, %add457, !dbg !10504
  br i1 %cmp458, label %cond.true460, label %cond.false464, !dbg !10505

cond.true460:                                     ; preds = %cond.end453
  %154 = load i32, i32* %frame_bit_rate, align 4, !dbg !10506
  %div461 = sdiv i32 %154, 1, !dbg !10508
  %div462 = sdiv i32 %div461, 4, !dbg !10509
  %add463 = add nsw i32 3000, %div462, !dbg !10510
  br label %cond.end483, !dbg !10511

cond.false464:                                    ; preds = %cond.end453
  %155 = load i32, i32* %frame_bit_rate, align 4, !dbg !10512
  %div465 = sdiv i32 %155, 1, !dbg !10514
  %div466 = sdiv i32 %div465, 5, !dbg !10515
  %156 = load i32, i32* %frame_bit_rate, align 4, !dbg !10516
  %div467 = sdiv i32 %156, 1, !dbg !10517
  %mul468 = mul nsw i32 %div467, 15, !dbg !10518
  %div469 = sdiv i32 %mul468, 32, !dbg !10519
  %sub470 = sub nsw i32 %div469, 5500, !dbg !10520
  %cmp471 = icmp sgt i32 %div466, %sub470, !dbg !10521
  br i1 %cmp471, label %cond.true473, label %cond.false476, !dbg !10522

cond.true473:                                     ; preds = %cond.false464
  %157 = load i32, i32* %frame_bit_rate, align 4, !dbg !10523
  %div474 = sdiv i32 %157, 1, !dbg !10525
  %div475 = sdiv i32 %div474, 5, !dbg !10526
  br label %cond.end481, !dbg !10527

cond.false476:                                    ; preds = %cond.false464
  %158 = load i32, i32* %frame_bit_rate, align 4, !dbg !10528
  %div477 = sdiv i32 %158, 1, !dbg !10530
  %mul478 = mul nsw i32 %div477, 15, !dbg !10531
  %div479 = sdiv i32 %mul478, 32, !dbg !10532
  %sub480 = sub nsw i32 %div479, 5500, !dbg !10533
  br label %cond.end481, !dbg !10534

cond.end481:                                      ; preds = %cond.false476, %cond.true473
  %cond482 = phi i32 [ %div475, %cond.true473 ], [ %sub480, %cond.false476 ], !dbg !10535
  br label %cond.end483, !dbg !10537

cond.end483:                                      ; preds = %cond.end481, %cond.true460
  %cond484 = phi i32 [ %add463, %cond.true460 ], [ %cond482, %cond.end481 ], !dbg !10538
  %159 = load i32, i32* %frame_bit_rate, align 4, !dbg !10540
  %div485 = sdiv i32 %159, 1, !dbg !10541
  %div486 = sdiv i32 %div485, 16, !dbg !10542
  %add487 = add nsw i32 12000, %div486, !dbg !10543
  %cmp488 = icmp sgt i32 %cond484, %add487, !dbg !10544
  br i1 %cmp488, label %cond.true490, label %cond.false494, !dbg !10545

cond.true490:                                     ; preds = %cond.end483
  %160 = load i32, i32* %frame_bit_rate, align 4, !dbg !10546
  %div491 = sdiv i32 %160, 1, !dbg !10548
  %div492 = sdiv i32 %div491, 16, !dbg !10549
  %add493 = add nsw i32 12000, %div492, !dbg !10550
  br label %cond.end543, !dbg !10551

cond.false494:                                    ; preds = %cond.end483
  %161 = load i32, i32* %frame_bit_rate, align 4, !dbg !10552
  %div495 = sdiv i32 %161, 1, !dbg !10554
  %div496 = sdiv i32 %div495, 5, !dbg !10555
  %162 = load i32, i32* %frame_bit_rate, align 4, !dbg !10556
  %div497 = sdiv i32 %162, 1, !dbg !10557
  %mul498 = mul nsw i32 %div497, 15, !dbg !10558
  %div499 = sdiv i32 %mul498, 32, !dbg !10559
  %sub500 = sub nsw i32 %div499, 5500, !dbg !10560
  %cmp501 = icmp sgt i32 %div496, %sub500, !dbg !10561
  br i1 %cmp501, label %cond.true503, label %cond.false506, !dbg !10562

cond.true503:                                     ; preds = %cond.false494
  %163 = load i32, i32* %frame_bit_rate, align 4, !dbg !10563
  %div504 = sdiv i32 %163, 1, !dbg !10565
  %div505 = sdiv i32 %div504, 5, !dbg !10566
  br label %cond.end511, !dbg !10567

cond.false506:                                    ; preds = %cond.false494
  %164 = load i32, i32* %frame_bit_rate, align 4, !dbg !10568
  %div507 = sdiv i32 %164, 1, !dbg !10570
  %mul508 = mul nsw i32 %div507, 15, !dbg !10571
  %div509 = sdiv i32 %mul508, 32, !dbg !10572
  %sub510 = sub nsw i32 %div509, 5500, !dbg !10573
  br label %cond.end511, !dbg !10574

cond.end511:                                      ; preds = %cond.false506, %cond.true503
  %cond512 = phi i32 [ %div505, %cond.true503 ], [ %sub510, %cond.false506 ], !dbg !10575
  %165 = load i32, i32* %frame_bit_rate, align 4, !dbg !10577
  %div513 = sdiv i32 %165, 1, !dbg !10578
  %div514 = sdiv i32 %div513, 4, !dbg !10579
  %add515 = add nsw i32 3000, %div514, !dbg !10580
  %cmp516 = icmp sgt i32 %cond512, %add515, !dbg !10581
  br i1 %cmp516, label %cond.true518, label %cond.false522, !dbg !10582

cond.true518:                                     ; preds = %cond.end511
  %166 = load i32, i32* %frame_bit_rate, align 4, !dbg !10583
  %div519 = sdiv i32 %166, 1, !dbg !10585
  %div520 = sdiv i32 %div519, 4, !dbg !10586
  %add521 = add nsw i32 3000, %div520, !dbg !10587
  br label %cond.end541, !dbg !10588

cond.false522:                                    ; preds = %cond.end511
  %167 = load i32, i32* %frame_bit_rate, align 4, !dbg !10589
  %div523 = sdiv i32 %167, 1, !dbg !10591
  %div524 = sdiv i32 %div523, 5, !dbg !10592
  %168 = load i32, i32* %frame_bit_rate, align 4, !dbg !10593
  %div525 = sdiv i32 %168, 1, !dbg !10594
  %mul526 = mul nsw i32 %div525, 15, !dbg !10595
  %div527 = sdiv i32 %mul526, 32, !dbg !10596
  %sub528 = sub nsw i32 %div527, 5500, !dbg !10597
  %cmp529 = icmp sgt i32 %div524, %sub528, !dbg !10598
  br i1 %cmp529, label %cond.true531, label %cond.false534, !dbg !10599

cond.true531:                                     ; preds = %cond.false522
  %169 = load i32, i32* %frame_bit_rate, align 4, !dbg !10600
  %div532 = sdiv i32 %169, 1, !dbg !10602
  %div533 = sdiv i32 %div532, 5, !dbg !10603
  br label %cond.end539, !dbg !10604

cond.false534:                                    ; preds = %cond.false522
  %170 = load i32, i32* %frame_bit_rate, align 4, !dbg !10605
  %div535 = sdiv i32 %170, 1, !dbg !10607
  %mul536 = mul nsw i32 %div535, 15, !dbg !10608
  %div537 = sdiv i32 %mul536, 32, !dbg !10609
  %sub538 = sub nsw i32 %div537, 5500, !dbg !10610
  br label %cond.end539, !dbg !10611

cond.end539:                                      ; preds = %cond.false534, %cond.true531
  %cond540 = phi i32 [ %div533, %cond.true531 ], [ %sub538, %cond.false534 ], !dbg !10612
  br label %cond.end541, !dbg !10614

cond.end541:                                      ; preds = %cond.end539, %cond.true518
  %cond542 = phi i32 [ %add521, %cond.true518 ], [ %cond540, %cond.end539 ], !dbg !10615
  br label %cond.end543, !dbg !10617

cond.end543:                                      ; preds = %cond.end541, %cond.true490
  %cond544 = phi i32 [ %add493, %cond.true490 ], [ %cond542, %cond.end541 ], !dbg !10618
  br label %cond.end545, !dbg !10620

cond.end545:                                      ; preds = %cond.end543, %cond.true435
  %cond546 = phi i32 [ 22000, %cond.true435 ], [ %cond544, %cond.end543 ], !dbg !10621
  br label %cond.end547, !dbg !10623

cond.end547:                                      ; preds = %cond.end545, %cond.true321
  %cond548 = phi i32 [ %div323, %cond.true321 ], [ %cond546, %cond.end545 ], !dbg !10624
  br label %cond.end552, !dbg !10626

cond.false549:                                    ; preds = %if.else92
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10627
  %sample_rate550 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %171, i32 0, i32 82, !dbg !10629
  %172 = load i32, i32* %sample_rate550, align 8, !dbg !10629
  %div551 = sdiv i32 %172, 2, !dbg !10630
  br label %cond.end552, !dbg !10631

cond.end552:                                      ; preds = %cond.false549, %cond.end547
  %cond553 = phi i32 [ %cond548, %cond.end547 ], [ %div551, %cond.false549 ], !dbg !10632
  %cmp554 = icmp sgt i32 3000, %cond553, !dbg !10634
  br i1 %cmp554, label %cond.true556, label %cond.false557, !dbg !10635

cond.true556:                                     ; preds = %cond.end552
  br label %cond.end1019, !dbg !10636

cond.false557:                                    ; preds = %cond.end552
  %173 = load i32, i32* %frame_bit_rate, align 4, !dbg !10638
  %tobool558 = icmp ne i32 %173, 0, !dbg !10638
  br i1 %tobool558, label %cond.true559, label %cond.false1014, !dbg !10638

cond.true559:                                     ; preds = %cond.false557
  %174 = load i32, i32* %frame_bit_rate, align 4, !dbg !10640
  %div560 = sdiv i32 %174, 1, !dbg !10642
  %div561 = sdiv i32 %div560, 5, !dbg !10643
  %175 = load i32, i32* %frame_bit_rate, align 4, !dbg !10644
  %div562 = sdiv i32 %175, 1, !dbg !10645
  %mul563 = mul nsw i32 %div562, 15, !dbg !10646
  %div564 = sdiv i32 %mul563, 32, !dbg !10647
  %sub565 = sub nsw i32 %div564, 5500, !dbg !10648
  %cmp566 = icmp sgt i32 %div561, %sub565, !dbg !10649
  br i1 %cmp566, label %cond.true568, label %cond.false571, !dbg !10650

cond.true568:                                     ; preds = %cond.true559
  %176 = load i32, i32* %frame_bit_rate, align 4, !dbg !10651
  %div569 = sdiv i32 %176, 1, !dbg !10653
  %div570 = sdiv i32 %div569, 5, !dbg !10654
  br label %cond.end576, !dbg !10655

cond.false571:                                    ; preds = %cond.true559
  %177 = load i32, i32* %frame_bit_rate, align 4, !dbg !10656
  %div572 = sdiv i32 %177, 1, !dbg !10658
  %mul573 = mul nsw i32 %div572, 15, !dbg !10659
  %div574 = sdiv i32 %mul573, 32, !dbg !10660
  %sub575 = sub nsw i32 %div574, 5500, !dbg !10661
  br label %cond.end576, !dbg !10662

cond.end576:                                      ; preds = %cond.false571, %cond.true568
  %cond577 = phi i32 [ %div570, %cond.true568 ], [ %sub575, %cond.false571 ], !dbg !10663
  %178 = load i32, i32* %frame_bit_rate, align 4, !dbg !10665
  %div578 = sdiv i32 %178, 1, !dbg !10666
  %div579 = sdiv i32 %div578, 4, !dbg !10667
  %add580 = add nsw i32 3000, %div579, !dbg !10668
  %cmp581 = icmp sgt i32 %cond577, %add580, !dbg !10669
  br i1 %cmp581, label %cond.true583, label %cond.false587, !dbg !10670

cond.true583:                                     ; preds = %cond.end576
  %179 = load i32, i32* %frame_bit_rate, align 4, !dbg !10671
  %div584 = sdiv i32 %179, 1, !dbg !10673
  %div585 = sdiv i32 %div584, 4, !dbg !10674
  %add586 = add nsw i32 3000, %div585, !dbg !10675
  br label %cond.end606, !dbg !10676

cond.false587:                                    ; preds = %cond.end576
  %180 = load i32, i32* %frame_bit_rate, align 4, !dbg !10677
  %div588 = sdiv i32 %180, 1, !dbg !10679
  %div589 = sdiv i32 %div588, 5, !dbg !10680
  %181 = load i32, i32* %frame_bit_rate, align 4, !dbg !10681
  %div590 = sdiv i32 %181, 1, !dbg !10682
  %mul591 = mul nsw i32 %div590, 15, !dbg !10683
  %div592 = sdiv i32 %mul591, 32, !dbg !10684
  %sub593 = sub nsw i32 %div592, 5500, !dbg !10685
  %cmp594 = icmp sgt i32 %div589, %sub593, !dbg !10686
  br i1 %cmp594, label %cond.true596, label %cond.false599, !dbg !10687

cond.true596:                                     ; preds = %cond.false587
  %182 = load i32, i32* %frame_bit_rate, align 4, !dbg !10688
  %div597 = sdiv i32 %182, 1, !dbg !10690
  %div598 = sdiv i32 %div597, 5, !dbg !10691
  br label %cond.end604, !dbg !10692

cond.false599:                                    ; preds = %cond.false587
  %183 = load i32, i32* %frame_bit_rate, align 4, !dbg !10693
  %div600 = sdiv i32 %183, 1, !dbg !10695
  %mul601 = mul nsw i32 %div600, 15, !dbg !10696
  %div602 = sdiv i32 %mul601, 32, !dbg !10697
  %sub603 = sub nsw i32 %div602, 5500, !dbg !10698
  br label %cond.end604, !dbg !10699

cond.end604:                                      ; preds = %cond.false599, %cond.true596
  %cond605 = phi i32 [ %div598, %cond.true596 ], [ %sub603, %cond.false599 ], !dbg !10700
  br label %cond.end606, !dbg !10702

cond.end606:                                      ; preds = %cond.end604, %cond.true583
  %cond607 = phi i32 [ %add586, %cond.true583 ], [ %cond605, %cond.end604 ], !dbg !10703
  %184 = load i32, i32* %frame_bit_rate, align 4, !dbg !10705
  %div608 = sdiv i32 %184, 1, !dbg !10706
  %div609 = sdiv i32 %div608, 16, !dbg !10707
  %add610 = add nsw i32 12000, %div609, !dbg !10708
  %cmp611 = icmp sgt i32 %cond607, %add610, !dbg !10709
  br i1 %cmp611, label %cond.true613, label %cond.false617, !dbg !10710

cond.true613:                                     ; preds = %cond.end606
  %185 = load i32, i32* %frame_bit_rate, align 4, !dbg !10711
  %div614 = sdiv i32 %185, 1, !dbg !10713
  %div615 = sdiv i32 %div614, 16, !dbg !10714
  %add616 = add nsw i32 12000, %div615, !dbg !10715
  br label %cond.end666, !dbg !10716

cond.false617:                                    ; preds = %cond.end606
  %186 = load i32, i32* %frame_bit_rate, align 4, !dbg !10717
  %div618 = sdiv i32 %186, 1, !dbg !10719
  %div619 = sdiv i32 %div618, 5, !dbg !10720
  %187 = load i32, i32* %frame_bit_rate, align 4, !dbg !10721
  %div620 = sdiv i32 %187, 1, !dbg !10722
  %mul621 = mul nsw i32 %div620, 15, !dbg !10723
  %div622 = sdiv i32 %mul621, 32, !dbg !10724
  %sub623 = sub nsw i32 %div622, 5500, !dbg !10725
  %cmp624 = icmp sgt i32 %div619, %sub623, !dbg !10726
  br i1 %cmp624, label %cond.true626, label %cond.false629, !dbg !10727

cond.true626:                                     ; preds = %cond.false617
  %188 = load i32, i32* %frame_bit_rate, align 4, !dbg !10728
  %div627 = sdiv i32 %188, 1, !dbg !10730
  %div628 = sdiv i32 %div627, 5, !dbg !10731
  br label %cond.end634, !dbg !10732

cond.false629:                                    ; preds = %cond.false617
  %189 = load i32, i32* %frame_bit_rate, align 4, !dbg !10733
  %div630 = sdiv i32 %189, 1, !dbg !10735
  %mul631 = mul nsw i32 %div630, 15, !dbg !10736
  %div632 = sdiv i32 %mul631, 32, !dbg !10737
  %sub633 = sub nsw i32 %div632, 5500, !dbg !10738
  br label %cond.end634, !dbg !10739

cond.end634:                                      ; preds = %cond.false629, %cond.true626
  %cond635 = phi i32 [ %div628, %cond.true626 ], [ %sub633, %cond.false629 ], !dbg !10740
  %190 = load i32, i32* %frame_bit_rate, align 4, !dbg !10742
  %div636 = sdiv i32 %190, 1, !dbg !10743
  %div637 = sdiv i32 %div636, 4, !dbg !10744
  %add638 = add nsw i32 3000, %div637, !dbg !10745
  %cmp639 = icmp sgt i32 %cond635, %add638, !dbg !10746
  br i1 %cmp639, label %cond.true641, label %cond.false645, !dbg !10747

cond.true641:                                     ; preds = %cond.end634
  %191 = load i32, i32* %frame_bit_rate, align 4, !dbg !10748
  %div642 = sdiv i32 %191, 1, !dbg !10750
  %div643 = sdiv i32 %div642, 4, !dbg !10751
  %add644 = add nsw i32 3000, %div643, !dbg !10752
  br label %cond.end664, !dbg !10753

cond.false645:                                    ; preds = %cond.end634
  %192 = load i32, i32* %frame_bit_rate, align 4, !dbg !10754
  %div646 = sdiv i32 %192, 1, !dbg !10756
  %div647 = sdiv i32 %div646, 5, !dbg !10757
  %193 = load i32, i32* %frame_bit_rate, align 4, !dbg !10758
  %div648 = sdiv i32 %193, 1, !dbg !10759
  %mul649 = mul nsw i32 %div648, 15, !dbg !10760
  %div650 = sdiv i32 %mul649, 32, !dbg !10761
  %sub651 = sub nsw i32 %div650, 5500, !dbg !10762
  %cmp652 = icmp sgt i32 %div647, %sub651, !dbg !10763
  br i1 %cmp652, label %cond.true654, label %cond.false657, !dbg !10764

cond.true654:                                     ; preds = %cond.false645
  %194 = load i32, i32* %frame_bit_rate, align 4, !dbg !10765
  %div655 = sdiv i32 %194, 1, !dbg !10767
  %div656 = sdiv i32 %div655, 5, !dbg !10768
  br label %cond.end662, !dbg !10769

cond.false657:                                    ; preds = %cond.false645
  %195 = load i32, i32* %frame_bit_rate, align 4, !dbg !10770
  %div658 = sdiv i32 %195, 1, !dbg !10772
  %mul659 = mul nsw i32 %div658, 15, !dbg !10773
  %div660 = sdiv i32 %mul659, 32, !dbg !10774
  %sub661 = sub nsw i32 %div660, 5500, !dbg !10775
  br label %cond.end662, !dbg !10776

cond.end662:                                      ; preds = %cond.false657, %cond.true654
  %cond663 = phi i32 [ %div656, %cond.true654 ], [ %sub661, %cond.false657 ], !dbg !10777
  br label %cond.end664, !dbg !10779

cond.end664:                                      ; preds = %cond.end662, %cond.true641
  %cond665 = phi i32 [ %add644, %cond.true641 ], [ %cond663, %cond.end662 ], !dbg !10780
  br label %cond.end666, !dbg !10782

cond.end666:                                      ; preds = %cond.end664, %cond.true613
  %cond667 = phi i32 [ %add616, %cond.true613 ], [ %cond665, %cond.end664 ], !dbg !10783
  %cmp668 = icmp sgt i32 %cond667, 22000, !dbg !10785
  br i1 %cmp668, label %cond.true670, label %cond.false671, !dbg !10786

cond.true670:                                     ; preds = %cond.end666
  br label %cond.end780, !dbg !10787

cond.false671:                                    ; preds = %cond.end666
  %196 = load i32, i32* %frame_bit_rate, align 4, !dbg !10789
  %div672 = sdiv i32 %196, 1, !dbg !10791
  %div673 = sdiv i32 %div672, 5, !dbg !10792
  %197 = load i32, i32* %frame_bit_rate, align 4, !dbg !10793
  %div674 = sdiv i32 %197, 1, !dbg !10794
  %mul675 = mul nsw i32 %div674, 15, !dbg !10795
  %div676 = sdiv i32 %mul675, 32, !dbg !10796
  %sub677 = sub nsw i32 %div676, 5500, !dbg !10797
  %cmp678 = icmp sgt i32 %div673, %sub677, !dbg !10798
  br i1 %cmp678, label %cond.true680, label %cond.false683, !dbg !10799

cond.true680:                                     ; preds = %cond.false671
  %198 = load i32, i32* %frame_bit_rate, align 4, !dbg !10800
  %div681 = sdiv i32 %198, 1, !dbg !10802
  %div682 = sdiv i32 %div681, 5, !dbg !10803
  br label %cond.end688, !dbg !10804

cond.false683:                                    ; preds = %cond.false671
  %199 = load i32, i32* %frame_bit_rate, align 4, !dbg !10805
  %div684 = sdiv i32 %199, 1, !dbg !10807
  %mul685 = mul nsw i32 %div684, 15, !dbg !10808
  %div686 = sdiv i32 %mul685, 32, !dbg !10809
  %sub687 = sub nsw i32 %div686, 5500, !dbg !10810
  br label %cond.end688, !dbg !10811

cond.end688:                                      ; preds = %cond.false683, %cond.true680
  %cond689 = phi i32 [ %div682, %cond.true680 ], [ %sub687, %cond.false683 ], !dbg !10812
  %200 = load i32, i32* %frame_bit_rate, align 4, !dbg !10814
  %div690 = sdiv i32 %200, 1, !dbg !10815
  %div691 = sdiv i32 %div690, 4, !dbg !10816
  %add692 = add nsw i32 3000, %div691, !dbg !10817
  %cmp693 = icmp sgt i32 %cond689, %add692, !dbg !10818
  br i1 %cmp693, label %cond.true695, label %cond.false699, !dbg !10819

cond.true695:                                     ; preds = %cond.end688
  %201 = load i32, i32* %frame_bit_rate, align 4, !dbg !10820
  %div696 = sdiv i32 %201, 1, !dbg !10822
  %div697 = sdiv i32 %div696, 4, !dbg !10823
  %add698 = add nsw i32 3000, %div697, !dbg !10824
  br label %cond.end718, !dbg !10825

cond.false699:                                    ; preds = %cond.end688
  %202 = load i32, i32* %frame_bit_rate, align 4, !dbg !10826
  %div700 = sdiv i32 %202, 1, !dbg !10828
  %div701 = sdiv i32 %div700, 5, !dbg !10829
  %203 = load i32, i32* %frame_bit_rate, align 4, !dbg !10830
  %div702 = sdiv i32 %203, 1, !dbg !10831
  %mul703 = mul nsw i32 %div702, 15, !dbg !10832
  %div704 = sdiv i32 %mul703, 32, !dbg !10833
  %sub705 = sub nsw i32 %div704, 5500, !dbg !10834
  %cmp706 = icmp sgt i32 %div701, %sub705, !dbg !10835
  br i1 %cmp706, label %cond.true708, label %cond.false711, !dbg !10836

cond.true708:                                     ; preds = %cond.false699
  %204 = load i32, i32* %frame_bit_rate, align 4, !dbg !10837
  %div709 = sdiv i32 %204, 1, !dbg !10839
  %div710 = sdiv i32 %div709, 5, !dbg !10840
  br label %cond.end716, !dbg !10841

cond.false711:                                    ; preds = %cond.false699
  %205 = load i32, i32* %frame_bit_rate, align 4, !dbg !10842
  %div712 = sdiv i32 %205, 1, !dbg !10844
  %mul713 = mul nsw i32 %div712, 15, !dbg !10845
  %div714 = sdiv i32 %mul713, 32, !dbg !10846
  %sub715 = sub nsw i32 %div714, 5500, !dbg !10847
  br label %cond.end716, !dbg !10848

cond.end716:                                      ; preds = %cond.false711, %cond.true708
  %cond717 = phi i32 [ %div710, %cond.true708 ], [ %sub715, %cond.false711 ], !dbg !10849
  br label %cond.end718, !dbg !10851

cond.end718:                                      ; preds = %cond.end716, %cond.true695
  %cond719 = phi i32 [ %add698, %cond.true695 ], [ %cond717, %cond.end716 ], !dbg !10852
  %206 = load i32, i32* %frame_bit_rate, align 4, !dbg !10854
  %div720 = sdiv i32 %206, 1, !dbg !10855
  %div721 = sdiv i32 %div720, 16, !dbg !10856
  %add722 = add nsw i32 12000, %div721, !dbg !10857
  %cmp723 = icmp sgt i32 %cond719, %add722, !dbg !10858
  br i1 %cmp723, label %cond.true725, label %cond.false729, !dbg !10859

cond.true725:                                     ; preds = %cond.end718
  %207 = load i32, i32* %frame_bit_rate, align 4, !dbg !10860
  %div726 = sdiv i32 %207, 1, !dbg !10862
  %div727 = sdiv i32 %div726, 16, !dbg !10863
  %add728 = add nsw i32 12000, %div727, !dbg !10864
  br label %cond.end778, !dbg !10865

cond.false729:                                    ; preds = %cond.end718
  %208 = load i32, i32* %frame_bit_rate, align 4, !dbg !10866
  %div730 = sdiv i32 %208, 1, !dbg !10868
  %div731 = sdiv i32 %div730, 5, !dbg !10869
  %209 = load i32, i32* %frame_bit_rate, align 4, !dbg !10870
  %div732 = sdiv i32 %209, 1, !dbg !10871
  %mul733 = mul nsw i32 %div732, 15, !dbg !10872
  %div734 = sdiv i32 %mul733, 32, !dbg !10873
  %sub735 = sub nsw i32 %div734, 5500, !dbg !10874
  %cmp736 = icmp sgt i32 %div731, %sub735, !dbg !10875
  br i1 %cmp736, label %cond.true738, label %cond.false741, !dbg !10876

cond.true738:                                     ; preds = %cond.false729
  %210 = load i32, i32* %frame_bit_rate, align 4, !dbg !10877
  %div739 = sdiv i32 %210, 1, !dbg !10879
  %div740 = sdiv i32 %div739, 5, !dbg !10880
  br label %cond.end746, !dbg !10881

cond.false741:                                    ; preds = %cond.false729
  %211 = load i32, i32* %frame_bit_rate, align 4, !dbg !10882
  %div742 = sdiv i32 %211, 1, !dbg !10884
  %mul743 = mul nsw i32 %div742, 15, !dbg !10885
  %div744 = sdiv i32 %mul743, 32, !dbg !10886
  %sub745 = sub nsw i32 %div744, 5500, !dbg !10887
  br label %cond.end746, !dbg !10888

cond.end746:                                      ; preds = %cond.false741, %cond.true738
  %cond747 = phi i32 [ %div740, %cond.true738 ], [ %sub745, %cond.false741 ], !dbg !10889
  %212 = load i32, i32* %frame_bit_rate, align 4, !dbg !10891
  %div748 = sdiv i32 %212, 1, !dbg !10892
  %div749 = sdiv i32 %div748, 4, !dbg !10893
  %add750 = add nsw i32 3000, %div749, !dbg !10894
  %cmp751 = icmp sgt i32 %cond747, %add750, !dbg !10895
  br i1 %cmp751, label %cond.true753, label %cond.false757, !dbg !10896

cond.true753:                                     ; preds = %cond.end746
  %213 = load i32, i32* %frame_bit_rate, align 4, !dbg !10897
  %div754 = sdiv i32 %213, 1, !dbg !10899
  %div755 = sdiv i32 %div754, 4, !dbg !10900
  %add756 = add nsw i32 3000, %div755, !dbg !10901
  br label %cond.end776, !dbg !10902

cond.false757:                                    ; preds = %cond.end746
  %214 = load i32, i32* %frame_bit_rate, align 4, !dbg !10903
  %div758 = sdiv i32 %214, 1, !dbg !10905
  %div759 = sdiv i32 %div758, 5, !dbg !10906
  %215 = load i32, i32* %frame_bit_rate, align 4, !dbg !10907
  %div760 = sdiv i32 %215, 1, !dbg !10908
  %mul761 = mul nsw i32 %div760, 15, !dbg !10909
  %div762 = sdiv i32 %mul761, 32, !dbg !10910
  %sub763 = sub nsw i32 %div762, 5500, !dbg !10911
  %cmp764 = icmp sgt i32 %div759, %sub763, !dbg !10912
  br i1 %cmp764, label %cond.true766, label %cond.false769, !dbg !10913

cond.true766:                                     ; preds = %cond.false757
  %216 = load i32, i32* %frame_bit_rate, align 4, !dbg !10914
  %div767 = sdiv i32 %216, 1, !dbg !10916
  %div768 = sdiv i32 %div767, 5, !dbg !10917
  br label %cond.end774, !dbg !10918

cond.false769:                                    ; preds = %cond.false757
  %217 = load i32, i32* %frame_bit_rate, align 4, !dbg !10919
  %div770 = sdiv i32 %217, 1, !dbg !10921
  %mul771 = mul nsw i32 %div770, 15, !dbg !10922
  %div772 = sdiv i32 %mul771, 32, !dbg !10923
  %sub773 = sub nsw i32 %div772, 5500, !dbg !10924
  br label %cond.end774, !dbg !10925

cond.end774:                                      ; preds = %cond.false769, %cond.true766
  %cond775 = phi i32 [ %div768, %cond.true766 ], [ %sub773, %cond.false769 ], !dbg !10926
  br label %cond.end776, !dbg !10928

cond.end776:                                      ; preds = %cond.end774, %cond.true753
  %cond777 = phi i32 [ %add756, %cond.true753 ], [ %cond775, %cond.end774 ], !dbg !10929
  br label %cond.end778, !dbg !10931

cond.end778:                                      ; preds = %cond.end776, %cond.true725
  %cond779 = phi i32 [ %add728, %cond.true725 ], [ %cond777, %cond.end776 ], !dbg !10932
  br label %cond.end780, !dbg !10934

cond.end780:                                      ; preds = %cond.end778, %cond.true670
  %cond781 = phi i32 [ 22000, %cond.true670 ], [ %cond779, %cond.end778 ], !dbg !10935
  %218 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10937
  %sample_rate782 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %218, i32 0, i32 82, !dbg !10938
  %219 = load i32, i32* %sample_rate782, align 8, !dbg !10938
  %div783 = sdiv i32 %219, 2, !dbg !10939
  %cmp784 = icmp sgt i32 %cond781, %div783, !dbg !10940
  br i1 %cmp784, label %cond.true786, label %cond.false789, !dbg !10941

cond.true786:                                     ; preds = %cond.end780
  %220 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10942
  %sample_rate787 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %220, i32 0, i32 82, !dbg !10944
  %221 = load i32, i32* %sample_rate787, align 8, !dbg !10944
  %div788 = sdiv i32 %221, 2, !dbg !10945
  br label %cond.end1012, !dbg !10946

cond.false789:                                    ; preds = %cond.end780
  %222 = load i32, i32* %frame_bit_rate, align 4, !dbg !10947
  %div790 = sdiv i32 %222, 1, !dbg !10949
  %div791 = sdiv i32 %div790, 5, !dbg !10950
  %223 = load i32, i32* %frame_bit_rate, align 4, !dbg !10951
  %div792 = sdiv i32 %223, 1, !dbg !10952
  %mul793 = mul nsw i32 %div792, 15, !dbg !10953
  %div794 = sdiv i32 %mul793, 32, !dbg !10954
  %sub795 = sub nsw i32 %div794, 5500, !dbg !10955
  %cmp796 = icmp sgt i32 %div791, %sub795, !dbg !10956
  br i1 %cmp796, label %cond.true798, label %cond.false801, !dbg !10957

cond.true798:                                     ; preds = %cond.false789
  %224 = load i32, i32* %frame_bit_rate, align 4, !dbg !10958
  %div799 = sdiv i32 %224, 1, !dbg !10960
  %div800 = sdiv i32 %div799, 5, !dbg !10961
  br label %cond.end806, !dbg !10962

cond.false801:                                    ; preds = %cond.false789
  %225 = load i32, i32* %frame_bit_rate, align 4, !dbg !10963
  %div802 = sdiv i32 %225, 1, !dbg !10965
  %mul803 = mul nsw i32 %div802, 15, !dbg !10966
  %div804 = sdiv i32 %mul803, 32, !dbg !10967
  %sub805 = sub nsw i32 %div804, 5500, !dbg !10968
  br label %cond.end806, !dbg !10969

cond.end806:                                      ; preds = %cond.false801, %cond.true798
  %cond807 = phi i32 [ %div800, %cond.true798 ], [ %sub805, %cond.false801 ], !dbg !10970
  %226 = load i32, i32* %frame_bit_rate, align 4, !dbg !10972
  %div808 = sdiv i32 %226, 1, !dbg !10973
  %div809 = sdiv i32 %div808, 4, !dbg !10974
  %add810 = add nsw i32 3000, %div809, !dbg !10975
  %cmp811 = icmp sgt i32 %cond807, %add810, !dbg !10976
  br i1 %cmp811, label %cond.true813, label %cond.false817, !dbg !10977

cond.true813:                                     ; preds = %cond.end806
  %227 = load i32, i32* %frame_bit_rate, align 4, !dbg !10978
  %div814 = sdiv i32 %227, 1, !dbg !10980
  %div815 = sdiv i32 %div814, 4, !dbg !10981
  %add816 = add nsw i32 3000, %div815, !dbg !10982
  br label %cond.end836, !dbg !10983

cond.false817:                                    ; preds = %cond.end806
  %228 = load i32, i32* %frame_bit_rate, align 4, !dbg !10984
  %div818 = sdiv i32 %228, 1, !dbg !10986
  %div819 = sdiv i32 %div818, 5, !dbg !10987
  %229 = load i32, i32* %frame_bit_rate, align 4, !dbg !10988
  %div820 = sdiv i32 %229, 1, !dbg !10989
  %mul821 = mul nsw i32 %div820, 15, !dbg !10990
  %div822 = sdiv i32 %mul821, 32, !dbg !10991
  %sub823 = sub nsw i32 %div822, 5500, !dbg !10992
  %cmp824 = icmp sgt i32 %div819, %sub823, !dbg !10993
  br i1 %cmp824, label %cond.true826, label %cond.false829, !dbg !10994

cond.true826:                                     ; preds = %cond.false817
  %230 = load i32, i32* %frame_bit_rate, align 4, !dbg !10995
  %div827 = sdiv i32 %230, 1, !dbg !10997
  %div828 = sdiv i32 %div827, 5, !dbg !10998
  br label %cond.end834, !dbg !10999

cond.false829:                                    ; preds = %cond.false817
  %231 = load i32, i32* %frame_bit_rate, align 4, !dbg !11000
  %div830 = sdiv i32 %231, 1, !dbg !11002
  %mul831 = mul nsw i32 %div830, 15, !dbg !11003
  %div832 = sdiv i32 %mul831, 32, !dbg !11004
  %sub833 = sub nsw i32 %div832, 5500, !dbg !11005
  br label %cond.end834, !dbg !11006

cond.end834:                                      ; preds = %cond.false829, %cond.true826
  %cond835 = phi i32 [ %div828, %cond.true826 ], [ %sub833, %cond.false829 ], !dbg !11007
  br label %cond.end836, !dbg !11009

cond.end836:                                      ; preds = %cond.end834, %cond.true813
  %cond837 = phi i32 [ %add816, %cond.true813 ], [ %cond835, %cond.end834 ], !dbg !11010
  %232 = load i32, i32* %frame_bit_rate, align 4, !dbg !11012
  %div838 = sdiv i32 %232, 1, !dbg !11013
  %div839 = sdiv i32 %div838, 16, !dbg !11014
  %add840 = add nsw i32 12000, %div839, !dbg !11015
  %cmp841 = icmp sgt i32 %cond837, %add840, !dbg !11016
  br i1 %cmp841, label %cond.true843, label %cond.false847, !dbg !11017

cond.true843:                                     ; preds = %cond.end836
  %233 = load i32, i32* %frame_bit_rate, align 4, !dbg !11018
  %div844 = sdiv i32 %233, 1, !dbg !11020
  %div845 = sdiv i32 %div844, 16, !dbg !11021
  %add846 = add nsw i32 12000, %div845, !dbg !11022
  br label %cond.end896, !dbg !11023

cond.false847:                                    ; preds = %cond.end836
  %234 = load i32, i32* %frame_bit_rate, align 4, !dbg !11024
  %div848 = sdiv i32 %234, 1, !dbg !11026
  %div849 = sdiv i32 %div848, 5, !dbg !11027
  %235 = load i32, i32* %frame_bit_rate, align 4, !dbg !11028
  %div850 = sdiv i32 %235, 1, !dbg !11029
  %mul851 = mul nsw i32 %div850, 15, !dbg !11030
  %div852 = sdiv i32 %mul851, 32, !dbg !11031
  %sub853 = sub nsw i32 %div852, 5500, !dbg !11032
  %cmp854 = icmp sgt i32 %div849, %sub853, !dbg !11033
  br i1 %cmp854, label %cond.true856, label %cond.false859, !dbg !11034

cond.true856:                                     ; preds = %cond.false847
  %236 = load i32, i32* %frame_bit_rate, align 4, !dbg !11035
  %div857 = sdiv i32 %236, 1, !dbg !11037
  %div858 = sdiv i32 %div857, 5, !dbg !11038
  br label %cond.end864, !dbg !11039

cond.false859:                                    ; preds = %cond.false847
  %237 = load i32, i32* %frame_bit_rate, align 4, !dbg !11040
  %div860 = sdiv i32 %237, 1, !dbg !11042
  %mul861 = mul nsw i32 %div860, 15, !dbg !11043
  %div862 = sdiv i32 %mul861, 32, !dbg !11044
  %sub863 = sub nsw i32 %div862, 5500, !dbg !11045
  br label %cond.end864, !dbg !11046

cond.end864:                                      ; preds = %cond.false859, %cond.true856
  %cond865 = phi i32 [ %div858, %cond.true856 ], [ %sub863, %cond.false859 ], !dbg !11047
  %238 = load i32, i32* %frame_bit_rate, align 4, !dbg !11049
  %div866 = sdiv i32 %238, 1, !dbg !11050
  %div867 = sdiv i32 %div866, 4, !dbg !11051
  %add868 = add nsw i32 3000, %div867, !dbg !11052
  %cmp869 = icmp sgt i32 %cond865, %add868, !dbg !11053
  br i1 %cmp869, label %cond.true871, label %cond.false875, !dbg !11054

cond.true871:                                     ; preds = %cond.end864
  %239 = load i32, i32* %frame_bit_rate, align 4, !dbg !11055
  %div872 = sdiv i32 %239, 1, !dbg !11057
  %div873 = sdiv i32 %div872, 4, !dbg !11058
  %add874 = add nsw i32 3000, %div873, !dbg !11059
  br label %cond.end894, !dbg !11060

cond.false875:                                    ; preds = %cond.end864
  %240 = load i32, i32* %frame_bit_rate, align 4, !dbg !11061
  %div876 = sdiv i32 %240, 1, !dbg !11063
  %div877 = sdiv i32 %div876, 5, !dbg !11064
  %241 = load i32, i32* %frame_bit_rate, align 4, !dbg !11065
  %div878 = sdiv i32 %241, 1, !dbg !11066
  %mul879 = mul nsw i32 %div878, 15, !dbg !11067
  %div880 = sdiv i32 %mul879, 32, !dbg !11068
  %sub881 = sub nsw i32 %div880, 5500, !dbg !11069
  %cmp882 = icmp sgt i32 %div877, %sub881, !dbg !11070
  br i1 %cmp882, label %cond.true884, label %cond.false887, !dbg !11071

cond.true884:                                     ; preds = %cond.false875
  %242 = load i32, i32* %frame_bit_rate, align 4, !dbg !11072
  %div885 = sdiv i32 %242, 1, !dbg !11074
  %div886 = sdiv i32 %div885, 5, !dbg !11075
  br label %cond.end892, !dbg !11076

cond.false887:                                    ; preds = %cond.false875
  %243 = load i32, i32* %frame_bit_rate, align 4, !dbg !11077
  %div888 = sdiv i32 %243, 1, !dbg !11079
  %mul889 = mul nsw i32 %div888, 15, !dbg !11080
  %div890 = sdiv i32 %mul889, 32, !dbg !11081
  %sub891 = sub nsw i32 %div890, 5500, !dbg !11082
  br label %cond.end892, !dbg !11083

cond.end892:                                      ; preds = %cond.false887, %cond.true884
  %cond893 = phi i32 [ %div886, %cond.true884 ], [ %sub891, %cond.false887 ], !dbg !11084
  br label %cond.end894, !dbg !11086

cond.end894:                                      ; preds = %cond.end892, %cond.true871
  %cond895 = phi i32 [ %add874, %cond.true871 ], [ %cond893, %cond.end892 ], !dbg !11087
  br label %cond.end896, !dbg !11089

cond.end896:                                      ; preds = %cond.end894, %cond.true843
  %cond897 = phi i32 [ %add846, %cond.true843 ], [ %cond895, %cond.end894 ], !dbg !11090
  %cmp898 = icmp sgt i32 %cond897, 22000, !dbg !11092
  br i1 %cmp898, label %cond.true900, label %cond.false901, !dbg !11093

cond.true900:                                     ; preds = %cond.end896
  br label %cond.end1010, !dbg !11094

cond.false901:                                    ; preds = %cond.end896
  %244 = load i32, i32* %frame_bit_rate, align 4, !dbg !11096
  %div902 = sdiv i32 %244, 1, !dbg !11098
  %div903 = sdiv i32 %div902, 5, !dbg !11099
  %245 = load i32, i32* %frame_bit_rate, align 4, !dbg !11100
  %div904 = sdiv i32 %245, 1, !dbg !11101
  %mul905 = mul nsw i32 %div904, 15, !dbg !11102
  %div906 = sdiv i32 %mul905, 32, !dbg !11103
  %sub907 = sub nsw i32 %div906, 5500, !dbg !11104
  %cmp908 = icmp sgt i32 %div903, %sub907, !dbg !11105
  br i1 %cmp908, label %cond.true910, label %cond.false913, !dbg !11106

cond.true910:                                     ; preds = %cond.false901
  %246 = load i32, i32* %frame_bit_rate, align 4, !dbg !11107
  %div911 = sdiv i32 %246, 1, !dbg !11109
  %div912 = sdiv i32 %div911, 5, !dbg !11110
  br label %cond.end918, !dbg !11111

cond.false913:                                    ; preds = %cond.false901
  %247 = load i32, i32* %frame_bit_rate, align 4, !dbg !11112
  %div914 = sdiv i32 %247, 1, !dbg !11114
  %mul915 = mul nsw i32 %div914, 15, !dbg !11115
  %div916 = sdiv i32 %mul915, 32, !dbg !11116
  %sub917 = sub nsw i32 %div916, 5500, !dbg !11117
  br label %cond.end918, !dbg !11118

cond.end918:                                      ; preds = %cond.false913, %cond.true910
  %cond919 = phi i32 [ %div912, %cond.true910 ], [ %sub917, %cond.false913 ], !dbg !11119
  %248 = load i32, i32* %frame_bit_rate, align 4, !dbg !11121
  %div920 = sdiv i32 %248, 1, !dbg !11122
  %div921 = sdiv i32 %div920, 4, !dbg !11123
  %add922 = add nsw i32 3000, %div921, !dbg !11124
  %cmp923 = icmp sgt i32 %cond919, %add922, !dbg !11125
  br i1 %cmp923, label %cond.true925, label %cond.false929, !dbg !11126

cond.true925:                                     ; preds = %cond.end918
  %249 = load i32, i32* %frame_bit_rate, align 4, !dbg !11127
  %div926 = sdiv i32 %249, 1, !dbg !11129
  %div927 = sdiv i32 %div926, 4, !dbg !11130
  %add928 = add nsw i32 3000, %div927, !dbg !11131
  br label %cond.end948, !dbg !11132

cond.false929:                                    ; preds = %cond.end918
  %250 = load i32, i32* %frame_bit_rate, align 4, !dbg !11133
  %div930 = sdiv i32 %250, 1, !dbg !11135
  %div931 = sdiv i32 %div930, 5, !dbg !11136
  %251 = load i32, i32* %frame_bit_rate, align 4, !dbg !11137
  %div932 = sdiv i32 %251, 1, !dbg !11138
  %mul933 = mul nsw i32 %div932, 15, !dbg !11139
  %div934 = sdiv i32 %mul933, 32, !dbg !11140
  %sub935 = sub nsw i32 %div934, 5500, !dbg !11141
  %cmp936 = icmp sgt i32 %div931, %sub935, !dbg !11142
  br i1 %cmp936, label %cond.true938, label %cond.false941, !dbg !11143

cond.true938:                                     ; preds = %cond.false929
  %252 = load i32, i32* %frame_bit_rate, align 4, !dbg !11144
  %div939 = sdiv i32 %252, 1, !dbg !11146
  %div940 = sdiv i32 %div939, 5, !dbg !11147
  br label %cond.end946, !dbg !11148

cond.false941:                                    ; preds = %cond.false929
  %253 = load i32, i32* %frame_bit_rate, align 4, !dbg !11149
  %div942 = sdiv i32 %253, 1, !dbg !11151
  %mul943 = mul nsw i32 %div942, 15, !dbg !11152
  %div944 = sdiv i32 %mul943, 32, !dbg !11153
  %sub945 = sub nsw i32 %div944, 5500, !dbg !11154
  br label %cond.end946, !dbg !11155

cond.end946:                                      ; preds = %cond.false941, %cond.true938
  %cond947 = phi i32 [ %div940, %cond.true938 ], [ %sub945, %cond.false941 ], !dbg !11156
  br label %cond.end948, !dbg !11158

cond.end948:                                      ; preds = %cond.end946, %cond.true925
  %cond949 = phi i32 [ %add928, %cond.true925 ], [ %cond947, %cond.end946 ], !dbg !11159
  %254 = load i32, i32* %frame_bit_rate, align 4, !dbg !11161
  %div950 = sdiv i32 %254, 1, !dbg !11162
  %div951 = sdiv i32 %div950, 16, !dbg !11163
  %add952 = add nsw i32 12000, %div951, !dbg !11164
  %cmp953 = icmp sgt i32 %cond949, %add952, !dbg !11165
  br i1 %cmp953, label %cond.true955, label %cond.false959, !dbg !11166

cond.true955:                                     ; preds = %cond.end948
  %255 = load i32, i32* %frame_bit_rate, align 4, !dbg !11167
  %div956 = sdiv i32 %255, 1, !dbg !11169
  %div957 = sdiv i32 %div956, 16, !dbg !11170
  %add958 = add nsw i32 12000, %div957, !dbg !11171
  br label %cond.end1008, !dbg !11172

cond.false959:                                    ; preds = %cond.end948
  %256 = load i32, i32* %frame_bit_rate, align 4, !dbg !11173
  %div960 = sdiv i32 %256, 1, !dbg !11175
  %div961 = sdiv i32 %div960, 5, !dbg !11176
  %257 = load i32, i32* %frame_bit_rate, align 4, !dbg !11177
  %div962 = sdiv i32 %257, 1, !dbg !11178
  %mul963 = mul nsw i32 %div962, 15, !dbg !11179
  %div964 = sdiv i32 %mul963, 32, !dbg !11180
  %sub965 = sub nsw i32 %div964, 5500, !dbg !11181
  %cmp966 = icmp sgt i32 %div961, %sub965, !dbg !11182
  br i1 %cmp966, label %cond.true968, label %cond.false971, !dbg !11183

cond.true968:                                     ; preds = %cond.false959
  %258 = load i32, i32* %frame_bit_rate, align 4, !dbg !11184
  %div969 = sdiv i32 %258, 1, !dbg !11186
  %div970 = sdiv i32 %div969, 5, !dbg !11187
  br label %cond.end976, !dbg !11188

cond.false971:                                    ; preds = %cond.false959
  %259 = load i32, i32* %frame_bit_rate, align 4, !dbg !11189
  %div972 = sdiv i32 %259, 1, !dbg !11191
  %mul973 = mul nsw i32 %div972, 15, !dbg !11192
  %div974 = sdiv i32 %mul973, 32, !dbg !11193
  %sub975 = sub nsw i32 %div974, 5500, !dbg !11194
  br label %cond.end976, !dbg !11195

cond.end976:                                      ; preds = %cond.false971, %cond.true968
  %cond977 = phi i32 [ %div970, %cond.true968 ], [ %sub975, %cond.false971 ], !dbg !11196
  %260 = load i32, i32* %frame_bit_rate, align 4, !dbg !11198
  %div978 = sdiv i32 %260, 1, !dbg !11199
  %div979 = sdiv i32 %div978, 4, !dbg !11200
  %add980 = add nsw i32 3000, %div979, !dbg !11201
  %cmp981 = icmp sgt i32 %cond977, %add980, !dbg !11202
  br i1 %cmp981, label %cond.true983, label %cond.false987, !dbg !11203

cond.true983:                                     ; preds = %cond.end976
  %261 = load i32, i32* %frame_bit_rate, align 4, !dbg !11204
  %div984 = sdiv i32 %261, 1, !dbg !11206
  %div985 = sdiv i32 %div984, 4, !dbg !11207
  %add986 = add nsw i32 3000, %div985, !dbg !11208
  br label %cond.end1006, !dbg !11209

cond.false987:                                    ; preds = %cond.end976
  %262 = load i32, i32* %frame_bit_rate, align 4, !dbg !11210
  %div988 = sdiv i32 %262, 1, !dbg !11212
  %div989 = sdiv i32 %div988, 5, !dbg !11213
  %263 = load i32, i32* %frame_bit_rate, align 4, !dbg !11214
  %div990 = sdiv i32 %263, 1, !dbg !11215
  %mul991 = mul nsw i32 %div990, 15, !dbg !11216
  %div992 = sdiv i32 %mul991, 32, !dbg !11217
  %sub993 = sub nsw i32 %div992, 5500, !dbg !11218
  %cmp994 = icmp sgt i32 %div989, %sub993, !dbg !11219
  br i1 %cmp994, label %cond.true996, label %cond.false999, !dbg !11220

cond.true996:                                     ; preds = %cond.false987
  %264 = load i32, i32* %frame_bit_rate, align 4, !dbg !11221
  %div997 = sdiv i32 %264, 1, !dbg !11223
  %div998 = sdiv i32 %div997, 5, !dbg !11224
  br label %cond.end1004, !dbg !11225

cond.false999:                                    ; preds = %cond.false987
  %265 = load i32, i32* %frame_bit_rate, align 4, !dbg !11226
  %div1000 = sdiv i32 %265, 1, !dbg !11228
  %mul1001 = mul nsw i32 %div1000, 15, !dbg !11229
  %div1002 = sdiv i32 %mul1001, 32, !dbg !11230
  %sub1003 = sub nsw i32 %div1002, 5500, !dbg !11231
  br label %cond.end1004, !dbg !11232

cond.end1004:                                     ; preds = %cond.false999, %cond.true996
  %cond1005 = phi i32 [ %div998, %cond.true996 ], [ %sub1003, %cond.false999 ], !dbg !11233
  br label %cond.end1006, !dbg !11235

cond.end1006:                                     ; preds = %cond.end1004, %cond.true983
  %cond1007 = phi i32 [ %add986, %cond.true983 ], [ %cond1005, %cond.end1004 ], !dbg !11236
  br label %cond.end1008, !dbg !11238

cond.end1008:                                     ; preds = %cond.end1006, %cond.true955
  %cond1009 = phi i32 [ %add958, %cond.true955 ], [ %cond1007, %cond.end1006 ], !dbg !11239
  br label %cond.end1010, !dbg !11241

cond.end1010:                                     ; preds = %cond.end1008, %cond.true900
  %cond1011 = phi i32 [ 22000, %cond.true900 ], [ %cond1009, %cond.end1008 ], !dbg !11242
  br label %cond.end1012, !dbg !11244

cond.end1012:                                     ; preds = %cond.end1010, %cond.true786
  %cond1013 = phi i32 [ %div788, %cond.true786 ], [ %cond1011, %cond.end1010 ], !dbg !11245
  br label %cond.end1017, !dbg !11247

cond.false1014:                                   ; preds = %cond.false557
  %266 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !11248
  %sample_rate1015 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %266, i32 0, i32 82, !dbg !11250
  %267 = load i32, i32* %sample_rate1015, align 8, !dbg !11250
  %div1016 = sdiv i32 %267, 2, !dbg !11251
  br label %cond.end1017, !dbg !11252

cond.end1017:                                     ; preds = %cond.false1014, %cond.end1012
  %cond1018 = phi i32 [ %cond1013, %cond.end1012 ], [ %div1016, %cond.false1014 ], !dbg !11253
  br label %cond.end1019, !dbg !11255

cond.end1019:                                     ; preds = %cond.end1017, %cond.true556
  %cond1020 = phi i32 [ 3000, %cond.true556 ], [ %cond1018, %cond.end1017 ], !dbg !11256
  store i32 %cond1020, i32* %bandwidth, align 4, !dbg !11258
  %268 = load i32, i32* %bandwidth, align 4, !dbg !11259
  %269 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11260
  %psy1021 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %269, i32 0, i32 17, !dbg !11261
  %cutoff1022 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy1021, i32 0, i32 5, !dbg !11262
  store i32 %268, i32* %cutoff1022, align 4, !dbg !11263
  br label %if.end1023

if.end1023:                                       ; preds = %cond.end1019, %if.then90
  %270 = load i32, i32* %bandwidth, align 4, !dbg !11264
  %mul1024 = mul nsw i32 %270, 2, !dbg !11265
  %271 = load i32, i32* %wlen, align 4, !dbg !11266
  %mul1025 = mul nsw i32 %mul1024, %271, !dbg !11267
  %272 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !11268
  %sample_rate1026 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %272, i32 0, i32 82, !dbg !11269
  %273 = load i32, i32* %sample_rate1026, align 8, !dbg !11269
  %div1027 = sdiv i32 %mul1025, %273, !dbg !11270
  store i32 %div1027, i32* %cutoff, align 4, !dbg !11271
  %274 = load i32, i32* %wlen, align 4, !dbg !11272
  %mul1028 = mul nsw i32 8000, %274, !dbg !11273
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !11274
  %sample_rate1029 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %275, i32 0, i32 82, !dbg !11275
  %276 = load i32, i32* %sample_rate1029, align 8, !dbg !11275
  %div1030 = sdiv i32 %mul1028, %276, !dbg !11276
  store i32 %div1030, i32* %pns_start_pos, align 4, !dbg !11277
  %277 = load i32, i32* %destbits, align 4, !dbg !11278
  %cmp1031 = icmp sgt i32 %277, 5800, !dbg !11279
  br i1 %cmp1031, label %cond.true1033, label %cond.false1034, !dbg !11280

cond.true1033:                                    ; preds = %if.end1023
  br label %cond.end1035, !dbg !11281

cond.false1034:                                   ; preds = %if.end1023
  %278 = load i32, i32* %destbits, align 4, !dbg !11282
  br label %cond.end1035, !dbg !11283

cond.end1035:                                     ; preds = %cond.false1034, %cond.true1033
  %cond1036 = phi i32 [ 5800, %cond.true1033 ], [ %278, %cond.false1034 ], !dbg !11284
  store i32 %cond1036, i32* %destbits, align 4, !dbg !11285
  %279 = load i32, i32* %toomanybits, align 4, !dbg !11286
  %cmp1037 = icmp sgt i32 %279, 5800, !dbg !11287
  br i1 %cmp1037, label %cond.true1039, label %cond.false1040, !dbg !11288

cond.true1039:                                    ; preds = %cond.end1035
  br label %cond.end1041, !dbg !11289

cond.false1040:                                   ; preds = %cond.end1035
  %280 = load i32, i32* %toomanybits, align 4, !dbg !11290
  br label %cond.end1041, !dbg !11291

cond.end1041:                                     ; preds = %cond.false1040, %cond.true1039
  %cond1042 = phi i32 [ 5800, %cond.true1039 ], [ %280, %cond.false1040 ], !dbg !11292
  store i32 %cond1042, i32* %toomanybits, align 4, !dbg !11293
  %281 = load i32, i32* %toofewbits, align 4, !dbg !11294
  %cmp1043 = icmp sgt i32 %281, 5800, !dbg !11295
  br i1 %cmp1043, label %cond.true1045, label %cond.false1046, !dbg !11296

cond.true1045:                                    ; preds = %cond.end1041
  br label %cond.end1047, !dbg !11297

cond.false1046:                                   ; preds = %cond.end1041
  %282 = load i32, i32* %toofewbits, align 4, !dbg !11298
  br label %cond.end1047, !dbg !11299

cond.end1047:                                     ; preds = %cond.false1046, %cond.true1045
  %cond1048 = phi i32 [ 5800, %cond.true1045 ], [ %282, %cond.false1046 ], !dbg !11300
  store i32 %cond1048, i32* %toofewbits, align 4, !dbg !11301
  store float -1.000000e+00, float* %min_spread_thr_r, align 4, !dbg !11302
  store float -1.000000e+00, float* %max_spread_thr_r, align 4, !dbg !11303
  store i32 0, i32* %w, align 4, !dbg !11304
  br label %for.cond, !dbg !11306

for.cond:                                         ; preds = %for.inc1219, %cond.end1047
  %283 = load i32, i32* %w, align 4, !dbg !11307
  %284 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11310
  %ics1049 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %284, i32 0, i32 0, !dbg !11311
  %num_windows1050 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1049, i32 0, i32 9, !dbg !11312
  %285 = load i32, i32* %num_windows1050, align 4, !dbg !11312
  %cmp1051 = icmp slt i32 %283, %285, !dbg !11313
  br i1 %cmp1051, label %for.body, label %for.end1226, !dbg !11314

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %start, align 4, !dbg !11315
  store i32 0, i32* %g, align 4, !dbg !11318
  br label %for.cond1053, !dbg !11319

for.cond1053:                                     ; preds = %for.inc1211, %for.body
  %286 = load i32, i32* %g, align 4, !dbg !11320
  %287 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11323
  %ics1054 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %287, i32 0, i32 0, !dbg !11324
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1054, i32 0, i32 8, !dbg !11325
  %288 = load i32, i32* %num_swb, align 32, !dbg !11325
  %cmp1055 = icmp slt i32 %286, %288, !dbg !11326
  br i1 %cmp1055, label %for.body1057, label %for.end1218, !dbg !11327

for.body1057:                                     ; preds = %for.cond1053
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !11328, metadata !2772), !dbg !11330
  store i32 0, i32* %nz, align 4, !dbg !11330
  call void @llvm.dbg.declare(metadata float* %uplim, metadata !11331, metadata !2772), !dbg !11332
  store float 0.000000e+00, float* %uplim, align 4, !dbg !11332
  call void @llvm.dbg.declare(metadata float* %energy, metadata !11333, metadata !2772), !dbg !11334
  store float 0.000000e+00, float* %energy, align 4, !dbg !11334
  call void @llvm.dbg.declare(metadata float* %spread, metadata !11335, metadata !2772), !dbg !11336
  store float 0.000000e+00, float* %spread, align 4, !dbg !11336
  store i32 0, i32* %w2, align 4, !dbg !11337
  br label %for.cond1058, !dbg !11339

for.cond1058:                                     ; preds = %for.inc, %for.body1057
  %289 = load i32, i32* %w2, align 4, !dbg !11340
  %290 = load i32, i32* %w, align 4, !dbg !11343
  %idxprom = sext i32 %290 to i64, !dbg !11344
  %291 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11344
  %ics1059 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %291, i32 0, i32 0, !dbg !11345
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1059, i32 0, i32 4, !dbg !11346
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !11344
  %292 = load i8, i8* %arrayidx, align 1, !dbg !11344
  %conv1060 = zext i8 %292 to i32, !dbg !11344
  %cmp1061 = icmp slt i32 %289, %conv1060, !dbg !11347
  br i1 %cmp1061, label %for.body1063, label %for.end, !dbg !11348

for.body1063:                                     ; preds = %for.cond1058
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band, metadata !11349, metadata !2772), !dbg !11351
  %293 = load i32, i32* %w, align 4, !dbg !11352
  %294 = load i32, i32* %w2, align 4, !dbg !11353
  %add1064 = add nsw i32 %293, %294, !dbg !11354
  %mul1065 = mul nsw i32 %add1064, 16, !dbg !11355
  %295 = load i32, i32* %g, align 4, !dbg !11356
  %add1066 = add nsw i32 %mul1065, %295, !dbg !11357
  %idxprom1067 = sext i32 %add1066 to i64, !dbg !11358
  %296 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11359
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %296, i32 0, i32 20, !dbg !11360
  %297 = load i32, i32* %cur_channel, align 32, !dbg !11360
  %idxprom1068 = sext i32 %297 to i64, !dbg !11358
  %298 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11358
  %psy1069 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %298, i32 0, i32 17, !dbg !11361
  %ch = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy1069, i32 0, i32 2, !dbg !11362
  %299 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch, align 16, !dbg !11362
  %arrayidx1070 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %299, i64 %idxprom1068, !dbg !11358
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx1070, i32 0, i32 0, !dbg !11363
  %arrayidx1071 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom1067, !dbg !11358
  store %struct.FFPsyBand* %arrayidx1071, %struct.FFPsyBand** %band, align 8, !dbg !11351
  %300 = load i32, i32* %start, align 4, !dbg !11364
  %301 = load i32, i32* %cutoff, align 4, !dbg !11366
  %cmp1072 = icmp sge i32 %300, %301, !dbg !11367
  br i1 %cmp1072, label %if.then1083, label %lor.lhs.false1074, !dbg !11368

lor.lhs.false1074:                                ; preds = %for.body1063
  %302 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !11369
  %energy1075 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %302, i32 0, i32 1, !dbg !11371
  %303 = load float, float* %energy1075, align 4, !dbg !11371
  %304 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !11372
  %threshold = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %304, i32 0, i32 2, !dbg !11373
  %305 = load float, float* %threshold, align 4, !dbg !11373
  %306 = load float, float* %zeroscale, align 4, !dbg !11374
  %mul1076 = fmul float %305, %306, !dbg !11375
  %cmp1077 = fcmp ole float %303, %mul1076, !dbg !11376
  br i1 %cmp1077, label %if.then1083, label %lor.lhs.false1079, !dbg !11377

lor.lhs.false1079:                                ; preds = %lor.lhs.false1074
  %307 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !11378
  %threshold1080 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %307, i32 0, i32 2, !dbg !11380
  %308 = load float, float* %threshold1080, align 4, !dbg !11380
  %cmp1081 = fcmp oeq float %308, 0.000000e+00, !dbg !11381
  br i1 %cmp1081, label %if.then1083, label %if.end1089, !dbg !11382

if.then1083:                                      ; preds = %lor.lhs.false1079, %lor.lhs.false1074, %for.body1063
  %309 = load i32, i32* %w, align 4, !dbg !11383
  %310 = load i32, i32* %w2, align 4, !dbg !11385
  %add1084 = add nsw i32 %309, %310, !dbg !11386
  %mul1085 = mul nsw i32 %add1084, 16, !dbg !11387
  %311 = load i32, i32* %g, align 4, !dbg !11388
  %add1086 = add nsw i32 %mul1085, %311, !dbg !11389
  %idxprom1087 = sext i32 %add1086 to i64, !dbg !11390
  %312 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11390
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %312, i32 0, i32 8, !dbg !11391
  %arrayidx1088 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom1087, !dbg !11390
  store i8 1, i8* %arrayidx1088, align 1, !dbg !11392
  br label %for.inc, !dbg !11393

if.end1089:                                       ; preds = %lor.lhs.false1079
  store i32 1, i32* %nz, align 4, !dbg !11394
  br label %for.inc, !dbg !11395

for.inc:                                          ; preds = %if.end1089, %if.then1083
  %313 = load i32, i32* %w2, align 4, !dbg !11396
  %inc = add nsw i32 %313, 1, !dbg !11396
  store i32 %inc, i32* %w2, align 4, !dbg !11396
  br label %for.cond1058, !dbg !11398, !llvm.loop !11399

for.end:                                          ; preds = %for.cond1058
  %314 = load i32, i32* %nz, align 4, !dbg !11401
  %tobool1090 = icmp ne i32 %314, 0, !dbg !11401
  br i1 %tobool1090, label %if.else1092, label %if.then1091, !dbg !11403

if.then1091:                                      ; preds = %for.end
  store float 0.000000e+00, float* %uplim, align 4, !dbg !11404
  br label %if.end1135, !dbg !11406

if.else1092:                                      ; preds = %for.end
  store i32 0, i32* %nz, align 4, !dbg !11407
  store i32 0, i32* %w2, align 4, !dbg !11409
  br label %for.cond1093, !dbg !11411

for.cond1093:                                     ; preds = %for.inc1132, %if.else1092
  %315 = load i32, i32* %w2, align 4, !dbg !11412
  %316 = load i32, i32* %w, align 4, !dbg !11415
  %idxprom1094 = sext i32 %316 to i64, !dbg !11416
  %317 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11416
  %ics1095 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %317, i32 0, i32 0, !dbg !11417
  %group_len1096 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1095, i32 0, i32 4, !dbg !11418
  %arrayidx1097 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1096, i64 0, i64 %idxprom1094, !dbg !11416
  %318 = load i8, i8* %arrayidx1097, align 1, !dbg !11416
  %conv1098 = zext i8 %318 to i32, !dbg !11416
  %cmp1099 = icmp slt i32 %315, %conv1098, !dbg !11419
  br i1 %cmp1099, label %for.body1101, label %for.end1134, !dbg !11420

for.body1101:                                     ; preds = %for.cond1093
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band1102, metadata !11421, metadata !2772), !dbg !11423
  %319 = load i32, i32* %w, align 4, !dbg !11424
  %320 = load i32, i32* %w2, align 4, !dbg !11425
  %add1103 = add nsw i32 %319, %320, !dbg !11426
  %mul1104 = mul nsw i32 %add1103, 16, !dbg !11427
  %321 = load i32, i32* %g, align 4, !dbg !11428
  %add1105 = add nsw i32 %mul1104, %321, !dbg !11429
  %idxprom1106 = sext i32 %add1105 to i64, !dbg !11430
  %322 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11431
  %cur_channel1107 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %322, i32 0, i32 20, !dbg !11432
  %323 = load i32, i32* %cur_channel1107, align 32, !dbg !11432
  %idxprom1108 = sext i32 %323 to i64, !dbg !11430
  %324 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11430
  %psy1109 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %324, i32 0, i32 17, !dbg !11433
  %ch1110 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy1109, i32 0, i32 2, !dbg !11434
  %325 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch1110, align 16, !dbg !11434
  %arrayidx1111 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %325, i64 %idxprom1108, !dbg !11430
  %psy_bands1112 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx1111, i32 0, i32 0, !dbg !11435
  %arrayidx1113 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands1112, i64 0, i64 %idxprom1106, !dbg !11430
  store %struct.FFPsyBand* %arrayidx1113, %struct.FFPsyBand** %band1102, align 8, !dbg !11423
  %326 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1102, align 8, !dbg !11436
  %energy1114 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %326, i32 0, i32 1, !dbg !11438
  %327 = load float, float* %energy1114, align 4, !dbg !11438
  %328 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1102, align 8, !dbg !11439
  %threshold1115 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %328, i32 0, i32 2, !dbg !11440
  %329 = load float, float* %threshold1115, align 4, !dbg !11440
  %330 = load float, float* %zeroscale, align 4, !dbg !11441
  %mul1116 = fmul float %329, %330, !dbg !11442
  %cmp1117 = fcmp ole float %327, %mul1116, !dbg !11443
  br i1 %cmp1117, label %if.then1123, label %lor.lhs.false1119, !dbg !11444

lor.lhs.false1119:                                ; preds = %for.body1101
  %331 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1102, align 8, !dbg !11445
  %threshold1120 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %331, i32 0, i32 2, !dbg !11447
  %332 = load float, float* %threshold1120, align 4, !dbg !11447
  %cmp1121 = fcmp oeq float %332, 0.000000e+00, !dbg !11448
  br i1 %cmp1121, label %if.then1123, label %if.end1124, !dbg !11449

if.then1123:                                      ; preds = %lor.lhs.false1119, %for.body1101
  br label %for.inc1132, !dbg !11450

if.end1124:                                       ; preds = %lor.lhs.false1119
  %333 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1102, align 8, !dbg !11451
  %threshold1125 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %333, i32 0, i32 2, !dbg !11452
  %334 = load float, float* %threshold1125, align 4, !dbg !11452
  %335 = load float, float* %uplim, align 4, !dbg !11453
  %add1126 = fadd float %335, %334, !dbg !11453
  store float %add1126, float* %uplim, align 4, !dbg !11453
  %336 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1102, align 8, !dbg !11454
  %energy1127 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %336, i32 0, i32 1, !dbg !11455
  %337 = load float, float* %energy1127, align 4, !dbg !11455
  %338 = load float, float* %energy, align 4, !dbg !11456
  %add1128 = fadd float %338, %337, !dbg !11456
  store float %add1128, float* %energy, align 4, !dbg !11456
  %339 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1102, align 8, !dbg !11457
  %spread1129 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %339, i32 0, i32 3, !dbg !11458
  %340 = load float, float* %spread1129, align 4, !dbg !11458
  %341 = load float, float* %spread, align 4, !dbg !11459
  %add1130 = fadd float %341, %340, !dbg !11459
  store float %add1130, float* %spread, align 4, !dbg !11459
  %342 = load i32, i32* %nz, align 4, !dbg !11460
  %inc1131 = add nsw i32 %342, 1, !dbg !11460
  store i32 %inc1131, i32* %nz, align 4, !dbg !11460
  br label %for.inc1132, !dbg !11461

for.inc1132:                                      ; preds = %if.end1124, %if.then1123
  %343 = load i32, i32* %w2, align 4, !dbg !11462
  %inc1133 = add nsw i32 %343, 1, !dbg !11462
  store i32 %inc1133, i32* %w2, align 4, !dbg !11462
  br label %for.cond1093, !dbg !11464, !llvm.loop !11465

for.end1134:                                      ; preds = %for.cond1093
  br label %if.end1135

if.end1135:                                       ; preds = %for.end1134, %if.then1091
  %344 = load float, float* %uplim, align 4, !dbg !11467
  %345 = load i32, i32* %w, align 4, !dbg !11468
  %mul1136 = mul nsw i32 %345, 16, !dbg !11469
  %346 = load i32, i32* %g, align 4, !dbg !11470
  %add1137 = add nsw i32 %mul1136, %346, !dbg !11471
  %idxprom1138 = sext i32 %add1137 to i64, !dbg !11472
  %arrayidx1139 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom1138, !dbg !11472
  store float %344, float* %arrayidx1139, align 4, !dbg !11473
  %347 = load float, float* %energy, align 4, !dbg !11474
  %348 = load i32, i32* %w, align 4, !dbg !11475
  %mul1140 = mul nsw i32 %348, 16, !dbg !11476
  %349 = load i32, i32* %g, align 4, !dbg !11477
  %add1141 = add nsw i32 %mul1140, %349, !dbg !11478
  %idxprom1142 = sext i32 %add1141 to i64, !dbg !11479
  %arrayidx1143 = getelementptr inbounds [128 x float], [128 x float]* %energies, i64 0, i64 %idxprom1142, !dbg !11479
  store float %347, float* %arrayidx1143, align 4, !dbg !11480
  %350 = load i32, i32* %nz, align 4, !dbg !11481
  %conv1144 = trunc i32 %350 to i8, !dbg !11481
  %351 = load i32, i32* %w, align 4, !dbg !11482
  %mul1145 = mul nsw i32 %351, 16, !dbg !11483
  %352 = load i32, i32* %g, align 4, !dbg !11484
  %add1146 = add nsw i32 %mul1145, %352, !dbg !11485
  %idxprom1147 = sext i32 %add1146 to i64, !dbg !11486
  %arrayidx1148 = getelementptr inbounds [128 x i8], [128 x i8]* %nzs, i64 0, i64 %idxprom1147, !dbg !11486
  store i8 %conv1144, i8* %arrayidx1148, align 1, !dbg !11487
  %353 = load i32, i32* %nz, align 4, !dbg !11488
  %tobool1149 = icmp ne i32 %353, 0, !dbg !11489
  %lnot = xor i1 %tobool1149, true, !dbg !11489
  %lnot.ext = zext i1 %lnot to i32, !dbg !11489
  %conv1150 = trunc i32 %lnot.ext to i8, !dbg !11489
  %354 = load i32, i32* %w, align 4, !dbg !11490
  %mul1151 = mul nsw i32 %354, 16, !dbg !11491
  %355 = load i32, i32* %g, align 4, !dbg !11492
  %add1152 = add nsw i32 %mul1151, %355, !dbg !11493
  %idxprom1153 = sext i32 %add1152 to i64, !dbg !11494
  %356 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11494
  %zeroes1154 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %356, i32 0, i32 8, !dbg !11495
  %arrayidx1155 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1154, i64 0, i64 %idxprom1153, !dbg !11494
  store i8 %conv1150, i8* %arrayidx1155, align 1, !dbg !11496
  %357 = load i32, i32* %nz, align 4, !dbg !11497
  %358 = load i32, i32* %allz, align 4, !dbg !11498
  %or = or i32 %358, %357, !dbg !11498
  store i32 %or, i32* %allz, align 4, !dbg !11498
  %359 = load i32, i32* %nz, align 4, !dbg !11499
  %tobool1156 = icmp ne i32 %359, 0, !dbg !11499
  br i1 %tobool1156, label %land.lhs.true1157, label %if.end1210, !dbg !11501

land.lhs.true1157:                                ; preds = %if.end1135
  %360 = load i32, i32* %w, align 4, !dbg !11502
  %mul1158 = mul nsw i32 %360, 16, !dbg !11504
  %361 = load i32, i32* %g, align 4, !dbg !11505
  %add1159 = add nsw i32 %mul1158, %361, !dbg !11506
  %idxprom1160 = sext i32 %add1159 to i64, !dbg !11507
  %362 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11507
  %can_pns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %362, i32 0, i32 9, !dbg !11508
  %arrayidx1161 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns, i64 0, i64 %idxprom1160, !dbg !11507
  %363 = load i8, i8* %arrayidx1161, align 1, !dbg !11507
  %conv1162 = zext i8 %363 to i32, !dbg !11507
  %tobool1163 = icmp ne i32 %conv1162, 0, !dbg !11507
  br i1 %tobool1163, label %if.then1164, label %if.end1210, !dbg !11509

if.then1164:                                      ; preds = %land.lhs.true1157
  %364 = load float, float* %energy, align 4, !dbg !11510
  %365 = load i32, i32* %nz, align 4, !dbg !11512
  %conv1165 = sitofp i32 %365 to float, !dbg !11512
  %mul1166 = fmul float %364, %conv1165, !dbg !11513
  %366 = load float, float* %uplim, align 4, !dbg !11514
  %367 = load float, float* %spread, align 4, !dbg !11515
  %mul1167 = fmul float %366, %367, !dbg !11516
  %div1168 = fdiv float %mul1166, %mul1167, !dbg !11517
  %368 = load i32, i32* %w, align 4, !dbg !11518
  %mul1169 = mul nsw i32 %368, 16, !dbg !11519
  %369 = load i32, i32* %g, align 4, !dbg !11520
  %add1170 = add nsw i32 %mul1169, %369, !dbg !11521
  %idxprom1171 = sext i32 %add1170 to i64, !dbg !11522
  %arrayidx1172 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom1171, !dbg !11522
  store float %div1168, float* %arrayidx1172, align 4, !dbg !11523
  %370 = load float, float* %min_spread_thr_r, align 4, !dbg !11524
  %cmp1173 = fcmp olt float %370, 0.000000e+00, !dbg !11526
  br i1 %cmp1173, label %if.then1175, label %if.else1180, !dbg !11527

if.then1175:                                      ; preds = %if.then1164
  %371 = load i32, i32* %w, align 4, !dbg !11528
  %mul1176 = mul nsw i32 %371, 16, !dbg !11530
  %372 = load i32, i32* %g, align 4, !dbg !11531
  %add1177 = add nsw i32 %mul1176, %372, !dbg !11532
  %idxprom1178 = sext i32 %add1177 to i64, !dbg !11533
  %arrayidx1179 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom1178, !dbg !11533
  %373 = load float, float* %arrayidx1179, align 4, !dbg !11533
  store float %373, float* %max_spread_thr_r, align 4, !dbg !11534
  store float %373, float* %min_spread_thr_r, align 4, !dbg !11535
  br label %if.end1209, !dbg !11536

if.else1180:                                      ; preds = %if.then1164
  %374 = load float, float* %min_spread_thr_r, align 4, !dbg !11537
  %375 = load i32, i32* %w, align 4, !dbg !11539
  %mul1181 = mul nsw i32 %375, 16, !dbg !11540
  %376 = load i32, i32* %g, align 4, !dbg !11541
  %add1182 = add nsw i32 %mul1181, %376, !dbg !11542
  %idxprom1183 = sext i32 %add1182 to i64, !dbg !11543
  %arrayidx1184 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom1183, !dbg !11543
  %377 = load float, float* %arrayidx1184, align 4, !dbg !11543
  %cmp1185 = fcmp ogt float %374, %377, !dbg !11544
  br i1 %cmp1185, label %cond.true1187, label %cond.false1192, !dbg !11545

cond.true1187:                                    ; preds = %if.else1180
  %378 = load i32, i32* %w, align 4, !dbg !11546
  %mul1188 = mul nsw i32 %378, 16, !dbg !11548
  %379 = load i32, i32* %g, align 4, !dbg !11549
  %add1189 = add nsw i32 %mul1188, %379, !dbg !11550
  %idxprom1190 = sext i32 %add1189 to i64, !dbg !11551
  %arrayidx1191 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom1190, !dbg !11551
  %380 = load float, float* %arrayidx1191, align 4, !dbg !11551
  br label %cond.end1193, !dbg !11552

cond.false1192:                                   ; preds = %if.else1180
  %381 = load float, float* %min_spread_thr_r, align 4, !dbg !11553
  br label %cond.end1193, !dbg !11555

cond.end1193:                                     ; preds = %cond.false1192, %cond.true1187
  %cond1194 = phi float [ %380, %cond.true1187 ], [ %381, %cond.false1192 ], !dbg !11556
  store float %cond1194, float* %min_spread_thr_r, align 4, !dbg !11558
  %382 = load float, float* %max_spread_thr_r, align 4, !dbg !11559
  %383 = load i32, i32* %w, align 4, !dbg !11560
  %mul1195 = mul nsw i32 %383, 16, !dbg !11561
  %384 = load i32, i32* %g, align 4, !dbg !11562
  %add1196 = add nsw i32 %mul1195, %384, !dbg !11563
  %idxprom1197 = sext i32 %add1196 to i64, !dbg !11564
  %arrayidx1198 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom1197, !dbg !11564
  %385 = load float, float* %arrayidx1198, align 4, !dbg !11564
  %cmp1199 = fcmp ogt float %382, %385, !dbg !11565
  br i1 %cmp1199, label %cond.true1201, label %cond.false1202, !dbg !11566

cond.true1201:                                    ; preds = %cond.end1193
  %386 = load float, float* %max_spread_thr_r, align 4, !dbg !11567
  br label %cond.end1207, !dbg !11568

cond.false1202:                                   ; preds = %cond.end1193
  %387 = load i32, i32* %w, align 4, !dbg !11569
  %mul1203 = mul nsw i32 %387, 16, !dbg !11570
  %388 = load i32, i32* %g, align 4, !dbg !11571
  %add1204 = add nsw i32 %mul1203, %388, !dbg !11572
  %idxprom1205 = sext i32 %add1204 to i64, !dbg !11573
  %arrayidx1206 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom1205, !dbg !11573
  %389 = load float, float* %arrayidx1206, align 4, !dbg !11573
  br label %cond.end1207, !dbg !11574

cond.end1207:                                     ; preds = %cond.false1202, %cond.true1201
  %cond1208 = phi float [ %386, %cond.true1201 ], [ %389, %cond.false1202 ], !dbg !11575
  store float %cond1208, float* %max_spread_thr_r, align 4, !dbg !11576
  br label %if.end1209

if.end1209:                                       ; preds = %cond.end1207, %if.then1175
  br label %if.end1210, !dbg !11577

if.end1210:                                       ; preds = %if.end1209, %land.lhs.true1157, %if.end1135
  br label %for.inc1211, !dbg !11578

for.inc1211:                                      ; preds = %if.end1210
  %390 = load i32, i32* %g, align 4, !dbg !11579
  %inc1212 = add nsw i32 %390, 1, !dbg !11579
  store i32 %inc1212, i32* %g, align 4, !dbg !11579
  %idxprom1213 = sext i32 %390 to i64, !dbg !11581
  %391 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11581
  %ics1214 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %391, i32 0, i32 0, !dbg !11582
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1214, i32 0, i32 7, !dbg !11583
  %392 = load i8*, i8** %swb_sizes, align 8, !dbg !11583
  %arrayidx1215 = getelementptr inbounds i8, i8* %392, i64 %idxprom1213, !dbg !11581
  %393 = load i8, i8* %arrayidx1215, align 1, !dbg !11581
  %conv1216 = zext i8 %393 to i32, !dbg !11581
  %394 = load i32, i32* %start, align 4, !dbg !11584
  %add1217 = add nsw i32 %394, %conv1216, !dbg !11584
  store i32 %add1217, i32* %start, align 4, !dbg !11584
  br label %for.cond1053, !dbg !11585, !llvm.loop !11586

for.end1218:                                      ; preds = %for.cond1053
  br label %for.inc1219, !dbg !11588

for.inc1219:                                      ; preds = %for.end1218
  %395 = load i32, i32* %w, align 4, !dbg !11589
  %idxprom1220 = sext i32 %395 to i64, !dbg !11591
  %396 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11591
  %ics1221 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %396, i32 0, i32 0, !dbg !11592
  %group_len1222 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1221, i32 0, i32 4, !dbg !11593
  %arrayidx1223 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1222, i64 0, i64 %idxprom1220, !dbg !11591
  %397 = load i8, i8* %arrayidx1223, align 1, !dbg !11591
  %conv1224 = zext i8 %397 to i32, !dbg !11591
  %398 = load i32, i32* %w, align 4, !dbg !11594
  %add1225 = add nsw i32 %398, %conv1224, !dbg !11594
  store i32 %add1225, i32* %w, align 4, !dbg !11594
  br label %for.cond, !dbg !11595, !llvm.loop !11596

for.end1226:                                      ; preds = %for.cond
  store i32 65535, i32* %minscaler, align 4, !dbg !11598
  store i32 0, i32* %w, align 4, !dbg !11599
  br label %for.cond1227, !dbg !11600

for.cond1227:                                     ; preds = %for.inc1304, %for.end1226
  %399 = load i32, i32* %w, align 4, !dbg !11601
  %400 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11603
  %ics1228 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %400, i32 0, i32 0, !dbg !11604
  %num_windows1229 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1228, i32 0, i32 9, !dbg !11605
  %401 = load i32, i32* %num_windows1229, align 4, !dbg !11605
  %cmp1230 = icmp slt i32 %399, %401, !dbg !11606
  br i1 %cmp1230, label %for.body1232, label %for.end1311, !dbg !11607

for.body1232:                                     ; preds = %for.cond1227
  store i32 0, i32* %g, align 4, !dbg !11608
  br label %for.cond1233, !dbg !11609

for.cond1233:                                     ; preds = %for.inc1301, %for.body1232
  %402 = load i32, i32* %g, align 4, !dbg !11610
  %403 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11612
  %ics1234 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %403, i32 0, i32 0, !dbg !11613
  %num_swb1235 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1234, i32 0, i32 8, !dbg !11614
  %404 = load i32, i32* %num_swb1235, align 32, !dbg !11614
  %cmp1236 = icmp slt i32 %402, %404, !dbg !11615
  br i1 %cmp1236, label %for.body1238, label %for.end1303, !dbg !11616

for.body1238:                                     ; preds = %for.cond1233
  %405 = load i32, i32* %w, align 4, !dbg !11617
  %mul1239 = mul nsw i32 %405, 16, !dbg !11619
  %406 = load i32, i32* %g, align 4, !dbg !11620
  %add1240 = add nsw i32 %mul1239, %406, !dbg !11621
  %idxprom1241 = sext i32 %add1240 to i64, !dbg !11622
  %407 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11622
  %zeroes1242 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %407, i32 0, i32 8, !dbg !11623
  %arrayidx1243 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1242, i64 0, i64 %idxprom1241, !dbg !11622
  %408 = load i8, i8* %arrayidx1243, align 1, !dbg !11622
  %tobool1244 = icmp ne i8 %408, 0, !dbg !11622
  br i1 %tobool1244, label %if.then1245, label %if.end1250, !dbg !11624

if.then1245:                                      ; preds = %for.body1238
  %409 = load i32, i32* %w, align 4, !dbg !11625
  %mul1246 = mul nsw i32 %409, 16, !dbg !11627
  %410 = load i32, i32* %g, align 4, !dbg !11628
  %add1247 = add nsw i32 %mul1246, %410, !dbg !11629
  %idxprom1248 = sext i32 %add1247 to i64, !dbg !11630
  %411 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11630
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %411, i32 0, i32 7, !dbg !11631
  %arrayidx1249 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom1248, !dbg !11630
  store i32 140, i32* %arrayidx1249, align 4, !dbg !11632
  br label %for.inc1301, !dbg !11633

if.end1250:                                       ; preds = %for.body1238
  %412 = load i32, i32* %w, align 4, !dbg !11634
  %mul1251 = mul nsw i32 %412, 16, !dbg !11635
  %413 = load i32, i32* %g, align 4, !dbg !11636
  %add1252 = add nsw i32 %mul1251, %413, !dbg !11637
  %idxprom1253 = sext i32 %add1252 to i64, !dbg !11638
  %arrayidx1254 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom1253, !dbg !11638
  %414 = load float, float* %arrayidx1254, align 4, !dbg !11638
  %cmp1255 = fcmp ogt float 0x3F547AE140000000, %414, !dbg !11639
  br i1 %cmp1255, label %cond.true1257, label %cond.false1258, !dbg !11640

cond.true1257:                                    ; preds = %if.end1250
  br label %cond.end1263, !dbg !11641

cond.false1258:                                   ; preds = %if.end1250
  %415 = load i32, i32* %w, align 4, !dbg !11643
  %mul1259 = mul nsw i32 %415, 16, !dbg !11645
  %416 = load i32, i32* %g, align 4, !dbg !11646
  %add1260 = add nsw i32 %mul1259, %416, !dbg !11647
  %idxprom1261 = sext i32 %add1260 to i64, !dbg !11648
  %arrayidx1262 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom1261, !dbg !11648
  %417 = load float, float* %arrayidx1262, align 4, !dbg !11648
  br label %cond.end1263, !dbg !11649

cond.end1263:                                     ; preds = %cond.false1258, %cond.true1257
  %cond1264 = phi float [ 0x3F547AE140000000, %cond.true1257 ], [ %417, %cond.false1258 ], !dbg !11650
  %418 = load i32, i32* %g, align 4, !dbg !11652
  %idxprom1265 = sext i32 %418 to i64, !dbg !11653
  %419 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11653
  %ics1266 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %419, i32 0, i32 0, !dbg !11654
  %swb_sizes1267 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1266, i32 0, i32 7, !dbg !11655
  %420 = load i8*, i8** %swb_sizes1267, align 8, !dbg !11655
  %arrayidx1268 = getelementptr inbounds i8, i8* %420, i64 %idxprom1265, !dbg !11653
  %421 = load i8, i8* %arrayidx1268, align 1, !dbg !11653
  %conv1269 = zext i8 %421 to i32, !dbg !11653
  %conv1270 = sitofp i32 %conv1269 to float, !dbg !11653
  %div1271 = fdiv float %cond1264, %conv1270, !dbg !11656
  %call1272 = call float @log2f(float %div1271) #9, !dbg !11657
  %conv1273 = fpext float %call1272 to double, !dbg !11657
  %mul1274 = fmul double 1.750000e+00, %conv1273, !dbg !11658
  %add1275 = fadd double 1.400000e+02, %mul1274, !dbg !11659
  %422 = load float, float* %sfoffs, align 4, !dbg !11660
  %conv1276 = fpext float %422 to double, !dbg !11660
  %add1277 = fadd double %add1275, %conv1276, !dbg !11661
  %conv1278 = fptosi double %add1277 to i32, !dbg !11662
  store i32 %conv1278, i32* %a.addr.i3506, align 4, !dbg !11663
  store i32 60, i32* %amin.addr.i3507, align 4, !dbg !11663
  store i32 255, i32* %amax.addr.i3508, align 4, !dbg !11663
  %423 = load i32, i32* %a.addr.i3506, align 4, !dbg !11664
  %424 = load i32, i32* %amin.addr.i3507, align 4, !dbg !11665
  %cmp.i = icmp slt i32 %423, %424, !dbg !11666
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !11667

if.then.i:                                        ; preds = %cond.end1263
  %425 = load i32, i32* %amin.addr.i3507, align 4, !dbg !11668
  store i32 %425, i32* %retval.i, align 4, !dbg !11669
  br label %av_clip_c.exit, !dbg !11669

if.else.i:                                        ; preds = %cond.end1263
  %426 = load i32, i32* %a.addr.i3506, align 4, !dbg !11670
  %427 = load i32, i32* %amax.addr.i3508, align 4, !dbg !11671
  %cmp1.i = icmp sgt i32 %426, %427, !dbg !11672
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !11673

if.then2.i:                                       ; preds = %if.else.i
  %428 = load i32, i32* %amax.addr.i3508, align 4, !dbg !11674
  store i32 %428, i32* %retval.i, align 4, !dbg !11675
  br label %av_clip_c.exit, !dbg !11675

if.else3.i:                                       ; preds = %if.else.i
  %429 = load i32, i32* %a.addr.i3506, align 4, !dbg !11676
  store i32 %429, i32* %retval.i, align 4, !dbg !11677
  br label %av_clip_c.exit, !dbg !11677

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %430 = load i32, i32* %retval.i, align 4, !dbg !11678
  %431 = load i32, i32* %w, align 4, !dbg !11679
  %mul1280 = mul nsw i32 %431, 16, !dbg !11680
  %432 = load i32, i32* %g, align 4, !dbg !11681
  %add1281 = add nsw i32 %mul1280, %432, !dbg !11682
  %idxprom1282 = sext i32 %add1281 to i64, !dbg !11683
  %433 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11683
  %sf_idx1283 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %433, i32 0, i32 7, !dbg !11684
  %arrayidx1284 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1283, i64 0, i64 %idxprom1282, !dbg !11683
  store i32 %430, i32* %arrayidx1284, align 4, !dbg !11685
  %434 = load i32, i32* %minscaler, align 4, !dbg !11686
  %435 = load i32, i32* %w, align 4, !dbg !11687
  %mul1285 = mul nsw i32 %435, 16, !dbg !11688
  %436 = load i32, i32* %g, align 4, !dbg !11689
  %add1286 = add nsw i32 %mul1285, %436, !dbg !11690
  %idxprom1287 = sext i32 %add1286 to i64, !dbg !11691
  %437 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11691
  %sf_idx1288 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %437, i32 0, i32 7, !dbg !11692
  %arrayidx1289 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1288, i64 0, i64 %idxprom1287, !dbg !11691
  %438 = load i32, i32* %arrayidx1289, align 4, !dbg !11691
  %cmp1290 = icmp sgt i32 %434, %438, !dbg !11693
  br i1 %cmp1290, label %cond.true1292, label %cond.false1298, !dbg !11694

cond.true1292:                                    ; preds = %av_clip_c.exit
  %439 = load i32, i32* %w, align 4, !dbg !11695
  %mul1293 = mul nsw i32 %439, 16, !dbg !11696
  %440 = load i32, i32* %g, align 4, !dbg !11697
  %add1294 = add nsw i32 %mul1293, %440, !dbg !11698
  %idxprom1295 = sext i32 %add1294 to i64, !dbg !11699
  %441 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11699
  %sf_idx1296 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %441, i32 0, i32 7, !dbg !11700
  %arrayidx1297 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1296, i64 0, i64 %idxprom1295, !dbg !11699
  %442 = load i32, i32* %arrayidx1297, align 4, !dbg !11699
  br label %cond.end1299, !dbg !11701

cond.false1298:                                   ; preds = %av_clip_c.exit
  %443 = load i32, i32* %minscaler, align 4, !dbg !11702
  br label %cond.end1299, !dbg !11703

cond.end1299:                                     ; preds = %cond.false1298, %cond.true1292
  %cond1300 = phi i32 [ %442, %cond.true1292 ], [ %443, %cond.false1298 ], !dbg !11704
  store i32 %cond1300, i32* %minscaler, align 4, !dbg !11705
  br label %for.inc1301, !dbg !11706

for.inc1301:                                      ; preds = %cond.end1299, %if.then1245
  %444 = load i32, i32* %g, align 4, !dbg !11707
  %inc1302 = add nsw i32 %444, 1, !dbg !11707
  store i32 %inc1302, i32* %g, align 4, !dbg !11707
  br label %for.cond1233, !dbg !11709, !llvm.loop !11710

for.end1303:                                      ; preds = %for.cond1233
  br label %for.inc1304, !dbg !11712

for.inc1304:                                      ; preds = %for.end1303
  %445 = load i32, i32* %w, align 4, !dbg !11713
  %idxprom1305 = sext i32 %445 to i64, !dbg !11715
  %446 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11715
  %ics1306 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %446, i32 0, i32 0, !dbg !11716
  %group_len1307 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1306, i32 0, i32 4, !dbg !11717
  %arrayidx1308 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1307, i64 0, i64 %idxprom1305, !dbg !11715
  %447 = load i8, i8* %arrayidx1308, align 1, !dbg !11715
  %conv1309 = zext i8 %447 to i32, !dbg !11715
  %448 = load i32, i32* %w, align 4, !dbg !11718
  %add1310 = add nsw i32 %448, %conv1309, !dbg !11718
  store i32 %add1310, i32* %w, align 4, !dbg !11718
  br label %for.cond1227, !dbg !11719, !llvm.loop !11720

for.end1311:                                      ; preds = %for.cond1227
  %449 = load i32, i32* %minscaler, align 4, !dbg !11722
  store i32 %449, i32* %a.addr.i3510, align 4, !dbg !11723
  store i32 104, i32* %amin.addr.i3511, align 4, !dbg !11723
  store i32 219, i32* %amax.addr.i3512, align 4, !dbg !11723
  %450 = load i32, i32* %a.addr.i3510, align 4, !dbg !11724
  %451 = load i32, i32* %amin.addr.i3511, align 4, !dbg !11725
  %cmp.i3513 = icmp slt i32 %450, %451, !dbg !11726
  br i1 %cmp.i3513, label %if.then.i3514, label %if.else.i3516, !dbg !11727

if.then.i3514:                                    ; preds = %for.end1311
  %452 = load i32, i32* %amin.addr.i3511, align 4, !dbg !11728
  store i32 %452, i32* %retval.i3509, align 4, !dbg !11729
  br label %av_clip_c.exit3519, !dbg !11729

if.else.i3516:                                    ; preds = %for.end1311
  %453 = load i32, i32* %a.addr.i3510, align 4, !dbg !11730
  %454 = load i32, i32* %amax.addr.i3512, align 4, !dbg !11731
  %cmp1.i3515 = icmp sgt i32 %453, %454, !dbg !11732
  br i1 %cmp1.i3515, label %if.then2.i3517, label %if.else3.i3518, !dbg !11733

if.then2.i3517:                                   ; preds = %if.else.i3516
  %455 = load i32, i32* %amax.addr.i3512, align 4, !dbg !11734
  store i32 %455, i32* %retval.i3509, align 4, !dbg !11735
  br label %av_clip_c.exit3519, !dbg !11735

if.else3.i3518:                                   ; preds = %if.else.i3516
  %456 = load i32, i32* %a.addr.i3510, align 4, !dbg !11736
  store i32 %456, i32* %retval.i3509, align 4, !dbg !11737
  br label %av_clip_c.exit3519, !dbg !11737

av_clip_c.exit3519:                               ; preds = %if.then.i3514, %if.then2.i3517, %if.else3.i3518
  %457 = load i32, i32* %retval.i3509, align 4, !dbg !11738
  store i32 %457, i32* %minscaler, align 4, !dbg !11739
  store i32 0, i32* %w, align 4, !dbg !11740
  br label %for.cond1313, !dbg !11741

for.cond1313:                                     ; preds = %for.inc1349, %av_clip_c.exit3519
  %458 = load i32, i32* %w, align 4, !dbg !11742
  %459 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11744
  %ics1314 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %459, i32 0, i32 0, !dbg !11745
  %num_windows1315 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1314, i32 0, i32 9, !dbg !11746
  %460 = load i32, i32* %num_windows1315, align 4, !dbg !11746
  %cmp1316 = icmp slt i32 %458, %460, !dbg !11747
  br i1 %cmp1316, label %for.body1318, label %for.end1356, !dbg !11748

for.body1318:                                     ; preds = %for.cond1313
  store i32 0, i32* %g, align 4, !dbg !11749
  br label %for.cond1319, !dbg !11750

for.cond1319:                                     ; preds = %for.inc1346, %for.body1318
  %461 = load i32, i32* %g, align 4, !dbg !11751
  %462 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11753
  %ics1320 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %462, i32 0, i32 0, !dbg !11754
  %num_swb1321 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1320, i32 0, i32 8, !dbg !11755
  %463 = load i32, i32* %num_swb1321, align 32, !dbg !11755
  %cmp1322 = icmp slt i32 %461, %463, !dbg !11756
  br i1 %cmp1322, label %for.body1324, label %for.end1348, !dbg !11757

for.body1324:                                     ; preds = %for.cond1319
  %464 = load i32, i32* %w, align 4, !dbg !11758
  %mul1325 = mul nsw i32 %464, 16, !dbg !11759
  %465 = load i32, i32* %g, align 4, !dbg !11760
  %add1326 = add nsw i32 %mul1325, %465, !dbg !11761
  %idxprom1327 = sext i32 %add1326 to i64, !dbg !11762
  %466 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11762
  %zeroes1328 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %466, i32 0, i32 8, !dbg !11763
  %arrayidx1329 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1328, i64 0, i64 %idxprom1327, !dbg !11762
  %467 = load i8, i8* %arrayidx1329, align 1, !dbg !11762
  %tobool1330 = icmp ne i8 %467, 0, !dbg !11762
  br i1 %tobool1330, label %if.end1345, label %if.then1331, !dbg !11764

if.then1331:                                      ; preds = %for.body1324
  %468 = load i32, i32* %w, align 4, !dbg !11765
  %mul1332 = mul nsw i32 %468, 16, !dbg !11766
  %469 = load i32, i32* %g, align 4, !dbg !11767
  %add1333 = add nsw i32 %mul1332, %469, !dbg !11768
  %idxprom1334 = sext i32 %add1333 to i64, !dbg !11769
  %470 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11769
  %sf_idx1335 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %470, i32 0, i32 7, !dbg !11770
  %arrayidx1336 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1335, i64 0, i64 %idxprom1334, !dbg !11769
  %471 = load i32, i32* %arrayidx1336, align 4, !dbg !11769
  %472 = load i32, i32* %minscaler, align 4, !dbg !11771
  %473 = load i32, i32* %minscaler, align 4, !dbg !11772
  %add1337 = add nsw i32 %473, 60, !dbg !11773
  %sub1338 = sub nsw i32 %add1337, 1, !dbg !11774
  store i32 %471, i32* %a.addr.i3521, align 4, !dbg !11775
  store i32 %472, i32* %amin.addr.i3522, align 4, !dbg !11775
  store i32 %sub1338, i32* %amax.addr.i3523, align 4, !dbg !11775
  %474 = load i32, i32* %a.addr.i3521, align 4, !dbg !11776
  %475 = load i32, i32* %amin.addr.i3522, align 4, !dbg !11777
  %cmp.i3524 = icmp slt i32 %474, %475, !dbg !11778
  br i1 %cmp.i3524, label %if.then.i3525, label %if.else.i3527, !dbg !11779

if.then.i3525:                                    ; preds = %if.then1331
  %476 = load i32, i32* %amin.addr.i3522, align 4, !dbg !11780
  store i32 %476, i32* %retval.i3520, align 4, !dbg !11781
  br label %av_clip_c.exit3530, !dbg !11781

if.else.i3527:                                    ; preds = %if.then1331
  %477 = load i32, i32* %a.addr.i3521, align 4, !dbg !11782
  %478 = load i32, i32* %amax.addr.i3523, align 4, !dbg !11783
  %cmp1.i3526 = icmp sgt i32 %477, %478, !dbg !11784
  br i1 %cmp1.i3526, label %if.then2.i3528, label %if.else3.i3529, !dbg !11785

if.then2.i3528:                                   ; preds = %if.else.i3527
  %479 = load i32, i32* %amax.addr.i3523, align 4, !dbg !11786
  store i32 %479, i32* %retval.i3520, align 4, !dbg !11787
  br label %av_clip_c.exit3530, !dbg !11787

if.else3.i3529:                                   ; preds = %if.else.i3527
  %480 = load i32, i32* %a.addr.i3521, align 4, !dbg !11788
  store i32 %480, i32* %retval.i3520, align 4, !dbg !11789
  br label %av_clip_c.exit3530, !dbg !11789

av_clip_c.exit3530:                               ; preds = %if.then.i3525, %if.then2.i3528, %if.else3.i3529
  %481 = load i32, i32* %retval.i3520, align 4, !dbg !11790
  %482 = load i32, i32* %w, align 4, !dbg !11791
  %mul1340 = mul nsw i32 %482, 16, !dbg !11792
  %483 = load i32, i32* %g, align 4, !dbg !11793
  %add1341 = add nsw i32 %mul1340, %483, !dbg !11794
  %idxprom1342 = sext i32 %add1341 to i64, !dbg !11795
  %484 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11795
  %sf_idx1343 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %484, i32 0, i32 7, !dbg !11796
  %arrayidx1344 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1343, i64 0, i64 %idxprom1342, !dbg !11795
  store i32 %481, i32* %arrayidx1344, align 4, !dbg !11797
  br label %if.end1345, !dbg !11795

if.end1345:                                       ; preds = %av_clip_c.exit3530, %for.body1324
  br label %for.inc1346, !dbg !11798

for.inc1346:                                      ; preds = %if.end1345
  %485 = load i32, i32* %g, align 4, !dbg !11800
  %inc1347 = add nsw i32 %485, 1, !dbg !11800
  store i32 %inc1347, i32* %g, align 4, !dbg !11800
  br label %for.cond1319, !dbg !11802, !llvm.loop !11803

for.end1348:                                      ; preds = %for.cond1319
  br label %for.inc1349, !dbg !11805

for.inc1349:                                      ; preds = %for.end1348
  %486 = load i32, i32* %w, align 4, !dbg !11807
  %idxprom1350 = sext i32 %486 to i64, !dbg !11809
  %487 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11809
  %ics1351 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %487, i32 0, i32 0, !dbg !11810
  %group_len1352 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1351, i32 0, i32 4, !dbg !11811
  %arrayidx1353 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1352, i64 0, i64 %idxprom1350, !dbg !11809
  %488 = load i8, i8* %arrayidx1353, align 1, !dbg !11809
  %conv1354 = zext i8 %488 to i32, !dbg !11809
  %489 = load i32, i32* %w, align 4, !dbg !11812
  %add1355 = add nsw i32 %489, %conv1354, !dbg !11812
  store i32 %add1355, i32* %w, align 4, !dbg !11812
  br label %for.cond1313, !dbg !11813, !llvm.loop !11814

for.end1356:                                      ; preds = %for.cond1313
  %490 = load i32, i32* %allz, align 4, !dbg !11816
  %tobool1357 = icmp ne i32 %490, 0, !dbg !11816
  br i1 %tobool1357, label %if.end1359, label %if.then1358, !dbg !11818

if.then1358:                                      ; preds = %for.end1356
  br label %for.end3499, !dbg !11819

if.end1359:                                       ; preds = %for.end1356
  %491 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11820
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %491, i32 0, i32 32, !dbg !11821
  %492 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !11821
  %493 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11822
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %493, i32 0, i32 29, !dbg !11823
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i32 0, i32 0, !dbg !11822
  %494 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11824
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %494, i32 0, i32 14, !dbg !11825
  %arraydecay1360 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !11824
  call void %492(float* %arraydecay, float* %arraydecay1360, i32 1024), !dbg !11820
  %495 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11826
  call void @ff_quantize_band_cost_cache_init(%struct.AACEncContext* %495), !dbg !11827
  store i32 0, i32* %i, align 4, !dbg !11828
  br label %for.cond1361, !dbg !11830

for.cond1361:                                     ; preds = %for.inc1368, %if.end1359
  %496 = load i32, i32* %i, align 4, !dbg !11831
  %conv1362 = sext i32 %496 to i64, !dbg !11831
  %cmp1363 = icmp ult i64 %conv1362, 128, !dbg !11834
  br i1 %cmp1363, label %for.body1365, label %for.end1370, !dbg !11835

for.body1365:                                     ; preds = %for.cond1361
  %497 = load i32, i32* %i, align 4, !dbg !11836
  %idxprom1366 = sext i32 %497 to i64, !dbg !11837
  %arrayidx1367 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom1366, !dbg !11837
  store i32 0, i32* %arrayidx1367, align 4, !dbg !11838
  br label %for.inc1368, !dbg !11837

for.inc1368:                                      ; preds = %for.body1365
  %498 = load i32, i32* %i, align 4, !dbg !11839
  %inc1369 = add nsw i32 %498, 1, !dbg !11839
  store i32 %inc1369, i32* %i, align 4, !dbg !11839
  br label %for.cond1361, !dbg !11841, !llvm.loop !11842

for.end1370:                                      ; preds = %for.cond1361
  store i32 0, i32* %w, align 4, !dbg !11844
  br label %for.cond1371, !dbg !11846

for.cond1371:                                     ; preds = %for.inc1441, %for.end1370
  %499 = load i32, i32* %w, align 4, !dbg !11847
  %500 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11850
  %ics1372 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %500, i32 0, i32 0, !dbg !11851
  %num_windows1373 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1372, i32 0, i32 9, !dbg !11852
  %501 = load i32, i32* %num_windows1373, align 4, !dbg !11852
  %cmp1374 = icmp slt i32 %499, %501, !dbg !11853
  br i1 %cmp1374, label %for.body1376, label %for.end1448, !dbg !11854

for.body1376:                                     ; preds = %for.cond1371
  %502 = load i32, i32* %w, align 4, !dbg !11855
  %mul1377 = mul nsw i32 %502, 128, !dbg !11857
  store i32 %mul1377, i32* %start, align 4, !dbg !11858
  store i32 0, i32* %g, align 4, !dbg !11859
  br label %for.cond1378, !dbg !11861

for.cond1378:                                     ; preds = %for.inc1438, %for.body1376
  %503 = load i32, i32* %g, align 4, !dbg !11862
  %504 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11865
  %ics1379 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %504, i32 0, i32 0, !dbg !11866
  %num_swb1380 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1379, i32 0, i32 8, !dbg !11867
  %505 = load i32, i32* %num_swb1380, align 32, !dbg !11867
  %cmp1381 = icmp slt i32 %503, %505, !dbg !11868
  br i1 %cmp1381, label %for.body1383, label %for.end1440, !dbg !11869

for.body1383:                                     ; preds = %for.cond1378
  call void @llvm.dbg.declare(metadata float** %scaled, metadata !11870, metadata !2772), !dbg !11872
  %506 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !11873
  %scoefs1384 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %506, i32 0, i32 29, !dbg !11874
  %arraydecay1385 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs1384, i32 0, i32 0, !dbg !11873
  %507 = load i32, i32* %start, align 4, !dbg !11875
  %idx.ext = sext i32 %507 to i64, !dbg !11876
  %add.ptr = getelementptr inbounds float, float* %arraydecay1385, i64 %idx.ext, !dbg !11876
  store float* %add.ptr, float** %scaled, align 8, !dbg !11872
  call void @llvm.dbg.declare(metadata i32* %minsfidx, metadata !11877, metadata !2772), !dbg !11878
  %508 = load i32, i32* %w, align 4, !dbg !11879
  %idxprom1386 = sext i32 %508 to i64, !dbg !11880
  %509 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11880
  %ics1387 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %509, i32 0, i32 0, !dbg !11881
  %group_len1388 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1387, i32 0, i32 4, !dbg !11882
  %arrayidx1389 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1388, i64 0, i64 %idxprom1386, !dbg !11880
  %510 = load i8, i8* %arrayidx1389, align 1, !dbg !11880
  %conv1390 = zext i8 %510 to i32, !dbg !11880
  %511 = load i32, i32* %g, align 4, !dbg !11883
  %idxprom1391 = sext i32 %511 to i64, !dbg !11884
  %512 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11884
  %ics1392 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %512, i32 0, i32 0, !dbg !11885
  %swb_sizes1393 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1392, i32 0, i32 7, !dbg !11886
  %513 = load i8*, i8** %swb_sizes1393, align 8, !dbg !11886
  %arrayidx1394 = getelementptr inbounds i8, i8* %513, i64 %idxprom1391, !dbg !11884
  %514 = load i8, i8* %arrayidx1394, align 1, !dbg !11884
  %conv1395 = zext i8 %514 to i32, !dbg !11884
  %515 = load float*, float** %scaled, align 8, !dbg !11887
  %call1396 = call float @find_max_val(i32 %conv1390, i32 %conv1395, float* %515), !dbg !11888
  %516 = load i32, i32* %w, align 4, !dbg !11889
  %mul1397 = mul nsw i32 %516, 16, !dbg !11890
  %517 = load i32, i32* %g, align 4, !dbg !11891
  %add1398 = add nsw i32 %mul1397, %517, !dbg !11892
  %idxprom1399 = sext i32 %add1398 to i64, !dbg !11893
  %arrayidx1400 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom1399, !dbg !11893
  store float %call1396, float* %arrayidx1400, align 4, !dbg !11894
  %518 = load i32, i32* %w, align 4, !dbg !11895
  %mul1401 = mul nsw i32 %518, 16, !dbg !11897
  %519 = load i32, i32* %g, align 4, !dbg !11898
  %add1402 = add nsw i32 %mul1401, %519, !dbg !11899
  %idxprom1403 = sext i32 %add1402 to i64, !dbg !11900
  %arrayidx1404 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom1403, !dbg !11900
  %520 = load float, float* %arrayidx1404, align 4, !dbg !11900
  %cmp1405 = fcmp ogt float %520, 0.000000e+00, !dbg !11901
  br i1 %cmp1405, label %if.then1407, label %if.end1431, !dbg !11902

if.then1407:                                      ; preds = %for.body1383
  %521 = load i32, i32* %w, align 4, !dbg !11903
  %mul1408 = mul nsw i32 %521, 16, !dbg !11905
  %522 = load i32, i32* %g, align 4, !dbg !11906
  %add1409 = add nsw i32 %mul1408, %522, !dbg !11907
  %idxprom1410 = sext i32 %add1409 to i64, !dbg !11908
  %arrayidx1411 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom1410, !dbg !11908
  %523 = load float, float* %arrayidx1411, align 4, !dbg !11908
  %call1412 = call zeroext i8 @coef2minsf(float %523), !dbg !11909
  %conv1413 = zext i8 %call1412 to i32, !dbg !11909
  store i32 %conv1413, i32* %minsfidx, align 4, !dbg !11910
  store i32 0, i32* %w2, align 4, !dbg !11911
  br label %for.cond1414, !dbg !11913

for.cond1414:                                     ; preds = %for.inc1428, %if.then1407
  %524 = load i32, i32* %w2, align 4, !dbg !11914
  %525 = load i32, i32* %w, align 4, !dbg !11917
  %idxprom1415 = sext i32 %525 to i64, !dbg !11918
  %526 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11918
  %ics1416 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %526, i32 0, i32 0, !dbg !11919
  %group_len1417 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1416, i32 0, i32 4, !dbg !11920
  %arrayidx1418 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1417, i64 0, i64 %idxprom1415, !dbg !11918
  %527 = load i8, i8* %arrayidx1418, align 1, !dbg !11918
  %conv1419 = zext i8 %527 to i32, !dbg !11918
  %cmp1420 = icmp slt i32 %524, %conv1419, !dbg !11921
  br i1 %cmp1420, label %for.body1422, label %for.end1430, !dbg !11922

for.body1422:                                     ; preds = %for.cond1414
  %528 = load i32, i32* %minsfidx, align 4, !dbg !11923
  %529 = load i32, i32* %w, align 4, !dbg !11924
  %530 = load i32, i32* %w2, align 4, !dbg !11925
  %add1423 = add nsw i32 %529, %530, !dbg !11926
  %mul1424 = mul nsw i32 %add1423, 16, !dbg !11927
  %531 = load i32, i32* %g, align 4, !dbg !11928
  %add1425 = add nsw i32 %mul1424, %531, !dbg !11929
  %idxprom1426 = sext i32 %add1425 to i64, !dbg !11930
  %arrayidx1427 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom1426, !dbg !11930
  store i32 %528, i32* %arrayidx1427, align 4, !dbg !11931
  br label %for.inc1428, !dbg !11930

for.inc1428:                                      ; preds = %for.body1422
  %532 = load i32, i32* %w2, align 4, !dbg !11932
  %inc1429 = add nsw i32 %532, 1, !dbg !11932
  store i32 %inc1429, i32* %w2, align 4, !dbg !11932
  br label %for.cond1414, !dbg !11934, !llvm.loop !11935

for.end1430:                                      ; preds = %for.cond1414
  br label %if.end1431, !dbg !11937

if.end1431:                                       ; preds = %for.end1430, %for.body1383
  %533 = load i32, i32* %g, align 4, !dbg !11938
  %idxprom1432 = sext i32 %533 to i64, !dbg !11939
  %534 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11939
  %ics1433 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %534, i32 0, i32 0, !dbg !11940
  %swb_sizes1434 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1433, i32 0, i32 7, !dbg !11941
  %535 = load i8*, i8** %swb_sizes1434, align 8, !dbg !11941
  %arrayidx1435 = getelementptr inbounds i8, i8* %535, i64 %idxprom1432, !dbg !11939
  %536 = load i8, i8* %arrayidx1435, align 1, !dbg !11939
  %conv1436 = zext i8 %536 to i32, !dbg !11939
  %537 = load i32, i32* %start, align 4, !dbg !11942
  %add1437 = add nsw i32 %537, %conv1436, !dbg !11942
  store i32 %add1437, i32* %start, align 4, !dbg !11942
  br label %for.inc1438, !dbg !11943

for.inc1438:                                      ; preds = %if.end1431
  %538 = load i32, i32* %g, align 4, !dbg !11944
  %inc1439 = add nsw i32 %538, 1, !dbg !11944
  store i32 %inc1439, i32* %g, align 4, !dbg !11944
  br label %for.cond1378, !dbg !11946, !llvm.loop !11947

for.end1440:                                      ; preds = %for.cond1378
  br label %for.inc1441, !dbg !11949

for.inc1441:                                      ; preds = %for.end1440
  %539 = load i32, i32* %w, align 4, !dbg !11950
  %idxprom1442 = sext i32 %539 to i64, !dbg !11952
  %540 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11952
  %ics1443 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %540, i32 0, i32 0, !dbg !11953
  %group_len1444 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1443, i32 0, i32 4, !dbg !11954
  %arrayidx1445 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1444, i64 0, i64 %idxprom1442, !dbg !11952
  %541 = load i8, i8* %arrayidx1445, align 1, !dbg !11952
  %conv1446 = zext i8 %541 to i32, !dbg !11952
  %542 = load i32, i32* %w, align 4, !dbg !11955
  %add1447 = add nsw i32 %542, %conv1446, !dbg !11955
  store i32 %add1447, i32* %w, align 4, !dbg !11955
  br label %for.cond1371, !dbg !11956, !llvm.loop !11957

for.end1448:                                      ; preds = %for.cond1371
  %arraydecay1449 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i32 0, i32 0, !dbg !11959
  %543 = bitcast float* %arraydecay1449 to i8*, !dbg !11959
  %arraydecay1450 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i32 0, i32 0, !dbg !11959
  %544 = bitcast float* %arraydecay1450 to i8*, !dbg !11959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %543, i8* %544, i64 512, i32 16, i1 false), !dbg !11959
  store i32 0, i32* %w, align 4, !dbg !11960
  br label %for.cond1451, !dbg !11961

for.cond1451:                                     ; preds = %for.inc1640, %for.end1448
  %545 = load i32, i32* %w, align 4, !dbg !11962
  %546 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11964
  %ics1452 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %546, i32 0, i32 0, !dbg !11965
  %num_windows1453 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1452, i32 0, i32 9, !dbg !11966
  %547 = load i32, i32* %num_windows1453, align 4, !dbg !11966
  %cmp1454 = icmp slt i32 %545, %547, !dbg !11967
  br i1 %cmp1454, label %for.body1456, label %for.end1647, !dbg !11968

for.body1456:                                     ; preds = %for.cond1451
  call void @llvm.dbg.declare(metadata float* %de_psy_factor, metadata !11969, metadata !2772), !dbg !11970
  %548 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11971
  %ics1457 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %548, i32 0, i32 0, !dbg !11972
  %num_windows1458 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1457, i32 0, i32 9, !dbg !11973
  %549 = load i32, i32* %num_windows1458, align 4, !dbg !11973
  %cmp1459 = icmp sgt i32 %549, 1, !dbg !11974
  br i1 %cmp1459, label %cond.true1461, label %cond.false1469, !dbg !11975

cond.true1461:                                    ; preds = %for.body1456
  %550 = load i32, i32* %w, align 4, !dbg !11976
  %idxprom1462 = sext i32 %550 to i64, !dbg !11978
  %551 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11978
  %ics1463 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %551, i32 0, i32 0, !dbg !11979
  %group_len1464 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1463, i32 0, i32 4, !dbg !11980
  %arrayidx1465 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1464, i64 0, i64 %idxprom1462, !dbg !11978
  %552 = load i8, i8* %arrayidx1465, align 1, !dbg !11978
  %conv1466 = zext i8 %552 to i32, !dbg !11978
  %conv1467 = sitofp i32 %conv1466 to float, !dbg !11978
  %div1468 = fdiv float 8.000000e+00, %conv1467, !dbg !11981
  br label %cond.end1470, !dbg !11982

cond.false1469:                                   ; preds = %for.body1456
  br label %cond.end1470, !dbg !11983

cond.end1470:                                     ; preds = %cond.false1469, %cond.true1461
  %cond1471 = phi float [ %div1468, %cond.true1461 ], [ 1.000000e+00, %cond.false1469 ], !dbg !11985
  store float %cond1471, float* %de_psy_factor, align 4, !dbg !11987
  %553 = load i32, i32* %w, align 4, !dbg !11988
  %mul1472 = mul nsw i32 %553, 128, !dbg !11989
  store i32 %mul1472, i32* %start, align 4, !dbg !11990
  store i32 0, i32* %g, align 4, !dbg !11991
  br label %for.cond1473, !dbg !11992

for.cond1473:                                     ; preds = %for.inc1637, %cond.end1470
  %554 = load i32, i32* %g, align 4, !dbg !11993
  %555 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !11995
  %ics1474 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %555, i32 0, i32 0, !dbg !11996
  %num_swb1475 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1474, i32 0, i32 8, !dbg !11997
  %556 = load i32, i32* %num_swb1475, align 32, !dbg !11997
  %cmp1476 = icmp slt i32 %554, %556, !dbg !11998
  br i1 %cmp1476, label %for.body1478, label %for.end1639, !dbg !11999

for.body1478:                                     ; preds = %for.cond1473
  %557 = load i32, i32* %g, align 4, !dbg !12000
  %idxprom1479 = sext i32 %557 to i64, !dbg !12001
  %arrayidx1480 = getelementptr inbounds [128 x i8], [128 x i8]* %nzs, i64 0, i64 %idxprom1479, !dbg !12001
  %558 = load i8, i8* %arrayidx1480, align 1, !dbg !12001
  %conv1481 = sext i8 %558 to i32, !dbg !12001
  %cmp1482 = icmp sgt i32 %conv1481, 0, !dbg !12002
  br i1 %cmp1482, label %if.then1484, label %if.end1630, !dbg !12003

if.then1484:                                      ; preds = %for.body1478
  call void @llvm.dbg.declare(metadata float* %cleanup_factor, metadata !12004, metadata !2772), !dbg !12005
  %559 = load i32, i32* %start, align 4, !dbg !12006
  %conv1485 = sitofp i32 %559 to float, !dbg !12006
  %560 = load i32, i32* %cutoff, align 4, !dbg !12007
  %conv1486 = sitofp i32 %560 to float, !dbg !12007
  %mul1487 = fmul float %conv1486, 7.500000e-01, !dbg !12008
  %div1488 = fdiv float %conv1485, %mul1487, !dbg !12009
  store float %div1488, float* %a.addr.i3531, align 4, !dbg !12010
  store float 1.000000e+00, float* %amin.addr.i3532, align 4, !dbg !12010
  store float 2.000000e+00, float* %amax.addr.i3533, align 4, !dbg !12010
  %561 = load float, float* %a.addr.i3531, align 4, !dbg !12011
  %562 = load float, float* %amin.addr.i3532, align 4, !dbg !12012
  %563 = load float, float* %amax.addr.i3533, align 4, !dbg !12013
  %564 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %562, float %563, float %561) #10, !dbg !12011, !srcloc !4962
  store float %564, float* %a.addr.i3531, align 4, !dbg !12011
  %565 = load float, float* %a.addr.i3531, align 4, !dbg !12014
  %call1490 = call float @ff_sqrf(float %565) #3, !dbg !12015
  store float %call1490, float* %cleanup_factor, align 4, !dbg !12005
  call void @llvm.dbg.declare(metadata float* %energy2uplim, metadata !12017, metadata !2772), !dbg !12018
  %566 = load i32, i32* %w, align 4, !dbg !12019
  %idxprom1491 = sext i32 %566 to i64, !dbg !12020
  %567 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12020
  %ics1492 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %567, i32 0, i32 0, !dbg !12021
  %group_len1493 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1492, i32 0, i32 4, !dbg !12022
  %arrayidx1494 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1493, i64 0, i64 %idxprom1491, !dbg !12020
  %568 = load i8, i8* %arrayidx1494, align 1, !dbg !12020
  %conv1495 = zext i8 %568 to i32, !dbg !12020
  %569 = load i32, i32* %g, align 4, !dbg !12023
  %idxprom1496 = sext i32 %569 to i64, !dbg !12024
  %570 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12024
  %ics1497 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %570, i32 0, i32 0, !dbg !12025
  %swb_sizes1498 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1497, i32 0, i32 7, !dbg !12026
  %571 = load i8*, i8** %swb_sizes1498, align 8, !dbg !12026
  %arrayidx1499 = getelementptr inbounds i8, i8* %571, i64 %idxprom1496, !dbg !12024
  %572 = load i8, i8* %arrayidx1499, align 1, !dbg !12024
  %conv1500 = zext i8 %572 to i32, !dbg !12024
  %573 = load i32, i32* %w, align 4, !dbg !12027
  %mul1501 = mul nsw i32 %573, 16, !dbg !12028
  %574 = load i32, i32* %g, align 4, !dbg !12029
  %add1502 = add nsw i32 %mul1501, %574, !dbg !12030
  %idxprom1503 = sext i32 %add1502 to i64, !dbg !12031
  %arrayidx1504 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom1503, !dbg !12031
  %575 = load float, float* %arrayidx1504, align 4, !dbg !12031
  %576 = load i32, i32* %g, align 4, !dbg !12032
  %idxprom1505 = sext i32 %576 to i64, !dbg !12033
  %arrayidx1506 = getelementptr inbounds [128 x i8], [128 x i8]* %nzs, i64 0, i64 %idxprom1505, !dbg !12033
  %577 = load i8, i8* %arrayidx1506, align 1, !dbg !12033
  %conv1507 = sext i8 %577 to i32, !dbg !12033
  %578 = load i32, i32* %w, align 4, !dbg !12034
  %idxprom1508 = sext i32 %578 to i64, !dbg !12035
  %579 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12035
  %ics1509 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %579, i32 0, i32 0, !dbg !12036
  %swb_sizes1510 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1509, i32 0, i32 7, !dbg !12037
  %580 = load i8*, i8** %swb_sizes1510, align 8, !dbg !12037
  %arrayidx1511 = getelementptr inbounds i8, i8* %580, i64 %idxprom1508, !dbg !12035
  %581 = load i8, i8* %arrayidx1511, align 1, !dbg !12035
  %conv1512 = zext i8 %581 to i32, !dbg !12035
  %mul1513 = mul nsw i32 %conv1507, %conv1512, !dbg !12038
  %conv1514 = sitofp i32 %mul1513 to float, !dbg !12039
  %div1515 = fdiv float %575, %conv1514, !dbg !12040
  %582 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12041
  %coeffs1516 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %582, i32 0, i32 14, !dbg !12042
  %arraydecay1517 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs1516, i32 0, i32 0, !dbg !12041
  %583 = load i32, i32* %start, align 4, !dbg !12043
  %idx.ext1518 = sext i32 %583 to i64, !dbg !12044
  %add.ptr1519 = getelementptr inbounds float, float* %arraydecay1517, i64 %idx.ext1518, !dbg !12044
  %584 = load float, float* %cleanup_factor, align 4, !dbg !12045
  %mul1520 = fmul float 1.500000e+00, %584, !dbg !12046
  %call1521 = call float @find_form_factor(i32 %conv1495, i32 %conv1500, float %div1515, float* %add.ptr1519, float %mul1520), !dbg !12047
  store float %call1521, float* %energy2uplim, align 4, !dbg !12018
  %585 = load float, float* %de_psy_factor, align 4, !dbg !12048
  %586 = load float, float* %energy2uplim, align 4, !dbg !12049
  %mul1522 = fmul float %586, %585, !dbg !12049
  store float %mul1522, float* %energy2uplim, align 4, !dbg !12049
  %587 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !12050
  %flags1523 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %587, i32 0, i32 13, !dbg !12052
  %588 = load i32, i32* %flags1523, align 4, !dbg !12052
  %and1524 = and i32 %588, 2, !dbg !12053
  %tobool1525 = icmp ne i32 %and1524, 0, !dbg !12053
  br i1 %tobool1525, label %if.end1528, label %if.then1526, !dbg !12054

if.then1526:                                      ; preds = %if.then1484
  %589 = load float, float* %energy2uplim, align 4, !dbg !12055
  %call1527 = call float @sqrtf(float %589) #9, !dbg !12057
  store float %call1527, float* %energy2uplim, align 4, !dbg !12058
  br label %if.end1528, !dbg !12059

if.end1528:                                       ; preds = %if.then1526, %if.then1484
  %590 = load float, float* %energy2uplim, align 4, !dbg !12060
  %cmp1529 = fcmp ogt float 1.000000e+00, %590, !dbg !12061
  br i1 %cmp1529, label %cond.true1531, label %cond.false1532, !dbg !12062

cond.true1531:                                    ; preds = %if.end1528
  %591 = load float, float* %energy2uplim, align 4, !dbg !12063
  br label %cond.end1533, !dbg !12064

cond.false1532:                                   ; preds = %if.end1528
  br label %cond.end1533, !dbg !12065

cond.end1533:                                     ; preds = %cond.false1532, %cond.true1531
  %cond1534 = phi float [ %591, %cond.true1531 ], [ 1.000000e+00, %cond.false1532 ], !dbg !12067
  %cmp1535 = fcmp ogt float 1.562500e-02, %cond1534, !dbg !12069
  br i1 %cmp1535, label %cond.true1537, label %cond.false1538, !dbg !12070

cond.true1537:                                    ; preds = %cond.end1533
  br label %cond.end1545, !dbg !12071

cond.false1538:                                   ; preds = %cond.end1533
  %592 = load float, float* %energy2uplim, align 4, !dbg !12073
  %cmp1539 = fcmp ogt float 1.000000e+00, %592, !dbg !12075
  br i1 %cmp1539, label %cond.true1541, label %cond.false1542, !dbg !12076

cond.true1541:                                    ; preds = %cond.false1538
  %593 = load float, float* %energy2uplim, align 4, !dbg !12077
  br label %cond.end1543, !dbg !12079

cond.false1542:                                   ; preds = %cond.false1538
  br label %cond.end1543, !dbg !12080

cond.end1543:                                     ; preds = %cond.false1542, %cond.true1541
  %cond1544 = phi float [ %593, %cond.true1541 ], [ 1.000000e+00, %cond.false1542 ], !dbg !12082
  br label %cond.end1545, !dbg !12084

cond.end1545:                                     ; preds = %cond.end1543, %cond.true1537
  %cond1546 = phi float [ 1.562500e-02, %cond.true1537 ], [ %cond1544, %cond.end1543 ], !dbg !12085
  store float %cond1546, float* %energy2uplim, align 4, !dbg !12087
  %594 = load float, float* %rdlambda, align 4, !dbg !12088
  %595 = load float, float* %energy2uplim, align 4, !dbg !12089
  %mul1547 = fmul float %594, %595, !dbg !12090
  %596 = load float, float* %rdmin, align 4, !dbg !12091
  %597 = load float, float* %rdmax, align 4, !dbg !12092
  store float %mul1547, float* %a.addr.i3534, align 4, !dbg !12093
  store float %596, float* %amin.addr.i3535, align 4, !dbg !12093
  store float %597, float* %amax.addr.i3536, align 4, !dbg !12093
  %598 = load float, float* %a.addr.i3534, align 4, !dbg !12094
  %599 = load float, float* %amin.addr.i3535, align 4, !dbg !12095
  %600 = load float, float* %amax.addr.i3536, align 4, !dbg !12096
  %601 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %599, float %600, float %598) #10, !dbg !12094, !srcloc !4962
  store float %601, float* %a.addr.i3534, align 4, !dbg !12094
  %602 = load float, float* %a.addr.i3534, align 4, !dbg !12097
  %603 = load i32, i32* %w, align 4, !dbg !12098
  %idxprom1549 = sext i32 %603 to i64, !dbg !12099
  %604 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12099
  %ics1550 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %604, i32 0, i32 0, !dbg !12100
  %group_len1551 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1550, i32 0, i32 4, !dbg !12101
  %arrayidx1552 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1551, i64 0, i64 %idxprom1549, !dbg !12099
  %605 = load i8, i8* %arrayidx1552, align 1, !dbg !12099
  %conv1553 = zext i8 %605 to i32, !dbg !12099
  %conv1554 = sitofp i32 %conv1553 to float, !dbg !12099
  %mul1555 = fmul float %602, %conv1554, !dbg !12102
  %606 = load i32, i32* %w, align 4, !dbg !12103
  %mul1556 = mul nsw i32 %606, 16, !dbg !12104
  %607 = load i32, i32* %g, align 4, !dbg !12105
  %add1557 = add nsw i32 %mul1556, %607, !dbg !12106
  %idxprom1558 = sext i32 %add1557 to i64, !dbg !12107
  %arrayidx1559 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom1558, !dbg !12107
  %608 = load float, float* %arrayidx1559, align 4, !dbg !12108
  %mul1560 = fmul float %608, %mul1555, !dbg !12108
  store float %mul1560, float* %arrayidx1559, align 4, !dbg !12108
  %609 = load i32, i32* %w, align 4, !dbg !12109
  %idxprom1561 = sext i32 %609 to i64, !dbg !12110
  %610 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12110
  %ics1562 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %610, i32 0, i32 0, !dbg !12111
  %group_len1563 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1562, i32 0, i32 4, !dbg !12112
  %arrayidx1564 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1563, i64 0, i64 %idxprom1561, !dbg !12110
  %611 = load i8, i8* %arrayidx1564, align 1, !dbg !12110
  %conv1565 = zext i8 %611 to i32, !dbg !12110
  %612 = load i32, i32* %g, align 4, !dbg !12113
  %idxprom1566 = sext i32 %612 to i64, !dbg !12114
  %613 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12114
  %ics1567 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %613, i32 0, i32 0, !dbg !12115
  %swb_sizes1568 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1567, i32 0, i32 7, !dbg !12116
  %614 = load i8*, i8** %swb_sizes1568, align 8, !dbg !12116
  %arrayidx1569 = getelementptr inbounds i8, i8* %614, i64 %idxprom1566, !dbg !12114
  %615 = load i8, i8* %arrayidx1569, align 1, !dbg !12114
  %conv1570 = zext i8 %615 to i32, !dbg !12114
  %616 = load i32, i32* %w, align 4, !dbg !12117
  %mul1571 = mul nsw i32 %616, 16, !dbg !12118
  %617 = load i32, i32* %g, align 4, !dbg !12119
  %add1572 = add nsw i32 %mul1571, %617, !dbg !12120
  %idxprom1573 = sext i32 %add1572 to i64, !dbg !12121
  %arrayidx1574 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom1573, !dbg !12121
  %618 = load float, float* %arrayidx1574, align 4, !dbg !12121
  %619 = load i32, i32* %g, align 4, !dbg !12122
  %idxprom1575 = sext i32 %619 to i64, !dbg !12123
  %arrayidx1576 = getelementptr inbounds [128 x i8], [128 x i8]* %nzs, i64 0, i64 %idxprom1575, !dbg !12123
  %620 = load i8, i8* %arrayidx1576, align 1, !dbg !12123
  %conv1577 = sext i8 %620 to i32, !dbg !12123
  %621 = load i32, i32* %w, align 4, !dbg !12124
  %idxprom1578 = sext i32 %621 to i64, !dbg !12125
  %622 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12125
  %ics1579 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %622, i32 0, i32 0, !dbg !12126
  %swb_sizes1580 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1579, i32 0, i32 7, !dbg !12127
  %623 = load i8*, i8** %swb_sizes1580, align 8, !dbg !12127
  %arrayidx1581 = getelementptr inbounds i8, i8* %623, i64 %idxprom1578, !dbg !12125
  %624 = load i8, i8* %arrayidx1581, align 1, !dbg !12125
  %conv1582 = zext i8 %624 to i32, !dbg !12125
  %mul1583 = mul nsw i32 %conv1577, %conv1582, !dbg !12128
  %conv1584 = sitofp i32 %mul1583 to float, !dbg !12129
  %div1585 = fdiv float %618, %conv1584, !dbg !12130
  %625 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12131
  %coeffs1586 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %625, i32 0, i32 14, !dbg !12132
  %arraydecay1587 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs1586, i32 0, i32 0, !dbg !12131
  %626 = load i32, i32* %start, align 4, !dbg !12133
  %idx.ext1588 = sext i32 %626 to i64, !dbg !12134
  %add.ptr1589 = getelementptr inbounds float, float* %arraydecay1587, i64 %idx.ext1588, !dbg !12134
  %call1590 = call float @find_form_factor(i32 %conv1565, i32 %conv1570, float %div1585, float* %add.ptr1589, float 2.000000e+00), !dbg !12135
  store float %call1590, float* %energy2uplim, align 4, !dbg !12136
  %627 = load float, float* %de_psy_factor, align 4, !dbg !12137
  %628 = load float, float* %energy2uplim, align 4, !dbg !12138
  %mul1591 = fmul float %628, %627, !dbg !12138
  store float %mul1591, float* %energy2uplim, align 4, !dbg !12138
  %629 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !12139
  %flags1592 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %629, i32 0, i32 13, !dbg !12141
  %630 = load i32, i32* %flags1592, align 4, !dbg !12141
  %and1593 = and i32 %630, 2, !dbg !12142
  %tobool1594 = icmp ne i32 %and1593, 0, !dbg !12142
  br i1 %tobool1594, label %if.end1597, label %if.then1595, !dbg !12143

if.then1595:                                      ; preds = %cond.end1545
  %631 = load float, float* %energy2uplim, align 4, !dbg !12144
  %call1596 = call float @sqrtf(float %631) #9, !dbg !12146
  store float %call1596, float* %energy2uplim, align 4, !dbg !12147
  br label %if.end1597, !dbg !12148

if.end1597:                                       ; preds = %if.then1595, %cond.end1545
  %632 = load float, float* %energy2uplim, align 4, !dbg !12149
  %cmp1598 = fcmp ogt float 1.000000e+00, %632, !dbg !12150
  br i1 %cmp1598, label %cond.true1600, label %cond.false1601, !dbg !12151

cond.true1600:                                    ; preds = %if.end1597
  %633 = load float, float* %energy2uplim, align 4, !dbg !12152
  br label %cond.end1602, !dbg !12153

cond.false1601:                                   ; preds = %if.end1597
  br label %cond.end1602, !dbg !12154

cond.end1602:                                     ; preds = %cond.false1601, %cond.true1600
  %cond1603 = phi float [ %633, %cond.true1600 ], [ 1.000000e+00, %cond.false1601 ], !dbg !12155
  %cmp1604 = fcmp ogt float 1.562500e-02, %cond1603, !dbg !12156
  br i1 %cmp1604, label %cond.true1606, label %cond.false1607, !dbg !12157

cond.true1606:                                    ; preds = %cond.end1602
  br label %cond.end1614, !dbg !12158

cond.false1607:                                   ; preds = %cond.end1602
  %634 = load float, float* %energy2uplim, align 4, !dbg !12159
  %cmp1608 = fcmp ogt float 1.000000e+00, %634, !dbg !12160
  br i1 %cmp1608, label %cond.true1610, label %cond.false1611, !dbg !12161

cond.true1610:                                    ; preds = %cond.false1607
  %635 = load float, float* %energy2uplim, align 4, !dbg !12162
  br label %cond.end1612, !dbg !12163

cond.false1611:                                   ; preds = %cond.false1607
  br label %cond.end1612, !dbg !12164

cond.end1612:                                     ; preds = %cond.false1611, %cond.true1610
  %cond1613 = phi float [ %635, %cond.true1610 ], [ 1.000000e+00, %cond.false1611 ], !dbg !12165
  br label %cond.end1614, !dbg !12166

cond.end1614:                                     ; preds = %cond.end1612, %cond.true1606
  %cond1615 = phi float [ 1.562500e-02, %cond.true1606 ], [ %cond1613, %cond.end1612 ], !dbg !12167
  store float %cond1615, float* %energy2uplim, align 4, !dbg !12168
  %636 = load float, float* %rdlambda, align 4, !dbg !12169
  %637 = load float, float* %energy2uplim, align 4, !dbg !12170
  %mul1616 = fmul float %636, %637, !dbg !12171
  %638 = load i32, i32* %w, align 4, !dbg !12172
  %idxprom1617 = sext i32 %638 to i64, !dbg !12173
  %639 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12173
  %ics1618 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %639, i32 0, i32 0, !dbg !12174
  %group_len1619 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1618, i32 0, i32 4, !dbg !12175
  %arrayidx1620 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1619, i64 0, i64 %idxprom1617, !dbg !12173
  %640 = load i8, i8* %arrayidx1620, align 1, !dbg !12173
  %conv1621 = zext i8 %640 to i32, !dbg !12173
  %conv1622 = sitofp i32 %conv1621 to float, !dbg !12173
  %mul1623 = fmul float %mul1616, %conv1622, !dbg !12176
  store float %mul1623, float* %a.addr.i3537, align 4, !dbg !12177
  store float 5.000000e-01, float* %amin.addr.i3538, align 4, !dbg !12177
  store float 1.000000e+00, float* %amax.addr.i3539, align 4, !dbg !12177
  %641 = load float, float* %a.addr.i3537, align 4, !dbg !12178
  %642 = load float, float* %amin.addr.i3538, align 4, !dbg !12179
  %643 = load float, float* %amax.addr.i3539, align 4, !dbg !12180
  %644 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %642, float %643, float %641) #10, !dbg !12178, !srcloc !4962
  store float %644, float* %a.addr.i3537, align 4, !dbg !12178
  %645 = load float, float* %a.addr.i3537, align 4, !dbg !12181
  %646 = load i32, i32* %w, align 4, !dbg !12182
  %mul1625 = mul nsw i32 %646, 16, !dbg !12183
  %647 = load i32, i32* %g, align 4, !dbg !12184
  %add1626 = add nsw i32 %mul1625, %647, !dbg !12185
  %idxprom1627 = sext i32 %add1626 to i64, !dbg !12186
  %arrayidx1628 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom1627, !dbg !12186
  %648 = load float, float* %arrayidx1628, align 4, !dbg !12187
  %mul1629 = fmul float %648, %645, !dbg !12187
  store float %mul1629, float* %arrayidx1628, align 4, !dbg !12187
  br label %if.end1630, !dbg !12188

if.end1630:                                       ; preds = %cond.end1614, %for.body1478
  %649 = load i32, i32* %g, align 4, !dbg !12189
  %idxprom1631 = sext i32 %649 to i64, !dbg !12190
  %650 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12190
  %ics1632 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %650, i32 0, i32 0, !dbg !12191
  %swb_sizes1633 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1632, i32 0, i32 7, !dbg !12192
  %651 = load i8*, i8** %swb_sizes1633, align 8, !dbg !12192
  %arrayidx1634 = getelementptr inbounds i8, i8* %651, i64 %idxprom1631, !dbg !12190
  %652 = load i8, i8* %arrayidx1634, align 1, !dbg !12190
  %conv1635 = zext i8 %652 to i32, !dbg !12190
  %653 = load i32, i32* %start, align 4, !dbg !12193
  %add1636 = add nsw i32 %653, %conv1635, !dbg !12193
  store i32 %add1636, i32* %start, align 4, !dbg !12193
  br label %for.inc1637, !dbg !12194

for.inc1637:                                      ; preds = %if.end1630
  %654 = load i32, i32* %g, align 4, !dbg !12195
  %inc1638 = add nsw i32 %654, 1, !dbg !12195
  store i32 %inc1638, i32* %g, align 4, !dbg !12195
  br label %for.cond1473, !dbg !12197, !llvm.loop !12198

for.end1639:                                      ; preds = %for.cond1473
  br label %for.inc1640, !dbg !12200

for.inc1640:                                      ; preds = %for.end1639
  %655 = load i32, i32* %w, align 4, !dbg !12201
  %idxprom1641 = sext i32 %655 to i64, !dbg !12203
  %656 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12203
  %ics1642 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %656, i32 0, i32 0, !dbg !12204
  %group_len1643 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1642, i32 0, i32 4, !dbg !12205
  %arrayidx1644 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1643, i64 0, i64 %idxprom1641, !dbg !12203
  %657 = load i8, i8* %arrayidx1644, align 1, !dbg !12203
  %conv1645 = zext i8 %657 to i32, !dbg !12203
  %658 = load i32, i32* %w, align 4, !dbg !12206
  %add1646 = add nsw i32 %658, %conv1645, !dbg !12206
  store i32 %add1646, i32* %w, align 4, !dbg !12206
  br label %for.cond1451, !dbg !12207, !llvm.loop !12208

for.end1647:                                      ; preds = %for.cond1451
  store i32 0, i32* %i, align 4, !dbg !12210
  br label %for.cond1648, !dbg !12212

for.cond1648:                                     ; preds = %for.inc1655, %for.end1647
  %659 = load i32, i32* %i, align 4, !dbg !12213
  %conv1649 = sext i32 %659 to i64, !dbg !12213
  %cmp1650 = icmp ult i64 %conv1649, 128, !dbg !12216
  br i1 %cmp1650, label %for.body1652, label %for.end1657, !dbg !12217

for.body1652:                                     ; preds = %for.cond1648
  %660 = load i32, i32* %i, align 4, !dbg !12218
  %idxprom1653 = sext i32 %660 to i64, !dbg !12219
  %arrayidx1654 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom1653, !dbg !12219
  store i32 255, i32* %arrayidx1654, align 4, !dbg !12220
  br label %for.inc1655, !dbg !12219

for.inc1655:                                      ; preds = %for.body1652
  %661 = load i32, i32* %i, align 4, !dbg !12221
  %inc1656 = add nsw i32 %661, 1, !dbg !12221
  store i32 %inc1656, i32* %i, align 4, !dbg !12221
  br label %for.cond1648, !dbg !12223, !llvm.loop !12224

for.end1657:                                      ; preds = %for.cond1648
  br label %do.body, !dbg !12226, !llvm.loop !12227

do.body:                                          ; preds = %land.end3375, %for.end1657
  call void @llvm.dbg.declare(metadata i32* %overdist, metadata !12228, metadata !2772), !dbg !12229
  call void @llvm.dbg.declare(metadata i32* %qstep, metadata !12230, metadata !2772), !dbg !12231
  %662 = load i32, i32* %its, align 4, !dbg !12232
  %tobool1658 = icmp ne i32 %662, 0, !dbg !12232
  %cond1659 = select i1 %tobool1658, i32 1, i32 32, !dbg !12232
  store i32 %cond1659, i32* %qstep, align 4, !dbg !12231
  br label %do.body1660, !dbg !12233, !llvm.loop !12234

do.body1660:                                      ; preds = %do.cond, %do.body
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !12235, metadata !2772), !dbg !12236
  store i32 0, i32* %changed, align 4, !dbg !12236
  store i32 -1, i32* %prev, align 4, !dbg !12237
  store i32 0, i32* %recomprd, align 4, !dbg !12238
  store i32 0, i32* %tbits, align 4, !dbg !12239
  store i32 0, i32* %w, align 4, !dbg !12240
  br label %for.cond1661, !dbg !12241

for.cond1661:                                     ; preds = %for.inc1798, %do.body1660
  %663 = load i32, i32* %w, align 4, !dbg !12242
  %664 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12244
  %ics1662 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %664, i32 0, i32 0, !dbg !12245
  %num_windows1663 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1662, i32 0, i32 9, !dbg !12246
  %665 = load i32, i32* %num_windows1663, align 4, !dbg !12246
  %cmp1664 = icmp slt i32 %663, %665, !dbg !12247
  br i1 %cmp1664, label %for.body1666, label %for.end1805, !dbg !12248

for.body1666:                                     ; preds = %for.cond1661
  %666 = load i32, i32* %w, align 4, !dbg !12249
  %mul1667 = mul nsw i32 %666, 128, !dbg !12250
  store i32 %mul1667, i32* %start, align 4, !dbg !12251
  store i32 0, i32* %g, align 4, !dbg !12252
  br label %for.cond1668, !dbg !12253

for.cond1668:                                     ; preds = %for.inc1795, %for.body1666
  %667 = load i32, i32* %g, align 4, !dbg !12254
  %668 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12256
  %ics1669 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %668, i32 0, i32 0, !dbg !12257
  %num_swb1670 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1669, i32 0, i32 8, !dbg !12258
  %669 = load i32, i32* %num_swb1670, align 32, !dbg !12258
  %cmp1671 = icmp slt i32 %667, %669, !dbg !12259
  br i1 %cmp1671, label %for.body1673, label %for.end1797, !dbg !12260

for.body1673:                                     ; preds = %for.cond1668
  call void @llvm.dbg.declare(metadata float** %coefs, metadata !12261, metadata !2772), !dbg !12262
  %670 = load i32, i32* %start, align 4, !dbg !12263
  %idxprom1674 = sext i32 %670 to i64, !dbg !12264
  %671 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12264
  %coeffs1675 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %671, i32 0, i32 14, !dbg !12265
  %arrayidx1676 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs1675, i64 0, i64 %idxprom1674, !dbg !12264
  store float* %arrayidx1676, float** %coefs, align 8, !dbg !12262
  call void @llvm.dbg.declare(metadata float** %scaled1677, metadata !12266, metadata !2772), !dbg !12267
  %672 = load i32, i32* %start, align 4, !dbg !12268
  %idxprom1678 = sext i32 %672 to i64, !dbg !12269
  %673 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !12269
  %scoefs1679 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %673, i32 0, i32 29, !dbg !12270
  %arrayidx1680 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs1679, i64 0, i64 %idxprom1678, !dbg !12269
  store float* %arrayidx1680, float** %scaled1677, align 8, !dbg !12267
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !12271, metadata !2772), !dbg !12272
  store i32 0, i32* %bits, align 4, !dbg !12272
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !12273, metadata !2772), !dbg !12274
  call void @llvm.dbg.declare(metadata float* %dist, metadata !12275, metadata !2772), !dbg !12276
  store float 0.000000e+00, float* %dist, align 4, !dbg !12276
  call void @llvm.dbg.declare(metadata float* %qenergy, metadata !12277, metadata !2772), !dbg !12278
  store float 0.000000e+00, float* %qenergy, align 4, !dbg !12278
  %674 = load i32, i32* %w, align 4, !dbg !12279
  %mul1681 = mul nsw i32 %674, 16, !dbg !12281
  %675 = load i32, i32* %g, align 4, !dbg !12282
  %add1682 = add nsw i32 %mul1681, %675, !dbg !12283
  %idxprom1683 = sext i32 %add1682 to i64, !dbg !12284
  %676 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12284
  %zeroes1684 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %676, i32 0, i32 8, !dbg !12285
  %arrayidx1685 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1684, i64 0, i64 %idxprom1683, !dbg !12284
  %677 = load i8, i8* %arrayidx1685, align 1, !dbg !12284
  %conv1686 = zext i8 %677 to i32, !dbg !12284
  %tobool1687 = icmp ne i32 %conv1686, 0, !dbg !12284
  br i1 %tobool1687, label %if.then1696, label %lor.lhs.false1688, !dbg !12286

lor.lhs.false1688:                                ; preds = %for.body1673
  %678 = load i32, i32* %w, align 4, !dbg !12287
  %mul1689 = mul nsw i32 %678, 16, !dbg !12289
  %679 = load i32, i32* %g, align 4, !dbg !12290
  %add1690 = add nsw i32 %mul1689, %679, !dbg !12291
  %idxprom1691 = sext i32 %add1690 to i64, !dbg !12292
  %680 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12292
  %sf_idx1692 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %680, i32 0, i32 7, !dbg !12293
  %arrayidx1693 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1692, i64 0, i64 %idxprom1691, !dbg !12292
  %681 = load i32, i32* %arrayidx1693, align 4, !dbg !12292
  %cmp1694 = icmp sge i32 %681, 218, !dbg !12294
  br i1 %cmp1694, label %if.then1696, label %if.end1713, !dbg !12295

if.then1696:                                      ; preds = %lor.lhs.false1688, %for.body1673
  %682 = load i32, i32* %g, align 4, !dbg !12296
  %idxprom1697 = sext i32 %682 to i64, !dbg !12298
  %683 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12298
  %ics1698 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %683, i32 0, i32 0, !dbg !12299
  %swb_sizes1699 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1698, i32 0, i32 7, !dbg !12300
  %684 = load i8*, i8** %swb_sizes1699, align 8, !dbg !12300
  %arrayidx1700 = getelementptr inbounds i8, i8* %684, i64 %idxprom1697, !dbg !12298
  %685 = load i8, i8* %arrayidx1700, align 1, !dbg !12298
  %conv1701 = zext i8 %685 to i32, !dbg !12298
  %686 = load i32, i32* %start, align 4, !dbg !12301
  %add1702 = add nsw i32 %686, %conv1701, !dbg !12301
  store i32 %add1702, i32* %start, align 4, !dbg !12301
  %687 = load i32, i32* %w, align 4, !dbg !12302
  %mul1703 = mul nsw i32 %687, 16, !dbg !12304
  %688 = load i32, i32* %g, align 4, !dbg !12305
  %add1704 = add nsw i32 %mul1703, %688, !dbg !12306
  %idxprom1705 = sext i32 %add1704 to i64, !dbg !12307
  %689 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12307
  %can_pns1706 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %689, i32 0, i32 9, !dbg !12308
  %arrayidx1707 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns1706, i64 0, i64 %idxprom1705, !dbg !12307
  %690 = load i8, i8* %arrayidx1707, align 1, !dbg !12307
  %tobool1708 = icmp ne i8 %690, 0, !dbg !12307
  br i1 %tobool1708, label %if.then1709, label %if.end1712, !dbg !12309

if.then1709:                                      ; preds = %if.then1696
  %691 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12310
  %692 = load i32, i32* %w, align 4, !dbg !12312
  %693 = load i32, i32* %g, align 4, !dbg !12313
  %call1710 = call i32 @ff_pns_bits(%struct.SingleChannelElement* %691, i32 %692, i32 %693), !dbg !12314
  %694 = load i32, i32* %tbits, align 4, !dbg !12315
  %add1711 = add nsw i32 %694, %call1710, !dbg !12315
  store i32 %add1711, i32* %tbits, align 4, !dbg !12315
  br label %if.end1712, !dbg !12316

if.end1712:                                       ; preds = %if.then1709, %if.then1696
  br label %for.inc1795, !dbg !12317

if.end1713:                                       ; preds = %lor.lhs.false1688
  %695 = load i32, i32* %w, align 4, !dbg !12318
  %mul1714 = mul nsw i32 %695, 16, !dbg !12319
  %696 = load i32, i32* %g, align 4, !dbg !12320
  %add1715 = add nsw i32 %mul1714, %696, !dbg !12321
  %idxprom1716 = sext i32 %add1715 to i64, !dbg !12322
  %arrayidx1717 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom1716, !dbg !12322
  %697 = load float, float* %arrayidx1717, align 4, !dbg !12322
  %698 = load i32, i32* %w, align 4, !dbg !12323
  %mul1718 = mul nsw i32 %698, 16, !dbg !12324
  %699 = load i32, i32* %g, align 4, !dbg !12325
  %add1719 = add nsw i32 %mul1718, %699, !dbg !12326
  %idxprom1720 = sext i32 %add1719 to i64, !dbg !12327
  %700 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12327
  %sf_idx1721 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %700, i32 0, i32 7, !dbg !12328
  %arrayidx1722 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1721, i64 0, i64 %idxprom1720, !dbg !12327
  %701 = load i32, i32* %arrayidx1722, align 4, !dbg !12327
  %call1723 = call i32 @find_min_book(float %697, i32 %701), !dbg !12329
  store i32 %call1723, i32* %cb, align 4, !dbg !12330
  store i32 0, i32* %w2, align 4, !dbg !12331
  br label %for.cond1724, !dbg !12333

for.cond1724:                                     ; preds = %for.inc1754, %if.end1713
  %702 = load i32, i32* %w2, align 4, !dbg !12334
  %703 = load i32, i32* %w, align 4, !dbg !12337
  %idxprom1725 = sext i32 %703 to i64, !dbg !12338
  %704 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12338
  %ics1726 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %704, i32 0, i32 0, !dbg !12339
  %group_len1727 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1726, i32 0, i32 4, !dbg !12340
  %arrayidx1728 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1727, i64 0, i64 %idxprom1725, !dbg !12338
  %705 = load i8, i8* %arrayidx1728, align 1, !dbg !12338
  %conv1729 = zext i8 %705 to i32, !dbg !12338
  %cmp1730 = icmp slt i32 %702, %conv1729, !dbg !12341
  br i1 %cmp1730, label %for.body1732, label %for.end1756, !dbg !12342

for.body1732:                                     ; preds = %for.cond1724
  call void @llvm.dbg.declare(metadata i32* %b, metadata !12343, metadata !2772), !dbg !12345
  call void @llvm.dbg.declare(metadata float* %sqenergy, metadata !12346, metadata !2772), !dbg !12347
  %706 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !12348
  %707 = load i32, i32* %w, align 4, !dbg !12349
  %708 = load i32, i32* %w2, align 4, !dbg !12350
  %add1733 = add nsw i32 %707, %708, !dbg !12351
  %709 = load i32, i32* %g, align 4, !dbg !12352
  %710 = load float*, float** %coefs, align 8, !dbg !12353
  %711 = load i32, i32* %w2, align 4, !dbg !12354
  %mul1734 = mul nsw i32 %711, 128, !dbg !12355
  %idx.ext1735 = sext i32 %mul1734 to i64, !dbg !12356
  %add.ptr1736 = getelementptr inbounds float, float* %710, i64 %idx.ext1735, !dbg !12356
  %712 = load float*, float** %scaled1677, align 8, !dbg !12357
  %713 = load i32, i32* %w2, align 4, !dbg !12358
  %mul1737 = mul nsw i32 %713, 128, !dbg !12359
  %idx.ext1738 = sext i32 %mul1737 to i64, !dbg !12360
  %add.ptr1739 = getelementptr inbounds float, float* %712, i64 %idx.ext1738, !dbg !12360
  %714 = load i32, i32* %g, align 4, !dbg !12361
  %idxprom1740 = sext i32 %714 to i64, !dbg !12362
  %715 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12362
  %ics1741 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %715, i32 0, i32 0, !dbg !12363
  %swb_sizes1742 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1741, i32 0, i32 7, !dbg !12364
  %716 = load i8*, i8** %swb_sizes1742, align 8, !dbg !12364
  %arrayidx1743 = getelementptr inbounds i8, i8* %716, i64 %idxprom1740, !dbg !12362
  %717 = load i8, i8* %arrayidx1743, align 1, !dbg !12362
  %conv1744 = zext i8 %717 to i32, !dbg !12362
  %718 = load i32, i32* %w, align 4, !dbg !12365
  %mul1745 = mul nsw i32 %718, 16, !dbg !12366
  %719 = load i32, i32* %g, align 4, !dbg !12367
  %add1746 = add nsw i32 %mul1745, %719, !dbg !12368
  %idxprom1747 = sext i32 %add1746 to i64, !dbg !12369
  %720 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12369
  %sf_idx1748 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %720, i32 0, i32 7, !dbg !12370
  %arrayidx1749 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1748, i64 0, i64 %idxprom1747, !dbg !12369
  %721 = load i32, i32* %arrayidx1749, align 4, !dbg !12369
  %722 = load i32, i32* %cb, align 4, !dbg !12371
  %call1750 = call float @quantize_band_cost_cached(%struct.AACEncContext* %706, i32 %add1733, i32 %709, float* %add.ptr1736, float* %add.ptr1739, i32 %conv1744, i32 %721, i32 %722, float 1.000000e+00, float 0x7FF0000000000000, i32* %b, float* %sqenergy, i32 0), !dbg !12372
  %723 = load float, float* %dist, align 4, !dbg !12373
  %add1751 = fadd float %723, %call1750, !dbg !12373
  store float %add1751, float* %dist, align 4, !dbg !12373
  %724 = load i32, i32* %b, align 4, !dbg !12374
  %725 = load i32, i32* %bits, align 4, !dbg !12375
  %add1752 = add nsw i32 %725, %724, !dbg !12375
  store i32 %add1752, i32* %bits, align 4, !dbg !12375
  %726 = load float, float* %sqenergy, align 4, !dbg !12376
  %727 = load float, float* %qenergy, align 4, !dbg !12377
  %add1753 = fadd float %727, %726, !dbg !12377
  store float %add1753, float* %qenergy, align 4, !dbg !12377
  br label %for.inc1754, !dbg !12378

for.inc1754:                                      ; preds = %for.body1732
  %728 = load i32, i32* %w2, align 4, !dbg !12379
  %inc1755 = add nsw i32 %728, 1, !dbg !12379
  store i32 %inc1755, i32* %w2, align 4, !dbg !12379
  br label %for.cond1724, !dbg !12381, !llvm.loop !12382

for.end1756:                                      ; preds = %for.cond1724
  %729 = load float, float* %dist, align 4, !dbg !12384
  %730 = load i32, i32* %bits, align 4, !dbg !12385
  %conv1757 = sitofp i32 %730 to float, !dbg !12385
  %sub1758 = fsub float %729, %conv1757, !dbg !12386
  %731 = load i32, i32* %w, align 4, !dbg !12387
  %mul1759 = mul nsw i32 %731, 16, !dbg !12388
  %732 = load i32, i32* %g, align 4, !dbg !12389
  %add1760 = add nsw i32 %mul1759, %732, !dbg !12390
  %idxprom1761 = sext i32 %add1760 to i64, !dbg !12391
  %arrayidx1762 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom1761, !dbg !12391
  store float %sub1758, float* %arrayidx1762, align 4, !dbg !12392
  %733 = load float, float* %qenergy, align 4, !dbg !12393
  %734 = load i32, i32* %w, align 4, !dbg !12394
  %mul1763 = mul nsw i32 %734, 16, !dbg !12395
  %735 = load i32, i32* %g, align 4, !dbg !12396
  %add1764 = add nsw i32 %mul1763, %735, !dbg !12397
  %idxprom1765 = sext i32 %add1764 to i64, !dbg !12398
  %arrayidx1766 = getelementptr inbounds [128 x float], [128 x float]* %qenergies, i64 0, i64 %idxprom1765, !dbg !12398
  store float %733, float* %arrayidx1766, align 4, !dbg !12399
  %736 = load i32, i32* %prev, align 4, !dbg !12400
  %cmp1767 = icmp ne i32 %736, -1, !dbg !12401
  br i1 %cmp1767, label %if.then1769, label %if.end1782, !dbg !12402

if.then1769:                                      ; preds = %for.end1756
  call void @llvm.dbg.declare(metadata i32* %sfdiff, metadata !12403, metadata !2772), !dbg !12404
  %737 = load i32, i32* %w, align 4, !dbg !12405
  %mul1770 = mul nsw i32 %737, 16, !dbg !12406
  %738 = load i32, i32* %g, align 4, !dbg !12407
  %add1771 = add nsw i32 %mul1770, %738, !dbg !12408
  %idxprom1772 = sext i32 %add1771 to i64, !dbg !12409
  %739 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12409
  %sf_idx1773 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %739, i32 0, i32 7, !dbg !12410
  %arrayidx1774 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1773, i64 0, i64 %idxprom1772, !dbg !12409
  %740 = load i32, i32* %arrayidx1774, align 4, !dbg !12409
  %741 = load i32, i32* %prev, align 4, !dbg !12411
  %sub1775 = sub nsw i32 %740, %741, !dbg !12412
  %add1776 = add nsw i32 %sub1775, 60, !dbg !12413
  store i32 %add1776, i32* %a.addr.i3541, align 4, !dbg !12414
  store i32 0, i32* %amin.addr.i3542, align 4, !dbg !12414
  store i32 120, i32* %amax.addr.i3543, align 4, !dbg !12414
  %742 = load i32, i32* %a.addr.i3541, align 4, !dbg !12415
  %743 = load i32, i32* %amin.addr.i3542, align 4, !dbg !12416
  %cmp.i3544 = icmp slt i32 %742, %743, !dbg !12417
  br i1 %cmp.i3544, label %if.then.i3545, label %if.else.i3547, !dbg !12418

if.then.i3545:                                    ; preds = %if.then1769
  %744 = load i32, i32* %amin.addr.i3542, align 4, !dbg !12419
  store i32 %744, i32* %retval.i3540, align 4, !dbg !12420
  br label %av_clip_c.exit3550, !dbg !12420

if.else.i3547:                                    ; preds = %if.then1769
  %745 = load i32, i32* %a.addr.i3541, align 4, !dbg !12421
  %746 = load i32, i32* %amax.addr.i3543, align 4, !dbg !12422
  %cmp1.i3546 = icmp sgt i32 %745, %746, !dbg !12423
  br i1 %cmp1.i3546, label %if.then2.i3548, label %if.else3.i3549, !dbg !12424

if.then2.i3548:                                   ; preds = %if.else.i3547
  %747 = load i32, i32* %amax.addr.i3543, align 4, !dbg !12425
  store i32 %747, i32* %retval.i3540, align 4, !dbg !12426
  br label %av_clip_c.exit3550, !dbg !12426

if.else3.i3549:                                   ; preds = %if.else.i3547
  %748 = load i32, i32* %a.addr.i3541, align 4, !dbg !12427
  store i32 %748, i32* %retval.i3540, align 4, !dbg !12428
  br label %av_clip_c.exit3550, !dbg !12428

av_clip_c.exit3550:                               ; preds = %if.then.i3545, %if.then2.i3548, %if.else3.i3549
  %749 = load i32, i32* %retval.i3540, align 4, !dbg !12429
  store i32 %749, i32* %sfdiff, align 4, !dbg !12404
  %750 = load i32, i32* %sfdiff, align 4, !dbg !12430
  %idxprom1778 = sext i32 %750 to i64, !dbg !12431
  %arrayidx1779 = getelementptr inbounds [121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i64 0, i64 %idxprom1778, !dbg !12431
  %751 = load i8, i8* %arrayidx1779, align 1, !dbg !12431
  %conv1780 = zext i8 %751 to i32, !dbg !12431
  %752 = load i32, i32* %bits, align 4, !dbg !12432
  %add1781 = add nsw i32 %752, %conv1780, !dbg !12432
  store i32 %add1781, i32* %bits, align 4, !dbg !12432
  br label %if.end1782, !dbg !12433

if.end1782:                                       ; preds = %av_clip_c.exit3550, %for.end1756
  %753 = load i32, i32* %bits, align 4, !dbg !12434
  %754 = load i32, i32* %tbits, align 4, !dbg !12435
  %add1783 = add nsw i32 %754, %753, !dbg !12435
  store i32 %add1783, i32* %tbits, align 4, !dbg !12435
  %755 = load i32, i32* %g, align 4, !dbg !12436
  %idxprom1784 = sext i32 %755 to i64, !dbg !12437
  %756 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12437
  %ics1785 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %756, i32 0, i32 0, !dbg !12438
  %swb_sizes1786 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1785, i32 0, i32 7, !dbg !12439
  %757 = load i8*, i8** %swb_sizes1786, align 8, !dbg !12439
  %arrayidx1787 = getelementptr inbounds i8, i8* %757, i64 %idxprom1784, !dbg !12437
  %758 = load i8, i8* %arrayidx1787, align 1, !dbg !12437
  %conv1788 = zext i8 %758 to i32, !dbg !12437
  %759 = load i32, i32* %start, align 4, !dbg !12440
  %add1789 = add nsw i32 %759, %conv1788, !dbg !12440
  store i32 %add1789, i32* %start, align 4, !dbg !12440
  %760 = load i32, i32* %w, align 4, !dbg !12441
  %mul1790 = mul nsw i32 %760, 16, !dbg !12442
  %761 = load i32, i32* %g, align 4, !dbg !12443
  %add1791 = add nsw i32 %mul1790, %761, !dbg !12444
  %idxprom1792 = sext i32 %add1791 to i64, !dbg !12445
  %762 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12445
  %sf_idx1793 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %762, i32 0, i32 7, !dbg !12446
  %arrayidx1794 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1793, i64 0, i64 %idxprom1792, !dbg !12445
  %763 = load i32, i32* %arrayidx1794, align 4, !dbg !12445
  store i32 %763, i32* %prev, align 4, !dbg !12447
  br label %for.inc1795, !dbg !12448

for.inc1795:                                      ; preds = %if.end1782, %if.end1712
  %764 = load i32, i32* %g, align 4, !dbg !12449
  %inc1796 = add nsw i32 %764, 1, !dbg !12449
  store i32 %inc1796, i32* %g, align 4, !dbg !12449
  br label %for.cond1668, !dbg !12451, !llvm.loop !12452

for.end1797:                                      ; preds = %for.cond1668
  br label %for.inc1798, !dbg !12454

for.inc1798:                                      ; preds = %for.end1797
  %765 = load i32, i32* %w, align 4, !dbg !12455
  %idxprom1799 = sext i32 %765 to i64, !dbg !12457
  %766 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12457
  %ics1800 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %766, i32 0, i32 0, !dbg !12458
  %group_len1801 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1800, i32 0, i32 4, !dbg !12459
  %arrayidx1802 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len1801, i64 0, i64 %idxprom1799, !dbg !12457
  %767 = load i8, i8* %arrayidx1802, align 1, !dbg !12457
  %conv1803 = zext i8 %767 to i32, !dbg !12457
  %768 = load i32, i32* %w, align 4, !dbg !12460
  %add1804 = add nsw i32 %768, %conv1803, !dbg !12460
  store i32 %add1804, i32* %w, align 4, !dbg !12460
  br label %for.cond1661, !dbg !12461, !llvm.loop !12462

for.end1805:                                      ; preds = %for.cond1661
  %769 = load i32, i32* %tbits, align 4, !dbg !12464
  %770 = load i32, i32* %toomanybits, align 4, !dbg !12466
  %cmp1806 = icmp sgt i32 %769, %770, !dbg !12467
  br i1 %cmp1806, label %if.then1808, label %if.else1855, !dbg !12468

if.then1808:                                      ; preds = %for.end1805
  store i32 1, i32* %recomprd, align 4, !dbg !12469
  store i32 0, i32* %i, align 4, !dbg !12471
  br label %for.cond1809, !dbg !12473

for.cond1809:                                     ; preds = %for.inc1852, %if.then1808
  %771 = load i32, i32* %i, align 4, !dbg !12474
  %cmp1810 = icmp slt i32 %771, 128, !dbg !12477
  br i1 %cmp1810, label %for.body1812, label %for.end1854, !dbg !12478

for.body1812:                                     ; preds = %for.cond1809
  %772 = load i32, i32* %i, align 4, !dbg !12479
  %idxprom1813 = sext i32 %772 to i64, !dbg !12482
  %773 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12482
  %sf_idx1814 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %773, i32 0, i32 7, !dbg !12483
  %arrayidx1815 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1814, i64 0, i64 %idxprom1813, !dbg !12482
  %774 = load i32, i32* %arrayidx1815, align 4, !dbg !12482
  %cmp1816 = icmp slt i32 %774, 219, !dbg !12484
  br i1 %cmp1816, label %if.then1818, label %if.end1851, !dbg !12485

if.then1818:                                      ; preds = %for.body1812
  call void @llvm.dbg.declare(metadata i32* %maxsf_i, metadata !12486, metadata !2772), !dbg !12488
  %775 = load i32, i32* %tbits, align 4, !dbg !12489
  %cmp1819 = icmp sgt i32 %775, 5800, !dbg !12490
  br i1 %cmp1819, label %cond.true1821, label %cond.false1822, !dbg !12491

cond.true1821:                                    ; preds = %if.then1818
  br label %cond.end1825, !dbg !12492

cond.false1822:                                   ; preds = %if.then1818
  %776 = load i32, i32* %i, align 4, !dbg !12494
  %idxprom1823 = sext i32 %776 to i64, !dbg !12496
  %arrayidx1824 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom1823, !dbg !12496
  %777 = load i32, i32* %arrayidx1824, align 4, !dbg !12496
  br label %cond.end1825, !dbg !12497

cond.end1825:                                     ; preds = %cond.false1822, %cond.true1821
  %cond1826 = phi i32 [ 255, %cond.true1821 ], [ %777, %cond.false1822 ], !dbg !12498
  store i32 %cond1826, i32* %maxsf_i, align 4, !dbg !12500
  call void @llvm.dbg.declare(metadata i32* %new_sf, metadata !12501, metadata !2772), !dbg !12502
  %778 = load i32, i32* %maxsf_i, align 4, !dbg !12503
  %779 = load i32, i32* %i, align 4, !dbg !12504
  %idxprom1827 = sext i32 %779 to i64, !dbg !12505
  %780 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12505
  %sf_idx1828 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %780, i32 0, i32 7, !dbg !12506
  %arrayidx1829 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1828, i64 0, i64 %idxprom1827, !dbg !12505
  %781 = load i32, i32* %arrayidx1829, align 4, !dbg !12505
  %782 = load i32, i32* %qstep, align 4, !dbg !12507
  %add1830 = add nsw i32 %781, %782, !dbg !12508
  %cmp1831 = icmp sgt i32 %778, %add1830, !dbg !12509
  br i1 %cmp1831, label %cond.true1833, label %cond.false1838, !dbg !12510

cond.true1833:                                    ; preds = %cond.end1825
  %783 = load i32, i32* %i, align 4, !dbg !12511
  %idxprom1834 = sext i32 %783 to i64, !dbg !12512
  %784 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12512
  %sf_idx1835 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %784, i32 0, i32 7, !dbg !12513
  %arrayidx1836 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1835, i64 0, i64 %idxprom1834, !dbg !12512
  %785 = load i32, i32* %arrayidx1836, align 4, !dbg !12512
  %786 = load i32, i32* %qstep, align 4, !dbg !12514
  %add1837 = add nsw i32 %785, %786, !dbg !12515
  br label %cond.end1839, !dbg !12516

cond.false1838:                                   ; preds = %cond.end1825
  %787 = load i32, i32* %maxsf_i, align 4, !dbg !12517
  br label %cond.end1839, !dbg !12518

cond.end1839:                                     ; preds = %cond.false1838, %cond.true1833
  %cond1840 = phi i32 [ %add1837, %cond.true1833 ], [ %787, %cond.false1838 ], !dbg !12519
  store i32 %cond1840, i32* %new_sf, align 4, !dbg !12520
  %788 = load i32, i32* %new_sf, align 4, !dbg !12521
  %789 = load i32, i32* %i, align 4, !dbg !12523
  %idxprom1841 = sext i32 %789 to i64, !dbg !12524
  %790 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12524
  %sf_idx1842 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %790, i32 0, i32 7, !dbg !12525
  %arrayidx1843 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1842, i64 0, i64 %idxprom1841, !dbg !12524
  %791 = load i32, i32* %arrayidx1843, align 4, !dbg !12524
  %cmp1844 = icmp ne i32 %788, %791, !dbg !12526
  br i1 %cmp1844, label %if.then1846, label %if.end1850, !dbg !12527

if.then1846:                                      ; preds = %cond.end1839
  %792 = load i32, i32* %new_sf, align 4, !dbg !12528
  %793 = load i32, i32* %i, align 4, !dbg !12530
  %idxprom1847 = sext i32 %793 to i64, !dbg !12531
  %794 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12531
  %sf_idx1848 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %794, i32 0, i32 7, !dbg !12532
  %arrayidx1849 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1848, i64 0, i64 %idxprom1847, !dbg !12531
  store i32 %792, i32* %arrayidx1849, align 4, !dbg !12533
  store i32 1, i32* %changed, align 4, !dbg !12534
  br label %if.end1850, !dbg !12535

if.end1850:                                       ; preds = %if.then1846, %cond.end1839
  br label %if.end1851, !dbg !12536

if.end1851:                                       ; preds = %if.end1850, %for.body1812
  br label %for.inc1852, !dbg !12537

for.inc1852:                                      ; preds = %if.end1851
  %795 = load i32, i32* %i, align 4, !dbg !12538
  %inc1853 = add nsw i32 %795, 1, !dbg !12538
  store i32 %inc1853, i32* %i, align 4, !dbg !12538
  br label %for.cond1809, !dbg !12540, !llvm.loop !12541

for.end1854:                                      ; preds = %for.cond1809
  br label %if.end1919, !dbg !12543

if.else1855:                                      ; preds = %for.end1805
  %796 = load i32, i32* %tbits, align 4, !dbg !12544
  %797 = load i32, i32* %toofewbits, align 4, !dbg !12547
  %cmp1856 = icmp slt i32 %796, %797, !dbg !12548
  br i1 %cmp1856, label %if.then1858, label %if.end1918, !dbg !12544

if.then1858:                                      ; preds = %if.else1855
  store i32 1, i32* %recomprd, align 4, !dbg !12549
  store i32 0, i32* %i, align 4, !dbg !12551
  br label %for.cond1859, !dbg !12553

for.cond1859:                                     ; preds = %for.inc1915, %if.then1858
  %798 = load i32, i32* %i, align 4, !dbg !12554
  %cmp1860 = icmp slt i32 %798, 128, !dbg !12557
  br i1 %cmp1860, label %for.body1862, label %for.end1917, !dbg !12558

for.body1862:                                     ; preds = %for.cond1859
  %799 = load i32, i32* %i, align 4, !dbg !12559
  %idxprom1863 = sext i32 %799 to i64, !dbg !12562
  %800 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12562
  %sf_idx1864 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %800, i32 0, i32 7, !dbg !12563
  %arrayidx1865 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1864, i64 0, i64 %idxprom1863, !dbg !12562
  %801 = load i32, i32* %arrayidx1865, align 4, !dbg !12562
  %cmp1866 = icmp sgt i32 %801, 140, !dbg !12564
  br i1 %cmp1866, label %if.then1868, label %if.end1914, !dbg !12565

if.then1868:                                      ; preds = %for.body1862
  call void @llvm.dbg.declare(metadata i32* %new_sf1869, metadata !12566, metadata !2772), !dbg !12568
  %802 = load i32, i32* %i, align 4, !dbg !12569
  %idxprom1870 = sext i32 %802 to i64, !dbg !12570
  %arrayidx1871 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom1870, !dbg !12570
  %803 = load i32, i32* %arrayidx1871, align 4, !dbg !12570
  %cmp1872 = icmp sgt i32 %803, 140, !dbg !12571
  br i1 %cmp1872, label %cond.true1874, label %cond.false1877, !dbg !12572

cond.true1874:                                    ; preds = %if.then1868
  %804 = load i32, i32* %i, align 4, !dbg !12573
  %idxprom1875 = sext i32 %804 to i64, !dbg !12575
  %arrayidx1876 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom1875, !dbg !12575
  %805 = load i32, i32* %arrayidx1876, align 4, !dbg !12575
  br label %cond.end1878, !dbg !12576

cond.false1877:                                   ; preds = %if.then1868
  br label %cond.end1878, !dbg !12577

cond.end1878:                                     ; preds = %cond.false1877, %cond.true1874
  %cond1879 = phi i32 [ %805, %cond.true1874 ], [ 140, %cond.false1877 ], !dbg !12579
  %806 = load i32, i32* %i, align 4, !dbg !12581
  %idxprom1880 = sext i32 %806 to i64, !dbg !12582
  %807 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12582
  %sf_idx1881 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %807, i32 0, i32 7, !dbg !12583
  %arrayidx1882 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1881, i64 0, i64 %idxprom1880, !dbg !12582
  %808 = load i32, i32* %arrayidx1882, align 4, !dbg !12582
  %809 = load i32, i32* %qstep, align 4, !dbg !12584
  %sub1883 = sub nsw i32 %808, %809, !dbg !12585
  %cmp1884 = icmp sgt i32 %cond1879, %sub1883, !dbg !12586
  br i1 %cmp1884, label %cond.true1886, label %cond.false1897, !dbg !12587

cond.true1886:                                    ; preds = %cond.end1878
  %810 = load i32, i32* %i, align 4, !dbg !12588
  %idxprom1887 = sext i32 %810 to i64, !dbg !12590
  %arrayidx1888 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom1887, !dbg !12590
  %811 = load i32, i32* %arrayidx1888, align 4, !dbg !12590
  %cmp1889 = icmp sgt i32 %811, 140, !dbg !12591
  br i1 %cmp1889, label %cond.true1891, label %cond.false1894, !dbg !12592

cond.true1891:                                    ; preds = %cond.true1886
  %812 = load i32, i32* %i, align 4, !dbg !12593
  %idxprom1892 = sext i32 %812 to i64, !dbg !12595
  %arrayidx1893 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom1892, !dbg !12595
  %813 = load i32, i32* %arrayidx1893, align 4, !dbg !12595
  br label %cond.end1895, !dbg !12596

cond.false1894:                                   ; preds = %cond.true1886
  br label %cond.end1895, !dbg !12597

cond.end1895:                                     ; preds = %cond.false1894, %cond.true1891
  %cond1896 = phi i32 [ %813, %cond.true1891 ], [ 140, %cond.false1894 ], !dbg !12599
  br label %cond.end1902, !dbg !12601

cond.false1897:                                   ; preds = %cond.end1878
  %814 = load i32, i32* %i, align 4, !dbg !12602
  %idxprom1898 = sext i32 %814 to i64, !dbg !12604
  %815 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12604
  %sf_idx1899 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %815, i32 0, i32 7, !dbg !12605
  %arrayidx1900 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1899, i64 0, i64 %idxprom1898, !dbg !12604
  %816 = load i32, i32* %arrayidx1900, align 4, !dbg !12604
  %817 = load i32, i32* %qstep, align 4, !dbg !12606
  %sub1901 = sub nsw i32 %816, %817, !dbg !12607
  br label %cond.end1902, !dbg !12608

cond.end1902:                                     ; preds = %cond.false1897, %cond.end1895
  %cond1903 = phi i32 [ %cond1896, %cond.end1895 ], [ %sub1901, %cond.false1897 ], !dbg !12609
  store i32 %cond1903, i32* %new_sf1869, align 4, !dbg !12611
  %818 = load i32, i32* %new_sf1869, align 4, !dbg !12612
  %819 = load i32, i32* %i, align 4, !dbg !12614
  %idxprom1904 = sext i32 %819 to i64, !dbg !12615
  %820 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12615
  %sf_idx1905 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %820, i32 0, i32 7, !dbg !12616
  %arrayidx1906 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1905, i64 0, i64 %idxprom1904, !dbg !12615
  %821 = load i32, i32* %arrayidx1906, align 4, !dbg !12615
  %cmp1907 = icmp ne i32 %818, %821, !dbg !12617
  br i1 %cmp1907, label %if.then1909, label %if.end1913, !dbg !12618

if.then1909:                                      ; preds = %cond.end1902
  %822 = load i32, i32* %new_sf1869, align 4, !dbg !12619
  %823 = load i32, i32* %i, align 4, !dbg !12621
  %idxprom1910 = sext i32 %823 to i64, !dbg !12622
  %824 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12622
  %sf_idx1911 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %824, i32 0, i32 7, !dbg !12623
  %arrayidx1912 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1911, i64 0, i64 %idxprom1910, !dbg !12622
  store i32 %822, i32* %arrayidx1912, align 4, !dbg !12624
  store i32 1, i32* %changed, align 4, !dbg !12625
  br label %if.end1913, !dbg !12626

if.end1913:                                       ; preds = %if.then1909, %cond.end1902
  br label %if.end1914, !dbg !12627

if.end1914:                                       ; preds = %if.end1913, %for.body1862
  br label %for.inc1915, !dbg !12628

for.inc1915:                                      ; preds = %if.end1914
  %825 = load i32, i32* %i, align 4, !dbg !12629
  %inc1916 = add nsw i32 %825, 1, !dbg !12629
  store i32 %inc1916, i32* %i, align 4, !dbg !12629
  br label %for.cond1859, !dbg !12631, !llvm.loop !12632

for.end1917:                                      ; preds = %for.cond1859
  br label %if.end1918, !dbg !12634

if.end1918:                                       ; preds = %for.end1917, %if.else1855
  br label %if.end1919

if.end1919:                                       ; preds = %if.end1918, %for.end1854
  %826 = load i32, i32* %qstep, align 4, !dbg !12635
  %shr = ashr i32 %826, 1, !dbg !12635
  store i32 %shr, i32* %qstep, align 4, !dbg !12635
  %827 = load i32, i32* %qstep, align 4, !dbg !12636
  %tobool1920 = icmp ne i32 %827, 0, !dbg !12636
  br i1 %tobool1920, label %if.end1932, label %land.lhs.true1921, !dbg !12638

land.lhs.true1921:                                ; preds = %if.end1919
  %828 = load i32, i32* %tbits, align 4, !dbg !12639
  %829 = load i32, i32* %toomanybits, align 4, !dbg !12641
  %cmp1922 = icmp sgt i32 %828, %829, !dbg !12642
  br i1 %cmp1922, label %land.lhs.true1924, label %if.end1932, !dbg !12643

land.lhs.true1924:                                ; preds = %land.lhs.true1921
  %830 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12644
  %sf_idx1925 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %830, i32 0, i32 7, !dbg !12646
  %arrayidx1926 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1925, i64 0, i64 0, !dbg !12644
  %831 = load i32, i32* %arrayidx1926, align 4, !dbg !12644
  %cmp1927 = icmp slt i32 %831, 217, !dbg !12647
  br i1 %cmp1927, label %land.lhs.true1929, label %if.end1932, !dbg !12648

land.lhs.true1929:                                ; preds = %land.lhs.true1924
  %832 = load i32, i32* %changed, align 4, !dbg !12649
  %tobool1930 = icmp ne i32 %832, 0, !dbg !12649
  br i1 %tobool1930, label %if.then1931, label %if.end1932, !dbg !12651

if.then1931:                                      ; preds = %land.lhs.true1929
  store i32 1, i32* %qstep, align 4, !dbg !12652
  br label %if.end1932, !dbg !12653

if.end1932:                                       ; preds = %if.then1931, %land.lhs.true1929, %land.lhs.true1924, %land.lhs.true1921, %if.end1919
  br label %do.cond, !dbg !12654

do.cond:                                          ; preds = %if.end1932
  %833 = load i32, i32* %qstep, align 4, !dbg !12655
  %tobool1933 = icmp ne i32 %833, 0, !dbg !12657
  br i1 %tobool1933, label %do.body1660, label %do.end, !dbg !12657, !llvm.loop !12234

do.end:                                           ; preds = %do.cond
  store i32 1, i32* %overdist, align 4, !dbg !12658
  %834 = load i32, i32* %tbits, align 4, !dbg !12659
  %835 = load i32, i32* %toofewbits, align 4, !dbg !12660
  %cmp1934 = icmp slt i32 %834, %835, !dbg !12661
  %conv1935 = zext i1 %cmp1934 to i32, !dbg !12661
  store i32 %conv1935, i32* %fflag, align 4, !dbg !12662
  store i32 0, i32* %i, align 4, !dbg !12663
  br label %for.cond1936, !dbg !12664

for.cond1936:                                     ; preds = %for.inc2526, %do.end
  %836 = load i32, i32* %i, align 4, !dbg !12665
  %cmp1937 = icmp slt i32 %836, 2, !dbg !12667
  br i1 %cmp1937, label %land.rhs, label %land.end, !dbg !12668

land.rhs:                                         ; preds = %for.cond1936
  %837 = load i32, i32* %overdist, align 4, !dbg !12669
  %tobool1939 = icmp ne i32 %837, 0, !dbg !12669
  br i1 %tobool1939, label %lor.end, label %lor.rhs, !dbg !12671

lor.rhs:                                          ; preds = %land.rhs
  %838 = load i32, i32* %recomprd, align 4, !dbg !12672
  %tobool1940 = icmp ne i32 %838, 0, !dbg !12674
  br label %lor.end, !dbg !12674

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %839 = phi i1 [ true, %land.rhs ], [ %tobool1940, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond1936
  %840 = phi i1 [ false, %for.cond1936 ], [ %839, %lor.end ]
  br i1 %840, label %for.body1941, label %for.end2528, !dbg !12675

for.body1941:                                     ; preds = %land.end
  %841 = load i32, i32* %recomprd, align 4, !dbg !12677
  %tobool1942 = icmp ne i32 %841, 0, !dbg !12677
  br i1 %tobool1942, label %if.then1943, label %if.end2099, !dbg !12678

if.then1943:                                      ; preds = %for.body1941
  store i32 -1, i32* %prev, align 4, !dbg !12679
  store i32 0, i32* %tbits, align 4, !dbg !12680
  store i32 0, i32* %w, align 4, !dbg !12681
  br label %for.cond1944, !dbg !12682

for.cond1944:                                     ; preds = %for.inc2091, %if.then1943
  %842 = load i32, i32* %w, align 4, !dbg !12683
  %843 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12685
  %ics1945 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %843, i32 0, i32 0, !dbg !12686
  %num_windows1946 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1945, i32 0, i32 9, !dbg !12687
  %844 = load i32, i32* %num_windows1946, align 4, !dbg !12687
  %cmp1947 = icmp slt i32 %842, %844, !dbg !12688
  br i1 %cmp1947, label %for.body1949, label %for.end2098, !dbg !12689

for.body1949:                                     ; preds = %for.cond1944
  %845 = load i32, i32* %w, align 4, !dbg !12690
  %mul1950 = mul nsw i32 %845, 128, !dbg !12691
  store i32 %mul1950, i32* %start, align 4, !dbg !12692
  store i32 0, i32* %g, align 4, !dbg !12693
  br label %for.cond1951, !dbg !12694

for.cond1951:                                     ; preds = %for.inc2088, %for.body1949
  %846 = load i32, i32* %g, align 4, !dbg !12695
  %847 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12697
  %ics1952 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %847, i32 0, i32 0, !dbg !12698
  %num_swb1953 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1952, i32 0, i32 8, !dbg !12699
  %848 = load i32, i32* %num_swb1953, align 32, !dbg !12699
  %cmp1954 = icmp slt i32 %846, %848, !dbg !12700
  br i1 %cmp1954, label %for.body1956, label %for.end2090, !dbg !12701

for.body1956:                                     ; preds = %for.cond1951
  call void @llvm.dbg.declare(metadata float** %coefs1957, metadata !12702, metadata !2772), !dbg !12703
  %849 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12704
  %coeffs1958 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %849, i32 0, i32 14, !dbg !12705
  %arraydecay1959 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs1958, i32 0, i32 0, !dbg !12704
  %850 = load i32, i32* %start, align 4, !dbg !12706
  %idx.ext1960 = sext i32 %850 to i64, !dbg !12707
  %add.ptr1961 = getelementptr inbounds float, float* %arraydecay1959, i64 %idx.ext1960, !dbg !12707
  store float* %add.ptr1961, float** %coefs1957, align 8, !dbg !12703
  call void @llvm.dbg.declare(metadata float** %scaled1962, metadata !12708, metadata !2772), !dbg !12709
  %851 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !12710
  %scoefs1963 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %851, i32 0, i32 29, !dbg !12711
  %arraydecay1964 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs1963, i32 0, i32 0, !dbg !12710
  %852 = load i32, i32* %start, align 4, !dbg !12712
  %idx.ext1965 = sext i32 %852 to i64, !dbg !12713
  %add.ptr1966 = getelementptr inbounds float, float* %arraydecay1964, i64 %idx.ext1965, !dbg !12713
  store float* %add.ptr1966, float** %scaled1962, align 8, !dbg !12709
  call void @llvm.dbg.declare(metadata i32* %bits1967, metadata !12714, metadata !2772), !dbg !12715
  store i32 0, i32* %bits1967, align 4, !dbg !12715
  call void @llvm.dbg.declare(metadata i32* %cb1968, metadata !12716, metadata !2772), !dbg !12717
  call void @llvm.dbg.declare(metadata float* %dist1969, metadata !12718, metadata !2772), !dbg !12719
  store float 0.000000e+00, float* %dist1969, align 4, !dbg !12719
  call void @llvm.dbg.declare(metadata float* %qenergy1970, metadata !12720, metadata !2772), !dbg !12721
  store float 0.000000e+00, float* %qenergy1970, align 4, !dbg !12721
  %853 = load i32, i32* %w, align 4, !dbg !12722
  %mul1971 = mul nsw i32 %853, 16, !dbg !12724
  %854 = load i32, i32* %g, align 4, !dbg !12725
  %add1972 = add nsw i32 %mul1971, %854, !dbg !12726
  %idxprom1973 = sext i32 %add1972 to i64, !dbg !12727
  %855 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12727
  %zeroes1974 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %855, i32 0, i32 8, !dbg !12728
  %arrayidx1975 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes1974, i64 0, i64 %idxprom1973, !dbg !12727
  %856 = load i8, i8* %arrayidx1975, align 1, !dbg !12727
  %conv1976 = zext i8 %856 to i32, !dbg !12727
  %tobool1977 = icmp ne i32 %conv1976, 0, !dbg !12727
  br i1 %tobool1977, label %if.then1986, label %lor.lhs.false1978, !dbg !12729

lor.lhs.false1978:                                ; preds = %for.body1956
  %857 = load i32, i32* %w, align 4, !dbg !12730
  %mul1979 = mul nsw i32 %857, 16, !dbg !12732
  %858 = load i32, i32* %g, align 4, !dbg !12733
  %add1980 = add nsw i32 %mul1979, %858, !dbg !12734
  %idxprom1981 = sext i32 %add1980 to i64, !dbg !12735
  %859 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12735
  %sf_idx1982 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %859, i32 0, i32 7, !dbg !12736
  %arrayidx1983 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1982, i64 0, i64 %idxprom1981, !dbg !12735
  %860 = load i32, i32* %arrayidx1983, align 4, !dbg !12735
  %cmp1984 = icmp sge i32 %860, 218, !dbg !12737
  br i1 %cmp1984, label %if.then1986, label %if.end2003, !dbg !12738

if.then1986:                                      ; preds = %lor.lhs.false1978, %for.body1956
  %861 = load i32, i32* %g, align 4, !dbg !12739
  %idxprom1987 = sext i32 %861 to i64, !dbg !12741
  %862 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12741
  %ics1988 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %862, i32 0, i32 0, !dbg !12742
  %swb_sizes1989 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1988, i32 0, i32 7, !dbg !12743
  %863 = load i8*, i8** %swb_sizes1989, align 8, !dbg !12743
  %arrayidx1990 = getelementptr inbounds i8, i8* %863, i64 %idxprom1987, !dbg !12741
  %864 = load i8, i8* %arrayidx1990, align 1, !dbg !12741
  %conv1991 = zext i8 %864 to i32, !dbg !12741
  %865 = load i32, i32* %start, align 4, !dbg !12744
  %add1992 = add nsw i32 %865, %conv1991, !dbg !12744
  store i32 %add1992, i32* %start, align 4, !dbg !12744
  %866 = load i32, i32* %w, align 4, !dbg !12745
  %mul1993 = mul nsw i32 %866, 16, !dbg !12747
  %867 = load i32, i32* %g, align 4, !dbg !12748
  %add1994 = add nsw i32 %mul1993, %867, !dbg !12749
  %idxprom1995 = sext i32 %add1994 to i64, !dbg !12750
  %868 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12750
  %can_pns1996 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %868, i32 0, i32 9, !dbg !12751
  %arrayidx1997 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns1996, i64 0, i64 %idxprom1995, !dbg !12750
  %869 = load i8, i8* %arrayidx1997, align 1, !dbg !12750
  %tobool1998 = icmp ne i8 %869, 0, !dbg !12750
  br i1 %tobool1998, label %if.then1999, label %if.end2002, !dbg !12752

if.then1999:                                      ; preds = %if.then1986
  %870 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12753
  %871 = load i32, i32* %w, align 4, !dbg !12755
  %872 = load i32, i32* %g, align 4, !dbg !12756
  %call2000 = call i32 @ff_pns_bits(%struct.SingleChannelElement* %870, i32 %871, i32 %872), !dbg !12757
  %873 = load i32, i32* %tbits, align 4, !dbg !12758
  %add2001 = add nsw i32 %873, %call2000, !dbg !12758
  store i32 %add2001, i32* %tbits, align 4, !dbg !12758
  br label %if.end2002, !dbg !12759

if.end2002:                                       ; preds = %if.then1999, %if.then1986
  br label %for.inc2088, !dbg !12760

if.end2003:                                       ; preds = %lor.lhs.false1978
  %874 = load i32, i32* %w, align 4, !dbg !12761
  %mul2004 = mul nsw i32 %874, 16, !dbg !12762
  %875 = load i32, i32* %g, align 4, !dbg !12763
  %add2005 = add nsw i32 %mul2004, %875, !dbg !12764
  %idxprom2006 = sext i32 %add2005 to i64, !dbg !12765
  %arrayidx2007 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom2006, !dbg !12765
  %876 = load float, float* %arrayidx2007, align 4, !dbg !12765
  %877 = load i32, i32* %w, align 4, !dbg !12766
  %mul2008 = mul nsw i32 %877, 16, !dbg !12767
  %878 = load i32, i32* %g, align 4, !dbg !12768
  %add2009 = add nsw i32 %mul2008, %878, !dbg !12769
  %idxprom2010 = sext i32 %add2009 to i64, !dbg !12770
  %879 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12770
  %sf_idx2011 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %879, i32 0, i32 7, !dbg !12771
  %arrayidx2012 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2011, i64 0, i64 %idxprom2010, !dbg !12770
  %880 = load i32, i32* %arrayidx2012, align 4, !dbg !12770
  %call2013 = call i32 @find_min_book(float %876, i32 %880), !dbg !12772
  store i32 %call2013, i32* %cb1968, align 4, !dbg !12773
  store i32 0, i32* %w2, align 4, !dbg !12774
  br label %for.cond2014, !dbg !12776

for.cond2014:                                     ; preds = %for.inc2046, %if.end2003
  %881 = load i32, i32* %w2, align 4, !dbg !12777
  %882 = load i32, i32* %w, align 4, !dbg !12780
  %idxprom2015 = sext i32 %882 to i64, !dbg !12781
  %883 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12781
  %ics2016 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %883, i32 0, i32 0, !dbg !12782
  %group_len2017 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2016, i32 0, i32 4, !dbg !12783
  %arrayidx2018 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2017, i64 0, i64 %idxprom2015, !dbg !12781
  %884 = load i8, i8* %arrayidx2018, align 1, !dbg !12781
  %conv2019 = zext i8 %884 to i32, !dbg !12781
  %cmp2020 = icmp slt i32 %881, %conv2019, !dbg !12784
  br i1 %cmp2020, label %for.body2022, label %for.end2048, !dbg !12785

for.body2022:                                     ; preds = %for.cond2014
  call void @llvm.dbg.declare(metadata i32* %b2023, metadata !12786, metadata !2772), !dbg !12788
  call void @llvm.dbg.declare(metadata float* %sqenergy2024, metadata !12789, metadata !2772), !dbg !12790
  %885 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !12791
  %886 = load i32, i32* %w, align 4, !dbg !12792
  %887 = load i32, i32* %w2, align 4, !dbg !12793
  %add2025 = add nsw i32 %886, %887, !dbg !12794
  %888 = load i32, i32* %g, align 4, !dbg !12795
  %889 = load float*, float** %coefs1957, align 8, !dbg !12796
  %890 = load i32, i32* %w2, align 4, !dbg !12797
  %mul2026 = mul nsw i32 %890, 128, !dbg !12798
  %idx.ext2027 = sext i32 %mul2026 to i64, !dbg !12799
  %add.ptr2028 = getelementptr inbounds float, float* %889, i64 %idx.ext2027, !dbg !12799
  %891 = load float*, float** %scaled1962, align 8, !dbg !12800
  %892 = load i32, i32* %w2, align 4, !dbg !12801
  %mul2029 = mul nsw i32 %892, 128, !dbg !12802
  %idx.ext2030 = sext i32 %mul2029 to i64, !dbg !12803
  %add.ptr2031 = getelementptr inbounds float, float* %891, i64 %idx.ext2030, !dbg !12803
  %893 = load i32, i32* %g, align 4, !dbg !12804
  %idxprom2032 = sext i32 %893 to i64, !dbg !12805
  %894 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12805
  %ics2033 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %894, i32 0, i32 0, !dbg !12806
  %swb_sizes2034 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2033, i32 0, i32 7, !dbg !12807
  %895 = load i8*, i8** %swb_sizes2034, align 8, !dbg !12807
  %arrayidx2035 = getelementptr inbounds i8, i8* %895, i64 %idxprom2032, !dbg !12805
  %896 = load i8, i8* %arrayidx2035, align 1, !dbg !12805
  %conv2036 = zext i8 %896 to i32, !dbg !12805
  %897 = load i32, i32* %w, align 4, !dbg !12808
  %mul2037 = mul nsw i32 %897, 16, !dbg !12809
  %898 = load i32, i32* %g, align 4, !dbg !12810
  %add2038 = add nsw i32 %mul2037, %898, !dbg !12811
  %idxprom2039 = sext i32 %add2038 to i64, !dbg !12812
  %899 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12812
  %sf_idx2040 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %899, i32 0, i32 7, !dbg !12813
  %arrayidx2041 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2040, i64 0, i64 %idxprom2039, !dbg !12812
  %900 = load i32, i32* %arrayidx2041, align 4, !dbg !12812
  %901 = load i32, i32* %cb1968, align 4, !dbg !12814
  %call2042 = call float @quantize_band_cost_cached(%struct.AACEncContext* %885, i32 %add2025, i32 %888, float* %add.ptr2028, float* %add.ptr2031, i32 %conv2036, i32 %900, i32 %901, float 1.000000e+00, float 0x7FF0000000000000, i32* %b2023, float* %sqenergy2024, i32 0), !dbg !12815
  %902 = load float, float* %dist1969, align 4, !dbg !12816
  %add2043 = fadd float %902, %call2042, !dbg !12816
  store float %add2043, float* %dist1969, align 4, !dbg !12816
  %903 = load i32, i32* %b2023, align 4, !dbg !12817
  %904 = load i32, i32* %bits1967, align 4, !dbg !12818
  %add2044 = add nsw i32 %904, %903, !dbg !12818
  store i32 %add2044, i32* %bits1967, align 4, !dbg !12818
  %905 = load float, float* %sqenergy2024, align 4, !dbg !12819
  %906 = load float, float* %qenergy1970, align 4, !dbg !12820
  %add2045 = fadd float %906, %905, !dbg !12820
  store float %add2045, float* %qenergy1970, align 4, !dbg !12820
  br label %for.inc2046, !dbg !12821

for.inc2046:                                      ; preds = %for.body2022
  %907 = load i32, i32* %w2, align 4, !dbg !12822
  %inc2047 = add nsw i32 %907, 1, !dbg !12822
  store i32 %inc2047, i32* %w2, align 4, !dbg !12822
  br label %for.cond2014, !dbg !12824, !llvm.loop !12825

for.end2048:                                      ; preds = %for.cond2014
  %908 = load float, float* %dist1969, align 4, !dbg !12827
  %909 = load i32, i32* %bits1967, align 4, !dbg !12828
  %conv2049 = sitofp i32 %909 to float, !dbg !12828
  %sub2050 = fsub float %908, %conv2049, !dbg !12829
  %910 = load i32, i32* %w, align 4, !dbg !12830
  %mul2051 = mul nsw i32 %910, 16, !dbg !12831
  %911 = load i32, i32* %g, align 4, !dbg !12832
  %add2052 = add nsw i32 %mul2051, %911, !dbg !12833
  %idxprom2053 = sext i32 %add2052 to i64, !dbg !12834
  %arrayidx2054 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2053, !dbg !12834
  store float %sub2050, float* %arrayidx2054, align 4, !dbg !12835
  %912 = load float, float* %qenergy1970, align 4, !dbg !12836
  %913 = load i32, i32* %w, align 4, !dbg !12837
  %mul2055 = mul nsw i32 %913, 16, !dbg !12838
  %914 = load i32, i32* %g, align 4, !dbg !12839
  %add2056 = add nsw i32 %mul2055, %914, !dbg !12840
  %idxprom2057 = sext i32 %add2056 to i64, !dbg !12841
  %arrayidx2058 = getelementptr inbounds [128 x float], [128 x float]* %qenergies, i64 0, i64 %idxprom2057, !dbg !12841
  store float %912, float* %arrayidx2058, align 4, !dbg !12842
  %915 = load i32, i32* %prev, align 4, !dbg !12843
  %cmp2059 = icmp ne i32 %915, -1, !dbg !12844
  br i1 %cmp2059, label %if.then2061, label %if.end2075, !dbg !12845

if.then2061:                                      ; preds = %for.end2048
  call void @llvm.dbg.declare(metadata i32* %sfdiff2062, metadata !12846, metadata !2772), !dbg !12847
  %916 = load i32, i32* %w, align 4, !dbg !12848
  %mul2063 = mul nsw i32 %916, 16, !dbg !12849
  %917 = load i32, i32* %g, align 4, !dbg !12850
  %add2064 = add nsw i32 %mul2063, %917, !dbg !12851
  %idxprom2065 = sext i32 %add2064 to i64, !dbg !12852
  %918 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12852
  %sf_idx2066 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %918, i32 0, i32 7, !dbg !12853
  %arrayidx2067 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2066, i64 0, i64 %idxprom2065, !dbg !12852
  %919 = load i32, i32* %arrayidx2067, align 4, !dbg !12852
  %920 = load i32, i32* %prev, align 4, !dbg !12854
  %sub2068 = sub nsw i32 %919, %920, !dbg !12855
  %add2069 = add nsw i32 %sub2068, 60, !dbg !12856
  store i32 %add2069, i32* %a.addr.i3552, align 4, !dbg !12857
  store i32 0, i32* %amin.addr.i3553, align 4, !dbg !12857
  store i32 120, i32* %amax.addr.i3554, align 4, !dbg !12857
  %921 = load i32, i32* %a.addr.i3552, align 4, !dbg !12858
  %922 = load i32, i32* %amin.addr.i3553, align 4, !dbg !12859
  %cmp.i3555 = icmp slt i32 %921, %922, !dbg !12860
  br i1 %cmp.i3555, label %if.then.i3556, label %if.else.i3558, !dbg !12861

if.then.i3556:                                    ; preds = %if.then2061
  %923 = load i32, i32* %amin.addr.i3553, align 4, !dbg !12862
  store i32 %923, i32* %retval.i3551, align 4, !dbg !12863
  br label %av_clip_c.exit3561, !dbg !12863

if.else.i3558:                                    ; preds = %if.then2061
  %924 = load i32, i32* %a.addr.i3552, align 4, !dbg !12864
  %925 = load i32, i32* %amax.addr.i3554, align 4, !dbg !12865
  %cmp1.i3557 = icmp sgt i32 %924, %925, !dbg !12866
  br i1 %cmp1.i3557, label %if.then2.i3559, label %if.else3.i3560, !dbg !12867

if.then2.i3559:                                   ; preds = %if.else.i3558
  %926 = load i32, i32* %amax.addr.i3554, align 4, !dbg !12868
  store i32 %926, i32* %retval.i3551, align 4, !dbg !12869
  br label %av_clip_c.exit3561, !dbg !12869

if.else3.i3560:                                   ; preds = %if.else.i3558
  %927 = load i32, i32* %a.addr.i3552, align 4, !dbg !12870
  store i32 %927, i32* %retval.i3551, align 4, !dbg !12871
  br label %av_clip_c.exit3561, !dbg !12871

av_clip_c.exit3561:                               ; preds = %if.then.i3556, %if.then2.i3559, %if.else3.i3560
  %928 = load i32, i32* %retval.i3551, align 4, !dbg !12872
  store i32 %928, i32* %sfdiff2062, align 4, !dbg !12847
  %929 = load i32, i32* %sfdiff2062, align 4, !dbg !12873
  %idxprom2071 = sext i32 %929 to i64, !dbg !12874
  %arrayidx2072 = getelementptr inbounds [121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i64 0, i64 %idxprom2071, !dbg !12874
  %930 = load i8, i8* %arrayidx2072, align 1, !dbg !12874
  %conv2073 = zext i8 %930 to i32, !dbg !12874
  %931 = load i32, i32* %bits1967, align 4, !dbg !12875
  %add2074 = add nsw i32 %931, %conv2073, !dbg !12875
  store i32 %add2074, i32* %bits1967, align 4, !dbg !12875
  br label %if.end2075, !dbg !12876

if.end2075:                                       ; preds = %av_clip_c.exit3561, %for.end2048
  %932 = load i32, i32* %bits1967, align 4, !dbg !12877
  %933 = load i32, i32* %tbits, align 4, !dbg !12878
  %add2076 = add nsw i32 %933, %932, !dbg !12878
  store i32 %add2076, i32* %tbits, align 4, !dbg !12878
  %934 = load i32, i32* %g, align 4, !dbg !12879
  %idxprom2077 = sext i32 %934 to i64, !dbg !12880
  %935 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12880
  %ics2078 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %935, i32 0, i32 0, !dbg !12881
  %swb_sizes2079 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2078, i32 0, i32 7, !dbg !12882
  %936 = load i8*, i8** %swb_sizes2079, align 8, !dbg !12882
  %arrayidx2080 = getelementptr inbounds i8, i8* %936, i64 %idxprom2077, !dbg !12880
  %937 = load i8, i8* %arrayidx2080, align 1, !dbg !12880
  %conv2081 = zext i8 %937 to i32, !dbg !12880
  %938 = load i32, i32* %start, align 4, !dbg !12883
  %add2082 = add nsw i32 %938, %conv2081, !dbg !12883
  store i32 %add2082, i32* %start, align 4, !dbg !12883
  %939 = load i32, i32* %w, align 4, !dbg !12884
  %mul2083 = mul nsw i32 %939, 16, !dbg !12885
  %940 = load i32, i32* %g, align 4, !dbg !12886
  %add2084 = add nsw i32 %mul2083, %940, !dbg !12887
  %idxprom2085 = sext i32 %add2084 to i64, !dbg !12888
  %941 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12888
  %sf_idx2086 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %941, i32 0, i32 7, !dbg !12889
  %arrayidx2087 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2086, i64 0, i64 %idxprom2085, !dbg !12888
  %942 = load i32, i32* %arrayidx2087, align 4, !dbg !12888
  store i32 %942, i32* %prev, align 4, !dbg !12890
  br label %for.inc2088, !dbg !12891

for.inc2088:                                      ; preds = %if.end2075, %if.end2002
  %943 = load i32, i32* %g, align 4, !dbg !12892
  %inc2089 = add nsw i32 %943, 1, !dbg !12892
  store i32 %inc2089, i32* %g, align 4, !dbg !12892
  br label %for.cond1951, !dbg !12894, !llvm.loop !12895

for.end2090:                                      ; preds = %for.cond1951
  br label %for.inc2091, !dbg !12897

for.inc2091:                                      ; preds = %for.end2090
  %944 = load i32, i32* %w, align 4, !dbg !12898
  %idxprom2092 = sext i32 %944 to i64, !dbg !12900
  %945 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12900
  %ics2093 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %945, i32 0, i32 0, !dbg !12901
  %group_len2094 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2093, i32 0, i32 4, !dbg !12902
  %arrayidx2095 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2094, i64 0, i64 %idxprom2092, !dbg !12900
  %946 = load i8, i8* %arrayidx2095, align 1, !dbg !12900
  %conv2096 = zext i8 %946 to i32, !dbg !12900
  %947 = load i32, i32* %w, align 4, !dbg !12903
  %add2097 = add nsw i32 %947, %conv2096, !dbg !12903
  store i32 %add2097, i32* %w, align 4, !dbg !12903
  br label %for.cond1944, !dbg !12904, !llvm.loop !12905

for.end2098:                                      ; preds = %for.cond1944
  br label %if.end2099, !dbg !12907

if.end2099:                                       ; preds = %for.end2098, %for.body1941
  %948 = load i32, i32* %i, align 4, !dbg !12908
  %tobool2100 = icmp ne i32 %948, 0, !dbg !12908
  br i1 %tobool2100, label %if.end2525, label %land.lhs.true2101, !dbg !12910

land.lhs.true2101:                                ; preds = %if.end2099
  %949 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !12911
  %options2102 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %949, i32 0, i32 1, !dbg !12913
  %pns2103 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options2102, i32 0, i32 1, !dbg !12914
  %950 = load i32, i32* %pns2103, align 4, !dbg !12914
  %tobool2104 = icmp ne i32 %950, 0, !dbg !12911
  br i1 %tobool2104, label %land.lhs.true2105, label %if.end2525, !dbg !12915

land.lhs.true2105:                                ; preds = %land.lhs.true2101
  %951 = load i32, i32* %its, align 4, !dbg !12916
  %952 = load i32, i32* %maxits, align 4, !dbg !12918
  %div2106 = sdiv i32 %952, 2, !dbg !12919
  %cmp2107 = icmp sgt i32 %951, %div2106, !dbg !12920
  br i1 %cmp2107, label %land.lhs.true2109, label %if.end2525, !dbg !12921

land.lhs.true2109:                                ; preds = %land.lhs.true2105
  %953 = load i32, i32* %tbits, align 4, !dbg !12922
  %954 = load i32, i32* %toofewbits, align 4, !dbg !12924
  %cmp2110 = icmp sgt i32 %953, %954, !dbg !12925
  br i1 %cmp2110, label %if.then2112, label %if.end2525, !dbg !12926

if.then2112:                                      ; preds = %land.lhs.true2109
  call void @llvm.dbg.declare(metadata float* %maxoverdist, metadata !12927, metadata !2772), !dbg !12929
  store float 0.000000e+00, float* %maxoverdist, align 4, !dbg !12929
  call void @llvm.dbg.declare(metadata float* %ovrfactor, metadata !12930, metadata !2772), !dbg !12931
  %955 = load i32, i32* %maxits, align 4, !dbg !12932
  %956 = load i32, i32* %its, align 4, !dbg !12933
  %sub2113 = sub nsw i32 %955, %956, !dbg !12934
  %conv2114 = sitofp i32 %sub2113 to float, !dbg !12935
  %mul2115 = fmul float %conv2114, 1.600000e+01, !dbg !12936
  %957 = load i32, i32* %maxits, align 4, !dbg !12937
  %conv2116 = sitofp i32 %957 to float, !dbg !12937
  %div2117 = fdiv float %mul2115, %conv2116, !dbg !12938
  %add2118 = fadd float 1.000000e+00, %div2117, !dbg !12939
  store float %add2118, float* %ovrfactor, align 4, !dbg !12931
  store i32 0, i32* %recomprd, align 4, !dbg !12940
  store i32 0, i32* %overdist, align 4, !dbg !12941
  store i32 0, i32* %w, align 4, !dbg !12942
  br label %for.cond2119, !dbg !12944

for.cond2119:                                     ; preds = %for.inc2202, %if.then2112
  %958 = load i32, i32* %w, align 4, !dbg !12945
  %959 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12948
  %ics2120 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %959, i32 0, i32 0, !dbg !12949
  %num_windows2121 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2120, i32 0, i32 9, !dbg !12950
  %960 = load i32, i32* %num_windows2121, align 4, !dbg !12950
  %cmp2122 = icmp slt i32 %958, %960, !dbg !12951
  br i1 %cmp2122, label %for.body2124, label %for.end2209, !dbg !12952

for.body2124:                                     ; preds = %for.cond2119
  store i32 0, i32* %start, align 4, !dbg !12953
  store i32 0, i32* %g, align 4, !dbg !12956
  br label %for.cond2125, !dbg !12957

for.cond2125:                                     ; preds = %for.inc2193, %for.body2124
  %961 = load i32, i32* %g, align 4, !dbg !12958
  %962 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12961
  %ics2126 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %962, i32 0, i32 0, !dbg !12962
  %num_swb2127 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2126, i32 0, i32 8, !dbg !12963
  %963 = load i32, i32* %num_swb2127, align 32, !dbg !12963
  %cmp2128 = icmp slt i32 %961, %963, !dbg !12964
  br i1 %cmp2128, label %for.body2130, label %for.end2201, !dbg !12965

for.body2130:                                     ; preds = %for.cond2125
  %964 = load i32, i32* %w, align 4, !dbg !12966
  %mul2131 = mul nsw i32 %964, 16, !dbg !12969
  %965 = load i32, i32* %g, align 4, !dbg !12970
  %add2132 = add nsw i32 %mul2131, %965, !dbg !12971
  %idxprom2133 = sext i32 %add2132 to i64, !dbg !12972
  %966 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12972
  %zeroes2134 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %966, i32 0, i32 8, !dbg !12973
  %arrayidx2135 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2134, i64 0, i64 %idxprom2133, !dbg !12972
  %967 = load i8, i8* %arrayidx2135, align 1, !dbg !12972
  %tobool2136 = icmp ne i8 %967, 0, !dbg !12972
  br i1 %tobool2136, label %if.end2192, label %land.lhs.true2137, !dbg !12974

land.lhs.true2137:                                ; preds = %for.body2130
  %968 = load i32, i32* %w, align 4, !dbg !12975
  %mul2138 = mul nsw i32 %968, 16, !dbg !12977
  %969 = load i32, i32* %g, align 4, !dbg !12978
  %add2139 = add nsw i32 %mul2138, %969, !dbg !12979
  %idxprom2140 = sext i32 %add2139 to i64, !dbg !12980
  %970 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !12980
  %sf_idx2141 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %970, i32 0, i32 7, !dbg !12981
  %arrayidx2142 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2141, i64 0, i64 %idxprom2140, !dbg !12980
  %971 = load i32, i32* %arrayidx2142, align 4, !dbg !12980
  %cmp2143 = icmp sgt i32 %971, 140, !dbg !12982
  br i1 %cmp2143, label %land.lhs.true2145, label %if.end2192, !dbg !12983

land.lhs.true2145:                                ; preds = %land.lhs.true2137
  %972 = load i32, i32* %w, align 4, !dbg !12984
  %mul2146 = mul nsw i32 %972, 16, !dbg !12986
  %973 = load i32, i32* %g, align 4, !dbg !12987
  %add2147 = add nsw i32 %mul2146, %973, !dbg !12988
  %idxprom2148 = sext i32 %add2147 to i64, !dbg !12989
  %arrayidx2149 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2148, !dbg !12989
  %974 = load float, float* %arrayidx2149, align 4, !dbg !12989
  %975 = load i32, i32* %w, align 4, !dbg !12990
  %mul2150 = mul nsw i32 %975, 16, !dbg !12991
  %976 = load i32, i32* %g, align 4, !dbg !12992
  %add2151 = add nsw i32 %mul2150, %976, !dbg !12993
  %idxprom2152 = sext i32 %add2151 to i64, !dbg !12994
  %arrayidx2153 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2152, !dbg !12994
  %977 = load float, float* %arrayidx2153, align 4, !dbg !12994
  %978 = load float, float* %ovrfactor, align 4, !dbg !12995
  %mul2154 = fmul float %977, %978, !dbg !12996
  %cmp2155 = fcmp ogt float %974, %mul2154, !dbg !12997
  br i1 %cmp2155, label %if.then2157, label %if.end2192, !dbg !12998

if.then2157:                                      ; preds = %land.lhs.true2145
  call void @llvm.dbg.declare(metadata float* %ovrdist, metadata !12999, metadata !2772), !dbg !13001
  %979 = load i32, i32* %w, align 4, !dbg !13002
  %mul2158 = mul nsw i32 %979, 16, !dbg !13003
  %980 = load i32, i32* %g, align 4, !dbg !13004
  %add2159 = add nsw i32 %mul2158, %980, !dbg !13005
  %idxprom2160 = sext i32 %add2159 to i64, !dbg !13006
  %arrayidx2161 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2160, !dbg !13006
  %981 = load float, float* %arrayidx2161, align 4, !dbg !13006
  %982 = load i32, i32* %w, align 4, !dbg !13007
  %mul2162 = mul nsw i32 %982, 16, !dbg !13008
  %983 = load i32, i32* %g, align 4, !dbg !13009
  %add2163 = add nsw i32 %mul2162, %983, !dbg !13010
  %idxprom2164 = sext i32 %add2163 to i64, !dbg !13011
  %arrayidx2165 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2164, !dbg !13011
  %984 = load float, float* %arrayidx2165, align 4, !dbg !13011
  %985 = load i32, i32* %w, align 4, !dbg !13012
  %mul2166 = mul nsw i32 %985, 16, !dbg !13013
  %986 = load i32, i32* %g, align 4, !dbg !13014
  %add2167 = add nsw i32 %mul2166, %986, !dbg !13015
  %idxprom2168 = sext i32 %add2167 to i64, !dbg !13016
  %arrayidx2169 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2168, !dbg !13016
  %987 = load float, float* %arrayidx2169, align 4, !dbg !13016
  %cmp2170 = fcmp ogt float %984, %987, !dbg !13017
  br i1 %cmp2170, label %cond.true2172, label %cond.false2177, !dbg !13018

cond.true2172:                                    ; preds = %if.then2157
  %988 = load i32, i32* %w, align 4, !dbg !13019
  %mul2173 = mul nsw i32 %988, 16, !dbg !13021
  %989 = load i32, i32* %g, align 4, !dbg !13022
  %add2174 = add nsw i32 %mul2173, %989, !dbg !13023
  %idxprom2175 = sext i32 %add2174 to i64, !dbg !13024
  %arrayidx2176 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2175, !dbg !13024
  %990 = load float, float* %arrayidx2176, align 4, !dbg !13024
  br label %cond.end2182, !dbg !13025

cond.false2177:                                   ; preds = %if.then2157
  %991 = load i32, i32* %w, align 4, !dbg !13026
  %mul2178 = mul nsw i32 %991, 16, !dbg !13028
  %992 = load i32, i32* %g, align 4, !dbg !13029
  %add2179 = add nsw i32 %mul2178, %992, !dbg !13030
  %idxprom2180 = sext i32 %add2179 to i64, !dbg !13031
  %arrayidx2181 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2180, !dbg !13031
  %993 = load float, float* %arrayidx2181, align 4, !dbg !13031
  br label %cond.end2182, !dbg !13032

cond.end2182:                                     ; preds = %cond.false2177, %cond.true2172
  %cond2183 = phi float [ %990, %cond.true2172 ], [ %993, %cond.false2177 ], !dbg !13033
  %div2184 = fdiv float %981, %cond2183, !dbg !13035
  store float %div2184, float* %ovrdist, align 4, !dbg !13036
  %994 = load float, float* %maxoverdist, align 4, !dbg !13037
  %995 = load float, float* %ovrdist, align 4, !dbg !13038
  %cmp2185 = fcmp ogt float %994, %995, !dbg !13039
  br i1 %cmp2185, label %cond.true2187, label %cond.false2188, !dbg !13040

cond.true2187:                                    ; preds = %cond.end2182
  %996 = load float, float* %maxoverdist, align 4, !dbg !13041
  br label %cond.end2189, !dbg !13042

cond.false2188:                                   ; preds = %cond.end2182
  %997 = load float, float* %ovrdist, align 4, !dbg !13043
  br label %cond.end2189, !dbg !13044

cond.end2189:                                     ; preds = %cond.false2188, %cond.true2187
  %cond2190 = phi float [ %996, %cond.true2187 ], [ %997, %cond.false2188 ], !dbg !13045
  store float %cond2190, float* %maxoverdist, align 4, !dbg !13046
  %998 = load i32, i32* %overdist, align 4, !dbg !13047
  %inc2191 = add nsw i32 %998, 1, !dbg !13047
  store i32 %inc2191, i32* %overdist, align 4, !dbg !13047
  br label %if.end2192, !dbg !13048

if.end2192:                                       ; preds = %cond.end2189, %land.lhs.true2145, %land.lhs.true2137, %for.body2130
  br label %for.inc2193, !dbg !13049

for.inc2193:                                      ; preds = %if.end2192
  %999 = load i32, i32* %g, align 4, !dbg !13050
  %inc2194 = add nsw i32 %999, 1, !dbg !13050
  store i32 %inc2194, i32* %g, align 4, !dbg !13050
  %idxprom2195 = sext i32 %999 to i64, !dbg !13052
  %1000 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13052
  %ics2196 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1000, i32 0, i32 0, !dbg !13053
  %swb_sizes2197 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2196, i32 0, i32 7, !dbg !13054
  %1001 = load i8*, i8** %swb_sizes2197, align 8, !dbg !13054
  %arrayidx2198 = getelementptr inbounds i8, i8* %1001, i64 %idxprom2195, !dbg !13052
  %1002 = load i8, i8* %arrayidx2198, align 1, !dbg !13052
  %conv2199 = zext i8 %1002 to i32, !dbg !13052
  %1003 = load i32, i32* %start, align 4, !dbg !13055
  %add2200 = add nsw i32 %1003, %conv2199, !dbg !13055
  store i32 %add2200, i32* %start, align 4, !dbg !13055
  br label %for.cond2125, !dbg !13056, !llvm.loop !13057

for.end2201:                                      ; preds = %for.cond2125
  br label %for.inc2202, !dbg !13059

for.inc2202:                                      ; preds = %for.end2201
  %1004 = load i32, i32* %w, align 4, !dbg !13060
  %idxprom2203 = sext i32 %1004 to i64, !dbg !13062
  %1005 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13062
  %ics2204 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1005, i32 0, i32 0, !dbg !13063
  %group_len2205 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2204, i32 0, i32 4, !dbg !13064
  %arrayidx2206 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2205, i64 0, i64 %idxprom2203, !dbg !13062
  %1006 = load i8, i8* %arrayidx2206, align 1, !dbg !13062
  %conv2207 = zext i8 %1006 to i32, !dbg !13062
  %1007 = load i32, i32* %w, align 4, !dbg !13065
  %add2208 = add nsw i32 %1007, %conv2207, !dbg !13065
  store i32 %add2208, i32* %w, align 4, !dbg !13065
  br label %for.cond2119, !dbg !13066, !llvm.loop !13067

for.end2209:                                      ; preds = %for.cond2119
  %1008 = load i32, i32* %overdist, align 4, !dbg !13069
  %tobool2210 = icmp ne i32 %1008, 0, !dbg !13069
  br i1 %tobool2210, label %if.then2211, label %if.else2523, !dbg !13071

if.then2211:                                      ; preds = %for.end2209
  call void @llvm.dbg.declare(metadata float* %minspread, metadata !13072, metadata !2772), !dbg !13074
  %1009 = load float, float* %max_spread_thr_r, align 4, !dbg !13075
  store float %1009, float* %minspread, align 4, !dbg !13074
  call void @llvm.dbg.declare(metadata float* %maxspread, metadata !13076, metadata !2772), !dbg !13077
  %1010 = load float, float* %min_spread_thr_r, align 4, !dbg !13078
  store float %1010, float* %maxspread, align 4, !dbg !13077
  call void @llvm.dbg.declare(metadata float* %zspread, metadata !13079, metadata !2772), !dbg !13080
  call void @llvm.dbg.declare(metadata i32* %zeroable, metadata !13081, metadata !2772), !dbg !13082
  store i32 0, i32* %zeroable, align 4, !dbg !13082
  call void @llvm.dbg.declare(metadata i32* %zeroed, metadata !13083, metadata !2772), !dbg !13084
  store i32 0, i32* %zeroed, align 4, !dbg !13084
  call void @llvm.dbg.declare(metadata i32* %maxzeroed, metadata !13085, metadata !2772), !dbg !13086
  call void @llvm.dbg.declare(metadata i32* %zloop, metadata !13087, metadata !2772), !dbg !13088
  store i32 0, i32* %w, align 4, !dbg !13089
  br label %for.cond2212, !dbg !13091

for.cond2212:                                     ; preds = %for.inc2281, %if.then2211
  %1011 = load i32, i32* %w, align 4, !dbg !13092
  %1012 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13095
  %ics2213 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1012, i32 0, i32 0, !dbg !13096
  %num_windows2214 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2213, i32 0, i32 9, !dbg !13097
  %1013 = load i32, i32* %num_windows2214, align 4, !dbg !13097
  %cmp2215 = icmp slt i32 %1011, %1013, !dbg !13098
  br i1 %cmp2215, label %for.body2217, label %for.end2288, !dbg !13099

for.body2217:                                     ; preds = %for.cond2212
  store i32 0, i32* %start, align 4, !dbg !13100
  store i32 0, i32* %g, align 4, !dbg !13103
  br label %for.cond2218, !dbg !13104

for.cond2218:                                     ; preds = %for.inc2272, %for.body2217
  %1014 = load i32, i32* %g, align 4, !dbg !13105
  %1015 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13108
  %ics2219 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1015, i32 0, i32 0, !dbg !13109
  %num_swb2220 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2219, i32 0, i32 8, !dbg !13110
  %1016 = load i32, i32* %num_swb2220, align 32, !dbg !13110
  %cmp2221 = icmp slt i32 %1014, %1016, !dbg !13111
  br i1 %cmp2221, label %for.body2223, label %for.end2280, !dbg !13112

for.body2223:                                     ; preds = %for.cond2218
  %1017 = load i32, i32* %start, align 4, !dbg !13113
  %1018 = load i32, i32* %pns_start_pos, align 4, !dbg !13116
  %cmp2224 = icmp sge i32 %1017, %1018, !dbg !13117
  br i1 %cmp2224, label %land.lhs.true2226, label %if.end2271, !dbg !13118

land.lhs.true2226:                                ; preds = %for.body2223
  %1019 = load i32, i32* %w, align 4, !dbg !13119
  %mul2227 = mul nsw i32 %1019, 16, !dbg !13121
  %1020 = load i32, i32* %g, align 4, !dbg !13122
  %add2228 = add nsw i32 %mul2227, %1020, !dbg !13123
  %idxprom2229 = sext i32 %add2228 to i64, !dbg !13124
  %1021 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13124
  %zeroes2230 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1021, i32 0, i32 8, !dbg !13125
  %arrayidx2231 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2230, i64 0, i64 %idxprom2229, !dbg !13124
  %1022 = load i8, i8* %arrayidx2231, align 1, !dbg !13124
  %tobool2232 = icmp ne i8 %1022, 0, !dbg !13124
  br i1 %tobool2232, label %if.end2271, label %land.lhs.true2233, !dbg !13126

land.lhs.true2233:                                ; preds = %land.lhs.true2226
  %1023 = load i32, i32* %w, align 4, !dbg !13127
  %mul2234 = mul nsw i32 %1023, 16, !dbg !13129
  %1024 = load i32, i32* %g, align 4, !dbg !13130
  %add2235 = add nsw i32 %mul2234, %1024, !dbg !13131
  %idxprom2236 = sext i32 %add2235 to i64, !dbg !13132
  %1025 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13132
  %can_pns2237 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1025, i32 0, i32 9, !dbg !13133
  %arrayidx2238 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns2237, i64 0, i64 %idxprom2236, !dbg !13132
  %1026 = load i8, i8* %arrayidx2238, align 1, !dbg !13132
  %conv2239 = zext i8 %1026 to i32, !dbg !13132
  %tobool2240 = icmp ne i32 %conv2239, 0, !dbg !13132
  br i1 %tobool2240, label %if.then2241, label %if.end2271, !dbg !13134

if.then2241:                                      ; preds = %land.lhs.true2233
  %1027 = load float, float* %minspread, align 4, !dbg !13135
  %1028 = load i32, i32* %w, align 4, !dbg !13137
  %mul2242 = mul nsw i32 %1028, 16, !dbg !13138
  %1029 = load i32, i32* %g, align 4, !dbg !13139
  %add2243 = add nsw i32 %mul2242, %1029, !dbg !13140
  %idxprom2244 = sext i32 %add2243 to i64, !dbg !13141
  %arrayidx2245 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom2244, !dbg !13141
  %1030 = load float, float* %arrayidx2245, align 4, !dbg !13141
  %cmp2246 = fcmp ogt float %1027, %1030, !dbg !13142
  br i1 %cmp2246, label %cond.true2248, label %cond.false2253, !dbg !13143

cond.true2248:                                    ; preds = %if.then2241
  %1031 = load i32, i32* %w, align 4, !dbg !13144
  %mul2249 = mul nsw i32 %1031, 16, !dbg !13146
  %1032 = load i32, i32* %g, align 4, !dbg !13147
  %add2250 = add nsw i32 %mul2249, %1032, !dbg !13148
  %idxprom2251 = sext i32 %add2250 to i64, !dbg !13149
  %arrayidx2252 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom2251, !dbg !13149
  %1033 = load float, float* %arrayidx2252, align 4, !dbg !13149
  br label %cond.end2254, !dbg !13150

cond.false2253:                                   ; preds = %if.then2241
  %1034 = load float, float* %minspread, align 4, !dbg !13151
  br label %cond.end2254, !dbg !13153

cond.end2254:                                     ; preds = %cond.false2253, %cond.true2248
  %cond2255 = phi float [ %1033, %cond.true2248 ], [ %1034, %cond.false2253 ], !dbg !13154
  store float %cond2255, float* %minspread, align 4, !dbg !13156
  %1035 = load float, float* %maxspread, align 4, !dbg !13157
  %1036 = load i32, i32* %w, align 4, !dbg !13158
  %mul2256 = mul nsw i32 %1036, 16, !dbg !13159
  %1037 = load i32, i32* %g, align 4, !dbg !13160
  %add2257 = add nsw i32 %mul2256, %1037, !dbg !13161
  %idxprom2258 = sext i32 %add2257 to i64, !dbg !13162
  %arrayidx2259 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom2258, !dbg !13162
  %1038 = load float, float* %arrayidx2259, align 4, !dbg !13162
  %cmp2260 = fcmp ogt float %1035, %1038, !dbg !13163
  br i1 %cmp2260, label %cond.true2262, label %cond.false2263, !dbg !13164

cond.true2262:                                    ; preds = %cond.end2254
  %1039 = load float, float* %maxspread, align 4, !dbg !13165
  br label %cond.end2268, !dbg !13166

cond.false2263:                                   ; preds = %cond.end2254
  %1040 = load i32, i32* %w, align 4, !dbg !13167
  %mul2264 = mul nsw i32 %1040, 16, !dbg !13168
  %1041 = load i32, i32* %g, align 4, !dbg !13169
  %add2265 = add nsw i32 %mul2264, %1041, !dbg !13170
  %idxprom2266 = sext i32 %add2265 to i64, !dbg !13171
  %arrayidx2267 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom2266, !dbg !13171
  %1042 = load float, float* %arrayidx2267, align 4, !dbg !13171
  br label %cond.end2268, !dbg !13172

cond.end2268:                                     ; preds = %cond.false2263, %cond.true2262
  %cond2269 = phi float [ %1039, %cond.true2262 ], [ %1042, %cond.false2263 ], !dbg !13173
  store float %cond2269, float* %maxspread, align 4, !dbg !13174
  %1043 = load i32, i32* %zeroable, align 4, !dbg !13175
  %inc2270 = add nsw i32 %1043, 1, !dbg !13175
  store i32 %inc2270, i32* %zeroable, align 4, !dbg !13175
  br label %if.end2271, !dbg !13176

if.end2271:                                       ; preds = %cond.end2268, %land.lhs.true2233, %land.lhs.true2226, %for.body2223
  br label %for.inc2272, !dbg !13177

for.inc2272:                                      ; preds = %if.end2271
  %1044 = load i32, i32* %g, align 4, !dbg !13178
  %inc2273 = add nsw i32 %1044, 1, !dbg !13178
  store i32 %inc2273, i32* %g, align 4, !dbg !13178
  %idxprom2274 = sext i32 %1044 to i64, !dbg !13180
  %1045 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13180
  %ics2275 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1045, i32 0, i32 0, !dbg !13181
  %swb_sizes2276 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2275, i32 0, i32 7, !dbg !13182
  %1046 = load i8*, i8** %swb_sizes2276, align 8, !dbg !13182
  %arrayidx2277 = getelementptr inbounds i8, i8* %1046, i64 %idxprom2274, !dbg !13180
  %1047 = load i8, i8* %arrayidx2277, align 1, !dbg !13180
  %conv2278 = zext i8 %1047 to i32, !dbg !13180
  %1048 = load i32, i32* %start, align 4, !dbg !13183
  %add2279 = add nsw i32 %1048, %conv2278, !dbg !13183
  store i32 %add2279, i32* %start, align 4, !dbg !13183
  br label %for.cond2218, !dbg !13184, !llvm.loop !13185

for.end2280:                                      ; preds = %for.cond2218
  br label %for.inc2281, !dbg !13187

for.inc2281:                                      ; preds = %for.end2280
  %1049 = load i32, i32* %w, align 4, !dbg !13188
  %idxprom2282 = sext i32 %1049 to i64, !dbg !13190
  %1050 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13190
  %ics2283 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1050, i32 0, i32 0, !dbg !13191
  %group_len2284 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2283, i32 0, i32 4, !dbg !13192
  %arrayidx2285 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2284, i64 0, i64 %idxprom2282, !dbg !13190
  %1051 = load i8, i8* %arrayidx2285, align 1, !dbg !13190
  %conv2286 = zext i8 %1051 to i32, !dbg !13190
  %1052 = load i32, i32* %w, align 4, !dbg !13193
  %add2287 = add nsw i32 %1052, %conv2286, !dbg !13193
  store i32 %add2287, i32* %w, align 4, !dbg !13193
  br label %for.cond2212, !dbg !13194, !llvm.loop !13195

for.end2288:                                      ; preds = %for.cond2212
  %1053 = load float, float* %maxspread, align 4, !dbg !13197
  %1054 = load float, float* %minspread, align 4, !dbg !13198
  %sub2289 = fsub float %1053, %1054, !dbg !13199
  %mul2290 = fmul float %sub2289, 0x3F899999A0000000, !dbg !13200
  %1055 = load float, float* %minspread, align 4, !dbg !13201
  %add2291 = fadd float %mul2290, %1055, !dbg !13202
  store float %add2291, float* %zspread, align 4, !dbg !13203
  %1056 = load float, float* %min_spread_thr_r, align 4, !dbg !13204
  %mul2292 = fmul float %1056, 8.000000e+00, !dbg !13205
  %1057 = load float, float* %zspread, align 4, !dbg !13206
  %cmp2293 = fcmp ogt float %mul2292, %1057, !dbg !13207
  br i1 %cmp2293, label %cond.true2295, label %cond.false2296, !dbg !13208

cond.true2295:                                    ; preds = %for.end2288
  %1058 = load float, float* %zspread, align 4, !dbg !13209
  br label %cond.end2298, !dbg !13211

cond.false2296:                                   ; preds = %for.end2288
  %1059 = load float, float* %min_spread_thr_r, align 4, !dbg !13212
  %mul2297 = fmul float %1059, 8.000000e+00, !dbg !13214
  br label %cond.end2298, !dbg !13215

cond.end2298:                                     ; preds = %cond.false2296, %cond.true2295
  %cond2299 = phi float [ %1058, %cond.true2295 ], [ %mul2297, %cond.false2296 ], !dbg !13216
  %1060 = load i32, i32* %toomanybits, align 4, !dbg !13218
  %1061 = load i32, i32* %tbits, align 4, !dbg !13219
  %sub2300 = sub nsw i32 %1060, %1061, !dbg !13220
  %conv2301 = sitofp i32 %sub2300 to float, !dbg !13221
  %1062 = load float, float* %min_spread_thr_r, align 4, !dbg !13222
  %mul2302 = fmul float %conv2301, %1062, !dbg !13223
  %1063 = load i32, i32* %tbits, align 4, !dbg !13224
  %1064 = load i32, i32* %toofewbits, align 4, !dbg !13225
  %sub2303 = sub nsw i32 %1063, %1064, !dbg !13226
  %conv2304 = sitofp i32 %sub2303 to float, !dbg !13227
  %1065 = load float, float* %max_spread_thr_r, align 4, !dbg !13228
  %mul2305 = fmul float %conv2304, %1065, !dbg !13229
  %add2306 = fadd float %mul2302, %mul2305, !dbg !13230
  %1066 = load i32, i32* %toomanybits, align 4, !dbg !13231
  %1067 = load i32, i32* %toofewbits, align 4, !dbg !13232
  %sub2307 = sub nsw i32 %1066, %1067, !dbg !13233
  %add2308 = add nsw i32 %sub2307, 1, !dbg !13234
  %conv2309 = sitofp i32 %add2308 to float, !dbg !13235
  %div2310 = fdiv float %add2306, %conv2309, !dbg !13236
  %cmp2311 = fcmp ogt float %cond2299, %div2310, !dbg !13237
  br i1 %cmp2311, label %cond.true2313, label %cond.false2325, !dbg !13238

cond.true2313:                                    ; preds = %cond.end2298
  %1068 = load i32, i32* %toomanybits, align 4, !dbg !13239
  %1069 = load i32, i32* %tbits, align 4, !dbg !13241
  %sub2314 = sub nsw i32 %1068, %1069, !dbg !13242
  %conv2315 = sitofp i32 %sub2314 to float, !dbg !13243
  %1070 = load float, float* %min_spread_thr_r, align 4, !dbg !13244
  %mul2316 = fmul float %conv2315, %1070, !dbg !13245
  %1071 = load i32, i32* %tbits, align 4, !dbg !13246
  %1072 = load i32, i32* %toofewbits, align 4, !dbg !13247
  %sub2317 = sub nsw i32 %1071, %1072, !dbg !13248
  %conv2318 = sitofp i32 %sub2317 to float, !dbg !13249
  %1073 = load float, float* %max_spread_thr_r, align 4, !dbg !13250
  %mul2319 = fmul float %conv2318, %1073, !dbg !13251
  %add2320 = fadd float %mul2316, %mul2319, !dbg !13252
  %1074 = load i32, i32* %toomanybits, align 4, !dbg !13253
  %1075 = load i32, i32* %toofewbits, align 4, !dbg !13254
  %sub2321 = sub nsw i32 %1074, %1075, !dbg !13255
  %add2322 = add nsw i32 %sub2321, 1, !dbg !13256
  %conv2323 = sitofp i32 %add2322 to float, !dbg !13257
  %div2324 = fdiv float %add2320, %conv2323, !dbg !13258
  br label %cond.end2334, !dbg !13259

cond.false2325:                                   ; preds = %cond.end2298
  %1076 = load float, float* %min_spread_thr_r, align 4, !dbg !13260
  %mul2326 = fmul float %1076, 8.000000e+00, !dbg !13262
  %1077 = load float, float* %zspread, align 4, !dbg !13263
  %cmp2327 = fcmp ogt float %mul2326, %1077, !dbg !13264
  br i1 %cmp2327, label %cond.true2329, label %cond.false2330, !dbg !13265

cond.true2329:                                    ; preds = %cond.false2325
  %1078 = load float, float* %zspread, align 4, !dbg !13266
  br label %cond.end2332, !dbg !13268

cond.false2330:                                   ; preds = %cond.false2325
  %1079 = load float, float* %min_spread_thr_r, align 4, !dbg !13269
  %mul2331 = fmul float %1079, 8.000000e+00, !dbg !13271
  br label %cond.end2332, !dbg !13272

cond.end2332:                                     ; preds = %cond.false2330, %cond.true2329
  %cond2333 = phi float [ %1078, %cond.true2329 ], [ %mul2331, %cond.false2330 ], !dbg !13273
  br label %cond.end2334, !dbg !13275

cond.end2334:                                     ; preds = %cond.end2332, %cond.true2313
  %cond2335 = phi float [ %div2324, %cond.true2313 ], [ %cond2333, %cond.end2332 ], !dbg !13276
  store float %cond2335, float* %zspread, align 4, !dbg !13278
  %1080 = load i32, i32* %zeroable, align 4, !dbg !13279
  %1081 = load i32, i32* %zeroable, align 4, !dbg !13280
  %1082 = load i32, i32* %its, align 4, !dbg !13281
  %mul2336 = mul nsw i32 %1081, %1082, !dbg !13282
  %1083 = load i32, i32* %maxits, align 4, !dbg !13283
  %add2337 = add nsw i32 %mul2336, %1083, !dbg !13284
  %sub2338 = sub nsw i32 %add2337, 1, !dbg !13285
  %1084 = load i32, i32* %maxits, align 4, !dbg !13286
  %mul2339 = mul nsw i32 2, %1084, !dbg !13287
  %div2340 = sdiv i32 %sub2338, %mul2339, !dbg !13288
  %cmp2341 = icmp sgt i32 1, %div2340, !dbg !13289
  br i1 %cmp2341, label %cond.true2343, label %cond.false2344, !dbg !13290

cond.true2343:                                    ; preds = %cond.end2334
  br label %cond.end2350, !dbg !13291

cond.false2344:                                   ; preds = %cond.end2334
  %1085 = load i32, i32* %zeroable, align 4, !dbg !13292
  %1086 = load i32, i32* %its, align 4, !dbg !13293
  %mul2345 = mul nsw i32 %1085, %1086, !dbg !13294
  %1087 = load i32, i32* %maxits, align 4, !dbg !13295
  %add2346 = add nsw i32 %mul2345, %1087, !dbg !13296
  %sub2347 = sub nsw i32 %add2346, 1, !dbg !13297
  %1088 = load i32, i32* %maxits, align 4, !dbg !13298
  %mul2348 = mul nsw i32 2, %1088, !dbg !13299
  %div2349 = sdiv i32 %sub2347, %mul2348, !dbg !13300
  br label %cond.end2350, !dbg !13301

cond.end2350:                                     ; preds = %cond.false2344, %cond.true2343
  %cond2351 = phi i32 [ 1, %cond.true2343 ], [ %div2349, %cond.false2344 ], !dbg !13302
  %cmp2352 = icmp sgt i32 %1080, %cond2351, !dbg !13303
  br i1 %cmp2352, label %cond.true2354, label %cond.false2371, !dbg !13304

cond.true2354:                                    ; preds = %cond.end2350
  %1089 = load i32, i32* %zeroable, align 4, !dbg !13305
  %1090 = load i32, i32* %its, align 4, !dbg !13306
  %mul2355 = mul nsw i32 %1089, %1090, !dbg !13307
  %1091 = load i32, i32* %maxits, align 4, !dbg !13308
  %add2356 = add nsw i32 %mul2355, %1091, !dbg !13309
  %sub2357 = sub nsw i32 %add2356, 1, !dbg !13310
  %1092 = load i32, i32* %maxits, align 4, !dbg !13311
  %mul2358 = mul nsw i32 2, %1092, !dbg !13312
  %div2359 = sdiv i32 %sub2357, %mul2358, !dbg !13313
  %cmp2360 = icmp sgt i32 1, %div2359, !dbg !13314
  br i1 %cmp2360, label %cond.true2362, label %cond.false2363, !dbg !13315

cond.true2362:                                    ; preds = %cond.true2354
  br label %cond.end2369, !dbg !13316

cond.false2363:                                   ; preds = %cond.true2354
  %1093 = load i32, i32* %zeroable, align 4, !dbg !13317
  %1094 = load i32, i32* %its, align 4, !dbg !13318
  %mul2364 = mul nsw i32 %1093, %1094, !dbg !13319
  %1095 = load i32, i32* %maxits, align 4, !dbg !13320
  %add2365 = add nsw i32 %mul2364, %1095, !dbg !13321
  %sub2366 = sub nsw i32 %add2365, 1, !dbg !13322
  %1096 = load i32, i32* %maxits, align 4, !dbg !13323
  %mul2367 = mul nsw i32 2, %1096, !dbg !13324
  %div2368 = sdiv i32 %sub2366, %mul2367, !dbg !13325
  br label %cond.end2369, !dbg !13326

cond.end2369:                                     ; preds = %cond.false2363, %cond.true2362
  %cond2370 = phi i32 [ 1, %cond.true2362 ], [ %div2368, %cond.false2363 ], !dbg !13327
  br label %cond.end2372, !dbg !13328

cond.false2371:                                   ; preds = %cond.end2350
  %1097 = load i32, i32* %zeroable, align 4, !dbg !13329
  br label %cond.end2372, !dbg !13330

cond.end2372:                                     ; preds = %cond.false2371, %cond.end2369
  %cond2373 = phi i32 [ %cond2370, %cond.end2369 ], [ %1097, %cond.false2371 ], !dbg !13331
  store i32 %cond2373, i32* %maxzeroed, align 4, !dbg !13332
  store i32 0, i32* %zloop, align 4, !dbg !13333
  br label %for.cond2374, !dbg !13335

for.cond2374:                                     ; preds = %for.inc2517, %cond.end2372
  %1098 = load i32, i32* %zloop, align 4, !dbg !13336
  %cmp2375 = icmp slt i32 %1098, 2, !dbg !13339
  br i1 %cmp2375, label %for.body2377, label %for.end2519, !dbg !13340

for.body2377:                                     ; preds = %for.cond2374
  call void @llvm.dbg.declare(metadata float* %loopovrfactor, metadata !13341, metadata !2772), !dbg !13343
  %1099 = load i32, i32* %zloop, align 4, !dbg !13344
  %tobool2378 = icmp ne i32 %1099, 0, !dbg !13345
  br i1 %tobool2378, label %cond.true2379, label %cond.false2380, !dbg !13345

cond.true2379:                                    ; preds = %for.body2377
  br label %cond.end2381, !dbg !13346

cond.false2380:                                   ; preds = %for.body2377
  %1100 = load float, float* %ovrfactor, align 4, !dbg !13348
  br label %cond.end2381, !dbg !13350

cond.end2381:                                     ; preds = %cond.false2380, %cond.true2379
  %cond2382 = phi float [ 1.000000e+00, %cond.true2379 ], [ %1100, %cond.false2380 ], !dbg !13351
  store float %cond2382, float* %loopovrfactor, align 4, !dbg !13353
  call void @llvm.dbg.declare(metadata i32* %loopminsf, metadata !13354, metadata !2772), !dbg !13355
  %1101 = load i32, i32* %zloop, align 4, !dbg !13356
  %tobool2383 = icmp ne i32 %1101, 0, !dbg !13357
  %cond2384 = select i1 %tobool2383, i32 104, i32 140, !dbg !13357
  store i32 %cond2384, i32* %loopminsf, align 4, !dbg !13355
  call void @llvm.dbg.declare(metadata i32* %mcb, metadata !13358, metadata !2772), !dbg !13359
  %1102 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13360
  %ics2385 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1102, i32 0, i32 0, !dbg !13362
  %num_swb2386 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2385, i32 0, i32 8, !dbg !13363
  %1103 = load i32, i32* %num_swb2386, align 32, !dbg !13363
  %sub2387 = sub nsw i32 %1103, 1, !dbg !13364
  store i32 %sub2387, i32* %g, align 4, !dbg !13365
  br label %for.cond2388, !dbg !13366

for.cond2388:                                     ; preds = %for.inc2515, %cond.end2381
  %1104 = load i32, i32* %g, align 4, !dbg !13367
  %cmp2389 = icmp sgt i32 %1104, 0, !dbg !13370
  br i1 %cmp2389, label %land.rhs2391, label %land.end2394, !dbg !13371

land.rhs2391:                                     ; preds = %for.cond2388
  %1105 = load i32, i32* %zeroed, align 4, !dbg !13372
  %1106 = load i32, i32* %maxzeroed, align 4, !dbg !13374
  %cmp2392 = icmp slt i32 %1105, %1106, !dbg !13375
  br label %land.end2394

land.end2394:                                     ; preds = %land.rhs2391, %for.cond2388
  %1107 = phi i1 [ false, %for.cond2388 ], [ %cmp2392, %land.rhs2391 ]
  br i1 %1107, label %for.body2395, label %for.end2516, !dbg !13376

for.body2395:                                     ; preds = %land.end2394
  %1108 = load i32, i32* %g, align 4, !dbg !13378
  %idxprom2396 = sext i32 %1108 to i64, !dbg !13381
  %1109 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13381
  %ics2397 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1109, i32 0, i32 0, !dbg !13382
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2397, i32 0, i32 6, !dbg !13383
  %1110 = load i16*, i16** %swb_offset, align 16, !dbg !13383
  %arrayidx2398 = getelementptr inbounds i16, i16* %1110, i64 %idxprom2396, !dbg !13381
  %1111 = load i16, i16* %arrayidx2398, align 2, !dbg !13381
  %conv2399 = zext i16 %1111 to i32, !dbg !13381
  %1112 = load i32, i32* %pns_start_pos, align 4, !dbg !13384
  %cmp2400 = icmp slt i32 %conv2399, %1112, !dbg !13385
  br i1 %cmp2400, label %if.then2402, label %if.end2403, !dbg !13386

if.then2402:                                      ; preds = %for.body2395
  br label %for.inc2515, !dbg !13387

if.end2403:                                       ; preds = %for.body2395
  store i32 0, i32* %w, align 4, !dbg !13388
  br label %for.cond2404, !dbg !13390

for.cond2404:                                     ; preds = %for.inc2507, %if.end2403
  %1113 = load i32, i32* %w, align 4, !dbg !13391
  %1114 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13394
  %ics2405 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1114, i32 0, i32 0, !dbg !13395
  %num_windows2406 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2405, i32 0, i32 9, !dbg !13396
  %1115 = load i32, i32* %num_windows2406, align 4, !dbg !13396
  %cmp2407 = icmp slt i32 %1113, %1115, !dbg !13397
  br i1 %cmp2407, label %for.body2409, label %for.end2514, !dbg !13398

for.body2409:                                     ; preds = %for.cond2404
  %1116 = load i32, i32* %w, align 4, !dbg !13399
  %mul2410 = mul nsw i32 %1116, 16, !dbg !13402
  %1117 = load i32, i32* %g, align 4, !dbg !13403
  %add2411 = add nsw i32 %mul2410, %1117, !dbg !13404
  %idxprom2412 = sext i32 %add2411 to i64, !dbg !13405
  %1118 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13405
  %zeroes2413 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1118, i32 0, i32 8, !dbg !13406
  %arrayidx2414 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2413, i64 0, i64 %idxprom2412, !dbg !13405
  %1119 = load i8, i8* %arrayidx2414, align 1, !dbg !13405
  %tobool2415 = icmp ne i8 %1119, 0, !dbg !13405
  br i1 %tobool2415, label %if.end2506, label %land.lhs.true2416, !dbg !13407

land.lhs.true2416:                                ; preds = %for.body2409
  %1120 = load i32, i32* %w, align 4, !dbg !13408
  %mul2417 = mul nsw i32 %1120, 16, !dbg !13410
  %1121 = load i32, i32* %g, align 4, !dbg !13411
  %add2418 = add nsw i32 %mul2417, %1121, !dbg !13412
  %idxprom2419 = sext i32 %add2418 to i64, !dbg !13413
  %1122 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13413
  %can_pns2420 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1122, i32 0, i32 9, !dbg !13414
  %arrayidx2421 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns2420, i64 0, i64 %idxprom2419, !dbg !13413
  %1123 = load i8, i8* %arrayidx2421, align 1, !dbg !13413
  %conv2422 = zext i8 %1123 to i32, !dbg !13413
  %tobool2423 = icmp ne i32 %conv2422, 0, !dbg !13413
  br i1 %tobool2423, label %land.lhs.true2424, label %if.end2506, !dbg !13415

land.lhs.true2424:                                ; preds = %land.lhs.true2416
  %1124 = load i32, i32* %w, align 4, !dbg !13416
  %mul2425 = mul nsw i32 %1124, 16, !dbg !13418
  %1125 = load i32, i32* %g, align 4, !dbg !13419
  %add2426 = add nsw i32 %mul2425, %1125, !dbg !13420
  %idxprom2427 = sext i32 %add2426 to i64, !dbg !13421
  %arrayidx2428 = getelementptr inbounds [128 x float], [128 x float]* %spread_thr_r, i64 0, i64 %idxprom2427, !dbg !13421
  %1126 = load float, float* %arrayidx2428, align 4, !dbg !13421
  %1127 = load float, float* %zspread, align 4, !dbg !13422
  %cmp2429 = fcmp ole float %1126, %1127, !dbg !13423
  br i1 %cmp2429, label %land.lhs.true2431, label %if.end2506, !dbg !13424

land.lhs.true2431:                                ; preds = %land.lhs.true2424
  %1128 = load i32, i32* %w, align 4, !dbg !13425
  %mul2432 = mul nsw i32 %1128, 16, !dbg !13426
  %1129 = load i32, i32* %g, align 4, !dbg !13427
  %add2433 = add nsw i32 %mul2432, %1129, !dbg !13428
  %idxprom2434 = sext i32 %add2433 to i64, !dbg !13429
  %1130 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13429
  %sf_idx2435 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1130, i32 0, i32 7, !dbg !13430
  %arrayidx2436 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2435, i64 0, i64 %idxprom2434, !dbg !13429
  %1131 = load i32, i32* %arrayidx2436, align 4, !dbg !13429
  %1132 = load i32, i32* %loopminsf, align 4, !dbg !13431
  %cmp2437 = icmp sgt i32 %1131, %1132, !dbg !13432
  br i1 %cmp2437, label %land.lhs.true2439, label %if.end2506, !dbg !13433

land.lhs.true2439:                                ; preds = %land.lhs.true2431
  %1133 = load i32, i32* %w, align 4, !dbg !13434
  %mul2440 = mul nsw i32 %1133, 16, !dbg !13435
  %1134 = load i32, i32* %g, align 4, !dbg !13436
  %add2441 = add nsw i32 %mul2440, %1134, !dbg !13437
  %idxprom2442 = sext i32 %add2441 to i64, !dbg !13438
  %arrayidx2443 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2442, !dbg !13438
  %1135 = load float, float* %arrayidx2443, align 4, !dbg !13438
  %1136 = load float, float* %loopovrfactor, align 4, !dbg !13439
  %1137 = load i32, i32* %w, align 4, !dbg !13440
  %mul2444 = mul nsw i32 %1137, 16, !dbg !13441
  %1138 = load i32, i32* %g, align 4, !dbg !13442
  %add2445 = add nsw i32 %mul2444, %1138, !dbg !13443
  %idxprom2446 = sext i32 %add2445 to i64, !dbg !13444
  %arrayidx2447 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2446, !dbg !13444
  %1139 = load float, float* %arrayidx2447, align 4, !dbg !13444
  %mul2448 = fmul float %1136, %1139, !dbg !13445
  %cmp2449 = fcmp ogt float %1135, %mul2448, !dbg !13446
  br i1 %cmp2449, label %if.then2495, label %lor.lhs.false2451, !dbg !13447

lor.lhs.false2451:                                ; preds = %land.lhs.true2439
  %1140 = load i32, i32* %w, align 4, !dbg !13448
  %mul2452 = mul nsw i32 %1140, 16, !dbg !13449
  %1141 = load i32, i32* %g, align 4, !dbg !13450
  %add2453 = add nsw i32 %mul2452, %1141, !dbg !13451
  %idxprom2454 = sext i32 %add2453 to i64, !dbg !13452
  %arrayidx2455 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom2454, !dbg !13452
  %1142 = load float, float* %arrayidx2455, align 4, !dbg !13452
  %1143 = load i32, i32* %w, align 4, !dbg !13453
  %mul2456 = mul nsw i32 %1143, 16, !dbg !13454
  %1144 = load i32, i32* %g, align 4, !dbg !13455
  %add2457 = add nsw i32 %mul2456, %1144, !dbg !13456
  %idxprom2458 = sext i32 %add2457 to i64, !dbg !13457
  %1145 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13457
  %sf_idx2459 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1145, i32 0, i32 7, !dbg !13458
  %arrayidx2460 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2459, i64 0, i64 %idxprom2458, !dbg !13457
  %1146 = load i32, i32* %arrayidx2460, align 4, !dbg !13457
  %call2461 = call i32 @find_min_book(float %1142, i32 %1146), !dbg !13459
  store i32 %call2461, i32* %mcb, align 4, !dbg !13460
  %tobool2462 = icmp ne i32 %call2461, 0, !dbg !13460
  br i1 %tobool2462, label %lor.lhs.false2463, label %if.then2495, !dbg !13461

lor.lhs.false2463:                                ; preds = %lor.lhs.false2451
  %1147 = load i32, i32* %mcb, align 4, !dbg !13462
  %cmp2464 = icmp sle i32 %1147, 1, !dbg !13463
  br i1 %cmp2464, label %land.lhs.true2466, label %if.end2506, !dbg !13464

land.lhs.true2466:                                ; preds = %lor.lhs.false2463
  %1148 = load i32, i32* %w, align 4, !dbg !13465
  %mul2467 = mul nsw i32 %1148, 16, !dbg !13466
  %1149 = load i32, i32* %g, align 4, !dbg !13467
  %add2468 = add nsw i32 %mul2467, %1149, !dbg !13468
  %idxprom2469 = sext i32 %add2468 to i64, !dbg !13469
  %arrayidx2470 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2469, !dbg !13469
  %1150 = load float, float* %arrayidx2470, align 4, !dbg !13469
  %1151 = load i32, i32* %w, align 4, !dbg !13470
  %mul2471 = mul nsw i32 %1151, 16, !dbg !13471
  %1152 = load i32, i32* %g, align 4, !dbg !13472
  %add2472 = add nsw i32 %mul2471, %1152, !dbg !13473
  %idxprom2473 = sext i32 %add2472 to i64, !dbg !13474
  %arrayidx2474 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2473, !dbg !13474
  %1153 = load float, float* %arrayidx2474, align 4, !dbg !13474
  %1154 = load i32, i32* %w, align 4, !dbg !13475
  %mul2475 = mul nsw i32 %1154, 16, !dbg !13476
  %1155 = load i32, i32* %g, align 4, !dbg !13477
  %add2476 = add nsw i32 %mul2475, %1155, !dbg !13478
  %idxprom2477 = sext i32 %add2476 to i64, !dbg !13479
  %arrayidx2478 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2477, !dbg !13479
  %1156 = load float, float* %arrayidx2478, align 4, !dbg !13479
  %cmp2479 = fcmp ogt float %1153, %1156, !dbg !13480
  br i1 %cmp2479, label %cond.true2481, label %cond.false2486, !dbg !13481

cond.true2481:                                    ; preds = %land.lhs.true2466
  %1157 = load i32, i32* %w, align 4, !dbg !13482
  %mul2482 = mul nsw i32 %1157, 16, !dbg !13484
  %1158 = load i32, i32* %g, align 4, !dbg !13485
  %add2483 = add nsw i32 %mul2482, %1158, !dbg !13486
  %idxprom2484 = sext i32 %add2483 to i64, !dbg !13487
  %arrayidx2485 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2484, !dbg !13487
  %1159 = load float, float* %arrayidx2485, align 4, !dbg !13487
  br label %cond.end2491, !dbg !13488

cond.false2486:                                   ; preds = %land.lhs.true2466
  %1160 = load i32, i32* %w, align 4, !dbg !13489
  %mul2487 = mul nsw i32 %1160, 16, !dbg !13491
  %1161 = load i32, i32* %g, align 4, !dbg !13492
  %add2488 = add nsw i32 %mul2487, %1161, !dbg !13493
  %idxprom2489 = sext i32 %add2488 to i64, !dbg !13494
  %arrayidx2490 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2489, !dbg !13494
  %1162 = load float, float* %arrayidx2490, align 4, !dbg !13494
  br label %cond.end2491, !dbg !13495

cond.end2491:                                     ; preds = %cond.false2486, %cond.true2481
  %cond2492 = phi float [ %1159, %cond.true2481 ], [ %1162, %cond.false2486 ], !dbg !13496
  %cmp2493 = fcmp ogt float %1150, %cond2492, !dbg !13498
  br i1 %cmp2493, label %if.then2495, label %if.end2506, !dbg !13499

if.then2495:                                      ; preds = %cond.end2491, %lor.lhs.false2451, %land.lhs.true2439
  %1163 = load i32, i32* %w, align 4, !dbg !13501
  %mul2496 = mul nsw i32 %1163, 16, !dbg !13503
  %1164 = load i32, i32* %g, align 4, !dbg !13504
  %add2497 = add nsw i32 %mul2496, %1164, !dbg !13505
  %idxprom2498 = sext i32 %add2497 to i64, !dbg !13506
  %1165 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13506
  %zeroes2499 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1165, i32 0, i32 8, !dbg !13507
  %arrayidx2500 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2499, i64 0, i64 %idxprom2498, !dbg !13506
  store i8 1, i8* %arrayidx2500, align 1, !dbg !13508
  %1166 = load i32, i32* %w, align 4, !dbg !13509
  %mul2501 = mul nsw i32 %1166, 16, !dbg !13510
  %1167 = load i32, i32* %g, align 4, !dbg !13511
  %add2502 = add nsw i32 %mul2501, %1167, !dbg !13512
  %idxprom2503 = sext i32 %add2502 to i64, !dbg !13513
  %1168 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13513
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1168, i32 0, i32 3, !dbg !13514
  %arrayidx2504 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom2503, !dbg !13513
  store i32 0, i32* %arrayidx2504, align 4, !dbg !13515
  %1169 = load i32, i32* %zeroed, align 4, !dbg !13516
  %inc2505 = add nsw i32 %1169, 1, !dbg !13516
  store i32 %inc2505, i32* %zeroed, align 4, !dbg !13516
  br label %if.end2506, !dbg !13517

if.end2506:                                       ; preds = %if.then2495, %cond.end2491, %lor.lhs.false2463, %land.lhs.true2431, %land.lhs.true2424, %land.lhs.true2416, %for.body2409
  br label %for.inc2507, !dbg !13518

for.inc2507:                                      ; preds = %if.end2506
  %1170 = load i32, i32* %w, align 4, !dbg !13519
  %idxprom2508 = sext i32 %1170 to i64, !dbg !13521
  %1171 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13521
  %ics2509 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1171, i32 0, i32 0, !dbg !13522
  %group_len2510 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2509, i32 0, i32 4, !dbg !13523
  %arrayidx2511 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2510, i64 0, i64 %idxprom2508, !dbg !13521
  %1172 = load i8, i8* %arrayidx2511, align 1, !dbg !13521
  %conv2512 = zext i8 %1172 to i32, !dbg !13521
  %1173 = load i32, i32* %w, align 4, !dbg !13524
  %add2513 = add nsw i32 %1173, %conv2512, !dbg !13524
  store i32 %add2513, i32* %w, align 4, !dbg !13524
  br label %for.cond2404, !dbg !13525, !llvm.loop !13526

for.end2514:                                      ; preds = %for.cond2404
  br label %for.inc2515, !dbg !13528

for.inc2515:                                      ; preds = %for.end2514, %if.then2402
  %1174 = load i32, i32* %g, align 4, !dbg !13529
  %dec = add nsw i32 %1174, -1, !dbg !13529
  store i32 %dec, i32* %g, align 4, !dbg !13529
  br label %for.cond2388, !dbg !13531, !llvm.loop !13532

for.end2516:                                      ; preds = %land.end2394
  br label %for.inc2517, !dbg !13534

for.inc2517:                                      ; preds = %for.end2516
  %1175 = load i32, i32* %zloop, align 4, !dbg !13535
  %inc2518 = add nsw i32 %1175, 1, !dbg !13535
  store i32 %inc2518, i32* %zloop, align 4, !dbg !13535
  br label %for.cond2374, !dbg !13537, !llvm.loop !13538

for.end2519:                                      ; preds = %for.cond2374
  %1176 = load i32, i32* %zeroed, align 4, !dbg !13540
  %tobool2520 = icmp ne i32 %1176, 0, !dbg !13540
  br i1 %tobool2520, label %if.then2521, label %if.end2522, !dbg !13542

if.then2521:                                      ; preds = %for.end2519
  store i32 1, i32* %fflag, align 4, !dbg !13543
  store i32 1, i32* %recomprd, align 4, !dbg !13544
  br label %if.end2522, !dbg !13545

if.end2522:                                       ; preds = %if.then2521, %for.end2519
  br label %if.end2524, !dbg !13546

if.else2523:                                      ; preds = %for.end2209
  store i32 0, i32* %overdist, align 4, !dbg !13547
  br label %if.end2524

if.end2524:                                       ; preds = %if.else2523, %if.end2522
  br label %if.end2525, !dbg !13549

if.end2525:                                       ; preds = %if.end2524, %land.lhs.true2109, %land.lhs.true2105, %land.lhs.true2101, %if.end2099
  br label %for.inc2526, !dbg !13550

for.inc2526:                                      ; preds = %if.end2525
  %1177 = load i32, i32* %i, align 4, !dbg !13551
  %inc2527 = add nsw i32 %1177, 1, !dbg !13551
  store i32 %inc2527, i32* %i, align 4, !dbg !13551
  br label %for.cond1936, !dbg !13553, !llvm.loop !13554

for.end2528:                                      ; preds = %land.end
  store i32 255, i32* %minscaler, align 4, !dbg !13556
  store i32 0, i32* %maxscaler, align 4, !dbg !13557
  store i32 0, i32* %w, align 4, !dbg !13558
  br label %for.cond2529, !dbg !13560

for.cond2529:                                     ; preds = %for.inc2584, %for.end2528
  %1178 = load i32, i32* %w, align 4, !dbg !13561
  %1179 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13564
  %ics2530 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1179, i32 0, i32 0, !dbg !13565
  %num_windows2531 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2530, i32 0, i32 9, !dbg !13566
  %1180 = load i32, i32* %num_windows2531, align 4, !dbg !13566
  %cmp2532 = icmp slt i32 %1178, %1180, !dbg !13567
  br i1 %cmp2532, label %for.body2534, label %for.end2591, !dbg !13568

for.body2534:                                     ; preds = %for.cond2529
  store i32 0, i32* %g, align 4, !dbg !13569
  br label %for.cond2535, !dbg !13572

for.cond2535:                                     ; preds = %for.inc2581, %for.body2534
  %1181 = load i32, i32* %g, align 4, !dbg !13573
  %1182 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13576
  %ics2536 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1182, i32 0, i32 0, !dbg !13577
  %num_swb2537 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2536, i32 0, i32 8, !dbg !13578
  %1183 = load i32, i32* %num_swb2537, align 32, !dbg !13578
  %cmp2538 = icmp slt i32 %1181, %1183, !dbg !13579
  br i1 %cmp2538, label %for.body2540, label %for.end2583, !dbg !13580

for.body2540:                                     ; preds = %for.cond2535
  %1184 = load i32, i32* %w, align 4, !dbg !13581
  %mul2541 = mul nsw i32 %1184, 16, !dbg !13584
  %1185 = load i32, i32* %g, align 4, !dbg !13585
  %add2542 = add nsw i32 %mul2541, %1185, !dbg !13586
  %idxprom2543 = sext i32 %add2542 to i64, !dbg !13587
  %1186 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13587
  %zeroes2544 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1186, i32 0, i32 8, !dbg !13588
  %arrayidx2545 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2544, i64 0, i64 %idxprom2543, !dbg !13587
  %1187 = load i8, i8* %arrayidx2545, align 1, !dbg !13587
  %tobool2546 = icmp ne i8 %1187, 0, !dbg !13587
  br i1 %tobool2546, label %if.end2580, label %if.then2547, !dbg !13589

if.then2547:                                      ; preds = %for.body2540
  %1188 = load i32, i32* %minscaler, align 4, !dbg !13590
  %1189 = load i32, i32* %w, align 4, !dbg !13592
  %mul2548 = mul nsw i32 %1189, 16, !dbg !13593
  %1190 = load i32, i32* %g, align 4, !dbg !13594
  %add2549 = add nsw i32 %mul2548, %1190, !dbg !13595
  %idxprom2550 = sext i32 %add2549 to i64, !dbg !13596
  %1191 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13596
  %sf_idx2551 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1191, i32 0, i32 7, !dbg !13597
  %arrayidx2552 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2551, i64 0, i64 %idxprom2550, !dbg !13596
  %1192 = load i32, i32* %arrayidx2552, align 4, !dbg !13596
  %cmp2553 = icmp sgt i32 %1188, %1192, !dbg !13598
  br i1 %cmp2553, label %cond.true2555, label %cond.false2561, !dbg !13599

cond.true2555:                                    ; preds = %if.then2547
  %1193 = load i32, i32* %w, align 4, !dbg !13600
  %mul2556 = mul nsw i32 %1193, 16, !dbg !13602
  %1194 = load i32, i32* %g, align 4, !dbg !13603
  %add2557 = add nsw i32 %mul2556, %1194, !dbg !13604
  %idxprom2558 = sext i32 %add2557 to i64, !dbg !13605
  %1195 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13605
  %sf_idx2559 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1195, i32 0, i32 7, !dbg !13606
  %arrayidx2560 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2559, i64 0, i64 %idxprom2558, !dbg !13605
  %1196 = load i32, i32* %arrayidx2560, align 4, !dbg !13605
  br label %cond.end2562, !dbg !13607

cond.false2561:                                   ; preds = %if.then2547
  %1197 = load i32, i32* %minscaler, align 4, !dbg !13608
  br label %cond.end2562, !dbg !13610

cond.end2562:                                     ; preds = %cond.false2561, %cond.true2555
  %cond2563 = phi i32 [ %1196, %cond.true2555 ], [ %1197, %cond.false2561 ], !dbg !13611
  store i32 %cond2563, i32* %minscaler, align 4, !dbg !13613
  %1198 = load i32, i32* %maxscaler, align 4, !dbg !13614
  %1199 = load i32, i32* %w, align 4, !dbg !13615
  %mul2564 = mul nsw i32 %1199, 16, !dbg !13616
  %1200 = load i32, i32* %g, align 4, !dbg !13617
  %add2565 = add nsw i32 %mul2564, %1200, !dbg !13618
  %idxprom2566 = sext i32 %add2565 to i64, !dbg !13619
  %1201 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13619
  %sf_idx2567 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1201, i32 0, i32 7, !dbg !13620
  %arrayidx2568 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2567, i64 0, i64 %idxprom2566, !dbg !13619
  %1202 = load i32, i32* %arrayidx2568, align 4, !dbg !13619
  %cmp2569 = icmp sgt i32 %1198, %1202, !dbg !13621
  br i1 %cmp2569, label %cond.true2571, label %cond.false2572, !dbg !13622

cond.true2571:                                    ; preds = %cond.end2562
  %1203 = load i32, i32* %maxscaler, align 4, !dbg !13623
  br label %cond.end2578, !dbg !13624

cond.false2572:                                   ; preds = %cond.end2562
  %1204 = load i32, i32* %w, align 4, !dbg !13625
  %mul2573 = mul nsw i32 %1204, 16, !dbg !13626
  %1205 = load i32, i32* %g, align 4, !dbg !13627
  %add2574 = add nsw i32 %mul2573, %1205, !dbg !13628
  %idxprom2575 = sext i32 %add2574 to i64, !dbg !13629
  %1206 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13629
  %sf_idx2576 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1206, i32 0, i32 7, !dbg !13630
  %arrayidx2577 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2576, i64 0, i64 %idxprom2575, !dbg !13629
  %1207 = load i32, i32* %arrayidx2577, align 4, !dbg !13629
  br label %cond.end2578, !dbg !13631

cond.end2578:                                     ; preds = %cond.false2572, %cond.true2571
  %cond2579 = phi i32 [ %1203, %cond.true2571 ], [ %1207, %cond.false2572 ], !dbg !13632
  store i32 %cond2579, i32* %maxscaler, align 4, !dbg !13633
  br label %if.end2580, !dbg !13634

if.end2580:                                       ; preds = %cond.end2578, %for.body2540
  br label %for.inc2581, !dbg !13635

for.inc2581:                                      ; preds = %if.end2580
  %1208 = load i32, i32* %g, align 4, !dbg !13636
  %inc2582 = add nsw i32 %1208, 1, !dbg !13636
  store i32 %inc2582, i32* %g, align 4, !dbg !13636
  br label %for.cond2535, !dbg !13638, !llvm.loop !13639

for.end2583:                                      ; preds = %for.cond2535
  br label %for.inc2584, !dbg !13641

for.inc2584:                                      ; preds = %for.end2583
  %1209 = load i32, i32* %w, align 4, !dbg !13642
  %idxprom2585 = sext i32 %1209 to i64, !dbg !13644
  %1210 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13644
  %ics2586 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1210, i32 0, i32 0, !dbg !13645
  %group_len2587 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2586, i32 0, i32 4, !dbg !13646
  %arrayidx2588 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2587, i64 0, i64 %idxprom2585, !dbg !13644
  %1211 = load i8, i8* %arrayidx2588, align 1, !dbg !13644
  %conv2589 = zext i8 %1211 to i32, !dbg !13644
  %1212 = load i32, i32* %w, align 4, !dbg !13647
  %add2590 = add nsw i32 %1212, %conv2589, !dbg !13647
  store i32 %add2590, i32* %w, align 4, !dbg !13647
  br label %for.cond2529, !dbg !13648, !llvm.loop !13649

for.end2591:                                      ; preds = %for.cond2529
  %1213 = load i32, i32* %minscaler, align 4, !dbg !13651
  store i32 %1213, i32* %a.addr.i3574, align 4, !dbg !13652
  store i32 104, i32* %amin.addr.i3575, align 4, !dbg !13652
  store i32 219, i32* %amax.addr.i3576, align 4, !dbg !13652
  %1214 = load i32, i32* %a.addr.i3574, align 4, !dbg !13653
  %1215 = load i32, i32* %amin.addr.i3575, align 4, !dbg !13654
  %cmp.i3577 = icmp slt i32 %1214, %1215, !dbg !13655
  br i1 %cmp.i3577, label %if.then.i3578, label %if.else.i3580, !dbg !13656

if.then.i3578:                                    ; preds = %for.end2591
  %1216 = load i32, i32* %amin.addr.i3575, align 4, !dbg !13657
  store i32 %1216, i32* %retval.i3573, align 4, !dbg !13658
  br label %av_clip_c.exit3583, !dbg !13658

if.else.i3580:                                    ; preds = %for.end2591
  %1217 = load i32, i32* %a.addr.i3574, align 4, !dbg !13659
  %1218 = load i32, i32* %amax.addr.i3576, align 4, !dbg !13660
  %cmp1.i3579 = icmp sgt i32 %1217, %1218, !dbg !13661
  br i1 %cmp1.i3579, label %if.then2.i3581, label %if.else3.i3582, !dbg !13662

if.then2.i3581:                                   ; preds = %if.else.i3580
  %1219 = load i32, i32* %amax.addr.i3576, align 4, !dbg !13663
  store i32 %1219, i32* %retval.i3573, align 4, !dbg !13664
  br label %av_clip_c.exit3583, !dbg !13664

if.else3.i3582:                                   ; preds = %if.else.i3580
  %1220 = load i32, i32* %a.addr.i3574, align 4, !dbg !13665
  store i32 %1220, i32* %retval.i3573, align 4, !dbg !13666
  br label %av_clip_c.exit3583, !dbg !13666

av_clip_c.exit3583:                               ; preds = %if.then.i3578, %if.then2.i3581, %if.else3.i3582
  %1221 = load i32, i32* %retval.i3573, align 4, !dbg !13667
  store i32 %1221, i32* %nminscaler, align 4, !dbg !13668
  store i32 %1221, i32* %minscaler, align 4, !dbg !13669
  store i32 -1, i32* %prev, align 4, !dbg !13670
  store i32 0, i32* %w, align 4, !dbg !13671
  br label %for.cond2593, !dbg !13672

for.cond2593:                                     ; preds = %for.inc3277, %av_clip_c.exit3583
  %1222 = load i32, i32* %w, align 4, !dbg !13673
  %1223 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13675
  %ics2594 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1223, i32 0, i32 0, !dbg !13676
  %num_windows2595 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2594, i32 0, i32 9, !dbg !13677
  %1224 = load i32, i32* %num_windows2595, align 4, !dbg !13677
  %cmp2596 = icmp slt i32 %1222, %1224, !dbg !13678
  br i1 %cmp2596, label %for.body2598, label %for.end3284, !dbg !13679

for.body2598:                                     ; preds = %for.cond2593
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !13680, metadata !2772), !dbg !13681
  %1225 = load i32, i32* %its, align 4, !dbg !13682
  %1226 = load i32, i32* %maxits, align 4, !dbg !13683
  %div2599 = sdiv i32 %1226, 2, !dbg !13684
  %cmp2600 = icmp sgt i32 %1225, %div2599, !dbg !13685
  br i1 %cmp2600, label %cond.true2602, label %cond.false2608, !dbg !13686

cond.true2602:                                    ; preds = %for.body2598
  %1227 = load i32, i32* %its, align 4, !dbg !13687
  %1228 = load i32, i32* %maxits, align 4, !dbg !13689
  %mul2603 = mul nsw i32 %1228, 2, !dbg !13690
  %div2604 = sdiv i32 %mul2603, 3, !dbg !13691
  %cmp2605 = icmp sgt i32 %1227, %div2604, !dbg !13692
  %cond2607 = select i1 %cmp2605, i32 1, i32 3, !dbg !13693
  br label %cond.end2609, !dbg !13694

cond.false2608:                                   ; preds = %for.body2598
  br label %cond.end2609, !dbg !13695

cond.end2609:                                     ; preds = %cond.false2608, %cond.true2602
  %cond2610 = phi i32 [ %cond2607, %cond.true2602 ], [ 10, %cond.false2608 ], !dbg !13697
  store i32 %cond2610, i32* %depth, align 4, !dbg !13699
  call void @llvm.dbg.declare(metadata i32* %edepth, metadata !13700, metadata !2772), !dbg !13701
  %1229 = load i32, i32* %depth, align 4, !dbg !13702
  %add2611 = add nsw i32 %1229, 2, !dbg !13703
  store i32 %add2611, i32* %edepth, align 4, !dbg !13701
  call void @llvm.dbg.declare(metadata float* %uplmax, metadata !13704, metadata !2772), !dbg !13705
  %1230 = load i32, i32* %its, align 4, !dbg !13706
  %conv2612 = sitofp i32 %1230 to float, !dbg !13706
  %1231 = load i32, i32* %maxits, align 4, !dbg !13707
  %conv2613 = sitofp i32 %1231 to float, !dbg !13707
  %mul2614 = fmul float %conv2613, 2.500000e-01, !dbg !13708
  %div2615 = fdiv float %conv2612, %mul2614, !dbg !13709
  %add2616 = fadd float %div2615, 1.000000e+00, !dbg !13710
  store float %add2616, float* %uplmax, align 4, !dbg !13705
  %1232 = load i32, i32* %tbits, align 4, !dbg !13711
  %1233 = load i32, i32* %destbits, align 4, !dbg !13712
  %cmp2617 = icmp sgt i32 %1232, %1233, !dbg !13713
  br i1 %cmp2617, label %cond.true2619, label %cond.false2644, !dbg !13714

cond.true2619:                                    ; preds = %cond.end2609
  %1234 = load i32, i32* %tbits, align 4, !dbg !13715
  %conv2620 = sitofp i32 %1234 to float, !dbg !13715
  %1235 = load i32, i32* %destbits, align 4, !dbg !13716
  %cmp2621 = icmp sgt i32 1, %1235, !dbg !13717
  br i1 %cmp2621, label %cond.true2623, label %cond.false2624, !dbg !13718

cond.true2623:                                    ; preds = %cond.true2619
  br label %cond.end2625, !dbg !13719

cond.false2624:                                   ; preds = %cond.true2619
  %1236 = load i32, i32* %destbits, align 4, !dbg !13720
  br label %cond.end2625, !dbg !13721

cond.end2625:                                     ; preds = %cond.false2624, %cond.true2623
  %cond2626 = phi i32 [ 1, %cond.true2623 ], [ %1236, %cond.false2624 ], !dbg !13722
  %conv2627 = sitofp i32 %cond2626 to float, !dbg !13724
  %div2628 = fdiv float %conv2620, %conv2627, !dbg !13725
  %cmp2629 = fcmp ogt float 2.000000e+00, %div2628, !dbg !13726
  br i1 %cmp2629, label %cond.true2631, label %cond.false2641, !dbg !13727

cond.true2631:                                    ; preds = %cond.end2625
  %1237 = load i32, i32* %tbits, align 4, !dbg !13728
  %conv2632 = sitofp i32 %1237 to float, !dbg !13728
  %1238 = load i32, i32* %destbits, align 4, !dbg !13730
  %cmp2633 = icmp sgt i32 1, %1238, !dbg !13731
  br i1 %cmp2633, label %cond.true2635, label %cond.false2636, !dbg !13732

cond.true2635:                                    ; preds = %cond.true2631
  br label %cond.end2637, !dbg !13733

cond.false2636:                                   ; preds = %cond.true2631
  %1239 = load i32, i32* %destbits, align 4, !dbg !13735
  br label %cond.end2637, !dbg !13737

cond.end2637:                                     ; preds = %cond.false2636, %cond.true2635
  %cond2638 = phi i32 [ 1, %cond.true2635 ], [ %1239, %cond.false2636 ], !dbg !13738
  %conv2639 = sitofp i32 %cond2638 to float, !dbg !13740
  %div2640 = fdiv float %conv2632, %conv2639, !dbg !13741
  br label %cond.end2642, !dbg !13742

cond.false2641:                                   ; preds = %cond.end2625
  br label %cond.end2642, !dbg !13743

cond.end2642:                                     ; preds = %cond.false2641, %cond.end2637
  %cond2643 = phi float [ %div2640, %cond.end2637 ], [ 2.000000e+00, %cond.false2641 ], !dbg !13745
  br label %cond.end2645, !dbg !13747

cond.false2644:                                   ; preds = %cond.end2609
  br label %cond.end2645, !dbg !13748

cond.end2645:                                     ; preds = %cond.false2644, %cond.end2642
  %cond2646 = phi float [ %cond2643, %cond.end2642 ], [ 1.000000e+00, %cond.false2644 ], !dbg !13750
  %1240 = load float, float* %uplmax, align 4, !dbg !13752
  %mul2647 = fmul float %1240, %cond2646, !dbg !13752
  store float %mul2647, float* %uplmax, align 4, !dbg !13752
  %1241 = load i32, i32* %w, align 4, !dbg !13753
  %mul2648 = mul nsw i32 %1241, 128, !dbg !13754
  store i32 %mul2648, i32* %start, align 4, !dbg !13755
  store i32 0, i32* %g, align 4, !dbg !13756
  br label %for.cond2649, !dbg !13757

for.cond2649:                                     ; preds = %for.inc3274, %cond.end2645
  %1242 = load i32, i32* %g, align 4, !dbg !13758
  %1243 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13760
  %ics2650 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1243, i32 0, i32 0, !dbg !13761
  %num_swb2651 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2650, i32 0, i32 8, !dbg !13762
  %1244 = load i32, i32* %num_swb2651, align 32, !dbg !13762
  %cmp2652 = icmp slt i32 %1242, %1244, !dbg !13763
  br i1 %cmp2652, label %for.body2654, label %for.end3276, !dbg !13764

for.body2654:                                     ; preds = %for.cond2649
  call void @llvm.dbg.declare(metadata i32* %prevsc, metadata !13765, metadata !2772), !dbg !13766
  %1245 = load i32, i32* %w, align 4, !dbg !13767
  %mul2655 = mul nsw i32 %1245, 16, !dbg !13768
  %1246 = load i32, i32* %g, align 4, !dbg !13769
  %add2656 = add nsw i32 %mul2655, %1246, !dbg !13770
  %idxprom2657 = sext i32 %add2656 to i64, !dbg !13771
  %1247 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13771
  %sf_idx2658 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1247, i32 0, i32 7, !dbg !13772
  %arrayidx2659 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2658, i64 0, i64 %idxprom2657, !dbg !13771
  %1248 = load i32, i32* %arrayidx2659, align 4, !dbg !13771
  store i32 %1248, i32* %prevsc, align 4, !dbg !13766
  %1249 = load i32, i32* %prev, align 4, !dbg !13773
  %cmp2660 = icmp slt i32 %1249, 0, !dbg !13775
  br i1 %cmp2660, label %land.lhs.true2662, label %if.end2672, !dbg !13776

land.lhs.true2662:                                ; preds = %for.body2654
  %1250 = load i32, i32* %w, align 4, !dbg !13777
  %mul2663 = mul nsw i32 %1250, 16, !dbg !13779
  %1251 = load i32, i32* %g, align 4, !dbg !13780
  %add2664 = add nsw i32 %mul2663, %1251, !dbg !13781
  %idxprom2665 = sext i32 %add2664 to i64, !dbg !13782
  %1252 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13782
  %zeroes2666 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1252, i32 0, i32 8, !dbg !13783
  %arrayidx2667 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2666, i64 0, i64 %idxprom2665, !dbg !13782
  %1253 = load i8, i8* %arrayidx2667, align 1, !dbg !13782
  %tobool2668 = icmp ne i8 %1253, 0, !dbg !13782
  br i1 %tobool2668, label %if.end2672, label %if.then2669, !dbg !13784

if.then2669:                                      ; preds = %land.lhs.true2662
  %1254 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13785
  %sf_idx2670 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1254, i32 0, i32 7, !dbg !13786
  %arrayidx2671 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2670, i64 0, i64 0, !dbg !13785
  %1255 = load i32, i32* %arrayidx2671, align 4, !dbg !13785
  store i32 %1255, i32* %prev, align 4, !dbg !13787
  br label %if.end2672, !dbg !13788

if.end2672:                                       ; preds = %if.then2669, %land.lhs.true2662, %for.body2654
  %1256 = load i32, i32* %w, align 4, !dbg !13789
  %mul2673 = mul nsw i32 %1256, 16, !dbg !13790
  %1257 = load i32, i32* %g, align 4, !dbg !13791
  %add2674 = add nsw i32 %mul2673, %1257, !dbg !13792
  %idxprom2675 = sext i32 %add2674 to i64, !dbg !13793
  %1258 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13793
  %zeroes2676 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1258, i32 0, i32 8, !dbg !13794
  %arrayidx2677 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes2676, i64 0, i64 %idxprom2675, !dbg !13793
  %1259 = load i8, i8* %arrayidx2677, align 1, !dbg !13793
  %tobool2678 = icmp ne i8 %1259, 0, !dbg !13793
  br i1 %tobool2678, label %if.end3267, label %if.then2679, !dbg !13795

if.then2679:                                      ; preds = %if.end2672
  call void @llvm.dbg.declare(metadata float** %coefs2680, metadata !13796, metadata !2772), !dbg !13797
  %1260 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13798
  %coeffs2681 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1260, i32 0, i32 14, !dbg !13799
  %arraydecay2682 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs2681, i32 0, i32 0, !dbg !13798
  %1261 = load i32, i32* %start, align 4, !dbg !13800
  %idx.ext2683 = sext i32 %1261 to i64, !dbg !13801
  %add.ptr2684 = getelementptr inbounds float, float* %arraydecay2682, i64 %idx.ext2683, !dbg !13801
  store float* %add.ptr2684, float** %coefs2680, align 8, !dbg !13797
  call void @llvm.dbg.declare(metadata float** %scaled2685, metadata !13802, metadata !2772), !dbg !13803
  %1262 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !13804
  %scoefs2686 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %1262, i32 0, i32 29, !dbg !13805
  %arraydecay2687 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs2686, i32 0, i32 0, !dbg !13804
  %1263 = load i32, i32* %start, align 4, !dbg !13806
  %idx.ext2688 = sext i32 %1263 to i64, !dbg !13807
  %add.ptr2689 = getelementptr inbounds float, float* %arraydecay2687, i64 %idx.ext2688, !dbg !13807
  store float* %add.ptr2689, float** %scaled2685, align 8, !dbg !13803
  call void @llvm.dbg.declare(metadata i32* %cmb, metadata !13808, metadata !2772), !dbg !13809
  %1264 = load i32, i32* %w, align 4, !dbg !13810
  %mul2690 = mul nsw i32 %1264, 16, !dbg !13811
  %1265 = load i32, i32* %g, align 4, !dbg !13812
  %add2691 = add nsw i32 %mul2690, %1265, !dbg !13813
  %idxprom2692 = sext i32 %add2691 to i64, !dbg !13814
  %arrayidx2693 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom2692, !dbg !13814
  %1266 = load float, float* %arrayidx2693, align 4, !dbg !13814
  %1267 = load i32, i32* %w, align 4, !dbg !13815
  %mul2694 = mul nsw i32 %1267, 16, !dbg !13816
  %1268 = load i32, i32* %g, align 4, !dbg !13817
  %add2695 = add nsw i32 %mul2694, %1268, !dbg !13818
  %idxprom2696 = sext i32 %add2695 to i64, !dbg !13819
  %1269 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13819
  %sf_idx2697 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1269, i32 0, i32 7, !dbg !13820
  %arrayidx2698 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2697, i64 0, i64 %idxprom2696, !dbg !13819
  %1270 = load i32, i32* %arrayidx2698, align 4, !dbg !13819
  %call2699 = call i32 @find_min_book(float %1266, i32 %1270), !dbg !13821
  store i32 %call2699, i32* %cmb, align 4, !dbg !13809
  call void @llvm.dbg.declare(metadata i32* %mindeltasf, metadata !13822, metadata !2772), !dbg !13823
  %1271 = load i32, i32* %prev, align 4, !dbg !13824
  %sub2700 = sub nsw i32 %1271, 60, !dbg !13825
  %cmp2701 = icmp sgt i32 0, %sub2700, !dbg !13826
  br i1 %cmp2701, label %cond.true2703, label %cond.false2704, !dbg !13827

cond.true2703:                                    ; preds = %if.then2679
  br label %cond.end2706, !dbg !13828

cond.false2704:                                   ; preds = %if.then2679
  %1272 = load i32, i32* %prev, align 4, !dbg !13830
  %sub2705 = sub nsw i32 %1272, 60, !dbg !13832
  br label %cond.end2706, !dbg !13833

cond.end2706:                                     ; preds = %cond.false2704, %cond.true2703
  %cond2707 = phi i32 [ 0, %cond.true2703 ], [ %sub2705, %cond.false2704 ], !dbg !13834
  store i32 %cond2707, i32* %mindeltasf, align 4, !dbg !13836
  call void @llvm.dbg.declare(metadata i32* %maxdeltasf, metadata !13837, metadata !2772), !dbg !13838
  %1273 = load i32, i32* %prev, align 4, !dbg !13839
  %add2708 = add nsw i32 %1273, 60, !dbg !13840
  %cmp2709 = icmp sgt i32 219, %add2708, !dbg !13841
  br i1 %cmp2709, label %cond.true2711, label %cond.false2713, !dbg !13842

cond.true2711:                                    ; preds = %cond.end2706
  %1274 = load i32, i32* %prev, align 4, !dbg !13843
  %add2712 = add nsw i32 %1274, 60, !dbg !13844
  br label %cond.end2714, !dbg !13845

cond.false2713:                                   ; preds = %cond.end2706
  br label %cond.end2714, !dbg !13846

cond.end2714:                                     ; preds = %cond.false2713, %cond.true2711
  %cond2715 = phi i32 [ %add2712, %cond.true2711 ], [ 219, %cond.false2713 ], !dbg !13847
  store i32 %cond2715, i32* %maxdeltasf, align 4, !dbg !13848
  %1275 = load i32, i32* %cmb, align 4, !dbg !13849
  %tobool2716 = icmp ne i32 %1275, 0, !dbg !13849
  br i1 %tobool2716, label %lor.lhs.false2717, label %land.lhs.true2728, !dbg !13851

lor.lhs.false2717:                                ; preds = %cond.end2714
  %1276 = load i32, i32* %w, align 4, !dbg !13852
  %mul2718 = mul nsw i32 %1276, 16, !dbg !13854
  %1277 = load i32, i32* %g, align 4, !dbg !13855
  %add2719 = add nsw i32 %mul2718, %1277, !dbg !13856
  %idxprom2720 = sext i32 %add2719 to i64, !dbg !13857
  %arrayidx2721 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2720, !dbg !13857
  %1278 = load float, float* %arrayidx2721, align 4, !dbg !13857
  %1279 = load i32, i32* %w, align 4, !dbg !13858
  %mul2722 = mul nsw i32 %1279, 16, !dbg !13859
  %1280 = load i32, i32* %g, align 4, !dbg !13860
  %add2723 = add nsw i32 %mul2722, %1280, !dbg !13861
  %idxprom2724 = sext i32 %add2723 to i64, !dbg !13862
  %arrayidx2725 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2724, !dbg !13862
  %1281 = load float, float* %arrayidx2725, align 4, !dbg !13862
  %cmp2726 = fcmp ogt float %1278, %1281, !dbg !13863
  br i1 %cmp2726, label %land.lhs.true2728, label %if.else2999, !dbg !13864

land.lhs.true2728:                                ; preds = %lor.lhs.false2717, %cond.end2714
  %1282 = load i32, i32* %w, align 4, !dbg !13865
  %mul2729 = mul nsw i32 %1282, 16, !dbg !13867
  %1283 = load i32, i32* %g, align 4, !dbg !13868
  %add2730 = add nsw i32 %mul2729, %1283, !dbg !13869
  %idxprom2731 = sext i32 %add2730 to i64, !dbg !13870
  %1284 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13870
  %sf_idx2732 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1284, i32 0, i32 7, !dbg !13871
  %arrayidx2733 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2732, i64 0, i64 %idxprom2731, !dbg !13870
  %1285 = load i32, i32* %arrayidx2733, align 4, !dbg !13870
  %1286 = load i32, i32* %mindeltasf, align 4, !dbg !13872
  %1287 = load i32, i32* %w, align 4, !dbg !13873
  %mul2734 = mul nsw i32 %1287, 16, !dbg !13874
  %1288 = load i32, i32* %g, align 4, !dbg !13875
  %add2735 = add nsw i32 %mul2734, %1288, !dbg !13876
  %idxprom2736 = sext i32 %add2735 to i64, !dbg !13877
  %arrayidx2737 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom2736, !dbg !13877
  %1289 = load i32, i32* %arrayidx2737, align 4, !dbg !13877
  %cmp2738 = icmp sgt i32 %1286, %1289, !dbg !13878
  br i1 %cmp2738, label %cond.true2740, label %cond.false2741, !dbg !13879

cond.true2740:                                    ; preds = %land.lhs.true2728
  %1290 = load i32, i32* %mindeltasf, align 4, !dbg !13880
  br label %cond.end2746, !dbg !13882

cond.false2741:                                   ; preds = %land.lhs.true2728
  %1291 = load i32, i32* %w, align 4, !dbg !13883
  %mul2742 = mul nsw i32 %1291, 16, !dbg !13885
  %1292 = load i32, i32* %g, align 4, !dbg !13886
  %add2743 = add nsw i32 %mul2742, %1292, !dbg !13887
  %idxprom2744 = sext i32 %add2743 to i64, !dbg !13888
  %arrayidx2745 = getelementptr inbounds [128 x i32], [128 x i32]* %minsf, i64 0, i64 %idxprom2744, !dbg !13888
  %1293 = load i32, i32* %arrayidx2745, align 4, !dbg !13888
  br label %cond.end2746, !dbg !13889

cond.end2746:                                     ; preds = %cond.false2741, %cond.true2740
  %cond2747 = phi i32 [ %1290, %cond.true2740 ], [ %1293, %cond.false2741 ], !dbg !13890
  %cmp2748 = icmp sgt i32 %1285, %cond2747, !dbg !13892
  br i1 %cmp2748, label %if.then2750, label %if.else2999, !dbg !13893

if.then2750:                                      ; preds = %cond.end2746
  store i32 0, i32* %i, align 4, !dbg !13894
  br label %for.cond2751, !dbg !13897

for.cond2751:                                     ; preds = %for.inc2996, %if.then2750
  %1294 = load i32, i32* %i, align 4, !dbg !13898
  %1295 = load i32, i32* %edepth, align 4, !dbg !13901
  %cmp2752 = icmp slt i32 %1294, %1295, !dbg !13902
  br i1 %cmp2752, label %land.rhs2754, label %land.end2762, !dbg !13903

land.rhs2754:                                     ; preds = %for.cond2751
  %1296 = load i32, i32* %w, align 4, !dbg !13904
  %mul2755 = mul nsw i32 %1296, 16, !dbg !13906
  %1297 = load i32, i32* %g, align 4, !dbg !13907
  %add2756 = add nsw i32 %mul2755, %1297, !dbg !13908
  %idxprom2757 = sext i32 %add2756 to i64, !dbg !13909
  %1298 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13909
  %sf_idx2758 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1298, i32 0, i32 7, !dbg !13910
  %arrayidx2759 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2758, i64 0, i64 %idxprom2757, !dbg !13909
  %1299 = load i32, i32* %arrayidx2759, align 4, !dbg !13909
  %1300 = load i32, i32* %mindeltasf, align 4, !dbg !13911
  %cmp2760 = icmp sgt i32 %1299, %1300, !dbg !13912
  br label %land.end2762

land.end2762:                                     ; preds = %land.rhs2754, %for.cond2751
  %1301 = phi i1 [ false, %for.cond2751 ], [ %cmp2760, %land.rhs2754 ]
  br i1 %1301, label %for.body2763, label %for.end2998, !dbg !13913

for.body2763:                                     ; preds = %land.end2762
  call void @llvm.dbg.declare(metadata i32* %cb2764, metadata !13915, metadata !2772), !dbg !13917
  call void @llvm.dbg.declare(metadata i32* %bits2765, metadata !13918, metadata !2772), !dbg !13919
  call void @llvm.dbg.declare(metadata float* %dist2766, metadata !13920, metadata !2772), !dbg !13921
  call void @llvm.dbg.declare(metadata float* %qenergy2767, metadata !13922, metadata !2772), !dbg !13923
  call void @llvm.dbg.declare(metadata i32* %mb, metadata !13924, metadata !2772), !dbg !13925
  %1302 = load i32, i32* %w, align 4, !dbg !13926
  %mul2768 = mul nsw i32 %1302, 16, !dbg !13927
  %1303 = load i32, i32* %g, align 4, !dbg !13928
  %add2769 = add nsw i32 %mul2768, %1303, !dbg !13929
  %idxprom2770 = sext i32 %add2769 to i64, !dbg !13930
  %arrayidx2771 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom2770, !dbg !13930
  %1304 = load float, float* %arrayidx2771, align 4, !dbg !13930
  %1305 = load i32, i32* %w, align 4, !dbg !13931
  %mul2772 = mul nsw i32 %1305, 16, !dbg !13932
  %1306 = load i32, i32* %g, align 4, !dbg !13933
  %add2773 = add nsw i32 %mul2772, %1306, !dbg !13934
  %idxprom2774 = sext i32 %add2773 to i64, !dbg !13935
  %1307 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13935
  %sf_idx2775 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1307, i32 0, i32 7, !dbg !13936
  %arrayidx2776 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2775, i64 0, i64 %idxprom2774, !dbg !13935
  %1308 = load i32, i32* %arrayidx2776, align 4, !dbg !13935
  %sub2777 = sub nsw i32 %1308, 1, !dbg !13937
  %call2778 = call i32 @find_min_book(float %1304, i32 %sub2777), !dbg !13938
  store i32 %call2778, i32* %mb, align 4, !dbg !13925
  %1309 = load i32, i32* %w, align 4, !dbg !13939
  %mul2779 = mul nsw i32 %1309, 16, !dbg !13940
  %1310 = load i32, i32* %g, align 4, !dbg !13941
  %add2780 = add nsw i32 %mul2779, %1310, !dbg !13942
  %idxprom2781 = sext i32 %add2780 to i64, !dbg !13943
  %arrayidx2782 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom2781, !dbg !13943
  %1311 = load float, float* %arrayidx2782, align 4, !dbg !13943
  %1312 = load i32, i32* %w, align 4, !dbg !13944
  %mul2783 = mul nsw i32 %1312, 16, !dbg !13945
  %1313 = load i32, i32* %g, align 4, !dbg !13946
  %add2784 = add nsw i32 %mul2783, %1313, !dbg !13947
  %idxprom2785 = sext i32 %add2784 to i64, !dbg !13948
  %1314 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13948
  %sf_idx2786 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1314, i32 0, i32 7, !dbg !13949
  %arrayidx2787 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2786, i64 0, i64 %idxprom2785, !dbg !13948
  %1315 = load i32, i32* %arrayidx2787, align 4, !dbg !13948
  %call2788 = call i32 @find_min_book(float %1311, i32 %1315), !dbg !13950
  store i32 %call2788, i32* %cb2764, align 4, !dbg !13951
  store float 0.000000e+00, float* %qenergy2767, align 4, !dbg !13952
  store float 0.000000e+00, float* %dist2766, align 4, !dbg !13953
  store i32 0, i32* %bits2765, align 4, !dbg !13954
  %1316 = load i32, i32* %cb2764, align 4, !dbg !13955
  %tobool2789 = icmp ne i32 %1316, 0, !dbg !13955
  br i1 %tobool2789, label %if.else2821, label %if.then2790, !dbg !13957

if.then2790:                                      ; preds = %for.body2763
  %1317 = load i32, i32* %w, align 4, !dbg !13958
  %mul2791 = mul nsw i32 %1317, 16, !dbg !13960
  %1318 = load i32, i32* %g, align 4, !dbg !13961
  %add2792 = add nsw i32 %mul2791, %1318, !dbg !13962
  %idxprom2793 = sext i32 %add2792 to i64, !dbg !13963
  %1319 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13963
  %sf_idx2794 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1319, i32 0, i32 7, !dbg !13964
  %arrayidx2795 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2794, i64 0, i64 %idxprom2793, !dbg !13963
  %1320 = load i32, i32* %arrayidx2795, align 4, !dbg !13963
  %sub2796 = sub nsw i32 %1320, 1, !dbg !13965
  %1321 = load i32, i32* %w, align 4, !dbg !13966
  %mul2797 = mul nsw i32 %1321, 16, !dbg !13967
  %1322 = load i32, i32* %g, align 4, !dbg !13968
  %add2798 = add nsw i32 %mul2797, %1322, !dbg !13969
  %idxprom2799 = sext i32 %add2798 to i64, !dbg !13970
  %arrayidx2800 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom2799, !dbg !13970
  %1323 = load i32, i32* %arrayidx2800, align 4, !dbg !13970
  %cmp2801 = icmp sgt i32 %sub2796, %1323, !dbg !13971
  br i1 %cmp2801, label %cond.true2803, label %cond.false2808, !dbg !13972

cond.true2803:                                    ; preds = %if.then2790
  %1324 = load i32, i32* %w, align 4, !dbg !13973
  %mul2804 = mul nsw i32 %1324, 16, !dbg !13975
  %1325 = load i32, i32* %g, align 4, !dbg !13976
  %add2805 = add nsw i32 %mul2804, %1325, !dbg !13977
  %idxprom2806 = sext i32 %add2805 to i64, !dbg !13978
  %arrayidx2807 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom2806, !dbg !13978
  %1326 = load i32, i32* %arrayidx2807, align 4, !dbg !13978
  br label %cond.end2815, !dbg !13979

cond.false2808:                                   ; preds = %if.then2790
  %1327 = load i32, i32* %w, align 4, !dbg !13980
  %mul2809 = mul nsw i32 %1327, 16, !dbg !13982
  %1328 = load i32, i32* %g, align 4, !dbg !13983
  %add2810 = add nsw i32 %mul2809, %1328, !dbg !13984
  %idxprom2811 = sext i32 %add2810 to i64, !dbg !13985
  %1329 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !13985
  %sf_idx2812 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1329, i32 0, i32 7, !dbg !13986
  %arrayidx2813 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2812, i64 0, i64 %idxprom2811, !dbg !13985
  %1330 = load i32, i32* %arrayidx2813, align 4, !dbg !13985
  %sub2814 = sub nsw i32 %1330, 1, !dbg !13987
  br label %cond.end2815, !dbg !13988

cond.end2815:                                     ; preds = %cond.false2808, %cond.true2803
  %cond2816 = phi i32 [ %1326, %cond.true2803 ], [ %sub2814, %cond.false2808 ], !dbg !13989
  %1331 = load i32, i32* %w, align 4, !dbg !13991
  %mul2817 = mul nsw i32 %1331, 16, !dbg !13992
  %1332 = load i32, i32* %g, align 4, !dbg !13993
  %add2818 = add nsw i32 %mul2817, %1332, !dbg !13994
  %idxprom2819 = sext i32 %add2818 to i64, !dbg !13995
  %arrayidx2820 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom2819, !dbg !13995
  store i32 %cond2816, i32* %arrayidx2820, align 4, !dbg !13996
  br label %if.end2837, !dbg !13997

if.else2821:                                      ; preds = %for.body2763
  %1333 = load i32, i32* %i, align 4, !dbg !13998
  %1334 = load i32, i32* %depth, align 4, !dbg !14001
  %cmp2822 = icmp sge i32 %1333, %1334, !dbg !14002
  br i1 %cmp2822, label %land.lhs.true2824, label %if.end2836, !dbg !14003

land.lhs.true2824:                                ; preds = %if.else2821
  %1335 = load i32, i32* %w, align 4, !dbg !14004
  %mul2825 = mul nsw i32 %1335, 16, !dbg !14006
  %1336 = load i32, i32* %g, align 4, !dbg !14007
  %add2826 = add nsw i32 %mul2825, %1336, !dbg !14008
  %idxprom2827 = sext i32 %add2826 to i64, !dbg !14009
  %arrayidx2828 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2827, !dbg !14009
  %1337 = load float, float* %arrayidx2828, align 4, !dbg !14009
  %1338 = load i32, i32* %w, align 4, !dbg !14010
  %mul2829 = mul nsw i32 %1338, 16, !dbg !14011
  %1339 = load i32, i32* %g, align 4, !dbg !14012
  %add2830 = add nsw i32 %mul2829, %1339, !dbg !14013
  %idxprom2831 = sext i32 %add2830 to i64, !dbg !14014
  %arrayidx2832 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2831, !dbg !14014
  %1340 = load float, float* %arrayidx2832, align 4, !dbg !14014
  %cmp2833 = fcmp olt float %1337, %1340, !dbg !14015
  br i1 %cmp2833, label %if.then2835, label %if.end2836, !dbg !14016

if.then2835:                                      ; preds = %land.lhs.true2824
  br label %for.end2998, !dbg !14017

if.end2836:                                       ; preds = %land.lhs.true2824, %if.else2821
  br label %if.end2837

if.end2837:                                       ; preds = %if.end2836, %cond.end2815
  %1341 = load i32, i32* %g, align 4, !dbg !14019
  %tobool2838 = icmp ne i32 %1341, 0, !dbg !14019
  br i1 %tobool2838, label %if.end2884, label %land.lhs.true2839, !dbg !14021

land.lhs.true2839:                                ; preds = %if.end2837
  %1342 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14022
  %ics2840 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1342, i32 0, i32 0, !dbg !14024
  %num_windows2841 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2840, i32 0, i32 9, !dbg !14025
  %1343 = load i32, i32* %num_windows2841, align 4, !dbg !14025
  %cmp2842 = icmp sgt i32 %1343, 1, !dbg !14026
  br i1 %cmp2842, label %land.lhs.true2844, label %if.end2884, !dbg !14027

land.lhs.true2844:                                ; preds = %land.lhs.true2839
  %1344 = load i32, i32* %w, align 4, !dbg !14028
  %mul2845 = mul nsw i32 %1344, 16, !dbg !14030
  %1345 = load i32, i32* %g, align 4, !dbg !14031
  %add2846 = add nsw i32 %mul2845, %1345, !dbg !14032
  %idxprom2847 = sext i32 %add2846 to i64, !dbg !14033
  %arrayidx2848 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2847, !dbg !14033
  %1346 = load float, float* %arrayidx2848, align 4, !dbg !14033
  %1347 = load i32, i32* %w, align 4, !dbg !14034
  %mul2849 = mul nsw i32 %1347, 16, !dbg !14035
  %1348 = load i32, i32* %g, align 4, !dbg !14036
  %add2850 = add nsw i32 %mul2849, %1348, !dbg !14037
  %idxprom2851 = sext i32 %add2850 to i64, !dbg !14038
  %arrayidx2852 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2851, !dbg !14038
  %1349 = load float, float* %arrayidx2852, align 4, !dbg !14038
  %cmp2853 = fcmp oge float %1346, %1349, !dbg !14039
  br i1 %cmp2853, label %if.then2855, label %if.end2884, !dbg !14040

if.then2855:                                      ; preds = %land.lhs.true2844
  %1350 = load i32, i32* %w, align 4, !dbg !14041
  %mul2856 = mul nsw i32 %1350, 16, !dbg !14042
  %1351 = load i32, i32* %g, align 4, !dbg !14043
  %add2857 = add nsw i32 %mul2856, %1351, !dbg !14044
  %idxprom2858 = sext i32 %add2857 to i64, !dbg !14045
  %1352 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14045
  %sf_idx2859 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1352, i32 0, i32 7, !dbg !14046
  %arrayidx2860 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2859, i64 0, i64 %idxprom2858, !dbg !14045
  %1353 = load i32, i32* %arrayidx2860, align 4, !dbg !14045
  %1354 = load i32, i32* %w, align 4, !dbg !14047
  %mul2861 = mul nsw i32 %1354, 16, !dbg !14048
  %1355 = load i32, i32* %g, align 4, !dbg !14049
  %add2862 = add nsw i32 %mul2861, %1355, !dbg !14050
  %idxprom2863 = sext i32 %add2862 to i64, !dbg !14051
  %arrayidx2864 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom2863, !dbg !14051
  %1356 = load i32, i32* %arrayidx2864, align 4, !dbg !14051
  %cmp2865 = icmp sgt i32 %1353, %1356, !dbg !14052
  br i1 %cmp2865, label %cond.true2867, label %cond.false2872, !dbg !14053

cond.true2867:                                    ; preds = %if.then2855
  %1357 = load i32, i32* %w, align 4, !dbg !14054
  %mul2868 = mul nsw i32 %1357, 16, !dbg !14055
  %1358 = load i32, i32* %g, align 4, !dbg !14056
  %add2869 = add nsw i32 %mul2868, %1358, !dbg !14057
  %idxprom2870 = sext i32 %add2869 to i64, !dbg !14058
  %arrayidx2871 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom2870, !dbg !14058
  %1359 = load i32, i32* %arrayidx2871, align 4, !dbg !14058
  br label %cond.end2878, !dbg !14059

cond.false2872:                                   ; preds = %if.then2855
  %1360 = load i32, i32* %w, align 4, !dbg !14060
  %mul2873 = mul nsw i32 %1360, 16, !dbg !14061
  %1361 = load i32, i32* %g, align 4, !dbg !14062
  %add2874 = add nsw i32 %mul2873, %1361, !dbg !14063
  %idxprom2875 = sext i32 %add2874 to i64, !dbg !14064
  %1362 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14064
  %sf_idx2876 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1362, i32 0, i32 7, !dbg !14065
  %arrayidx2877 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2876, i64 0, i64 %idxprom2875, !dbg !14064
  %1363 = load i32, i32* %arrayidx2877, align 4, !dbg !14064
  br label %cond.end2878, !dbg !14066

cond.end2878:                                     ; preds = %cond.false2872, %cond.true2867
  %cond2879 = phi i32 [ %1359, %cond.true2867 ], [ %1363, %cond.false2872 ], !dbg !14067
  %1364 = load i32, i32* %w, align 4, !dbg !14069
  %mul2880 = mul nsw i32 %1364, 16, !dbg !14070
  %1365 = load i32, i32* %g, align 4, !dbg !14071
  %add2881 = add nsw i32 %mul2880, %1365, !dbg !14072
  %idxprom2882 = sext i32 %add2881 to i64, !dbg !14073
  %arrayidx2883 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom2882, !dbg !14073
  store i32 %cond2879, i32* %arrayidx2883, align 4, !dbg !14074
  br label %if.end2884, !dbg !14073

if.end2884:                                       ; preds = %cond.end2878, %land.lhs.true2844, %land.lhs.true2839, %if.end2837
  store i32 0, i32* %w2, align 4, !dbg !14075
  br label %for.cond2885, !dbg !14077

for.cond2885:                                     ; preds = %for.inc2918, %if.end2884
  %1366 = load i32, i32* %w2, align 4, !dbg !14078
  %1367 = load i32, i32* %w, align 4, !dbg !14081
  %idxprom2886 = sext i32 %1367 to i64, !dbg !14082
  %1368 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14082
  %ics2887 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1368, i32 0, i32 0, !dbg !14083
  %group_len2888 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2887, i32 0, i32 4, !dbg !14084
  %arrayidx2889 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len2888, i64 0, i64 %idxprom2886, !dbg !14082
  %1369 = load i8, i8* %arrayidx2889, align 1, !dbg !14082
  %conv2890 = zext i8 %1369 to i32, !dbg !14082
  %cmp2891 = icmp slt i32 %1366, %conv2890, !dbg !14085
  br i1 %cmp2891, label %for.body2893, label %for.end2920, !dbg !14086

for.body2893:                                     ; preds = %for.cond2885
  call void @llvm.dbg.declare(metadata i32* %b2894, metadata !14087, metadata !2772), !dbg !14089
  call void @llvm.dbg.declare(metadata float* %sqenergy2895, metadata !14090, metadata !2772), !dbg !14091
  %1370 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !14092
  %1371 = load i32, i32* %w, align 4, !dbg !14093
  %1372 = load i32, i32* %w2, align 4, !dbg !14094
  %add2896 = add nsw i32 %1371, %1372, !dbg !14095
  %1373 = load i32, i32* %g, align 4, !dbg !14096
  %1374 = load float*, float** %coefs2680, align 8, !dbg !14097
  %1375 = load i32, i32* %w2, align 4, !dbg !14098
  %mul2897 = mul nsw i32 %1375, 128, !dbg !14099
  %idx.ext2898 = sext i32 %mul2897 to i64, !dbg !14100
  %add.ptr2899 = getelementptr inbounds float, float* %1374, i64 %idx.ext2898, !dbg !14100
  %1376 = load float*, float** %scaled2685, align 8, !dbg !14101
  %1377 = load i32, i32* %w2, align 4, !dbg !14102
  %mul2900 = mul nsw i32 %1377, 128, !dbg !14103
  %idx.ext2901 = sext i32 %mul2900 to i64, !dbg !14104
  %add.ptr2902 = getelementptr inbounds float, float* %1376, i64 %idx.ext2901, !dbg !14104
  %1378 = load i32, i32* %g, align 4, !dbg !14105
  %idxprom2903 = sext i32 %1378 to i64, !dbg !14106
  %1379 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14106
  %ics2904 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1379, i32 0, i32 0, !dbg !14107
  %swb_sizes2905 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2904, i32 0, i32 7, !dbg !14108
  %1380 = load i8*, i8** %swb_sizes2905, align 8, !dbg !14108
  %arrayidx2906 = getelementptr inbounds i8, i8* %1380, i64 %idxprom2903, !dbg !14106
  %1381 = load i8, i8* %arrayidx2906, align 1, !dbg !14106
  %conv2907 = zext i8 %1381 to i32, !dbg !14106
  %1382 = load i32, i32* %w, align 4, !dbg !14109
  %mul2908 = mul nsw i32 %1382, 16, !dbg !14110
  %1383 = load i32, i32* %g, align 4, !dbg !14111
  %add2909 = add nsw i32 %mul2908, %1383, !dbg !14112
  %idxprom2910 = sext i32 %add2909 to i64, !dbg !14113
  %1384 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14113
  %sf_idx2911 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1384, i32 0, i32 7, !dbg !14114
  %arrayidx2912 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2911, i64 0, i64 %idxprom2910, !dbg !14113
  %1385 = load i32, i32* %arrayidx2912, align 4, !dbg !14113
  %sub2913 = sub nsw i32 %1385, 1, !dbg !14115
  %1386 = load i32, i32* %cb2764, align 4, !dbg !14116
  %call2914 = call float @quantize_band_cost_cached(%struct.AACEncContext* %1370, i32 %add2896, i32 %1373, float* %add.ptr2899, float* %add.ptr2902, i32 %conv2907, i32 %sub2913, i32 %1386, float 1.000000e+00, float 0x7FF0000000000000, i32* %b2894, float* %sqenergy2895, i32 0), !dbg !14117
  %1387 = load float, float* %dist2766, align 4, !dbg !14118
  %add2915 = fadd float %1387, %call2914, !dbg !14118
  store float %add2915, float* %dist2766, align 4, !dbg !14118
  %1388 = load i32, i32* %b2894, align 4, !dbg !14119
  %1389 = load i32, i32* %bits2765, align 4, !dbg !14120
  %add2916 = add nsw i32 %1389, %1388, !dbg !14120
  store i32 %add2916, i32* %bits2765, align 4, !dbg !14120
  %1390 = load float, float* %sqenergy2895, align 4, !dbg !14121
  %1391 = load float, float* %qenergy2767, align 4, !dbg !14122
  %add2917 = fadd float %1391, %1390, !dbg !14122
  store float %add2917, float* %qenergy2767, align 4, !dbg !14122
  br label %for.inc2918, !dbg !14123

for.inc2918:                                      ; preds = %for.body2893
  %1392 = load i32, i32* %w2, align 4, !dbg !14124
  %inc2919 = add nsw i32 %1392, 1, !dbg !14124
  store i32 %inc2919, i32* %w2, align 4, !dbg !14124
  br label %for.cond2885, !dbg !14126, !llvm.loop !14127

for.end2920:                                      ; preds = %for.cond2885
  %1393 = load i32, i32* %w, align 4, !dbg !14129
  %mul2921 = mul nsw i32 %1393, 16, !dbg !14130
  %1394 = load i32, i32* %g, align 4, !dbg !14131
  %add2922 = add nsw i32 %mul2921, %1394, !dbg !14132
  %idxprom2923 = sext i32 %add2922 to i64, !dbg !14133
  %1395 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14133
  %sf_idx2924 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1395, i32 0, i32 7, !dbg !14134
  %arrayidx2925 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2924, i64 0, i64 %idxprom2923, !dbg !14133
  %1396 = load i32, i32* %arrayidx2925, align 4, !dbg !14135
  %dec2926 = add nsw i32 %1396, -1, !dbg !14135
  store i32 %dec2926, i32* %arrayidx2925, align 4, !dbg !14135
  %1397 = load float, float* %dist2766, align 4, !dbg !14136
  %1398 = load i32, i32* %bits2765, align 4, !dbg !14137
  %conv2927 = sitofp i32 %1398 to float, !dbg !14137
  %sub2928 = fsub float %1397, %conv2927, !dbg !14138
  %1399 = load i32, i32* %w, align 4, !dbg !14139
  %mul2929 = mul nsw i32 %1399, 16, !dbg !14140
  %1400 = load i32, i32* %g, align 4, !dbg !14141
  %add2930 = add nsw i32 %mul2929, %1400, !dbg !14142
  %idxprom2931 = sext i32 %add2930 to i64, !dbg !14143
  %arrayidx2932 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2931, !dbg !14143
  store float %sub2928, float* %arrayidx2932, align 4, !dbg !14144
  %1401 = load float, float* %qenergy2767, align 4, !dbg !14145
  %1402 = load i32, i32* %w, align 4, !dbg !14146
  %mul2933 = mul nsw i32 %1402, 16, !dbg !14147
  %1403 = load i32, i32* %g, align 4, !dbg !14148
  %add2934 = add nsw i32 %mul2933, %1403, !dbg !14149
  %idxprom2935 = sext i32 %add2934 to i64, !dbg !14150
  %arrayidx2936 = getelementptr inbounds [128 x float], [128 x float]* %qenergies, i64 0, i64 %idxprom2935, !dbg !14150
  store float %1401, float* %arrayidx2936, align 4, !dbg !14151
  %1404 = load i32, i32* %mb, align 4, !dbg !14152
  %tobool2937 = icmp ne i32 %1404, 0, !dbg !14152
  br i1 %tobool2937, label %land.lhs.true2938, label %if.end2995, !dbg !14154

land.lhs.true2938:                                ; preds = %for.end2920
  %1405 = load i32, i32* %w, align 4, !dbg !14155
  %mul2939 = mul nsw i32 %1405, 16, !dbg !14157
  %1406 = load i32, i32* %g, align 4, !dbg !14158
  %add2940 = add nsw i32 %mul2939, %1406, !dbg !14159
  %idxprom2941 = sext i32 %add2940 to i64, !dbg !14160
  %1407 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14160
  %sf_idx2942 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1407, i32 0, i32 7, !dbg !14161
  %arrayidx2943 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx2942, i64 0, i64 %idxprom2941, !dbg !14160
  %1408 = load i32, i32* %arrayidx2943, align 4, !dbg !14160
  %1409 = load i32, i32* %mindeltasf, align 4, !dbg !14162
  %cmp2944 = icmp slt i32 %1408, %1409, !dbg !14163
  br i1 %cmp2944, label %if.then2994, label %lor.lhs.false2946, !dbg !14164

lor.lhs.false2946:                                ; preds = %land.lhs.true2938
  %1410 = load i32, i32* %w, align 4, !dbg !14165
  %mul2947 = mul nsw i32 %1410, 16, !dbg !14166
  %1411 = load i32, i32* %g, align 4, !dbg !14167
  %add2948 = add nsw i32 %mul2947, %1411, !dbg !14168
  %idxprom2949 = sext i32 %add2948 to i64, !dbg !14169
  %arrayidx2950 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom2949, !dbg !14169
  %1412 = load float, float* %arrayidx2950, align 4, !dbg !14169
  %1413 = load float, float* %uplmax, align 4, !dbg !14170
  %1414 = load i32, i32* %w, align 4, !dbg !14171
  %mul2951 = mul nsw i32 %1414, 16, !dbg !14172
  %1415 = load i32, i32* %g, align 4, !dbg !14173
  %add2952 = add nsw i32 %mul2951, %1415, !dbg !14174
  %idxprom2953 = sext i32 %add2952 to i64, !dbg !14175
  %arrayidx2954 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2953, !dbg !14175
  %1416 = load float, float* %arrayidx2954, align 4, !dbg !14175
  %mul2955 = fmul float %1413, %1416, !dbg !14176
  %1417 = load i32, i32* %w, align 4, !dbg !14177
  %mul2956 = mul nsw i32 %1417, 16, !dbg !14178
  %1418 = load i32, i32* %g, align 4, !dbg !14179
  %add2957 = add nsw i32 %mul2956, %1418, !dbg !14180
  %idxprom2958 = sext i32 %add2957 to i64, !dbg !14181
  %arrayidx2959 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2958, !dbg !14181
  %1419 = load float, float* %arrayidx2959, align 4, !dbg !14181
  %cmp2960 = fcmp ogt float %mul2955, %1419, !dbg !14182
  br i1 %cmp2960, label %cond.true2962, label %cond.false2967, !dbg !14183

cond.true2962:                                    ; preds = %lor.lhs.false2946
  %1420 = load i32, i32* %w, align 4, !dbg !14184
  %mul2963 = mul nsw i32 %1420, 16, !dbg !14185
  %1421 = load i32, i32* %g, align 4, !dbg !14186
  %add2964 = add nsw i32 %mul2963, %1421, !dbg !14187
  %idxprom2965 = sext i32 %add2964 to i64, !dbg !14188
  %arrayidx2966 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2965, !dbg !14188
  %1422 = load float, float* %arrayidx2966, align 4, !dbg !14188
  br label %cond.end2973, !dbg !14189

cond.false2967:                                   ; preds = %lor.lhs.false2946
  %1423 = load float, float* %uplmax, align 4, !dbg !14190
  %1424 = load i32, i32* %w, align 4, !dbg !14192
  %mul2968 = mul nsw i32 %1424, 16, !dbg !14193
  %1425 = load i32, i32* %g, align 4, !dbg !14194
  %add2969 = add nsw i32 %mul2968, %1425, !dbg !14195
  %idxprom2970 = sext i32 %add2969 to i64, !dbg !14196
  %arrayidx2971 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom2970, !dbg !14196
  %1426 = load float, float* %arrayidx2971, align 4, !dbg !14196
  %mul2972 = fmul float %1423, %1426, !dbg !14197
  br label %cond.end2973, !dbg !14198

cond.end2973:                                     ; preds = %cond.false2967, %cond.true2962
  %cond2974 = phi float [ %1422, %cond.true2962 ], [ %mul2972, %cond.false2967 ], !dbg !14199
  %cmp2975 = fcmp olt float %1412, %cond2974, !dbg !14201
  br i1 %cmp2975, label %land.lhs.true2977, label %if.end2995, !dbg !14202

land.lhs.true2977:                                ; preds = %cond.end2973
  %1427 = load i32, i32* %w, align 4, !dbg !14203
  %mul2978 = mul nsw i32 %1427, 16, !dbg !14204
  %1428 = load i32, i32* %g, align 4, !dbg !14205
  %add2979 = add nsw i32 %mul2978, %1428, !dbg !14206
  %idxprom2980 = sext i32 %add2979 to i64, !dbg !14207
  %arrayidx2981 = getelementptr inbounds [128 x float], [128 x float]* %qenergies, i64 0, i64 %idxprom2980, !dbg !14207
  %1429 = load float, float* %arrayidx2981, align 4, !dbg !14207
  %1430 = load i32, i32* %w, align 4, !dbg !14208
  %mul2982 = mul nsw i32 %1430, 16, !dbg !14209
  %1431 = load i32, i32* %g, align 4, !dbg !14210
  %add2983 = add nsw i32 %mul2982, %1431, !dbg !14211
  %idxprom2984 = sext i32 %add2983 to i64, !dbg !14212
  %arrayidx2985 = getelementptr inbounds [128 x float], [128 x float]* %energies, i64 0, i64 %idxprom2984, !dbg !14212
  %1432 = load float, float* %arrayidx2985, align 4, !dbg !14212
  %sub2986 = fsub float %1429, %1432, !dbg !14213
  %call2987 = call float @fabsf(float %sub2986) #3, !dbg !14214
  %1433 = load i32, i32* %w, align 4, !dbg !14215
  %mul2988 = mul nsw i32 %1433, 16, !dbg !14216
  %1434 = load i32, i32* %g, align 4, !dbg !14217
  %add2989 = add nsw i32 %mul2988, %1434, !dbg !14218
  %idxprom2990 = sext i32 %add2989 to i64, !dbg !14219
  %arrayidx2991 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom2990, !dbg !14219
  %1435 = load float, float* %arrayidx2991, align 4, !dbg !14219
  %cmp2992 = fcmp olt float %call2987, %1435, !dbg !14220
  br i1 %cmp2992, label %if.then2994, label %if.end2995, !dbg !14221

if.then2994:                                      ; preds = %land.lhs.true2977, %land.lhs.true2938
  br label %for.end2998, !dbg !14223

if.end2995:                                       ; preds = %land.lhs.true2977, %cond.end2973, %for.end2920
  br label %for.inc2996, !dbg !14225

for.inc2996:                                      ; preds = %if.end2995
  %1436 = load i32, i32* %i, align 4, !dbg !14226
  %inc2997 = add nsw i32 %1436, 1, !dbg !14226
  store i32 %inc2997, i32* %i, align 4, !dbg !14226
  br label %for.cond2751, !dbg !14228, !llvm.loop !14229

for.end2998:                                      ; preds = %if.then2994, %if.then2835, %land.end2762
  br label %if.end3215, !dbg !14231

if.else2999:                                      ; preds = %cond.end2746, %lor.lhs.false2717
  %1437 = load i32, i32* %tbits, align 4, !dbg !14232
  %1438 = load i32, i32* %toofewbits, align 4, !dbg !14235
  %cmp3000 = icmp sgt i32 %1437, %1438, !dbg !14236
  br i1 %cmp3000, label %land.lhs.true3002, label %if.end3214, !dbg !14237

land.lhs.true3002:                                ; preds = %if.else2999
  %1439 = load i32, i32* %w, align 4, !dbg !14238
  %mul3003 = mul nsw i32 %1439, 16, !dbg !14240
  %1440 = load i32, i32* %g, align 4, !dbg !14241
  %add3004 = add nsw i32 %mul3003, %1440, !dbg !14242
  %idxprom3005 = sext i32 %add3004 to i64, !dbg !14243
  %1441 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14243
  %sf_idx3006 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1441, i32 0, i32 7, !dbg !14244
  %arrayidx3007 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3006, i64 0, i64 %idxprom3005, !dbg !14243
  %1442 = load i32, i32* %arrayidx3007, align 4, !dbg !14243
  %1443 = load i32, i32* %maxdeltasf, align 4, !dbg !14245
  %1444 = load i32, i32* %w, align 4, !dbg !14246
  %mul3008 = mul nsw i32 %1444, 16, !dbg !14247
  %1445 = load i32, i32* %g, align 4, !dbg !14248
  %add3009 = add nsw i32 %mul3008, %1445, !dbg !14249
  %idxprom3010 = sext i32 %add3009 to i64, !dbg !14250
  %arrayidx3011 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom3010, !dbg !14250
  %1446 = load i32, i32* %arrayidx3011, align 4, !dbg !14250
  %cmp3012 = icmp sgt i32 %1443, %1446, !dbg !14251
  br i1 %cmp3012, label %cond.true3014, label %cond.false3019, !dbg !14252

cond.true3014:                                    ; preds = %land.lhs.true3002
  %1447 = load i32, i32* %w, align 4, !dbg !14253
  %mul3015 = mul nsw i32 %1447, 16, !dbg !14255
  %1448 = load i32, i32* %g, align 4, !dbg !14256
  %add3016 = add nsw i32 %mul3015, %1448, !dbg !14257
  %idxprom3017 = sext i32 %add3016 to i64, !dbg !14258
  %arrayidx3018 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom3017, !dbg !14258
  %1449 = load i32, i32* %arrayidx3018, align 4, !dbg !14258
  br label %cond.end3020, !dbg !14259

cond.false3019:                                   ; preds = %land.lhs.true3002
  %1450 = load i32, i32* %maxdeltasf, align 4, !dbg !14260
  br label %cond.end3020, !dbg !14262

cond.end3020:                                     ; preds = %cond.false3019, %cond.true3014
  %cond3021 = phi i32 [ %1449, %cond.true3014 ], [ %1450, %cond.false3019 ], !dbg !14263
  %cmp3022 = icmp slt i32 %1442, %cond3021, !dbg !14265
  br i1 %cmp3022, label %land.lhs.true3024, label %if.end3214, !dbg !14266

land.lhs.true3024:                                ; preds = %cond.end3020
  %1451 = load i32, i32* %w, align 4, !dbg !14267
  %mul3025 = mul nsw i32 %1451, 16, !dbg !14268
  %1452 = load i32, i32* %g, align 4, !dbg !14269
  %add3026 = add nsw i32 %mul3025, %1452, !dbg !14270
  %idxprom3027 = sext i32 %add3026 to i64, !dbg !14271
  %arrayidx3028 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom3027, !dbg !14271
  %1453 = load float, float* %arrayidx3028, align 4, !dbg !14271
  %1454 = load i32, i32* %w, align 4, !dbg !14272
  %mul3029 = mul nsw i32 %1454, 16, !dbg !14273
  %1455 = load i32, i32* %g, align 4, !dbg !14274
  %add3030 = add nsw i32 %mul3029, %1455, !dbg !14275
  %idxprom3031 = sext i32 %add3030 to i64, !dbg !14276
  %arrayidx3032 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom3031, !dbg !14276
  %1456 = load float, float* %arrayidx3032, align 4, !dbg !14276
  %1457 = load i32, i32* %w, align 4, !dbg !14277
  %mul3033 = mul nsw i32 %1457, 16, !dbg !14278
  %1458 = load i32, i32* %g, align 4, !dbg !14279
  %add3034 = add nsw i32 %mul3033, %1458, !dbg !14280
  %idxprom3035 = sext i32 %add3034 to i64, !dbg !14281
  %arrayidx3036 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom3035, !dbg !14281
  %1459 = load float, float* %arrayidx3036, align 4, !dbg !14281
  %cmp3037 = fcmp ogt float %1456, %1459, !dbg !14282
  br i1 %cmp3037, label %cond.true3039, label %cond.false3044, !dbg !14283

cond.true3039:                                    ; preds = %land.lhs.true3024
  %1460 = load i32, i32* %w, align 4, !dbg !14284
  %mul3040 = mul nsw i32 %1460, 16, !dbg !14285
  %1461 = load i32, i32* %g, align 4, !dbg !14286
  %add3041 = add nsw i32 %mul3040, %1461, !dbg !14287
  %idxprom3042 = sext i32 %add3041 to i64, !dbg !14288
  %arrayidx3043 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom3042, !dbg !14288
  %1462 = load float, float* %arrayidx3043, align 4, !dbg !14288
  br label %cond.end3049, !dbg !14289

cond.false3044:                                   ; preds = %land.lhs.true3024
  %1463 = load i32, i32* %w, align 4, !dbg !14290
  %mul3045 = mul nsw i32 %1463, 16, !dbg !14291
  %1464 = load i32, i32* %g, align 4, !dbg !14292
  %add3046 = add nsw i32 %mul3045, %1464, !dbg !14293
  %idxprom3047 = sext i32 %add3046 to i64, !dbg !14294
  %arrayidx3048 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom3047, !dbg !14294
  %1465 = load float, float* %arrayidx3048, align 4, !dbg !14294
  br label %cond.end3049, !dbg !14295

cond.end3049:                                     ; preds = %cond.false3044, %cond.true3039
  %cond3050 = phi float [ %1462, %cond.true3039 ], [ %1465, %cond.false3044 ], !dbg !14296
  %cmp3051 = fcmp olt float %1453, %cond3050, !dbg !14297
  br i1 %cmp3051, label %land.lhs.true3053, label %if.end3214, !dbg !14298

land.lhs.true3053:                                ; preds = %cond.end3049
  %1466 = load i32, i32* %w, align 4, !dbg !14299
  %mul3054 = mul nsw i32 %1466, 16, !dbg !14300
  %1467 = load i32, i32* %g, align 4, !dbg !14301
  %add3055 = add nsw i32 %mul3054, %1467, !dbg !14302
  %idxprom3056 = sext i32 %add3055 to i64, !dbg !14303
  %arrayidx3057 = getelementptr inbounds [128 x float], [128 x float]* %qenergies, i64 0, i64 %idxprom3056, !dbg !14303
  %1468 = load float, float* %arrayidx3057, align 4, !dbg !14303
  %1469 = load i32, i32* %w, align 4, !dbg !14304
  %mul3058 = mul nsw i32 %1469, 16, !dbg !14305
  %1470 = load i32, i32* %g, align 4, !dbg !14306
  %add3059 = add nsw i32 %mul3058, %1470, !dbg !14307
  %idxprom3060 = sext i32 %add3059 to i64, !dbg !14308
  %arrayidx3061 = getelementptr inbounds [128 x float], [128 x float]* %energies, i64 0, i64 %idxprom3060, !dbg !14308
  %1471 = load float, float* %arrayidx3061, align 4, !dbg !14308
  %sub3062 = fsub float %1468, %1471, !dbg !14309
  %call3063 = call float @fabsf(float %sub3062) #3, !dbg !14310
  %1472 = load i32, i32* %w, align 4, !dbg !14311
  %mul3064 = mul nsw i32 %1472, 16, !dbg !14312
  %1473 = load i32, i32* %g, align 4, !dbg !14313
  %add3065 = add nsw i32 %mul3064, %1473, !dbg !14314
  %idxprom3066 = sext i32 %add3065 to i64, !dbg !14315
  %arrayidx3067 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom3066, !dbg !14315
  %1474 = load float, float* %arrayidx3067, align 4, !dbg !14315
  %cmp3068 = fcmp olt float %call3063, %1474, !dbg !14316
  br i1 %cmp3068, label %if.then3070, label %if.end3214, !dbg !14317

if.then3070:                                      ; preds = %land.lhs.true3053
  store i32 0, i32* %i, align 4, !dbg !14319
  br label %for.cond3071, !dbg !14322

for.cond3071:                                     ; preds = %for.inc3211, %if.then3070
  %1475 = load i32, i32* %i, align 4, !dbg !14323
  %1476 = load i32, i32* %depth, align 4, !dbg !14326
  %cmp3072 = icmp slt i32 %1475, %1476, !dbg !14327
  br i1 %cmp3072, label %land.rhs3074, label %land.end3082, !dbg !14328

land.rhs3074:                                     ; preds = %for.cond3071
  %1477 = load i32, i32* %w, align 4, !dbg !14329
  %mul3075 = mul nsw i32 %1477, 16, !dbg !14331
  %1478 = load i32, i32* %g, align 4, !dbg !14332
  %add3076 = add nsw i32 %mul3075, %1478, !dbg !14333
  %idxprom3077 = sext i32 %add3076 to i64, !dbg !14334
  %1479 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14334
  %sf_idx3078 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1479, i32 0, i32 7, !dbg !14335
  %arrayidx3079 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3078, i64 0, i64 %idxprom3077, !dbg !14334
  %1480 = load i32, i32* %arrayidx3079, align 4, !dbg !14334
  %1481 = load i32, i32* %maxdeltasf, align 4, !dbg !14336
  %cmp3080 = icmp slt i32 %1480, %1481, !dbg !14337
  br label %land.end3082

land.end3082:                                     ; preds = %land.rhs3074, %for.cond3071
  %1482 = phi i1 [ false, %for.cond3071 ], [ %cmp3080, %land.rhs3074 ]
  br i1 %1482, label %for.body3083, label %for.end3213, !dbg !14338

for.body3083:                                     ; preds = %land.end3082
  call void @llvm.dbg.declare(metadata i32* %cb3084, metadata !14340, metadata !2772), !dbg !14342
  call void @llvm.dbg.declare(metadata i32* %bits3085, metadata !14343, metadata !2772), !dbg !14344
  call void @llvm.dbg.declare(metadata float* %dist3086, metadata !14345, metadata !2772), !dbg !14346
  call void @llvm.dbg.declare(metadata float* %qenergy3087, metadata !14347, metadata !2772), !dbg !14348
  %1483 = load i32, i32* %w, align 4, !dbg !14349
  %mul3088 = mul nsw i32 %1483, 16, !dbg !14350
  %1484 = load i32, i32* %g, align 4, !dbg !14351
  %add3089 = add nsw i32 %mul3088, %1484, !dbg !14352
  %idxprom3090 = sext i32 %add3089 to i64, !dbg !14353
  %arrayidx3091 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom3090, !dbg !14353
  %1485 = load float, float* %arrayidx3091, align 4, !dbg !14353
  %1486 = load i32, i32* %w, align 4, !dbg !14354
  %mul3092 = mul nsw i32 %1486, 16, !dbg !14355
  %1487 = load i32, i32* %g, align 4, !dbg !14356
  %add3093 = add nsw i32 %mul3092, %1487, !dbg !14357
  %idxprom3094 = sext i32 %add3093 to i64, !dbg !14358
  %1488 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14358
  %sf_idx3095 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1488, i32 0, i32 7, !dbg !14359
  %arrayidx3096 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3095, i64 0, i64 %idxprom3094, !dbg !14358
  %1489 = load i32, i32* %arrayidx3096, align 4, !dbg !14358
  %add3097 = add nsw i32 %1489, 1, !dbg !14360
  %call3098 = call i32 @find_min_book(float %1485, i32 %add3097), !dbg !14361
  store i32 %call3098, i32* %cb3084, align 4, !dbg !14362
  %1490 = load i32, i32* %cb3084, align 4, !dbg !14363
  %cmp3099 = icmp sgt i32 %1490, 0, !dbg !14365
  br i1 %cmp3099, label %if.then3101, label %if.else3181, !dbg !14366

if.then3101:                                      ; preds = %for.body3083
  store float 0.000000e+00, float* %qenergy3087, align 4, !dbg !14367
  store float 0.000000e+00, float* %dist3086, align 4, !dbg !14369
  store i32 0, i32* %bits3085, align 4, !dbg !14370
  store i32 0, i32* %w2, align 4, !dbg !14371
  br label %for.cond3102, !dbg !14373

for.cond3102:                                     ; preds = %for.inc3135, %if.then3101
  %1491 = load i32, i32* %w2, align 4, !dbg !14374
  %1492 = load i32, i32* %w, align 4, !dbg !14377
  %idxprom3103 = sext i32 %1492 to i64, !dbg !14378
  %1493 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14378
  %ics3104 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1493, i32 0, i32 0, !dbg !14379
  %group_len3105 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3104, i32 0, i32 4, !dbg !14380
  %arrayidx3106 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len3105, i64 0, i64 %idxprom3103, !dbg !14378
  %1494 = load i8, i8* %arrayidx3106, align 1, !dbg !14378
  %conv3107 = zext i8 %1494 to i32, !dbg !14378
  %cmp3108 = icmp slt i32 %1491, %conv3107, !dbg !14381
  br i1 %cmp3108, label %for.body3110, label %for.end3137, !dbg !14382

for.body3110:                                     ; preds = %for.cond3102
  call void @llvm.dbg.declare(metadata i32* %b3111, metadata !14383, metadata !2772), !dbg !14385
  call void @llvm.dbg.declare(metadata float* %sqenergy3112, metadata !14386, metadata !2772), !dbg !14387
  %1495 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !14388
  %1496 = load i32, i32* %w, align 4, !dbg !14389
  %1497 = load i32, i32* %w2, align 4, !dbg !14390
  %add3113 = add nsw i32 %1496, %1497, !dbg !14391
  %1498 = load i32, i32* %g, align 4, !dbg !14392
  %1499 = load float*, float** %coefs2680, align 8, !dbg !14393
  %1500 = load i32, i32* %w2, align 4, !dbg !14394
  %mul3114 = mul nsw i32 %1500, 128, !dbg !14395
  %idx.ext3115 = sext i32 %mul3114 to i64, !dbg !14396
  %add.ptr3116 = getelementptr inbounds float, float* %1499, i64 %idx.ext3115, !dbg !14396
  %1501 = load float*, float** %scaled2685, align 8, !dbg !14397
  %1502 = load i32, i32* %w2, align 4, !dbg !14398
  %mul3117 = mul nsw i32 %1502, 128, !dbg !14399
  %idx.ext3118 = sext i32 %mul3117 to i64, !dbg !14400
  %add.ptr3119 = getelementptr inbounds float, float* %1501, i64 %idx.ext3118, !dbg !14400
  %1503 = load i32, i32* %g, align 4, !dbg !14401
  %idxprom3120 = sext i32 %1503 to i64, !dbg !14402
  %1504 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14402
  %ics3121 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1504, i32 0, i32 0, !dbg !14403
  %swb_sizes3122 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3121, i32 0, i32 7, !dbg !14404
  %1505 = load i8*, i8** %swb_sizes3122, align 8, !dbg !14404
  %arrayidx3123 = getelementptr inbounds i8, i8* %1505, i64 %idxprom3120, !dbg !14402
  %1506 = load i8, i8* %arrayidx3123, align 1, !dbg !14402
  %conv3124 = zext i8 %1506 to i32, !dbg !14402
  %1507 = load i32, i32* %w, align 4, !dbg !14405
  %mul3125 = mul nsw i32 %1507, 16, !dbg !14406
  %1508 = load i32, i32* %g, align 4, !dbg !14407
  %add3126 = add nsw i32 %mul3125, %1508, !dbg !14408
  %idxprom3127 = sext i32 %add3126 to i64, !dbg !14409
  %1509 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14409
  %sf_idx3128 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1509, i32 0, i32 7, !dbg !14410
  %arrayidx3129 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3128, i64 0, i64 %idxprom3127, !dbg !14409
  %1510 = load i32, i32* %arrayidx3129, align 4, !dbg !14409
  %add3130 = add nsw i32 %1510, 1, !dbg !14411
  %1511 = load i32, i32* %cb3084, align 4, !dbg !14412
  %call3131 = call float @quantize_band_cost_cached(%struct.AACEncContext* %1495, i32 %add3113, i32 %1498, float* %add.ptr3116, float* %add.ptr3119, i32 %conv3124, i32 %add3130, i32 %1511, float 1.000000e+00, float 0x7FF0000000000000, i32* %b3111, float* %sqenergy3112, i32 0), !dbg !14413
  %1512 = load float, float* %dist3086, align 4, !dbg !14414
  %add3132 = fadd float %1512, %call3131, !dbg !14414
  store float %add3132, float* %dist3086, align 4, !dbg !14414
  %1513 = load i32, i32* %b3111, align 4, !dbg !14415
  %1514 = load i32, i32* %bits3085, align 4, !dbg !14416
  %add3133 = add nsw i32 %1514, %1513, !dbg !14416
  store i32 %add3133, i32* %bits3085, align 4, !dbg !14416
  %1515 = load float, float* %sqenergy3112, align 4, !dbg !14417
  %1516 = load float, float* %qenergy3087, align 4, !dbg !14418
  %add3134 = fadd float %1516, %1515, !dbg !14418
  store float %add3134, float* %qenergy3087, align 4, !dbg !14418
  br label %for.inc3135, !dbg !14419

for.inc3135:                                      ; preds = %for.body3110
  %1517 = load i32, i32* %w2, align 4, !dbg !14420
  %inc3136 = add nsw i32 %1517, 1, !dbg !14420
  store i32 %inc3136, i32* %w2, align 4, !dbg !14420
  br label %for.cond3102, !dbg !14422, !llvm.loop !14423

for.end3137:                                      ; preds = %for.cond3102
  %1518 = load i32, i32* %bits3085, align 4, !dbg !14425
  %conv3138 = sitofp i32 %1518 to float, !dbg !14425
  %1519 = load float, float* %dist3086, align 4, !dbg !14426
  %sub3139 = fsub float %1519, %conv3138, !dbg !14426
  store float %sub3139, float* %dist3086, align 4, !dbg !14426
  %1520 = load float, float* %dist3086, align 4, !dbg !14427
  %1521 = load i32, i32* %w, align 4, !dbg !14429
  %mul3140 = mul nsw i32 %1521, 16, !dbg !14430
  %1522 = load i32, i32* %g, align 4, !dbg !14431
  %add3141 = add nsw i32 %mul3140, %1522, !dbg !14432
  %idxprom3142 = sext i32 %add3141 to i64, !dbg !14433
  %arrayidx3143 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom3142, !dbg !14433
  %1523 = load float, float* %arrayidx3143, align 4, !dbg !14433
  %1524 = load i32, i32* %w, align 4, !dbg !14434
  %mul3144 = mul nsw i32 %1524, 16, !dbg !14435
  %1525 = load i32, i32* %g, align 4, !dbg !14436
  %add3145 = add nsw i32 %mul3144, %1525, !dbg !14437
  %idxprom3146 = sext i32 %add3145 to i64, !dbg !14438
  %arrayidx3147 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom3146, !dbg !14438
  %1526 = load float, float* %arrayidx3147, align 4, !dbg !14438
  %cmp3148 = fcmp ogt float %1523, %1526, !dbg !14439
  br i1 %cmp3148, label %cond.true3150, label %cond.false3155, !dbg !14440

cond.true3150:                                    ; preds = %for.end3137
  %1527 = load i32, i32* %w, align 4, !dbg !14441
  %mul3151 = mul nsw i32 %1527, 16, !dbg !14443
  %1528 = load i32, i32* %g, align 4, !dbg !14444
  %add3152 = add nsw i32 %mul3151, %1528, !dbg !14445
  %idxprom3153 = sext i32 %add3152 to i64, !dbg !14446
  %arrayidx3154 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom3153, !dbg !14446
  %1529 = load float, float* %arrayidx3154, align 4, !dbg !14446
  br label %cond.end3160, !dbg !14447

cond.false3155:                                   ; preds = %for.end3137
  %1530 = load i32, i32* %w, align 4, !dbg !14448
  %mul3156 = mul nsw i32 %1530, 16, !dbg !14450
  %1531 = load i32, i32* %g, align 4, !dbg !14451
  %add3157 = add nsw i32 %mul3156, %1531, !dbg !14452
  %idxprom3158 = sext i32 %add3157 to i64, !dbg !14453
  %arrayidx3159 = getelementptr inbounds [128 x float], [128 x float]* %euplims, i64 0, i64 %idxprom3158, !dbg !14453
  %1532 = load float, float* %arrayidx3159, align 4, !dbg !14453
  br label %cond.end3160, !dbg !14454

cond.end3160:                                     ; preds = %cond.false3155, %cond.true3150
  %cond3161 = phi float [ %1529, %cond.true3150 ], [ %1532, %cond.false3155 ], !dbg !14455
  %cmp3162 = fcmp olt float %1520, %cond3161, !dbg !14457
  br i1 %cmp3162, label %if.then3164, label %if.else3179, !dbg !14458

if.then3164:                                      ; preds = %cond.end3160
  %1533 = load i32, i32* %w, align 4, !dbg !14459
  %mul3165 = mul nsw i32 %1533, 16, !dbg !14461
  %1534 = load i32, i32* %g, align 4, !dbg !14462
  %add3166 = add nsw i32 %mul3165, %1534, !dbg !14463
  %idxprom3167 = sext i32 %add3166 to i64, !dbg !14464
  %1535 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14464
  %sf_idx3168 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1535, i32 0, i32 7, !dbg !14465
  %arrayidx3169 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3168, i64 0, i64 %idxprom3167, !dbg !14464
  %1536 = load i32, i32* %arrayidx3169, align 4, !dbg !14466
  %inc3170 = add nsw i32 %1536, 1, !dbg !14466
  store i32 %inc3170, i32* %arrayidx3169, align 4, !dbg !14466
  %1537 = load float, float* %dist3086, align 4, !dbg !14467
  %1538 = load i32, i32* %w, align 4, !dbg !14468
  %mul3171 = mul nsw i32 %1538, 16, !dbg !14469
  %1539 = load i32, i32* %g, align 4, !dbg !14470
  %add3172 = add nsw i32 %mul3171, %1539, !dbg !14471
  %idxprom3173 = sext i32 %add3172 to i64, !dbg !14472
  %arrayidx3174 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom3173, !dbg !14472
  store float %1537, float* %arrayidx3174, align 4, !dbg !14473
  %1540 = load float, float* %qenergy3087, align 4, !dbg !14474
  %1541 = load i32, i32* %w, align 4, !dbg !14475
  %mul3175 = mul nsw i32 %1541, 16, !dbg !14476
  %1542 = load i32, i32* %g, align 4, !dbg !14477
  %add3176 = add nsw i32 %mul3175, %1542, !dbg !14478
  %idxprom3177 = sext i32 %add3176 to i64, !dbg !14479
  %arrayidx3178 = getelementptr inbounds [128 x float], [128 x float]* %qenergies, i64 0, i64 %idxprom3177, !dbg !14479
  store float %1540, float* %arrayidx3178, align 4, !dbg !14480
  br label %if.end3180, !dbg !14481

if.else3179:                                      ; preds = %cond.end3160
  br label %for.end3213, !dbg !14482

if.end3180:                                       ; preds = %if.then3164
  br label %if.end3210, !dbg !14484

if.else3181:                                      ; preds = %for.body3083
  %1543 = load i32, i32* %w, align 4, !dbg !14485
  %mul3182 = mul nsw i32 %1543, 16, !dbg !14487
  %1544 = load i32, i32* %g, align 4, !dbg !14488
  %add3183 = add nsw i32 %mul3182, %1544, !dbg !14489
  %idxprom3184 = sext i32 %add3183 to i64, !dbg !14490
  %1545 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14490
  %sf_idx3185 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1545, i32 0, i32 7, !dbg !14491
  %arrayidx3186 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3185, i64 0, i64 %idxprom3184, !dbg !14490
  %1546 = load i32, i32* %arrayidx3186, align 4, !dbg !14490
  %1547 = load i32, i32* %w, align 4, !dbg !14492
  %mul3187 = mul nsw i32 %1547, 16, !dbg !14493
  %1548 = load i32, i32* %g, align 4, !dbg !14494
  %add3188 = add nsw i32 %mul3187, %1548, !dbg !14495
  %idxprom3189 = sext i32 %add3188 to i64, !dbg !14496
  %arrayidx3190 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom3189, !dbg !14496
  %1549 = load i32, i32* %arrayidx3190, align 4, !dbg !14496
  %cmp3191 = icmp sgt i32 %1546, %1549, !dbg !14497
  br i1 %cmp3191, label %cond.true3193, label %cond.false3198, !dbg !14498

cond.true3193:                                    ; preds = %if.else3181
  %1550 = load i32, i32* %w, align 4, !dbg !14499
  %mul3194 = mul nsw i32 %1550, 16, !dbg !14501
  %1551 = load i32, i32* %g, align 4, !dbg !14502
  %add3195 = add nsw i32 %mul3194, %1551, !dbg !14503
  %idxprom3196 = sext i32 %add3195 to i64, !dbg !14504
  %arrayidx3197 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom3196, !dbg !14504
  %1552 = load i32, i32* %arrayidx3197, align 4, !dbg !14504
  br label %cond.end3204, !dbg !14505

cond.false3198:                                   ; preds = %if.else3181
  %1553 = load i32, i32* %w, align 4, !dbg !14506
  %mul3199 = mul nsw i32 %1553, 16, !dbg !14508
  %1554 = load i32, i32* %g, align 4, !dbg !14509
  %add3200 = add nsw i32 %mul3199, %1554, !dbg !14510
  %idxprom3201 = sext i32 %add3200 to i64, !dbg !14511
  %1555 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14511
  %sf_idx3202 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1555, i32 0, i32 7, !dbg !14512
  %arrayidx3203 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3202, i64 0, i64 %idxprom3201, !dbg !14511
  %1556 = load i32, i32* %arrayidx3203, align 4, !dbg !14511
  br label %cond.end3204, !dbg !14513

cond.end3204:                                     ; preds = %cond.false3198, %cond.true3193
  %cond3205 = phi i32 [ %1552, %cond.true3193 ], [ %1556, %cond.false3198 ], !dbg !14514
  %1557 = load i32, i32* %w, align 4, !dbg !14516
  %mul3206 = mul nsw i32 %1557, 16, !dbg !14517
  %1558 = load i32, i32* %g, align 4, !dbg !14518
  %add3207 = add nsw i32 %mul3206, %1558, !dbg !14519
  %idxprom3208 = sext i32 %add3207 to i64, !dbg !14520
  %arrayidx3209 = getelementptr inbounds [128 x i32], [128 x i32]* %maxsf, i64 0, i64 %idxprom3208, !dbg !14520
  store i32 %cond3205, i32* %arrayidx3209, align 4, !dbg !14521
  br label %for.end3213, !dbg !14522

if.end3210:                                       ; preds = %if.end3180
  br label %for.inc3211, !dbg !14523

for.inc3211:                                      ; preds = %if.end3210
  %1559 = load i32, i32* %i, align 4, !dbg !14524
  %inc3212 = add nsw i32 %1559, 1, !dbg !14524
  store i32 %inc3212, i32* %i, align 4, !dbg !14524
  br label %for.cond3071, !dbg !14526, !llvm.loop !14527

for.end3213:                                      ; preds = %cond.end3204, %if.else3179, %land.end3082
  br label %if.end3214, !dbg !14529

if.end3214:                                       ; preds = %for.end3213, %land.lhs.true3053, %cond.end3049, %cond.end3020, %if.else2999
  br label %if.end3215

if.end3215:                                       ; preds = %if.end3214, %for.end2998
  %1560 = load i32, i32* %w, align 4, !dbg !14530
  %mul3216 = mul nsw i32 %1560, 16, !dbg !14531
  %1561 = load i32, i32* %g, align 4, !dbg !14532
  %add3217 = add nsw i32 %mul3216, %1561, !dbg !14533
  %idxprom3218 = sext i32 %add3217 to i64, !dbg !14534
  %1562 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14534
  %sf_idx3219 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1562, i32 0, i32 7, !dbg !14535
  %arrayidx3220 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3219, i64 0, i64 %idxprom3218, !dbg !14534
  %1563 = load i32, i32* %arrayidx3220, align 4, !dbg !14534
  %1564 = load i32, i32* %mindeltasf, align 4, !dbg !14536
  %1565 = load i32, i32* %maxdeltasf, align 4, !dbg !14537
  store i32 %1563, i32* %a.addr.i3585, align 4, !dbg !14538
  store i32 %1564, i32* %amin.addr.i3586, align 4, !dbg !14538
  store i32 %1565, i32* %amax.addr.i3587, align 4, !dbg !14538
  %1566 = load i32, i32* %a.addr.i3585, align 4, !dbg !14539
  %1567 = load i32, i32* %amin.addr.i3586, align 4, !dbg !14540
  %cmp.i3588 = icmp slt i32 %1566, %1567, !dbg !14541
  br i1 %cmp.i3588, label %if.then.i3589, label %if.else.i3591, !dbg !14542

if.then.i3589:                                    ; preds = %if.end3215
  %1568 = load i32, i32* %amin.addr.i3586, align 4, !dbg !14543
  store i32 %1568, i32* %retval.i3584, align 4, !dbg !14544
  br label %av_clip_c.exit3594, !dbg !14544

if.else.i3591:                                    ; preds = %if.end3215
  %1569 = load i32, i32* %a.addr.i3585, align 4, !dbg !14545
  %1570 = load i32, i32* %amax.addr.i3587, align 4, !dbg !14546
  %cmp1.i3590 = icmp sgt i32 %1569, %1570, !dbg !14547
  br i1 %cmp1.i3590, label %if.then2.i3592, label %if.else3.i3593, !dbg !14548

if.then2.i3592:                                   ; preds = %if.else.i3591
  %1571 = load i32, i32* %amax.addr.i3587, align 4, !dbg !14549
  store i32 %1571, i32* %retval.i3584, align 4, !dbg !14550
  br label %av_clip_c.exit3594, !dbg !14550

if.else3.i3593:                                   ; preds = %if.else.i3591
  %1572 = load i32, i32* %a.addr.i3585, align 4, !dbg !14551
  store i32 %1572, i32* %retval.i3584, align 4, !dbg !14552
  br label %av_clip_c.exit3594, !dbg !14552

av_clip_c.exit3594:                               ; preds = %if.then.i3589, %if.then2.i3592, %if.else3.i3593
  %1573 = load i32, i32* %retval.i3584, align 4, !dbg !14553
  %1574 = load i32, i32* %w, align 4, !dbg !14554
  %mul3222 = mul nsw i32 %1574, 16, !dbg !14555
  %1575 = load i32, i32* %g, align 4, !dbg !14556
  %add3223 = add nsw i32 %mul3222, %1575, !dbg !14557
  %idxprom3224 = sext i32 %add3223 to i64, !dbg !14558
  %1576 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14558
  %sf_idx3225 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1576, i32 0, i32 7, !dbg !14559
  %arrayidx3226 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3225, i64 0, i64 %idxprom3224, !dbg !14558
  store i32 %1573, i32* %arrayidx3226, align 4, !dbg !14560
  store i32 %1573, i32* %prev, align 4, !dbg !14561
  %1577 = load i32, i32* %w, align 4, !dbg !14562
  %mul3227 = mul nsw i32 %1577, 16, !dbg !14564
  %1578 = load i32, i32* %g, align 4, !dbg !14565
  %add3228 = add nsw i32 %mul3227, %1578, !dbg !14566
  %idxprom3229 = sext i32 %add3228 to i64, !dbg !14567
  %1579 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14567
  %sf_idx3230 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1579, i32 0, i32 7, !dbg !14568
  %arrayidx3231 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3230, i64 0, i64 %idxprom3229, !dbg !14567
  %1580 = load i32, i32* %arrayidx3231, align 4, !dbg !14567
  %1581 = load i32, i32* %prevsc, align 4, !dbg !14569
  %cmp3232 = icmp ne i32 %1580, %1581, !dbg !14570
  br i1 %cmp3232, label %if.then3234, label %if.end3235, !dbg !14571

if.then3234:                                      ; preds = %av_clip_c.exit3594
  store i32 1, i32* %fflag, align 4, !dbg !14572
  br label %if.end3235, !dbg !14573

if.end3235:                                       ; preds = %if.then3234, %av_clip_c.exit3594
  %1582 = load i32, i32* %nminscaler, align 4, !dbg !14574
  %1583 = load i32, i32* %w, align 4, !dbg !14575
  %mul3236 = mul nsw i32 %1583, 16, !dbg !14576
  %1584 = load i32, i32* %g, align 4, !dbg !14577
  %add3237 = add nsw i32 %mul3236, %1584, !dbg !14578
  %idxprom3238 = sext i32 %add3237 to i64, !dbg !14579
  %1585 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14579
  %sf_idx3239 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1585, i32 0, i32 7, !dbg !14580
  %arrayidx3240 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3239, i64 0, i64 %idxprom3238, !dbg !14579
  %1586 = load i32, i32* %arrayidx3240, align 4, !dbg !14579
  %cmp3241 = icmp sgt i32 %1582, %1586, !dbg !14581
  br i1 %cmp3241, label %cond.true3243, label %cond.false3249, !dbg !14582

cond.true3243:                                    ; preds = %if.end3235
  %1587 = load i32, i32* %w, align 4, !dbg !14583
  %mul3244 = mul nsw i32 %1587, 16, !dbg !14584
  %1588 = load i32, i32* %g, align 4, !dbg !14585
  %add3245 = add nsw i32 %mul3244, %1588, !dbg !14586
  %idxprom3246 = sext i32 %add3245 to i64, !dbg !14587
  %1589 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14587
  %sf_idx3247 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1589, i32 0, i32 7, !dbg !14588
  %arrayidx3248 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3247, i64 0, i64 %idxprom3246, !dbg !14587
  %1590 = load i32, i32* %arrayidx3248, align 4, !dbg !14587
  br label %cond.end3250, !dbg !14589

cond.false3249:                                   ; preds = %if.end3235
  %1591 = load i32, i32* %nminscaler, align 4, !dbg !14590
  br label %cond.end3250, !dbg !14591

cond.end3250:                                     ; preds = %cond.false3249, %cond.true3243
  %cond3251 = phi i32 [ %1590, %cond.true3243 ], [ %1591, %cond.false3249 ], !dbg !14592
  store i32 %cond3251, i32* %nminscaler, align 4, !dbg !14593
  %1592 = load i32, i32* %w, align 4, !dbg !14594
  %mul3252 = mul nsw i32 %1592, 16, !dbg !14595
  %1593 = load i32, i32* %g, align 4, !dbg !14596
  %add3253 = add nsw i32 %mul3252, %1593, !dbg !14597
  %idxprom3254 = sext i32 %add3253 to i64, !dbg !14598
  %arrayidx3255 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom3254, !dbg !14598
  %1594 = load float, float* %arrayidx3255, align 4, !dbg !14598
  %1595 = load i32, i32* %w, align 4, !dbg !14599
  %mul3256 = mul nsw i32 %1595, 16, !dbg !14600
  %1596 = load i32, i32* %g, align 4, !dbg !14601
  %add3257 = add nsw i32 %mul3256, %1596, !dbg !14602
  %idxprom3258 = sext i32 %add3257 to i64, !dbg !14603
  %1597 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14603
  %sf_idx3259 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1597, i32 0, i32 7, !dbg !14604
  %arrayidx3260 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3259, i64 0, i64 %idxprom3258, !dbg !14603
  %1598 = load i32, i32* %arrayidx3260, align 4, !dbg !14603
  %call3261 = call i32 @find_min_book(float %1594, i32 %1598), !dbg !14605
  %1599 = load i32, i32* %w, align 4, !dbg !14606
  %mul3262 = mul nsw i32 %1599, 16, !dbg !14607
  %1600 = load i32, i32* %g, align 4, !dbg !14608
  %add3263 = add nsw i32 %mul3262, %1600, !dbg !14609
  %idxprom3264 = sext i32 %add3263 to i64, !dbg !14610
  %1601 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14610
  %band_type3265 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1601, i32 0, i32 3, !dbg !14611
  %arrayidx3266 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3265, i64 0, i64 %idxprom3264, !dbg !14610
  store i32 %call3261, i32* %arrayidx3266, align 4, !dbg !14612
  br label %if.end3267, !dbg !14613

if.end3267:                                       ; preds = %cond.end3250, %if.end2672
  %1602 = load i32, i32* %g, align 4, !dbg !14614
  %idxprom3268 = sext i32 %1602 to i64, !dbg !14615
  %1603 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14615
  %ics3269 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1603, i32 0, i32 0, !dbg !14616
  %swb_sizes3270 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3269, i32 0, i32 7, !dbg !14617
  %1604 = load i8*, i8** %swb_sizes3270, align 8, !dbg !14617
  %arrayidx3271 = getelementptr inbounds i8, i8* %1604, i64 %idxprom3268, !dbg !14615
  %1605 = load i8, i8* %arrayidx3271, align 1, !dbg !14615
  %conv3272 = zext i8 %1605 to i32, !dbg !14615
  %1606 = load i32, i32* %start, align 4, !dbg !14618
  %add3273 = add nsw i32 %1606, %conv3272, !dbg !14618
  store i32 %add3273, i32* %start, align 4, !dbg !14618
  br label %for.inc3274, !dbg !14619

for.inc3274:                                      ; preds = %if.end3267
  %1607 = load i32, i32* %g, align 4, !dbg !14620
  %inc3275 = add nsw i32 %1607, 1, !dbg !14620
  store i32 %inc3275, i32* %g, align 4, !dbg !14620
  br label %for.cond2649, !dbg !14622, !llvm.loop !14623

for.end3276:                                      ; preds = %for.cond2649
  br label %for.inc3277, !dbg !14625

for.inc3277:                                      ; preds = %for.end3276
  %1608 = load i32, i32* %w, align 4, !dbg !14626
  %idxprom3278 = sext i32 %1608 to i64, !dbg !14628
  %1609 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14628
  %ics3279 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1609, i32 0, i32 0, !dbg !14629
  %group_len3280 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3279, i32 0, i32 4, !dbg !14630
  %arrayidx3281 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len3280, i64 0, i64 %idxprom3278, !dbg !14628
  %1610 = load i8, i8* %arrayidx3281, align 1, !dbg !14628
  %conv3282 = zext i8 %1610 to i32, !dbg !14628
  %1611 = load i32, i32* %w, align 4, !dbg !14631
  %add3283 = add nsw i32 %1611, %conv3282, !dbg !14631
  store i32 %add3283, i32* %w, align 4, !dbg !14631
  br label %for.cond2593, !dbg !14632, !llvm.loop !14633

for.end3284:                                      ; preds = %for.cond2593
  store i32 -1, i32* %prev, align 4, !dbg !14635
  store i32 0, i32* %w, align 4, !dbg !14636
  br label %for.cond3285, !dbg !14637

for.cond3285:                                     ; preds = %for.inc3361, %for.end3284
  %1612 = load i32, i32* %w, align 4, !dbg !14638
  %1613 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14640
  %ics3286 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1613, i32 0, i32 0, !dbg !14641
  %num_windows3287 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3286, i32 0, i32 9, !dbg !14642
  %1614 = load i32, i32* %num_windows3287, align 4, !dbg !14642
  %cmp3288 = icmp slt i32 %1612, %1614, !dbg !14643
  br i1 %cmp3288, label %for.body3290, label %for.end3368, !dbg !14644

for.body3290:                                     ; preds = %for.cond3285
  store i32 0, i32* %g, align 4, !dbg !14645
  br label %for.cond3291, !dbg !14646

for.cond3291:                                     ; preds = %for.inc3358, %for.body3290
  %1615 = load i32, i32* %g, align 4, !dbg !14647
  %1616 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14649
  %ics3292 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1616, i32 0, i32 0, !dbg !14650
  %num_swb3293 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3292, i32 0, i32 8, !dbg !14651
  %1617 = load i32, i32* %num_swb3293, align 32, !dbg !14651
  %cmp3294 = icmp slt i32 %1615, %1617, !dbg !14652
  br i1 %cmp3294, label %for.body3296, label %for.end3360, !dbg !14653

for.body3296:                                     ; preds = %for.cond3291
  %1618 = load i32, i32* %w, align 4, !dbg !14654
  %mul3297 = mul nsw i32 %1618, 16, !dbg !14655
  %1619 = load i32, i32* %g, align 4, !dbg !14656
  %add3298 = add nsw i32 %mul3297, %1619, !dbg !14657
  %idxprom3299 = sext i32 %add3298 to i64, !dbg !14658
  %1620 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14658
  %zeroes3300 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1620, i32 0, i32 8, !dbg !14659
  %arrayidx3301 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes3300, i64 0, i64 %idxprom3299, !dbg !14658
  %1621 = load i8, i8* %arrayidx3301, align 1, !dbg !14658
  %tobool3302 = icmp ne i8 %1621, 0, !dbg !14658
  br i1 %tobool3302, label %if.end3357, label %if.then3303, !dbg !14660

if.then3303:                                      ; preds = %for.body3296
  call void @llvm.dbg.declare(metadata i32* %prevsf, metadata !14661, metadata !2772), !dbg !14662
  %1622 = load i32, i32* %w, align 4, !dbg !14663
  %mul3304 = mul nsw i32 %1622, 16, !dbg !14664
  %1623 = load i32, i32* %g, align 4, !dbg !14665
  %add3305 = add nsw i32 %mul3304, %1623, !dbg !14666
  %idxprom3306 = sext i32 %add3305 to i64, !dbg !14667
  %1624 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14667
  %sf_idx3307 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1624, i32 0, i32 7, !dbg !14668
  %arrayidx3308 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3307, i64 0, i64 %idxprom3306, !dbg !14667
  %1625 = load i32, i32* %arrayidx3308, align 4, !dbg !14667
  store i32 %1625, i32* %prevsf, align 4, !dbg !14662
  %1626 = load i32, i32* %prev, align 4, !dbg !14669
  %cmp3309 = icmp slt i32 %1626, 0, !dbg !14671
  br i1 %cmp3309, label %if.then3311, label %if.end3312, !dbg !14672

if.then3311:                                      ; preds = %if.then3303
  %1627 = load i32, i32* %prevsf, align 4, !dbg !14673
  store i32 %1627, i32* %prev, align 4, !dbg !14674
  br label %if.end3312, !dbg !14675

if.end3312:                                       ; preds = %if.then3311, %if.then3303
  %1628 = load i32, i32* %w, align 4, !dbg !14676
  %mul3313 = mul nsw i32 %1628, 16, !dbg !14677
  %1629 = load i32, i32* %g, align 4, !dbg !14678
  %add3314 = add nsw i32 %mul3313, %1629, !dbg !14679
  %idxprom3315 = sext i32 %add3314 to i64, !dbg !14680
  %1630 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14680
  %sf_idx3316 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1630, i32 0, i32 7, !dbg !14681
  %arrayidx3317 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3316, i64 0, i64 %idxprom3315, !dbg !14680
  %1631 = load i32, i32* %arrayidx3317, align 4, !dbg !14680
  %1632 = load i32, i32* %prev, align 4, !dbg !14682
  %sub3318 = sub nsw i32 %1632, 60, !dbg !14683
  %1633 = load i32, i32* %prev, align 4, !dbg !14684
  %add3319 = add nsw i32 %1633, 60, !dbg !14685
  store i32 %1631, i32* %a.addr.i3563, align 4, !dbg !14686
  store i32 %sub3318, i32* %amin.addr.i3564, align 4, !dbg !14686
  store i32 %add3319, i32* %amax.addr.i3565, align 4, !dbg !14686
  %1634 = load i32, i32* %a.addr.i3563, align 4, !dbg !14687
  %1635 = load i32, i32* %amin.addr.i3564, align 4, !dbg !14688
  %cmp.i3566 = icmp slt i32 %1634, %1635, !dbg !14689
  br i1 %cmp.i3566, label %if.then.i3567, label %if.else.i3569, !dbg !14690

if.then.i3567:                                    ; preds = %if.end3312
  %1636 = load i32, i32* %amin.addr.i3564, align 4, !dbg !14691
  store i32 %1636, i32* %retval.i3562, align 4, !dbg !14692
  br label %av_clip_c.exit3572, !dbg !14692

if.else.i3569:                                    ; preds = %if.end3312
  %1637 = load i32, i32* %a.addr.i3563, align 4, !dbg !14693
  %1638 = load i32, i32* %amax.addr.i3565, align 4, !dbg !14694
  %cmp1.i3568 = icmp sgt i32 %1637, %1638, !dbg !14695
  br i1 %cmp1.i3568, label %if.then2.i3570, label %if.else3.i3571, !dbg !14696

if.then2.i3570:                                   ; preds = %if.else.i3569
  %1639 = load i32, i32* %amax.addr.i3565, align 4, !dbg !14697
  store i32 %1639, i32* %retval.i3562, align 4, !dbg !14698
  br label %av_clip_c.exit3572, !dbg !14698

if.else3.i3571:                                   ; preds = %if.else.i3569
  %1640 = load i32, i32* %a.addr.i3563, align 4, !dbg !14699
  store i32 %1640, i32* %retval.i3562, align 4, !dbg !14700
  br label %av_clip_c.exit3572, !dbg !14700

av_clip_c.exit3572:                               ; preds = %if.then.i3567, %if.then2.i3570, %if.else3.i3571
  %1641 = load i32, i32* %retval.i3562, align 4, !dbg !14701
  %1642 = load i32, i32* %w, align 4, !dbg !14702
  %mul3321 = mul nsw i32 %1642, 16, !dbg !14703
  %1643 = load i32, i32* %g, align 4, !dbg !14704
  %add3322 = add nsw i32 %mul3321, %1643, !dbg !14705
  %idxprom3323 = sext i32 %add3322 to i64, !dbg !14706
  %1644 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14706
  %sf_idx3324 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1644, i32 0, i32 7, !dbg !14707
  %arrayidx3325 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3324, i64 0, i64 %idxprom3323, !dbg !14706
  store i32 %1641, i32* %arrayidx3325, align 4, !dbg !14708
  %1645 = load i32, i32* %w, align 4, !dbg !14709
  %mul3326 = mul nsw i32 %1645, 16, !dbg !14710
  %1646 = load i32, i32* %g, align 4, !dbg !14711
  %add3327 = add nsw i32 %mul3326, %1646, !dbg !14712
  %idxprom3328 = sext i32 %add3327 to i64, !dbg !14713
  %arrayidx3329 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom3328, !dbg !14713
  %1647 = load float, float* %arrayidx3329, align 4, !dbg !14713
  %1648 = load i32, i32* %w, align 4, !dbg !14714
  %mul3330 = mul nsw i32 %1648, 16, !dbg !14715
  %1649 = load i32, i32* %g, align 4, !dbg !14716
  %add3331 = add nsw i32 %mul3330, %1649, !dbg !14717
  %idxprom3332 = sext i32 %add3331 to i64, !dbg !14718
  %1650 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14718
  %sf_idx3333 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1650, i32 0, i32 7, !dbg !14719
  %arrayidx3334 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3333, i64 0, i64 %idxprom3332, !dbg !14718
  %1651 = load i32, i32* %arrayidx3334, align 4, !dbg !14718
  %call3335 = call i32 @find_min_book(float %1647, i32 %1651), !dbg !14720
  %1652 = load i32, i32* %w, align 4, !dbg !14721
  %mul3336 = mul nsw i32 %1652, 16, !dbg !14722
  %1653 = load i32, i32* %g, align 4, !dbg !14723
  %add3337 = add nsw i32 %mul3336, %1653, !dbg !14724
  %idxprom3338 = sext i32 %add3337 to i64, !dbg !14725
  %1654 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14725
  %band_type3339 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1654, i32 0, i32 3, !dbg !14726
  %arrayidx3340 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3339, i64 0, i64 %idxprom3338, !dbg !14725
  store i32 %call3335, i32* %arrayidx3340, align 4, !dbg !14727
  %1655 = load i32, i32* %w, align 4, !dbg !14728
  %mul3341 = mul nsw i32 %1655, 16, !dbg !14729
  %1656 = load i32, i32* %g, align 4, !dbg !14730
  %add3342 = add nsw i32 %mul3341, %1656, !dbg !14731
  %idxprom3343 = sext i32 %add3342 to i64, !dbg !14732
  %1657 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14732
  %sf_idx3344 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1657, i32 0, i32 7, !dbg !14733
  %arrayidx3345 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3344, i64 0, i64 %idxprom3343, !dbg !14732
  %1658 = load i32, i32* %arrayidx3345, align 4, !dbg !14732
  store i32 %1658, i32* %prev, align 4, !dbg !14734
  %1659 = load i32, i32* %fflag, align 4, !dbg !14735
  %tobool3346 = icmp ne i32 %1659, 0, !dbg !14735
  br i1 %tobool3346, label %if.end3356, label %land.lhs.true3347, !dbg !14737

land.lhs.true3347:                                ; preds = %av_clip_c.exit3572
  %1660 = load i32, i32* %prevsf, align 4, !dbg !14738
  %1661 = load i32, i32* %w, align 4, !dbg !14740
  %mul3348 = mul nsw i32 %1661, 16, !dbg !14741
  %1662 = load i32, i32* %g, align 4, !dbg !14742
  %add3349 = add nsw i32 %mul3348, %1662, !dbg !14743
  %idxprom3350 = sext i32 %add3349 to i64, !dbg !14744
  %1663 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14744
  %sf_idx3351 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1663, i32 0, i32 7, !dbg !14745
  %arrayidx3352 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3351, i64 0, i64 %idxprom3350, !dbg !14744
  %1664 = load i32, i32* %arrayidx3352, align 4, !dbg !14744
  %cmp3353 = icmp ne i32 %1660, %1664, !dbg !14746
  br i1 %cmp3353, label %if.then3355, label %if.end3356, !dbg !14747

if.then3355:                                      ; preds = %land.lhs.true3347
  store i32 1, i32* %fflag, align 4, !dbg !14748
  br label %if.end3356, !dbg !14749

if.end3356:                                       ; preds = %if.then3355, %land.lhs.true3347, %av_clip_c.exit3572
  br label %if.end3357, !dbg !14750

if.end3357:                                       ; preds = %if.end3356, %for.body3296
  br label %for.inc3358, !dbg !14751

for.inc3358:                                      ; preds = %if.end3357
  %1665 = load i32, i32* %g, align 4, !dbg !14752
  %inc3359 = add nsw i32 %1665, 1, !dbg !14752
  store i32 %inc3359, i32* %g, align 4, !dbg !14752
  br label %for.cond3291, !dbg !14754, !llvm.loop !14755

for.end3360:                                      ; preds = %for.cond3291
  br label %for.inc3361, !dbg !14757

for.inc3361:                                      ; preds = %for.end3360
  %1666 = load i32, i32* %w, align 4, !dbg !14758
  %idxprom3362 = sext i32 %1666 to i64, !dbg !14760
  %1667 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14760
  %ics3363 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1667, i32 0, i32 0, !dbg !14761
  %group_len3364 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3363, i32 0, i32 4, !dbg !14762
  %arrayidx3365 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len3364, i64 0, i64 %idxprom3362, !dbg !14760
  %1668 = load i8, i8* %arrayidx3365, align 1, !dbg !14760
  %conv3366 = zext i8 %1668 to i32, !dbg !14760
  %1669 = load i32, i32* %w, align 4, !dbg !14763
  %add3367 = add nsw i32 %1669, %conv3366, !dbg !14763
  store i32 %add3367, i32* %w, align 4, !dbg !14763
  br label %for.cond3285, !dbg !14764, !llvm.loop !14765

for.end3368:                                      ; preds = %for.cond3285
  %1670 = load i32, i32* %its, align 4, !dbg !14767
  %inc3369 = add nsw i32 %1670, 1, !dbg !14767
  store i32 %inc3369, i32* %its, align 4, !dbg !14767
  br label %do.cond3370, !dbg !14768

do.cond3370:                                      ; preds = %for.end3368
  %1671 = load i32, i32* %fflag, align 4, !dbg !14769
  %tobool3371 = icmp ne i32 %1671, 0, !dbg !14769
  br i1 %tobool3371, label %land.rhs3372, label %land.end3375, !dbg !14770

land.rhs3372:                                     ; preds = %do.cond3370
  %1672 = load i32, i32* %its, align 4, !dbg !14771
  %1673 = load i32, i32* %maxits, align 4, !dbg !14772
  %cmp3373 = icmp slt i32 %1672, %1673, !dbg !14773
  br label %land.end3375

land.end3375:                                     ; preds = %land.rhs3372, %do.cond3370
  %1674 = phi i1 [ false, %do.cond3370 ], [ %cmp3373, %land.rhs3372 ]
  br i1 %1674, label %do.body, label %do.end3376, !dbg !14774, !llvm.loop !12227

do.end3376:                                       ; preds = %land.end3375
  %1675 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14776
  %arraydecay3377 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband, i32 0, i32 0, !dbg !14777
  call void @ff_init_nextband_map(%struct.SingleChannelElement* %1675, i8* %arraydecay3377), !dbg !14778
  store i32 -1, i32* %prev, align 4, !dbg !14779
  store i32 0, i32* %w, align 4, !dbg !14780
  br label %for.cond3378, !dbg !14782

for.cond3378:                                     ; preds = %for.inc3492, %do.end3376
  %1676 = load i32, i32* %w, align 4, !dbg !14783
  %1677 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14786
  %ics3379 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1677, i32 0, i32 0, !dbg !14787
  %num_windows3380 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3379, i32 0, i32 9, !dbg !14788
  %1678 = load i32, i32* %num_windows3380, align 4, !dbg !14788
  %cmp3381 = icmp slt i32 %1676, %1678, !dbg !14789
  br i1 %cmp3381, label %for.body3383, label %for.end3499, !dbg !14790

for.body3383:                                     ; preds = %for.cond3378
  store i32 0, i32* %g, align 4, !dbg !14791
  br label %for.cond3384, !dbg !14794

for.cond3384:                                     ; preds = %for.inc3489, %for.body3383
  %1679 = load i32, i32* %g, align 4, !dbg !14795
  %1680 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14798
  %ics3385 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1680, i32 0, i32 0, !dbg !14799
  %num_swb3386 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3385, i32 0, i32 8, !dbg !14800
  %1681 = load i32, i32* %num_swb3386, align 32, !dbg !14800
  %cmp3387 = icmp slt i32 %1679, %1681, !dbg !14801
  br i1 %cmp3387, label %for.body3389, label %for.end3491, !dbg !14802

for.body3389:                                     ; preds = %for.cond3384
  %1682 = load i32, i32* %w, align 4, !dbg !14803
  %mul3390 = mul nsw i32 %1682, 16, !dbg !14806
  %1683 = load i32, i32* %g, align 4, !dbg !14807
  %add3391 = add nsw i32 %mul3390, %1683, !dbg !14808
  %idxprom3392 = sext i32 %add3391 to i64, !dbg !14809
  %1684 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14809
  %zeroes3393 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1684, i32 0, i32 8, !dbg !14810
  %arrayidx3394 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes3393, i64 0, i64 %idxprom3392, !dbg !14809
  %1685 = load i8, i8* %arrayidx3394, align 1, !dbg !14809
  %tobool3395 = icmp ne i8 %1685, 0, !dbg !14809
  br i1 %tobool3395, label %if.else3444, label %if.then3396, !dbg !14811

if.then3396:                                      ; preds = %for.body3389
  %1686 = load i32, i32* %w, align 4, !dbg !14812
  %mul3397 = mul nsw i32 %1686, 16, !dbg !14814
  %1687 = load i32, i32* %g, align 4, !dbg !14815
  %add3398 = add nsw i32 %mul3397, %1687, !dbg !14816
  %idxprom3399 = sext i32 %add3398 to i64, !dbg !14817
  %arrayidx3400 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom3399, !dbg !14817
  %1688 = load float, float* %arrayidx3400, align 4, !dbg !14817
  %1689 = load i32, i32* %w, align 4, !dbg !14818
  %mul3401 = mul nsw i32 %1689, 16, !dbg !14819
  %1690 = load i32, i32* %g, align 4, !dbg !14820
  %add3402 = add nsw i32 %mul3401, %1690, !dbg !14821
  %idxprom3403 = sext i32 %add3402 to i64, !dbg !14822
  %1691 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14822
  %sf_idx3404 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1691, i32 0, i32 7, !dbg !14823
  %arrayidx3405 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3404, i64 0, i64 %idxprom3403, !dbg !14822
  %1692 = load i32, i32* %arrayidx3405, align 4, !dbg !14822
  %call3406 = call i32 @find_min_book(float %1688, i32 %1692), !dbg !14824
  %1693 = load i32, i32* %w, align 4, !dbg !14825
  %mul3407 = mul nsw i32 %1693, 16, !dbg !14826
  %1694 = load i32, i32* %g, align 4, !dbg !14827
  %add3408 = add nsw i32 %mul3407, %1694, !dbg !14828
  %idxprom3409 = sext i32 %add3408 to i64, !dbg !14829
  %1695 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14829
  %band_type3410 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1695, i32 0, i32 3, !dbg !14830
  %arrayidx3411 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3410, i64 0, i64 %idxprom3409, !dbg !14829
  store i32 %call3406, i32* %arrayidx3411, align 4, !dbg !14831
  %1696 = load i32, i32* %w, align 4, !dbg !14832
  %mul3412 = mul nsw i32 %1696, 16, !dbg !14834
  %1697 = load i32, i32* %g, align 4, !dbg !14835
  %add3413 = add nsw i32 %mul3412, %1697, !dbg !14836
  %idxprom3414 = sext i32 %add3413 to i64, !dbg !14837
  %1698 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14837
  %band_type3415 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1698, i32 0, i32 3, !dbg !14838
  %arrayidx3416 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3415, i64 0, i64 %idxprom3414, !dbg !14837
  %1699 = load i32, i32* %arrayidx3416, align 4, !dbg !14837
  %cmp3417 = icmp ule i32 %1699, 0, !dbg !14839
  br i1 %cmp3417, label %if.then3419, label %if.end3443, !dbg !14840

if.then3419:                                      ; preds = %if.then3396
  %1700 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14841
  %arraydecay3420 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband, i32 0, i32 0, !dbg !14844
  %1701 = load i32, i32* %prev, align 4, !dbg !14845
  %1702 = load i32, i32* %w, align 4, !dbg !14846
  %mul3421 = mul nsw i32 %1702, 16, !dbg !14847
  %1703 = load i32, i32* %g, align 4, !dbg !14848
  %add3422 = add nsw i32 %mul3421, %1703, !dbg !14849
  %call3423 = call i32 @ff_sfdelta_can_remove_band(%struct.SingleChannelElement* %1700, i8* %arraydecay3420, i32 %1701, i32 %add3422), !dbg !14850
  %tobool3424 = icmp ne i32 %call3423, 0, !dbg !14850
  br i1 %tobool3424, label %if.else3431, label %if.then3425, !dbg !14851

if.then3425:                                      ; preds = %if.then3419
  %1704 = load i32, i32* %w, align 4, !dbg !14852
  %mul3426 = mul nsw i32 %1704, 16, !dbg !14854
  %1705 = load i32, i32* %g, align 4, !dbg !14855
  %add3427 = add nsw i32 %mul3426, %1705, !dbg !14856
  %idxprom3428 = sext i32 %add3427 to i64, !dbg !14857
  %1706 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14857
  %band_type3429 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1706, i32 0, i32 3, !dbg !14858
  %arrayidx3430 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3429, i64 0, i64 %idxprom3428, !dbg !14857
  store i32 1, i32* %arrayidx3430, align 4, !dbg !14859
  br label %if.end3442, !dbg !14860

if.else3431:                                      ; preds = %if.then3419
  %1707 = load i32, i32* %w, align 4, !dbg !14861
  %mul3432 = mul nsw i32 %1707, 16, !dbg !14863
  %1708 = load i32, i32* %g, align 4, !dbg !14864
  %add3433 = add nsw i32 %mul3432, %1708, !dbg !14865
  %idxprom3434 = sext i32 %add3433 to i64, !dbg !14866
  %1709 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14866
  %zeroes3435 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1709, i32 0, i32 8, !dbg !14867
  %arrayidx3436 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes3435, i64 0, i64 %idxprom3434, !dbg !14866
  store i8 1, i8* %arrayidx3436, align 1, !dbg !14868
  %1710 = load i32, i32* %w, align 4, !dbg !14869
  %mul3437 = mul nsw i32 %1710, 16, !dbg !14870
  %1711 = load i32, i32* %g, align 4, !dbg !14871
  %add3438 = add nsw i32 %mul3437, %1711, !dbg !14872
  %idxprom3439 = sext i32 %add3438 to i64, !dbg !14873
  %1712 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14873
  %band_type3440 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1712, i32 0, i32 3, !dbg !14874
  %arrayidx3441 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3440, i64 0, i64 %idxprom3439, !dbg !14873
  store i32 0, i32* %arrayidx3441, align 4, !dbg !14875
  br label %if.end3442

if.end3442:                                       ; preds = %if.else3431, %if.then3425
  br label %if.end3443, !dbg !14876

if.end3443:                                       ; preds = %if.end3442, %if.then3396
  br label %if.end3450, !dbg !14877

if.else3444:                                      ; preds = %for.body3389
  %1713 = load i32, i32* %w, align 4, !dbg !14878
  %mul3445 = mul nsw i32 %1713, 16, !dbg !14880
  %1714 = load i32, i32* %g, align 4, !dbg !14881
  %add3446 = add nsw i32 %mul3445, %1714, !dbg !14882
  %idxprom3447 = sext i32 %add3446 to i64, !dbg !14883
  %1715 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14883
  %band_type3448 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1715, i32 0, i32 3, !dbg !14884
  %arrayidx3449 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type3448, i64 0, i64 %idxprom3447, !dbg !14883
  store i32 0, i32* %arrayidx3449, align 4, !dbg !14885
  br label %if.end3450

if.end3450:                                       ; preds = %if.else3444, %if.end3443
  %1716 = load i32, i32* %w, align 4, !dbg !14886
  %mul3451 = mul nsw i32 %1716, 16, !dbg !14888
  %1717 = load i32, i32* %g, align 4, !dbg !14889
  %add3452 = add nsw i32 %mul3451, %1717, !dbg !14890
  %idxprom3453 = sext i32 %add3452 to i64, !dbg !14891
  %1718 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14891
  %zeroes3454 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1718, i32 0, i32 8, !dbg !14892
  %arrayidx3455 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes3454, i64 0, i64 %idxprom3453, !dbg !14891
  %1719 = load i8, i8* %arrayidx3455, align 1, !dbg !14891
  %tobool3456 = icmp ne i8 %1719, 0, !dbg !14891
  br i1 %tobool3456, label %if.end3488, label %if.then3457, !dbg !14893

if.then3457:                                      ; preds = %if.end3450
  %1720 = load i32, i32* %prev, align 4, !dbg !14894
  %cmp3458 = icmp ne i32 %1720, -1, !dbg !14897
  br i1 %cmp3458, label %if.then3460, label %if.else3469, !dbg !14898

if.then3460:                                      ; preds = %if.then3457
  call void @llvm.dbg.declare(metadata i32* %sfdiff3461, metadata !14899, metadata !2772), !dbg !14901
  %1721 = load i32, i32* %w, align 4, !dbg !14902
  %mul3462 = mul nsw i32 %1721, 16, !dbg !14903
  %1722 = load i32, i32* %g, align 4, !dbg !14904
  %add3463 = add nsw i32 %mul3462, %1722, !dbg !14905
  %idxprom3464 = sext i32 %add3463 to i64, !dbg !14906
  %1723 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14906
  %sf_idx3465 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1723, i32 0, i32 7, !dbg !14907
  %arrayidx3466 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3465, i64 0, i64 %idxprom3464, !dbg !14906
  %1724 = load i32, i32* %arrayidx3466, align 4, !dbg !14906
  %1725 = load i32, i32* %prev, align 4, !dbg !14908
  %sub3467 = sub nsw i32 %1724, %1725, !dbg !14909
  %add3468 = add nsw i32 %sub3467, 60, !dbg !14910
  store i32 %add3468, i32* %sfdiff3461, align 4, !dbg !14901
  br label %if.end3482, !dbg !14911

if.else3469:                                      ; preds = %if.then3457
  %1726 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14912
  %zeroes3470 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1726, i32 0, i32 8, !dbg !14915
  %arrayidx3471 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes3470, i64 0, i64 0, !dbg !14912
  %1727 = load i8, i8* %arrayidx3471, align 4, !dbg !14912
  %tobool3472 = icmp ne i8 %1727, 0, !dbg !14912
  br i1 %tobool3472, label %if.then3473, label %if.end3481, !dbg !14912

if.then3473:                                      ; preds = %if.else3469
  %1728 = load i32, i32* %w, align 4, !dbg !14916
  %mul3474 = mul nsw i32 %1728, 16, !dbg !14918
  %1729 = load i32, i32* %g, align 4, !dbg !14919
  %add3475 = add nsw i32 %mul3474, %1729, !dbg !14920
  %idxprom3476 = sext i32 %add3475 to i64, !dbg !14921
  %1730 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14921
  %sf_idx3477 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1730, i32 0, i32 7, !dbg !14922
  %arrayidx3478 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3477, i64 0, i64 %idxprom3476, !dbg !14921
  %1731 = load i32, i32* %arrayidx3478, align 4, !dbg !14921
  %1732 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14923
  %sf_idx3479 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1732, i32 0, i32 7, !dbg !14924
  %arrayidx3480 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3479, i64 0, i64 0, !dbg !14923
  store i32 %1731, i32* %arrayidx3480, align 4, !dbg !14925
  br label %if.end3481, !dbg !14926

if.end3481:                                       ; preds = %if.then3473, %if.else3469
  br label %if.end3482

if.end3482:                                       ; preds = %if.end3481, %if.then3460
  %1733 = load i32, i32* %w, align 4, !dbg !14927
  %mul3483 = mul nsw i32 %1733, 16, !dbg !14928
  %1734 = load i32, i32* %g, align 4, !dbg !14929
  %add3484 = add nsw i32 %mul3483, %1734, !dbg !14930
  %idxprom3485 = sext i32 %add3484 to i64, !dbg !14931
  %1735 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14931
  %sf_idx3486 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1735, i32 0, i32 7, !dbg !14932
  %arrayidx3487 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx3486, i64 0, i64 %idxprom3485, !dbg !14931
  %1736 = load i32, i32* %arrayidx3487, align 4, !dbg !14931
  store i32 %1736, i32* %prev, align 4, !dbg !14933
  br label %if.end3488, !dbg !14934

if.end3488:                                       ; preds = %if.end3482, %if.end3450
  br label %for.inc3489, !dbg !14935

for.inc3489:                                      ; preds = %if.end3488
  %1737 = load i32, i32* %g, align 4, !dbg !14936
  %inc3490 = add nsw i32 %1737, 1, !dbg !14936
  store i32 %inc3490, i32* %g, align 4, !dbg !14936
  br label %for.cond3384, !dbg !14938, !llvm.loop !14939

for.end3491:                                      ; preds = %for.cond3384
  br label %for.inc3492, !dbg !14941

for.inc3492:                                      ; preds = %for.end3491
  %1738 = load i32, i32* %w, align 4, !dbg !14942
  %idxprom3493 = sext i32 %1738 to i64, !dbg !14944
  %1739 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14944
  %ics3494 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1739, i32 0, i32 0, !dbg !14945
  %group_len3495 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics3494, i32 0, i32 4, !dbg !14946
  %arrayidx3496 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len3495, i64 0, i64 %idxprom3493, !dbg !14944
  %1740 = load i8, i8* %arrayidx3496, align 1, !dbg !14944
  %conv3497 = zext i8 %1740 to i32, !dbg !14944
  %1741 = load i32, i32* %w, align 4, !dbg !14947
  %add3498 = add nsw i32 %1741, %conv3497, !dbg !14947
  store i32 %add3498, i32* %w, align 4, !dbg !14947
  br label %for.cond3378, !dbg !14948, !llvm.loop !14949

for.end3499:                                      ; preds = %if.then1358, %for.cond3378
  ret void, !dbg !14951
}

; Function Attrs: nounwind uwtable
define internal void @codebook_trellis_rate(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, i32 %win, i32 %group_len, float %lambda) #0 !dbg !14952 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %win.addr = alloca i32, align 4
  %group_len.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %path = alloca [120 x [15 x %struct.TrellisBandCodingPath]], align 16
  %w = alloca i32, align 4
  %swb = alloca i32, align 4
  %cb = alloca i32, align 4
  %start = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_sfb = alloca i32, align 4
  %run_bits = alloca i32, align 4
  %run_esc = alloca i32, align 4
  %idx = alloca i32, align 4
  %ppos = alloca i32, align 4
  %count = alloca i32, align 4
  %stackrun = alloca [120 x i32], align 16
  %stackcb = alloca [120 x i32], align 16
  %stack_len = alloca i32, align 4
  %next_minbits = alloca float, align 4
  %next_mincb = alloca i32, align 4
  %cost_stay_here = alloca float, align 4
  %cost_get_here = alloca float, align 4
  %minbits = alloca float, align 4
  %mincb = alloca i32, align 4
  %startcb = alloca i32, align 4
  %cost_stay_here172 = alloca float, align 4
  %cost_get_here173 = alloca float, align 4
  %bits = alloca float, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !14954, metadata !2772), !dbg !14955
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !14956, metadata !2772), !dbg !14957
  store i32 %win, i32* %win.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %win.addr, metadata !14958, metadata !2772), !dbg !14959
  store i32 %group_len, i32* %group_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_len.addr, metadata !14960, metadata !2772), !dbg !14961
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !14962, metadata !2772), !dbg !14963
  call void @llvm.dbg.declare(metadata [120 x [15 x %struct.TrellisBandCodingPath]]* %path, metadata !14964, metadata !2772), !dbg !14972
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14973, metadata !2772), !dbg !14974
  call void @llvm.dbg.declare(metadata i32* %swb, metadata !14975, metadata !2772), !dbg !14976
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !14977, metadata !2772), !dbg !14978
  call void @llvm.dbg.declare(metadata i32* %start, metadata !14979, metadata !2772), !dbg !14980
  call void @llvm.dbg.declare(metadata i32* %size, metadata !14981, metadata !2772), !dbg !14982
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14983, metadata !2772), !dbg !14984
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14985, metadata !2772), !dbg !14986
  call void @llvm.dbg.declare(metadata i32* %max_sfb, metadata !14987, metadata !2772), !dbg !14988
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14989
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !14990
  %max_sfb1 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 0, !dbg !14991
  %1 = load i8, i8* %max_sfb1, align 32, !dbg !14991
  %conv = zext i8 %1 to i32, !dbg !14989
  store i32 %conv, i32* %max_sfb, align 4, !dbg !14988
  call void @llvm.dbg.declare(metadata i32* %run_bits, metadata !14992, metadata !2772), !dbg !14993
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !14994
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 0, !dbg !14995
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 9, !dbg !14996
  %3 = load i32, i32* %num_windows, align 4, !dbg !14996
  %cmp = icmp eq i32 %3, 1, !dbg !14997
  %cond = select i1 %cmp, i32 5, i32 3, !dbg !14994
  store i32 %cond, i32* %run_bits, align 4, !dbg !14993
  call void @llvm.dbg.declare(metadata i32* %run_esc, metadata !14998, metadata !2772), !dbg !14999
  %4 = load i32, i32* %run_bits, align 4, !dbg !15000
  %shl = shl i32 1, %4, !dbg !15001
  %sub = sub nsw i32 %shl, 1, !dbg !15002
  store i32 %sub, i32* %run_esc, align 4, !dbg !14999
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15003, metadata !2772), !dbg !15004
  call void @llvm.dbg.declare(metadata i32* %ppos, metadata !15005, metadata !2772), !dbg !15006
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15007, metadata !2772), !dbg !15008
  call void @llvm.dbg.declare(metadata [120 x i32]* %stackrun, metadata !15009, metadata !2772), !dbg !15010
  call void @llvm.dbg.declare(metadata [120 x i32]* %stackcb, metadata !15011, metadata !2772), !dbg !15012
  call void @llvm.dbg.declare(metadata i32* %stack_len, metadata !15013, metadata !2772), !dbg !15014
  call void @llvm.dbg.declare(metadata float* %next_minbits, metadata !15015, metadata !2772), !dbg !15016
  store float 0x7FF0000000000000, float* %next_minbits, align 4, !dbg !15016
  call void @llvm.dbg.declare(metadata i32* %next_mincb, metadata !15017, metadata !2772), !dbg !15018
  store i32 0, i32* %next_mincb, align 4, !dbg !15018
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15019
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 32, !dbg !15020
  %6 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !15020
  %7 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15021
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %7, i32 0, i32 29, !dbg !15022
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i32 0, i32 0, !dbg !15021
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15023
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %8, i32 0, i32 14, !dbg !15024
  %arraydecay4 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !15023
  call void %6(float* %arraydecay, float* %arraydecay4, i32 1024), !dbg !15019
  %9 = load i32, i32* %win.addr, align 4, !dbg !15025
  %mul = mul nsw i32 %9, 128, !dbg !15026
  store i32 %mul, i32* %start, align 4, !dbg !15027
  store i32 0, i32* %cb, align 4, !dbg !15028
  br label %for.cond, !dbg !15030

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %cb, align 4, !dbg !15031
  %cmp5 = icmp slt i32 %10, 15, !dbg !15034
  br i1 %cmp5, label %for.body, label %for.end, !dbg !15035

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %run_bits, align 4, !dbg !15036
  %add = add nsw i32 %11, 4, !dbg !15038
  %conv7 = sitofp i32 %add to float, !dbg !15036
  %12 = load i32, i32* %cb, align 4, !dbg !15039
  %idxprom = sext i32 %12 to i64, !dbg !15040
  %arrayidx = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 0, !dbg !15040
  %arrayidx8 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx, i64 0, i64 %idxprom, !dbg !15040
  %cost = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx8, i32 0, i32 1, !dbg !15041
  store float %conv7, float* %cost, align 4, !dbg !15042
  %13 = load i32, i32* %cb, align 4, !dbg !15043
  %idxprom9 = sext i32 %13 to i64, !dbg !15044
  %arrayidx10 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 0, !dbg !15044
  %arrayidx11 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx10, i64 0, i64 %idxprom9, !dbg !15044
  %prev_idx = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx11, i32 0, i32 0, !dbg !15045
  store i32 -1, i32* %prev_idx, align 4, !dbg !15046
  %14 = load i32, i32* %cb, align 4, !dbg !15047
  %idxprom12 = sext i32 %14 to i64, !dbg !15048
  %arrayidx13 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 0, !dbg !15048
  %arrayidx14 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx13, i64 0, i64 %idxprom12, !dbg !15048
  %run = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx14, i32 0, i32 2, !dbg !15049
  store i32 0, i32* %run, align 4, !dbg !15050
  br label %for.inc, !dbg !15051

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %cb, align 4, !dbg !15052
  %inc = add nsw i32 %15, 1, !dbg !15052
  store i32 %inc, i32* %cb, align 4, !dbg !15052
  br label %for.cond, !dbg !15054, !llvm.loop !15055

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %swb, align 4, !dbg !15057
  br label %for.cond15, !dbg !15059

for.cond15:                                       ; preds = %for.inc350, %for.end
  %16 = load i32, i32* %swb, align 4, !dbg !15060
  %17 = load i32, i32* %max_sfb, align 4, !dbg !15063
  %cmp16 = icmp slt i32 %16, %17, !dbg !15064
  br i1 %cmp16, label %for.body18, label %for.end352, !dbg !15065

for.body18:                                       ; preds = %for.cond15
  %18 = load i32, i32* %swb, align 4, !dbg !15066
  %idxprom19 = sext i32 %18 to i64, !dbg !15068
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15068
  %ics20 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 0, !dbg !15069
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics20, i32 0, i32 7, !dbg !15070
  %20 = load i8*, i8** %swb_sizes, align 8, !dbg !15070
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 %idxprom19, !dbg !15068
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !15068
  %conv22 = zext i8 %21 to i32, !dbg !15068
  store i32 %conv22, i32* %size, align 4, !dbg !15071
  %22 = load i32, i32* %win.addr, align 4, !dbg !15072
  %mul23 = mul nsw i32 %22, 16, !dbg !15074
  %23 = load i32, i32* %swb, align 4, !dbg !15075
  %add24 = add nsw i32 %mul23, %23, !dbg !15076
  %idxprom25 = sext i32 %add24 to i64, !dbg !15077
  %24 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15077
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %24, i32 0, i32 8, !dbg !15078
  %arrayidx26 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom25, !dbg !15077
  %25 = load i8, i8* %arrayidx26, align 1, !dbg !15077
  %tobool = icmp ne i8 %25, 0, !dbg !15077
  br i1 %tobool, label %if.then, label %if.else135, !dbg !15079

if.then:                                          ; preds = %for.body18
  call void @llvm.dbg.declare(metadata float* %cost_stay_here, metadata !15080, metadata !2772), !dbg !15082
  %26 = load i32, i32* %swb, align 4, !dbg !15083
  %idxprom27 = sext i32 %26 to i64, !dbg !15084
  %arrayidx28 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom27, !dbg !15084
  %arrayidx29 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx28, i64 0, i64 0, !dbg !15084
  %cost30 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx29, i32 0, i32 1, !dbg !15085
  %27 = load float, float* %cost30, align 4, !dbg !15085
  store float %27, float* %cost_stay_here, align 4, !dbg !15082
  call void @llvm.dbg.declare(metadata float* %cost_get_here, metadata !15086, metadata !2772), !dbg !15087
  %28 = load float, float* %next_minbits, align 4, !dbg !15088
  %29 = load i32, i32* %run_bits, align 4, !dbg !15089
  %conv31 = sitofp i32 %29 to float, !dbg !15089
  %add32 = fadd float %28, %conv31, !dbg !15090
  %add33 = fadd float %add32, 4.000000e+00, !dbg !15091
  store float %add33, float* %cost_get_here, align 4, !dbg !15087
  %30 = load i32, i32* %swb, align 4, !dbg !15092
  %idxprom34 = sext i32 %30 to i64, !dbg !15094
  %arrayidx35 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom34, !dbg !15094
  %arrayidx36 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx35, i64 0, i64 0, !dbg !15094
  %run37 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx36, i32 0, i32 2, !dbg !15095
  %31 = load i32, i32* %run37, align 4, !dbg !15095
  %idxprom38 = sext i32 %31 to i64, !dbg !15096
  %32 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15097
  %ics39 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %32, i32 0, i32 0, !dbg !15098
  %num_windows40 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics39, i32 0, i32 9, !dbg !15099
  %33 = load i32, i32* %num_windows40, align 4, !dbg !15099
  %cmp41 = icmp eq i32 %33, 8, !dbg !15100
  %conv42 = zext i1 %cmp41 to i32, !dbg !15100
  %idxprom43 = sext i32 %conv42 to i64, !dbg !15096
  %arrayidx44 = getelementptr inbounds [2 x i8*], [2 x i8*]* @run_value_bits, i64 0, i64 %idxprom43, !dbg !15096
  %34 = load i8*, i8** %arrayidx44, align 8, !dbg !15096
  %arrayidx45 = getelementptr inbounds i8, i8* %34, i64 %idxprom38, !dbg !15096
  %35 = load i8, i8* %arrayidx45, align 1, !dbg !15096
  %conv46 = zext i8 %35 to i32, !dbg !15096
  %36 = load i32, i32* %swb, align 4, !dbg !15101
  %idxprom47 = sext i32 %36 to i64, !dbg !15102
  %arrayidx48 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom47, !dbg !15102
  %arrayidx49 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx48, i64 0, i64 0, !dbg !15102
  %run50 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx49, i32 0, i32 2, !dbg !15103
  %37 = load i32, i32* %run50, align 4, !dbg !15103
  %add51 = add nsw i32 %37, 1, !dbg !15104
  %idxprom52 = sext i32 %add51 to i64, !dbg !15105
  %38 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15106
  %ics53 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %38, i32 0, i32 0, !dbg !15107
  %num_windows54 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics53, i32 0, i32 9, !dbg !15108
  %39 = load i32, i32* %num_windows54, align 4, !dbg !15108
  %cmp55 = icmp eq i32 %39, 8, !dbg !15109
  %conv56 = zext i1 %cmp55 to i32, !dbg !15109
  %idxprom57 = sext i32 %conv56 to i64, !dbg !15105
  %arrayidx58 = getelementptr inbounds [2 x i8*], [2 x i8*]* @run_value_bits, i64 0, i64 %idxprom57, !dbg !15105
  %40 = load i8*, i8** %arrayidx58, align 8, !dbg !15105
  %arrayidx59 = getelementptr inbounds i8, i8* %40, i64 %idxprom52, !dbg !15105
  %41 = load i8, i8* %arrayidx59, align 1, !dbg !15105
  %conv60 = zext i8 %41 to i32, !dbg !15105
  %cmp61 = icmp ne i32 %conv46, %conv60, !dbg !15110
  br i1 %cmp61, label %if.then63, label %if.end, !dbg !15111

if.then63:                                        ; preds = %if.then
  %42 = load i32, i32* %run_bits, align 4, !dbg !15112
  %conv64 = sitofp i32 %42 to float, !dbg !15112
  %43 = load float, float* %cost_stay_here, align 4, !dbg !15113
  %add65 = fadd float %43, %conv64, !dbg !15113
  store float %add65, float* %cost_stay_here, align 4, !dbg !15113
  br label %if.end, !dbg !15114

if.end:                                           ; preds = %if.then63, %if.then
  %44 = load float, float* %cost_get_here, align 4, !dbg !15115
  %45 = load float, float* %cost_stay_here, align 4, !dbg !15117
  %cmp66 = fcmp olt float %44, %45, !dbg !15118
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !15119

if.then68:                                        ; preds = %if.end
  %46 = load i32, i32* %next_mincb, align 4, !dbg !15120
  %47 = load i32, i32* %swb, align 4, !dbg !15122
  %add69 = add nsw i32 %47, 1, !dbg !15123
  %idxprom70 = sext i32 %add69 to i64, !dbg !15124
  %arrayidx71 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom70, !dbg !15124
  %arrayidx72 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx71, i64 0, i64 0, !dbg !15124
  %prev_idx73 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx72, i32 0, i32 0, !dbg !15125
  store i32 %46, i32* %prev_idx73, align 4, !dbg !15126
  %48 = load float, float* %cost_get_here, align 4, !dbg !15127
  %49 = load i32, i32* %swb, align 4, !dbg !15128
  %add74 = add nsw i32 %49, 1, !dbg !15129
  %idxprom75 = sext i32 %add74 to i64, !dbg !15130
  %arrayidx76 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom75, !dbg !15130
  %arrayidx77 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx76, i64 0, i64 0, !dbg !15130
  %cost78 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx77, i32 0, i32 1, !dbg !15131
  store float %48, float* %cost78, align 4, !dbg !15132
  %50 = load i32, i32* %swb, align 4, !dbg !15133
  %add79 = add nsw i32 %50, 1, !dbg !15134
  %idxprom80 = sext i32 %add79 to i64, !dbg !15135
  %arrayidx81 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom80, !dbg !15135
  %arrayidx82 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx81, i64 0, i64 0, !dbg !15135
  %run83 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx82, i32 0, i32 2, !dbg !15136
  store i32 1, i32* %run83, align 4, !dbg !15137
  br label %if.end104, !dbg !15138

if.else:                                          ; preds = %if.end
  %51 = load i32, i32* %swb, align 4, !dbg !15139
  %add84 = add nsw i32 %51, 1, !dbg !15141
  %idxprom85 = sext i32 %add84 to i64, !dbg !15142
  %arrayidx86 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom85, !dbg !15142
  %arrayidx87 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx86, i64 0, i64 0, !dbg !15142
  %prev_idx88 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx87, i32 0, i32 0, !dbg !15143
  store i32 0, i32* %prev_idx88, align 4, !dbg !15144
  %52 = load float, float* %cost_stay_here, align 4, !dbg !15145
  %53 = load i32, i32* %swb, align 4, !dbg !15146
  %add89 = add nsw i32 %53, 1, !dbg !15147
  %idxprom90 = sext i32 %add89 to i64, !dbg !15148
  %arrayidx91 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom90, !dbg !15148
  %arrayidx92 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx91, i64 0, i64 0, !dbg !15148
  %cost93 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx92, i32 0, i32 1, !dbg !15149
  store float %52, float* %cost93, align 4, !dbg !15150
  %54 = load i32, i32* %swb, align 4, !dbg !15151
  %idxprom94 = sext i32 %54 to i64, !dbg !15152
  %arrayidx95 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom94, !dbg !15152
  %arrayidx96 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx95, i64 0, i64 0, !dbg !15152
  %run97 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx96, i32 0, i32 2, !dbg !15153
  %55 = load i32, i32* %run97, align 4, !dbg !15153
  %add98 = add nsw i32 %55, 1, !dbg !15154
  %56 = load i32, i32* %swb, align 4, !dbg !15155
  %add99 = add nsw i32 %56, 1, !dbg !15156
  %idxprom100 = sext i32 %add99 to i64, !dbg !15157
  %arrayidx101 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom100, !dbg !15157
  %arrayidx102 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx101, i64 0, i64 0, !dbg !15157
  %run103 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx102, i32 0, i32 2, !dbg !15158
  store i32 %add98, i32* %run103, align 4, !dbg !15159
  br label %if.end104

if.end104:                                        ; preds = %if.else, %if.then68
  %57 = load i32, i32* %swb, align 4, !dbg !15160
  %add105 = add nsw i32 %57, 1, !dbg !15161
  %idxprom106 = sext i32 %add105 to i64, !dbg !15162
  %arrayidx107 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom106, !dbg !15162
  %arrayidx108 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx107, i64 0, i64 0, !dbg !15162
  %cost109 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx108, i32 0, i32 1, !dbg !15163
  %58 = load float, float* %cost109, align 4, !dbg !15163
  store float %58, float* %next_minbits, align 4, !dbg !15164
  store i32 0, i32* %next_mincb, align 4, !dbg !15165
  store i32 1, i32* %cb, align 4, !dbg !15166
  br label %for.cond110, !dbg !15168

for.cond110:                                      ; preds = %for.inc132, %if.end104
  %59 = load i32, i32* %cb, align 4, !dbg !15169
  %cmp111 = icmp slt i32 %59, 15, !dbg !15172
  br i1 %cmp111, label %for.body113, label %for.end134, !dbg !15173

for.body113:                                      ; preds = %for.cond110
  %60 = load i32, i32* %cb, align 4, !dbg !15174
  %idxprom114 = sext i32 %60 to i64, !dbg !15176
  %61 = load i32, i32* %swb, align 4, !dbg !15177
  %add115 = add nsw i32 %61, 1, !dbg !15178
  %idxprom116 = sext i32 %add115 to i64, !dbg !15176
  %arrayidx117 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom116, !dbg !15176
  %arrayidx118 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx117, i64 0, i64 %idxprom114, !dbg !15176
  %cost119 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx118, i32 0, i32 1, !dbg !15179
  store float 6.145000e+04, float* %cost119, align 4, !dbg !15180
  %62 = load i32, i32* %cb, align 4, !dbg !15181
  %idxprom120 = sext i32 %62 to i64, !dbg !15182
  %63 = load i32, i32* %swb, align 4, !dbg !15183
  %add121 = add nsw i32 %63, 1, !dbg !15184
  %idxprom122 = sext i32 %add121 to i64, !dbg !15182
  %arrayidx123 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom122, !dbg !15182
  %arrayidx124 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx123, i64 0, i64 %idxprom120, !dbg !15182
  %prev_idx125 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx124, i32 0, i32 0, !dbg !15185
  store i32 -1, i32* %prev_idx125, align 4, !dbg !15186
  %64 = load i32, i32* %cb, align 4, !dbg !15187
  %idxprom126 = sext i32 %64 to i64, !dbg !15188
  %65 = load i32, i32* %swb, align 4, !dbg !15189
  %add127 = add nsw i32 %65, 1, !dbg !15190
  %idxprom128 = sext i32 %add127 to i64, !dbg !15188
  %arrayidx129 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom128, !dbg !15188
  %arrayidx130 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx129, i64 0, i64 %idxprom126, !dbg !15188
  %run131 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx130, i32 0, i32 2, !dbg !15191
  store i32 0, i32* %run131, align 4, !dbg !15192
  br label %for.inc132, !dbg !15193

for.inc132:                                       ; preds = %for.body113
  %66 = load i32, i32* %cb, align 4, !dbg !15194
  %inc133 = add nsw i32 %66, 1, !dbg !15194
  store i32 %inc133, i32* %cb, align 4, !dbg !15194
  br label %for.cond110, !dbg !15196, !llvm.loop !15197

for.end134:                                       ; preds = %for.cond110
  br label %if.end343, !dbg !15199

if.else135:                                       ; preds = %for.body18
  call void @llvm.dbg.declare(metadata float* %minbits, metadata !15200, metadata !2772), !dbg !15202
  %67 = load float, float* %next_minbits, align 4, !dbg !15203
  store float %67, float* %minbits, align 4, !dbg !15202
  call void @llvm.dbg.declare(metadata i32* %mincb, metadata !15204, metadata !2772), !dbg !15205
  %68 = load i32, i32* %next_mincb, align 4, !dbg !15206
  store i32 %68, i32* %mincb, align 4, !dbg !15205
  call void @llvm.dbg.declare(metadata i32* %startcb, metadata !15207, metadata !2772), !dbg !15208
  %69 = load i32, i32* %win.addr, align 4, !dbg !15209
  %mul136 = mul nsw i32 %69, 16, !dbg !15210
  %70 = load i32, i32* %swb, align 4, !dbg !15211
  %add137 = add nsw i32 %mul136, %70, !dbg !15212
  %idxprom138 = sext i32 %add137 to i64, !dbg !15213
  %71 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15213
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %71, i32 0, i32 3, !dbg !15214
  %arrayidx139 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom138, !dbg !15213
  %72 = load i32, i32* %arrayidx139, align 4, !dbg !15213
  store i32 %72, i32* %startcb, align 4, !dbg !15208
  %73 = load i32, i32* %startcb, align 4, !dbg !15215
  %idxprom140 = sext i32 %73 to i64, !dbg !15216
  %arrayidx141 = getelementptr inbounds [16 x i8], [16 x i8]* @aac_cb_in_map, i64 0, i64 %idxprom140, !dbg !15216
  %74 = load i8, i8* %arrayidx141, align 1, !dbg !15216
  %conv142 = zext i8 %74 to i32, !dbg !15216
  store i32 %conv142, i32* %startcb, align 4, !dbg !15217
  store float 0x7FF0000000000000, float* %next_minbits, align 4, !dbg !15218
  store i32 0, i32* %next_mincb, align 4, !dbg !15219
  store i32 0, i32* %cb, align 4, !dbg !15220
  br label %for.cond143, !dbg !15222

for.cond143:                                      ; preds = %for.inc165, %if.else135
  %75 = load i32, i32* %cb, align 4, !dbg !15223
  %76 = load i32, i32* %startcb, align 4, !dbg !15226
  %cmp144 = icmp slt i32 %75, %76, !dbg !15227
  br i1 %cmp144, label %for.body146, label %for.end167, !dbg !15228

for.body146:                                      ; preds = %for.cond143
  %77 = load i32, i32* %cb, align 4, !dbg !15229
  %idxprom147 = sext i32 %77 to i64, !dbg !15231
  %78 = load i32, i32* %swb, align 4, !dbg !15232
  %add148 = add nsw i32 %78, 1, !dbg !15233
  %idxprom149 = sext i32 %add148 to i64, !dbg !15231
  %arrayidx150 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom149, !dbg !15231
  %arrayidx151 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx150, i64 0, i64 %idxprom147, !dbg !15231
  %cost152 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx151, i32 0, i32 1, !dbg !15234
  store float 6.145000e+04, float* %cost152, align 4, !dbg !15235
  %79 = load i32, i32* %cb, align 4, !dbg !15236
  %idxprom153 = sext i32 %79 to i64, !dbg !15237
  %80 = load i32, i32* %swb, align 4, !dbg !15238
  %add154 = add nsw i32 %80, 1, !dbg !15239
  %idxprom155 = sext i32 %add154 to i64, !dbg !15237
  %arrayidx156 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom155, !dbg !15237
  %arrayidx157 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx156, i64 0, i64 %idxprom153, !dbg !15237
  %prev_idx158 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx157, i32 0, i32 0, !dbg !15240
  store i32 -1, i32* %prev_idx158, align 4, !dbg !15241
  %81 = load i32, i32* %cb, align 4, !dbg !15242
  %idxprom159 = sext i32 %81 to i64, !dbg !15243
  %82 = load i32, i32* %swb, align 4, !dbg !15244
  %add160 = add nsw i32 %82, 1, !dbg !15245
  %idxprom161 = sext i32 %add160 to i64, !dbg !15243
  %arrayidx162 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom161, !dbg !15243
  %arrayidx163 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx162, i64 0, i64 %idxprom159, !dbg !15243
  %run164 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx163, i32 0, i32 2, !dbg !15246
  store i32 0, i32* %run164, align 4, !dbg !15247
  br label %for.inc165, !dbg !15248

for.inc165:                                       ; preds = %for.body146
  %83 = load i32, i32* %cb, align 4, !dbg !15249
  %inc166 = add nsw i32 %83, 1, !dbg !15249
  store i32 %inc166, i32* %cb, align 4, !dbg !15249
  br label %for.cond143, !dbg !15251, !llvm.loop !15252

for.end167:                                       ; preds = %for.cond143
  %84 = load i32, i32* %startcb, align 4, !dbg !15254
  store i32 %84, i32* %cb, align 4, !dbg !15256
  br label %for.cond168, !dbg !15257

for.cond168:                                      ; preds = %for.inc340, %for.end167
  %85 = load i32, i32* %cb, align 4, !dbg !15258
  %cmp169 = icmp slt i32 %85, 15, !dbg !15261
  br i1 %cmp169, label %for.body171, label %for.end342, !dbg !15262

for.body171:                                      ; preds = %for.cond168
  call void @llvm.dbg.declare(metadata float* %cost_stay_here172, metadata !15263, metadata !2772), !dbg !15265
  call void @llvm.dbg.declare(metadata float* %cost_get_here173, metadata !15266, metadata !2772), !dbg !15267
  call void @llvm.dbg.declare(metadata float* %bits, metadata !15268, metadata !2772), !dbg !15269
  store float 0.000000e+00, float* %bits, align 4, !dbg !15269
  %86 = load i32, i32* %cb, align 4, !dbg !15270
  %cmp174 = icmp sge i32 %86, 12, !dbg !15272
  br i1 %cmp174, label %land.lhs.true, label %if.end205, !dbg !15273

land.lhs.true:                                    ; preds = %for.body171
  %87 = load i32, i32* %win.addr, align 4, !dbg !15274
  %mul176 = mul nsw i32 %87, 16, !dbg !15276
  %88 = load i32, i32* %swb, align 4, !dbg !15277
  %add177 = add nsw i32 %mul176, %88, !dbg !15278
  %idxprom178 = sext i32 %add177 to i64, !dbg !15279
  %89 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15279
  %band_type179 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %89, i32 0, i32 3, !dbg !15280
  %arrayidx180 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type179, i64 0, i64 %idxprom178, !dbg !15279
  %90 = load i32, i32* %arrayidx180, align 4, !dbg !15279
  %91 = load i32, i32* %cb, align 4, !dbg !15281
  %idxprom181 = sext i32 %91 to i64, !dbg !15282
  %arrayidx182 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom181, !dbg !15282
  %92 = load i8, i8* %arrayidx182, align 1, !dbg !15282
  %conv183 = zext i8 %92 to i32, !dbg !15282
  %cmp184 = icmp ne i32 %90, %conv183, !dbg !15283
  br i1 %cmp184, label %if.then186, label %if.end205, !dbg !15284

if.then186:                                       ; preds = %land.lhs.true
  %93 = load i32, i32* %cb, align 4, !dbg !15285
  %idxprom187 = sext i32 %93 to i64, !dbg !15287
  %94 = load i32, i32* %swb, align 4, !dbg !15288
  %add188 = add nsw i32 %94, 1, !dbg !15289
  %idxprom189 = sext i32 %add188 to i64, !dbg !15287
  %arrayidx190 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom189, !dbg !15287
  %arrayidx191 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx190, i64 0, i64 %idxprom187, !dbg !15287
  %cost192 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx191, i32 0, i32 1, !dbg !15290
  store float 6.145000e+04, float* %cost192, align 4, !dbg !15291
  %95 = load i32, i32* %cb, align 4, !dbg !15292
  %idxprom193 = sext i32 %95 to i64, !dbg !15293
  %96 = load i32, i32* %swb, align 4, !dbg !15294
  %add194 = add nsw i32 %96, 1, !dbg !15295
  %idxprom195 = sext i32 %add194 to i64, !dbg !15293
  %arrayidx196 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom195, !dbg !15293
  %arrayidx197 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx196, i64 0, i64 %idxprom193, !dbg !15293
  %prev_idx198 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx197, i32 0, i32 0, !dbg !15296
  store i32 -1, i32* %prev_idx198, align 4, !dbg !15297
  %97 = load i32, i32* %cb, align 4, !dbg !15298
  %idxprom199 = sext i32 %97 to i64, !dbg !15299
  %98 = load i32, i32* %swb, align 4, !dbg !15300
  %add200 = add nsw i32 %98, 1, !dbg !15301
  %idxprom201 = sext i32 %add200 to i64, !dbg !15299
  %arrayidx202 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom201, !dbg !15299
  %arrayidx203 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx202, i64 0, i64 %idxprom199, !dbg !15299
  %run204 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx203, i32 0, i32 2, !dbg !15302
  store i32 0, i32* %run204, align 4, !dbg !15303
  br label %for.inc340, !dbg !15304

if.end205:                                        ; preds = %land.lhs.true, %for.body171
  store i32 0, i32* %w, align 4, !dbg !15305
  br label %for.cond206, !dbg !15307

for.cond206:                                      ; preds = %for.inc229, %if.end205
  %99 = load i32, i32* %w, align 4, !dbg !15308
  %100 = load i32, i32* %group_len.addr, align 4, !dbg !15311
  %cmp207 = icmp slt i32 %99, %100, !dbg !15312
  br i1 %cmp207, label %for.body209, label %for.end231, !dbg !15313

for.body209:                                      ; preds = %for.cond206
  %101 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15314
  %102 = load i32, i32* %start, align 4, !dbg !15316
  %103 = load i32, i32* %w, align 4, !dbg !15317
  %mul210 = mul nsw i32 %103, 128, !dbg !15318
  %add211 = add nsw i32 %102, %mul210, !dbg !15319
  %idxprom212 = sext i32 %add211 to i64, !dbg !15320
  %104 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15320
  %coeffs213 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %104, i32 0, i32 14, !dbg !15321
  %arrayidx214 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs213, i64 0, i64 %idxprom212, !dbg !15320
  %105 = load i32, i32* %start, align 4, !dbg !15322
  %106 = load i32, i32* %w, align 4, !dbg !15323
  %mul215 = mul nsw i32 %106, 128, !dbg !15324
  %add216 = add nsw i32 %105, %mul215, !dbg !15325
  %idxprom217 = sext i32 %add216 to i64, !dbg !15326
  %107 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15326
  %scoefs218 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %107, i32 0, i32 29, !dbg !15327
  %arrayidx219 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs218, i64 0, i64 %idxprom217, !dbg !15326
  %108 = load i32, i32* %size, align 4, !dbg !15328
  %109 = load i32, i32* %win.addr, align 4, !dbg !15329
  %mul220 = mul nsw i32 %109, 16, !dbg !15330
  %110 = load i32, i32* %swb, align 4, !dbg !15331
  %add221 = add nsw i32 %mul220, %110, !dbg !15332
  %idxprom222 = sext i32 %add221 to i64, !dbg !15333
  %111 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15333
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %111, i32 0, i32 7, !dbg !15334
  %arrayidx223 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom222, !dbg !15333
  %112 = load i32, i32* %arrayidx223, align 4, !dbg !15333
  %113 = load i32, i32* %cb, align 4, !dbg !15335
  %idxprom224 = sext i32 %113 to i64, !dbg !15336
  %arrayidx225 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom224, !dbg !15336
  %114 = load i8, i8* %arrayidx225, align 1, !dbg !15336
  %conv226 = zext i8 %114 to i32, !dbg !15336
  %call = call i32 @quantize_band_cost_bits(%struct.AACEncContext* %101, float* %arrayidx214, float* %arrayidx219, i32 %108, i32 %112, i32 %conv226, float 0.000000e+00, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !15337
  %conv227 = sitofp i32 %call to float, !dbg !15337
  %115 = load float, float* %bits, align 4, !dbg !15338
  %add228 = fadd float %115, %conv227, !dbg !15338
  store float %add228, float* %bits, align 4, !dbg !15338
  br label %for.inc229, !dbg !15339

for.inc229:                                       ; preds = %for.body209
  %116 = load i32, i32* %w, align 4, !dbg !15340
  %inc230 = add nsw i32 %116, 1, !dbg !15340
  store i32 %inc230, i32* %w, align 4, !dbg !15340
  br label %for.cond206, !dbg !15342, !llvm.loop !15343

for.end231:                                       ; preds = %for.cond206
  %117 = load i32, i32* %cb, align 4, !dbg !15345
  %idxprom232 = sext i32 %117 to i64, !dbg !15346
  %118 = load i32, i32* %swb, align 4, !dbg !15347
  %idxprom233 = sext i32 %118 to i64, !dbg !15346
  %arrayidx234 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom233, !dbg !15346
  %arrayidx235 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx234, i64 0, i64 %idxprom232, !dbg !15346
  %cost236 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx235, i32 0, i32 1, !dbg !15348
  %119 = load float, float* %cost236, align 4, !dbg !15348
  %120 = load float, float* %bits, align 4, !dbg !15349
  %add237 = fadd float %119, %120, !dbg !15350
  store float %add237, float* %cost_stay_here172, align 4, !dbg !15351
  %121 = load float, float* %minbits, align 4, !dbg !15352
  %122 = load float, float* %bits, align 4, !dbg !15353
  %add238 = fadd float %121, %122, !dbg !15354
  %123 = load i32, i32* %run_bits, align 4, !dbg !15355
  %conv239 = sitofp i32 %123 to float, !dbg !15355
  %add240 = fadd float %add238, %conv239, !dbg !15356
  %add241 = fadd float %add240, 4.000000e+00, !dbg !15357
  store float %add241, float* %cost_get_here173, align 4, !dbg !15358
  %124 = load i32, i32* %cb, align 4, !dbg !15359
  %idxprom242 = sext i32 %124 to i64, !dbg !15361
  %125 = load i32, i32* %swb, align 4, !dbg !15362
  %idxprom243 = sext i32 %125 to i64, !dbg !15361
  %arrayidx244 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom243, !dbg !15361
  %arrayidx245 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx244, i64 0, i64 %idxprom242, !dbg !15361
  %run246 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx245, i32 0, i32 2, !dbg !15363
  %126 = load i32, i32* %run246, align 4, !dbg !15363
  %idxprom247 = sext i32 %126 to i64, !dbg !15364
  %127 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15365
  %ics248 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %127, i32 0, i32 0, !dbg !15366
  %num_windows249 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics248, i32 0, i32 9, !dbg !15367
  %128 = load i32, i32* %num_windows249, align 4, !dbg !15367
  %cmp250 = icmp eq i32 %128, 8, !dbg !15368
  %conv251 = zext i1 %cmp250 to i32, !dbg !15368
  %idxprom252 = sext i32 %conv251 to i64, !dbg !15364
  %arrayidx253 = getelementptr inbounds [2 x i8*], [2 x i8*]* @run_value_bits, i64 0, i64 %idxprom252, !dbg !15364
  %129 = load i8*, i8** %arrayidx253, align 8, !dbg !15364
  %arrayidx254 = getelementptr inbounds i8, i8* %129, i64 %idxprom247, !dbg !15364
  %130 = load i8, i8* %arrayidx254, align 1, !dbg !15364
  %conv255 = zext i8 %130 to i32, !dbg !15364
  %131 = load i32, i32* %cb, align 4, !dbg !15369
  %idxprom256 = sext i32 %131 to i64, !dbg !15370
  %132 = load i32, i32* %swb, align 4, !dbg !15371
  %idxprom257 = sext i32 %132 to i64, !dbg !15370
  %arrayidx258 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom257, !dbg !15370
  %arrayidx259 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx258, i64 0, i64 %idxprom256, !dbg !15370
  %run260 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx259, i32 0, i32 2, !dbg !15372
  %133 = load i32, i32* %run260, align 4, !dbg !15372
  %add261 = add nsw i32 %133, 1, !dbg !15373
  %idxprom262 = sext i32 %add261 to i64, !dbg !15374
  %134 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15375
  %ics263 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %134, i32 0, i32 0, !dbg !15376
  %num_windows264 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics263, i32 0, i32 9, !dbg !15377
  %135 = load i32, i32* %num_windows264, align 4, !dbg !15377
  %cmp265 = icmp eq i32 %135, 8, !dbg !15378
  %conv266 = zext i1 %cmp265 to i32, !dbg !15378
  %idxprom267 = sext i32 %conv266 to i64, !dbg !15374
  %arrayidx268 = getelementptr inbounds [2 x i8*], [2 x i8*]* @run_value_bits, i64 0, i64 %idxprom267, !dbg !15374
  %136 = load i8*, i8** %arrayidx268, align 8, !dbg !15374
  %arrayidx269 = getelementptr inbounds i8, i8* %136, i64 %idxprom262, !dbg !15374
  %137 = load i8, i8* %arrayidx269, align 1, !dbg !15374
  %conv270 = zext i8 %137 to i32, !dbg !15374
  %cmp271 = icmp ne i32 %conv255, %conv270, !dbg !15379
  br i1 %cmp271, label %if.then273, label %if.end276, !dbg !15380

if.then273:                                       ; preds = %for.end231
  %138 = load i32, i32* %run_bits, align 4, !dbg !15381
  %conv274 = sitofp i32 %138 to float, !dbg !15381
  %139 = load float, float* %cost_stay_here172, align 4, !dbg !15382
  %add275 = fadd float %139, %conv274, !dbg !15382
  store float %add275, float* %cost_stay_here172, align 4, !dbg !15382
  br label %if.end276, !dbg !15383

if.end276:                                        ; preds = %if.then273, %for.end231
  %140 = load float, float* %cost_get_here173, align 4, !dbg !15384
  %141 = load float, float* %cost_stay_here172, align 4, !dbg !15386
  %cmp277 = fcmp olt float %140, %141, !dbg !15387
  br i1 %cmp277, label %if.then279, label %if.else298, !dbg !15388

if.then279:                                       ; preds = %if.end276
  %142 = load i32, i32* %mincb, align 4, !dbg !15389
  %143 = load i32, i32* %cb, align 4, !dbg !15391
  %idxprom280 = sext i32 %143 to i64, !dbg !15392
  %144 = load i32, i32* %swb, align 4, !dbg !15393
  %add281 = add nsw i32 %144, 1, !dbg !15394
  %idxprom282 = sext i32 %add281 to i64, !dbg !15392
  %arrayidx283 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom282, !dbg !15392
  %arrayidx284 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx283, i64 0, i64 %idxprom280, !dbg !15392
  %prev_idx285 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx284, i32 0, i32 0, !dbg !15395
  store i32 %142, i32* %prev_idx285, align 4, !dbg !15396
  %145 = load float, float* %cost_get_here173, align 4, !dbg !15397
  %146 = load i32, i32* %cb, align 4, !dbg !15398
  %idxprom286 = sext i32 %146 to i64, !dbg !15399
  %147 = load i32, i32* %swb, align 4, !dbg !15400
  %add287 = add nsw i32 %147, 1, !dbg !15401
  %idxprom288 = sext i32 %add287 to i64, !dbg !15399
  %arrayidx289 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom288, !dbg !15399
  %arrayidx290 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx289, i64 0, i64 %idxprom286, !dbg !15399
  %cost291 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx290, i32 0, i32 1, !dbg !15402
  store float %145, float* %cost291, align 4, !dbg !15403
  %148 = load i32, i32* %cb, align 4, !dbg !15404
  %idxprom292 = sext i32 %148 to i64, !dbg !15405
  %149 = load i32, i32* %swb, align 4, !dbg !15406
  %add293 = add nsw i32 %149, 1, !dbg !15407
  %idxprom294 = sext i32 %add293 to i64, !dbg !15405
  %arrayidx295 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom294, !dbg !15405
  %arrayidx296 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx295, i64 0, i64 %idxprom292, !dbg !15405
  %run297 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx296, i32 0, i32 2, !dbg !15408
  store i32 1, i32* %run297, align 4, !dbg !15409
  br label %if.end323, !dbg !15410

if.else298:                                       ; preds = %if.end276
  %150 = load i32, i32* %cb, align 4, !dbg !15411
  %151 = load i32, i32* %cb, align 4, !dbg !15413
  %idxprom299 = sext i32 %151 to i64, !dbg !15414
  %152 = load i32, i32* %swb, align 4, !dbg !15415
  %add300 = add nsw i32 %152, 1, !dbg !15416
  %idxprom301 = sext i32 %add300 to i64, !dbg !15414
  %arrayidx302 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom301, !dbg !15414
  %arrayidx303 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx302, i64 0, i64 %idxprom299, !dbg !15414
  %prev_idx304 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx303, i32 0, i32 0, !dbg !15417
  store i32 %150, i32* %prev_idx304, align 4, !dbg !15418
  %153 = load float, float* %cost_stay_here172, align 4, !dbg !15419
  %154 = load i32, i32* %cb, align 4, !dbg !15420
  %idxprom305 = sext i32 %154 to i64, !dbg !15421
  %155 = load i32, i32* %swb, align 4, !dbg !15422
  %add306 = add nsw i32 %155, 1, !dbg !15423
  %idxprom307 = sext i32 %add306 to i64, !dbg !15421
  %arrayidx308 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom307, !dbg !15421
  %arrayidx309 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx308, i64 0, i64 %idxprom305, !dbg !15421
  %cost310 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx309, i32 0, i32 1, !dbg !15424
  store float %153, float* %cost310, align 4, !dbg !15425
  %156 = load i32, i32* %cb, align 4, !dbg !15426
  %idxprom311 = sext i32 %156 to i64, !dbg !15427
  %157 = load i32, i32* %swb, align 4, !dbg !15428
  %idxprom312 = sext i32 %157 to i64, !dbg !15427
  %arrayidx313 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom312, !dbg !15427
  %arrayidx314 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx313, i64 0, i64 %idxprom311, !dbg !15427
  %run315 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx314, i32 0, i32 2, !dbg !15429
  %158 = load i32, i32* %run315, align 4, !dbg !15429
  %add316 = add nsw i32 %158, 1, !dbg !15430
  %159 = load i32, i32* %cb, align 4, !dbg !15431
  %idxprom317 = sext i32 %159 to i64, !dbg !15432
  %160 = load i32, i32* %swb, align 4, !dbg !15433
  %add318 = add nsw i32 %160, 1, !dbg !15434
  %idxprom319 = sext i32 %add318 to i64, !dbg !15432
  %arrayidx320 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom319, !dbg !15432
  %arrayidx321 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx320, i64 0, i64 %idxprom317, !dbg !15432
  %run322 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx321, i32 0, i32 2, !dbg !15435
  store i32 %add316, i32* %run322, align 4, !dbg !15436
  br label %if.end323

if.end323:                                        ; preds = %if.else298, %if.then279
  %161 = load i32, i32* %cb, align 4, !dbg !15437
  %idxprom324 = sext i32 %161 to i64, !dbg !15439
  %162 = load i32, i32* %swb, align 4, !dbg !15440
  %add325 = add nsw i32 %162, 1, !dbg !15441
  %idxprom326 = sext i32 %add325 to i64, !dbg !15439
  %arrayidx327 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom326, !dbg !15439
  %arrayidx328 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx327, i64 0, i64 %idxprom324, !dbg !15439
  %cost329 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx328, i32 0, i32 1, !dbg !15442
  %163 = load float, float* %cost329, align 4, !dbg !15442
  %164 = load float, float* %next_minbits, align 4, !dbg !15443
  %cmp330 = fcmp olt float %163, %164, !dbg !15444
  br i1 %cmp330, label %if.then332, label %if.end339, !dbg !15445

if.then332:                                       ; preds = %if.end323
  %165 = load i32, i32* %cb, align 4, !dbg !15446
  %idxprom333 = sext i32 %165 to i64, !dbg !15448
  %166 = load i32, i32* %swb, align 4, !dbg !15449
  %add334 = add nsw i32 %166, 1, !dbg !15450
  %idxprom335 = sext i32 %add334 to i64, !dbg !15448
  %arrayidx336 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom335, !dbg !15448
  %arrayidx337 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx336, i64 0, i64 %idxprom333, !dbg !15448
  %cost338 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx337, i32 0, i32 1, !dbg !15451
  %167 = load float, float* %cost338, align 4, !dbg !15451
  store float %167, float* %next_minbits, align 4, !dbg !15452
  %168 = load i32, i32* %cb, align 4, !dbg !15453
  store i32 %168, i32* %next_mincb, align 4, !dbg !15454
  br label %if.end339, !dbg !15455

if.end339:                                        ; preds = %if.then332, %if.end323
  br label %for.inc340, !dbg !15456

for.inc340:                                       ; preds = %if.end339, %if.then186
  %169 = load i32, i32* %cb, align 4, !dbg !15457
  %inc341 = add nsw i32 %169, 1, !dbg !15457
  store i32 %inc341, i32* %cb, align 4, !dbg !15457
  br label %for.cond168, !dbg !15459, !llvm.loop !15460

for.end342:                                       ; preds = %for.cond168
  br label %if.end343

if.end343:                                        ; preds = %for.end342, %for.end134
  %170 = load i32, i32* %swb, align 4, !dbg !15462
  %idxprom344 = sext i32 %170 to i64, !dbg !15463
  %171 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15463
  %ics345 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %171, i32 0, i32 0, !dbg !15464
  %swb_sizes346 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics345, i32 0, i32 7, !dbg !15465
  %172 = load i8*, i8** %swb_sizes346, align 8, !dbg !15465
  %arrayidx347 = getelementptr inbounds i8, i8* %172, i64 %idxprom344, !dbg !15463
  %173 = load i8, i8* %arrayidx347, align 1, !dbg !15463
  %conv348 = zext i8 %173 to i32, !dbg !15463
  %174 = load i32, i32* %start, align 4, !dbg !15466
  %add349 = add nsw i32 %174, %conv348, !dbg !15466
  store i32 %add349, i32* %start, align 4, !dbg !15466
  br label %for.inc350, !dbg !15467

for.inc350:                                       ; preds = %if.end343
  %175 = load i32, i32* %swb, align 4, !dbg !15468
  %inc351 = add nsw i32 %175, 1, !dbg !15468
  store i32 %inc351, i32* %swb, align 4, !dbg !15468
  br label %for.cond15, !dbg !15470, !llvm.loop !15471

for.end352:                                       ; preds = %for.cond15
  store i32 0, i32* %stack_len, align 4, !dbg !15473
  store i32 0, i32* %idx, align 4, !dbg !15474
  store i32 1, i32* %cb, align 4, !dbg !15475
  br label %for.cond353, !dbg !15477

for.cond353:                                      ; preds = %for.inc371, %for.end352
  %176 = load i32, i32* %cb, align 4, !dbg !15478
  %cmp354 = icmp slt i32 %176, 15, !dbg !15481
  br i1 %cmp354, label %for.body356, label %for.end373, !dbg !15482

for.body356:                                      ; preds = %for.cond353
  %177 = load i32, i32* %cb, align 4, !dbg !15483
  %idxprom357 = sext i32 %177 to i64, !dbg !15485
  %178 = load i32, i32* %max_sfb, align 4, !dbg !15486
  %idxprom358 = sext i32 %178 to i64, !dbg !15485
  %arrayidx359 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom358, !dbg !15485
  %arrayidx360 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx359, i64 0, i64 %idxprom357, !dbg !15485
  %cost361 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx360, i32 0, i32 1, !dbg !15487
  %179 = load float, float* %cost361, align 4, !dbg !15487
  %180 = load i32, i32* %idx, align 4, !dbg !15488
  %idxprom362 = sext i32 %180 to i64, !dbg !15489
  %181 = load i32, i32* %max_sfb, align 4, !dbg !15490
  %idxprom363 = sext i32 %181 to i64, !dbg !15489
  %arrayidx364 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom363, !dbg !15489
  %arrayidx365 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx364, i64 0, i64 %idxprom362, !dbg !15489
  %cost366 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx365, i32 0, i32 1, !dbg !15491
  %182 = load float, float* %cost366, align 4, !dbg !15491
  %cmp367 = fcmp olt float %179, %182, !dbg !15492
  br i1 %cmp367, label %if.then369, label %if.end370, !dbg !15493

if.then369:                                       ; preds = %for.body356
  %183 = load i32, i32* %cb, align 4, !dbg !15494
  store i32 %183, i32* %idx, align 4, !dbg !15495
  br label %if.end370, !dbg !15496

if.end370:                                        ; preds = %if.then369, %for.body356
  br label %for.inc371, !dbg !15497

for.inc371:                                       ; preds = %if.end370
  %184 = load i32, i32* %cb, align 4, !dbg !15499
  %inc372 = add nsw i32 %184, 1, !dbg !15499
  store i32 %inc372, i32* %cb, align 4, !dbg !15499
  br label %for.cond353, !dbg !15501, !llvm.loop !15502

for.end373:                                       ; preds = %for.cond353
  %185 = load i32, i32* %max_sfb, align 4, !dbg !15504
  store i32 %185, i32* %ppos, align 4, !dbg !15505
  br label %while.cond, !dbg !15506

while.cond:                                       ; preds = %while.body, %for.end373
  %186 = load i32, i32* %ppos, align 4, !dbg !15507
  %cmp374 = icmp sgt i32 %186, 0, !dbg !15509
  br i1 %cmp374, label %while.body, label %while.end, !dbg !15510

while.body:                                       ; preds = %while.cond
  %187 = load i32, i32* %idx, align 4, !dbg !15511
  store i32 %187, i32* %cb, align 4, !dbg !15513
  %188 = load i32, i32* %cb, align 4, !dbg !15514
  %idxprom376 = sext i32 %188 to i64, !dbg !15515
  %189 = load i32, i32* %ppos, align 4, !dbg !15516
  %idxprom377 = sext i32 %189 to i64, !dbg !15515
  %arrayidx378 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom377, !dbg !15515
  %arrayidx379 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx378, i64 0, i64 %idxprom376, !dbg !15515
  %run380 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx379, i32 0, i32 2, !dbg !15517
  %190 = load i32, i32* %run380, align 4, !dbg !15517
  %191 = load i32, i32* %stack_len, align 4, !dbg !15518
  %idxprom381 = sext i32 %191 to i64, !dbg !15519
  %arrayidx382 = getelementptr inbounds [120 x i32], [120 x i32]* %stackrun, i64 0, i64 %idxprom381, !dbg !15519
  store i32 %190, i32* %arrayidx382, align 4, !dbg !15520
  %192 = load i32, i32* %cb, align 4, !dbg !15521
  %193 = load i32, i32* %stack_len, align 4, !dbg !15522
  %idxprom383 = sext i32 %193 to i64, !dbg !15523
  %arrayidx384 = getelementptr inbounds [120 x i32], [120 x i32]* %stackcb, i64 0, i64 %idxprom383, !dbg !15523
  store i32 %192, i32* %arrayidx384, align 4, !dbg !15524
  %194 = load i32, i32* %cb, align 4, !dbg !15525
  %idxprom385 = sext i32 %194 to i64, !dbg !15526
  %195 = load i32, i32* %ppos, align 4, !dbg !15527
  %196 = load i32, i32* %cb, align 4, !dbg !15528
  %idxprom386 = sext i32 %196 to i64, !dbg !15529
  %197 = load i32, i32* %ppos, align 4, !dbg !15530
  %idxprom387 = sext i32 %197 to i64, !dbg !15529
  %arrayidx388 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom387, !dbg !15529
  %arrayidx389 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx388, i64 0, i64 %idxprom386, !dbg !15529
  %run390 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx389, i32 0, i32 2, !dbg !15531
  %198 = load i32, i32* %run390, align 4, !dbg !15531
  %sub391 = sub nsw i32 %195, %198, !dbg !15532
  %add392 = add nsw i32 %sub391, 1, !dbg !15533
  %idxprom393 = sext i32 %add392 to i64, !dbg !15526
  %arrayidx394 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom393, !dbg !15526
  %arrayidx395 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx394, i64 0, i64 %idxprom385, !dbg !15526
  %prev_idx396 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx395, i32 0, i32 0, !dbg !15534
  %199 = load i32, i32* %prev_idx396, align 4, !dbg !15534
  store i32 %199, i32* %idx, align 4, !dbg !15535
  %200 = load i32, i32* %cb, align 4, !dbg !15536
  %idxprom397 = sext i32 %200 to i64, !dbg !15537
  %201 = load i32, i32* %ppos, align 4, !dbg !15538
  %idxprom398 = sext i32 %201 to i64, !dbg !15537
  %arrayidx399 = getelementptr inbounds [120 x [15 x %struct.TrellisBandCodingPath]], [120 x [15 x %struct.TrellisBandCodingPath]]* %path, i64 0, i64 %idxprom398, !dbg !15537
  %arrayidx400 = getelementptr inbounds [15 x %struct.TrellisBandCodingPath], [15 x %struct.TrellisBandCodingPath]* %arrayidx399, i64 0, i64 %idxprom397, !dbg !15537
  %run401 = getelementptr inbounds %struct.TrellisBandCodingPath, %struct.TrellisBandCodingPath* %arrayidx400, i32 0, i32 2, !dbg !15539
  %202 = load i32, i32* %run401, align 4, !dbg !15539
  %203 = load i32, i32* %ppos, align 4, !dbg !15540
  %sub402 = sub nsw i32 %203, %202, !dbg !15540
  store i32 %sub402, i32* %ppos, align 4, !dbg !15540
  %204 = load i32, i32* %stack_len, align 4, !dbg !15541
  %inc403 = add nsw i32 %204, 1, !dbg !15541
  store i32 %inc403, i32* %stack_len, align 4, !dbg !15541
  br label %while.cond, !dbg !15542, !llvm.loop !15544

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %start, align 4, !dbg !15545
  %205 = load i32, i32* %stack_len, align 4, !dbg !15546
  %sub404 = sub nsw i32 %205, 1, !dbg !15548
  store i32 %sub404, i32* %i, align 4, !dbg !15549
  br label %for.cond405, !dbg !15550

for.cond405:                                      ; preds = %for.inc444, %while.end
  %206 = load i32, i32* %i, align 4, !dbg !15551
  %cmp406 = icmp sge i32 %206, 0, !dbg !15554
  br i1 %cmp406, label %for.body408, label %for.end445, !dbg !15555

for.body408:                                      ; preds = %for.cond405
  %207 = load i32, i32* %i, align 4, !dbg !15556
  %idxprom409 = sext i32 %207 to i64, !dbg !15558
  %arrayidx410 = getelementptr inbounds [120 x i32], [120 x i32]* %stackcb, i64 0, i64 %idxprom409, !dbg !15558
  %208 = load i32, i32* %arrayidx410, align 4, !dbg !15558
  %idxprom411 = sext i32 %208 to i64, !dbg !15559
  %arrayidx412 = getelementptr inbounds [15 x i8], [15 x i8]* @aac_cb_out_map, i64 0, i64 %idxprom411, !dbg !15559
  %209 = load i8, i8* %arrayidx412, align 1, !dbg !15559
  %conv413 = zext i8 %209 to i32, !dbg !15559
  store i32 %conv413, i32* %cb, align 4, !dbg !15560
  %210 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15561
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %210, i32 0, i32 2, !dbg !15562
  %211 = load i32, i32* %cb, align 4, !dbg !15563
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %211), !dbg !15564
  %212 = load i32, i32* %i, align 4, !dbg !15565
  %idxprom414 = sext i32 %212 to i64, !dbg !15566
  %arrayidx415 = getelementptr inbounds [120 x i32], [120 x i32]* %stackrun, i64 0, i64 %idxprom414, !dbg !15566
  %213 = load i32, i32* %arrayidx415, align 4, !dbg !15566
  store i32 %213, i32* %count, align 4, !dbg !15567
  %214 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15568
  %zeroes416 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %214, i32 0, i32 8, !dbg !15569
  %arraydecay417 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes416, i32 0, i32 0, !dbg !15568
  %215 = load i32, i32* %win.addr, align 4, !dbg !15570
  %mul418 = mul nsw i32 %215, 16, !dbg !15571
  %idx.ext = sext i32 %mul418 to i64, !dbg !15572
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay417, i64 %idx.ext, !dbg !15572
  %216 = load i32, i32* %start, align 4, !dbg !15573
  %idx.ext419 = sext i32 %216 to i64, !dbg !15574
  %add.ptr420 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext419, !dbg !15574
  %217 = load i32, i32* %cb, align 4, !dbg !15575
  %tobool421 = icmp ne i32 %217, 0, !dbg !15576
  %lnot = xor i1 %tobool421, true, !dbg !15576
  %lnot.ext = zext i1 %lnot to i32, !dbg !15576
  %218 = trunc i32 %lnot.ext to i8, !dbg !15577
  %219 = load i32, i32* %count, align 4, !dbg !15578
  %conv422 = sext i32 %219 to i64, !dbg !15578
  call void @llvm.memset.p0i8.i64(i8* %add.ptr420, i8 %218, i64 %conv422, i32 1, i1 false), !dbg !15577
  store i32 0, i32* %j, align 4, !dbg !15579
  br label %for.cond423, !dbg !15581

for.cond423:                                      ; preds = %for.inc433, %for.body408
  %220 = load i32, i32* %j, align 4, !dbg !15582
  %221 = load i32, i32* %count, align 4, !dbg !15585
  %cmp424 = icmp slt i32 %220, %221, !dbg !15586
  br i1 %cmp424, label %for.body426, label %for.end435, !dbg !15587

for.body426:                                      ; preds = %for.cond423
  %222 = load i32, i32* %cb, align 4, !dbg !15588
  %223 = load i32, i32* %win.addr, align 4, !dbg !15590
  %mul427 = mul nsw i32 %223, 16, !dbg !15591
  %224 = load i32, i32* %start, align 4, !dbg !15592
  %add428 = add nsw i32 %mul427, %224, !dbg !15593
  %idxprom429 = sext i32 %add428 to i64, !dbg !15594
  %225 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15594
  %band_type430 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %225, i32 0, i32 3, !dbg !15595
  %arrayidx431 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type430, i64 0, i64 %idxprom429, !dbg !15594
  store i32 %222, i32* %arrayidx431, align 4, !dbg !15596
  %226 = load i32, i32* %start, align 4, !dbg !15597
  %inc432 = add nsw i32 %226, 1, !dbg !15597
  store i32 %inc432, i32* %start, align 4, !dbg !15597
  br label %for.inc433, !dbg !15598

for.inc433:                                       ; preds = %for.body426
  %227 = load i32, i32* %j, align 4, !dbg !15599
  %inc434 = add nsw i32 %227, 1, !dbg !15599
  store i32 %inc434, i32* %j, align 4, !dbg !15599
  br label %for.cond423, !dbg !15601, !llvm.loop !15602

for.end435:                                       ; preds = %for.cond423
  br label %while.cond436, !dbg !15604

while.cond436:                                    ; preds = %while.body439, %for.end435
  %228 = load i32, i32* %count, align 4, !dbg !15605
  %229 = load i32, i32* %run_esc, align 4, !dbg !15607
  %cmp437 = icmp sge i32 %228, %229, !dbg !15608
  br i1 %cmp437, label %while.body439, label %while.end442, !dbg !15609

while.body439:                                    ; preds = %while.cond436
  %230 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15610
  %pb440 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %230, i32 0, i32 2, !dbg !15612
  %231 = load i32, i32* %run_bits, align 4, !dbg !15613
  %232 = load i32, i32* %run_esc, align 4, !dbg !15614
  call void @put_bits(%struct.PutBitContext* %pb440, i32 %231, i32 %232), !dbg !15615
  %233 = load i32, i32* %run_esc, align 4, !dbg !15616
  %234 = load i32, i32* %count, align 4, !dbg !15617
  %sub441 = sub nsw i32 %234, %233, !dbg !15617
  store i32 %sub441, i32* %count, align 4, !dbg !15617
  br label %while.cond436, !dbg !15618, !llvm.loop !15620

while.end442:                                     ; preds = %while.cond436
  %235 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15621
  %pb443 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %235, i32 0, i32 2, !dbg !15622
  %236 = load i32, i32* %run_bits, align 4, !dbg !15623
  %237 = load i32, i32* %count, align 4, !dbg !15624
  call void @put_bits(%struct.PutBitContext* %pb443, i32 %236, i32 %237), !dbg !15625
  br label %for.inc444, !dbg !15626

for.inc444:                                       ; preds = %while.end442
  %238 = load i32, i32* %i, align 4, !dbg !15627
  %dec = add nsw i32 %238, -1, !dbg !15627
  store i32 %dec, i32* %i, align 4, !dbg !15627
  br label %for.cond405, !dbg !15629, !llvm.loop !15630

for.end445:                                       ; preds = %for.cond405
  ret void, !dbg !15632
}

; Function Attrs: nounwind uwtable
define internal void @search_for_quantizers_fast(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, float %lambda) #0 !dbg !15633 {
entry:
  %retval.i540 = alloca i32, align 4
  %a.addr.i541 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i541, metadata !2767, metadata !2772), !dbg !15634
  %amin.addr.i542 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i542, metadata !2777, metadata !2772), !dbg !15643
  %amax.addr.i543 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i543, metadata !2779, metadata !2772), !dbg !15644
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2767, metadata !2772), !dbg !15645
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2777, metadata !2772), !dbg !15647
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2779, metadata !2772), !dbg !15648
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %lambda.addr = alloca float, align 4
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %destbits = alloca i32, align 4
  %dists = alloca [128 x float], align 16
  %uplims = alloca [128 x float], align 16
  %maxvals = alloca [128 x float], align 16
  %fflag = alloca i32, align 4
  %minscaler = alloca i32, align 4
  %its = alloca i32, align 4
  %allz = alloca i32, align 4
  %minthr = alloca float, align 4
  %nz = alloca i32, align 4
  %uplim = alloca float, align 4
  %energy = alloca float, align 4
  %band = alloca %struct.FFPsyBand*, align 8
  %scaled = alloca float*, align 8
  %tbits = alloca i32, align 4
  %qstep = alloca i32, align 4
  %prev = alloca i32, align 4
  %coefs = alloca float*, align 8
  %scaled217 = alloca float*, align 8
  %bits = alloca i32, align 4
  %cb = alloca i32, align 4
  %dist = alloca float, align 4
  %b = alloca i32, align 4
  %prevsc = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !15649, metadata !2772), !dbg !15650
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !15651, metadata !2772), !dbg !15652
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !15653, metadata !2772), !dbg !15654
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !15655, metadata !2772), !dbg !15656
  call void @llvm.dbg.declare(metadata i32* %start, metadata !15657, metadata !2772), !dbg !15658
  store i32 0, i32* %start, align 4, !dbg !15658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15659, metadata !2772), !dbg !15660
  call void @llvm.dbg.declare(metadata i32* %w, metadata !15661, metadata !2772), !dbg !15662
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !15663, metadata !2772), !dbg !15664
  call void @llvm.dbg.declare(metadata i32* %g, metadata !15665, metadata !2772), !dbg !15666
  call void @llvm.dbg.declare(metadata i32* %destbits, metadata !15667, metadata !2772), !dbg !15668
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !15669
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 9, !dbg !15670
  %1 = load i64, i64* %bit_rate, align 8, !dbg !15670
  %conv = sitofp i64 %1 to double, !dbg !15669
  %mul = fmul double %conv, 1.024000e+03, !dbg !15671
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !15672
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 82, !dbg !15673
  %3 = load i32, i32* %sample_rate, align 8, !dbg !15673
  %conv1 = sitofp i32 %3 to double, !dbg !15672
  %div = fdiv double %mul, %conv1, !dbg !15674
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !15675
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 83, !dbg !15676
  %5 = load i32, i32* %channels, align 4, !dbg !15676
  %conv2 = sitofp i32 %5 to double, !dbg !15675
  %div3 = fdiv double %div, %conv2, !dbg !15677
  %6 = load float, float* %lambda.addr, align 4, !dbg !15678
  %div4 = fdiv float %6, 1.200000e+02, !dbg !15679
  %conv5 = fpext float %div4 to double, !dbg !15680
  %mul6 = fmul double %div3, %conv5, !dbg !15681
  %conv7 = fptosi double %mul6 to i32, !dbg !15669
  store i32 %conv7, i32* %destbits, align 4, !dbg !15668
  call void @llvm.dbg.declare(metadata [128 x float]* %dists, metadata !15682, metadata !2772), !dbg !15683
  %7 = bitcast [128 x float]* %dists to i8*, !dbg !15683
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 512, i32 16, i1 false), !dbg !15683
  call void @llvm.dbg.declare(metadata [128 x float]* %uplims, metadata !15684, metadata !2772), !dbg !15685
  %8 = bitcast [128 x float]* %uplims to i8*, !dbg !15685
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 512, i32 16, i1 false), !dbg !15686
  call void @llvm.dbg.declare(metadata [128 x float]* %maxvals, metadata !15688, metadata !2772), !dbg !15689
  call void @llvm.dbg.declare(metadata i32* %fflag, metadata !15690, metadata !2772), !dbg !15691
  call void @llvm.dbg.declare(metadata i32* %minscaler, metadata !15692, metadata !2772), !dbg !15693
  call void @llvm.dbg.declare(metadata i32* %its, metadata !15694, metadata !2772), !dbg !15695
  store i32 0, i32* %its, align 4, !dbg !15695
  call void @llvm.dbg.declare(metadata i32* %allz, metadata !15696, metadata !2772), !dbg !15697
  store i32 0, i32* %allz, align 4, !dbg !15697
  call void @llvm.dbg.declare(metadata float* %minthr, metadata !15698, metadata !2772), !dbg !15699
  store float 0x7FF0000000000000, float* %minthr, align 4, !dbg !15699
  %9 = load i32, i32* %destbits, align 4, !dbg !15700
  %cmp = icmp sgt i32 %9, 5800, !dbg !15701
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15702

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15703

cond.false:                                       ; preds = %entry
  %10 = load i32, i32* %destbits, align 4, !dbg !15704
  br label %cond.end, !dbg !15706

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 5800, %cond.true ], [ %10, %cond.false ], !dbg !15707
  store i32 %cond, i32* %destbits, align 4, !dbg !15709
  store i32 0, i32* %w, align 4, !dbg !15710
  br label %for.cond, !dbg !15712

for.cond:                                         ; preds = %for.inc75, %cond.end
  %11 = load i32, i32* %w, align 4, !dbg !15713
  %12 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15716
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %12, i32 0, i32 0, !dbg !15717
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !15718
  %13 = load i32, i32* %num_windows, align 4, !dbg !15718
  %cmp9 = icmp slt i32 %11, %13, !dbg !15719
  br i1 %cmp9, label %for.body, label %for.end82, !dbg !15720

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %start, align 4, !dbg !15721
  store i32 0, i32* %g, align 4, !dbg !15723
  br label %for.cond11, !dbg !15725

for.cond11:                                       ; preds = %for.inc72, %for.body
  %14 = load i32, i32* %g, align 4, !dbg !15726
  %15 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15729
  %ics12 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %15, i32 0, i32 0, !dbg !15730
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics12, i32 0, i32 8, !dbg !15731
  %16 = load i32, i32* %num_swb, align 32, !dbg !15731
  %cmp13 = icmp slt i32 %14, %16, !dbg !15732
  br i1 %cmp13, label %for.body15, label %for.end74, !dbg !15733

for.body15:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i32* %nz, metadata !15734, metadata !2772), !dbg !15736
  store i32 0, i32* %nz, align 4, !dbg !15736
  call void @llvm.dbg.declare(metadata float* %uplim, metadata !15737, metadata !2772), !dbg !15738
  store float 0.000000e+00, float* %uplim, align 4, !dbg !15738
  call void @llvm.dbg.declare(metadata float* %energy, metadata !15739, metadata !2772), !dbg !15740
  store float 0.000000e+00, float* %energy, align 4, !dbg !15740
  store i32 0, i32* %w2, align 4, !dbg !15741
  br label %for.cond16, !dbg !15743

for.cond16:                                       ; preds = %for.inc, %for.body15
  %17 = load i32, i32* %w2, align 4, !dbg !15744
  %18 = load i32, i32* %w, align 4, !dbg !15747
  %idxprom = sext i32 %18 to i64, !dbg !15748
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15748
  %ics17 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 0, !dbg !15749
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics17, i32 0, i32 4, !dbg !15750
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !15748
  %20 = load i8, i8* %arrayidx, align 1, !dbg !15748
  %conv18 = zext i8 %20 to i32, !dbg !15748
  %cmp19 = icmp slt i32 %17, %conv18, !dbg !15751
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !15752

for.body21:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band, metadata !15753, metadata !2772), !dbg !15755
  %21 = load i32, i32* %w, align 4, !dbg !15756
  %22 = load i32, i32* %w2, align 4, !dbg !15757
  %add = add nsw i32 %21, %22, !dbg !15758
  %mul22 = mul nsw i32 %add, 16, !dbg !15759
  %23 = load i32, i32* %g, align 4, !dbg !15760
  %add23 = add nsw i32 %mul22, %23, !dbg !15761
  %idxprom24 = sext i32 %add23 to i64, !dbg !15762
  %24 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15763
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %24, i32 0, i32 20, !dbg !15764
  %25 = load i32, i32* %cur_channel, align 32, !dbg !15764
  %idxprom25 = sext i32 %25 to i64, !dbg !15762
  %26 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15762
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %26, i32 0, i32 17, !dbg !15765
  %ch = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !15766
  %27 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch, align 16, !dbg !15766
  %arrayidx26 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %27, i64 %idxprom25, !dbg !15762
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx26, i32 0, i32 0, !dbg !15767
  %arrayidx27 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom24, !dbg !15762
  store %struct.FFPsyBand* %arrayidx27, %struct.FFPsyBand** %band, align 8, !dbg !15755
  %28 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !15768
  %threshold = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %28, i32 0, i32 2, !dbg !15769
  %29 = load float, float* %threshold, align 4, !dbg !15769
  %30 = load float, float* %uplim, align 4, !dbg !15770
  %add28 = fadd float %30, %29, !dbg !15770
  store float %add28, float* %uplim, align 4, !dbg !15770
  %31 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !15771
  %energy29 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %31, i32 0, i32 1, !dbg !15772
  %32 = load float, float* %energy29, align 4, !dbg !15772
  %33 = load float, float* %energy, align 4, !dbg !15773
  %add30 = fadd float %33, %32, !dbg !15773
  store float %add30, float* %energy, align 4, !dbg !15773
  %34 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !15774
  %energy31 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %34, i32 0, i32 1, !dbg !15776
  %35 = load float, float* %energy31, align 4, !dbg !15776
  %36 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !15777
  %threshold32 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %36, i32 0, i32 2, !dbg !15778
  %37 = load float, float* %threshold32, align 4, !dbg !15778
  %cmp33 = fcmp ole float %35, %37, !dbg !15779
  br i1 %cmp33, label %if.then, label %lor.lhs.false, !dbg !15780

lor.lhs.false:                                    ; preds = %for.body21
  %38 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band, align 8, !dbg !15781
  %threshold35 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %38, i32 0, i32 2, !dbg !15783
  %39 = load float, float* %threshold35, align 4, !dbg !15783
  %cmp36 = fcmp oeq float %39, 0.000000e+00, !dbg !15784
  br i1 %cmp36, label %if.then, label %if.end, !dbg !15785

if.then:                                          ; preds = %lor.lhs.false, %for.body21
  %40 = load i32, i32* %w, align 4, !dbg !15786
  %41 = load i32, i32* %w2, align 4, !dbg !15788
  %add38 = add nsw i32 %40, %41, !dbg !15789
  %mul39 = mul nsw i32 %add38, 16, !dbg !15790
  %42 = load i32, i32* %g, align 4, !dbg !15791
  %add40 = add nsw i32 %mul39, %42, !dbg !15792
  %idxprom41 = sext i32 %add40 to i64, !dbg !15793
  %43 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15793
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %43, i32 0, i32 8, !dbg !15794
  %arrayidx42 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom41, !dbg !15793
  store i8 1, i8* %arrayidx42, align 1, !dbg !15795
  br label %for.inc, !dbg !15796

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* %nz, align 4, !dbg !15797
  br label %for.inc, !dbg !15798

for.inc:                                          ; preds = %if.end, %if.then
  %44 = load i32, i32* %w2, align 4, !dbg !15799
  %inc = add nsw i32 %44, 1, !dbg !15799
  store i32 %inc, i32* %w2, align 4, !dbg !15799
  br label %for.cond16, !dbg !15801, !llvm.loop !15802

for.end:                                          ; preds = %for.cond16
  %45 = load float, float* %uplim, align 4, !dbg !15804
  %mul43 = fmul float %45, 5.120000e+02, !dbg !15805
  %46 = load i32, i32* %w, align 4, !dbg !15806
  %mul44 = mul nsw i32 %46, 16, !dbg !15807
  %47 = load i32, i32* %g, align 4, !dbg !15808
  %add45 = add nsw i32 %mul44, %47, !dbg !15809
  %idxprom46 = sext i32 %add45 to i64, !dbg !15810
  %arrayidx47 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom46, !dbg !15810
  store float %mul43, float* %arrayidx47, align 4, !dbg !15811
  %48 = load i32, i32* %w, align 4, !dbg !15812
  %mul48 = mul nsw i32 %48, 16, !dbg !15813
  %49 = load i32, i32* %g, align 4, !dbg !15814
  %add49 = add nsw i32 %mul48, %49, !dbg !15815
  %idxprom50 = sext i32 %add49 to i64, !dbg !15816
  %50 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15816
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %50, i32 0, i32 3, !dbg !15817
  %arrayidx51 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom50, !dbg !15816
  store i32 0, i32* %arrayidx51, align 4, !dbg !15818
  %51 = load i32, i32* %nz, align 4, !dbg !15819
  %tobool = icmp ne i32 %51, 0, !dbg !15820
  %lnot = xor i1 %tobool, true, !dbg !15820
  %lnot.ext = zext i1 %lnot to i32, !dbg !15820
  %conv52 = trunc i32 %lnot.ext to i8, !dbg !15820
  %52 = load i32, i32* %w, align 4, !dbg !15821
  %mul53 = mul nsw i32 %52, 16, !dbg !15822
  %53 = load i32, i32* %g, align 4, !dbg !15823
  %add54 = add nsw i32 %mul53, %53, !dbg !15824
  %idxprom55 = sext i32 %add54 to i64, !dbg !15825
  %54 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15825
  %zeroes56 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %54, i32 0, i32 8, !dbg !15826
  %arrayidx57 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes56, i64 0, i64 %idxprom55, !dbg !15825
  store i8 %conv52, i8* %arrayidx57, align 1, !dbg !15827
  %55 = load i32, i32* %nz, align 4, !dbg !15828
  %tobool58 = icmp ne i32 %55, 0, !dbg !15828
  br i1 %tobool58, label %if.then59, label %if.end66, !dbg !15830

if.then59:                                        ; preds = %for.end
  %56 = load float, float* %minthr, align 4, !dbg !15831
  %57 = load float, float* %uplim, align 4, !dbg !15832
  %cmp60 = fcmp ogt float %56, %57, !dbg !15833
  br i1 %cmp60, label %cond.true62, label %cond.false63, !dbg !15834

cond.true62:                                      ; preds = %if.then59
  %58 = load float, float* %uplim, align 4, !dbg !15835
  br label %cond.end64, !dbg !15837

cond.false63:                                     ; preds = %if.then59
  %59 = load float, float* %minthr, align 4, !dbg !15838
  br label %cond.end64, !dbg !15840

cond.end64:                                       ; preds = %cond.false63, %cond.true62
  %cond65 = phi float [ %58, %cond.true62 ], [ %59, %cond.false63 ], !dbg !15841
  store float %cond65, float* %minthr, align 4, !dbg !15843
  br label %if.end66, !dbg !15844

if.end66:                                         ; preds = %cond.end64, %for.end
  %60 = load i32, i32* %nz, align 4, !dbg !15845
  %61 = load i32, i32* %allz, align 4, !dbg !15846
  %or = or i32 %61, %60, !dbg !15846
  store i32 %or, i32* %allz, align 4, !dbg !15846
  %62 = load i32, i32* %g, align 4, !dbg !15847
  %idxprom67 = sext i32 %62 to i64, !dbg !15848
  %63 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15848
  %ics68 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %63, i32 0, i32 0, !dbg !15849
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics68, i32 0, i32 7, !dbg !15850
  %64 = load i8*, i8** %swb_sizes, align 8, !dbg !15850
  %arrayidx69 = getelementptr inbounds i8, i8* %64, i64 %idxprom67, !dbg !15848
  %65 = load i8, i8* %arrayidx69, align 1, !dbg !15848
  %conv70 = zext i8 %65 to i32, !dbg !15848
  %66 = load i32, i32* %start, align 4, !dbg !15851
  %add71 = add nsw i32 %66, %conv70, !dbg !15851
  store i32 %add71, i32* %start, align 4, !dbg !15851
  br label %for.inc72, !dbg !15852

for.inc72:                                        ; preds = %if.end66
  %67 = load i32, i32* %g, align 4, !dbg !15853
  %inc73 = add nsw i32 %67, 1, !dbg !15853
  store i32 %inc73, i32* %g, align 4, !dbg !15853
  br label %for.cond11, !dbg !15855, !llvm.loop !15856

for.end74:                                        ; preds = %for.cond11
  br label %for.inc75, !dbg !15858

for.inc75:                                        ; preds = %for.end74
  %68 = load i32, i32* %w, align 4, !dbg !15859
  %idxprom76 = sext i32 %68 to i64, !dbg !15861
  %69 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15861
  %ics77 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %69, i32 0, i32 0, !dbg !15862
  %group_len78 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics77, i32 0, i32 4, !dbg !15863
  %arrayidx79 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len78, i64 0, i64 %idxprom76, !dbg !15861
  %70 = load i8, i8* %arrayidx79, align 1, !dbg !15861
  %conv80 = zext i8 %70 to i32, !dbg !15861
  %71 = load i32, i32* %w, align 4, !dbg !15864
  %add81 = add nsw i32 %71, %conv80, !dbg !15864
  store i32 %add81, i32* %w, align 4, !dbg !15864
  br label %for.cond, !dbg !15865, !llvm.loop !15866

for.end82:                                        ; preds = %for.cond
  store i32 0, i32* %w, align 4, !dbg !15868
  br label %for.cond83, !dbg !15870

for.cond83:                                       ; preds = %for.inc136, %for.end82
  %72 = load i32, i32* %w, align 4, !dbg !15871
  %73 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15874
  %ics84 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %73, i32 0, i32 0, !dbg !15875
  %num_windows85 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics84, i32 0, i32 9, !dbg !15876
  %74 = load i32, i32* %num_windows85, align 4, !dbg !15876
  %cmp86 = icmp slt i32 %72, %74, !dbg !15877
  br i1 %cmp86, label %for.body88, label %for.end143, !dbg !15878

for.body88:                                       ; preds = %for.cond83
  store i32 0, i32* %g, align 4, !dbg !15879
  br label %for.cond89, !dbg !15882

for.cond89:                                       ; preds = %for.inc133, %for.body88
  %75 = load i32, i32* %g, align 4, !dbg !15883
  %76 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15886
  %ics90 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %76, i32 0, i32 0, !dbg !15887
  %num_swb91 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics90, i32 0, i32 8, !dbg !15888
  %77 = load i32, i32* %num_swb91, align 32, !dbg !15888
  %cmp92 = icmp slt i32 %75, %77, !dbg !15889
  br i1 %cmp92, label %for.body94, label %for.end135, !dbg !15890

for.body94:                                       ; preds = %for.cond89
  %78 = load i32, i32* %w, align 4, !dbg !15891
  %mul95 = mul nsw i32 %78, 16, !dbg !15894
  %79 = load i32, i32* %g, align 4, !dbg !15895
  %add96 = add nsw i32 %mul95, %79, !dbg !15896
  %idxprom97 = sext i32 %add96 to i64, !dbg !15897
  %80 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15897
  %zeroes98 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %80, i32 0, i32 8, !dbg !15898
  %arrayidx99 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes98, i64 0, i64 %idxprom97, !dbg !15897
  %81 = load i8, i8* %arrayidx99, align 1, !dbg !15897
  %tobool100 = icmp ne i8 %81, 0, !dbg !15897
  br i1 %tobool100, label %if.then101, label %if.end106, !dbg !15899

if.then101:                                       ; preds = %for.body94
  %82 = load i32, i32* %w, align 4, !dbg !15900
  %mul102 = mul nsw i32 %82, 16, !dbg !15902
  %83 = load i32, i32* %g, align 4, !dbg !15903
  %add103 = add nsw i32 %mul102, %83, !dbg !15904
  %idxprom104 = sext i32 %add103 to i64, !dbg !15905
  %84 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15905
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %84, i32 0, i32 7, !dbg !15906
  %arrayidx105 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom104, !dbg !15905
  store i32 140, i32* %arrayidx105, align 4, !dbg !15907
  br label %for.inc133, !dbg !15908

if.end106:                                        ; preds = %for.body94
  %85 = load i32, i32* %w, align 4, !dbg !15909
  %mul107 = mul nsw i32 %85, 16, !dbg !15910
  %86 = load i32, i32* %g, align 4, !dbg !15911
  %add108 = add nsw i32 %mul107, %86, !dbg !15912
  %idxprom109 = sext i32 %add108 to i64, !dbg !15913
  %arrayidx110 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom109, !dbg !15913
  %87 = load float, float* %arrayidx110, align 4, !dbg !15913
  %88 = load float, float* %minthr, align 4, !dbg !15914
  %div111 = fdiv float %87, %88, !dbg !15915
  %call = call float @log2f(float %div111) #9, !dbg !15916
  %mul112 = fmul float %call, 4.000000e+00, !dbg !15917
  %cmp113 = fcmp ogt float %mul112, 5.900000e+01, !dbg !15918
  br i1 %cmp113, label %cond.true115, label %cond.false116, !dbg !15919

cond.true115:                                     ; preds = %if.end106
  br label %cond.end124, !dbg !15920

cond.false116:                                    ; preds = %if.end106
  %89 = load i32, i32* %w, align 4, !dbg !15922
  %mul117 = mul nsw i32 %89, 16, !dbg !15924
  %90 = load i32, i32* %g, align 4, !dbg !15925
  %add118 = add nsw i32 %mul117, %90, !dbg !15926
  %idxprom119 = sext i32 %add118 to i64, !dbg !15927
  %arrayidx120 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom119, !dbg !15927
  %91 = load float, float* %arrayidx120, align 4, !dbg !15927
  %92 = load float, float* %minthr, align 4, !dbg !15928
  %div121 = fdiv float %91, %92, !dbg !15929
  %call122 = call float @log2f(float %div121) #9, !dbg !15930
  %mul123 = fmul float %call122, 4.000000e+00, !dbg !15931
  br label %cond.end124, !dbg !15932

cond.end124:                                      ; preds = %cond.false116, %cond.true115
  %cond125 = phi float [ 5.900000e+01, %cond.true115 ], [ %mul123, %cond.false116 ], !dbg !15933
  %add126 = fadd float 1.400000e+02, %cond125, !dbg !15935
  %conv127 = fptosi float %add126 to i32, !dbg !15936
  %93 = load i32, i32* %w, align 4, !dbg !15937
  %mul128 = mul nsw i32 %93, 16, !dbg !15938
  %94 = load i32, i32* %g, align 4, !dbg !15939
  %add129 = add nsw i32 %mul128, %94, !dbg !15940
  %idxprom130 = sext i32 %add129 to i64, !dbg !15941
  %95 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15941
  %sf_idx131 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %95, i32 0, i32 7, !dbg !15942
  %arrayidx132 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx131, i64 0, i64 %idxprom130, !dbg !15941
  store i32 %conv127, i32* %arrayidx132, align 4, !dbg !15943
  br label %for.inc133, !dbg !15944

for.inc133:                                       ; preds = %cond.end124, %if.then101
  %96 = load i32, i32* %g, align 4, !dbg !15945
  %inc134 = add nsw i32 %96, 1, !dbg !15945
  store i32 %inc134, i32* %g, align 4, !dbg !15945
  br label %for.cond89, !dbg !15947, !llvm.loop !15948

for.end135:                                       ; preds = %for.cond89
  br label %for.inc136, !dbg !15950

for.inc136:                                       ; preds = %for.end135
  %97 = load i32, i32* %w, align 4, !dbg !15951
  %idxprom137 = sext i32 %97 to i64, !dbg !15953
  %98 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15953
  %ics138 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %98, i32 0, i32 0, !dbg !15954
  %group_len139 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics138, i32 0, i32 4, !dbg !15955
  %arrayidx140 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len139, i64 0, i64 %idxprom137, !dbg !15953
  %99 = load i8, i8* %arrayidx140, align 1, !dbg !15953
  %conv141 = zext i8 %99 to i32, !dbg !15953
  %100 = load i32, i32* %w, align 4, !dbg !15956
  %add142 = add nsw i32 %100, %conv141, !dbg !15956
  store i32 %add142, i32* %w, align 4, !dbg !15956
  br label %for.cond83, !dbg !15957, !llvm.loop !15958

for.end143:                                       ; preds = %for.cond83
  %101 = load i32, i32* %allz, align 4, !dbg !15960
  %tobool144 = icmp ne i32 %101, 0, !dbg !15960
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !15962

if.then145:                                       ; preds = %for.end143
  br label %do.end539, !dbg !15963

if.end146:                                        ; preds = %for.end143
  %102 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15964
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %102, i32 0, i32 32, !dbg !15965
  %103 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !15965
  %104 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15966
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %104, i32 0, i32 29, !dbg !15967
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i32 0, i32 0, !dbg !15966
  %105 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15968
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %105, i32 0, i32 14, !dbg !15969
  %arraydecay147 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !15968
  call void %103(float* %arraydecay, float* %arraydecay147, i32 1024), !dbg !15964
  %106 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !15970
  call void @ff_quantize_band_cost_cache_init(%struct.AACEncContext* %106), !dbg !15971
  store i32 0, i32* %w, align 4, !dbg !15972
  br label %for.cond148, !dbg !15974

for.cond148:                                      ; preds = %for.inc187, %if.end146
  %107 = load i32, i32* %w, align 4, !dbg !15975
  %108 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15978
  %ics149 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %108, i32 0, i32 0, !dbg !15979
  %num_windows150 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics149, i32 0, i32 9, !dbg !15980
  %109 = load i32, i32* %num_windows150, align 4, !dbg !15980
  %cmp151 = icmp slt i32 %107, %109, !dbg !15981
  br i1 %cmp151, label %for.body153, label %for.end194, !dbg !15982

for.body153:                                      ; preds = %for.cond148
  %110 = load i32, i32* %w, align 4, !dbg !15983
  %mul154 = mul nsw i32 %110, 128, !dbg !15985
  store i32 %mul154, i32* %start, align 4, !dbg !15986
  store i32 0, i32* %g, align 4, !dbg !15987
  br label %for.cond155, !dbg !15989

for.cond155:                                      ; preds = %for.inc184, %for.body153
  %111 = load i32, i32* %g, align 4, !dbg !15990
  %112 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !15993
  %ics156 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %112, i32 0, i32 0, !dbg !15994
  %num_swb157 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics156, i32 0, i32 8, !dbg !15995
  %113 = load i32, i32* %num_swb157, align 32, !dbg !15995
  %cmp158 = icmp slt i32 %111, %113, !dbg !15996
  br i1 %cmp158, label %for.body160, label %for.end186, !dbg !15997

for.body160:                                      ; preds = %for.cond155
  call void @llvm.dbg.declare(metadata float** %scaled, metadata !15998, metadata !2772), !dbg !16000
  %114 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !16001
  %scoefs161 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %114, i32 0, i32 29, !dbg !16002
  %arraydecay162 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs161, i32 0, i32 0, !dbg !16001
  %115 = load i32, i32* %start, align 4, !dbg !16003
  %idx.ext = sext i32 %115 to i64, !dbg !16004
  %add.ptr = getelementptr inbounds float, float* %arraydecay162, i64 %idx.ext, !dbg !16004
  store float* %add.ptr, float** %scaled, align 8, !dbg !16000
  %116 = load i32, i32* %w, align 4, !dbg !16005
  %idxprom163 = sext i32 %116 to i64, !dbg !16006
  %117 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16006
  %ics164 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %117, i32 0, i32 0, !dbg !16007
  %group_len165 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics164, i32 0, i32 4, !dbg !16008
  %arrayidx166 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len165, i64 0, i64 %idxprom163, !dbg !16006
  %118 = load i8, i8* %arrayidx166, align 1, !dbg !16006
  %conv167 = zext i8 %118 to i32, !dbg !16006
  %119 = load i32, i32* %g, align 4, !dbg !16009
  %idxprom168 = sext i32 %119 to i64, !dbg !16010
  %120 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16010
  %ics169 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %120, i32 0, i32 0, !dbg !16011
  %swb_sizes170 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics169, i32 0, i32 7, !dbg !16012
  %121 = load i8*, i8** %swb_sizes170, align 8, !dbg !16012
  %arrayidx171 = getelementptr inbounds i8, i8* %121, i64 %idxprom168, !dbg !16010
  %122 = load i8, i8* %arrayidx171, align 1, !dbg !16010
  %conv172 = zext i8 %122 to i32, !dbg !16010
  %123 = load float*, float** %scaled, align 8, !dbg !16013
  %call173 = call float @find_max_val(i32 %conv167, i32 %conv172, float* %123), !dbg !16014
  %124 = load i32, i32* %w, align 4, !dbg !16015
  %mul174 = mul nsw i32 %124, 16, !dbg !16016
  %125 = load i32, i32* %g, align 4, !dbg !16017
  %add175 = add nsw i32 %mul174, %125, !dbg !16018
  %idxprom176 = sext i32 %add175 to i64, !dbg !16019
  %arrayidx177 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom176, !dbg !16019
  store float %call173, float* %arrayidx177, align 4, !dbg !16020
  %126 = load i32, i32* %g, align 4, !dbg !16021
  %idxprom178 = sext i32 %126 to i64, !dbg !16022
  %127 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16022
  %ics179 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %127, i32 0, i32 0, !dbg !16023
  %swb_sizes180 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics179, i32 0, i32 7, !dbg !16024
  %128 = load i8*, i8** %swb_sizes180, align 8, !dbg !16024
  %arrayidx181 = getelementptr inbounds i8, i8* %128, i64 %idxprom178, !dbg !16022
  %129 = load i8, i8* %arrayidx181, align 1, !dbg !16022
  %conv182 = zext i8 %129 to i32, !dbg !16022
  %130 = load i32, i32* %start, align 4, !dbg !16025
  %add183 = add nsw i32 %130, %conv182, !dbg !16025
  store i32 %add183, i32* %start, align 4, !dbg !16025
  br label %for.inc184, !dbg !16026

for.inc184:                                       ; preds = %for.body160
  %131 = load i32, i32* %g, align 4, !dbg !16027
  %inc185 = add nsw i32 %131, 1, !dbg !16027
  store i32 %inc185, i32* %g, align 4, !dbg !16027
  br label %for.cond155, !dbg !16029, !llvm.loop !16030

for.end186:                                       ; preds = %for.cond155
  br label %for.inc187, !dbg !16032

for.inc187:                                       ; preds = %for.end186
  %132 = load i32, i32* %w, align 4, !dbg !16033
  %idxprom188 = sext i32 %132 to i64, !dbg !16035
  %133 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16035
  %ics189 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %133, i32 0, i32 0, !dbg !16036
  %group_len190 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics189, i32 0, i32 4, !dbg !16037
  %arrayidx191 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len190, i64 0, i64 %idxprom188, !dbg !16035
  %134 = load i8, i8* %arrayidx191, align 1, !dbg !16035
  %conv192 = zext i8 %134 to i32, !dbg !16035
  %135 = load i32, i32* %w, align 4, !dbg !16038
  %add193 = add nsw i32 %135, %conv192, !dbg !16038
  store i32 %add193, i32* %w, align 4, !dbg !16038
  br label %for.cond148, !dbg !16039, !llvm.loop !16040

for.end194:                                       ; preds = %for.cond148
  br label %do.body, !dbg !16042, !llvm.loop !16043

do.body:                                          ; preds = %land.end, %for.end194
  call void @llvm.dbg.declare(metadata i32* %tbits, metadata !16044, metadata !2772), !dbg !16045
  call void @llvm.dbg.declare(metadata i32* %qstep, metadata !16046, metadata !2772), !dbg !16047
  %136 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16048
  %sf_idx195 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %136, i32 0, i32 7, !dbg !16049
  %arrayidx196 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx195, i64 0, i64 0, !dbg !16048
  %137 = load i32, i32* %arrayidx196, align 4, !dbg !16048
  store i32 %137, i32* %minscaler, align 4, !dbg !16050
  %138 = load i32, i32* %its, align 4, !dbg !16051
  %tobool197 = icmp ne i32 %138, 0, !dbg !16051
  %cond198 = select i1 %tobool197, i32 1, i32 32, !dbg !16051
  store i32 %cond198, i32* %qstep, align 4, !dbg !16052
  br label %do.body199, !dbg !16053, !llvm.loop !16054

do.body199:                                       ; preds = %do.cond, %do.body
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !16055, metadata !2772), !dbg !16057
  store i32 -1, i32* %prev, align 4, !dbg !16057
  store i32 0, i32* %tbits, align 4, !dbg !16058
  store i32 0, i32* %w, align 4, !dbg !16059
  br label %for.cond200, !dbg !16061

for.cond200:                                      ; preds = %for.inc338, %do.body199
  %139 = load i32, i32* %w, align 4, !dbg !16062
  %140 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16065
  %ics201 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %140, i32 0, i32 0, !dbg !16066
  %num_windows202 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics201, i32 0, i32 9, !dbg !16067
  %141 = load i32, i32* %num_windows202, align 4, !dbg !16067
  %cmp203 = icmp slt i32 %139, %141, !dbg !16068
  br i1 %cmp203, label %for.body205, label %for.end345, !dbg !16069

for.body205:                                      ; preds = %for.cond200
  %142 = load i32, i32* %w, align 4, !dbg !16070
  %mul206 = mul nsw i32 %142, 128, !dbg !16072
  store i32 %mul206, i32* %start, align 4, !dbg !16073
  store i32 0, i32* %g, align 4, !dbg !16074
  br label %for.cond207, !dbg !16076

for.cond207:                                      ; preds = %for.inc335, %for.body205
  %143 = load i32, i32* %g, align 4, !dbg !16077
  %144 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16080
  %ics208 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %144, i32 0, i32 0, !dbg !16081
  %num_swb209 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics208, i32 0, i32 8, !dbg !16082
  %145 = load i32, i32* %num_swb209, align 32, !dbg !16082
  %cmp210 = icmp slt i32 %143, %145, !dbg !16083
  br i1 %cmp210, label %for.body212, label %for.end337, !dbg !16084

for.body212:                                      ; preds = %for.cond207
  call void @llvm.dbg.declare(metadata float** %coefs, metadata !16085, metadata !2772), !dbg !16087
  %146 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16088
  %coeffs213 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %146, i32 0, i32 14, !dbg !16089
  %arraydecay214 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs213, i32 0, i32 0, !dbg !16088
  %147 = load i32, i32* %start, align 4, !dbg !16090
  %idx.ext215 = sext i32 %147 to i64, !dbg !16091
  %add.ptr216 = getelementptr inbounds float, float* %arraydecay214, i64 %idx.ext215, !dbg !16091
  store float* %add.ptr216, float** %coefs, align 8, !dbg !16087
  call void @llvm.dbg.declare(metadata float** %scaled217, metadata !16092, metadata !2772), !dbg !16093
  %148 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !16094
  %scoefs218 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %148, i32 0, i32 29, !dbg !16095
  %arraydecay219 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs218, i32 0, i32 0, !dbg !16094
  %149 = load i32, i32* %start, align 4, !dbg !16096
  %idx.ext220 = sext i32 %149 to i64, !dbg !16097
  %add.ptr221 = getelementptr inbounds float, float* %arraydecay219, i64 %idx.ext220, !dbg !16097
  store float* %add.ptr221, float** %scaled217, align 8, !dbg !16093
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !16098, metadata !2772), !dbg !16099
  store i32 0, i32* %bits, align 4, !dbg !16099
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !16100, metadata !2772), !dbg !16101
  call void @llvm.dbg.declare(metadata float* %dist, metadata !16102, metadata !2772), !dbg !16103
  store float 0.000000e+00, float* %dist, align 4, !dbg !16103
  %150 = load i32, i32* %w, align 4, !dbg !16104
  %mul222 = mul nsw i32 %150, 16, !dbg !16106
  %151 = load i32, i32* %g, align 4, !dbg !16107
  %add223 = add nsw i32 %mul222, %151, !dbg !16108
  %idxprom224 = sext i32 %add223 to i64, !dbg !16109
  %152 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16109
  %zeroes225 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %152, i32 0, i32 8, !dbg !16110
  %arrayidx226 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes225, i64 0, i64 %idxprom224, !dbg !16109
  %153 = load i8, i8* %arrayidx226, align 1, !dbg !16109
  %conv227 = zext i8 %153 to i32, !dbg !16109
  %tobool228 = icmp ne i32 %conv227, 0, !dbg !16109
  br i1 %tobool228, label %if.then237, label %lor.lhs.false229, !dbg !16111

lor.lhs.false229:                                 ; preds = %for.body212
  %154 = load i32, i32* %w, align 4, !dbg !16112
  %mul230 = mul nsw i32 %154, 16, !dbg !16114
  %155 = load i32, i32* %g, align 4, !dbg !16115
  %add231 = add nsw i32 %mul230, %155, !dbg !16116
  %idxprom232 = sext i32 %add231 to i64, !dbg !16117
  %156 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16117
  %sf_idx233 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %156, i32 0, i32 7, !dbg !16118
  %arrayidx234 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx233, i64 0, i64 %idxprom232, !dbg !16117
  %157 = load i32, i32* %arrayidx234, align 4, !dbg !16117
  %cmp235 = icmp sge i32 %157, 218, !dbg !16119
  br i1 %cmp235, label %if.then237, label %if.end244, !dbg !16120

if.then237:                                       ; preds = %lor.lhs.false229, %for.body212
  %158 = load i32, i32* %g, align 4, !dbg !16121
  %idxprom238 = sext i32 %158 to i64, !dbg !16123
  %159 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16123
  %ics239 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %159, i32 0, i32 0, !dbg !16124
  %swb_sizes240 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics239, i32 0, i32 7, !dbg !16125
  %160 = load i8*, i8** %swb_sizes240, align 8, !dbg !16125
  %arrayidx241 = getelementptr inbounds i8, i8* %160, i64 %idxprom238, !dbg !16123
  %161 = load i8, i8* %arrayidx241, align 1, !dbg !16123
  %conv242 = zext i8 %161 to i32, !dbg !16123
  %162 = load i32, i32* %start, align 4, !dbg !16126
  %add243 = add nsw i32 %162, %conv242, !dbg !16126
  store i32 %add243, i32* %start, align 4, !dbg !16126
  br label %for.inc335, !dbg !16127

if.end244:                                        ; preds = %lor.lhs.false229
  %163 = load i32, i32* %minscaler, align 4, !dbg !16128
  %164 = load i32, i32* %w, align 4, !dbg !16129
  %mul245 = mul nsw i32 %164, 16, !dbg !16130
  %165 = load i32, i32* %g, align 4, !dbg !16131
  %add246 = add nsw i32 %mul245, %165, !dbg !16132
  %idxprom247 = sext i32 %add246 to i64, !dbg !16133
  %166 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16133
  %sf_idx248 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %166, i32 0, i32 7, !dbg !16134
  %arrayidx249 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx248, i64 0, i64 %idxprom247, !dbg !16133
  %167 = load i32, i32* %arrayidx249, align 4, !dbg !16133
  %cmp250 = icmp sgt i32 %163, %167, !dbg !16135
  br i1 %cmp250, label %cond.true252, label %cond.false258, !dbg !16136

cond.true252:                                     ; preds = %if.end244
  %168 = load i32, i32* %w, align 4, !dbg !16137
  %mul253 = mul nsw i32 %168, 16, !dbg !16139
  %169 = load i32, i32* %g, align 4, !dbg !16140
  %add254 = add nsw i32 %mul253, %169, !dbg !16141
  %idxprom255 = sext i32 %add254 to i64, !dbg !16142
  %170 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16142
  %sf_idx256 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %170, i32 0, i32 7, !dbg !16143
  %arrayidx257 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx256, i64 0, i64 %idxprom255, !dbg !16142
  %171 = load i32, i32* %arrayidx257, align 4, !dbg !16142
  br label %cond.end259, !dbg !16144

cond.false258:                                    ; preds = %if.end244
  %172 = load i32, i32* %minscaler, align 4, !dbg !16145
  br label %cond.end259, !dbg !16147

cond.end259:                                      ; preds = %cond.false258, %cond.true252
  %cond260 = phi i32 [ %171, %cond.true252 ], [ %172, %cond.false258 ], !dbg !16148
  store i32 %cond260, i32* %minscaler, align 4, !dbg !16150
  %173 = load i32, i32* %w, align 4, !dbg !16151
  %mul261 = mul nsw i32 %173, 16, !dbg !16152
  %174 = load i32, i32* %g, align 4, !dbg !16153
  %add262 = add nsw i32 %mul261, %174, !dbg !16154
  %idxprom263 = sext i32 %add262 to i64, !dbg !16155
  %arrayidx264 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom263, !dbg !16155
  %175 = load float, float* %arrayidx264, align 4, !dbg !16155
  %176 = load i32, i32* %w, align 4, !dbg !16156
  %mul265 = mul nsw i32 %176, 16, !dbg !16157
  %177 = load i32, i32* %g, align 4, !dbg !16158
  %add266 = add nsw i32 %mul265, %177, !dbg !16159
  %idxprom267 = sext i32 %add266 to i64, !dbg !16160
  %178 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16160
  %sf_idx268 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %178, i32 0, i32 7, !dbg !16161
  %arrayidx269 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx268, i64 0, i64 %idxprom267, !dbg !16160
  %179 = load i32, i32* %arrayidx269, align 4, !dbg !16160
  %call270 = call i32 @find_min_book(float %175, i32 %179), !dbg !16162
  store i32 %call270, i32* %cb, align 4, !dbg !16163
  store i32 0, i32* %w2, align 4, !dbg !16164
  br label %for.cond271, !dbg !16166

for.cond271:                                      ; preds = %for.inc300, %cond.end259
  %180 = load i32, i32* %w2, align 4, !dbg !16167
  %181 = load i32, i32* %w, align 4, !dbg !16170
  %idxprom272 = sext i32 %181 to i64, !dbg !16171
  %182 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16171
  %ics273 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %182, i32 0, i32 0, !dbg !16172
  %group_len274 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics273, i32 0, i32 4, !dbg !16173
  %arrayidx275 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len274, i64 0, i64 %idxprom272, !dbg !16171
  %183 = load i8, i8* %arrayidx275, align 1, !dbg !16171
  %conv276 = zext i8 %183 to i32, !dbg !16171
  %cmp277 = icmp slt i32 %180, %conv276, !dbg !16174
  br i1 %cmp277, label %for.body279, label %for.end302, !dbg !16175

for.body279:                                      ; preds = %for.cond271
  call void @llvm.dbg.declare(metadata i32* %b, metadata !16176, metadata !2772), !dbg !16178
  %184 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !16179
  %185 = load i32, i32* %w, align 4, !dbg !16180
  %186 = load i32, i32* %w2, align 4, !dbg !16181
  %add280 = add nsw i32 %185, %186, !dbg !16182
  %187 = load i32, i32* %g, align 4, !dbg !16183
  %188 = load float*, float** %coefs, align 8, !dbg !16184
  %189 = load i32, i32* %w2, align 4, !dbg !16185
  %mul281 = mul nsw i32 %189, 128, !dbg !16186
  %idx.ext282 = sext i32 %mul281 to i64, !dbg !16187
  %add.ptr283 = getelementptr inbounds float, float* %188, i64 %idx.ext282, !dbg !16187
  %190 = load float*, float** %scaled217, align 8, !dbg !16188
  %191 = load i32, i32* %w2, align 4, !dbg !16189
  %mul284 = mul nsw i32 %191, 128, !dbg !16190
  %idx.ext285 = sext i32 %mul284 to i64, !dbg !16191
  %add.ptr286 = getelementptr inbounds float, float* %190, i64 %idx.ext285, !dbg !16191
  %192 = load i32, i32* %g, align 4, !dbg !16192
  %idxprom287 = sext i32 %192 to i64, !dbg !16193
  %193 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16193
  %ics288 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %193, i32 0, i32 0, !dbg !16194
  %swb_sizes289 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics288, i32 0, i32 7, !dbg !16195
  %194 = load i8*, i8** %swb_sizes289, align 8, !dbg !16195
  %arrayidx290 = getelementptr inbounds i8, i8* %194, i64 %idxprom287, !dbg !16193
  %195 = load i8, i8* %arrayidx290, align 1, !dbg !16193
  %conv291 = zext i8 %195 to i32, !dbg !16193
  %196 = load i32, i32* %w, align 4, !dbg !16196
  %mul292 = mul nsw i32 %196, 16, !dbg !16197
  %197 = load i32, i32* %g, align 4, !dbg !16198
  %add293 = add nsw i32 %mul292, %197, !dbg !16199
  %idxprom294 = sext i32 %add293 to i64, !dbg !16200
  %198 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16200
  %sf_idx295 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %198, i32 0, i32 7, !dbg !16201
  %arrayidx296 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx295, i64 0, i64 %idxprom294, !dbg !16200
  %199 = load i32, i32* %arrayidx296, align 4, !dbg !16200
  %200 = load i32, i32* %cb, align 4, !dbg !16202
  %call297 = call float @quantize_band_cost_cached(%struct.AACEncContext* %184, i32 %add280, i32 %187, float* %add.ptr283, float* %add.ptr286, i32 %conv291, i32 %199, i32 %200, float 1.000000e+00, float 0x7FF0000000000000, i32* %b, float* null, i32 0), !dbg !16203
  %201 = load float, float* %dist, align 4, !dbg !16204
  %add298 = fadd float %201, %call297, !dbg !16204
  store float %add298, float* %dist, align 4, !dbg !16204
  %202 = load i32, i32* %b, align 4, !dbg !16205
  %203 = load i32, i32* %bits, align 4, !dbg !16206
  %add299 = add nsw i32 %203, %202, !dbg !16206
  store i32 %add299, i32* %bits, align 4, !dbg !16206
  br label %for.inc300, !dbg !16207

for.inc300:                                       ; preds = %for.body279
  %204 = load i32, i32* %w2, align 4, !dbg !16208
  %inc301 = add nsw i32 %204, 1, !dbg !16208
  store i32 %inc301, i32* %w2, align 4, !dbg !16208
  br label %for.cond271, !dbg !16210, !llvm.loop !16211

for.end302:                                       ; preds = %for.cond271
  %205 = load float, float* %dist, align 4, !dbg !16213
  %206 = load i32, i32* %bits, align 4, !dbg !16214
  %conv303 = sitofp i32 %206 to float, !dbg !16214
  %sub = fsub float %205, %conv303, !dbg !16215
  %207 = load i32, i32* %w, align 4, !dbg !16216
  %mul304 = mul nsw i32 %207, 16, !dbg !16217
  %208 = load i32, i32* %g, align 4, !dbg !16218
  %add305 = add nsw i32 %mul304, %208, !dbg !16219
  %idxprom306 = sext i32 %add305 to i64, !dbg !16220
  %arrayidx307 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom306, !dbg !16220
  store float %sub, float* %arrayidx307, align 4, !dbg !16221
  %209 = load i32, i32* %prev, align 4, !dbg !16222
  %cmp308 = icmp ne i32 %209, -1, !dbg !16224
  br i1 %cmp308, label %if.then310, label %if.end322, !dbg !16225

if.then310:                                       ; preds = %for.end302
  %210 = load i32, i32* %w, align 4, !dbg !16226
  %mul311 = mul nsw i32 %210, 16, !dbg !16228
  %211 = load i32, i32* %g, align 4, !dbg !16229
  %add312 = add nsw i32 %mul311, %211, !dbg !16230
  %idxprom313 = sext i32 %add312 to i64, !dbg !16231
  %212 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16231
  %sf_idx314 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %212, i32 0, i32 7, !dbg !16232
  %arrayidx315 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx314, i64 0, i64 %idxprom313, !dbg !16231
  %213 = load i32, i32* %arrayidx315, align 4, !dbg !16231
  %214 = load i32, i32* %prev, align 4, !dbg !16233
  %sub316 = sub nsw i32 %213, %214, !dbg !16234
  %add317 = add nsw i32 %sub316, 60, !dbg !16235
  %idxprom318 = sext i32 %add317 to i64, !dbg !16236
  %arrayidx319 = getelementptr inbounds [121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i64 0, i64 %idxprom318, !dbg !16236
  %215 = load i8, i8* %arrayidx319, align 1, !dbg !16236
  %conv320 = zext i8 %215 to i32, !dbg !16236
  %216 = load i32, i32* %bits, align 4, !dbg !16237
  %add321 = add nsw i32 %216, %conv320, !dbg !16237
  store i32 %add321, i32* %bits, align 4, !dbg !16237
  br label %if.end322, !dbg !16238

if.end322:                                        ; preds = %if.then310, %for.end302
  %217 = load i32, i32* %bits, align 4, !dbg !16239
  %218 = load i32, i32* %tbits, align 4, !dbg !16240
  %add323 = add nsw i32 %218, %217, !dbg !16240
  store i32 %add323, i32* %tbits, align 4, !dbg !16240
  %219 = load i32, i32* %g, align 4, !dbg !16241
  %idxprom324 = sext i32 %219 to i64, !dbg !16242
  %220 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16242
  %ics325 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %220, i32 0, i32 0, !dbg !16243
  %swb_sizes326 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics325, i32 0, i32 7, !dbg !16244
  %221 = load i8*, i8** %swb_sizes326, align 8, !dbg !16244
  %arrayidx327 = getelementptr inbounds i8, i8* %221, i64 %idxprom324, !dbg !16242
  %222 = load i8, i8* %arrayidx327, align 1, !dbg !16242
  %conv328 = zext i8 %222 to i32, !dbg !16242
  %223 = load i32, i32* %start, align 4, !dbg !16245
  %add329 = add nsw i32 %223, %conv328, !dbg !16245
  store i32 %add329, i32* %start, align 4, !dbg !16245
  %224 = load i32, i32* %w, align 4, !dbg !16246
  %mul330 = mul nsw i32 %224, 16, !dbg !16247
  %225 = load i32, i32* %g, align 4, !dbg !16248
  %add331 = add nsw i32 %mul330, %225, !dbg !16249
  %idxprom332 = sext i32 %add331 to i64, !dbg !16250
  %226 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16250
  %sf_idx333 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %226, i32 0, i32 7, !dbg !16251
  %arrayidx334 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx333, i64 0, i64 %idxprom332, !dbg !16250
  %227 = load i32, i32* %arrayidx334, align 4, !dbg !16250
  store i32 %227, i32* %prev, align 4, !dbg !16252
  br label %for.inc335, !dbg !16253

for.inc335:                                       ; preds = %if.end322, %if.then237
  %228 = load i32, i32* %g, align 4, !dbg !16254
  %inc336 = add nsw i32 %228, 1, !dbg !16254
  store i32 %inc336, i32* %g, align 4, !dbg !16254
  br label %for.cond207, !dbg !16256, !llvm.loop !16257

for.end337:                                       ; preds = %for.cond207
  br label %for.inc338, !dbg !16259

for.inc338:                                       ; preds = %for.end337
  %229 = load i32, i32* %w, align 4, !dbg !16260
  %idxprom339 = sext i32 %229 to i64, !dbg !16262
  %230 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16262
  %ics340 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %230, i32 0, i32 0, !dbg !16263
  %group_len341 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics340, i32 0, i32 4, !dbg !16264
  %arrayidx342 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len341, i64 0, i64 %idxprom339, !dbg !16262
  %231 = load i8, i8* %arrayidx342, align 1, !dbg !16262
  %conv343 = zext i8 %231 to i32, !dbg !16262
  %232 = load i32, i32* %w, align 4, !dbg !16265
  %add344 = add nsw i32 %232, %conv343, !dbg !16265
  store i32 %add344, i32* %w, align 4, !dbg !16265
  br label %for.cond200, !dbg !16266, !llvm.loop !16267

for.end345:                                       ; preds = %for.cond200
  %233 = load i32, i32* %tbits, align 4, !dbg !16269
  %234 = load i32, i32* %destbits, align 4, !dbg !16271
  %cmp346 = icmp sgt i32 %233, %234, !dbg !16272
  br i1 %cmp346, label %if.then348, label %if.else, !dbg !16273

if.then348:                                       ; preds = %for.end345
  store i32 0, i32* %i, align 4, !dbg !16274
  br label %for.cond349, !dbg !16277

for.cond349:                                      ; preds = %for.inc365, %if.then348
  %235 = load i32, i32* %i, align 4, !dbg !16278
  %cmp350 = icmp slt i32 %235, 128, !dbg !16281
  br i1 %cmp350, label %for.body352, label %for.end367, !dbg !16282

for.body352:                                      ; preds = %for.cond349
  %236 = load i32, i32* %i, align 4, !dbg !16283
  %idxprom353 = sext i32 %236 to i64, !dbg !16285
  %237 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16285
  %sf_idx354 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %237, i32 0, i32 7, !dbg !16286
  %arrayidx355 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx354, i64 0, i64 %idxprom353, !dbg !16285
  %238 = load i32, i32* %arrayidx355, align 4, !dbg !16285
  %239 = load i32, i32* %qstep, align 4, !dbg !16287
  %sub356 = sub nsw i32 218, %239, !dbg !16288
  %cmp357 = icmp slt i32 %238, %sub356, !dbg !16289
  br i1 %cmp357, label %if.then359, label %if.end364, !dbg !16290

if.then359:                                       ; preds = %for.body352
  %240 = load i32, i32* %qstep, align 4, !dbg !16291
  %241 = load i32, i32* %i, align 4, !dbg !16292
  %idxprom360 = sext i32 %241 to i64, !dbg !16293
  %242 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16293
  %sf_idx361 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %242, i32 0, i32 7, !dbg !16294
  %arrayidx362 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx361, i64 0, i64 %idxprom360, !dbg !16293
  %243 = load i32, i32* %arrayidx362, align 4, !dbg !16295
  %add363 = add nsw i32 %243, %240, !dbg !16295
  store i32 %add363, i32* %arrayidx362, align 4, !dbg !16295
  br label %if.end364, !dbg !16293

if.end364:                                        ; preds = %if.then359, %for.body352
  br label %for.inc365, !dbg !16296

for.inc365:                                       ; preds = %if.end364
  %244 = load i32, i32* %i, align 4, !dbg !16298
  %inc366 = add nsw i32 %244, 1, !dbg !16298
  store i32 %inc366, i32* %i, align 4, !dbg !16298
  br label %for.cond349, !dbg !16300, !llvm.loop !16301

for.end367:                                       ; preds = %for.cond349
  br label %if.end387, !dbg !16303

if.else:                                          ; preds = %for.end345
  store i32 0, i32* %i, align 4, !dbg !16304
  br label %for.cond368, !dbg !16307

for.cond368:                                      ; preds = %for.inc384, %if.else
  %245 = load i32, i32* %i, align 4, !dbg !16308
  %cmp369 = icmp slt i32 %245, 128, !dbg !16311
  br i1 %cmp369, label %for.body371, label %for.end386, !dbg !16312

for.body371:                                      ; preds = %for.cond368
  %246 = load i32, i32* %i, align 4, !dbg !16313
  %idxprom372 = sext i32 %246 to i64, !dbg !16315
  %247 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16315
  %sf_idx373 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %247, i32 0, i32 7, !dbg !16316
  %arrayidx374 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx373, i64 0, i64 %idxprom372, !dbg !16315
  %248 = load i32, i32* %arrayidx374, align 4, !dbg !16315
  %249 = load i32, i32* %qstep, align 4, !dbg !16317
  %sub375 = sub nsw i32 60, %249, !dbg !16318
  %cmp376 = icmp sgt i32 %248, %sub375, !dbg !16319
  br i1 %cmp376, label %if.then378, label %if.end383, !dbg !16320

if.then378:                                       ; preds = %for.body371
  %250 = load i32, i32* %qstep, align 4, !dbg !16321
  %251 = load i32, i32* %i, align 4, !dbg !16322
  %idxprom379 = sext i32 %251 to i64, !dbg !16323
  %252 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16323
  %sf_idx380 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %252, i32 0, i32 7, !dbg !16324
  %arrayidx381 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx380, i64 0, i64 %idxprom379, !dbg !16323
  %253 = load i32, i32* %arrayidx381, align 4, !dbg !16325
  %sub382 = sub nsw i32 %253, %250, !dbg !16325
  store i32 %sub382, i32* %arrayidx381, align 4, !dbg !16325
  br label %if.end383, !dbg !16323

if.end383:                                        ; preds = %if.then378, %for.body371
  br label %for.inc384, !dbg !16326

for.inc384:                                       ; preds = %if.end383
  %254 = load i32, i32* %i, align 4, !dbg !16328
  %inc385 = add nsw i32 %254, 1, !dbg !16328
  store i32 %inc385, i32* %i, align 4, !dbg !16328
  br label %for.cond368, !dbg !16330, !llvm.loop !16331

for.end386:                                       ; preds = %for.cond368
  br label %if.end387

if.end387:                                        ; preds = %for.end386, %for.end367
  %255 = load i32, i32* %qstep, align 4, !dbg !16333
  %shr = ashr i32 %255, 1, !dbg !16333
  store i32 %shr, i32* %qstep, align 4, !dbg !16333
  %256 = load i32, i32* %qstep, align 4, !dbg !16334
  %tobool388 = icmp ne i32 %256, 0, !dbg !16334
  br i1 %tobool388, label %if.end400, label %land.lhs.true, !dbg !16336

land.lhs.true:                                    ; preds = %if.end387
  %257 = load i32, i32* %tbits, align 4, !dbg !16337
  %conv389 = sitofp i32 %257 to double, !dbg !16337
  %258 = load i32, i32* %destbits, align 4, !dbg !16339
  %conv390 = sitofp i32 %258 to double, !dbg !16339
  %mul391 = fmul double %conv390, 1.020000e+00, !dbg !16340
  %cmp392 = fcmp ogt double %conv389, %mul391, !dbg !16341
  br i1 %cmp392, label %land.lhs.true394, label %if.end400, !dbg !16342

land.lhs.true394:                                 ; preds = %land.lhs.true
  %259 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16343
  %sf_idx395 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %259, i32 0, i32 7, !dbg !16345
  %arrayidx396 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx395, i64 0, i64 0, !dbg !16343
  %260 = load i32, i32* %arrayidx396, align 4, !dbg !16343
  %cmp397 = icmp slt i32 %260, 217, !dbg !16346
  br i1 %cmp397, label %if.then399, label %if.end400, !dbg !16347

if.then399:                                       ; preds = %land.lhs.true394
  store i32 1, i32* %qstep, align 4, !dbg !16348
  br label %if.end400, !dbg !16349

if.end400:                                        ; preds = %if.then399, %land.lhs.true394, %land.lhs.true, %if.end387
  br label %do.cond, !dbg !16350

do.cond:                                          ; preds = %if.end400
  %261 = load i32, i32* %qstep, align 4, !dbg !16351
  %tobool401 = icmp ne i32 %261, 0, !dbg !16353
  br i1 %tobool401, label %do.body199, label %do.end, !dbg !16353, !llvm.loop !16054

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %fflag, align 4, !dbg !16354
  %262 = load i32, i32* %minscaler, align 4, !dbg !16355
  store i32 %262, i32* %a.addr.i, align 4, !dbg !16356
  store i32 60, i32* %amin.addr.i, align 4, !dbg !16356
  store i32 195, i32* %amax.addr.i, align 4, !dbg !16356
  %263 = load i32, i32* %a.addr.i, align 4, !dbg !16357
  %264 = load i32, i32* %amin.addr.i, align 4, !dbg !16358
  %cmp.i = icmp slt i32 %263, %264, !dbg !16359
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !16360

if.then.i:                                        ; preds = %do.end
  %265 = load i32, i32* %amin.addr.i, align 4, !dbg !16361
  store i32 %265, i32* %retval.i, align 4, !dbg !16362
  br label %av_clip_c.exit, !dbg !16362

if.else.i:                                        ; preds = %do.end
  %266 = load i32, i32* %a.addr.i, align 4, !dbg !16363
  %267 = load i32, i32* %amax.addr.i, align 4, !dbg !16364
  %cmp1.i = icmp sgt i32 %266, %267, !dbg !16365
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !16366

if.then2.i:                                       ; preds = %if.else.i
  %268 = load i32, i32* %amax.addr.i, align 4, !dbg !16367
  store i32 %268, i32* %retval.i, align 4, !dbg !16368
  br label %av_clip_c.exit, !dbg !16368

if.else3.i:                                       ; preds = %if.else.i
  %269 = load i32, i32* %a.addr.i, align 4, !dbg !16369
  store i32 %269, i32* %retval.i, align 4, !dbg !16370
  br label %av_clip_c.exit, !dbg !16370

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %270 = load i32, i32* %retval.i, align 4, !dbg !16371
  store i32 %270, i32* %minscaler, align 4, !dbg !16372
  store i32 0, i32* %w, align 4, !dbg !16373
  br label %for.cond403, !dbg !16374

for.cond403:                                      ; preds = %for.inc526, %av_clip_c.exit
  %271 = load i32, i32* %w, align 4, !dbg !16375
  %272 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16377
  %ics404 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %272, i32 0, i32 0, !dbg !16378
  %num_windows405 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics404, i32 0, i32 9, !dbg !16379
  %273 = load i32, i32* %num_windows405, align 4, !dbg !16379
  %cmp406 = icmp slt i32 %271, %273, !dbg !16380
  br i1 %cmp406, label %for.body408, label %for.end533, !dbg !16381

for.body408:                                      ; preds = %for.cond403
  store i32 0, i32* %g, align 4, !dbg !16382
  br label %for.cond409, !dbg !16383

for.cond409:                                      ; preds = %for.inc523, %for.body408
  %274 = load i32, i32* %g, align 4, !dbg !16384
  %275 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16386
  %ics410 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %275, i32 0, i32 0, !dbg !16387
  %num_swb411 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics410, i32 0, i32 8, !dbg !16388
  %276 = load i32, i32* %num_swb411, align 32, !dbg !16388
  %cmp412 = icmp slt i32 %274, %276, !dbg !16389
  br i1 %cmp412, label %for.body414, label %for.end525, !dbg !16390

for.body414:                                      ; preds = %for.cond409
  call void @llvm.dbg.declare(metadata i32* %prevsc, metadata !16391, metadata !2772), !dbg !16392
  %277 = load i32, i32* %w, align 4, !dbg !16393
  %mul415 = mul nsw i32 %277, 16, !dbg !16394
  %278 = load i32, i32* %g, align 4, !dbg !16395
  %add416 = add nsw i32 %mul415, %278, !dbg !16396
  %idxprom417 = sext i32 %add416 to i64, !dbg !16397
  %279 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16397
  %sf_idx418 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %279, i32 0, i32 7, !dbg !16398
  %arrayidx419 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx418, i64 0, i64 %idxprom417, !dbg !16397
  %280 = load i32, i32* %arrayidx419, align 4, !dbg !16397
  store i32 %280, i32* %prevsc, align 4, !dbg !16392
  %281 = load i32, i32* %w, align 4, !dbg !16399
  %mul420 = mul nsw i32 %281, 16, !dbg !16401
  %282 = load i32, i32* %g, align 4, !dbg !16402
  %add421 = add nsw i32 %mul420, %282, !dbg !16403
  %idxprom422 = sext i32 %add421 to i64, !dbg !16404
  %arrayidx423 = getelementptr inbounds [128 x float], [128 x float]* %dists, i64 0, i64 %idxprom422, !dbg !16404
  %283 = load float, float* %arrayidx423, align 4, !dbg !16404
  %284 = load i32, i32* %w, align 4, !dbg !16405
  %mul424 = mul nsw i32 %284, 16, !dbg !16406
  %285 = load i32, i32* %g, align 4, !dbg !16407
  %add425 = add nsw i32 %mul424, %285, !dbg !16408
  %idxprom426 = sext i32 %add425 to i64, !dbg !16409
  %arrayidx427 = getelementptr inbounds [128 x float], [128 x float]* %uplims, i64 0, i64 %idxprom426, !dbg !16409
  %286 = load float, float* %arrayidx427, align 4, !dbg !16409
  %cmp428 = fcmp ogt float %283, %286, !dbg !16410
  br i1 %cmp428, label %land.lhs.true430, label %if.end465, !dbg !16411

land.lhs.true430:                                 ; preds = %for.body414
  %287 = load i32, i32* %w, align 4, !dbg !16412
  %mul431 = mul nsw i32 %287, 16, !dbg !16414
  %288 = load i32, i32* %g, align 4, !dbg !16415
  %add432 = add nsw i32 %mul431, %288, !dbg !16416
  %idxprom433 = sext i32 %add432 to i64, !dbg !16417
  %289 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16417
  %sf_idx434 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %289, i32 0, i32 7, !dbg !16418
  %arrayidx435 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx434, i64 0, i64 %idxprom433, !dbg !16417
  %290 = load i32, i32* %arrayidx435, align 4, !dbg !16417
  %cmp436 = icmp sgt i32 %290, 60, !dbg !16419
  br i1 %cmp436, label %if.then438, label %if.end465, !dbg !16420

if.then438:                                       ; preds = %land.lhs.true430
  %291 = load i32, i32* %w, align 4, !dbg !16421
  %mul439 = mul nsw i32 %291, 16, !dbg !16424
  %292 = load i32, i32* %g, align 4, !dbg !16425
  %add440 = add nsw i32 %mul439, %292, !dbg !16426
  %idxprom441 = sext i32 %add440 to i64, !dbg !16427
  %arrayidx442 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom441, !dbg !16427
  %293 = load float, float* %arrayidx442, align 4, !dbg !16427
  %294 = load i32, i32* %w, align 4, !dbg !16428
  %mul443 = mul nsw i32 %294, 16, !dbg !16429
  %295 = load i32, i32* %g, align 4, !dbg !16430
  %add444 = add nsw i32 %mul443, %295, !dbg !16431
  %idxprom445 = sext i32 %add444 to i64, !dbg !16432
  %296 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16432
  %sf_idx446 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %296, i32 0, i32 7, !dbg !16433
  %arrayidx447 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx446, i64 0, i64 %idxprom445, !dbg !16432
  %297 = load i32, i32* %arrayidx447, align 4, !dbg !16432
  %sub448 = sub nsw i32 %297, 1, !dbg !16434
  %call449 = call i32 @find_min_book(float %293, i32 %sub448), !dbg !16435
  %tobool450 = icmp ne i32 %call449, 0, !dbg !16435
  br i1 %tobool450, label %if.then451, label %if.else457, !dbg !16436

if.then451:                                       ; preds = %if.then438
  %298 = load i32, i32* %w, align 4, !dbg !16437
  %mul452 = mul nsw i32 %298, 16, !dbg !16438
  %299 = load i32, i32* %g, align 4, !dbg !16439
  %add453 = add nsw i32 %mul452, %299, !dbg !16440
  %idxprom454 = sext i32 %add453 to i64, !dbg !16441
  %300 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16441
  %sf_idx455 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %300, i32 0, i32 7, !dbg !16442
  %arrayidx456 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx455, i64 0, i64 %idxprom454, !dbg !16441
  %301 = load i32, i32* %arrayidx456, align 4, !dbg !16443
  %dec = add nsw i32 %301, -1, !dbg !16443
  store i32 %dec, i32* %arrayidx456, align 4, !dbg !16443
  br label %if.end464, !dbg !16441

if.else457:                                       ; preds = %if.then438
  %302 = load i32, i32* %w, align 4, !dbg !16444
  %mul458 = mul nsw i32 %302, 16, !dbg !16445
  %303 = load i32, i32* %g, align 4, !dbg !16446
  %add459 = add nsw i32 %mul458, %303, !dbg !16447
  %idxprom460 = sext i32 %add459 to i64, !dbg !16448
  %304 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16448
  %sf_idx461 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %304, i32 0, i32 7, !dbg !16449
  %arrayidx462 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx461, i64 0, i64 %idxprom460, !dbg !16448
  %305 = load i32, i32* %arrayidx462, align 4, !dbg !16450
  %sub463 = sub nsw i32 %305, 2, !dbg !16450
  store i32 %sub463, i32* %arrayidx462, align 4, !dbg !16450
  br label %if.end464

if.end464:                                        ; preds = %if.else457, %if.then451
  br label %if.end465, !dbg !16451

if.end465:                                        ; preds = %if.end464, %land.lhs.true430, %for.body414
  %306 = load i32, i32* %w, align 4, !dbg !16452
  %mul466 = mul nsw i32 %306, 16, !dbg !16453
  %307 = load i32, i32* %g, align 4, !dbg !16454
  %add467 = add nsw i32 %mul466, %307, !dbg !16455
  %idxprom468 = sext i32 %add467 to i64, !dbg !16456
  %308 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16456
  %sf_idx469 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %308, i32 0, i32 7, !dbg !16457
  %arrayidx470 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx469, i64 0, i64 %idxprom468, !dbg !16456
  %309 = load i32, i32* %arrayidx470, align 4, !dbg !16456
  %310 = load i32, i32* %minscaler, align 4, !dbg !16458
  %311 = load i32, i32* %minscaler, align 4, !dbg !16459
  %add471 = add nsw i32 %311, 60, !dbg !16460
  store i32 %309, i32* %a.addr.i541, align 4, !dbg !16461
  store i32 %310, i32* %amin.addr.i542, align 4, !dbg !16461
  store i32 %add471, i32* %amax.addr.i543, align 4, !dbg !16461
  %312 = load i32, i32* %a.addr.i541, align 4, !dbg !16462
  %313 = load i32, i32* %amin.addr.i542, align 4, !dbg !16463
  %cmp.i544 = icmp slt i32 %312, %313, !dbg !16464
  br i1 %cmp.i544, label %if.then.i545, label %if.else.i547, !dbg !16465

if.then.i545:                                     ; preds = %if.end465
  %314 = load i32, i32* %amin.addr.i542, align 4, !dbg !16466
  store i32 %314, i32* %retval.i540, align 4, !dbg !16467
  br label %av_clip_c.exit550, !dbg !16467

if.else.i547:                                     ; preds = %if.end465
  %315 = load i32, i32* %a.addr.i541, align 4, !dbg !16468
  %316 = load i32, i32* %amax.addr.i543, align 4, !dbg !16469
  %cmp1.i546 = icmp sgt i32 %315, %316, !dbg !16470
  br i1 %cmp1.i546, label %if.then2.i548, label %if.else3.i549, !dbg !16471

if.then2.i548:                                    ; preds = %if.else.i547
  %317 = load i32, i32* %amax.addr.i543, align 4, !dbg !16472
  store i32 %317, i32* %retval.i540, align 4, !dbg !16473
  br label %av_clip_c.exit550, !dbg !16473

if.else3.i549:                                    ; preds = %if.else.i547
  %318 = load i32, i32* %a.addr.i541, align 4, !dbg !16474
  store i32 %318, i32* %retval.i540, align 4, !dbg !16475
  br label %av_clip_c.exit550, !dbg !16475

av_clip_c.exit550:                                ; preds = %if.then.i545, %if.then2.i548, %if.else3.i549
  %319 = load i32, i32* %retval.i540, align 4, !dbg !16476
  %320 = load i32, i32* %w, align 4, !dbg !16477
  %mul473 = mul nsw i32 %320, 16, !dbg !16478
  %321 = load i32, i32* %g, align 4, !dbg !16479
  %add474 = add nsw i32 %mul473, %321, !dbg !16480
  %idxprom475 = sext i32 %add474 to i64, !dbg !16481
  %322 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16481
  %sf_idx476 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %322, i32 0, i32 7, !dbg !16482
  %arrayidx477 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx476, i64 0, i64 %idxprom475, !dbg !16481
  store i32 %319, i32* %arrayidx477, align 4, !dbg !16483
  %323 = load i32, i32* %w, align 4, !dbg !16484
  %mul478 = mul nsw i32 %323, 16, !dbg !16485
  %324 = load i32, i32* %g, align 4, !dbg !16486
  %add479 = add nsw i32 %mul478, %324, !dbg !16487
  %idxprom480 = sext i32 %add479 to i64, !dbg !16488
  %325 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16488
  %sf_idx481 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %325, i32 0, i32 7, !dbg !16489
  %arrayidx482 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx481, i64 0, i64 %idxprom480, !dbg !16488
  %326 = load i32, i32* %arrayidx482, align 4, !dbg !16488
  %cmp483 = icmp sgt i32 %326, 219, !dbg !16490
  br i1 %cmp483, label %cond.true485, label %cond.false486, !dbg !16491

cond.true485:                                     ; preds = %av_clip_c.exit550
  br label %cond.end492, !dbg !16492

cond.false486:                                    ; preds = %av_clip_c.exit550
  %327 = load i32, i32* %w, align 4, !dbg !16494
  %mul487 = mul nsw i32 %327, 16, !dbg !16496
  %328 = load i32, i32* %g, align 4, !dbg !16497
  %add488 = add nsw i32 %mul487, %328, !dbg !16498
  %idxprom489 = sext i32 %add488 to i64, !dbg !16499
  %329 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16499
  %sf_idx490 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %329, i32 0, i32 7, !dbg !16500
  %arrayidx491 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx490, i64 0, i64 %idxprom489, !dbg !16499
  %330 = load i32, i32* %arrayidx491, align 4, !dbg !16499
  br label %cond.end492, !dbg !16501

cond.end492:                                      ; preds = %cond.false486, %cond.true485
  %cond493 = phi i32 [ 219, %cond.true485 ], [ %330, %cond.false486 ], !dbg !16502
  %331 = load i32, i32* %w, align 4, !dbg !16504
  %mul494 = mul nsw i32 %331, 16, !dbg !16505
  %332 = load i32, i32* %g, align 4, !dbg !16506
  %add495 = add nsw i32 %mul494, %332, !dbg !16507
  %idxprom496 = sext i32 %add495 to i64, !dbg !16508
  %333 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16508
  %sf_idx497 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %333, i32 0, i32 7, !dbg !16509
  %arrayidx498 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx497, i64 0, i64 %idxprom496, !dbg !16508
  store i32 %cond493, i32* %arrayidx498, align 4, !dbg !16510
  %334 = load i32, i32* %w, align 4, !dbg !16511
  %mul499 = mul nsw i32 %334, 16, !dbg !16513
  %335 = load i32, i32* %g, align 4, !dbg !16514
  %add500 = add nsw i32 %mul499, %335, !dbg !16515
  %idxprom501 = sext i32 %add500 to i64, !dbg !16516
  %336 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16516
  %sf_idx502 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %336, i32 0, i32 7, !dbg !16517
  %arrayidx503 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx502, i64 0, i64 %idxprom501, !dbg !16516
  %337 = load i32, i32* %arrayidx503, align 4, !dbg !16516
  %338 = load i32, i32* %prevsc, align 4, !dbg !16518
  %cmp504 = icmp ne i32 %337, %338, !dbg !16519
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !16520

if.then506:                                       ; preds = %cond.end492
  store i32 1, i32* %fflag, align 4, !dbg !16521
  br label %if.end507, !dbg !16522

if.end507:                                        ; preds = %if.then506, %cond.end492
  %339 = load i32, i32* %w, align 4, !dbg !16523
  %mul508 = mul nsw i32 %339, 16, !dbg !16524
  %340 = load i32, i32* %g, align 4, !dbg !16525
  %add509 = add nsw i32 %mul508, %340, !dbg !16526
  %idxprom510 = sext i32 %add509 to i64, !dbg !16527
  %arrayidx511 = getelementptr inbounds [128 x float], [128 x float]* %maxvals, i64 0, i64 %idxprom510, !dbg !16527
  %341 = load float, float* %arrayidx511, align 4, !dbg !16527
  %342 = load i32, i32* %w, align 4, !dbg !16528
  %mul512 = mul nsw i32 %342, 16, !dbg !16529
  %343 = load i32, i32* %g, align 4, !dbg !16530
  %add513 = add nsw i32 %mul512, %343, !dbg !16531
  %idxprom514 = sext i32 %add513 to i64, !dbg !16532
  %344 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16532
  %sf_idx515 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %344, i32 0, i32 7, !dbg !16533
  %arrayidx516 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx515, i64 0, i64 %idxprom514, !dbg !16532
  %345 = load i32, i32* %arrayidx516, align 4, !dbg !16532
  %call517 = call i32 @find_min_book(float %341, i32 %345), !dbg !16534
  %346 = load i32, i32* %w, align 4, !dbg !16535
  %mul518 = mul nsw i32 %346, 16, !dbg !16536
  %347 = load i32, i32* %g, align 4, !dbg !16537
  %add519 = add nsw i32 %mul518, %347, !dbg !16538
  %idxprom520 = sext i32 %add519 to i64, !dbg !16539
  %348 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16539
  %band_type521 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %348, i32 0, i32 3, !dbg !16540
  %arrayidx522 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type521, i64 0, i64 %idxprom520, !dbg !16539
  store i32 %call517, i32* %arrayidx522, align 4, !dbg !16541
  br label %for.inc523, !dbg !16542

for.inc523:                                       ; preds = %if.end507
  %349 = load i32, i32* %g, align 4, !dbg !16543
  %inc524 = add nsw i32 %349, 1, !dbg !16543
  store i32 %inc524, i32* %g, align 4, !dbg !16543
  br label %for.cond409, !dbg !16545, !llvm.loop !16546

for.end525:                                       ; preds = %for.cond409
  br label %for.inc526, !dbg !16548

for.inc526:                                       ; preds = %for.end525
  %350 = load i32, i32* %w, align 4, !dbg !16549
  %idxprom527 = sext i32 %350 to i64, !dbg !16551
  %351 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !16551
  %ics528 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %351, i32 0, i32 0, !dbg !16552
  %group_len529 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics528, i32 0, i32 4, !dbg !16553
  %arrayidx530 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len529, i64 0, i64 %idxprom527, !dbg !16551
  %352 = load i8, i8* %arrayidx530, align 1, !dbg !16551
  %conv531 = zext i8 %352 to i32, !dbg !16551
  %353 = load i32, i32* %w, align 4, !dbg !16554
  %add532 = add nsw i32 %353, %conv531, !dbg !16554
  store i32 %add532, i32* %w, align 4, !dbg !16554
  br label %for.cond403, !dbg !16555, !llvm.loop !16556

for.end533:                                       ; preds = %for.cond403
  %354 = load i32, i32* %its, align 4, !dbg !16558
  %inc534 = add nsw i32 %354, 1, !dbg !16558
  store i32 %inc534, i32* %its, align 4, !dbg !16558
  br label %do.cond535, !dbg !16559

do.cond535:                                       ; preds = %for.end533
  %355 = load i32, i32* %fflag, align 4, !dbg !16560
  %tobool536 = icmp ne i32 %355, 0, !dbg !16560
  br i1 %tobool536, label %land.rhs, label %land.end, !dbg !16561

land.rhs:                                         ; preds = %do.cond535
  %356 = load i32, i32* %its, align 4, !dbg !16562
  %cmp537 = icmp slt i32 %356, 10, !dbg !16563
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond535
  %357 = phi i1 [ false, %do.cond535 ], [ %cmp537, %land.rhs ]
  br i1 %357, label %do.body, label %do.end539, !dbg !16564, !llvm.loop !16043

do.end539:                                        ; preds = %if.then145, %land.end
  ret void, !dbg !16566
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nounwind readnone
declare float @fabsf(float) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @coef2minsf(float %coef) #1 !dbg !16567 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2811, metadata !2772), !dbg !16570
  %coef.addr = alloca float, align 4
  store float %coef, float* %coef.addr, align 4
  call void @llvm.dbg.declare(metadata float* %coef.addr, metadata !16573, metadata !2772), !dbg !16574
  %0 = load float, float* %coef.addr, align 4, !dbg !16575
  %call = call float @log2f(float %0) #9, !dbg !16576
  %mul = fmul float %call, 4.000000e+00, !dbg !16577
  %sub = fsub float %mul, 6.900000e+01, !dbg !16578
  %add = fadd float %sub, 1.400000e+02, !dbg !16579
  %sub1 = fsub float %add, 3.600000e+01, !dbg !16580
  %conv = fptosi float %sub1 to i32, !dbg !16576
  store i32 %conv, i32* %a.addr.i, align 4, !dbg !16581
  %1 = load i32, i32* %a.addr.i, align 4, !dbg !16582
  %and.i = and i32 %1, -256, !dbg !16583
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16583
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16584

if.then.i:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !16585
  %neg.i = xor i32 %2, -1, !dbg !16586
  %shr.i = ashr i32 %neg.i, 31, !dbg !16587
  %conv.i = trunc i32 %shr.i to i8, !dbg !16588
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !16589
  br label %av_clip_uint8_c.exit, !dbg !16589

if.else.i:                                        ; preds = %entry
  %3 = load i32, i32* %a.addr.i, align 4, !dbg !16590
  %conv1.i = trunc i32 %3 to i8, !dbg !16590
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !16591
  br label %av_clip_uint8_c.exit, !dbg !16591

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %4 = load i8, i8* %retval.i, align 1, !dbg !16592
  ret i8 %4, !dbg !16593
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @coef2maxsf(float %coef) #1 !dbg !16594 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2811, metadata !2772), !dbg !16595
  %coef.addr = alloca float, align 4
  store float %coef, float* %coef.addr, align 4
  call void @llvm.dbg.declare(metadata float* %coef.addr, metadata !16598, metadata !2772), !dbg !16599
  %0 = load float, float* %coef.addr, align 4, !dbg !16600
  %call = call float @log2f(float %0) #9, !dbg !16601
  %mul = fmul float %call, 4.000000e+00, !dbg !16602
  %add = fadd float %mul, 6.000000e+00, !dbg !16603
  %add1 = fadd float %add, 1.400000e+02, !dbg !16604
  %sub = fsub float %add1, 3.600000e+01, !dbg !16605
  %conv = fptosi float %sub to i32, !dbg !16601
  store i32 %conv, i32* %a.addr.i, align 4, !dbg !16606
  %1 = load i32, i32* %a.addr.i, align 4, !dbg !16607
  %and.i = and i32 %1, -256, !dbg !16608
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16608
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16609

if.then.i:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !16610
  %neg.i = xor i32 %2, -1, !dbg !16611
  %shr.i = ashr i32 %neg.i, 31, !dbg !16612
  %conv.i = trunc i32 %shr.i to i8, !dbg !16613
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !16614
  br label %av_clip_uint8_c.exit, !dbg !16614

if.else.i:                                        ; preds = %entry
  %3 = load i32, i32* %a.addr.i, align 4, !dbg !16615
  %conv1.i = trunc i32 %3 to i8, !dbg !16615
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !16616
  br label %av_clip_uint8_c.exit, !dbg !16616

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %4 = load i8, i8* %retval.i, align 1, !dbg !16617
  ret i8 %4, !dbg !16618
}

; Function Attrs: nounwind
declare float @log2f(float) #6

; Function Attrs: nounwind
declare float @sqrtf(float) #6

; Function Attrs: inlinehint nounwind uwtable
define internal float @find_max_val(i32 %group_len, i32 %swb_size, float* %scaled) #1 !dbg !16619 {
entry:
  %group_len.addr = alloca i32, align 4
  %swb_size.addr = alloca i32, align 4
  %scaled.addr = alloca float*, align 8
  %maxval = alloca float, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %group_len, i32* %group_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_len.addr, metadata !16622, metadata !2772), !dbg !16623
  store i32 %swb_size, i32* %swb_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %swb_size.addr, metadata !16624, metadata !2772), !dbg !16625
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !16626, metadata !2772), !dbg !16627
  call void @llvm.dbg.declare(metadata float* %maxval, metadata !16628, metadata !2772), !dbg !16629
  store float 0.000000e+00, float* %maxval, align 4, !dbg !16629
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !16630, metadata !2772), !dbg !16631
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16632, metadata !2772), !dbg !16633
  store i32 0, i32* %w2, align 4, !dbg !16634
  br label %for.cond, !dbg !16636

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32, i32* %w2, align 4, !dbg !16637
  %1 = load i32, i32* %group_len.addr, align 4, !dbg !16640
  %cmp = icmp slt i32 %0, %1, !dbg !16641
  br i1 %cmp, label %for.body, label %for.end11, !dbg !16642

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !16643
  br label %for.cond1, !dbg !16646

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !16647
  %3 = load i32, i32* %swb_size.addr, align 4, !dbg !16650
  %cmp2 = icmp slt i32 %2, %3, !dbg !16651
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !16652

for.body3:                                        ; preds = %for.cond1
  %4 = load float, float* %maxval, align 4, !dbg !16653
  %5 = load i32, i32* %w2, align 4, !dbg !16655
  %mul = mul nsw i32 %5, 128, !dbg !16656
  %6 = load i32, i32* %i, align 4, !dbg !16657
  %add = add nsw i32 %mul, %6, !dbg !16658
  %idxprom = sext i32 %add to i64, !dbg !16659
  %7 = load float*, float** %scaled.addr, align 8, !dbg !16659
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !16659
  %8 = load float, float* %arrayidx, align 4, !dbg !16659
  %cmp4 = fcmp ogt float %4, %8, !dbg !16660
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !16661

cond.true:                                        ; preds = %for.body3
  %9 = load float, float* %maxval, align 4, !dbg !16662
  br label %cond.end, !dbg !16664

cond.false:                                       ; preds = %for.body3
  %10 = load i32, i32* %w2, align 4, !dbg !16665
  %mul5 = mul nsw i32 %10, 128, !dbg !16667
  %11 = load i32, i32* %i, align 4, !dbg !16668
  %add6 = add nsw i32 %mul5, %11, !dbg !16669
  %idxprom7 = sext i32 %add6 to i64, !dbg !16670
  %12 = load float*, float** %scaled.addr, align 8, !dbg !16670
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 %idxprom7, !dbg !16670
  %13 = load float, float* %arrayidx8, align 4, !dbg !16670
  br label %cond.end, !dbg !16671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %9, %cond.true ], [ %13, %cond.false ], !dbg !16672
  store float %cond, float* %maxval, align 4, !dbg !16674
  br label %for.inc, !dbg !16675

for.inc:                                          ; preds = %cond.end
  %14 = load i32, i32* %i, align 4, !dbg !16676
  %inc = add nsw i32 %14, 1, !dbg !16676
  store i32 %inc, i32* %i, align 4, !dbg !16676
  br label %for.cond1, !dbg !16678, !llvm.loop !16679

for.end:                                          ; preds = %for.cond1
  br label %for.inc9, !dbg !16681

for.inc9:                                         ; preds = %for.end
  %15 = load i32, i32* %w2, align 4, !dbg !16682
  %inc10 = add nsw i32 %15, 1, !dbg !16682
  store i32 %inc10, i32* %w2, align 4, !dbg !16682
  br label %for.cond, !dbg !16684, !llvm.loop !16685

for.end11:                                        ; preds = %for.cond
  %16 = load float, float* %maxval, align 4, !dbg !16687
  ret float %16, !dbg !16688
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @find_min_book(float %maxval, i32 %sf) #1 !dbg !16689 {
entry:
  %maxval.addr = alloca float, align 4
  %sf.addr = alloca i32, align 4
  %Q34 = alloca float, align 4
  %qmaxval = alloca i32, align 4
  %cb = alloca i32, align 4
  store float %maxval, float* %maxval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxval.addr, metadata !16692, metadata !2772), !dbg !16693
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !16694, metadata !2772), !dbg !16695
  call void @llvm.dbg.declare(metadata float* %Q34, metadata !16696, metadata !2772), !dbg !16697
  %0 = load i32, i32* %sf.addr, align 4, !dbg !16698
  %sub = sub nsw i32 200, %0, !dbg !16699
  %add = add nsw i32 %sub, 140, !dbg !16700
  %sub1 = sub nsw i32 %add, 36, !dbg !16701
  %idxprom = sext i32 %sub1 to i64, !dbg !16702
  %arrayidx = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom, !dbg !16702
  %1 = load float, float* %arrayidx, align 4, !dbg !16702
  store float %1, float* %Q34, align 4, !dbg !16697
  call void @llvm.dbg.declare(metadata i32* %qmaxval, metadata !16703, metadata !2772), !dbg !16704
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !16705, metadata !2772), !dbg !16706
  %2 = load float, float* %maxval.addr, align 4, !dbg !16707
  %3 = load float, float* %Q34, align 4, !dbg !16708
  %mul = fmul float %2, %3, !dbg !16709
  %add2 = fadd float %mul, 0x3FD9F212E0000000, !dbg !16710
  %conv = fptosi float %add2 to i32, !dbg !16707
  store i32 %conv, i32* %qmaxval, align 4, !dbg !16711
  %4 = load i32, i32* %qmaxval, align 4, !dbg !16712
  %conv3 = sext i32 %4 to i64, !dbg !16712
  %cmp = icmp uge i64 %conv3, 14, !dbg !16714
  br i1 %cmp, label %if.then, label %if.else, !dbg !16715

if.then:                                          ; preds = %entry
  store i32 11, i32* %cb, align 4, !dbg !16716
  br label %if.end, !dbg !16717

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %qmaxval, align 4, !dbg !16718
  %idxprom5 = sext i32 %5 to i64, !dbg !16719
  %arrayidx6 = getelementptr inbounds [14 x i8], [14 x i8]* @aac_maxval_cb, i64 0, i64 %idxprom5, !dbg !16719
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !16719
  %conv7 = zext i8 %6 to i32, !dbg !16719
  store i32 %conv7, i32* %cb, align 4, !dbg !16720
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %cb, align 4, !dbg !16721
  ret i32 %7, !dbg !16722
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @quantize_band_cost(%struct.AACEncContext* %s, float* %in, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy, i32 %rtz) #1 !dbg !16723 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %in.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  %rtz.addr = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !16726, metadata !2772), !dbg !16727
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !16728, metadata !2772), !dbg !16729
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !16730, metadata !2772), !dbg !16731
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16732, metadata !2772), !dbg !16733
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !16734, metadata !2772), !dbg !16735
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !16736, metadata !2772), !dbg !16737
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !16738, metadata !2772), !dbg !16739
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !16740, metadata !2772), !dbg !16741
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !16742, metadata !2772), !dbg !16743
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !16744, metadata !2772), !dbg !16745
  store i32 %rtz, i32* %rtz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtz.addr, metadata !16746, metadata !2772), !dbg !16747
  %0 = load i32, i32* %cb.addr, align 4, !dbg !16748
  %idxprom = sext i32 %0 to i64, !dbg !16749
  %1 = load i32, i32* %rtz.addr, align 4, !dbg !16750
  %tobool = icmp ne i32 %1, 0, !dbg !16751
  %cond = select i1 %tobool, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_rtz_arr, i32 0, i32 0), float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_arr, i32 0, i32 0), !dbg !16751
  %arrayidx = getelementptr inbounds float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %cond, i64 %idxprom, !dbg !16749
  %2 = load float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %arrayidx, align 8, !dbg !16749
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !16752
  %4 = load float*, float** %in.addr, align 8, !dbg !16751
  %5 = load float*, float** %scaled.addr, align 8, !dbg !16751
  %6 = load i32, i32* %size.addr, align 4, !dbg !16753
  %7 = load i32, i32* %scale_idx.addr, align 4, !dbg !16754
  %8 = load i32, i32* %cb.addr, align 4, !dbg !16755
  %9 = load float, float* %lambda.addr, align 4, !dbg !16756
  %10 = load float, float* %uplim.addr, align 4, !dbg !16757
  %11 = load i32*, i32** %bits.addr, align 8, !dbg !16758
  %12 = load float*, float** %energy.addr, align 8, !dbg !16759
  %call = call float %2(%struct.AACEncContext* %3, %struct.PutBitContext* null, float* %4, float* null, float* %5, i32 %6, i32 %7, i32 %8, float %9, float %10, i32* %11, float* %12), !dbg !16749
  ret float %call, !dbg !16760
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_ZERO(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !16761 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !16766
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !16786
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !16787
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !16799
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !16801
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !16803
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !16805
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !16807
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !16809
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !16811
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !16813
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !16815
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !16817
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !16819
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !16821
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !16823
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !16825
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !16827
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !16829
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !16831
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !16833
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !16835
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !16837
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !16839
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !16841
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !16843
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !16845
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !16847
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !16849
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !16851
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !16853
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !16855
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !16857
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !16859
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !16861
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !16863
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !16865
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !16867
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !16869
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !16871
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !16873
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !16875
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !16877
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !16879
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !16881
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !16883
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !16884, metadata !2772), !dbg !16885
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !16886, metadata !2772), !dbg !16887
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !16888, metadata !2772), !dbg !16889
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !16890, metadata !2772), !dbg !16891
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !16892, metadata !2772), !dbg !16893
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16894, metadata !2772), !dbg !16895
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !16896, metadata !2772), !dbg !16897
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !16898, metadata !2772), !dbg !16899
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !16900, metadata !2772), !dbg !16901
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !16902, metadata !2772), !dbg !16903
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !16904, metadata !2772), !dbg !16905
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !16906, metadata !2772), !dbg !16907
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !16908
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !16909
  %2 = load float*, float** %in.addr, align 8, !dbg !16910
  %3 = load float*, float** %quant.addr, align 8, !dbg !16911
  %4 = load float*, float** %scaled.addr, align 8, !dbg !16912
  %5 = load i32, i32* %size.addr, align 4, !dbg !16913
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !16914
  %7 = load i32, i32* %cb.addr, align 4, !dbg !16915
  %8 = load float, float* %lambda.addr, align 4, !dbg !16916
  %9 = load float, float* %uplim.addr, align 4, !dbg !16917
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !16918
  %11 = load float*, float** %energy.addr, align 8, !dbg !16919
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !16920
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !16920
  store float* %2, float** %in.addr.i, align 8, !dbg !16920
  store float* %3, float** %out.addr.i, align 8, !dbg !16920
  store float* %4, float** %scaled.addr.i, align 8, !dbg !16920
  store i32 %5, i32* %size.addr.i, align 4, !dbg !16920
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !16920
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !16920
  store float %8, float* %lambda.addr.i, align 4, !dbg !16920
  store float %9, float* %uplim.addr.i, align 4, !dbg !16920
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !16920
  store float* %11, float** %energy.addr.i, align 8, !dbg !16920
  store i32 1, i32* %BT_ZERO.addr.i, align 4, !dbg !16920
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !16920
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !16920
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !16920
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !16920
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !16920
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !16920
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !16921
  %sub.i = sub nsw i32 200, %12, !dbg !16922
  %add.i = add nsw i32 %sub.i, 140, !dbg !16923
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !16924
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !16839
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !16925
  %idxprom.i = sext i32 %13 to i64, !dbg !16926
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !16926
  %14 = load float, float* %arrayidx.i, align 4, !dbg !16926
  store float %14, float* %Q.i, align 4, !dbg !16841
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !16927
  %idxprom2.i = sext i32 %15 to i64, !dbg !16928
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !16928
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !16928
  store float %16, float* %Q34.i, align 4, !dbg !16843
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !16929
  %add4.i = add nsw i32 200, %17, !dbg !16930
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !16931
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !16932
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !16933
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !16933
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !16933
  store float %18, float* %IQ.i, align 4, !dbg !16845
  %19 = load float, float* %IQ.i, align 4, !dbg !16934
  %mul.i = fmul float 1.651400e+05, %19, !dbg !16935
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !16847
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !16853
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !16855
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !16936
  %tobool.i = icmp ne i32 %20, 0, !dbg !16936
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !16936
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !16857
  store i32 0, i32* %resbits.i, align 4, !dbg !16859
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !16937
  %tobool9.i = icmp ne i32 %21, 0, !dbg !16937
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !16939

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !16940
  %tobool10.i = icmp ne i32 %22, 0, !dbg !16940
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !16942

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !16943
  %tobool12.i = icmp ne i32 %23, 0, !dbg !16943
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !16945

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !16946
  br label %for.cond.i, !dbg !16949

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !16950
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !16953
  %cmp.i = icmp slt i32 %24, %25, !dbg !16954
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !16955

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !16956
  %idxprom13.i = sext i32 %26 to i64, !dbg !16957
  %27 = load float*, float** %in.addr.i, align 8, !dbg !16957
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !16957
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !16957
  %29 = load i32, i32* %i.i, align 4, !dbg !16958
  %idxprom15.i = sext i32 %29 to i64, !dbg !16959
  %30 = load float*, float** %in.addr.i, align 8, !dbg !16959
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !16959
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !16959
  %mul17.i = fmul float %28, %31, !dbg !16960
  %32 = load float, float* %cost.i, align 4, !dbg !16961
  %add18.i = fadd float %32, %mul17.i, !dbg !16961
  store float %add18.i, float* %cost.i, align 4, !dbg !16961
  %33 = load i32, i32* %i.i, align 4, !dbg !16962
  %inc.i = add nsw i32 %33, 1, !dbg !16962
  store i32 %inc.i, i32* %i.i, align 4, !dbg !16962
  br label %for.cond.i, !dbg !16964, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !16967
  %tobool19.i = icmp ne i32* %34, null, !dbg !16967
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !16969

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !16970
  store i32 0, i32* %35, align 4, !dbg !16971
  br label %if.end.i, !dbg !16972

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !16973
  %tobool21.i = icmp ne float* %36, null, !dbg !16973
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !16975

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !16976
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !16977
  store float %37, float* %38, align 4, !dbg !16978
  br label %if.end23.i, !dbg !16979

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !16980
  %tobool24.i = icmp ne float* %39, null, !dbg !16980
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !16982

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !16983
  br label %for.cond26.i, !dbg !16986

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !16987
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !16990
  %cmp27.i = icmp slt i32 %40, %41, !dbg !16991
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !16992

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !16993
  br label %for.cond29.i, !dbg !16995

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !16996
  %43 = load i32, i32* %dim.i, align 4, !dbg !16999
  %cmp30.i = icmp slt i32 %42, %43, !dbg !17000
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !17001

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !17002
  %45 = load i32, i32* %j.i, align 4, !dbg !17003
  %add32.i = add nsw i32 %44, %45, !dbg !17004
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !17005
  %46 = load float*, float** %out.addr.i, align 8, !dbg !17005
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !17005
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !17006
  %47 = load i32, i32* %j.i, align 4, !dbg !17007
  %inc36.i = add nsw i32 %47, 1, !dbg !17007
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !17007
  br label %for.cond29.i, !dbg !17009, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !17012
  %49 = load i32, i32* %i.i, align 4, !dbg !17014
  %add39.i = add nsw i32 %49, %48, !dbg !17014
  store i32 %add39.i, i32* %i.i, align 4, !dbg !17014
  br label %for.cond26.i, !dbg !17015, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !17018

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !17019
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !17020
  %mul42.i = fmul float %50, %51, !dbg !17021
  store float %mul42.i, float* %retval.i, align 4, !dbg !17022
  br label %quantize_and_encode_band_cost_template.exit, !dbg !17022

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !17023
  %tobool44.i = icmp ne float* %52, null, !dbg !17023
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !17025

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17026
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !17028
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !17028
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17029
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !17030
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !17029
  %56 = load float*, float** %in.addr.i, align 8, !dbg !17031
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !17032
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !17026
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17033
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !17034
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !17033
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !17035
  br label %if.end48.i, !dbg !17036

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17037
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !17038
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !17038
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17039
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !17040
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !17039
  %62 = load float*, float** %in.addr.i, align 8, !dbg !17041
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !17042
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !17043
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17044
  %tobool50.i = icmp ne i32 %65, 0, !dbg !17045
  %lnot.i = xor i1 %tobool50.i, true, !dbg !17045
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !17045
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !17046
  %idxprom51.i = sext i32 %66 to i64, !dbg !17047
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !17047
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !17047
  %conv.i = zext i8 %67 to i32, !dbg !17047
  %68 = load float, float* %Q34.i, align 4, !dbg !17048
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !17049
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !17037
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17050
  %tobool53.i = icmp ne i32 %70, 0, !dbg !17050
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !17052

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !17053
  br label %if.end58.i, !dbg !17055

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !17056
  %idxprom55.i = sext i32 %71 to i64, !dbg !17058
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !17058
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !17058
  %conv57.i = zext i8 %72 to i32, !dbg !17058
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !17059
  br label %if.end58.i, !dbg !16920

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !17060
  br label %for.cond59.i, !dbg !17061

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !17062
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !17064
  %cmp60.i = icmp slt i32 %73, %74, !dbg !17065
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !17066

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17067
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !17068
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !17067
  %76 = load i32, i32* %i.i, align 4, !dbg !17069
  %idx.ext.i = sext i32 %76 to i64, !dbg !17070
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !17070
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !16865
  store i32 0, i32* %curidx.i, align 4, !dbg !16867
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !16873
  store i32 0, i32* %j.i, align 4, !dbg !17071
  br label %for.cond65.i, !dbg !17073

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !17074
  %78 = load i32, i32* %dim.i, align 4, !dbg !17077
  %cmp66.i = icmp slt i32 %77, %78, !dbg !17078
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !17079

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !17080
  %idxprom69.i = sext i32 %79 to i64, !dbg !17082
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !17082
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !17082
  %conv71.i = zext i8 %80 to i32, !dbg !17082
  %81 = load i32, i32* %curidx.i, align 4, !dbg !17083
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !17083
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !17083
  %82 = load i32, i32* %j.i, align 4, !dbg !17084
  %idxprom73.i = sext i32 %82 to i64, !dbg !17085
  %83 = load i32*, i32** %quants.i, align 8, !dbg !17085
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !17085
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !17085
  %85 = load i32, i32* %off.i, align 4, !dbg !17086
  %add75.i = add nsw i32 %84, %85, !dbg !17087
  %86 = load i32, i32* %curidx.i, align 4, !dbg !17088
  %add76.i = add nsw i32 %86, %add75.i, !dbg !17088
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !17088
  %87 = load i32, i32* %j.i, align 4, !dbg !17089
  %inc78.i = add nsw i32 %87, 1, !dbg !17089
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !17089
  br label %for.cond65.i, !dbg !17091, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !17094
  %idxprom80.i = sext i32 %88 to i64, !dbg !17095
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !17096
  %sub81.i = sub nsw i32 %89, 1, !dbg !17097
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !17095
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !17095
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !17095
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !17095
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !17095
  %conv85.i = zext i8 %91 to i32, !dbg !17095
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !17098
  %92 = load i32, i32* %curidx.i, align 4, !dbg !17099
  %93 = load i32, i32* %dim.i, align 4, !dbg !17100
  %mul86.i = mul nsw i32 %92, %93, !dbg !17101
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !17102
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !17103
  %sub88.i = sub nsw i32 %94, 1, !dbg !17104
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !17102
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !17102
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !17102
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !17102
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !17105
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17106
  %tobool92.i = icmp ne i32 %96, 0, !dbg !17106
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !17107

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !17108
  br label %for.cond94.i, !dbg !17109

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !17110
  %98 = load i32, i32* %dim.i, align 4, !dbg !17112
  %cmp95.i = icmp slt i32 %97, %98, !dbg !17113
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !17114

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !17115
  %100 = load i32, i32* %j.i, align 4, !dbg !17116
  %add98.i = add nsw i32 %99, %100, !dbg !17117
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !17118
  %101 = load float*, float** %in.addr.i, align 8, !dbg !17118
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !17118
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !17118
  %call.i = call float @fabsf(float %102) #3, !dbg !17119
  store float %call.i, float* %t.i, align 4, !dbg !16875
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !17120
  %tobool101.i = icmp ne i32 %103, 0, !dbg !17120
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !17121

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !17122
  %idxprom102.i = sext i32 %104 to i64, !dbg !17124
  %105 = load float*, float** %vec.i, align 8, !dbg !17124
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !17124
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !17124
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !17125
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !17126

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !17127
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !17128
  %cmp107.i = fcmp oge float %107, %108, !dbg !17129
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !17130

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !17131
  store float %109, float* %quantized.i, align 4, !dbg !17133
  %110 = load i32, i32* %curbits.i, align 4, !dbg !17134
  %add110.i = add nsw i32 %110, 21, !dbg !17134
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !17134
  br label %if.end124.i, !dbg !17135

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !17136
  %112 = load float, float* %Q.i, align 4, !dbg !17137
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !17138
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !17139
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !17140
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !17140
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !17141
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !17143
  %shl.i.i = shl i32 1, %115, !dbg !17144
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !17145
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !17146
  %and.i.i = and i32 %114, %neg.i.i, !dbg !17147
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !17147
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !17148

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !17149
  %neg1.i.i = xor i32 %116, -1, !dbg !17151
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !17152
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !17153
  %shl2.i.i = shl i32 1, %117, !dbg !17154
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !17155
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !17156
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !17157
  br label %av_clip_uintp2_c.exit.i, !dbg !17157

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !17158
  store i32 %118, i32* %retval.i.i, align 4, !dbg !17159
  br label %av_clip_uintp2_c.exit.i, !dbg !17159

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !17160
  store i32 %119, i32* %c.i, align 4, !dbg !16879
  %120 = load i32, i32* %c.i, align 4, !dbg !17161
  %conv114.i = sitofp i32 %120 to float, !dbg !17161
  %121 = load i32, i32* %c.i, align 4, !dbg !17162
  %conv115.i = sitofp i32 %121 to float, !dbg !17162
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !17163
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !17164
  %122 = load float, float* %IQ.i, align 4, !dbg !17165
  %mul118.i = fmul float %mul117.i, %122, !dbg !17166
  store float %mul118.i, float* %quantized.i, align 4, !dbg !17167
  %123 = load i32, i32* %c.i, align 4, !dbg !17168
  %or.i = or i32 %123, 1, !dbg !17169
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !17170
  %sub119.i = sub nsw i32 31, %124, !dbg !17171
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !17172
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !17173
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !17174
  %125 = load i32, i32* %curbits.i, align 4, !dbg !17175
  %add123.i = add nsw i32 %125, %add122.i, !dbg !17175
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !17175
  br label %if.end124.i, !dbg !16920

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !17176

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !17177
  %idxprom126.i = sext i32 %126 to i64, !dbg !17179
  %127 = load float*, float** %vec.i, align 8, !dbg !17179
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !17179
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !17179
  %129 = load float, float* %IQ.i, align 4, !dbg !17180
  %mul128.i = fmul float %128, %129, !dbg !17181
  store float %mul128.i, float* %quantized.i, align 4, !dbg !17182
  br label %if.end129.i, !dbg !16920

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !17183
  %131 = load float, float* %quantized.i, align 4, !dbg !17184
  %sub130.i = fsub float %130, %131, !dbg !17185
  store float %sub130.i, float* %di.i, align 4, !dbg !17186
  %132 = load float*, float** %out.addr.i, align 8, !dbg !17187
  %tobool131.i = icmp ne float* %132, null, !dbg !17187
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !17189

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !17190
  %134 = load i32, i32* %j.i, align 4, !dbg !17191
  %add133.i = add nsw i32 %133, %134, !dbg !17192
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !17193
  %135 = load float*, float** %in.addr.i, align 8, !dbg !17193
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !17193
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !17193
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !17194
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !17193

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !17195
  br label %cond.end.i, !dbg !17197

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !17198
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !17200
  br label %cond.end.i, !dbg !17201

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !17202
  %139 = load i32, i32* %i.i, align 4, !dbg !17204
  %140 = load i32, i32* %j.i, align 4, !dbg !17205
  %add140.i = add nsw i32 %139, %140, !dbg !17206
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !17207
  %141 = load float*, float** %out.addr.i, align 8, !dbg !17207
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !17207
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !17208
  br label %if.end143.i, !dbg !17207

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !17209
  %idxprom144.i = sext i32 %142 to i64, !dbg !17211
  %143 = load float*, float** %vec.i, align 8, !dbg !17211
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !17211
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !17211
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !17212
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !17213

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !17214
  %inc149.i = add nsw i32 %145, 1, !dbg !17214
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !17214
  br label %if.end150.i, !dbg !17215

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !17216
  %147 = load float, float* %quantized.i, align 4, !dbg !17217
  %mul151.i = fmul float %146, %147, !dbg !17218
  %148 = load float, float* %qenergy.i, align 4, !dbg !17219
  %add152.i = fadd float %148, %mul151.i, !dbg !17219
  store float %add152.i, float* %qenergy.i, align 4, !dbg !17219
  %149 = load float, float* %di.i, align 4, !dbg !17220
  %150 = load float, float* %di.i, align 4, !dbg !17221
  %mul153.i = fmul float %149, %150, !dbg !17222
  %151 = load float, float* %rd.i, align 4, !dbg !17223
  %add154.i = fadd float %151, %mul153.i, !dbg !17223
  store float %add154.i, float* %rd.i, align 4, !dbg !17223
  %152 = load i32, i32* %j.i, align 4, !dbg !17224
  %inc156.i = add nsw i32 %152, 1, !dbg !17224
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !17224
  br label %for.cond94.i, !dbg !17226, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !17229

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !17230
  br label %for.cond159.i, !dbg !17233

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !17234
  %154 = load i32, i32* %dim.i, align 4, !dbg !17237
  %cmp160.i = icmp slt i32 %153, %154, !dbg !17238
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !17239

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !17240
  %idxprom163.i = sext i32 %155 to i64, !dbg !17242
  %156 = load float*, float** %vec.i, align 8, !dbg !17242
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !17242
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !17242
  %158 = load float, float* %IQ.i, align 4, !dbg !17243
  %mul165.i = fmul float %157, %158, !dbg !17244
  store float %mul165.i, float* %quantized.i, align 4, !dbg !17245
  %159 = load float, float* %quantized.i, align 4, !dbg !17246
  %160 = load float, float* %quantized.i, align 4, !dbg !17247
  %mul166.i = fmul float %159, %160, !dbg !17248
  %161 = load float, float* %qenergy.i, align 4, !dbg !17249
  %add167.i = fadd float %161, %mul166.i, !dbg !17249
  store float %add167.i, float* %qenergy.i, align 4, !dbg !17249
  %162 = load float*, float** %out.addr.i, align 8, !dbg !17250
  %tobool168.i = icmp ne float* %162, null, !dbg !17250
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !17252

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !17253
  %164 = load i32, i32* %i.i, align 4, !dbg !17254
  %165 = load i32, i32* %j.i, align 4, !dbg !17255
  %add170.i = add nsw i32 %164, %165, !dbg !17256
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !17257
  %166 = load float*, float** %out.addr.i, align 8, !dbg !17257
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !17257
  store float %163, float* %arrayidx172.i, align 4, !dbg !17258
  br label %if.end173.i, !dbg !17257

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !17259
  %168 = load i32, i32* %j.i, align 4, !dbg !17260
  %add174.i = add nsw i32 %167, %168, !dbg !17261
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !17262
  %169 = load float*, float** %in.addr.i, align 8, !dbg !17262
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !17262
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !17262
  %171 = load float, float* %quantized.i, align 4, !dbg !17263
  %sub177.i = fsub float %170, %171, !dbg !17264
  %172 = load i32, i32* %i.i, align 4, !dbg !17265
  %173 = load i32, i32* %j.i, align 4, !dbg !17266
  %add178.i = add nsw i32 %172, %173, !dbg !17267
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !17268
  %174 = load float*, float** %in.addr.i, align 8, !dbg !17268
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !17268
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !17268
  %176 = load float, float* %quantized.i, align 4, !dbg !17269
  %sub181.i = fsub float %175, %176, !dbg !17270
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !17271
  %177 = load float, float* %rd.i, align 4, !dbg !17272
  %add183.i = fadd float %177, %mul182.i, !dbg !17272
  store float %add183.i, float* %rd.i, align 4, !dbg !17272
  %178 = load i32, i32* %j.i, align 4, !dbg !17273
  %inc185.i = add nsw i32 %178, 1, !dbg !17273
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !17273
  br label %for.cond159.i, !dbg !17275, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !16920

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !17278
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !17279
  %mul188.i = fmul float %179, %180, !dbg !17280
  %181 = load i32, i32* %curbits.i, align 4, !dbg !17281
  %conv189.i = sitofp i32 %181 to float, !dbg !17281
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !17282
  %182 = load float, float* %cost.i, align 4, !dbg !17283
  %add191.i = fadd float %182, %add190.i, !dbg !17283
  store float %add191.i, float* %cost.i, align 4, !dbg !17283
  %183 = load i32, i32* %curbits.i, align 4, !dbg !17284
  %184 = load i32, i32* %resbits.i, align 4, !dbg !17285
  %add192.i = add nsw i32 %184, %183, !dbg !17285
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !17285
  %185 = load float, float* %cost.i, align 4, !dbg !17286
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !17288
  %cmp193.i = fcmp oge float %185, %186, !dbg !17289
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !17290

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !17291
  store float %187, float* %retval.i, align 4, !dbg !17292
  br label %quantize_and_encode_band_cost_template.exit, !dbg !17292

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17293
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !17293
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !17294

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17295
  %190 = load i32, i32* %curidx.i, align 4, !dbg !17296
  %idxprom199.i = sext i32 %190 to i64, !dbg !17297
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !17298
  %sub200.i = sub nsw i32 %191, 1, !dbg !17299
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !17297
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !17297
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !17297
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !17297
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !17297
  %conv204.i = zext i8 %193 to i32, !dbg !17297
  %194 = load i32, i32* %curidx.i, align 4, !dbg !17300
  %idxprom205.i = sext i32 %194 to i64, !dbg !17301
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !17302
  %sub206.i = sub nsw i32 %195, 1, !dbg !17303
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !17301
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !17301
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !17301
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !17301
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !17301
  %conv210.i = zext i16 %197 to i32, !dbg !17301
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !17304
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17305
  %tobool211.i = icmp ne i32 %198, 0, !dbg !17305
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !17307

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !17308
  br label %for.cond213.i, !dbg !17310

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !17311
  %200 = load i32, i32* %dim.i, align 4, !dbg !17314
  %cmp214.i = icmp slt i32 %199, %200, !dbg !17315
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !17316

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !17317
  %202 = load i32, i32* %dim.i, align 4, !dbg !17319
  %mul217.i = mul nsw i32 %201, %202, !dbg !17320
  %203 = load i32, i32* %j.i, align 4, !dbg !17321
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !17322
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !17323
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !17324
  %sub220.i = sub nsw i32 %204, 1, !dbg !17325
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !17323
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !17323
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !17323
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !17323
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !17323
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !17326
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !17327

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17328
  %208 = load i32, i32* %i.i, align 4, !dbg !17329
  %209 = load i32, i32* %j.i, align 4, !dbg !17330
  %add227.i = add nsw i32 %208, %209, !dbg !17331
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !17332
  %210 = load float*, float** %in.addr.i, align 8, !dbg !17332
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !17332
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !17332
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !17333
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !17333
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !17334
  br label %if.end232.i, !dbg !17334

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !17335
  %inc234.i = add nsw i32 %212, 1, !dbg !17335
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !17335
  br label %for.cond213.i, !dbg !17337, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !17340

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !17342
  %tobool237.i = icmp ne i32 %213, 0, !dbg !17342
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !17343

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !17344
  br label %for.cond239.i, !dbg !17345

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !17346
  %cmp240.i = icmp slt i32 %214, 2, !dbg !17348
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !17349

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !17350
  %mul243.i = mul nsw i32 %215, 2, !dbg !17351
  %216 = load i32, i32* %j.i, align 4, !dbg !17352
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !17353
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !17354
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !17355
  %sub246.i = sub nsw i32 %217, 1, !dbg !17356
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !17354
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !17354
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !17354
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !17354
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !17354
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !17357
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !17358

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !17359
  %221 = load i32, i32* %j.i, align 4, !dbg !17360
  %add253.i = add nsw i32 %220, %221, !dbg !17361
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !17362
  %222 = load float*, float** %in.addr.i, align 8, !dbg !17362
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !17362
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !17362
  %call256.i = call float @fabsf(float %223) #3, !dbg !17363
  %224 = load float, float* %Q.i, align 4, !dbg !17364
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !17365
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !17366
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !17368
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !17368
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !17369
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !17370
  %shl.i284.i = shl i32 1, %227, !dbg !17371
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !17372
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !17373
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !17374
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !17374
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !17375

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !17376
  %neg1.i289.i = xor i32 %228, -1, !dbg !17377
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !17378
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !17379
  %shl2.i291.i = shl i32 1, %229, !dbg !17380
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !17381
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !17382
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !17383
  br label %av_clip_uintp2_c.exit296.i, !dbg !17383

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !17384
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !17385
  br label %av_clip_uintp2_c.exit296.i, !dbg !17385

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !17386
  store i32 %231, i32* %coef.i, align 4, !dbg !16881
  %232 = load i32, i32* %coef.i, align 4, !dbg !17387
  %or259.i = or i32 %232, 1, !dbg !17388
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !17389
  %sub260.i = sub nsw i32 31, %233, !dbg !17390
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !16883
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17391
  %235 = load i32, i32* %len.i, align 4, !dbg !17392
  %sub261.i = sub nsw i32 %235, 4, !dbg !17393
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !17394
  %236 = load i32, i32* %len.i, align 4, !dbg !17395
  %sub263.i = sub nsw i32 %236, 4, !dbg !17396
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !17397
  %shl.i = shl i32 1, %add264.i, !dbg !17398
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !17399
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !17400
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17401
  %238 = load i32, i32* %len.i, align 4, !dbg !17402
  %239 = load i32, i32* %coef.i, align 4, !dbg !17403
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !17404
  br label %if.end266.i, !dbg !17405

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !17406
  %inc268.i = add nsw i32 %240, 1, !dbg !17406
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !17406
  br label %for.cond239.i, !dbg !17408, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !17411

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !17412

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !17413
  %242 = load i32, i32* %i.i, align 4, !dbg !17415
  %add273.i = add nsw i32 %242, %241, !dbg !17415
  store i32 %add273.i, i32* %i.i, align 4, !dbg !17415
  br label %for.cond59.i, !dbg !17416, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !17419
  %tobool275.i = icmp ne i32* %243, null, !dbg !17419
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !17421

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !17422
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !17423
  store i32 %244, i32* %245, align 4, !dbg !17424
  br label %if.end277.i, !dbg !17425

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !17426
  %tobool278.i = icmp ne float* %246, null, !dbg !17426
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !17428

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !17429
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !17430
  store float %247, float* %248, align 4, !dbg !17431
  br label %if.end280.i, !dbg !17432

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !17433
  store float %249, float* %retval.i, align 4, !dbg !17434
  br label %quantize_and_encode_band_cost_template.exit, !dbg !17434

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !17435
  ret float %250, !dbg !17436
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_SQUAD(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !17437 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !17438
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !17441
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !17442
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !17444
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !17445
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !17446
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !17447
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !17448
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !17449
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !17450
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !17451
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !17452
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !17453
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !17454
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !17455
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !17456
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !17457
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !17458
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !17459
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !17460
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !17461
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !17462
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !17463
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !17464
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !17465
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !17466
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !17467
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !17468
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !17469
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !17470
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !17471
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !17472
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !17473
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !17474
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !17475
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !17476
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !17477
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !17478
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !17479
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !17480
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !17481
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !17482
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !17483
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !17484
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !17485
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !17486
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !17487, metadata !2772), !dbg !17488
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !17489, metadata !2772), !dbg !17490
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !17491, metadata !2772), !dbg !17492
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !17493, metadata !2772), !dbg !17494
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !17495, metadata !2772), !dbg !17496
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !17497, metadata !2772), !dbg !17498
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !17499, metadata !2772), !dbg !17500
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !17501, metadata !2772), !dbg !17502
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !17503, metadata !2772), !dbg !17504
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !17505, metadata !2772), !dbg !17506
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !17507, metadata !2772), !dbg !17508
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !17509, metadata !2772), !dbg !17510
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !17511
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !17512
  %2 = load float*, float** %in.addr, align 8, !dbg !17513
  %3 = load float*, float** %quant.addr, align 8, !dbg !17514
  %4 = load float*, float** %scaled.addr, align 8, !dbg !17515
  %5 = load i32, i32* %size.addr, align 4, !dbg !17516
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !17517
  %7 = load i32, i32* %cb.addr, align 4, !dbg !17518
  %8 = load float, float* %lambda.addr, align 4, !dbg !17519
  %9 = load float, float* %uplim.addr, align 4, !dbg !17520
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !17521
  %11 = load float*, float** %energy.addr, align 8, !dbg !17522
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17523
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17523
  store float* %2, float** %in.addr.i, align 8, !dbg !17523
  store float* %3, float** %out.addr.i, align 8, !dbg !17523
  store float* %4, float** %scaled.addr.i, align 8, !dbg !17523
  store i32 %5, i32* %size.addr.i, align 4, !dbg !17523
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !17523
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !17523
  store float %8, float* %lambda.addr.i, align 4, !dbg !17523
  store float %9, float* %uplim.addr.i, align 4, !dbg !17523
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !17523
  store float* %11, float** %energy.addr.i, align 8, !dbg !17523
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !17523
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17523
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !17523
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !17523
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !17523
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !17523
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !17523
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !17524
  %sub.i = sub nsw i32 200, %12, !dbg !17525
  %add.i = add nsw i32 %sub.i, 140, !dbg !17526
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !17527
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !17464
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !17528
  %idxprom.i = sext i32 %13 to i64, !dbg !17529
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !17529
  %14 = load float, float* %arrayidx.i, align 4, !dbg !17529
  store float %14, float* %Q.i, align 4, !dbg !17465
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !17530
  %idxprom2.i = sext i32 %15 to i64, !dbg !17531
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !17531
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !17531
  store float %16, float* %Q34.i, align 4, !dbg !17466
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !17532
  %add4.i = add nsw i32 200, %17, !dbg !17533
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !17534
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !17535
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !17536
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !17536
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !17536
  store float %18, float* %IQ.i, align 4, !dbg !17467
  %19 = load float, float* %IQ.i, align 4, !dbg !17537
  %mul.i = fmul float 1.651400e+05, %19, !dbg !17538
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !17468
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !17471
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !17472
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !17539
  %tobool.i = icmp ne i32 %20, 0, !dbg !17539
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !17539
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !17473
  store i32 0, i32* %resbits.i, align 4, !dbg !17474
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !17540
  %tobool9.i = icmp ne i32 %21, 0, !dbg !17540
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !17541

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !17542
  %tobool10.i = icmp ne i32 %22, 0, !dbg !17542
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !17543

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !17544
  %tobool12.i = icmp ne i32 %23, 0, !dbg !17544
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !17545

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !17546
  br label %for.cond.i, !dbg !17547

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !17548
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !17549
  %cmp.i = icmp slt i32 %24, %25, !dbg !17550
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !17551

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !17552
  %idxprom13.i = sext i32 %26 to i64, !dbg !17553
  %27 = load float*, float** %in.addr.i, align 8, !dbg !17553
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !17553
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !17553
  %29 = load i32, i32* %i.i, align 4, !dbg !17554
  %idxprom15.i = sext i32 %29 to i64, !dbg !17555
  %30 = load float*, float** %in.addr.i, align 8, !dbg !17555
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !17555
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !17555
  %mul17.i = fmul float %28, %31, !dbg !17556
  %32 = load float, float* %cost.i, align 4, !dbg !17557
  %add18.i = fadd float %32, %mul17.i, !dbg !17557
  store float %add18.i, float* %cost.i, align 4, !dbg !17557
  %33 = load i32, i32* %i.i, align 4, !dbg !17558
  %inc.i = add nsw i32 %33, 1, !dbg !17558
  store i32 %inc.i, i32* %i.i, align 4, !dbg !17558
  br label %for.cond.i, !dbg !17559, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !17560
  %tobool19.i = icmp ne i32* %34, null, !dbg !17560
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !17561

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !17562
  store i32 0, i32* %35, align 4, !dbg !17563
  br label %if.end.i, !dbg !17564

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !17565
  %tobool21.i = icmp ne float* %36, null, !dbg !17565
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !17566

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !17567
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !17568
  store float %37, float* %38, align 4, !dbg !17569
  br label %if.end23.i, !dbg !17570

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !17571
  %tobool24.i = icmp ne float* %39, null, !dbg !17571
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !17572

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !17573
  br label %for.cond26.i, !dbg !17574

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !17575
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !17576
  %cmp27.i = icmp slt i32 %40, %41, !dbg !17577
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !17578

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !17579
  br label %for.cond29.i, !dbg !17580

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !17581
  %43 = load i32, i32* %dim.i, align 4, !dbg !17582
  %cmp30.i = icmp slt i32 %42, %43, !dbg !17583
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !17584

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !17585
  %45 = load i32, i32* %j.i, align 4, !dbg !17586
  %add32.i = add nsw i32 %44, %45, !dbg !17587
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !17588
  %46 = load float*, float** %out.addr.i, align 8, !dbg !17588
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !17588
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !17589
  %47 = load i32, i32* %j.i, align 4, !dbg !17590
  %inc36.i = add nsw i32 %47, 1, !dbg !17590
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !17590
  br label %for.cond29.i, !dbg !17591, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !17592
  %49 = load i32, i32* %i.i, align 4, !dbg !17593
  %add39.i = add nsw i32 %49, %48, !dbg !17593
  store i32 %add39.i, i32* %i.i, align 4, !dbg !17593
  br label %for.cond26.i, !dbg !17594, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !17595

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !17596
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !17597
  %mul42.i = fmul float %50, %51, !dbg !17598
  store float %mul42.i, float* %retval.i, align 4, !dbg !17599
  br label %quantize_and_encode_band_cost_template.exit, !dbg !17599

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !17600
  %tobool44.i = icmp ne float* %52, null, !dbg !17600
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !17601

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17602
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !17603
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !17603
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17604
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !17605
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !17604
  %56 = load float*, float** %in.addr.i, align 8, !dbg !17606
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !17607
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !17602
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17608
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !17609
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !17608
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !17610
  br label %if.end48.i, !dbg !17611

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17612
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !17613
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !17613
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17614
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !17615
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !17614
  %62 = load float*, float** %in.addr.i, align 8, !dbg !17616
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !17617
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !17618
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17619
  %tobool50.i = icmp ne i32 %65, 0, !dbg !17620
  %lnot.i = xor i1 %tobool50.i, true, !dbg !17620
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !17620
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !17621
  %idxprom51.i = sext i32 %66 to i64, !dbg !17622
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !17622
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !17622
  %conv.i = zext i8 %67 to i32, !dbg !17622
  %68 = load float, float* %Q34.i, align 4, !dbg !17623
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !17624
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !17612
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17625
  %tobool53.i = icmp ne i32 %70, 0, !dbg !17625
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !17626

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !17627
  br label %if.end58.i, !dbg !17628

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !17629
  %idxprom55.i = sext i32 %71 to i64, !dbg !17630
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !17630
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !17630
  %conv57.i = zext i8 %72 to i32, !dbg !17630
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !17631
  br label %if.end58.i, !dbg !17523

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !17632
  br label %for.cond59.i, !dbg !17633

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !17634
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !17635
  %cmp60.i = icmp slt i32 %73, %74, !dbg !17636
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !17637

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !17638
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !17639
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !17638
  %76 = load i32, i32* %i.i, align 4, !dbg !17640
  %idx.ext.i = sext i32 %76 to i64, !dbg !17641
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !17641
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !17477
  store i32 0, i32* %curidx.i, align 4, !dbg !17478
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !17481
  store i32 0, i32* %j.i, align 4, !dbg !17642
  br label %for.cond65.i, !dbg !17643

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !17644
  %78 = load i32, i32* %dim.i, align 4, !dbg !17645
  %cmp66.i = icmp slt i32 %77, %78, !dbg !17646
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !17647

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !17648
  %idxprom69.i = sext i32 %79 to i64, !dbg !17649
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !17649
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !17649
  %conv71.i = zext i8 %80 to i32, !dbg !17649
  %81 = load i32, i32* %curidx.i, align 4, !dbg !17650
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !17650
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !17650
  %82 = load i32, i32* %j.i, align 4, !dbg !17651
  %idxprom73.i = sext i32 %82 to i64, !dbg !17652
  %83 = load i32*, i32** %quants.i, align 8, !dbg !17652
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !17652
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !17652
  %85 = load i32, i32* %off.i, align 4, !dbg !17653
  %add75.i = add nsw i32 %84, %85, !dbg !17654
  %86 = load i32, i32* %curidx.i, align 4, !dbg !17655
  %add76.i = add nsw i32 %86, %add75.i, !dbg !17655
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !17655
  %87 = load i32, i32* %j.i, align 4, !dbg !17656
  %inc78.i = add nsw i32 %87, 1, !dbg !17656
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !17656
  br label %for.cond65.i, !dbg !17657, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !17658
  %idxprom80.i = sext i32 %88 to i64, !dbg !17659
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !17660
  %sub81.i = sub nsw i32 %89, 1, !dbg !17661
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !17659
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !17659
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !17659
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !17659
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !17659
  %conv85.i = zext i8 %91 to i32, !dbg !17659
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !17662
  %92 = load i32, i32* %curidx.i, align 4, !dbg !17663
  %93 = load i32, i32* %dim.i, align 4, !dbg !17664
  %mul86.i = mul nsw i32 %92, %93, !dbg !17665
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !17666
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !17667
  %sub88.i = sub nsw i32 %94, 1, !dbg !17668
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !17666
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !17666
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !17666
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !17666
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !17669
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17670
  %tobool92.i = icmp ne i32 %96, 0, !dbg !17670
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !17671

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !17672
  br label %for.cond94.i, !dbg !17673

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !17674
  %98 = load i32, i32* %dim.i, align 4, !dbg !17675
  %cmp95.i = icmp slt i32 %97, %98, !dbg !17676
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !17677

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !17678
  %100 = load i32, i32* %j.i, align 4, !dbg !17679
  %add98.i = add nsw i32 %99, %100, !dbg !17680
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !17681
  %101 = load float*, float** %in.addr.i, align 8, !dbg !17681
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !17681
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !17681
  %call.i = call float @fabsf(float %102) #3, !dbg !17682
  store float %call.i, float* %t.i, align 4, !dbg !17482
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !17683
  %tobool101.i = icmp ne i32 %103, 0, !dbg !17683
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !17684

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !17685
  %idxprom102.i = sext i32 %104 to i64, !dbg !17686
  %105 = load float*, float** %vec.i, align 8, !dbg !17686
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !17686
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !17686
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !17687
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !17688

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !17689
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !17690
  %cmp107.i = fcmp oge float %107, %108, !dbg !17691
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !17692

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !17693
  store float %109, float* %quantized.i, align 4, !dbg !17694
  %110 = load i32, i32* %curbits.i, align 4, !dbg !17695
  %add110.i = add nsw i32 %110, 21, !dbg !17695
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !17695
  br label %if.end124.i, !dbg !17696

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !17697
  %112 = load float, float* %Q.i, align 4, !dbg !17698
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !17699
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !17700
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !17701
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !17701
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !17702
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !17703
  %shl.i.i = shl i32 1, %115, !dbg !17704
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !17705
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !17706
  %and.i.i = and i32 %114, %neg.i.i, !dbg !17707
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !17707
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !17708

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !17709
  %neg1.i.i = xor i32 %116, -1, !dbg !17710
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !17711
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !17712
  %shl2.i.i = shl i32 1, %117, !dbg !17713
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !17714
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !17715
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !17716
  br label %av_clip_uintp2_c.exit.i, !dbg !17716

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !17717
  store i32 %118, i32* %retval.i.i, align 4, !dbg !17718
  br label %av_clip_uintp2_c.exit.i, !dbg !17718

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !17719
  store i32 %119, i32* %c.i, align 4, !dbg !17484
  %120 = load i32, i32* %c.i, align 4, !dbg !17720
  %conv114.i = sitofp i32 %120 to float, !dbg !17720
  %121 = load i32, i32* %c.i, align 4, !dbg !17721
  %conv115.i = sitofp i32 %121 to float, !dbg !17721
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !17722
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !17723
  %122 = load float, float* %IQ.i, align 4, !dbg !17724
  %mul118.i = fmul float %mul117.i, %122, !dbg !17725
  store float %mul118.i, float* %quantized.i, align 4, !dbg !17726
  %123 = load i32, i32* %c.i, align 4, !dbg !17727
  %or.i = or i32 %123, 1, !dbg !17728
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !17729
  %sub119.i = sub nsw i32 31, %124, !dbg !17730
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !17731
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !17732
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !17733
  %125 = load i32, i32* %curbits.i, align 4, !dbg !17734
  %add123.i = add nsw i32 %125, %add122.i, !dbg !17734
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !17734
  br label %if.end124.i, !dbg !17523

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !17735

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !17736
  %idxprom126.i = sext i32 %126 to i64, !dbg !17737
  %127 = load float*, float** %vec.i, align 8, !dbg !17737
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !17737
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !17737
  %129 = load float, float* %IQ.i, align 4, !dbg !17738
  %mul128.i = fmul float %128, %129, !dbg !17739
  store float %mul128.i, float* %quantized.i, align 4, !dbg !17740
  br label %if.end129.i, !dbg !17523

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !17741
  %131 = load float, float* %quantized.i, align 4, !dbg !17742
  %sub130.i = fsub float %130, %131, !dbg !17743
  store float %sub130.i, float* %di.i, align 4, !dbg !17744
  %132 = load float*, float** %out.addr.i, align 8, !dbg !17745
  %tobool131.i = icmp ne float* %132, null, !dbg !17745
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !17746

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !17747
  %134 = load i32, i32* %j.i, align 4, !dbg !17748
  %add133.i = add nsw i32 %133, %134, !dbg !17749
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !17750
  %135 = load float*, float** %in.addr.i, align 8, !dbg !17750
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !17750
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !17750
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !17751
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !17750

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !17752
  br label %cond.end.i, !dbg !17753

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !17754
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !17755
  br label %cond.end.i, !dbg !17756

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !17757
  %139 = load i32, i32* %i.i, align 4, !dbg !17758
  %140 = load i32, i32* %j.i, align 4, !dbg !17759
  %add140.i = add nsw i32 %139, %140, !dbg !17760
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !17761
  %141 = load float*, float** %out.addr.i, align 8, !dbg !17761
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !17761
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !17762
  br label %if.end143.i, !dbg !17761

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !17763
  %idxprom144.i = sext i32 %142 to i64, !dbg !17764
  %143 = load float*, float** %vec.i, align 8, !dbg !17764
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !17764
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !17764
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !17765
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !17766

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !17767
  %inc149.i = add nsw i32 %145, 1, !dbg !17767
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !17767
  br label %if.end150.i, !dbg !17768

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !17769
  %147 = load float, float* %quantized.i, align 4, !dbg !17770
  %mul151.i = fmul float %146, %147, !dbg !17771
  %148 = load float, float* %qenergy.i, align 4, !dbg !17772
  %add152.i = fadd float %148, %mul151.i, !dbg !17772
  store float %add152.i, float* %qenergy.i, align 4, !dbg !17772
  %149 = load float, float* %di.i, align 4, !dbg !17773
  %150 = load float, float* %di.i, align 4, !dbg !17774
  %mul153.i = fmul float %149, %150, !dbg !17775
  %151 = load float, float* %rd.i, align 4, !dbg !17776
  %add154.i = fadd float %151, %mul153.i, !dbg !17776
  store float %add154.i, float* %rd.i, align 4, !dbg !17776
  %152 = load i32, i32* %j.i, align 4, !dbg !17777
  %inc156.i = add nsw i32 %152, 1, !dbg !17777
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !17777
  br label %for.cond94.i, !dbg !17778, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !17779

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !17780
  br label %for.cond159.i, !dbg !17781

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !17782
  %154 = load i32, i32* %dim.i, align 4, !dbg !17783
  %cmp160.i = icmp slt i32 %153, %154, !dbg !17784
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !17785

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !17786
  %idxprom163.i = sext i32 %155 to i64, !dbg !17787
  %156 = load float*, float** %vec.i, align 8, !dbg !17787
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !17787
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !17787
  %158 = load float, float* %IQ.i, align 4, !dbg !17788
  %mul165.i = fmul float %157, %158, !dbg !17789
  store float %mul165.i, float* %quantized.i, align 4, !dbg !17790
  %159 = load float, float* %quantized.i, align 4, !dbg !17791
  %160 = load float, float* %quantized.i, align 4, !dbg !17792
  %mul166.i = fmul float %159, %160, !dbg !17793
  %161 = load float, float* %qenergy.i, align 4, !dbg !17794
  %add167.i = fadd float %161, %mul166.i, !dbg !17794
  store float %add167.i, float* %qenergy.i, align 4, !dbg !17794
  %162 = load float*, float** %out.addr.i, align 8, !dbg !17795
  %tobool168.i = icmp ne float* %162, null, !dbg !17795
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !17796

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !17797
  %164 = load i32, i32* %i.i, align 4, !dbg !17798
  %165 = load i32, i32* %j.i, align 4, !dbg !17799
  %add170.i = add nsw i32 %164, %165, !dbg !17800
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !17801
  %166 = load float*, float** %out.addr.i, align 8, !dbg !17801
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !17801
  store float %163, float* %arrayidx172.i, align 4, !dbg !17802
  br label %if.end173.i, !dbg !17801

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !17803
  %168 = load i32, i32* %j.i, align 4, !dbg !17804
  %add174.i = add nsw i32 %167, %168, !dbg !17805
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !17806
  %169 = load float*, float** %in.addr.i, align 8, !dbg !17806
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !17806
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !17806
  %171 = load float, float* %quantized.i, align 4, !dbg !17807
  %sub177.i = fsub float %170, %171, !dbg !17808
  %172 = load i32, i32* %i.i, align 4, !dbg !17809
  %173 = load i32, i32* %j.i, align 4, !dbg !17810
  %add178.i = add nsw i32 %172, %173, !dbg !17811
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !17812
  %174 = load float*, float** %in.addr.i, align 8, !dbg !17812
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !17812
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !17812
  %176 = load float, float* %quantized.i, align 4, !dbg !17813
  %sub181.i = fsub float %175, %176, !dbg !17814
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !17815
  %177 = load float, float* %rd.i, align 4, !dbg !17816
  %add183.i = fadd float %177, %mul182.i, !dbg !17816
  store float %add183.i, float* %rd.i, align 4, !dbg !17816
  %178 = load i32, i32* %j.i, align 4, !dbg !17817
  %inc185.i = add nsw i32 %178, 1, !dbg !17817
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !17817
  br label %for.cond159.i, !dbg !17818, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !17523

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !17819
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !17820
  %mul188.i = fmul float %179, %180, !dbg !17821
  %181 = load i32, i32* %curbits.i, align 4, !dbg !17822
  %conv189.i = sitofp i32 %181 to float, !dbg !17822
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !17823
  %182 = load float, float* %cost.i, align 4, !dbg !17824
  %add191.i = fadd float %182, %add190.i, !dbg !17824
  store float %add191.i, float* %cost.i, align 4, !dbg !17824
  %183 = load i32, i32* %curbits.i, align 4, !dbg !17825
  %184 = load i32, i32* %resbits.i, align 4, !dbg !17826
  %add192.i = add nsw i32 %184, %183, !dbg !17826
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !17826
  %185 = load float, float* %cost.i, align 4, !dbg !17827
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !17828
  %cmp193.i = fcmp oge float %185, %186, !dbg !17829
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !17830

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !17831
  store float %187, float* %retval.i, align 4, !dbg !17832
  br label %quantize_and_encode_band_cost_template.exit, !dbg !17832

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17833
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !17833
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !17834

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17835
  %190 = load i32, i32* %curidx.i, align 4, !dbg !17836
  %idxprom199.i = sext i32 %190 to i64, !dbg !17837
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !17838
  %sub200.i = sub nsw i32 %191, 1, !dbg !17839
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !17837
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !17837
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !17837
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !17837
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !17837
  %conv204.i = zext i8 %193 to i32, !dbg !17837
  %194 = load i32, i32* %curidx.i, align 4, !dbg !17840
  %idxprom205.i = sext i32 %194 to i64, !dbg !17841
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !17842
  %sub206.i = sub nsw i32 %195, 1, !dbg !17843
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !17841
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !17841
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !17841
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !17841
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !17841
  %conv210.i = zext i16 %197 to i32, !dbg !17841
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !17844
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !17845
  %tobool211.i = icmp ne i32 %198, 0, !dbg !17845
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !17846

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !17847
  br label %for.cond213.i, !dbg !17848

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !17849
  %200 = load i32, i32* %dim.i, align 4, !dbg !17850
  %cmp214.i = icmp slt i32 %199, %200, !dbg !17851
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !17852

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !17853
  %202 = load i32, i32* %dim.i, align 4, !dbg !17854
  %mul217.i = mul nsw i32 %201, %202, !dbg !17855
  %203 = load i32, i32* %j.i, align 4, !dbg !17856
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !17857
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !17858
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !17859
  %sub220.i = sub nsw i32 %204, 1, !dbg !17860
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !17858
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !17858
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !17858
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !17858
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !17858
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !17861
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !17862

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17863
  %208 = load i32, i32* %i.i, align 4, !dbg !17864
  %209 = load i32, i32* %j.i, align 4, !dbg !17865
  %add227.i = add nsw i32 %208, %209, !dbg !17866
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !17867
  %210 = load float*, float** %in.addr.i, align 8, !dbg !17867
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !17867
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !17867
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !17868
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !17868
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !17869
  br label %if.end232.i, !dbg !17869

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !17870
  %inc234.i = add nsw i32 %212, 1, !dbg !17870
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !17870
  br label %for.cond213.i, !dbg !17871, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !17872

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !17873
  %tobool237.i = icmp ne i32 %213, 0, !dbg !17873
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !17874

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !17875
  br label %for.cond239.i, !dbg !17876

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !17877
  %cmp240.i = icmp slt i32 %214, 2, !dbg !17878
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !17879

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !17880
  %mul243.i = mul nsw i32 %215, 2, !dbg !17881
  %216 = load i32, i32* %j.i, align 4, !dbg !17882
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !17883
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !17884
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !17885
  %sub246.i = sub nsw i32 %217, 1, !dbg !17886
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !17884
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !17884
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !17884
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !17884
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !17884
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !17887
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !17888

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !17889
  %221 = load i32, i32* %j.i, align 4, !dbg !17890
  %add253.i = add nsw i32 %220, %221, !dbg !17891
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !17892
  %222 = load float*, float** %in.addr.i, align 8, !dbg !17892
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !17892
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !17892
  %call256.i = call float @fabsf(float %223) #3, !dbg !17893
  %224 = load float, float* %Q.i, align 4, !dbg !17894
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !17895
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !17896
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !17897
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !17897
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !17898
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !17899
  %shl.i284.i = shl i32 1, %227, !dbg !17900
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !17901
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !17902
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !17903
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !17903
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !17904

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !17905
  %neg1.i289.i = xor i32 %228, -1, !dbg !17906
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !17907
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !17908
  %shl2.i291.i = shl i32 1, %229, !dbg !17909
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !17910
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !17911
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !17912
  br label %av_clip_uintp2_c.exit296.i, !dbg !17912

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !17913
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !17914
  br label %av_clip_uintp2_c.exit296.i, !dbg !17914

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !17915
  store i32 %231, i32* %coef.i, align 4, !dbg !17485
  %232 = load i32, i32* %coef.i, align 4, !dbg !17916
  %or259.i = or i32 %232, 1, !dbg !17917
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !17918
  %sub260.i = sub nsw i32 31, %233, !dbg !17919
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !17486
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17920
  %235 = load i32, i32* %len.i, align 4, !dbg !17921
  %sub261.i = sub nsw i32 %235, 4, !dbg !17922
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !17923
  %236 = load i32, i32* %len.i, align 4, !dbg !17924
  %sub263.i = sub nsw i32 %236, 4, !dbg !17925
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !17926
  %shl.i = shl i32 1, %add264.i, !dbg !17927
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !17928
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !17929
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !17930
  %238 = load i32, i32* %len.i, align 4, !dbg !17931
  %239 = load i32, i32* %coef.i, align 4, !dbg !17932
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !17933
  br label %if.end266.i, !dbg !17934

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !17935
  %inc268.i = add nsw i32 %240, 1, !dbg !17935
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !17935
  br label %for.cond239.i, !dbg !17936, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !17937

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !17938

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !17939
  %242 = load i32, i32* %i.i, align 4, !dbg !17940
  %add273.i = add nsw i32 %242, %241, !dbg !17940
  store i32 %add273.i, i32* %i.i, align 4, !dbg !17940
  br label %for.cond59.i, !dbg !17941, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !17942
  %tobool275.i = icmp ne i32* %243, null, !dbg !17942
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !17943

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !17944
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !17945
  store i32 %244, i32* %245, align 4, !dbg !17946
  br label %if.end277.i, !dbg !17947

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !17948
  %tobool278.i = icmp ne float* %246, null, !dbg !17948
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !17949

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !17950
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !17951
  store float %247, float* %248, align 4, !dbg !17952
  br label %if.end280.i, !dbg !17953

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !17954
  store float %249, float* %retval.i, align 4, !dbg !17955
  br label %quantize_and_encode_band_cost_template.exit, !dbg !17955

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !17956
  ret float %250, !dbg !17957
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_UQUAD(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !17958 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !17959
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !17962
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !17963
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !17965
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !17966
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !17967
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !17968
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !17969
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !17970
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !17971
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !17972
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !17973
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !17974
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !17975
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !17976
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !17977
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !17978
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !17979
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !17980
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !17981
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !17982
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !17983
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !17984
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !17985
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !17986
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !17987
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !17988
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !17989
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !17990
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !17991
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !17992
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !17993
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !17994
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !17995
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !17996
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !17997
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !17998
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !17999
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !18000
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !18001
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !18002
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !18003
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !18004
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !18005
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !18006
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !18007
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !18008, metadata !2772), !dbg !18009
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !18010, metadata !2772), !dbg !18011
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !18012, metadata !2772), !dbg !18013
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !18014, metadata !2772), !dbg !18015
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !18016, metadata !2772), !dbg !18017
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18018, metadata !2772), !dbg !18019
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !18020, metadata !2772), !dbg !18021
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !18022, metadata !2772), !dbg !18023
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !18024, metadata !2772), !dbg !18025
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !18026, metadata !2772), !dbg !18027
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !18028, metadata !2772), !dbg !18029
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !18030, metadata !2772), !dbg !18031
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !18032
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !18033
  %2 = load float*, float** %in.addr, align 8, !dbg !18034
  %3 = load float*, float** %quant.addr, align 8, !dbg !18035
  %4 = load float*, float** %scaled.addr, align 8, !dbg !18036
  %5 = load i32, i32* %size.addr, align 4, !dbg !18037
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !18038
  %7 = load i32, i32* %cb.addr, align 4, !dbg !18039
  %8 = load float, float* %lambda.addr, align 4, !dbg !18040
  %9 = load float, float* %uplim.addr, align 4, !dbg !18041
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !18042
  %11 = load float*, float** %energy.addr, align 8, !dbg !18043
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18044
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18044
  store float* %2, float** %in.addr.i, align 8, !dbg !18044
  store float* %3, float** %out.addr.i, align 8, !dbg !18044
  store float* %4, float** %scaled.addr.i, align 8, !dbg !18044
  store i32 %5, i32* %size.addr.i, align 4, !dbg !18044
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !18044
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !18044
  store float %8, float* %lambda.addr.i, align 4, !dbg !18044
  store float %9, float* %uplim.addr.i, align 4, !dbg !18044
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !18044
  store float* %11, float** %energy.addr.i, align 8, !dbg !18044
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !18044
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18044
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !18044
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !18044
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !18044
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !18044
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !18044
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !18045
  %sub.i = sub nsw i32 200, %12, !dbg !18046
  %add.i = add nsw i32 %sub.i, 140, !dbg !18047
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !18048
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !17985
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !18049
  %idxprom.i = sext i32 %13 to i64, !dbg !18050
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !18050
  %14 = load float, float* %arrayidx.i, align 4, !dbg !18050
  store float %14, float* %Q.i, align 4, !dbg !17986
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !18051
  %idxprom2.i = sext i32 %15 to i64, !dbg !18052
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !18052
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !18052
  store float %16, float* %Q34.i, align 4, !dbg !17987
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !18053
  %add4.i = add nsw i32 200, %17, !dbg !18054
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !18055
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !18056
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !18057
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !18057
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !18057
  store float %18, float* %IQ.i, align 4, !dbg !17988
  %19 = load float, float* %IQ.i, align 4, !dbg !18058
  %mul.i = fmul float 1.651400e+05, %19, !dbg !18059
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !17989
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !17992
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !17993
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !18060
  %tobool.i = icmp ne i32 %20, 0, !dbg !18060
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !18060
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !17994
  store i32 0, i32* %resbits.i, align 4, !dbg !17995
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !18061
  %tobool9.i = icmp ne i32 %21, 0, !dbg !18061
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !18062

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !18063
  %tobool10.i = icmp ne i32 %22, 0, !dbg !18063
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !18064

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !18065
  %tobool12.i = icmp ne i32 %23, 0, !dbg !18065
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !18066

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !18067
  br label %for.cond.i, !dbg !18068

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !18069
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !18070
  %cmp.i = icmp slt i32 %24, %25, !dbg !18071
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !18072

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !18073
  %idxprom13.i = sext i32 %26 to i64, !dbg !18074
  %27 = load float*, float** %in.addr.i, align 8, !dbg !18074
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !18074
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !18074
  %29 = load i32, i32* %i.i, align 4, !dbg !18075
  %idxprom15.i = sext i32 %29 to i64, !dbg !18076
  %30 = load float*, float** %in.addr.i, align 8, !dbg !18076
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !18076
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !18076
  %mul17.i = fmul float %28, %31, !dbg !18077
  %32 = load float, float* %cost.i, align 4, !dbg !18078
  %add18.i = fadd float %32, %mul17.i, !dbg !18078
  store float %add18.i, float* %cost.i, align 4, !dbg !18078
  %33 = load i32, i32* %i.i, align 4, !dbg !18079
  %inc.i = add nsw i32 %33, 1, !dbg !18079
  store i32 %inc.i, i32* %i.i, align 4, !dbg !18079
  br label %for.cond.i, !dbg !18080, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !18081
  %tobool19.i = icmp ne i32* %34, null, !dbg !18081
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !18082

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !18083
  store i32 0, i32* %35, align 4, !dbg !18084
  br label %if.end.i, !dbg !18085

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !18086
  %tobool21.i = icmp ne float* %36, null, !dbg !18086
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !18087

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !18088
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !18089
  store float %37, float* %38, align 4, !dbg !18090
  br label %if.end23.i, !dbg !18091

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !18092
  %tobool24.i = icmp ne float* %39, null, !dbg !18092
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !18093

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !18094
  br label %for.cond26.i, !dbg !18095

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !18096
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !18097
  %cmp27.i = icmp slt i32 %40, %41, !dbg !18098
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !18099

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !18100
  br label %for.cond29.i, !dbg !18101

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !18102
  %43 = load i32, i32* %dim.i, align 4, !dbg !18103
  %cmp30.i = icmp slt i32 %42, %43, !dbg !18104
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !18105

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !18106
  %45 = load i32, i32* %j.i, align 4, !dbg !18107
  %add32.i = add nsw i32 %44, %45, !dbg !18108
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !18109
  %46 = load float*, float** %out.addr.i, align 8, !dbg !18109
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !18109
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !18110
  %47 = load i32, i32* %j.i, align 4, !dbg !18111
  %inc36.i = add nsw i32 %47, 1, !dbg !18111
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !18111
  br label %for.cond29.i, !dbg !18112, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !18113
  %49 = load i32, i32* %i.i, align 4, !dbg !18114
  %add39.i = add nsw i32 %49, %48, !dbg !18114
  store i32 %add39.i, i32* %i.i, align 4, !dbg !18114
  br label %for.cond26.i, !dbg !18115, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !18116

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !18117
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !18118
  %mul42.i = fmul float %50, %51, !dbg !18119
  store float %mul42.i, float* %retval.i, align 4, !dbg !18120
  br label %quantize_and_encode_band_cost_template.exit, !dbg !18120

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !18121
  %tobool44.i = icmp ne float* %52, null, !dbg !18121
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !18122

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18123
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !18124
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !18124
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18125
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !18126
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !18125
  %56 = load float*, float** %in.addr.i, align 8, !dbg !18127
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !18128
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !18123
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18129
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !18130
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !18129
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !18131
  br label %if.end48.i, !dbg !18132

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18133
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !18134
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !18134
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18135
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !18136
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !18135
  %62 = load float*, float** %in.addr.i, align 8, !dbg !18137
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !18138
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !18139
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18140
  %tobool50.i = icmp ne i32 %65, 0, !dbg !18141
  %lnot.i = xor i1 %tobool50.i, true, !dbg !18141
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !18141
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !18142
  %idxprom51.i = sext i32 %66 to i64, !dbg !18143
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !18143
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !18143
  %conv.i = zext i8 %67 to i32, !dbg !18143
  %68 = load float, float* %Q34.i, align 4, !dbg !18144
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !18145
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !18133
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18146
  %tobool53.i = icmp ne i32 %70, 0, !dbg !18146
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !18147

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !18148
  br label %if.end58.i, !dbg !18149

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !18150
  %idxprom55.i = sext i32 %71 to i64, !dbg !18151
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !18151
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !18151
  %conv57.i = zext i8 %72 to i32, !dbg !18151
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !18152
  br label %if.end58.i, !dbg !18044

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !18153
  br label %for.cond59.i, !dbg !18154

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !18155
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !18156
  %cmp60.i = icmp slt i32 %73, %74, !dbg !18157
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !18158

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18159
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !18160
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !18159
  %76 = load i32, i32* %i.i, align 4, !dbg !18161
  %idx.ext.i = sext i32 %76 to i64, !dbg !18162
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !18162
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !17998
  store i32 0, i32* %curidx.i, align 4, !dbg !17999
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !18002
  store i32 0, i32* %j.i, align 4, !dbg !18163
  br label %for.cond65.i, !dbg !18164

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !18165
  %78 = load i32, i32* %dim.i, align 4, !dbg !18166
  %cmp66.i = icmp slt i32 %77, %78, !dbg !18167
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !18168

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !18169
  %idxprom69.i = sext i32 %79 to i64, !dbg !18170
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !18170
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !18170
  %conv71.i = zext i8 %80 to i32, !dbg !18170
  %81 = load i32, i32* %curidx.i, align 4, !dbg !18171
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !18171
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !18171
  %82 = load i32, i32* %j.i, align 4, !dbg !18172
  %idxprom73.i = sext i32 %82 to i64, !dbg !18173
  %83 = load i32*, i32** %quants.i, align 8, !dbg !18173
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !18173
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !18173
  %85 = load i32, i32* %off.i, align 4, !dbg !18174
  %add75.i = add nsw i32 %84, %85, !dbg !18175
  %86 = load i32, i32* %curidx.i, align 4, !dbg !18176
  %add76.i = add nsw i32 %86, %add75.i, !dbg !18176
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !18176
  %87 = load i32, i32* %j.i, align 4, !dbg !18177
  %inc78.i = add nsw i32 %87, 1, !dbg !18177
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !18177
  br label %for.cond65.i, !dbg !18178, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !18179
  %idxprom80.i = sext i32 %88 to i64, !dbg !18180
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !18181
  %sub81.i = sub nsw i32 %89, 1, !dbg !18182
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !18180
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !18180
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !18180
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !18180
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !18180
  %conv85.i = zext i8 %91 to i32, !dbg !18180
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !18183
  %92 = load i32, i32* %curidx.i, align 4, !dbg !18184
  %93 = load i32, i32* %dim.i, align 4, !dbg !18185
  %mul86.i = mul nsw i32 %92, %93, !dbg !18186
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !18187
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !18188
  %sub88.i = sub nsw i32 %94, 1, !dbg !18189
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !18187
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !18187
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !18187
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !18187
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !18190
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18191
  %tobool92.i = icmp ne i32 %96, 0, !dbg !18191
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !18192

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !18193
  br label %for.cond94.i, !dbg !18194

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !18195
  %98 = load i32, i32* %dim.i, align 4, !dbg !18196
  %cmp95.i = icmp slt i32 %97, %98, !dbg !18197
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !18198

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !18199
  %100 = load i32, i32* %j.i, align 4, !dbg !18200
  %add98.i = add nsw i32 %99, %100, !dbg !18201
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !18202
  %101 = load float*, float** %in.addr.i, align 8, !dbg !18202
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !18202
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !18202
  %call.i = call float @fabsf(float %102) #3, !dbg !18203
  store float %call.i, float* %t.i, align 4, !dbg !18003
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !18204
  %tobool101.i = icmp ne i32 %103, 0, !dbg !18204
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !18205

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !18206
  %idxprom102.i = sext i32 %104 to i64, !dbg !18207
  %105 = load float*, float** %vec.i, align 8, !dbg !18207
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !18207
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !18207
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !18208
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !18209

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !18210
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !18211
  %cmp107.i = fcmp oge float %107, %108, !dbg !18212
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !18213

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !18214
  store float %109, float* %quantized.i, align 4, !dbg !18215
  %110 = load i32, i32* %curbits.i, align 4, !dbg !18216
  %add110.i = add nsw i32 %110, 21, !dbg !18216
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !18216
  br label %if.end124.i, !dbg !18217

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !18218
  %112 = load float, float* %Q.i, align 4, !dbg !18219
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !18220
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !18221
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !18222
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !18222
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !18223
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !18224
  %shl.i.i = shl i32 1, %115, !dbg !18225
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !18226
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !18227
  %and.i.i = and i32 %114, %neg.i.i, !dbg !18228
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !18228
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !18229

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !18230
  %neg1.i.i = xor i32 %116, -1, !dbg !18231
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !18232
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !18233
  %shl2.i.i = shl i32 1, %117, !dbg !18234
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !18235
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !18236
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !18237
  br label %av_clip_uintp2_c.exit.i, !dbg !18237

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !18238
  store i32 %118, i32* %retval.i.i, align 4, !dbg !18239
  br label %av_clip_uintp2_c.exit.i, !dbg !18239

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !18240
  store i32 %119, i32* %c.i, align 4, !dbg !18005
  %120 = load i32, i32* %c.i, align 4, !dbg !18241
  %conv114.i = sitofp i32 %120 to float, !dbg !18241
  %121 = load i32, i32* %c.i, align 4, !dbg !18242
  %conv115.i = sitofp i32 %121 to float, !dbg !18242
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !18243
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !18244
  %122 = load float, float* %IQ.i, align 4, !dbg !18245
  %mul118.i = fmul float %mul117.i, %122, !dbg !18246
  store float %mul118.i, float* %quantized.i, align 4, !dbg !18247
  %123 = load i32, i32* %c.i, align 4, !dbg !18248
  %or.i = or i32 %123, 1, !dbg !18249
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !18250
  %sub119.i = sub nsw i32 31, %124, !dbg !18251
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !18252
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !18253
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !18254
  %125 = load i32, i32* %curbits.i, align 4, !dbg !18255
  %add123.i = add nsw i32 %125, %add122.i, !dbg !18255
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !18255
  br label %if.end124.i, !dbg !18044

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !18256

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !18257
  %idxprom126.i = sext i32 %126 to i64, !dbg !18258
  %127 = load float*, float** %vec.i, align 8, !dbg !18258
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !18258
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !18258
  %129 = load float, float* %IQ.i, align 4, !dbg !18259
  %mul128.i = fmul float %128, %129, !dbg !18260
  store float %mul128.i, float* %quantized.i, align 4, !dbg !18261
  br label %if.end129.i, !dbg !18044

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !18262
  %131 = load float, float* %quantized.i, align 4, !dbg !18263
  %sub130.i = fsub float %130, %131, !dbg !18264
  store float %sub130.i, float* %di.i, align 4, !dbg !18265
  %132 = load float*, float** %out.addr.i, align 8, !dbg !18266
  %tobool131.i = icmp ne float* %132, null, !dbg !18266
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !18267

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !18268
  %134 = load i32, i32* %j.i, align 4, !dbg !18269
  %add133.i = add nsw i32 %133, %134, !dbg !18270
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !18271
  %135 = load float*, float** %in.addr.i, align 8, !dbg !18271
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !18271
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !18271
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !18272
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !18271

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !18273
  br label %cond.end.i, !dbg !18274

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !18275
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !18276
  br label %cond.end.i, !dbg !18277

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !18278
  %139 = load i32, i32* %i.i, align 4, !dbg !18279
  %140 = load i32, i32* %j.i, align 4, !dbg !18280
  %add140.i = add nsw i32 %139, %140, !dbg !18281
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !18282
  %141 = load float*, float** %out.addr.i, align 8, !dbg !18282
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !18282
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !18283
  br label %if.end143.i, !dbg !18282

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !18284
  %idxprom144.i = sext i32 %142 to i64, !dbg !18285
  %143 = load float*, float** %vec.i, align 8, !dbg !18285
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !18285
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !18285
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !18286
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !18287

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !18288
  %inc149.i = add nsw i32 %145, 1, !dbg !18288
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !18288
  br label %if.end150.i, !dbg !18289

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !18290
  %147 = load float, float* %quantized.i, align 4, !dbg !18291
  %mul151.i = fmul float %146, %147, !dbg !18292
  %148 = load float, float* %qenergy.i, align 4, !dbg !18293
  %add152.i = fadd float %148, %mul151.i, !dbg !18293
  store float %add152.i, float* %qenergy.i, align 4, !dbg !18293
  %149 = load float, float* %di.i, align 4, !dbg !18294
  %150 = load float, float* %di.i, align 4, !dbg !18295
  %mul153.i = fmul float %149, %150, !dbg !18296
  %151 = load float, float* %rd.i, align 4, !dbg !18297
  %add154.i = fadd float %151, %mul153.i, !dbg !18297
  store float %add154.i, float* %rd.i, align 4, !dbg !18297
  %152 = load i32, i32* %j.i, align 4, !dbg !18298
  %inc156.i = add nsw i32 %152, 1, !dbg !18298
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !18298
  br label %for.cond94.i, !dbg !18299, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !18300

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !18301
  br label %for.cond159.i, !dbg !18302

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !18303
  %154 = load i32, i32* %dim.i, align 4, !dbg !18304
  %cmp160.i = icmp slt i32 %153, %154, !dbg !18305
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !18306

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !18307
  %idxprom163.i = sext i32 %155 to i64, !dbg !18308
  %156 = load float*, float** %vec.i, align 8, !dbg !18308
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !18308
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !18308
  %158 = load float, float* %IQ.i, align 4, !dbg !18309
  %mul165.i = fmul float %157, %158, !dbg !18310
  store float %mul165.i, float* %quantized.i, align 4, !dbg !18311
  %159 = load float, float* %quantized.i, align 4, !dbg !18312
  %160 = load float, float* %quantized.i, align 4, !dbg !18313
  %mul166.i = fmul float %159, %160, !dbg !18314
  %161 = load float, float* %qenergy.i, align 4, !dbg !18315
  %add167.i = fadd float %161, %mul166.i, !dbg !18315
  store float %add167.i, float* %qenergy.i, align 4, !dbg !18315
  %162 = load float*, float** %out.addr.i, align 8, !dbg !18316
  %tobool168.i = icmp ne float* %162, null, !dbg !18316
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !18317

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !18318
  %164 = load i32, i32* %i.i, align 4, !dbg !18319
  %165 = load i32, i32* %j.i, align 4, !dbg !18320
  %add170.i = add nsw i32 %164, %165, !dbg !18321
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !18322
  %166 = load float*, float** %out.addr.i, align 8, !dbg !18322
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !18322
  store float %163, float* %arrayidx172.i, align 4, !dbg !18323
  br label %if.end173.i, !dbg !18322

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !18324
  %168 = load i32, i32* %j.i, align 4, !dbg !18325
  %add174.i = add nsw i32 %167, %168, !dbg !18326
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !18327
  %169 = load float*, float** %in.addr.i, align 8, !dbg !18327
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !18327
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !18327
  %171 = load float, float* %quantized.i, align 4, !dbg !18328
  %sub177.i = fsub float %170, %171, !dbg !18329
  %172 = load i32, i32* %i.i, align 4, !dbg !18330
  %173 = load i32, i32* %j.i, align 4, !dbg !18331
  %add178.i = add nsw i32 %172, %173, !dbg !18332
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !18333
  %174 = load float*, float** %in.addr.i, align 8, !dbg !18333
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !18333
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !18333
  %176 = load float, float* %quantized.i, align 4, !dbg !18334
  %sub181.i = fsub float %175, %176, !dbg !18335
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !18336
  %177 = load float, float* %rd.i, align 4, !dbg !18337
  %add183.i = fadd float %177, %mul182.i, !dbg !18337
  store float %add183.i, float* %rd.i, align 4, !dbg !18337
  %178 = load i32, i32* %j.i, align 4, !dbg !18338
  %inc185.i = add nsw i32 %178, 1, !dbg !18338
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !18338
  br label %for.cond159.i, !dbg !18339, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !18044

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !18340
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !18341
  %mul188.i = fmul float %179, %180, !dbg !18342
  %181 = load i32, i32* %curbits.i, align 4, !dbg !18343
  %conv189.i = sitofp i32 %181 to float, !dbg !18343
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !18344
  %182 = load float, float* %cost.i, align 4, !dbg !18345
  %add191.i = fadd float %182, %add190.i, !dbg !18345
  store float %add191.i, float* %cost.i, align 4, !dbg !18345
  %183 = load i32, i32* %curbits.i, align 4, !dbg !18346
  %184 = load i32, i32* %resbits.i, align 4, !dbg !18347
  %add192.i = add nsw i32 %184, %183, !dbg !18347
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !18347
  %185 = load float, float* %cost.i, align 4, !dbg !18348
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !18349
  %cmp193.i = fcmp oge float %185, %186, !dbg !18350
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !18351

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !18352
  store float %187, float* %retval.i, align 4, !dbg !18353
  br label %quantize_and_encode_band_cost_template.exit, !dbg !18353

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18354
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !18354
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !18355

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18356
  %190 = load i32, i32* %curidx.i, align 4, !dbg !18357
  %idxprom199.i = sext i32 %190 to i64, !dbg !18358
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !18359
  %sub200.i = sub nsw i32 %191, 1, !dbg !18360
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !18358
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !18358
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !18358
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !18358
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !18358
  %conv204.i = zext i8 %193 to i32, !dbg !18358
  %194 = load i32, i32* %curidx.i, align 4, !dbg !18361
  %idxprom205.i = sext i32 %194 to i64, !dbg !18362
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !18363
  %sub206.i = sub nsw i32 %195, 1, !dbg !18364
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !18362
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !18362
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !18362
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !18362
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !18362
  %conv210.i = zext i16 %197 to i32, !dbg !18362
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !18365
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18366
  %tobool211.i = icmp ne i32 %198, 0, !dbg !18366
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !18367

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !18368
  br label %for.cond213.i, !dbg !18369

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !18370
  %200 = load i32, i32* %dim.i, align 4, !dbg !18371
  %cmp214.i = icmp slt i32 %199, %200, !dbg !18372
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !18373

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !18374
  %202 = load i32, i32* %dim.i, align 4, !dbg !18375
  %mul217.i = mul nsw i32 %201, %202, !dbg !18376
  %203 = load i32, i32* %j.i, align 4, !dbg !18377
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !18378
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !18379
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !18380
  %sub220.i = sub nsw i32 %204, 1, !dbg !18381
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !18379
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !18379
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !18379
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !18379
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !18379
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !18382
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !18383

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18384
  %208 = load i32, i32* %i.i, align 4, !dbg !18385
  %209 = load i32, i32* %j.i, align 4, !dbg !18386
  %add227.i = add nsw i32 %208, %209, !dbg !18387
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !18388
  %210 = load float*, float** %in.addr.i, align 8, !dbg !18388
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !18388
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !18388
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !18389
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !18389
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !18390
  br label %if.end232.i, !dbg !18390

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !18391
  %inc234.i = add nsw i32 %212, 1, !dbg !18391
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !18391
  br label %for.cond213.i, !dbg !18392, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !18393

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !18394
  %tobool237.i = icmp ne i32 %213, 0, !dbg !18394
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !18395

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !18396
  br label %for.cond239.i, !dbg !18397

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !18398
  %cmp240.i = icmp slt i32 %214, 2, !dbg !18399
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !18400

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !18401
  %mul243.i = mul nsw i32 %215, 2, !dbg !18402
  %216 = load i32, i32* %j.i, align 4, !dbg !18403
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !18404
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !18405
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !18406
  %sub246.i = sub nsw i32 %217, 1, !dbg !18407
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !18405
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !18405
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !18405
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !18405
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !18405
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !18408
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !18409

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !18410
  %221 = load i32, i32* %j.i, align 4, !dbg !18411
  %add253.i = add nsw i32 %220, %221, !dbg !18412
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !18413
  %222 = load float*, float** %in.addr.i, align 8, !dbg !18413
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !18413
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !18413
  %call256.i = call float @fabsf(float %223) #3, !dbg !18414
  %224 = load float, float* %Q.i, align 4, !dbg !18415
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !18416
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !18417
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !18418
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !18418
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !18419
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !18420
  %shl.i284.i = shl i32 1, %227, !dbg !18421
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !18422
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !18423
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !18424
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !18424
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !18425

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !18426
  %neg1.i289.i = xor i32 %228, -1, !dbg !18427
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !18428
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !18429
  %shl2.i291.i = shl i32 1, %229, !dbg !18430
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !18431
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !18432
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !18433
  br label %av_clip_uintp2_c.exit296.i, !dbg !18433

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !18434
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !18435
  br label %av_clip_uintp2_c.exit296.i, !dbg !18435

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !18436
  store i32 %231, i32* %coef.i, align 4, !dbg !18006
  %232 = load i32, i32* %coef.i, align 4, !dbg !18437
  %or259.i = or i32 %232, 1, !dbg !18438
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !18439
  %sub260.i = sub nsw i32 31, %233, !dbg !18440
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !18007
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18441
  %235 = load i32, i32* %len.i, align 4, !dbg !18442
  %sub261.i = sub nsw i32 %235, 4, !dbg !18443
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !18444
  %236 = load i32, i32* %len.i, align 4, !dbg !18445
  %sub263.i = sub nsw i32 %236, 4, !dbg !18446
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !18447
  %shl.i = shl i32 1, %add264.i, !dbg !18448
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !18449
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !18450
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18451
  %238 = load i32, i32* %len.i, align 4, !dbg !18452
  %239 = load i32, i32* %coef.i, align 4, !dbg !18453
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !18454
  br label %if.end266.i, !dbg !18455

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !18456
  %inc268.i = add nsw i32 %240, 1, !dbg !18456
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !18456
  br label %for.cond239.i, !dbg !18457, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !18458

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !18459

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !18460
  %242 = load i32, i32* %i.i, align 4, !dbg !18461
  %add273.i = add nsw i32 %242, %241, !dbg !18461
  store i32 %add273.i, i32* %i.i, align 4, !dbg !18461
  br label %for.cond59.i, !dbg !18462, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !18463
  %tobool275.i = icmp ne i32* %243, null, !dbg !18463
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !18464

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !18465
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !18466
  store i32 %244, i32* %245, align 4, !dbg !18467
  br label %if.end277.i, !dbg !18468

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !18469
  %tobool278.i = icmp ne float* %246, null, !dbg !18469
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !18470

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !18471
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !18472
  store float %247, float* %248, align 4, !dbg !18473
  br label %if.end280.i, !dbg !18474

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !18475
  store float %249, float* %retval.i, align 4, !dbg !18476
  br label %quantize_and_encode_band_cost_template.exit, !dbg !18476

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !18477
  ret float %250, !dbg !18478
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_SPAIR(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !18479 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !18480
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !18483
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !18484
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !18486
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !18487
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !18488
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !18489
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !18490
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !18491
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !18492
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !18493
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !18494
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !18495
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !18496
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !18497
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !18498
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !18499
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !18500
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !18501
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !18502
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !18503
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !18504
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !18505
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !18506
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !18507
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !18508
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !18509
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !18510
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !18511
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !18512
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !18513
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !18514
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !18515
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !18516
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !18517
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !18518
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !18519
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !18520
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !18521
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !18522
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !18523
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !18524
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !18525
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !18526
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !18527
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !18528
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !18529, metadata !2772), !dbg !18530
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !18531, metadata !2772), !dbg !18532
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !18533, metadata !2772), !dbg !18534
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !18535, metadata !2772), !dbg !18536
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !18537, metadata !2772), !dbg !18538
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18539, metadata !2772), !dbg !18540
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !18541, metadata !2772), !dbg !18542
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !18543, metadata !2772), !dbg !18544
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !18545, metadata !2772), !dbg !18546
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !18547, metadata !2772), !dbg !18548
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !18549, metadata !2772), !dbg !18550
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !18551, metadata !2772), !dbg !18552
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !18553
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !18554
  %2 = load float*, float** %in.addr, align 8, !dbg !18555
  %3 = load float*, float** %quant.addr, align 8, !dbg !18556
  %4 = load float*, float** %scaled.addr, align 8, !dbg !18557
  %5 = load i32, i32* %size.addr, align 4, !dbg !18558
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !18559
  %7 = load i32, i32* %cb.addr, align 4, !dbg !18560
  %8 = load float, float* %lambda.addr, align 4, !dbg !18561
  %9 = load float, float* %uplim.addr, align 4, !dbg !18562
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !18563
  %11 = load float*, float** %energy.addr, align 8, !dbg !18564
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18565
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18565
  store float* %2, float** %in.addr.i, align 8, !dbg !18565
  store float* %3, float** %out.addr.i, align 8, !dbg !18565
  store float* %4, float** %scaled.addr.i, align 8, !dbg !18565
  store i32 %5, i32* %size.addr.i, align 4, !dbg !18565
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !18565
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !18565
  store float %8, float* %lambda.addr.i, align 4, !dbg !18565
  store float %9, float* %uplim.addr.i, align 4, !dbg !18565
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !18565
  store float* %11, float** %energy.addr.i, align 8, !dbg !18565
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !18565
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18565
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !18565
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !18565
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !18565
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !18565
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !18565
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !18566
  %sub.i = sub nsw i32 200, %12, !dbg !18567
  %add.i = add nsw i32 %sub.i, 140, !dbg !18568
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !18569
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !18506
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !18570
  %idxprom.i = sext i32 %13 to i64, !dbg !18571
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !18571
  %14 = load float, float* %arrayidx.i, align 4, !dbg !18571
  store float %14, float* %Q.i, align 4, !dbg !18507
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !18572
  %idxprom2.i = sext i32 %15 to i64, !dbg !18573
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !18573
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !18573
  store float %16, float* %Q34.i, align 4, !dbg !18508
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !18574
  %add4.i = add nsw i32 200, %17, !dbg !18575
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !18576
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !18577
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !18578
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !18578
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !18578
  store float %18, float* %IQ.i, align 4, !dbg !18509
  %19 = load float, float* %IQ.i, align 4, !dbg !18579
  %mul.i = fmul float 1.651400e+05, %19, !dbg !18580
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !18510
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !18513
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !18514
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !18581
  %tobool.i = icmp ne i32 %20, 0, !dbg !18581
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !18581
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !18515
  store i32 0, i32* %resbits.i, align 4, !dbg !18516
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !18582
  %tobool9.i = icmp ne i32 %21, 0, !dbg !18582
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !18583

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !18584
  %tobool10.i = icmp ne i32 %22, 0, !dbg !18584
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !18585

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !18586
  %tobool12.i = icmp ne i32 %23, 0, !dbg !18586
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !18587

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !18588
  br label %for.cond.i, !dbg !18589

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !18590
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !18591
  %cmp.i = icmp slt i32 %24, %25, !dbg !18592
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !18593

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !18594
  %idxprom13.i = sext i32 %26 to i64, !dbg !18595
  %27 = load float*, float** %in.addr.i, align 8, !dbg !18595
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !18595
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !18595
  %29 = load i32, i32* %i.i, align 4, !dbg !18596
  %idxprom15.i = sext i32 %29 to i64, !dbg !18597
  %30 = load float*, float** %in.addr.i, align 8, !dbg !18597
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !18597
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !18597
  %mul17.i = fmul float %28, %31, !dbg !18598
  %32 = load float, float* %cost.i, align 4, !dbg !18599
  %add18.i = fadd float %32, %mul17.i, !dbg !18599
  store float %add18.i, float* %cost.i, align 4, !dbg !18599
  %33 = load i32, i32* %i.i, align 4, !dbg !18600
  %inc.i = add nsw i32 %33, 1, !dbg !18600
  store i32 %inc.i, i32* %i.i, align 4, !dbg !18600
  br label %for.cond.i, !dbg !18601, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !18602
  %tobool19.i = icmp ne i32* %34, null, !dbg !18602
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !18603

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !18604
  store i32 0, i32* %35, align 4, !dbg !18605
  br label %if.end.i, !dbg !18606

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !18607
  %tobool21.i = icmp ne float* %36, null, !dbg !18607
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !18608

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !18609
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !18610
  store float %37, float* %38, align 4, !dbg !18611
  br label %if.end23.i, !dbg !18612

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !18613
  %tobool24.i = icmp ne float* %39, null, !dbg !18613
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !18614

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !18615
  br label %for.cond26.i, !dbg !18616

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !18617
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !18618
  %cmp27.i = icmp slt i32 %40, %41, !dbg !18619
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !18620

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !18621
  br label %for.cond29.i, !dbg !18622

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !18623
  %43 = load i32, i32* %dim.i, align 4, !dbg !18624
  %cmp30.i = icmp slt i32 %42, %43, !dbg !18625
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !18626

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !18627
  %45 = load i32, i32* %j.i, align 4, !dbg !18628
  %add32.i = add nsw i32 %44, %45, !dbg !18629
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !18630
  %46 = load float*, float** %out.addr.i, align 8, !dbg !18630
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !18630
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !18631
  %47 = load i32, i32* %j.i, align 4, !dbg !18632
  %inc36.i = add nsw i32 %47, 1, !dbg !18632
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !18632
  br label %for.cond29.i, !dbg !18633, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !18634
  %49 = load i32, i32* %i.i, align 4, !dbg !18635
  %add39.i = add nsw i32 %49, %48, !dbg !18635
  store i32 %add39.i, i32* %i.i, align 4, !dbg !18635
  br label %for.cond26.i, !dbg !18636, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !18637

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !18638
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !18639
  %mul42.i = fmul float %50, %51, !dbg !18640
  store float %mul42.i, float* %retval.i, align 4, !dbg !18641
  br label %quantize_and_encode_band_cost_template.exit, !dbg !18641

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !18642
  %tobool44.i = icmp ne float* %52, null, !dbg !18642
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !18643

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18644
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !18645
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !18645
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18646
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !18647
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !18646
  %56 = load float*, float** %in.addr.i, align 8, !dbg !18648
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !18649
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !18644
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18650
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !18651
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !18650
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !18652
  br label %if.end48.i, !dbg !18653

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18654
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !18655
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !18655
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18656
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !18657
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !18656
  %62 = load float*, float** %in.addr.i, align 8, !dbg !18658
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !18659
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !18660
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18661
  %tobool50.i = icmp ne i32 %65, 0, !dbg !18662
  %lnot.i = xor i1 %tobool50.i, true, !dbg !18662
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !18662
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !18663
  %idxprom51.i = sext i32 %66 to i64, !dbg !18664
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !18664
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !18664
  %conv.i = zext i8 %67 to i32, !dbg !18664
  %68 = load float, float* %Q34.i, align 4, !dbg !18665
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !18666
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !18654
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18667
  %tobool53.i = icmp ne i32 %70, 0, !dbg !18667
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !18668

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !18669
  br label %if.end58.i, !dbg !18670

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !18671
  %idxprom55.i = sext i32 %71 to i64, !dbg !18672
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !18672
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !18672
  %conv57.i = zext i8 %72 to i32, !dbg !18672
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !18673
  br label %if.end58.i, !dbg !18565

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !18674
  br label %for.cond59.i, !dbg !18675

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !18676
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !18677
  %cmp60.i = icmp slt i32 %73, %74, !dbg !18678
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !18679

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !18680
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !18681
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !18680
  %76 = load i32, i32* %i.i, align 4, !dbg !18682
  %idx.ext.i = sext i32 %76 to i64, !dbg !18683
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !18683
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !18519
  store i32 0, i32* %curidx.i, align 4, !dbg !18520
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !18523
  store i32 0, i32* %j.i, align 4, !dbg !18684
  br label %for.cond65.i, !dbg !18685

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !18686
  %78 = load i32, i32* %dim.i, align 4, !dbg !18687
  %cmp66.i = icmp slt i32 %77, %78, !dbg !18688
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !18689

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !18690
  %idxprom69.i = sext i32 %79 to i64, !dbg !18691
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !18691
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !18691
  %conv71.i = zext i8 %80 to i32, !dbg !18691
  %81 = load i32, i32* %curidx.i, align 4, !dbg !18692
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !18692
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !18692
  %82 = load i32, i32* %j.i, align 4, !dbg !18693
  %idxprom73.i = sext i32 %82 to i64, !dbg !18694
  %83 = load i32*, i32** %quants.i, align 8, !dbg !18694
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !18694
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !18694
  %85 = load i32, i32* %off.i, align 4, !dbg !18695
  %add75.i = add nsw i32 %84, %85, !dbg !18696
  %86 = load i32, i32* %curidx.i, align 4, !dbg !18697
  %add76.i = add nsw i32 %86, %add75.i, !dbg !18697
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !18697
  %87 = load i32, i32* %j.i, align 4, !dbg !18698
  %inc78.i = add nsw i32 %87, 1, !dbg !18698
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !18698
  br label %for.cond65.i, !dbg !18699, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !18700
  %idxprom80.i = sext i32 %88 to i64, !dbg !18701
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !18702
  %sub81.i = sub nsw i32 %89, 1, !dbg !18703
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !18701
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !18701
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !18701
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !18701
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !18701
  %conv85.i = zext i8 %91 to i32, !dbg !18701
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !18704
  %92 = load i32, i32* %curidx.i, align 4, !dbg !18705
  %93 = load i32, i32* %dim.i, align 4, !dbg !18706
  %mul86.i = mul nsw i32 %92, %93, !dbg !18707
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !18708
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !18709
  %sub88.i = sub nsw i32 %94, 1, !dbg !18710
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !18708
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !18708
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !18708
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !18708
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !18711
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18712
  %tobool92.i = icmp ne i32 %96, 0, !dbg !18712
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !18713

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !18714
  br label %for.cond94.i, !dbg !18715

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !18716
  %98 = load i32, i32* %dim.i, align 4, !dbg !18717
  %cmp95.i = icmp slt i32 %97, %98, !dbg !18718
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !18719

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !18720
  %100 = load i32, i32* %j.i, align 4, !dbg !18721
  %add98.i = add nsw i32 %99, %100, !dbg !18722
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !18723
  %101 = load float*, float** %in.addr.i, align 8, !dbg !18723
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !18723
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !18723
  %call.i = call float @fabsf(float %102) #3, !dbg !18724
  store float %call.i, float* %t.i, align 4, !dbg !18524
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !18725
  %tobool101.i = icmp ne i32 %103, 0, !dbg !18725
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !18726

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !18727
  %idxprom102.i = sext i32 %104 to i64, !dbg !18728
  %105 = load float*, float** %vec.i, align 8, !dbg !18728
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !18728
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !18728
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !18729
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !18730

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !18731
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !18732
  %cmp107.i = fcmp oge float %107, %108, !dbg !18733
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !18734

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !18735
  store float %109, float* %quantized.i, align 4, !dbg !18736
  %110 = load i32, i32* %curbits.i, align 4, !dbg !18737
  %add110.i = add nsw i32 %110, 21, !dbg !18737
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !18737
  br label %if.end124.i, !dbg !18738

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !18739
  %112 = load float, float* %Q.i, align 4, !dbg !18740
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !18741
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !18742
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !18743
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !18743
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !18744
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !18745
  %shl.i.i = shl i32 1, %115, !dbg !18746
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !18747
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !18748
  %and.i.i = and i32 %114, %neg.i.i, !dbg !18749
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !18749
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !18750

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !18751
  %neg1.i.i = xor i32 %116, -1, !dbg !18752
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !18753
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !18754
  %shl2.i.i = shl i32 1, %117, !dbg !18755
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !18756
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !18757
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !18758
  br label %av_clip_uintp2_c.exit.i, !dbg !18758

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !18759
  store i32 %118, i32* %retval.i.i, align 4, !dbg !18760
  br label %av_clip_uintp2_c.exit.i, !dbg !18760

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !18761
  store i32 %119, i32* %c.i, align 4, !dbg !18526
  %120 = load i32, i32* %c.i, align 4, !dbg !18762
  %conv114.i = sitofp i32 %120 to float, !dbg !18762
  %121 = load i32, i32* %c.i, align 4, !dbg !18763
  %conv115.i = sitofp i32 %121 to float, !dbg !18763
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !18764
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !18765
  %122 = load float, float* %IQ.i, align 4, !dbg !18766
  %mul118.i = fmul float %mul117.i, %122, !dbg !18767
  store float %mul118.i, float* %quantized.i, align 4, !dbg !18768
  %123 = load i32, i32* %c.i, align 4, !dbg !18769
  %or.i = or i32 %123, 1, !dbg !18770
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !18771
  %sub119.i = sub nsw i32 31, %124, !dbg !18772
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !18773
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !18774
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !18775
  %125 = load i32, i32* %curbits.i, align 4, !dbg !18776
  %add123.i = add nsw i32 %125, %add122.i, !dbg !18776
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !18776
  br label %if.end124.i, !dbg !18565

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !18777

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !18778
  %idxprom126.i = sext i32 %126 to i64, !dbg !18779
  %127 = load float*, float** %vec.i, align 8, !dbg !18779
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !18779
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !18779
  %129 = load float, float* %IQ.i, align 4, !dbg !18780
  %mul128.i = fmul float %128, %129, !dbg !18781
  store float %mul128.i, float* %quantized.i, align 4, !dbg !18782
  br label %if.end129.i, !dbg !18565

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !18783
  %131 = load float, float* %quantized.i, align 4, !dbg !18784
  %sub130.i = fsub float %130, %131, !dbg !18785
  store float %sub130.i, float* %di.i, align 4, !dbg !18786
  %132 = load float*, float** %out.addr.i, align 8, !dbg !18787
  %tobool131.i = icmp ne float* %132, null, !dbg !18787
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !18788

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !18789
  %134 = load i32, i32* %j.i, align 4, !dbg !18790
  %add133.i = add nsw i32 %133, %134, !dbg !18791
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !18792
  %135 = load float*, float** %in.addr.i, align 8, !dbg !18792
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !18792
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !18792
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !18793
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !18792

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !18794
  br label %cond.end.i, !dbg !18795

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !18796
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !18797
  br label %cond.end.i, !dbg !18798

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !18799
  %139 = load i32, i32* %i.i, align 4, !dbg !18800
  %140 = load i32, i32* %j.i, align 4, !dbg !18801
  %add140.i = add nsw i32 %139, %140, !dbg !18802
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !18803
  %141 = load float*, float** %out.addr.i, align 8, !dbg !18803
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !18803
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !18804
  br label %if.end143.i, !dbg !18803

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !18805
  %idxprom144.i = sext i32 %142 to i64, !dbg !18806
  %143 = load float*, float** %vec.i, align 8, !dbg !18806
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !18806
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !18806
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !18807
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !18808

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !18809
  %inc149.i = add nsw i32 %145, 1, !dbg !18809
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !18809
  br label %if.end150.i, !dbg !18810

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !18811
  %147 = load float, float* %quantized.i, align 4, !dbg !18812
  %mul151.i = fmul float %146, %147, !dbg !18813
  %148 = load float, float* %qenergy.i, align 4, !dbg !18814
  %add152.i = fadd float %148, %mul151.i, !dbg !18814
  store float %add152.i, float* %qenergy.i, align 4, !dbg !18814
  %149 = load float, float* %di.i, align 4, !dbg !18815
  %150 = load float, float* %di.i, align 4, !dbg !18816
  %mul153.i = fmul float %149, %150, !dbg !18817
  %151 = load float, float* %rd.i, align 4, !dbg !18818
  %add154.i = fadd float %151, %mul153.i, !dbg !18818
  store float %add154.i, float* %rd.i, align 4, !dbg !18818
  %152 = load i32, i32* %j.i, align 4, !dbg !18819
  %inc156.i = add nsw i32 %152, 1, !dbg !18819
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !18819
  br label %for.cond94.i, !dbg !18820, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !18821

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !18822
  br label %for.cond159.i, !dbg !18823

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !18824
  %154 = load i32, i32* %dim.i, align 4, !dbg !18825
  %cmp160.i = icmp slt i32 %153, %154, !dbg !18826
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !18827

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !18828
  %idxprom163.i = sext i32 %155 to i64, !dbg !18829
  %156 = load float*, float** %vec.i, align 8, !dbg !18829
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !18829
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !18829
  %158 = load float, float* %IQ.i, align 4, !dbg !18830
  %mul165.i = fmul float %157, %158, !dbg !18831
  store float %mul165.i, float* %quantized.i, align 4, !dbg !18832
  %159 = load float, float* %quantized.i, align 4, !dbg !18833
  %160 = load float, float* %quantized.i, align 4, !dbg !18834
  %mul166.i = fmul float %159, %160, !dbg !18835
  %161 = load float, float* %qenergy.i, align 4, !dbg !18836
  %add167.i = fadd float %161, %mul166.i, !dbg !18836
  store float %add167.i, float* %qenergy.i, align 4, !dbg !18836
  %162 = load float*, float** %out.addr.i, align 8, !dbg !18837
  %tobool168.i = icmp ne float* %162, null, !dbg !18837
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !18838

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !18839
  %164 = load i32, i32* %i.i, align 4, !dbg !18840
  %165 = load i32, i32* %j.i, align 4, !dbg !18841
  %add170.i = add nsw i32 %164, %165, !dbg !18842
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !18843
  %166 = load float*, float** %out.addr.i, align 8, !dbg !18843
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !18843
  store float %163, float* %arrayidx172.i, align 4, !dbg !18844
  br label %if.end173.i, !dbg !18843

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !18845
  %168 = load i32, i32* %j.i, align 4, !dbg !18846
  %add174.i = add nsw i32 %167, %168, !dbg !18847
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !18848
  %169 = load float*, float** %in.addr.i, align 8, !dbg !18848
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !18848
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !18848
  %171 = load float, float* %quantized.i, align 4, !dbg !18849
  %sub177.i = fsub float %170, %171, !dbg !18850
  %172 = load i32, i32* %i.i, align 4, !dbg !18851
  %173 = load i32, i32* %j.i, align 4, !dbg !18852
  %add178.i = add nsw i32 %172, %173, !dbg !18853
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !18854
  %174 = load float*, float** %in.addr.i, align 8, !dbg !18854
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !18854
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !18854
  %176 = load float, float* %quantized.i, align 4, !dbg !18855
  %sub181.i = fsub float %175, %176, !dbg !18856
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !18857
  %177 = load float, float* %rd.i, align 4, !dbg !18858
  %add183.i = fadd float %177, %mul182.i, !dbg !18858
  store float %add183.i, float* %rd.i, align 4, !dbg !18858
  %178 = load i32, i32* %j.i, align 4, !dbg !18859
  %inc185.i = add nsw i32 %178, 1, !dbg !18859
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !18859
  br label %for.cond159.i, !dbg !18860, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !18565

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !18861
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !18862
  %mul188.i = fmul float %179, %180, !dbg !18863
  %181 = load i32, i32* %curbits.i, align 4, !dbg !18864
  %conv189.i = sitofp i32 %181 to float, !dbg !18864
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !18865
  %182 = load float, float* %cost.i, align 4, !dbg !18866
  %add191.i = fadd float %182, %add190.i, !dbg !18866
  store float %add191.i, float* %cost.i, align 4, !dbg !18866
  %183 = load i32, i32* %curbits.i, align 4, !dbg !18867
  %184 = load i32, i32* %resbits.i, align 4, !dbg !18868
  %add192.i = add nsw i32 %184, %183, !dbg !18868
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !18868
  %185 = load float, float* %cost.i, align 4, !dbg !18869
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !18870
  %cmp193.i = fcmp oge float %185, %186, !dbg !18871
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !18872

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !18873
  store float %187, float* %retval.i, align 4, !dbg !18874
  br label %quantize_and_encode_band_cost_template.exit, !dbg !18874

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18875
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !18875
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !18876

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18877
  %190 = load i32, i32* %curidx.i, align 4, !dbg !18878
  %idxprom199.i = sext i32 %190 to i64, !dbg !18879
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !18880
  %sub200.i = sub nsw i32 %191, 1, !dbg !18881
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !18879
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !18879
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !18879
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !18879
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !18879
  %conv204.i = zext i8 %193 to i32, !dbg !18879
  %194 = load i32, i32* %curidx.i, align 4, !dbg !18882
  %idxprom205.i = sext i32 %194 to i64, !dbg !18883
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !18884
  %sub206.i = sub nsw i32 %195, 1, !dbg !18885
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !18883
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !18883
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !18883
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !18883
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !18883
  %conv210.i = zext i16 %197 to i32, !dbg !18883
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !18886
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !18887
  %tobool211.i = icmp ne i32 %198, 0, !dbg !18887
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !18888

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !18889
  br label %for.cond213.i, !dbg !18890

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !18891
  %200 = load i32, i32* %dim.i, align 4, !dbg !18892
  %cmp214.i = icmp slt i32 %199, %200, !dbg !18893
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !18894

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !18895
  %202 = load i32, i32* %dim.i, align 4, !dbg !18896
  %mul217.i = mul nsw i32 %201, %202, !dbg !18897
  %203 = load i32, i32* %j.i, align 4, !dbg !18898
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !18899
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !18900
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !18901
  %sub220.i = sub nsw i32 %204, 1, !dbg !18902
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !18900
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !18900
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !18900
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !18900
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !18900
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !18903
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !18904

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18905
  %208 = load i32, i32* %i.i, align 4, !dbg !18906
  %209 = load i32, i32* %j.i, align 4, !dbg !18907
  %add227.i = add nsw i32 %208, %209, !dbg !18908
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !18909
  %210 = load float*, float** %in.addr.i, align 8, !dbg !18909
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !18909
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !18909
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !18910
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !18910
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !18911
  br label %if.end232.i, !dbg !18911

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !18912
  %inc234.i = add nsw i32 %212, 1, !dbg !18912
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !18912
  br label %for.cond213.i, !dbg !18913, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !18914

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !18915
  %tobool237.i = icmp ne i32 %213, 0, !dbg !18915
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !18916

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !18917
  br label %for.cond239.i, !dbg !18918

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !18919
  %cmp240.i = icmp slt i32 %214, 2, !dbg !18920
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !18921

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !18922
  %mul243.i = mul nsw i32 %215, 2, !dbg !18923
  %216 = load i32, i32* %j.i, align 4, !dbg !18924
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !18925
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !18926
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !18927
  %sub246.i = sub nsw i32 %217, 1, !dbg !18928
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !18926
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !18926
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !18926
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !18926
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !18926
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !18929
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !18930

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !18931
  %221 = load i32, i32* %j.i, align 4, !dbg !18932
  %add253.i = add nsw i32 %220, %221, !dbg !18933
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !18934
  %222 = load float*, float** %in.addr.i, align 8, !dbg !18934
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !18934
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !18934
  %call256.i = call float @fabsf(float %223) #3, !dbg !18935
  %224 = load float, float* %Q.i, align 4, !dbg !18936
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !18937
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !18938
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !18939
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !18939
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !18940
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !18941
  %shl.i284.i = shl i32 1, %227, !dbg !18942
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !18943
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !18944
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !18945
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !18945
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !18946

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !18947
  %neg1.i289.i = xor i32 %228, -1, !dbg !18948
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !18949
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !18950
  %shl2.i291.i = shl i32 1, %229, !dbg !18951
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !18952
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !18953
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !18954
  br label %av_clip_uintp2_c.exit296.i, !dbg !18954

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !18955
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !18956
  br label %av_clip_uintp2_c.exit296.i, !dbg !18956

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !18957
  store i32 %231, i32* %coef.i, align 4, !dbg !18527
  %232 = load i32, i32* %coef.i, align 4, !dbg !18958
  %or259.i = or i32 %232, 1, !dbg !18959
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !18960
  %sub260.i = sub nsw i32 31, %233, !dbg !18961
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !18528
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18962
  %235 = load i32, i32* %len.i, align 4, !dbg !18963
  %sub261.i = sub nsw i32 %235, 4, !dbg !18964
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !18965
  %236 = load i32, i32* %len.i, align 4, !dbg !18966
  %sub263.i = sub nsw i32 %236, 4, !dbg !18967
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !18968
  %shl.i = shl i32 1, %add264.i, !dbg !18969
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !18970
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !18971
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !18972
  %238 = load i32, i32* %len.i, align 4, !dbg !18973
  %239 = load i32, i32* %coef.i, align 4, !dbg !18974
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !18975
  br label %if.end266.i, !dbg !18976

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !18977
  %inc268.i = add nsw i32 %240, 1, !dbg !18977
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !18977
  br label %for.cond239.i, !dbg !18978, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !18979

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !18980

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !18981
  %242 = load i32, i32* %i.i, align 4, !dbg !18982
  %add273.i = add nsw i32 %242, %241, !dbg !18982
  store i32 %add273.i, i32* %i.i, align 4, !dbg !18982
  br label %for.cond59.i, !dbg !18983, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !18984
  %tobool275.i = icmp ne i32* %243, null, !dbg !18984
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !18985

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !18986
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !18987
  store i32 %244, i32* %245, align 4, !dbg !18988
  br label %if.end277.i, !dbg !18989

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !18990
  %tobool278.i = icmp ne float* %246, null, !dbg !18990
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !18991

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !18992
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !18993
  store float %247, float* %248, align 4, !dbg !18994
  br label %if.end280.i, !dbg !18995

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !18996
  store float %249, float* %retval.i, align 4, !dbg !18997
  br label %quantize_and_encode_band_cost_template.exit, !dbg !18997

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !18998
  ret float %250, !dbg !18999
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_UPAIR(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !19000 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !19001
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !19004
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !19005
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !19007
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !19008
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !19009
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !19010
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !19011
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !19012
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !19013
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !19014
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !19015
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !19016
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !19017
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !19018
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !19019
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !19020
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !19021
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !19022
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !19023
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !19024
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !19025
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !19026
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !19027
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !19028
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !19029
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !19030
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !19031
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !19032
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !19033
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !19034
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !19035
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !19036
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !19037
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !19038
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !19039
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !19040
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !19041
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !19042
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !19043
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !19044
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !19045
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !19046
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !19047
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !19048
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !19049
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !19050, metadata !2772), !dbg !19051
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !19052, metadata !2772), !dbg !19053
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !19054, metadata !2772), !dbg !19055
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !19056, metadata !2772), !dbg !19057
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !19058, metadata !2772), !dbg !19059
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19060, metadata !2772), !dbg !19061
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !19062, metadata !2772), !dbg !19063
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !19064, metadata !2772), !dbg !19065
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !19066, metadata !2772), !dbg !19067
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !19068, metadata !2772), !dbg !19069
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !19070, metadata !2772), !dbg !19071
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !19072, metadata !2772), !dbg !19073
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !19074
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !19075
  %2 = load float*, float** %in.addr, align 8, !dbg !19076
  %3 = load float*, float** %quant.addr, align 8, !dbg !19077
  %4 = load float*, float** %scaled.addr, align 8, !dbg !19078
  %5 = load i32, i32* %size.addr, align 4, !dbg !19079
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !19080
  %7 = load i32, i32* %cb.addr, align 4, !dbg !19081
  %8 = load float, float* %lambda.addr, align 4, !dbg !19082
  %9 = load float, float* %uplim.addr, align 4, !dbg !19083
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !19084
  %11 = load float*, float** %energy.addr, align 8, !dbg !19085
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19086
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19086
  store float* %2, float** %in.addr.i, align 8, !dbg !19086
  store float* %3, float** %out.addr.i, align 8, !dbg !19086
  store float* %4, float** %scaled.addr.i, align 8, !dbg !19086
  store i32 %5, i32* %size.addr.i, align 4, !dbg !19086
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !19086
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !19086
  store float %8, float* %lambda.addr.i, align 4, !dbg !19086
  store float %9, float* %uplim.addr.i, align 4, !dbg !19086
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !19086
  store float* %11, float** %energy.addr.i, align 8, !dbg !19086
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !19086
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19086
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !19086
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !19086
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !19086
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !19086
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !19086
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !19087
  %sub.i = sub nsw i32 200, %12, !dbg !19088
  %add.i = add nsw i32 %sub.i, 140, !dbg !19089
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !19090
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !19027
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !19091
  %idxprom.i = sext i32 %13 to i64, !dbg !19092
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !19092
  %14 = load float, float* %arrayidx.i, align 4, !dbg !19092
  store float %14, float* %Q.i, align 4, !dbg !19028
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !19093
  %idxprom2.i = sext i32 %15 to i64, !dbg !19094
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !19094
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !19094
  store float %16, float* %Q34.i, align 4, !dbg !19029
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !19095
  %add4.i = add nsw i32 200, %17, !dbg !19096
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !19097
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !19098
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !19099
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !19099
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !19099
  store float %18, float* %IQ.i, align 4, !dbg !19030
  %19 = load float, float* %IQ.i, align 4, !dbg !19100
  %mul.i = fmul float 1.651400e+05, %19, !dbg !19101
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !19031
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !19034
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !19035
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !19102
  %tobool.i = icmp ne i32 %20, 0, !dbg !19102
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !19102
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !19036
  store i32 0, i32* %resbits.i, align 4, !dbg !19037
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !19103
  %tobool9.i = icmp ne i32 %21, 0, !dbg !19103
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !19104

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !19105
  %tobool10.i = icmp ne i32 %22, 0, !dbg !19105
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !19106

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !19107
  %tobool12.i = icmp ne i32 %23, 0, !dbg !19107
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !19108

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !19109
  br label %for.cond.i, !dbg !19110

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !19111
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !19112
  %cmp.i = icmp slt i32 %24, %25, !dbg !19113
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !19114

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !19115
  %idxprom13.i = sext i32 %26 to i64, !dbg !19116
  %27 = load float*, float** %in.addr.i, align 8, !dbg !19116
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !19116
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !19116
  %29 = load i32, i32* %i.i, align 4, !dbg !19117
  %idxprom15.i = sext i32 %29 to i64, !dbg !19118
  %30 = load float*, float** %in.addr.i, align 8, !dbg !19118
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !19118
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !19118
  %mul17.i = fmul float %28, %31, !dbg !19119
  %32 = load float, float* %cost.i, align 4, !dbg !19120
  %add18.i = fadd float %32, %mul17.i, !dbg !19120
  store float %add18.i, float* %cost.i, align 4, !dbg !19120
  %33 = load i32, i32* %i.i, align 4, !dbg !19121
  %inc.i = add nsw i32 %33, 1, !dbg !19121
  store i32 %inc.i, i32* %i.i, align 4, !dbg !19121
  br label %for.cond.i, !dbg !19122, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !19123
  %tobool19.i = icmp ne i32* %34, null, !dbg !19123
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !19124

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !19125
  store i32 0, i32* %35, align 4, !dbg !19126
  br label %if.end.i, !dbg !19127

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !19128
  %tobool21.i = icmp ne float* %36, null, !dbg !19128
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !19129

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !19130
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !19131
  store float %37, float* %38, align 4, !dbg !19132
  br label %if.end23.i, !dbg !19133

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !19134
  %tobool24.i = icmp ne float* %39, null, !dbg !19134
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !19135

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !19136
  br label %for.cond26.i, !dbg !19137

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !19138
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !19139
  %cmp27.i = icmp slt i32 %40, %41, !dbg !19140
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !19141

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !19142
  br label %for.cond29.i, !dbg !19143

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !19144
  %43 = load i32, i32* %dim.i, align 4, !dbg !19145
  %cmp30.i = icmp slt i32 %42, %43, !dbg !19146
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !19147

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !19148
  %45 = load i32, i32* %j.i, align 4, !dbg !19149
  %add32.i = add nsw i32 %44, %45, !dbg !19150
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !19151
  %46 = load float*, float** %out.addr.i, align 8, !dbg !19151
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !19151
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !19152
  %47 = load i32, i32* %j.i, align 4, !dbg !19153
  %inc36.i = add nsw i32 %47, 1, !dbg !19153
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !19153
  br label %for.cond29.i, !dbg !19154, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !19155
  %49 = load i32, i32* %i.i, align 4, !dbg !19156
  %add39.i = add nsw i32 %49, %48, !dbg !19156
  store i32 %add39.i, i32* %i.i, align 4, !dbg !19156
  br label %for.cond26.i, !dbg !19157, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !19158

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !19159
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !19160
  %mul42.i = fmul float %50, %51, !dbg !19161
  store float %mul42.i, float* %retval.i, align 4, !dbg !19162
  br label %quantize_and_encode_band_cost_template.exit, !dbg !19162

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !19163
  %tobool44.i = icmp ne float* %52, null, !dbg !19163
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !19164

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19165
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !19166
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !19166
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19167
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !19168
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !19167
  %56 = load float*, float** %in.addr.i, align 8, !dbg !19169
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !19170
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !19165
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19171
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !19172
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !19171
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !19173
  br label %if.end48.i, !dbg !19174

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19175
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !19176
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !19176
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19177
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !19178
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !19177
  %62 = load float*, float** %in.addr.i, align 8, !dbg !19179
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !19180
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !19181
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19182
  %tobool50.i = icmp ne i32 %65, 0, !dbg !19183
  %lnot.i = xor i1 %tobool50.i, true, !dbg !19183
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !19183
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !19184
  %idxprom51.i = sext i32 %66 to i64, !dbg !19185
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !19185
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !19185
  %conv.i = zext i8 %67 to i32, !dbg !19185
  %68 = load float, float* %Q34.i, align 4, !dbg !19186
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !19187
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !19175
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19188
  %tobool53.i = icmp ne i32 %70, 0, !dbg !19188
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !19189

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !19190
  br label %if.end58.i, !dbg !19191

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !19192
  %idxprom55.i = sext i32 %71 to i64, !dbg !19193
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !19193
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !19193
  %conv57.i = zext i8 %72 to i32, !dbg !19193
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !19194
  br label %if.end58.i, !dbg !19086

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !19195
  br label %for.cond59.i, !dbg !19196

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !19197
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !19198
  %cmp60.i = icmp slt i32 %73, %74, !dbg !19199
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !19200

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19201
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !19202
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !19201
  %76 = load i32, i32* %i.i, align 4, !dbg !19203
  %idx.ext.i = sext i32 %76 to i64, !dbg !19204
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !19204
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !19040
  store i32 0, i32* %curidx.i, align 4, !dbg !19041
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !19044
  store i32 0, i32* %j.i, align 4, !dbg !19205
  br label %for.cond65.i, !dbg !19206

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !19207
  %78 = load i32, i32* %dim.i, align 4, !dbg !19208
  %cmp66.i = icmp slt i32 %77, %78, !dbg !19209
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !19210

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !19211
  %idxprom69.i = sext i32 %79 to i64, !dbg !19212
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !19212
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !19212
  %conv71.i = zext i8 %80 to i32, !dbg !19212
  %81 = load i32, i32* %curidx.i, align 4, !dbg !19213
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !19213
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !19213
  %82 = load i32, i32* %j.i, align 4, !dbg !19214
  %idxprom73.i = sext i32 %82 to i64, !dbg !19215
  %83 = load i32*, i32** %quants.i, align 8, !dbg !19215
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !19215
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !19215
  %85 = load i32, i32* %off.i, align 4, !dbg !19216
  %add75.i = add nsw i32 %84, %85, !dbg !19217
  %86 = load i32, i32* %curidx.i, align 4, !dbg !19218
  %add76.i = add nsw i32 %86, %add75.i, !dbg !19218
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !19218
  %87 = load i32, i32* %j.i, align 4, !dbg !19219
  %inc78.i = add nsw i32 %87, 1, !dbg !19219
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !19219
  br label %for.cond65.i, !dbg !19220, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !19221
  %idxprom80.i = sext i32 %88 to i64, !dbg !19222
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !19223
  %sub81.i = sub nsw i32 %89, 1, !dbg !19224
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !19222
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !19222
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !19222
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !19222
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !19222
  %conv85.i = zext i8 %91 to i32, !dbg !19222
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !19225
  %92 = load i32, i32* %curidx.i, align 4, !dbg !19226
  %93 = load i32, i32* %dim.i, align 4, !dbg !19227
  %mul86.i = mul nsw i32 %92, %93, !dbg !19228
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !19229
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !19230
  %sub88.i = sub nsw i32 %94, 1, !dbg !19231
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !19229
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !19229
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !19229
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !19229
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !19232
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19233
  %tobool92.i = icmp ne i32 %96, 0, !dbg !19233
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !19234

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !19235
  br label %for.cond94.i, !dbg !19236

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !19237
  %98 = load i32, i32* %dim.i, align 4, !dbg !19238
  %cmp95.i = icmp slt i32 %97, %98, !dbg !19239
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !19240

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !19241
  %100 = load i32, i32* %j.i, align 4, !dbg !19242
  %add98.i = add nsw i32 %99, %100, !dbg !19243
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !19244
  %101 = load float*, float** %in.addr.i, align 8, !dbg !19244
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !19244
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !19244
  %call.i = call float @fabsf(float %102) #3, !dbg !19245
  store float %call.i, float* %t.i, align 4, !dbg !19045
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !19246
  %tobool101.i = icmp ne i32 %103, 0, !dbg !19246
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !19247

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !19248
  %idxprom102.i = sext i32 %104 to i64, !dbg !19249
  %105 = load float*, float** %vec.i, align 8, !dbg !19249
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !19249
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !19249
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !19250
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !19251

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !19252
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !19253
  %cmp107.i = fcmp oge float %107, %108, !dbg !19254
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !19255

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !19256
  store float %109, float* %quantized.i, align 4, !dbg !19257
  %110 = load i32, i32* %curbits.i, align 4, !dbg !19258
  %add110.i = add nsw i32 %110, 21, !dbg !19258
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !19258
  br label %if.end124.i, !dbg !19259

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !19260
  %112 = load float, float* %Q.i, align 4, !dbg !19261
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !19262
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !19263
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !19264
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !19264
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !19265
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !19266
  %shl.i.i = shl i32 1, %115, !dbg !19267
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !19268
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !19269
  %and.i.i = and i32 %114, %neg.i.i, !dbg !19270
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !19270
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !19271

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !19272
  %neg1.i.i = xor i32 %116, -1, !dbg !19273
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !19274
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !19275
  %shl2.i.i = shl i32 1, %117, !dbg !19276
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !19277
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !19278
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !19279
  br label %av_clip_uintp2_c.exit.i, !dbg !19279

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !19280
  store i32 %118, i32* %retval.i.i, align 4, !dbg !19281
  br label %av_clip_uintp2_c.exit.i, !dbg !19281

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !19282
  store i32 %119, i32* %c.i, align 4, !dbg !19047
  %120 = load i32, i32* %c.i, align 4, !dbg !19283
  %conv114.i = sitofp i32 %120 to float, !dbg !19283
  %121 = load i32, i32* %c.i, align 4, !dbg !19284
  %conv115.i = sitofp i32 %121 to float, !dbg !19284
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !19285
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !19286
  %122 = load float, float* %IQ.i, align 4, !dbg !19287
  %mul118.i = fmul float %mul117.i, %122, !dbg !19288
  store float %mul118.i, float* %quantized.i, align 4, !dbg !19289
  %123 = load i32, i32* %c.i, align 4, !dbg !19290
  %or.i = or i32 %123, 1, !dbg !19291
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !19292
  %sub119.i = sub nsw i32 31, %124, !dbg !19293
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !19294
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !19295
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !19296
  %125 = load i32, i32* %curbits.i, align 4, !dbg !19297
  %add123.i = add nsw i32 %125, %add122.i, !dbg !19297
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !19297
  br label %if.end124.i, !dbg !19086

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !19298

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !19299
  %idxprom126.i = sext i32 %126 to i64, !dbg !19300
  %127 = load float*, float** %vec.i, align 8, !dbg !19300
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !19300
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !19300
  %129 = load float, float* %IQ.i, align 4, !dbg !19301
  %mul128.i = fmul float %128, %129, !dbg !19302
  store float %mul128.i, float* %quantized.i, align 4, !dbg !19303
  br label %if.end129.i, !dbg !19086

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !19304
  %131 = load float, float* %quantized.i, align 4, !dbg !19305
  %sub130.i = fsub float %130, %131, !dbg !19306
  store float %sub130.i, float* %di.i, align 4, !dbg !19307
  %132 = load float*, float** %out.addr.i, align 8, !dbg !19308
  %tobool131.i = icmp ne float* %132, null, !dbg !19308
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !19309

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !19310
  %134 = load i32, i32* %j.i, align 4, !dbg !19311
  %add133.i = add nsw i32 %133, %134, !dbg !19312
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !19313
  %135 = load float*, float** %in.addr.i, align 8, !dbg !19313
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !19313
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !19313
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !19314
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !19313

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !19315
  br label %cond.end.i, !dbg !19316

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !19317
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !19318
  br label %cond.end.i, !dbg !19319

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !19320
  %139 = load i32, i32* %i.i, align 4, !dbg !19321
  %140 = load i32, i32* %j.i, align 4, !dbg !19322
  %add140.i = add nsw i32 %139, %140, !dbg !19323
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !19324
  %141 = load float*, float** %out.addr.i, align 8, !dbg !19324
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !19324
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !19325
  br label %if.end143.i, !dbg !19324

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !19326
  %idxprom144.i = sext i32 %142 to i64, !dbg !19327
  %143 = load float*, float** %vec.i, align 8, !dbg !19327
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !19327
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !19327
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !19328
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !19329

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !19330
  %inc149.i = add nsw i32 %145, 1, !dbg !19330
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !19330
  br label %if.end150.i, !dbg !19331

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !19332
  %147 = load float, float* %quantized.i, align 4, !dbg !19333
  %mul151.i = fmul float %146, %147, !dbg !19334
  %148 = load float, float* %qenergy.i, align 4, !dbg !19335
  %add152.i = fadd float %148, %mul151.i, !dbg !19335
  store float %add152.i, float* %qenergy.i, align 4, !dbg !19335
  %149 = load float, float* %di.i, align 4, !dbg !19336
  %150 = load float, float* %di.i, align 4, !dbg !19337
  %mul153.i = fmul float %149, %150, !dbg !19338
  %151 = load float, float* %rd.i, align 4, !dbg !19339
  %add154.i = fadd float %151, %mul153.i, !dbg !19339
  store float %add154.i, float* %rd.i, align 4, !dbg !19339
  %152 = load i32, i32* %j.i, align 4, !dbg !19340
  %inc156.i = add nsw i32 %152, 1, !dbg !19340
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !19340
  br label %for.cond94.i, !dbg !19341, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !19342

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !19343
  br label %for.cond159.i, !dbg !19344

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !19345
  %154 = load i32, i32* %dim.i, align 4, !dbg !19346
  %cmp160.i = icmp slt i32 %153, %154, !dbg !19347
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !19348

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !19349
  %idxprom163.i = sext i32 %155 to i64, !dbg !19350
  %156 = load float*, float** %vec.i, align 8, !dbg !19350
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !19350
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !19350
  %158 = load float, float* %IQ.i, align 4, !dbg !19351
  %mul165.i = fmul float %157, %158, !dbg !19352
  store float %mul165.i, float* %quantized.i, align 4, !dbg !19353
  %159 = load float, float* %quantized.i, align 4, !dbg !19354
  %160 = load float, float* %quantized.i, align 4, !dbg !19355
  %mul166.i = fmul float %159, %160, !dbg !19356
  %161 = load float, float* %qenergy.i, align 4, !dbg !19357
  %add167.i = fadd float %161, %mul166.i, !dbg !19357
  store float %add167.i, float* %qenergy.i, align 4, !dbg !19357
  %162 = load float*, float** %out.addr.i, align 8, !dbg !19358
  %tobool168.i = icmp ne float* %162, null, !dbg !19358
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !19359

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !19360
  %164 = load i32, i32* %i.i, align 4, !dbg !19361
  %165 = load i32, i32* %j.i, align 4, !dbg !19362
  %add170.i = add nsw i32 %164, %165, !dbg !19363
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !19364
  %166 = load float*, float** %out.addr.i, align 8, !dbg !19364
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !19364
  store float %163, float* %arrayidx172.i, align 4, !dbg !19365
  br label %if.end173.i, !dbg !19364

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !19366
  %168 = load i32, i32* %j.i, align 4, !dbg !19367
  %add174.i = add nsw i32 %167, %168, !dbg !19368
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !19369
  %169 = load float*, float** %in.addr.i, align 8, !dbg !19369
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !19369
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !19369
  %171 = load float, float* %quantized.i, align 4, !dbg !19370
  %sub177.i = fsub float %170, %171, !dbg !19371
  %172 = load i32, i32* %i.i, align 4, !dbg !19372
  %173 = load i32, i32* %j.i, align 4, !dbg !19373
  %add178.i = add nsw i32 %172, %173, !dbg !19374
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !19375
  %174 = load float*, float** %in.addr.i, align 8, !dbg !19375
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !19375
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !19375
  %176 = load float, float* %quantized.i, align 4, !dbg !19376
  %sub181.i = fsub float %175, %176, !dbg !19377
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !19378
  %177 = load float, float* %rd.i, align 4, !dbg !19379
  %add183.i = fadd float %177, %mul182.i, !dbg !19379
  store float %add183.i, float* %rd.i, align 4, !dbg !19379
  %178 = load i32, i32* %j.i, align 4, !dbg !19380
  %inc185.i = add nsw i32 %178, 1, !dbg !19380
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !19380
  br label %for.cond159.i, !dbg !19381, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !19086

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !19382
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !19383
  %mul188.i = fmul float %179, %180, !dbg !19384
  %181 = load i32, i32* %curbits.i, align 4, !dbg !19385
  %conv189.i = sitofp i32 %181 to float, !dbg !19385
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !19386
  %182 = load float, float* %cost.i, align 4, !dbg !19387
  %add191.i = fadd float %182, %add190.i, !dbg !19387
  store float %add191.i, float* %cost.i, align 4, !dbg !19387
  %183 = load i32, i32* %curbits.i, align 4, !dbg !19388
  %184 = load i32, i32* %resbits.i, align 4, !dbg !19389
  %add192.i = add nsw i32 %184, %183, !dbg !19389
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !19389
  %185 = load float, float* %cost.i, align 4, !dbg !19390
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !19391
  %cmp193.i = fcmp oge float %185, %186, !dbg !19392
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !19393

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !19394
  store float %187, float* %retval.i, align 4, !dbg !19395
  br label %quantize_and_encode_band_cost_template.exit, !dbg !19395

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19396
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !19396
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !19397

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19398
  %190 = load i32, i32* %curidx.i, align 4, !dbg !19399
  %idxprom199.i = sext i32 %190 to i64, !dbg !19400
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !19401
  %sub200.i = sub nsw i32 %191, 1, !dbg !19402
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !19400
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !19400
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !19400
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !19400
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !19400
  %conv204.i = zext i8 %193 to i32, !dbg !19400
  %194 = load i32, i32* %curidx.i, align 4, !dbg !19403
  %idxprom205.i = sext i32 %194 to i64, !dbg !19404
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !19405
  %sub206.i = sub nsw i32 %195, 1, !dbg !19406
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !19404
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !19404
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !19404
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !19404
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !19404
  %conv210.i = zext i16 %197 to i32, !dbg !19404
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !19407
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19408
  %tobool211.i = icmp ne i32 %198, 0, !dbg !19408
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !19409

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !19410
  br label %for.cond213.i, !dbg !19411

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !19412
  %200 = load i32, i32* %dim.i, align 4, !dbg !19413
  %cmp214.i = icmp slt i32 %199, %200, !dbg !19414
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !19415

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !19416
  %202 = load i32, i32* %dim.i, align 4, !dbg !19417
  %mul217.i = mul nsw i32 %201, %202, !dbg !19418
  %203 = load i32, i32* %j.i, align 4, !dbg !19419
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !19420
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !19421
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !19422
  %sub220.i = sub nsw i32 %204, 1, !dbg !19423
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !19421
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !19421
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !19421
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !19421
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !19421
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !19424
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !19425

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19426
  %208 = load i32, i32* %i.i, align 4, !dbg !19427
  %209 = load i32, i32* %j.i, align 4, !dbg !19428
  %add227.i = add nsw i32 %208, %209, !dbg !19429
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !19430
  %210 = load float*, float** %in.addr.i, align 8, !dbg !19430
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !19430
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !19430
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !19431
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !19431
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !19432
  br label %if.end232.i, !dbg !19432

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !19433
  %inc234.i = add nsw i32 %212, 1, !dbg !19433
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !19433
  br label %for.cond213.i, !dbg !19434, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !19435

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !19436
  %tobool237.i = icmp ne i32 %213, 0, !dbg !19436
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !19437

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !19438
  br label %for.cond239.i, !dbg !19439

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !19440
  %cmp240.i = icmp slt i32 %214, 2, !dbg !19441
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !19442

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !19443
  %mul243.i = mul nsw i32 %215, 2, !dbg !19444
  %216 = load i32, i32* %j.i, align 4, !dbg !19445
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !19446
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !19447
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !19448
  %sub246.i = sub nsw i32 %217, 1, !dbg !19449
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !19447
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !19447
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !19447
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !19447
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !19447
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !19450
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !19451

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !19452
  %221 = load i32, i32* %j.i, align 4, !dbg !19453
  %add253.i = add nsw i32 %220, %221, !dbg !19454
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !19455
  %222 = load float*, float** %in.addr.i, align 8, !dbg !19455
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !19455
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !19455
  %call256.i = call float @fabsf(float %223) #3, !dbg !19456
  %224 = load float, float* %Q.i, align 4, !dbg !19457
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !19458
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !19459
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !19460
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !19460
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !19461
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !19462
  %shl.i284.i = shl i32 1, %227, !dbg !19463
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !19464
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !19465
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !19466
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !19466
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !19467

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !19468
  %neg1.i289.i = xor i32 %228, -1, !dbg !19469
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !19470
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !19471
  %shl2.i291.i = shl i32 1, %229, !dbg !19472
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !19473
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !19474
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !19475
  br label %av_clip_uintp2_c.exit296.i, !dbg !19475

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !19476
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !19477
  br label %av_clip_uintp2_c.exit296.i, !dbg !19477

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !19478
  store i32 %231, i32* %coef.i, align 4, !dbg !19048
  %232 = load i32, i32* %coef.i, align 4, !dbg !19479
  %or259.i = or i32 %232, 1, !dbg !19480
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !19481
  %sub260.i = sub nsw i32 31, %233, !dbg !19482
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !19049
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19483
  %235 = load i32, i32* %len.i, align 4, !dbg !19484
  %sub261.i = sub nsw i32 %235, 4, !dbg !19485
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !19486
  %236 = load i32, i32* %len.i, align 4, !dbg !19487
  %sub263.i = sub nsw i32 %236, 4, !dbg !19488
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !19489
  %shl.i = shl i32 1, %add264.i, !dbg !19490
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !19491
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !19492
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19493
  %238 = load i32, i32* %len.i, align 4, !dbg !19494
  %239 = load i32, i32* %coef.i, align 4, !dbg !19495
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !19496
  br label %if.end266.i, !dbg !19497

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !19498
  %inc268.i = add nsw i32 %240, 1, !dbg !19498
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !19498
  br label %for.cond239.i, !dbg !19499, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !19500

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !19501

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !19502
  %242 = load i32, i32* %i.i, align 4, !dbg !19503
  %add273.i = add nsw i32 %242, %241, !dbg !19503
  store i32 %add273.i, i32* %i.i, align 4, !dbg !19503
  br label %for.cond59.i, !dbg !19504, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !19505
  %tobool275.i = icmp ne i32* %243, null, !dbg !19505
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !19506

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !19507
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !19508
  store i32 %244, i32* %245, align 4, !dbg !19509
  br label %if.end277.i, !dbg !19510

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !19511
  %tobool278.i = icmp ne float* %246, null, !dbg !19511
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !19512

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !19513
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !19514
  store float %247, float* %248, align 4, !dbg !19515
  br label %if.end280.i, !dbg !19516

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !19517
  store float %249, float* %retval.i, align 4, !dbg !19518
  br label %quantize_and_encode_band_cost_template.exit, !dbg !19518

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !19519
  ret float %250, !dbg !19520
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_ESC_RTZ(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !19521 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !19522
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !19525
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !19526
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !19528
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !19529
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !19530
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !19531
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !19532
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !19533
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !19534
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !19535
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !19536
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !19537
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !19538
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !19539
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !19540
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !19541
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !19542
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !19543
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !19544
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !19545
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !19546
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !19547
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !19548
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !19549
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !19550
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !19551
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !19552
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !19553
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !19554
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !19555
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !19556
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !19557
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !19558
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !19559
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !19560
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !19561
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !19562
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !19563
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !19564
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !19565
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !19566
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !19567
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !19568
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !19569
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !19570
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !19571, metadata !2772), !dbg !19572
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !19573, metadata !2772), !dbg !19574
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !19575, metadata !2772), !dbg !19576
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !19577, metadata !2772), !dbg !19578
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !19579, metadata !2772), !dbg !19580
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19581, metadata !2772), !dbg !19582
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !19583, metadata !2772), !dbg !19584
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !19585, metadata !2772), !dbg !19586
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !19587, metadata !2772), !dbg !19588
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !19589, metadata !2772), !dbg !19590
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !19591, metadata !2772), !dbg !19592
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !19593, metadata !2772), !dbg !19594
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !19595
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !19596
  %2 = load float*, float** %in.addr, align 8, !dbg !19597
  %3 = load float*, float** %quant.addr, align 8, !dbg !19598
  %4 = load float*, float** %scaled.addr, align 8, !dbg !19599
  %5 = load i32, i32* %size.addr, align 4, !dbg !19600
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !19601
  %7 = load float, float* %lambda.addr, align 4, !dbg !19602
  %8 = load float, float* %uplim.addr, align 4, !dbg !19603
  %9 = load i32*, i32** %bits.addr, align 8, !dbg !19604
  %10 = load float*, float** %energy.addr, align 8, !dbg !19605
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19606
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19606
  store float* %2, float** %in.addr.i, align 8, !dbg !19606
  store float* %3, float** %out.addr.i, align 8, !dbg !19606
  store float* %4, float** %scaled.addr.i, align 8, !dbg !19606
  store i32 %5, i32* %size.addr.i, align 4, !dbg !19606
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !19606
  store i32 11, i32* %cb.addr.i, align 4, !dbg !19606
  store float %7, float* %lambda.addr.i, align 4, !dbg !19606
  store float %8, float* %uplim.addr.i, align 4, !dbg !19606
  store i32* %9, i32** %bits.addr.i, align 8, !dbg !19606
  store float* %10, float** %energy.addr.i, align 8, !dbg !19606
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !19606
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19606
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !19606
  store i32 1, i32* %BT_ESC.addr.i, align 4, !dbg !19606
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !19606
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !19606
  store float 0x3FBAFB7EA0000000, float* %ROUNDING.addr.i, align 4, !dbg !19606
  %11 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !19607
  %sub.i = sub nsw i32 200, %11, !dbg !19608
  %add.i = add nsw i32 %sub.i, 140, !dbg !19609
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !19610
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !19548
  %12 = load i32, i32* %q_idx.i, align 4, !dbg !19611
  %idxprom.i = sext i32 %12 to i64, !dbg !19612
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !19612
  %13 = load float, float* %arrayidx.i, align 4, !dbg !19612
  store float %13, float* %Q.i, align 4, !dbg !19549
  %14 = load i32, i32* %q_idx.i, align 4, !dbg !19613
  %idxprom2.i = sext i32 %14 to i64, !dbg !19614
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !19614
  %15 = load float, float* %arrayidx3.i, align 4, !dbg !19614
  store float %15, float* %Q34.i, align 4, !dbg !19550
  %16 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !19615
  %add4.i = add nsw i32 200, %16, !dbg !19616
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !19617
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !19618
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !19619
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !19619
  %17 = load float, float* %arrayidx8.i, align 4, !dbg !19619
  store float %17, float* %IQ.i, align 4, !dbg !19551
  %18 = load float, float* %IQ.i, align 4, !dbg !19620
  %mul.i = fmul float 1.651400e+05, %18, !dbg !19621
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !19552
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !19555
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !19556
  %19 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !19622
  %tobool.i = icmp ne i32 %19, 0, !dbg !19622
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !19622
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !19557
  store i32 0, i32* %resbits.i, align 4, !dbg !19558
  %20 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !19623
  %tobool9.i = icmp ne i32 %20, 0, !dbg !19623
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !19624

lor.lhs.false.i:                                  ; preds = %entry
  %21 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !19625
  %tobool10.i = icmp ne i32 %21, 0, !dbg !19625
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !19626

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %22 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !19627
  %tobool12.i = icmp ne i32 %22, 0, !dbg !19627
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !19628

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !19629
  br label %for.cond.i, !dbg !19630

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %23 = load i32, i32* %i.i, align 4, !dbg !19631
  %24 = load i32, i32* %size.addr.i, align 4, !dbg !19632
  %cmp.i = icmp slt i32 %23, %24, !dbg !19633
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !19634

for.body.i:                                       ; preds = %for.cond.i
  %25 = load i32, i32* %i.i, align 4, !dbg !19635
  %idxprom13.i = sext i32 %25 to i64, !dbg !19636
  %26 = load float*, float** %in.addr.i, align 8, !dbg !19636
  %arrayidx14.i = getelementptr inbounds float, float* %26, i64 %idxprom13.i, !dbg !19636
  %27 = load float, float* %arrayidx14.i, align 4, !dbg !19636
  %28 = load i32, i32* %i.i, align 4, !dbg !19637
  %idxprom15.i = sext i32 %28 to i64, !dbg !19638
  %29 = load float*, float** %in.addr.i, align 8, !dbg !19638
  %arrayidx16.i = getelementptr inbounds float, float* %29, i64 %idxprom15.i, !dbg !19638
  %30 = load float, float* %arrayidx16.i, align 4, !dbg !19638
  %mul17.i = fmul float %27, %30, !dbg !19639
  %31 = load float, float* %cost.i, align 4, !dbg !19640
  %add18.i = fadd float %31, %mul17.i, !dbg !19640
  store float %add18.i, float* %cost.i, align 4, !dbg !19640
  %32 = load i32, i32* %i.i, align 4, !dbg !19641
  %inc.i = add nsw i32 %32, 1, !dbg !19641
  store i32 %inc.i, i32* %i.i, align 4, !dbg !19641
  br label %for.cond.i, !dbg !19642, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %33 = load i32*, i32** %bits.addr.i, align 8, !dbg !19643
  %tobool19.i = icmp ne i32* %33, null, !dbg !19643
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !19644

if.then20.i:                                      ; preds = %for.end.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !19645
  store i32 0, i32* %34, align 4, !dbg !19646
  br label %if.end.i, !dbg !19647

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %35 = load float*, float** %energy.addr.i, align 8, !dbg !19648
  %tobool21.i = icmp ne float* %35, null, !dbg !19648
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !19649

if.then22.i:                                      ; preds = %if.end.i
  %36 = load float, float* %qenergy.i, align 4, !dbg !19650
  %37 = load float*, float** %energy.addr.i, align 8, !dbg !19651
  store float %36, float* %37, align 4, !dbg !19652
  br label %if.end23.i, !dbg !19653

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %38 = load float*, float** %out.addr.i, align 8, !dbg !19654
  %tobool24.i = icmp ne float* %38, null, !dbg !19654
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !19655

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !19656
  br label %for.cond26.i, !dbg !19657

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %39 = load i32, i32* %i.i, align 4, !dbg !19658
  %40 = load i32, i32* %size.addr.i, align 4, !dbg !19659
  %cmp27.i = icmp slt i32 %39, %40, !dbg !19660
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !19661

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !19662
  br label %for.cond29.i, !dbg !19663

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %41 = load i32, i32* %j.i, align 4, !dbg !19664
  %42 = load i32, i32* %dim.i, align 4, !dbg !19665
  %cmp30.i = icmp slt i32 %41, %42, !dbg !19666
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !19667

for.body31.i:                                     ; preds = %for.cond29.i
  %43 = load i32, i32* %i.i, align 4, !dbg !19668
  %44 = load i32, i32* %j.i, align 4, !dbg !19669
  %add32.i = add nsw i32 %43, %44, !dbg !19670
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !19671
  %45 = load float*, float** %out.addr.i, align 8, !dbg !19671
  %arrayidx34.i = getelementptr inbounds float, float* %45, i64 %idxprom33.i, !dbg !19671
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !19672
  %46 = load i32, i32* %j.i, align 4, !dbg !19673
  %inc36.i = add nsw i32 %46, 1, !dbg !19673
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !19673
  br label %for.cond29.i, !dbg !19674, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %47 = load i32, i32* %dim.i, align 4, !dbg !19675
  %48 = load i32, i32* %i.i, align 4, !dbg !19676
  %add39.i = add nsw i32 %48, %47, !dbg !19676
  store i32 %add39.i, i32* %i.i, align 4, !dbg !19676
  br label %for.cond26.i, !dbg !19677, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !19678

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %49 = load float, float* %cost.i, align 4, !dbg !19679
  %50 = load float, float* %lambda.addr.i, align 4, !dbg !19680
  %mul42.i = fmul float %49, %50, !dbg !19681
  store float %mul42.i, float* %retval.i, align 4, !dbg !19682
  br label %quantize_and_encode_band_cost_template.exit, !dbg !19682

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %51 = load float*, float** %scaled.addr.i, align 8, !dbg !19683
  %tobool44.i = icmp ne float* %51, null, !dbg !19683
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !19684

if.then45.i:                                      ; preds = %if.end43.i
  %52 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19685
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %52, i32 0, i32 32, !dbg !19686
  %53 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !19686
  %54 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19687
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %54, i32 0, i32 29, !dbg !19688
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !19687
  %55 = load float*, float** %in.addr.i, align 8, !dbg !19689
  %56 = load i32, i32* %size.addr.i, align 4, !dbg !19690
  call void %53(float* %arraydecay.i, float* %55, i32 %56) #9, !dbg !19685
  %57 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19691
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %57, i32 0, i32 29, !dbg !19692
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !19691
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !19693
  br label %if.end48.i, !dbg !19694

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19695
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 33, !dbg !19696
  %59 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !19696
  %60 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19697
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %60, i32 0, i32 28, !dbg !19698
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !19697
  %61 = load float*, float** %in.addr.i, align 8, !dbg !19699
  %62 = load float*, float** %scaled.addr.i, align 8, !dbg !19700
  %63 = load i32, i32* %size.addr.i, align 4, !dbg !19701
  %64 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19702
  %tobool50.i = icmp ne i32 %64, 0, !dbg !19703
  %lnot.i = xor i1 %tobool50.i, true, !dbg !19703
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !19703
  %65 = load i32, i32* %cb.addr.i, align 4, !dbg !19704
  %idxprom51.i = sext i32 %65 to i64, !dbg !19705
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !19705
  %66 = load i8, i8* %arrayidx52.i, align 1, !dbg !19705
  %conv.i = zext i8 %66 to i32, !dbg !19705
  %67 = load float, float* %Q34.i, align 4, !dbg !19706
  %68 = load float, float* %ROUNDING.addr.i, align 4, !dbg !19707
  call void %59(i32* %arraydecay49.i, float* %61, float* %62, i32 %63, i32 %lnot.ext.i, i32 %conv.i, float %67, float %68) #9, !dbg !19695
  %69 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19708
  %tobool53.i = icmp ne i32 %69, 0, !dbg !19708
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !19709

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !19710
  br label %if.end58.i, !dbg !19711

if.else.i:                                        ; preds = %if.end48.i
  %70 = load i32, i32* %cb.addr.i, align 4, !dbg !19712
  %idxprom55.i = sext i32 %70 to i64, !dbg !19713
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !19713
  %71 = load i8, i8* %arrayidx56.i, align 1, !dbg !19713
  %conv57.i = zext i8 %71 to i32, !dbg !19713
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !19714
  br label %if.end58.i, !dbg !19606

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !19715
  br label %for.cond59.i, !dbg !19716

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %72 = load i32, i32* %i.i, align 4, !dbg !19717
  %73 = load i32, i32* %size.addr.i, align 4, !dbg !19718
  %cmp60.i = icmp slt i32 %72, %73, !dbg !19719
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !19720

for.body62.i:                                     ; preds = %for.cond59.i
  %74 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !19721
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %74, i32 0, i32 28, !dbg !19722
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !19721
  %75 = load i32, i32* %i.i, align 4, !dbg !19723
  %idx.ext.i = sext i32 %75 to i64, !dbg !19724
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !19724
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !19561
  store i32 0, i32* %curidx.i, align 4, !dbg !19562
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !19565
  store i32 0, i32* %j.i, align 4, !dbg !19725
  br label %for.cond65.i, !dbg !19726

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %76 = load i32, i32* %j.i, align 4, !dbg !19727
  %77 = load i32, i32* %dim.i, align 4, !dbg !19728
  %cmp66.i = icmp slt i32 %76, %77, !dbg !19729
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !19730

for.body68.i:                                     ; preds = %for.cond65.i
  %78 = load i32, i32* %cb.addr.i, align 4, !dbg !19731
  %idxprom69.i = sext i32 %78 to i64, !dbg !19732
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !19732
  %79 = load i8, i8* %arrayidx70.i, align 1, !dbg !19732
  %conv71.i = zext i8 %79 to i32, !dbg !19732
  %80 = load i32, i32* %curidx.i, align 4, !dbg !19733
  %mul72.i = mul nsw i32 %80, %conv71.i, !dbg !19733
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !19733
  %81 = load i32, i32* %j.i, align 4, !dbg !19734
  %idxprom73.i = sext i32 %81 to i64, !dbg !19735
  %82 = load i32*, i32** %quants.i, align 8, !dbg !19735
  %arrayidx74.i = getelementptr inbounds i32, i32* %82, i64 %idxprom73.i, !dbg !19735
  %83 = load i32, i32* %arrayidx74.i, align 4, !dbg !19735
  %84 = load i32, i32* %off.i, align 4, !dbg !19736
  %add75.i = add nsw i32 %83, %84, !dbg !19737
  %85 = load i32, i32* %curidx.i, align 4, !dbg !19738
  %add76.i = add nsw i32 %85, %add75.i, !dbg !19738
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !19738
  %86 = load i32, i32* %j.i, align 4, !dbg !19739
  %inc78.i = add nsw i32 %86, 1, !dbg !19739
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !19739
  br label %for.cond65.i, !dbg !19740, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %87 = load i32, i32* %curidx.i, align 4, !dbg !19741
  %idxprom80.i = sext i32 %87 to i64, !dbg !19742
  %88 = load i32, i32* %cb.addr.i, align 4, !dbg !19743
  %sub81.i = sub nsw i32 %88, 1, !dbg !19744
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !19742
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !19742
  %89 = load i8*, i8** %arrayidx83.i, align 8, !dbg !19742
  %arrayidx84.i = getelementptr inbounds i8, i8* %89, i64 %idxprom80.i, !dbg !19742
  %90 = load i8, i8* %arrayidx84.i, align 1, !dbg !19742
  %conv85.i = zext i8 %90 to i32, !dbg !19742
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !19745
  %91 = load i32, i32* %curidx.i, align 4, !dbg !19746
  %92 = load i32, i32* %dim.i, align 4, !dbg !19747
  %mul86.i = mul nsw i32 %91, %92, !dbg !19748
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !19749
  %93 = load i32, i32* %cb.addr.i, align 4, !dbg !19750
  %sub88.i = sub nsw i32 %93, 1, !dbg !19751
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !19749
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !19749
  %94 = load float*, float** %arrayidx90.i, align 8, !dbg !19749
  %arrayidx91.i = getelementptr inbounds float, float* %94, i64 %idxprom87.i, !dbg !19749
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !19752
  %95 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19753
  %tobool92.i = icmp ne i32 %95, 0, !dbg !19753
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !19754

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !19755
  br label %for.cond94.i, !dbg !19756

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %96 = load i32, i32* %j.i, align 4, !dbg !19757
  %97 = load i32, i32* %dim.i, align 4, !dbg !19758
  %cmp95.i = icmp slt i32 %96, %97, !dbg !19759
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !19760

for.body97.i:                                     ; preds = %for.cond94.i
  %98 = load i32, i32* %i.i, align 4, !dbg !19761
  %99 = load i32, i32* %j.i, align 4, !dbg !19762
  %add98.i = add nsw i32 %98, %99, !dbg !19763
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !19764
  %100 = load float*, float** %in.addr.i, align 8, !dbg !19764
  %arrayidx100.i = getelementptr inbounds float, float* %100, i64 %idxprom99.i, !dbg !19764
  %101 = load float, float* %arrayidx100.i, align 4, !dbg !19764
  %call.i = call float @fabsf(float %101) #3, !dbg !19765
  store float %call.i, float* %t.i, align 4, !dbg !19566
  %102 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !19766
  %tobool101.i = icmp ne i32 %102, 0, !dbg !19766
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !19767

land.lhs.true.i:                                  ; preds = %for.body97.i
  %103 = load i32, i32* %j.i, align 4, !dbg !19768
  %idxprom102.i = sext i32 %103 to i64, !dbg !19769
  %104 = load float*, float** %vec.i, align 8, !dbg !19769
  %arrayidx103.i = getelementptr inbounds float, float* %104, i64 %idxprom102.i, !dbg !19769
  %105 = load float, float* %arrayidx103.i, align 4, !dbg !19769
  %cmp104.i = fcmp oeq float %105, 6.400000e+01, !dbg !19770
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !19771

if.then106.i:                                     ; preds = %land.lhs.true.i
  %106 = load float, float* %t.i, align 4, !dbg !19772
  %107 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !19773
  %cmp107.i = fcmp oge float %106, %107, !dbg !19774
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !19775

if.then109.i:                                     ; preds = %if.then106.i
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !19776
  store float %108, float* %quantized.i, align 4, !dbg !19777
  %109 = load i32, i32* %curbits.i, align 4, !dbg !19778
  %add110.i = add nsw i32 %109, 21, !dbg !19778
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !19778
  br label %if.end124.i, !dbg !19779

if.else111.i:                                     ; preds = %if.then106.i
  %110 = load float, float* %t.i, align 4, !dbg !19780
  %111 = load float, float* %Q.i, align 4, !dbg !19781
  %112 = load float, float* %ROUNDING.addr.i, align 4, !dbg !19782
  %call112.i = call i32 @quant(float %110, float %111, float %112) #9, !dbg !19783
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !19784
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !19784
  %113 = load i32, i32* %a.addr.i.i, align 4, !dbg !19785
  %114 = load i32, i32* %p.addr.i.i, align 4, !dbg !19786
  %shl.i.i = shl i32 1, %114, !dbg !19787
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !19788
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !19789
  %and.i.i = and i32 %113, %neg.i.i, !dbg !19790
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !19790
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !19791

if.then.i.i:                                      ; preds = %if.else111.i
  %115 = load i32, i32* %a.addr.i.i, align 4, !dbg !19792
  %neg1.i.i = xor i32 %115, -1, !dbg !19793
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !19794
  %116 = load i32, i32* %p.addr.i.i, align 4, !dbg !19795
  %shl2.i.i = shl i32 1, %116, !dbg !19796
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !19797
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !19798
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !19799
  br label %av_clip_uintp2_c.exit.i, !dbg !19799

if.else.i.i:                                      ; preds = %if.else111.i
  %117 = load i32, i32* %a.addr.i.i, align 4, !dbg !19800
  store i32 %117, i32* %retval.i.i, align 4, !dbg !19801
  br label %av_clip_uintp2_c.exit.i, !dbg !19801

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %118 = load i32, i32* %retval.i.i, align 4, !dbg !19802
  store i32 %118, i32* %c.i, align 4, !dbg !19568
  %119 = load i32, i32* %c.i, align 4, !dbg !19803
  %conv114.i = sitofp i32 %119 to float, !dbg !19803
  %120 = load i32, i32* %c.i, align 4, !dbg !19804
  %conv115.i = sitofp i32 %120 to float, !dbg !19804
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !19805
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !19806
  %121 = load float, float* %IQ.i, align 4, !dbg !19807
  %mul118.i = fmul float %mul117.i, %121, !dbg !19808
  store float %mul118.i, float* %quantized.i, align 4, !dbg !19809
  %122 = load i32, i32* %c.i, align 4, !dbg !19810
  %or.i = or i32 %122, 1, !dbg !19811
  %123 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !19812
  %sub119.i = sub nsw i32 31, %123, !dbg !19813
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !19814
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !19815
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !19816
  %124 = load i32, i32* %curbits.i, align 4, !dbg !19817
  %add123.i = add nsw i32 %124, %add122.i, !dbg !19817
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !19817
  br label %if.end124.i, !dbg !19606

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !19818

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %125 = load i32, i32* %j.i, align 4, !dbg !19819
  %idxprom126.i = sext i32 %125 to i64, !dbg !19820
  %126 = load float*, float** %vec.i, align 8, !dbg !19820
  %arrayidx127.i = getelementptr inbounds float, float* %126, i64 %idxprom126.i, !dbg !19820
  %127 = load float, float* %arrayidx127.i, align 4, !dbg !19820
  %128 = load float, float* %IQ.i, align 4, !dbg !19821
  %mul128.i = fmul float %127, %128, !dbg !19822
  store float %mul128.i, float* %quantized.i, align 4, !dbg !19823
  br label %if.end129.i, !dbg !19606

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %129 = load float, float* %t.i, align 4, !dbg !19824
  %130 = load float, float* %quantized.i, align 4, !dbg !19825
  %sub130.i = fsub float %129, %130, !dbg !19826
  store float %sub130.i, float* %di.i, align 4, !dbg !19827
  %131 = load float*, float** %out.addr.i, align 8, !dbg !19828
  %tobool131.i = icmp ne float* %131, null, !dbg !19828
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !19829

if.then132.i:                                     ; preds = %if.end129.i
  %132 = load i32, i32* %i.i, align 4, !dbg !19830
  %133 = load i32, i32* %j.i, align 4, !dbg !19831
  %add133.i = add nsw i32 %132, %133, !dbg !19832
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !19833
  %134 = load float*, float** %in.addr.i, align 8, !dbg !19833
  %arrayidx135.i = getelementptr inbounds float, float* %134, i64 %idxprom134.i, !dbg !19833
  %135 = load float, float* %arrayidx135.i, align 4, !dbg !19833
  %cmp136.i = fcmp oge float %135, 0.000000e+00, !dbg !19834
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !19833

cond.true.i:                                      ; preds = %if.then132.i
  %136 = load float, float* %quantized.i, align 4, !dbg !19835
  br label %cond.end.i, !dbg !19836

cond.false.i:                                     ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !19837
  %sub138.i = fsub float -0.000000e+00, %137, !dbg !19838
  br label %cond.end.i, !dbg !19839

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %136, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !19840
  %138 = load i32, i32* %i.i, align 4, !dbg !19841
  %139 = load i32, i32* %j.i, align 4, !dbg !19842
  %add140.i = add nsw i32 %138, %139, !dbg !19843
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !19844
  %140 = load float*, float** %out.addr.i, align 8, !dbg !19844
  %arrayidx142.i = getelementptr inbounds float, float* %140, i64 %idxprom141.i, !dbg !19844
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !19845
  br label %if.end143.i, !dbg !19844

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %141 = load i32, i32* %j.i, align 4, !dbg !19846
  %idxprom144.i = sext i32 %141 to i64, !dbg !19847
  %142 = load float*, float** %vec.i, align 8, !dbg !19847
  %arrayidx145.i = getelementptr inbounds float, float* %142, i64 %idxprom144.i, !dbg !19847
  %143 = load float, float* %arrayidx145.i, align 4, !dbg !19847
  %cmp146.i = fcmp une float %143, 0.000000e+00, !dbg !19848
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !19849

if.then148.i:                                     ; preds = %if.end143.i
  %144 = load i32, i32* %curbits.i, align 4, !dbg !19850
  %inc149.i = add nsw i32 %144, 1, !dbg !19850
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !19850
  br label %if.end150.i, !dbg !19851

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %145 = load float, float* %quantized.i, align 4, !dbg !19852
  %146 = load float, float* %quantized.i, align 4, !dbg !19853
  %mul151.i = fmul float %145, %146, !dbg !19854
  %147 = load float, float* %qenergy.i, align 4, !dbg !19855
  %add152.i = fadd float %147, %mul151.i, !dbg !19855
  store float %add152.i, float* %qenergy.i, align 4, !dbg !19855
  %148 = load float, float* %di.i, align 4, !dbg !19856
  %149 = load float, float* %di.i, align 4, !dbg !19857
  %mul153.i = fmul float %148, %149, !dbg !19858
  %150 = load float, float* %rd.i, align 4, !dbg !19859
  %add154.i = fadd float %150, %mul153.i, !dbg !19859
  store float %add154.i, float* %rd.i, align 4, !dbg !19859
  %151 = load i32, i32* %j.i, align 4, !dbg !19860
  %inc156.i = add nsw i32 %151, 1, !dbg !19860
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !19860
  br label %for.cond94.i, !dbg !19861, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !19862

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !19863
  br label %for.cond159.i, !dbg !19864

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %152 = load i32, i32* %j.i, align 4, !dbg !19865
  %153 = load i32, i32* %dim.i, align 4, !dbg !19866
  %cmp160.i = icmp slt i32 %152, %153, !dbg !19867
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !19868

for.body162.i:                                    ; preds = %for.cond159.i
  %154 = load i32, i32* %j.i, align 4, !dbg !19869
  %idxprom163.i = sext i32 %154 to i64, !dbg !19870
  %155 = load float*, float** %vec.i, align 8, !dbg !19870
  %arrayidx164.i = getelementptr inbounds float, float* %155, i64 %idxprom163.i, !dbg !19870
  %156 = load float, float* %arrayidx164.i, align 4, !dbg !19870
  %157 = load float, float* %IQ.i, align 4, !dbg !19871
  %mul165.i = fmul float %156, %157, !dbg !19872
  store float %mul165.i, float* %quantized.i, align 4, !dbg !19873
  %158 = load float, float* %quantized.i, align 4, !dbg !19874
  %159 = load float, float* %quantized.i, align 4, !dbg !19875
  %mul166.i = fmul float %158, %159, !dbg !19876
  %160 = load float, float* %qenergy.i, align 4, !dbg !19877
  %add167.i = fadd float %160, %mul166.i, !dbg !19877
  store float %add167.i, float* %qenergy.i, align 4, !dbg !19877
  %161 = load float*, float** %out.addr.i, align 8, !dbg !19878
  %tobool168.i = icmp ne float* %161, null, !dbg !19878
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !19879

if.then169.i:                                     ; preds = %for.body162.i
  %162 = load float, float* %quantized.i, align 4, !dbg !19880
  %163 = load i32, i32* %i.i, align 4, !dbg !19881
  %164 = load i32, i32* %j.i, align 4, !dbg !19882
  %add170.i = add nsw i32 %163, %164, !dbg !19883
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !19884
  %165 = load float*, float** %out.addr.i, align 8, !dbg !19884
  %arrayidx172.i = getelementptr inbounds float, float* %165, i64 %idxprom171.i, !dbg !19884
  store float %162, float* %arrayidx172.i, align 4, !dbg !19885
  br label %if.end173.i, !dbg !19884

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %166 = load i32, i32* %i.i, align 4, !dbg !19886
  %167 = load i32, i32* %j.i, align 4, !dbg !19887
  %add174.i = add nsw i32 %166, %167, !dbg !19888
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !19889
  %168 = load float*, float** %in.addr.i, align 8, !dbg !19889
  %arrayidx176.i = getelementptr inbounds float, float* %168, i64 %idxprom175.i, !dbg !19889
  %169 = load float, float* %arrayidx176.i, align 4, !dbg !19889
  %170 = load float, float* %quantized.i, align 4, !dbg !19890
  %sub177.i = fsub float %169, %170, !dbg !19891
  %171 = load i32, i32* %i.i, align 4, !dbg !19892
  %172 = load i32, i32* %j.i, align 4, !dbg !19893
  %add178.i = add nsw i32 %171, %172, !dbg !19894
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !19895
  %173 = load float*, float** %in.addr.i, align 8, !dbg !19895
  %arrayidx180.i = getelementptr inbounds float, float* %173, i64 %idxprom179.i, !dbg !19895
  %174 = load float, float* %arrayidx180.i, align 4, !dbg !19895
  %175 = load float, float* %quantized.i, align 4, !dbg !19896
  %sub181.i = fsub float %174, %175, !dbg !19897
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !19898
  %176 = load float, float* %rd.i, align 4, !dbg !19899
  %add183.i = fadd float %176, %mul182.i, !dbg !19899
  store float %add183.i, float* %rd.i, align 4, !dbg !19899
  %177 = load i32, i32* %j.i, align 4, !dbg !19900
  %inc185.i = add nsw i32 %177, 1, !dbg !19900
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !19900
  br label %for.cond159.i, !dbg !19901, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !19606

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %178 = load float, float* %rd.i, align 4, !dbg !19902
  %179 = load float, float* %lambda.addr.i, align 4, !dbg !19903
  %mul188.i = fmul float %178, %179, !dbg !19904
  %180 = load i32, i32* %curbits.i, align 4, !dbg !19905
  %conv189.i = sitofp i32 %180 to float, !dbg !19905
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !19906
  %181 = load float, float* %cost.i, align 4, !dbg !19907
  %add191.i = fadd float %181, %add190.i, !dbg !19907
  store float %add191.i, float* %cost.i, align 4, !dbg !19907
  %182 = load i32, i32* %curbits.i, align 4, !dbg !19908
  %183 = load i32, i32* %resbits.i, align 4, !dbg !19909
  %add192.i = add nsw i32 %183, %182, !dbg !19909
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !19909
  %184 = load float, float* %cost.i, align 4, !dbg !19910
  %185 = load float, float* %uplim.addr.i, align 4, !dbg !19911
  %cmp193.i = fcmp oge float %184, %185, !dbg !19912
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !19913

if.then195.i:                                     ; preds = %if.end187.i
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !19914
  store float %186, float* %retval.i, align 4, !dbg !19915
  br label %quantize_and_encode_band_cost_template.exit, !dbg !19915

if.end196.i:                                      ; preds = %if.end187.i
  %187 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19916
  %tobool197.i = icmp ne %struct.PutBitContext* %187, null, !dbg !19916
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !19917

if.then198.i:                                     ; preds = %if.end196.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19918
  %189 = load i32, i32* %curidx.i, align 4, !dbg !19919
  %idxprom199.i = sext i32 %189 to i64, !dbg !19920
  %190 = load i32, i32* %cb.addr.i, align 4, !dbg !19921
  %sub200.i = sub nsw i32 %190, 1, !dbg !19922
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !19920
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !19920
  %191 = load i8*, i8** %arrayidx202.i, align 8, !dbg !19920
  %arrayidx203.i = getelementptr inbounds i8, i8* %191, i64 %idxprom199.i, !dbg !19920
  %192 = load i8, i8* %arrayidx203.i, align 1, !dbg !19920
  %conv204.i = zext i8 %192 to i32, !dbg !19920
  %193 = load i32, i32* %curidx.i, align 4, !dbg !19923
  %idxprom205.i = sext i32 %193 to i64, !dbg !19924
  %194 = load i32, i32* %cb.addr.i, align 4, !dbg !19925
  %sub206.i = sub nsw i32 %194, 1, !dbg !19926
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !19924
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !19924
  %195 = load i16*, i16** %arrayidx208.i, align 8, !dbg !19924
  %arrayidx209.i = getelementptr inbounds i16, i16* %195, i64 %idxprom205.i, !dbg !19924
  %196 = load i16, i16* %arrayidx209.i, align 2, !dbg !19924
  %conv210.i = zext i16 %196 to i32, !dbg !19924
  call void @put_bits(%struct.PutBitContext* %188, i32 %conv204.i, i32 %conv210.i) #9, !dbg !19927
  %197 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !19928
  %tobool211.i = icmp ne i32 %197, 0, !dbg !19928
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !19929

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !19930
  br label %for.cond213.i, !dbg !19931

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %198 = load i32, i32* %j.i, align 4, !dbg !19932
  %199 = load i32, i32* %dim.i, align 4, !dbg !19933
  %cmp214.i = icmp slt i32 %198, %199, !dbg !19934
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !19935

for.body216.i:                                    ; preds = %for.cond213.i
  %200 = load i32, i32* %curidx.i, align 4, !dbg !19936
  %201 = load i32, i32* %dim.i, align 4, !dbg !19937
  %mul217.i = mul nsw i32 %200, %201, !dbg !19938
  %202 = load i32, i32* %j.i, align 4, !dbg !19939
  %add218.i = add nsw i32 %mul217.i, %202, !dbg !19940
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !19941
  %203 = load i32, i32* %cb.addr.i, align 4, !dbg !19942
  %sub220.i = sub nsw i32 %203, 1, !dbg !19943
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !19941
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !19941
  %204 = load float*, float** %arrayidx222.i, align 8, !dbg !19941
  %arrayidx223.i = getelementptr inbounds float, float* %204, i64 %idxprom219.i, !dbg !19941
  %205 = load float, float* %arrayidx223.i, align 4, !dbg !19941
  %cmp224.i = fcmp une float %205, 0.000000e+00, !dbg !19944
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !19945

if.then226.i:                                     ; preds = %for.body216.i
  %206 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !19946
  %207 = load i32, i32* %i.i, align 4, !dbg !19947
  %208 = load i32, i32* %j.i, align 4, !dbg !19948
  %add227.i = add nsw i32 %207, %208, !dbg !19949
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !19950
  %209 = load float*, float** %in.addr.i, align 8, !dbg !19950
  %arrayidx229.i = getelementptr inbounds float, float* %209, i64 %idxprom228.i, !dbg !19950
  %210 = load float, float* %arrayidx229.i, align 4, !dbg !19950
  %cmp230.i = fcmp olt float %210, 0.000000e+00, !dbg !19951
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !19951
  call void @put_bits(%struct.PutBitContext* %206, i32 1, i32 %conv231.i) #9, !dbg !19952
  br label %if.end232.i, !dbg !19952

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %211 = load i32, i32* %j.i, align 4, !dbg !19953
  %inc234.i = add nsw i32 %211, 1, !dbg !19953
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !19953
  br label %for.cond213.i, !dbg !19954, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !19955

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %212 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !19956
  %tobool237.i = icmp ne i32 %212, 0, !dbg !19956
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !19957

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !19958
  br label %for.cond239.i, !dbg !19959

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %213 = load i32, i32* %j.i, align 4, !dbg !19960
  %cmp240.i = icmp slt i32 %213, 2, !dbg !19961
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !19962

for.body242.i:                                    ; preds = %for.cond239.i
  %214 = load i32, i32* %curidx.i, align 4, !dbg !19963
  %mul243.i = mul nsw i32 %214, 2, !dbg !19964
  %215 = load i32, i32* %j.i, align 4, !dbg !19965
  %add244.i = add nsw i32 %mul243.i, %215, !dbg !19966
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !19967
  %216 = load i32, i32* %cb.addr.i, align 4, !dbg !19968
  %sub246.i = sub nsw i32 %216, 1, !dbg !19969
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !19967
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !19967
  %217 = load float*, float** %arrayidx248.i, align 8, !dbg !19967
  %arrayidx249.i = getelementptr inbounds float, float* %217, i64 %idxprom245.i, !dbg !19967
  %218 = load float, float* %arrayidx249.i, align 4, !dbg !19967
  %cmp250.i = fcmp oeq float %218, 6.400000e+01, !dbg !19970
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !19971

if.then252.i:                                     ; preds = %for.body242.i
  %219 = load i32, i32* %i.i, align 4, !dbg !19972
  %220 = load i32, i32* %j.i, align 4, !dbg !19973
  %add253.i = add nsw i32 %219, %220, !dbg !19974
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !19975
  %221 = load float*, float** %in.addr.i, align 8, !dbg !19975
  %arrayidx255.i = getelementptr inbounds float, float* %221, i64 %idxprom254.i, !dbg !19975
  %222 = load float, float* %arrayidx255.i, align 4, !dbg !19975
  %call256.i = call float @fabsf(float %222) #3, !dbg !19976
  %223 = load float, float* %Q.i, align 4, !dbg !19977
  %224 = load float, float* %ROUNDING.addr.i, align 4, !dbg !19978
  %call257.i = call i32 @quant(float %call256.i, float %223, float %224) #9, !dbg !19979
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !19980
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !19980
  %225 = load i32, i32* %a.addr.i282.i, align 4, !dbg !19981
  %226 = load i32, i32* %p.addr.i283.i, align 4, !dbg !19982
  %shl.i284.i = shl i32 1, %226, !dbg !19983
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !19984
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !19985
  %and.i287.i = and i32 %225, %neg.i286.i, !dbg !19986
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !19986
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !19987

if.then.i294.i:                                   ; preds = %if.then252.i
  %227 = load i32, i32* %a.addr.i282.i, align 4, !dbg !19988
  %neg1.i289.i = xor i32 %227, -1, !dbg !19989
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !19990
  %228 = load i32, i32* %p.addr.i283.i, align 4, !dbg !19991
  %shl2.i291.i = shl i32 1, %228, !dbg !19992
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !19993
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !19994
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !19995
  br label %av_clip_uintp2_c.exit296.i, !dbg !19995

if.else.i295.i:                                   ; preds = %if.then252.i
  %229 = load i32, i32* %a.addr.i282.i, align 4, !dbg !19996
  store i32 %229, i32* %retval.i281.i, align 4, !dbg !19997
  br label %av_clip_uintp2_c.exit296.i, !dbg !19997

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %230 = load i32, i32* %retval.i281.i, align 4, !dbg !19998
  store i32 %230, i32* %coef.i, align 4, !dbg !19569
  %231 = load i32, i32* %coef.i, align 4, !dbg !19999
  %or259.i = or i32 %231, 1, !dbg !20000
  %232 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !20001
  %sub260.i = sub nsw i32 31, %232, !dbg !20002
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !19570
  %233 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20003
  %234 = load i32, i32* %len.i, align 4, !dbg !20004
  %sub261.i = sub nsw i32 %234, 4, !dbg !20005
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !20006
  %235 = load i32, i32* %len.i, align 4, !dbg !20007
  %sub263.i = sub nsw i32 %235, 4, !dbg !20008
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !20009
  %shl.i = shl i32 1, %add264.i, !dbg !20010
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !20011
  call void @put_bits(%struct.PutBitContext* %233, i32 %add262.i, i32 %sub265.i) #9, !dbg !20012
  %236 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20013
  %237 = load i32, i32* %len.i, align 4, !dbg !20014
  %238 = load i32, i32* %coef.i, align 4, !dbg !20015
  call void @put_sbits(%struct.PutBitContext* %236, i32 %237, i32 %238) #9, !dbg !20016
  br label %if.end266.i, !dbg !20017

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %239 = load i32, i32* %j.i, align 4, !dbg !20018
  %inc268.i = add nsw i32 %239, 1, !dbg !20018
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !20018
  br label %for.cond239.i, !dbg !20019, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !20020

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !20021

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %240 = load i32, i32* %dim.i, align 4, !dbg !20022
  %241 = load i32, i32* %i.i, align 4, !dbg !20023
  %add273.i = add nsw i32 %241, %240, !dbg !20023
  store i32 %add273.i, i32* %i.i, align 4, !dbg !20023
  br label %for.cond59.i, !dbg !20024, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %242 = load i32*, i32** %bits.addr.i, align 8, !dbg !20025
  %tobool275.i = icmp ne i32* %242, null, !dbg !20025
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !20026

if.then276.i:                                     ; preds = %for.end274.i
  %243 = load i32, i32* %resbits.i, align 4, !dbg !20027
  %244 = load i32*, i32** %bits.addr.i, align 8, !dbg !20028
  store i32 %243, i32* %244, align 4, !dbg !20029
  br label %if.end277.i, !dbg !20030

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %245 = load float*, float** %energy.addr.i, align 8, !dbg !20031
  %tobool278.i = icmp ne float* %245, null, !dbg !20031
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !20032

if.then279.i:                                     ; preds = %if.end277.i
  %246 = load float, float* %qenergy.i, align 4, !dbg !20033
  %247 = load float*, float** %energy.addr.i, align 8, !dbg !20034
  store float %246, float* %247, align 4, !dbg !20035
  br label %if.end280.i, !dbg !20036

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %248 = load float, float* %cost.i, align 4, !dbg !20037
  store float %248, float* %retval.i, align 4, !dbg !20038
  br label %quantize_and_encode_band_cost_template.exit, !dbg !20038

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %249 = load float, float* %retval.i, align 4, !dbg !20039
  ret float %249, !dbg !20040
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @quantize_and_encode_band_cost_NONE(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #1 !dbg !20041 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !20042, metadata !2772), !dbg !20043
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !20044, metadata !2772), !dbg !20045
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !20046, metadata !2772), !dbg !20047
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !20048, metadata !2772), !dbg !20049
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !20050, metadata !2772), !dbg !20051
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !20052, metadata !2772), !dbg !20053
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !20054, metadata !2772), !dbg !20055
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !20056, metadata !2772), !dbg !20057
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !20058, metadata !2772), !dbg !20059
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !20060, metadata !2772), !dbg !20061
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !20062, metadata !2772), !dbg !20063
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !20064, metadata !2772), !dbg !20065
  br label %do.body, !dbg !20066, !llvm.loop !20067

do.body:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i32 0, i32 0), i32 167), !dbg !20068
  call void @abort() #11, !dbg !20073
  unreachable, !dbg !20075

do.end:                                           ; No predecessors!
  ret float 0.000000e+00, !dbg !20076
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_NOISE(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !20077 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !20078
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !20081
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !20082
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !20084
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !20085
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !20086
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !20087
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !20088
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !20089
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !20090
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !20091
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !20092
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !20093
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !20094
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !20095
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !20096
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !20097
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !20098
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !20099
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !20100
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !20101
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !20102
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !20103
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !20104
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !20105
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !20106
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !20107
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !20108
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !20109
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !20110
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !20111
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !20112
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !20113
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !20114
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !20115
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !20116
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !20117
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !20118
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !20119
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !20120
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !20121
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !20122
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !20123
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !20124
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !20125
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !20126
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !20127, metadata !2772), !dbg !20128
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !20129, metadata !2772), !dbg !20130
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !20131, metadata !2772), !dbg !20132
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !20133, metadata !2772), !dbg !20134
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !20135, metadata !2772), !dbg !20136
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !20137, metadata !2772), !dbg !20138
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !20139, metadata !2772), !dbg !20140
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !20141, metadata !2772), !dbg !20142
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !20143, metadata !2772), !dbg !20144
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !20145, metadata !2772), !dbg !20146
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !20147, metadata !2772), !dbg !20148
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !20149, metadata !2772), !dbg !20150
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !20151
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !20152
  %2 = load float*, float** %in.addr, align 8, !dbg !20153
  %3 = load float*, float** %quant.addr, align 8, !dbg !20154
  %4 = load float*, float** %scaled.addr, align 8, !dbg !20155
  %5 = load i32, i32* %size.addr, align 4, !dbg !20156
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !20157
  %7 = load i32, i32* %cb.addr, align 4, !dbg !20158
  %8 = load float, float* %lambda.addr, align 4, !dbg !20159
  %9 = load float, float* %uplim.addr, align 4, !dbg !20160
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !20161
  %11 = load float*, float** %energy.addr, align 8, !dbg !20162
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20163
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20163
  store float* %2, float** %in.addr.i, align 8, !dbg !20163
  store float* %3, float** %out.addr.i, align 8, !dbg !20163
  store float* %4, float** %scaled.addr.i, align 8, !dbg !20163
  store i32 %5, i32* %size.addr.i, align 4, !dbg !20163
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !20163
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !20163
  store float %8, float* %lambda.addr.i, align 4, !dbg !20163
  store float %9, float* %uplim.addr.i, align 4, !dbg !20163
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !20163
  store float* %11, float** %energy.addr.i, align 8, !dbg !20163
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !20163
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20163
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !20163
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !20163
  store i32 1, i32* %BT_NOISE.addr.i, align 4, !dbg !20163
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !20163
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !20163
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !20164
  %sub.i = sub nsw i32 200, %12, !dbg !20165
  %add.i = add nsw i32 %sub.i, 140, !dbg !20166
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !20167
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !20104
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !20168
  %idxprom.i = sext i32 %13 to i64, !dbg !20169
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !20169
  %14 = load float, float* %arrayidx.i, align 4, !dbg !20169
  store float %14, float* %Q.i, align 4, !dbg !20105
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !20170
  %idxprom2.i = sext i32 %15 to i64, !dbg !20171
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !20171
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !20171
  store float %16, float* %Q34.i, align 4, !dbg !20106
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !20172
  %add4.i = add nsw i32 200, %17, !dbg !20173
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !20174
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !20175
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !20176
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !20176
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !20176
  store float %18, float* %IQ.i, align 4, !dbg !20107
  %19 = load float, float* %IQ.i, align 4, !dbg !20177
  %mul.i = fmul float 1.651400e+05, %19, !dbg !20178
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !20108
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !20111
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !20112
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !20179
  %tobool.i = icmp ne i32 %20, 0, !dbg !20179
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !20179
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !20113
  store i32 0, i32* %resbits.i, align 4, !dbg !20114
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !20180
  %tobool9.i = icmp ne i32 %21, 0, !dbg !20180
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !20181

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !20182
  %tobool10.i = icmp ne i32 %22, 0, !dbg !20182
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !20183

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !20184
  %tobool12.i = icmp ne i32 %23, 0, !dbg !20184
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !20185

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !20186
  br label %for.cond.i, !dbg !20187

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !20188
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !20189
  %cmp.i = icmp slt i32 %24, %25, !dbg !20190
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !20191

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !20192
  %idxprom13.i = sext i32 %26 to i64, !dbg !20193
  %27 = load float*, float** %in.addr.i, align 8, !dbg !20193
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !20193
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !20193
  %29 = load i32, i32* %i.i, align 4, !dbg !20194
  %idxprom15.i = sext i32 %29 to i64, !dbg !20195
  %30 = load float*, float** %in.addr.i, align 8, !dbg !20195
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !20195
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !20195
  %mul17.i = fmul float %28, %31, !dbg !20196
  %32 = load float, float* %cost.i, align 4, !dbg !20197
  %add18.i = fadd float %32, %mul17.i, !dbg !20197
  store float %add18.i, float* %cost.i, align 4, !dbg !20197
  %33 = load i32, i32* %i.i, align 4, !dbg !20198
  %inc.i = add nsw i32 %33, 1, !dbg !20198
  store i32 %inc.i, i32* %i.i, align 4, !dbg !20198
  br label %for.cond.i, !dbg !20199, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !20200
  %tobool19.i = icmp ne i32* %34, null, !dbg !20200
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !20201

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !20202
  store i32 0, i32* %35, align 4, !dbg !20203
  br label %if.end.i, !dbg !20204

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !20205
  %tobool21.i = icmp ne float* %36, null, !dbg !20205
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !20206

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !20207
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !20208
  store float %37, float* %38, align 4, !dbg !20209
  br label %if.end23.i, !dbg !20210

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !20211
  %tobool24.i = icmp ne float* %39, null, !dbg !20211
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !20212

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !20213
  br label %for.cond26.i, !dbg !20214

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !20215
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !20216
  %cmp27.i = icmp slt i32 %40, %41, !dbg !20217
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !20218

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !20219
  br label %for.cond29.i, !dbg !20220

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !20221
  %43 = load i32, i32* %dim.i, align 4, !dbg !20222
  %cmp30.i = icmp slt i32 %42, %43, !dbg !20223
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !20224

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !20225
  %45 = load i32, i32* %j.i, align 4, !dbg !20226
  %add32.i = add nsw i32 %44, %45, !dbg !20227
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !20228
  %46 = load float*, float** %out.addr.i, align 8, !dbg !20228
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !20228
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !20229
  %47 = load i32, i32* %j.i, align 4, !dbg !20230
  %inc36.i = add nsw i32 %47, 1, !dbg !20230
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !20230
  br label %for.cond29.i, !dbg !20231, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !20232
  %49 = load i32, i32* %i.i, align 4, !dbg !20233
  %add39.i = add nsw i32 %49, %48, !dbg !20233
  store i32 %add39.i, i32* %i.i, align 4, !dbg !20233
  br label %for.cond26.i, !dbg !20234, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !20235

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !20236
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !20237
  %mul42.i = fmul float %50, %51, !dbg !20238
  store float %mul42.i, float* %retval.i, align 4, !dbg !20239
  br label %quantize_and_encode_band_cost_template.exit, !dbg !20239

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !20240
  %tobool44.i = icmp ne float* %52, null, !dbg !20240
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !20241

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20242
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !20243
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !20243
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20244
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !20245
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !20244
  %56 = load float*, float** %in.addr.i, align 8, !dbg !20246
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !20247
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !20242
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20248
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !20249
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !20248
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !20250
  br label %if.end48.i, !dbg !20251

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20252
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !20253
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !20253
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20254
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !20255
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !20254
  %62 = load float*, float** %in.addr.i, align 8, !dbg !20256
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !20257
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !20258
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20259
  %tobool50.i = icmp ne i32 %65, 0, !dbg !20260
  %lnot.i = xor i1 %tobool50.i, true, !dbg !20260
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !20260
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !20261
  %idxprom51.i = sext i32 %66 to i64, !dbg !20262
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !20262
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !20262
  %conv.i = zext i8 %67 to i32, !dbg !20262
  %68 = load float, float* %Q34.i, align 4, !dbg !20263
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !20264
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !20252
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20265
  %tobool53.i = icmp ne i32 %70, 0, !dbg !20265
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !20266

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !20267
  br label %if.end58.i, !dbg !20268

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !20269
  %idxprom55.i = sext i32 %71 to i64, !dbg !20270
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !20270
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !20270
  %conv57.i = zext i8 %72 to i32, !dbg !20270
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !20271
  br label %if.end58.i, !dbg !20163

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !20272
  br label %for.cond59.i, !dbg !20273

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !20274
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !20275
  %cmp60.i = icmp slt i32 %73, %74, !dbg !20276
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !20277

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20278
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !20279
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !20278
  %76 = load i32, i32* %i.i, align 4, !dbg !20280
  %idx.ext.i = sext i32 %76 to i64, !dbg !20281
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !20281
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !20117
  store i32 0, i32* %curidx.i, align 4, !dbg !20118
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !20121
  store i32 0, i32* %j.i, align 4, !dbg !20282
  br label %for.cond65.i, !dbg !20283

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !20284
  %78 = load i32, i32* %dim.i, align 4, !dbg !20285
  %cmp66.i = icmp slt i32 %77, %78, !dbg !20286
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !20287

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !20288
  %idxprom69.i = sext i32 %79 to i64, !dbg !20289
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !20289
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !20289
  %conv71.i = zext i8 %80 to i32, !dbg !20289
  %81 = load i32, i32* %curidx.i, align 4, !dbg !20290
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !20290
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !20290
  %82 = load i32, i32* %j.i, align 4, !dbg !20291
  %idxprom73.i = sext i32 %82 to i64, !dbg !20292
  %83 = load i32*, i32** %quants.i, align 8, !dbg !20292
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !20292
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !20292
  %85 = load i32, i32* %off.i, align 4, !dbg !20293
  %add75.i = add nsw i32 %84, %85, !dbg !20294
  %86 = load i32, i32* %curidx.i, align 4, !dbg !20295
  %add76.i = add nsw i32 %86, %add75.i, !dbg !20295
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !20295
  %87 = load i32, i32* %j.i, align 4, !dbg !20296
  %inc78.i = add nsw i32 %87, 1, !dbg !20296
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !20296
  br label %for.cond65.i, !dbg !20297, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !20298
  %idxprom80.i = sext i32 %88 to i64, !dbg !20299
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !20300
  %sub81.i = sub nsw i32 %89, 1, !dbg !20301
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !20299
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !20299
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !20299
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !20299
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !20299
  %conv85.i = zext i8 %91 to i32, !dbg !20299
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !20302
  %92 = load i32, i32* %curidx.i, align 4, !dbg !20303
  %93 = load i32, i32* %dim.i, align 4, !dbg !20304
  %mul86.i = mul nsw i32 %92, %93, !dbg !20305
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !20306
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !20307
  %sub88.i = sub nsw i32 %94, 1, !dbg !20308
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !20306
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !20306
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !20306
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !20306
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !20309
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20310
  %tobool92.i = icmp ne i32 %96, 0, !dbg !20310
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !20311

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !20312
  br label %for.cond94.i, !dbg !20313

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !20314
  %98 = load i32, i32* %dim.i, align 4, !dbg !20315
  %cmp95.i = icmp slt i32 %97, %98, !dbg !20316
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !20317

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !20318
  %100 = load i32, i32* %j.i, align 4, !dbg !20319
  %add98.i = add nsw i32 %99, %100, !dbg !20320
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !20321
  %101 = load float*, float** %in.addr.i, align 8, !dbg !20321
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !20321
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !20321
  %call.i = call float @fabsf(float %102) #3, !dbg !20322
  store float %call.i, float* %t.i, align 4, !dbg !20122
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !20323
  %tobool101.i = icmp ne i32 %103, 0, !dbg !20323
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !20324

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !20325
  %idxprom102.i = sext i32 %104 to i64, !dbg !20326
  %105 = load float*, float** %vec.i, align 8, !dbg !20326
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !20326
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !20326
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !20327
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !20328

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !20329
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !20330
  %cmp107.i = fcmp oge float %107, %108, !dbg !20331
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !20332

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !20333
  store float %109, float* %quantized.i, align 4, !dbg !20334
  %110 = load i32, i32* %curbits.i, align 4, !dbg !20335
  %add110.i = add nsw i32 %110, 21, !dbg !20335
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !20335
  br label %if.end124.i, !dbg !20336

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !20337
  %112 = load float, float* %Q.i, align 4, !dbg !20338
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !20339
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !20340
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !20341
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !20341
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !20342
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !20343
  %shl.i.i = shl i32 1, %115, !dbg !20344
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !20345
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !20346
  %and.i.i = and i32 %114, %neg.i.i, !dbg !20347
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !20347
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !20348

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !20349
  %neg1.i.i = xor i32 %116, -1, !dbg !20350
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !20351
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !20352
  %shl2.i.i = shl i32 1, %117, !dbg !20353
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !20354
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !20355
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !20356
  br label %av_clip_uintp2_c.exit.i, !dbg !20356

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !20357
  store i32 %118, i32* %retval.i.i, align 4, !dbg !20358
  br label %av_clip_uintp2_c.exit.i, !dbg !20358

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !20359
  store i32 %119, i32* %c.i, align 4, !dbg !20124
  %120 = load i32, i32* %c.i, align 4, !dbg !20360
  %conv114.i = sitofp i32 %120 to float, !dbg !20360
  %121 = load i32, i32* %c.i, align 4, !dbg !20361
  %conv115.i = sitofp i32 %121 to float, !dbg !20361
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !20362
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !20363
  %122 = load float, float* %IQ.i, align 4, !dbg !20364
  %mul118.i = fmul float %mul117.i, %122, !dbg !20365
  store float %mul118.i, float* %quantized.i, align 4, !dbg !20366
  %123 = load i32, i32* %c.i, align 4, !dbg !20367
  %or.i = or i32 %123, 1, !dbg !20368
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !20369
  %sub119.i = sub nsw i32 31, %124, !dbg !20370
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !20371
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !20372
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !20373
  %125 = load i32, i32* %curbits.i, align 4, !dbg !20374
  %add123.i = add nsw i32 %125, %add122.i, !dbg !20374
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !20374
  br label %if.end124.i, !dbg !20163

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !20375

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !20376
  %idxprom126.i = sext i32 %126 to i64, !dbg !20377
  %127 = load float*, float** %vec.i, align 8, !dbg !20377
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !20377
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !20377
  %129 = load float, float* %IQ.i, align 4, !dbg !20378
  %mul128.i = fmul float %128, %129, !dbg !20379
  store float %mul128.i, float* %quantized.i, align 4, !dbg !20380
  br label %if.end129.i, !dbg !20163

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !20381
  %131 = load float, float* %quantized.i, align 4, !dbg !20382
  %sub130.i = fsub float %130, %131, !dbg !20383
  store float %sub130.i, float* %di.i, align 4, !dbg !20384
  %132 = load float*, float** %out.addr.i, align 8, !dbg !20385
  %tobool131.i = icmp ne float* %132, null, !dbg !20385
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !20386

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !20387
  %134 = load i32, i32* %j.i, align 4, !dbg !20388
  %add133.i = add nsw i32 %133, %134, !dbg !20389
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !20390
  %135 = load float*, float** %in.addr.i, align 8, !dbg !20390
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !20390
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !20390
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !20391
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !20390

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !20392
  br label %cond.end.i, !dbg !20393

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !20394
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !20395
  br label %cond.end.i, !dbg !20396

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !20397
  %139 = load i32, i32* %i.i, align 4, !dbg !20398
  %140 = load i32, i32* %j.i, align 4, !dbg !20399
  %add140.i = add nsw i32 %139, %140, !dbg !20400
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !20401
  %141 = load float*, float** %out.addr.i, align 8, !dbg !20401
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !20401
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !20402
  br label %if.end143.i, !dbg !20401

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !20403
  %idxprom144.i = sext i32 %142 to i64, !dbg !20404
  %143 = load float*, float** %vec.i, align 8, !dbg !20404
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !20404
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !20404
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !20405
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !20406

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !20407
  %inc149.i = add nsw i32 %145, 1, !dbg !20407
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !20407
  br label %if.end150.i, !dbg !20408

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !20409
  %147 = load float, float* %quantized.i, align 4, !dbg !20410
  %mul151.i = fmul float %146, %147, !dbg !20411
  %148 = load float, float* %qenergy.i, align 4, !dbg !20412
  %add152.i = fadd float %148, %mul151.i, !dbg !20412
  store float %add152.i, float* %qenergy.i, align 4, !dbg !20412
  %149 = load float, float* %di.i, align 4, !dbg !20413
  %150 = load float, float* %di.i, align 4, !dbg !20414
  %mul153.i = fmul float %149, %150, !dbg !20415
  %151 = load float, float* %rd.i, align 4, !dbg !20416
  %add154.i = fadd float %151, %mul153.i, !dbg !20416
  store float %add154.i, float* %rd.i, align 4, !dbg !20416
  %152 = load i32, i32* %j.i, align 4, !dbg !20417
  %inc156.i = add nsw i32 %152, 1, !dbg !20417
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !20417
  br label %for.cond94.i, !dbg !20418, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !20419

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !20420
  br label %for.cond159.i, !dbg !20421

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !20422
  %154 = load i32, i32* %dim.i, align 4, !dbg !20423
  %cmp160.i = icmp slt i32 %153, %154, !dbg !20424
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !20425

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !20426
  %idxprom163.i = sext i32 %155 to i64, !dbg !20427
  %156 = load float*, float** %vec.i, align 8, !dbg !20427
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !20427
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !20427
  %158 = load float, float* %IQ.i, align 4, !dbg !20428
  %mul165.i = fmul float %157, %158, !dbg !20429
  store float %mul165.i, float* %quantized.i, align 4, !dbg !20430
  %159 = load float, float* %quantized.i, align 4, !dbg !20431
  %160 = load float, float* %quantized.i, align 4, !dbg !20432
  %mul166.i = fmul float %159, %160, !dbg !20433
  %161 = load float, float* %qenergy.i, align 4, !dbg !20434
  %add167.i = fadd float %161, %mul166.i, !dbg !20434
  store float %add167.i, float* %qenergy.i, align 4, !dbg !20434
  %162 = load float*, float** %out.addr.i, align 8, !dbg !20435
  %tobool168.i = icmp ne float* %162, null, !dbg !20435
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !20436

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !20437
  %164 = load i32, i32* %i.i, align 4, !dbg !20438
  %165 = load i32, i32* %j.i, align 4, !dbg !20439
  %add170.i = add nsw i32 %164, %165, !dbg !20440
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !20441
  %166 = load float*, float** %out.addr.i, align 8, !dbg !20441
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !20441
  store float %163, float* %arrayidx172.i, align 4, !dbg !20442
  br label %if.end173.i, !dbg !20441

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !20443
  %168 = load i32, i32* %j.i, align 4, !dbg !20444
  %add174.i = add nsw i32 %167, %168, !dbg !20445
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !20446
  %169 = load float*, float** %in.addr.i, align 8, !dbg !20446
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !20446
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !20446
  %171 = load float, float* %quantized.i, align 4, !dbg !20447
  %sub177.i = fsub float %170, %171, !dbg !20448
  %172 = load i32, i32* %i.i, align 4, !dbg !20449
  %173 = load i32, i32* %j.i, align 4, !dbg !20450
  %add178.i = add nsw i32 %172, %173, !dbg !20451
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !20452
  %174 = load float*, float** %in.addr.i, align 8, !dbg !20452
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !20452
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !20452
  %176 = load float, float* %quantized.i, align 4, !dbg !20453
  %sub181.i = fsub float %175, %176, !dbg !20454
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !20455
  %177 = load float, float* %rd.i, align 4, !dbg !20456
  %add183.i = fadd float %177, %mul182.i, !dbg !20456
  store float %add183.i, float* %rd.i, align 4, !dbg !20456
  %178 = load i32, i32* %j.i, align 4, !dbg !20457
  %inc185.i = add nsw i32 %178, 1, !dbg !20457
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !20457
  br label %for.cond159.i, !dbg !20458, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !20163

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !20459
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !20460
  %mul188.i = fmul float %179, %180, !dbg !20461
  %181 = load i32, i32* %curbits.i, align 4, !dbg !20462
  %conv189.i = sitofp i32 %181 to float, !dbg !20462
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !20463
  %182 = load float, float* %cost.i, align 4, !dbg !20464
  %add191.i = fadd float %182, %add190.i, !dbg !20464
  store float %add191.i, float* %cost.i, align 4, !dbg !20464
  %183 = load i32, i32* %curbits.i, align 4, !dbg !20465
  %184 = load i32, i32* %resbits.i, align 4, !dbg !20466
  %add192.i = add nsw i32 %184, %183, !dbg !20466
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !20466
  %185 = load float, float* %cost.i, align 4, !dbg !20467
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !20468
  %cmp193.i = fcmp oge float %185, %186, !dbg !20469
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !20470

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !20471
  store float %187, float* %retval.i, align 4, !dbg !20472
  br label %quantize_and_encode_band_cost_template.exit, !dbg !20472

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20473
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !20473
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !20474

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20475
  %190 = load i32, i32* %curidx.i, align 4, !dbg !20476
  %idxprom199.i = sext i32 %190 to i64, !dbg !20477
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !20478
  %sub200.i = sub nsw i32 %191, 1, !dbg !20479
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !20477
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !20477
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !20477
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !20477
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !20477
  %conv204.i = zext i8 %193 to i32, !dbg !20477
  %194 = load i32, i32* %curidx.i, align 4, !dbg !20480
  %idxprom205.i = sext i32 %194 to i64, !dbg !20481
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !20482
  %sub206.i = sub nsw i32 %195, 1, !dbg !20483
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !20481
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !20481
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !20481
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !20481
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !20481
  %conv210.i = zext i16 %197 to i32, !dbg !20481
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !20484
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20485
  %tobool211.i = icmp ne i32 %198, 0, !dbg !20485
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !20486

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !20487
  br label %for.cond213.i, !dbg !20488

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !20489
  %200 = load i32, i32* %dim.i, align 4, !dbg !20490
  %cmp214.i = icmp slt i32 %199, %200, !dbg !20491
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !20492

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !20493
  %202 = load i32, i32* %dim.i, align 4, !dbg !20494
  %mul217.i = mul nsw i32 %201, %202, !dbg !20495
  %203 = load i32, i32* %j.i, align 4, !dbg !20496
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !20497
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !20498
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !20499
  %sub220.i = sub nsw i32 %204, 1, !dbg !20500
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !20498
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !20498
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !20498
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !20498
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !20498
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !20501
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !20502

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20503
  %208 = load i32, i32* %i.i, align 4, !dbg !20504
  %209 = load i32, i32* %j.i, align 4, !dbg !20505
  %add227.i = add nsw i32 %208, %209, !dbg !20506
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !20507
  %210 = load float*, float** %in.addr.i, align 8, !dbg !20507
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !20507
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !20507
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !20508
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !20508
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !20509
  br label %if.end232.i, !dbg !20509

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !20510
  %inc234.i = add nsw i32 %212, 1, !dbg !20510
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !20510
  br label %for.cond213.i, !dbg !20511, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !20512

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !20513
  %tobool237.i = icmp ne i32 %213, 0, !dbg !20513
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !20514

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !20515
  br label %for.cond239.i, !dbg !20516

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !20517
  %cmp240.i = icmp slt i32 %214, 2, !dbg !20518
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !20519

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !20520
  %mul243.i = mul nsw i32 %215, 2, !dbg !20521
  %216 = load i32, i32* %j.i, align 4, !dbg !20522
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !20523
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !20524
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !20525
  %sub246.i = sub nsw i32 %217, 1, !dbg !20526
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !20524
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !20524
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !20524
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !20524
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !20524
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !20527
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !20528

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !20529
  %221 = load i32, i32* %j.i, align 4, !dbg !20530
  %add253.i = add nsw i32 %220, %221, !dbg !20531
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !20532
  %222 = load float*, float** %in.addr.i, align 8, !dbg !20532
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !20532
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !20532
  %call256.i = call float @fabsf(float %223) #3, !dbg !20533
  %224 = load float, float* %Q.i, align 4, !dbg !20534
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !20535
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !20536
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !20537
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !20537
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !20538
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !20539
  %shl.i284.i = shl i32 1, %227, !dbg !20540
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !20541
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !20542
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !20543
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !20543
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !20544

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !20545
  %neg1.i289.i = xor i32 %228, -1, !dbg !20546
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !20547
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !20548
  %shl2.i291.i = shl i32 1, %229, !dbg !20549
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !20550
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !20551
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !20552
  br label %av_clip_uintp2_c.exit296.i, !dbg !20552

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !20553
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !20554
  br label %av_clip_uintp2_c.exit296.i, !dbg !20554

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !20555
  store i32 %231, i32* %coef.i, align 4, !dbg !20125
  %232 = load i32, i32* %coef.i, align 4, !dbg !20556
  %or259.i = or i32 %232, 1, !dbg !20557
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !20558
  %sub260.i = sub nsw i32 31, %233, !dbg !20559
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !20126
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20560
  %235 = load i32, i32* %len.i, align 4, !dbg !20561
  %sub261.i = sub nsw i32 %235, 4, !dbg !20562
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !20563
  %236 = load i32, i32* %len.i, align 4, !dbg !20564
  %sub263.i = sub nsw i32 %236, 4, !dbg !20565
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !20566
  %shl.i = shl i32 1, %add264.i, !dbg !20567
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !20568
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !20569
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20570
  %238 = load i32, i32* %len.i, align 4, !dbg !20571
  %239 = load i32, i32* %coef.i, align 4, !dbg !20572
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !20573
  br label %if.end266.i, !dbg !20574

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !20575
  %inc268.i = add nsw i32 %240, 1, !dbg !20575
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !20575
  br label %for.cond239.i, !dbg !20576, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !20577

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !20578

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !20579
  %242 = load i32, i32* %i.i, align 4, !dbg !20580
  %add273.i = add nsw i32 %242, %241, !dbg !20580
  store i32 %add273.i, i32* %i.i, align 4, !dbg !20580
  br label %for.cond59.i, !dbg !20581, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !20582
  %tobool275.i = icmp ne i32* %243, null, !dbg !20582
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !20583

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !20584
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !20585
  store i32 %244, i32* %245, align 4, !dbg !20586
  br label %if.end277.i, !dbg !20587

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !20588
  %tobool278.i = icmp ne float* %246, null, !dbg !20588
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !20589

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !20590
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !20591
  store float %247, float* %248, align 4, !dbg !20592
  br label %if.end280.i, !dbg !20593

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !20594
  store float %249, float* %retval.i, align 4, !dbg !20595
  br label %quantize_and_encode_band_cost_template.exit, !dbg !20595

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !20596
  ret float %250, !dbg !20597
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_STEREO(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !20598 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !20599
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !20602
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !20603
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !20605
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !20606
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !20607
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !20608
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !20609
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !20610
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !20611
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !20612
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !20613
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !20614
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !20615
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !20616
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !20617
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !20618
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !20619
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !20620
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !20621
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !20622
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !20623
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !20624
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !20625
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !20626
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !20627
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !20628
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !20629
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !20630
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !20631
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !20632
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !20633
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !20634
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !20635
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !20636
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !20637
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !20638
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !20639
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !20640
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !20641
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !20642
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !20643
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !20644
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !20645
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !20646
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !20647
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !20648, metadata !2772), !dbg !20649
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !20650, metadata !2772), !dbg !20651
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !20652, metadata !2772), !dbg !20653
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !20654, metadata !2772), !dbg !20655
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !20656, metadata !2772), !dbg !20657
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !20658, metadata !2772), !dbg !20659
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !20660, metadata !2772), !dbg !20661
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !20662, metadata !2772), !dbg !20663
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !20664, metadata !2772), !dbg !20665
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !20666, metadata !2772), !dbg !20667
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !20668, metadata !2772), !dbg !20669
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !20670, metadata !2772), !dbg !20671
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !20672
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !20673
  %2 = load float*, float** %in.addr, align 8, !dbg !20674
  %3 = load float*, float** %quant.addr, align 8, !dbg !20675
  %4 = load float*, float** %scaled.addr, align 8, !dbg !20676
  %5 = load i32, i32* %size.addr, align 4, !dbg !20677
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !20678
  %7 = load i32, i32* %cb.addr, align 4, !dbg !20679
  %8 = load float, float* %lambda.addr, align 4, !dbg !20680
  %9 = load float, float* %uplim.addr, align 4, !dbg !20681
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !20682
  %11 = load float*, float** %energy.addr, align 8, !dbg !20683
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20684
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20684
  store float* %2, float** %in.addr.i, align 8, !dbg !20684
  store float* %3, float** %out.addr.i, align 8, !dbg !20684
  store float* %4, float** %scaled.addr.i, align 8, !dbg !20684
  store i32 %5, i32* %size.addr.i, align 4, !dbg !20684
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !20684
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !20684
  store float %8, float* %lambda.addr.i, align 4, !dbg !20684
  store float %9, float* %uplim.addr.i, align 4, !dbg !20684
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !20684
  store float* %11, float** %energy.addr.i, align 8, !dbg !20684
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !20684
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20684
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !20684
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !20684
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !20684
  store i32 1, i32* %BT_STEREO.addr.i, align 4, !dbg !20684
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !20684
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !20685
  %sub.i = sub nsw i32 200, %12, !dbg !20686
  %add.i = add nsw i32 %sub.i, 140, !dbg !20687
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !20688
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !20625
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !20689
  %idxprom.i = sext i32 %13 to i64, !dbg !20690
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !20690
  %14 = load float, float* %arrayidx.i, align 4, !dbg !20690
  store float %14, float* %Q.i, align 4, !dbg !20626
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !20691
  %idxprom2.i = sext i32 %15 to i64, !dbg !20692
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !20692
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !20692
  store float %16, float* %Q34.i, align 4, !dbg !20627
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !20693
  %add4.i = add nsw i32 200, %17, !dbg !20694
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !20695
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !20696
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !20697
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !20697
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !20697
  store float %18, float* %IQ.i, align 4, !dbg !20628
  %19 = load float, float* %IQ.i, align 4, !dbg !20698
  %mul.i = fmul float 1.651400e+05, %19, !dbg !20699
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !20629
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !20632
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !20633
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !20700
  %tobool.i = icmp ne i32 %20, 0, !dbg !20700
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !20700
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !20634
  store i32 0, i32* %resbits.i, align 4, !dbg !20635
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !20701
  %tobool9.i = icmp ne i32 %21, 0, !dbg !20701
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !20702

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !20703
  %tobool10.i = icmp ne i32 %22, 0, !dbg !20703
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !20704

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !20705
  %tobool12.i = icmp ne i32 %23, 0, !dbg !20705
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !20706

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !20707
  br label %for.cond.i, !dbg !20708

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !20709
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !20710
  %cmp.i = icmp slt i32 %24, %25, !dbg !20711
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !20712

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !20713
  %idxprom13.i = sext i32 %26 to i64, !dbg !20714
  %27 = load float*, float** %in.addr.i, align 8, !dbg !20714
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !20714
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !20714
  %29 = load i32, i32* %i.i, align 4, !dbg !20715
  %idxprom15.i = sext i32 %29 to i64, !dbg !20716
  %30 = load float*, float** %in.addr.i, align 8, !dbg !20716
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !20716
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !20716
  %mul17.i = fmul float %28, %31, !dbg !20717
  %32 = load float, float* %cost.i, align 4, !dbg !20718
  %add18.i = fadd float %32, %mul17.i, !dbg !20718
  store float %add18.i, float* %cost.i, align 4, !dbg !20718
  %33 = load i32, i32* %i.i, align 4, !dbg !20719
  %inc.i = add nsw i32 %33, 1, !dbg !20719
  store i32 %inc.i, i32* %i.i, align 4, !dbg !20719
  br label %for.cond.i, !dbg !20720, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !20721
  %tobool19.i = icmp ne i32* %34, null, !dbg !20721
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !20722

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !20723
  store i32 0, i32* %35, align 4, !dbg !20724
  br label %if.end.i, !dbg !20725

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !20726
  %tobool21.i = icmp ne float* %36, null, !dbg !20726
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !20727

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !20728
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !20729
  store float %37, float* %38, align 4, !dbg !20730
  br label %if.end23.i, !dbg !20731

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !20732
  %tobool24.i = icmp ne float* %39, null, !dbg !20732
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !20733

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !20734
  br label %for.cond26.i, !dbg !20735

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !20736
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !20737
  %cmp27.i = icmp slt i32 %40, %41, !dbg !20738
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !20739

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !20740
  br label %for.cond29.i, !dbg !20741

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !20742
  %43 = load i32, i32* %dim.i, align 4, !dbg !20743
  %cmp30.i = icmp slt i32 %42, %43, !dbg !20744
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !20745

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !20746
  %45 = load i32, i32* %j.i, align 4, !dbg !20747
  %add32.i = add nsw i32 %44, %45, !dbg !20748
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !20749
  %46 = load float*, float** %out.addr.i, align 8, !dbg !20749
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !20749
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !20750
  %47 = load i32, i32* %j.i, align 4, !dbg !20751
  %inc36.i = add nsw i32 %47, 1, !dbg !20751
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !20751
  br label %for.cond29.i, !dbg !20752, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !20753
  %49 = load i32, i32* %i.i, align 4, !dbg !20754
  %add39.i = add nsw i32 %49, %48, !dbg !20754
  store i32 %add39.i, i32* %i.i, align 4, !dbg !20754
  br label %for.cond26.i, !dbg !20755, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !20756

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !20757
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !20758
  %mul42.i = fmul float %50, %51, !dbg !20759
  store float %mul42.i, float* %retval.i, align 4, !dbg !20760
  br label %quantize_and_encode_band_cost_template.exit, !dbg !20760

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !20761
  %tobool44.i = icmp ne float* %52, null, !dbg !20761
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !20762

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20763
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !20764
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !20764
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20765
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !20766
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !20765
  %56 = load float*, float** %in.addr.i, align 8, !dbg !20767
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !20768
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #9, !dbg !20763
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20769
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !20770
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !20769
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !20771
  br label %if.end48.i, !dbg !20772

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20773
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !20774
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !20774
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20775
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !20776
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !20775
  %62 = load float*, float** %in.addr.i, align 8, !dbg !20777
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !20778
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !20779
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20780
  %tobool50.i = icmp ne i32 %65, 0, !dbg !20781
  %lnot.i = xor i1 %tobool50.i, true, !dbg !20781
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !20781
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !20782
  %idxprom51.i = sext i32 %66 to i64, !dbg !20783
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !20783
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !20783
  %conv.i = zext i8 %67 to i32, !dbg !20783
  %68 = load float, float* %Q34.i, align 4, !dbg !20784
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !20785
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #9, !dbg !20773
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20786
  %tobool53.i = icmp ne i32 %70, 0, !dbg !20786
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !20787

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !20788
  br label %if.end58.i, !dbg !20789

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !20790
  %idxprom55.i = sext i32 %71 to i64, !dbg !20791
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !20791
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !20791
  %conv57.i = zext i8 %72 to i32, !dbg !20791
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !20792
  br label %if.end58.i, !dbg !20684

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !20793
  br label %for.cond59.i, !dbg !20794

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !20795
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !20796
  %cmp60.i = icmp slt i32 %73, %74, !dbg !20797
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !20798

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !20799
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !20800
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !20799
  %76 = load i32, i32* %i.i, align 4, !dbg !20801
  %idx.ext.i = sext i32 %76 to i64, !dbg !20802
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !20802
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !20638
  store i32 0, i32* %curidx.i, align 4, !dbg !20639
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !20642
  store i32 0, i32* %j.i, align 4, !dbg !20803
  br label %for.cond65.i, !dbg !20804

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !20805
  %78 = load i32, i32* %dim.i, align 4, !dbg !20806
  %cmp66.i = icmp slt i32 %77, %78, !dbg !20807
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !20808

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !20809
  %idxprom69.i = sext i32 %79 to i64, !dbg !20810
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !20810
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !20810
  %conv71.i = zext i8 %80 to i32, !dbg !20810
  %81 = load i32, i32* %curidx.i, align 4, !dbg !20811
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !20811
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !20811
  %82 = load i32, i32* %j.i, align 4, !dbg !20812
  %idxprom73.i = sext i32 %82 to i64, !dbg !20813
  %83 = load i32*, i32** %quants.i, align 8, !dbg !20813
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !20813
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !20813
  %85 = load i32, i32* %off.i, align 4, !dbg !20814
  %add75.i = add nsw i32 %84, %85, !dbg !20815
  %86 = load i32, i32* %curidx.i, align 4, !dbg !20816
  %add76.i = add nsw i32 %86, %add75.i, !dbg !20816
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !20816
  %87 = load i32, i32* %j.i, align 4, !dbg !20817
  %inc78.i = add nsw i32 %87, 1, !dbg !20817
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !20817
  br label %for.cond65.i, !dbg !20818, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !20819
  %idxprom80.i = sext i32 %88 to i64, !dbg !20820
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !20821
  %sub81.i = sub nsw i32 %89, 1, !dbg !20822
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !20820
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !20820
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !20820
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !20820
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !20820
  %conv85.i = zext i8 %91 to i32, !dbg !20820
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !20823
  %92 = load i32, i32* %curidx.i, align 4, !dbg !20824
  %93 = load i32, i32* %dim.i, align 4, !dbg !20825
  %mul86.i = mul nsw i32 %92, %93, !dbg !20826
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !20827
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !20828
  %sub88.i = sub nsw i32 %94, 1, !dbg !20829
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !20827
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !20827
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !20827
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !20827
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !20830
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !20831
  %tobool92.i = icmp ne i32 %96, 0, !dbg !20831
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !20832

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !20833
  br label %for.cond94.i, !dbg !20834

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !20835
  %98 = load i32, i32* %dim.i, align 4, !dbg !20836
  %cmp95.i = icmp slt i32 %97, %98, !dbg !20837
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !20838

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !20839
  %100 = load i32, i32* %j.i, align 4, !dbg !20840
  %add98.i = add nsw i32 %99, %100, !dbg !20841
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !20842
  %101 = load float*, float** %in.addr.i, align 8, !dbg !20842
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !20842
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !20842
  %call.i = call float @fabsf(float %102) #3, !dbg !20843
  store float %call.i, float* %t.i, align 4, !dbg !20643
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !20844
  %tobool101.i = icmp ne i32 %103, 0, !dbg !20844
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !20845

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !20846
  %idxprom102.i = sext i32 %104 to i64, !dbg !20847
  %105 = load float*, float** %vec.i, align 8, !dbg !20847
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !20847
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !20847
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !20848
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !20849

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !20850
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !20851
  %cmp107.i = fcmp oge float %107, %108, !dbg !20852
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !20853

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !20854
  store float %109, float* %quantized.i, align 4, !dbg !20855
  %110 = load i32, i32* %curbits.i, align 4, !dbg !20856
  %add110.i = add nsw i32 %110, 21, !dbg !20856
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !20856
  br label %if.end124.i, !dbg !20857

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !20858
  %112 = load float, float* %Q.i, align 4, !dbg !20859
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !20860
  %call112.i = call i32 @quant(float %111, float %112, float %113) #9, !dbg !20861
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !20862
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !20862
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !20863
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !20864
  %shl.i.i = shl i32 1, %115, !dbg !20865
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !20866
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !20867
  %and.i.i = and i32 %114, %neg.i.i, !dbg !20868
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !20868
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !20869

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !20870
  %neg1.i.i = xor i32 %116, -1, !dbg !20871
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !20872
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !20873
  %shl2.i.i = shl i32 1, %117, !dbg !20874
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !20875
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !20876
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !20877
  br label %av_clip_uintp2_c.exit.i, !dbg !20877

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !20878
  store i32 %118, i32* %retval.i.i, align 4, !dbg !20879
  br label %av_clip_uintp2_c.exit.i, !dbg !20879

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !20880
  store i32 %119, i32* %c.i, align 4, !dbg !20645
  %120 = load i32, i32* %c.i, align 4, !dbg !20881
  %conv114.i = sitofp i32 %120 to float, !dbg !20881
  %121 = load i32, i32* %c.i, align 4, !dbg !20882
  %conv115.i = sitofp i32 %121 to float, !dbg !20882
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !20883
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !20884
  %122 = load float, float* %IQ.i, align 4, !dbg !20885
  %mul118.i = fmul float %mul117.i, %122, !dbg !20886
  store float %mul118.i, float* %quantized.i, align 4, !dbg !20887
  %123 = load i32, i32* %c.i, align 4, !dbg !20888
  %or.i = or i32 %123, 1, !dbg !20889
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !20890
  %sub119.i = sub nsw i32 31, %124, !dbg !20891
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !20892
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !20893
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !20894
  %125 = load i32, i32* %curbits.i, align 4, !dbg !20895
  %add123.i = add nsw i32 %125, %add122.i, !dbg !20895
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !20895
  br label %if.end124.i, !dbg !20684

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !20896

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !20897
  %idxprom126.i = sext i32 %126 to i64, !dbg !20898
  %127 = load float*, float** %vec.i, align 8, !dbg !20898
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !20898
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !20898
  %129 = load float, float* %IQ.i, align 4, !dbg !20899
  %mul128.i = fmul float %128, %129, !dbg !20900
  store float %mul128.i, float* %quantized.i, align 4, !dbg !20901
  br label %if.end129.i, !dbg !20684

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !20902
  %131 = load float, float* %quantized.i, align 4, !dbg !20903
  %sub130.i = fsub float %130, %131, !dbg !20904
  store float %sub130.i, float* %di.i, align 4, !dbg !20905
  %132 = load float*, float** %out.addr.i, align 8, !dbg !20906
  %tobool131.i = icmp ne float* %132, null, !dbg !20906
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !20907

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !20908
  %134 = load i32, i32* %j.i, align 4, !dbg !20909
  %add133.i = add nsw i32 %133, %134, !dbg !20910
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !20911
  %135 = load float*, float** %in.addr.i, align 8, !dbg !20911
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !20911
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !20911
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !20912
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !20911

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !20913
  br label %cond.end.i, !dbg !20914

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !20915
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !20916
  br label %cond.end.i, !dbg !20917

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !20918
  %139 = load i32, i32* %i.i, align 4, !dbg !20919
  %140 = load i32, i32* %j.i, align 4, !dbg !20920
  %add140.i = add nsw i32 %139, %140, !dbg !20921
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !20922
  %141 = load float*, float** %out.addr.i, align 8, !dbg !20922
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !20922
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !20923
  br label %if.end143.i, !dbg !20922

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !20924
  %idxprom144.i = sext i32 %142 to i64, !dbg !20925
  %143 = load float*, float** %vec.i, align 8, !dbg !20925
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !20925
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !20925
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !20926
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !20927

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !20928
  %inc149.i = add nsw i32 %145, 1, !dbg !20928
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !20928
  br label %if.end150.i, !dbg !20929

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !20930
  %147 = load float, float* %quantized.i, align 4, !dbg !20931
  %mul151.i = fmul float %146, %147, !dbg !20932
  %148 = load float, float* %qenergy.i, align 4, !dbg !20933
  %add152.i = fadd float %148, %mul151.i, !dbg !20933
  store float %add152.i, float* %qenergy.i, align 4, !dbg !20933
  %149 = load float, float* %di.i, align 4, !dbg !20934
  %150 = load float, float* %di.i, align 4, !dbg !20935
  %mul153.i = fmul float %149, %150, !dbg !20936
  %151 = load float, float* %rd.i, align 4, !dbg !20937
  %add154.i = fadd float %151, %mul153.i, !dbg !20937
  store float %add154.i, float* %rd.i, align 4, !dbg !20937
  %152 = load i32, i32* %j.i, align 4, !dbg !20938
  %inc156.i = add nsw i32 %152, 1, !dbg !20938
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !20938
  br label %for.cond94.i, !dbg !20939, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !20940

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !20941
  br label %for.cond159.i, !dbg !20942

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !20943
  %154 = load i32, i32* %dim.i, align 4, !dbg !20944
  %cmp160.i = icmp slt i32 %153, %154, !dbg !20945
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !20946

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !20947
  %idxprom163.i = sext i32 %155 to i64, !dbg !20948
  %156 = load float*, float** %vec.i, align 8, !dbg !20948
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !20948
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !20948
  %158 = load float, float* %IQ.i, align 4, !dbg !20949
  %mul165.i = fmul float %157, %158, !dbg !20950
  store float %mul165.i, float* %quantized.i, align 4, !dbg !20951
  %159 = load float, float* %quantized.i, align 4, !dbg !20952
  %160 = load float, float* %quantized.i, align 4, !dbg !20953
  %mul166.i = fmul float %159, %160, !dbg !20954
  %161 = load float, float* %qenergy.i, align 4, !dbg !20955
  %add167.i = fadd float %161, %mul166.i, !dbg !20955
  store float %add167.i, float* %qenergy.i, align 4, !dbg !20955
  %162 = load float*, float** %out.addr.i, align 8, !dbg !20956
  %tobool168.i = icmp ne float* %162, null, !dbg !20956
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !20957

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !20958
  %164 = load i32, i32* %i.i, align 4, !dbg !20959
  %165 = load i32, i32* %j.i, align 4, !dbg !20960
  %add170.i = add nsw i32 %164, %165, !dbg !20961
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !20962
  %166 = load float*, float** %out.addr.i, align 8, !dbg !20962
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !20962
  store float %163, float* %arrayidx172.i, align 4, !dbg !20963
  br label %if.end173.i, !dbg !20962

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !20964
  %168 = load i32, i32* %j.i, align 4, !dbg !20965
  %add174.i = add nsw i32 %167, %168, !dbg !20966
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !20967
  %169 = load float*, float** %in.addr.i, align 8, !dbg !20967
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !20967
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !20967
  %171 = load float, float* %quantized.i, align 4, !dbg !20968
  %sub177.i = fsub float %170, %171, !dbg !20969
  %172 = load i32, i32* %i.i, align 4, !dbg !20970
  %173 = load i32, i32* %j.i, align 4, !dbg !20971
  %add178.i = add nsw i32 %172, %173, !dbg !20972
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !20973
  %174 = load float*, float** %in.addr.i, align 8, !dbg !20973
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !20973
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !20973
  %176 = load float, float* %quantized.i, align 4, !dbg !20974
  %sub181.i = fsub float %175, %176, !dbg !20975
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !20976
  %177 = load float, float* %rd.i, align 4, !dbg !20977
  %add183.i = fadd float %177, %mul182.i, !dbg !20977
  store float %add183.i, float* %rd.i, align 4, !dbg !20977
  %178 = load i32, i32* %j.i, align 4, !dbg !20978
  %inc185.i = add nsw i32 %178, 1, !dbg !20978
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !20978
  br label %for.cond159.i, !dbg !20979, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !20684

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !20980
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !20981
  %mul188.i = fmul float %179, %180, !dbg !20982
  %181 = load i32, i32* %curbits.i, align 4, !dbg !20983
  %conv189.i = sitofp i32 %181 to float, !dbg !20983
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !20984
  %182 = load float, float* %cost.i, align 4, !dbg !20985
  %add191.i = fadd float %182, %add190.i, !dbg !20985
  store float %add191.i, float* %cost.i, align 4, !dbg !20985
  %183 = load i32, i32* %curbits.i, align 4, !dbg !20986
  %184 = load i32, i32* %resbits.i, align 4, !dbg !20987
  %add192.i = add nsw i32 %184, %183, !dbg !20987
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !20987
  %185 = load float, float* %cost.i, align 4, !dbg !20988
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !20989
  %cmp193.i = fcmp oge float %185, %186, !dbg !20990
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !20991

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !20992
  store float %187, float* %retval.i, align 4, !dbg !20993
  br label %quantize_and_encode_band_cost_template.exit, !dbg !20993

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20994
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !20994
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !20995

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !20996
  %190 = load i32, i32* %curidx.i, align 4, !dbg !20997
  %idxprom199.i = sext i32 %190 to i64, !dbg !20998
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !20999
  %sub200.i = sub nsw i32 %191, 1, !dbg !21000
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !20998
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !20998
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !20998
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !20998
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !20998
  %conv204.i = zext i8 %193 to i32, !dbg !20998
  %194 = load i32, i32* %curidx.i, align 4, !dbg !21001
  %idxprom205.i = sext i32 %194 to i64, !dbg !21002
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !21003
  %sub206.i = sub nsw i32 %195, 1, !dbg !21004
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !21002
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !21002
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !21002
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !21002
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !21002
  %conv210.i = zext i16 %197 to i32, !dbg !21002
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #9, !dbg !21005
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !21006
  %tobool211.i = icmp ne i32 %198, 0, !dbg !21006
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !21007

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !21008
  br label %for.cond213.i, !dbg !21009

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !21010
  %200 = load i32, i32* %dim.i, align 4, !dbg !21011
  %cmp214.i = icmp slt i32 %199, %200, !dbg !21012
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !21013

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !21014
  %202 = load i32, i32* %dim.i, align 4, !dbg !21015
  %mul217.i = mul nsw i32 %201, %202, !dbg !21016
  %203 = load i32, i32* %j.i, align 4, !dbg !21017
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !21018
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !21019
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !21020
  %sub220.i = sub nsw i32 %204, 1, !dbg !21021
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !21019
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !21019
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !21019
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !21019
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !21019
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !21022
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !21023

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21024
  %208 = load i32, i32* %i.i, align 4, !dbg !21025
  %209 = load i32, i32* %j.i, align 4, !dbg !21026
  %add227.i = add nsw i32 %208, %209, !dbg !21027
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !21028
  %210 = load float*, float** %in.addr.i, align 8, !dbg !21028
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !21028
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !21028
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !21029
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !21029
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #9, !dbg !21030
  br label %if.end232.i, !dbg !21030

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !21031
  %inc234.i = add nsw i32 %212, 1, !dbg !21031
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !21031
  br label %for.cond213.i, !dbg !21032, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !21033

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !21034
  %tobool237.i = icmp ne i32 %213, 0, !dbg !21034
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !21035

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !21036
  br label %for.cond239.i, !dbg !21037

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !21038
  %cmp240.i = icmp slt i32 %214, 2, !dbg !21039
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !21040

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !21041
  %mul243.i = mul nsw i32 %215, 2, !dbg !21042
  %216 = load i32, i32* %j.i, align 4, !dbg !21043
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !21044
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !21045
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !21046
  %sub246.i = sub nsw i32 %217, 1, !dbg !21047
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !21045
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !21045
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !21045
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !21045
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !21045
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !21048
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !21049

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !21050
  %221 = load i32, i32* %j.i, align 4, !dbg !21051
  %add253.i = add nsw i32 %220, %221, !dbg !21052
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !21053
  %222 = load float*, float** %in.addr.i, align 8, !dbg !21053
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !21053
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !21053
  %call256.i = call float @fabsf(float %223) #3, !dbg !21054
  %224 = load float, float* %Q.i, align 4, !dbg !21055
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !21056
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #9, !dbg !21057
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !21058
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !21058
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !21059
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !21060
  %shl.i284.i = shl i32 1, %227, !dbg !21061
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !21062
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !21063
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !21064
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !21064
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !21065

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !21066
  %neg1.i289.i = xor i32 %228, -1, !dbg !21067
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !21068
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !21069
  %shl2.i291.i = shl i32 1, %229, !dbg !21070
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !21071
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !21072
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !21073
  br label %av_clip_uintp2_c.exit296.i, !dbg !21073

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !21074
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !21075
  br label %av_clip_uintp2_c.exit296.i, !dbg !21075

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !21076
  store i32 %231, i32* %coef.i, align 4, !dbg !20646
  %232 = load i32, i32* %coef.i, align 4, !dbg !21077
  %or259.i = or i32 %232, 1, !dbg !21078
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !21079
  %sub260.i = sub nsw i32 31, %233, !dbg !21080
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !20647
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21081
  %235 = load i32, i32* %len.i, align 4, !dbg !21082
  %sub261.i = sub nsw i32 %235, 4, !dbg !21083
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !21084
  %236 = load i32, i32* %len.i, align 4, !dbg !21085
  %sub263.i = sub nsw i32 %236, 4, !dbg !21086
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !21087
  %shl.i = shl i32 1, %add264.i, !dbg !21088
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !21089
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #9, !dbg !21090
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21091
  %238 = load i32, i32* %len.i, align 4, !dbg !21092
  %239 = load i32, i32* %coef.i, align 4, !dbg !21093
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #9, !dbg !21094
  br label %if.end266.i, !dbg !21095

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !21096
  %inc268.i = add nsw i32 %240, 1, !dbg !21096
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !21096
  br label %for.cond239.i, !dbg !21097, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !21098

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !21099

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !21100
  %242 = load i32, i32* %i.i, align 4, !dbg !21101
  %add273.i = add nsw i32 %242, %241, !dbg !21101
  store i32 %add273.i, i32* %i.i, align 4, !dbg !21101
  br label %for.cond59.i, !dbg !21102, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !21103
  %tobool275.i = icmp ne i32* %243, null, !dbg !21103
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !21104

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !21105
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !21106
  store i32 %244, i32* %245, align 4, !dbg !21107
  br label %if.end277.i, !dbg !21108

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !21109
  %tobool278.i = icmp ne float* %246, null, !dbg !21109
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !21110

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !21111
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !21112
  store float %247, float* %248, align 4, !dbg !21113
  br label %if.end280.i, !dbg !21114

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !21115
  store float %249, float* %retval.i, align 4, !dbg !21116
  br label %quantize_and_encode_band_cost_template.exit, !dbg !21116

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !21117
  ret float %250, !dbg !21118
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @quant(float %coef, float %Q, float %rounding) #1 !dbg !21119 {
entry:
  %coef.addr = alloca float, align 4
  %Q.addr = alloca float, align 4
  %rounding.addr = alloca float, align 4
  %a = alloca float, align 4
  store float %coef, float* %coef.addr, align 4
  call void @llvm.dbg.declare(metadata float* %coef.addr, metadata !21122, metadata !2772), !dbg !21123
  store float %Q, float* %Q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Q.addr, metadata !21124, metadata !2772), !dbg !21125
  store float %rounding, float* %rounding.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rounding.addr, metadata !21126, metadata !2772), !dbg !21127
  call void @llvm.dbg.declare(metadata float* %a, metadata !21128, metadata !2772), !dbg !21129
  %0 = load float, float* %coef.addr, align 4, !dbg !21130
  %1 = load float, float* %Q.addr, align 4, !dbg !21131
  %mul = fmul float %0, %1, !dbg !21132
  store float %mul, float* %a, align 4, !dbg !21129
  %2 = load float, float* %a, align 4, !dbg !21133
  %3 = load float, float* %a, align 4, !dbg !21134
  %call = call float @sqrtf(float %3) #9, !dbg !21135
  %mul1 = fmul float %2, %call, !dbg !21136
  %call2 = call float @sqrtf(float %mul1) #9, !dbg !21137
  %4 = load float, float* %rounding.addr, align 4, !dbg !21139
  %add = fadd float %call2, %4, !dbg !21140
  %conv = fptosi float %add to i32, !dbg !21141
  ret i32 %conv, !dbg !21142
}

; Function Attrs: nounwind
declare float @cbrtf(float) #6

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #1 !dbg !21143 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !21146, metadata !2772), !dbg !21151
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !21157, metadata !2772), !dbg !21158
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21159, metadata !2772), !dbg !21160
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !21161, metadata !2772), !dbg !21162
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !21163, metadata !2772), !dbg !21164
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !21165, metadata !2772), !dbg !21166
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21167
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !21168
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !21168
  store i32 %1, i32* %bit_buf, align 4, !dbg !21169
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21170
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !21171
  %3 = load i32, i32* %bit_left2, align 4, !dbg !21171
  store i32 %3, i32* %bit_left, align 4, !dbg !21172
  %4 = load i32, i32* %n.addr, align 4, !dbg !21173
  %5 = load i32, i32* %bit_left, align 4, !dbg !21174
  %cmp = icmp slt i32 %4, %5, !dbg !21175
  br i1 %cmp, label %if.then, label %if.else, !dbg !21176

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !21177
  %7 = load i32, i32* %n.addr, align 4, !dbg !21179
  %shl = shl i32 %6, %7, !dbg !21180
  %8 = load i32, i32* %value.addr, align 4, !dbg !21181
  %or = or i32 %shl, %8, !dbg !21182
  store i32 %or, i32* %bit_buf, align 4, !dbg !21183
  %9 = load i32, i32* %n.addr, align 4, !dbg !21184
  %10 = load i32, i32* %bit_left, align 4, !dbg !21185
  %sub = sub nsw i32 %10, %9, !dbg !21185
  store i32 %sub, i32* %bit_left, align 4, !dbg !21185
  br label %if.end12, !dbg !21186

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !21187
  %12 = load i32, i32* %bit_buf, align 4, !dbg !21188
  %shl3 = shl i32 %12, %11, !dbg !21188
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !21188
  %13 = load i32, i32* %value.addr, align 4, !dbg !21189
  %14 = load i32, i32* %n.addr, align 4, !dbg !21190
  %15 = load i32, i32* %bit_left, align 4, !dbg !21191
  %sub4 = sub nsw i32 %14, %15, !dbg !21192
  %shr = lshr i32 %13, %sub4, !dbg !21193
  %16 = load i32, i32* %bit_buf, align 4, !dbg !21194
  %or5 = or i32 %16, %shr, !dbg !21194
  store i32 %or5, i32* %bit_buf, align 4, !dbg !21194
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21195
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !21196
  %18 = load i8*, i8** %buf_end, align 8, !dbg !21196
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21197
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !21198
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !21198
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !21199
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !21199
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21199
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !21200
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !21201

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !21202
  store i32 %21, i32* %x.addr.i, align 4, !dbg !21203
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !21204
  %shl.i = shl i32 %22, 8, !dbg !21205
  %and.i = and i32 %shl.i, 65280, !dbg !21206
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !21207
  %shr.i = lshr i32 %23, 8, !dbg !21208
  %and1.i = and i32 %shr.i, 255, !dbg !21209
  %or.i = or i32 %and.i, %and1.i, !dbg !21210
  %shl2.i = shl i32 %or.i, 16, !dbg !21211
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !21212
  %shr3.i = lshr i32 %24, 16, !dbg !21213
  %shl4.i = shl i32 %shr3.i, 8, !dbg !21214
  %and5.i = and i32 %shl4.i, 65280, !dbg !21215
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !21216
  %shr6.i = lshr i32 %25, 16, !dbg !21217
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !21218
  %and8.i = and i32 %shr7.i, 255, !dbg !21219
  %or9.i = or i32 %and5.i, %and8.i, !dbg !21220
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !21221
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21222
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !21223
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !21223
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !21224
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !21224
  store i32 %or10.i, i32* %l, align 1, !dbg !21225
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21226
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !21227
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !21228
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !21228
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !21228
  br label %if.end, !dbg !21229

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i32 0, i32 0)), !dbg !21230
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !21232
  %sub11 = sub nsw i32 32, %31, !dbg !21233
  %32 = load i32, i32* %bit_left, align 4, !dbg !21234
  %add = add nsw i32 %32, %sub11, !dbg !21234
  store i32 %add, i32* %bit_left, align 4, !dbg !21234
  %33 = load i32, i32* %value.addr, align 4, !dbg !21235
  store i32 %33, i32* %bit_buf, align 4, !dbg !21236
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !21237
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21238
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !21239
  store i32 %34, i32* %bit_buf13, align 8, !dbg !21240
  %36 = load i32, i32* %bit_left, align 4, !dbg !21241
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !21242
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !21243
  store i32 %36, i32* %bit_left14, align 4, !dbg !21244
  ret void, !dbg !21245
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_sbits(%struct.PutBitContext* %pb, i32 %n, i32 %value) #1 !dbg !21246 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !21249, metadata !2772), !dbg !21253
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !21255, metadata !2772), !dbg !21256
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !21257, metadata !2772), !dbg !21258
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21259, metadata !2772), !dbg !21260
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !21261, metadata !2772), !dbg !21262
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !21263
  %1 = load i32, i32* %n.addr, align 4, !dbg !21264
  %2 = load i32, i32* %value.addr, align 4, !dbg !21265
  %3 = load i32, i32* %n.addr, align 4, !dbg !21266
  store i32 %2, i32* %a.addr.i, align 4, !dbg !21267
  store i32 %3, i32* %p.addr.i, align 4, !dbg !21267
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !21268
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !21269
  %shl.i = shl i32 1, %5, !dbg !21270
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !21271
  %and.i = and i32 %4, %sub.i, !dbg !21272
  call void @put_bits(%struct.PutBitContext* %0, i32 %1, i32 %and.i), !dbg !21273
  ret void, !dbg !21275
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @abort() #7

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_ESC(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !21276 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !16762, metadata !2772), !dbg !21277
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !16785, metadata !2772), !dbg !21280
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !16762, metadata !2772), !dbg !21281
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !16785, metadata !2772), !dbg !21283
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !16800, metadata !2772), !dbg !21284
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !16802, metadata !2772), !dbg !21285
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !16804, metadata !2772), !dbg !21286
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !16806, metadata !2772), !dbg !21287
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !16808, metadata !2772), !dbg !21288
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !16810, metadata !2772), !dbg !21289
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !16812, metadata !2772), !dbg !21290
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !16814, metadata !2772), !dbg !21291
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !16816, metadata !2772), !dbg !21292
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !16818, metadata !2772), !dbg !21293
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !16820, metadata !2772), !dbg !21294
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !16822, metadata !2772), !dbg !21295
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !16824, metadata !2772), !dbg !21296
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !16826, metadata !2772), !dbg !21297
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !16828, metadata !2772), !dbg !21298
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !16830, metadata !2772), !dbg !21299
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !16832, metadata !2772), !dbg !21300
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !16834, metadata !2772), !dbg !21301
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !16836, metadata !2772), !dbg !21302
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !16838, metadata !2772), !dbg !21303
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !16840, metadata !2772), !dbg !21304
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !16842, metadata !2772), !dbg !21305
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !16844, metadata !2772), !dbg !21306
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !16846, metadata !2772), !dbg !21307
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !16848, metadata !2772), !dbg !21308
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !16850, metadata !2772), !dbg !21309
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !16852, metadata !2772), !dbg !21310
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !16854, metadata !2772), !dbg !21311
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !16856, metadata !2772), !dbg !21312
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !16858, metadata !2772), !dbg !21313
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !16860, metadata !2772), !dbg !21314
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !16862, metadata !2772), !dbg !21315
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !16864, metadata !2772), !dbg !21316
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !16866, metadata !2772), !dbg !21317
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !16868, metadata !2772), !dbg !21318
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !16870, metadata !2772), !dbg !21319
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !16872, metadata !2772), !dbg !21320
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !16874, metadata !2772), !dbg !21321
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !16876, metadata !2772), !dbg !21322
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !16878, metadata !2772), !dbg !21323
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !16880, metadata !2772), !dbg !21324
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !16882, metadata !2772), !dbg !21325
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !21326, metadata !2772), !dbg !21327
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !21328, metadata !2772), !dbg !21329
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !21330, metadata !2772), !dbg !21331
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !21332, metadata !2772), !dbg !21333
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !21334, metadata !2772), !dbg !21335
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !21336, metadata !2772), !dbg !21337
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !21338, metadata !2772), !dbg !21339
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !21340, metadata !2772), !dbg !21341
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !21342, metadata !2772), !dbg !21343
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !21344, metadata !2772), !dbg !21345
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !21346, metadata !2772), !dbg !21347
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !21348, metadata !2772), !dbg !21349
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !21350
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !21351
  %2 = load float*, float** %in.addr, align 8, !dbg !21352
  %3 = load float*, float** %quant.addr, align 8, !dbg !21353
  %4 = load float*, float** %scaled.addr, align 8, !dbg !21354
  %5 = load i32, i32* %size.addr, align 4, !dbg !21355
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !21356
  %7 = load float, float* %lambda.addr, align 4, !dbg !21357
  %8 = load float, float* %uplim.addr, align 4, !dbg !21358
  %9 = load i32*, i32** %bits.addr, align 8, !dbg !21359
  %10 = load float*, float** %energy.addr, align 8, !dbg !21360
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21361
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21361
  store float* %2, float** %in.addr.i, align 8, !dbg !21361
  store float* %3, float** %out.addr.i, align 8, !dbg !21361
  store float* %4, float** %scaled.addr.i, align 8, !dbg !21361
  store i32 %5, i32* %size.addr.i, align 4, !dbg !21361
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !21361
  store i32 11, i32* %cb.addr.i, align 4, !dbg !21361
  store float %7, float* %lambda.addr.i, align 4, !dbg !21361
  store float %8, float* %uplim.addr.i, align 4, !dbg !21361
  store i32* %9, i32** %bits.addr.i, align 8, !dbg !21361
  store float* %10, float** %energy.addr.i, align 8, !dbg !21361
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !21361
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !21361
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !21361
  store i32 1, i32* %BT_ESC.addr.i, align 4, !dbg !21361
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !21361
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !21361
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !21361
  %11 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !21362
  %sub.i = sub nsw i32 200, %11, !dbg !21363
  %add.i = add nsw i32 %sub.i, 140, !dbg !21364
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !21365
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !21303
  %12 = load i32, i32* %q_idx.i, align 4, !dbg !21366
  %idxprom.i = sext i32 %12 to i64, !dbg !21367
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !21367
  %13 = load float, float* %arrayidx.i, align 4, !dbg !21367
  store float %13, float* %Q.i, align 4, !dbg !21304
  %14 = load i32, i32* %q_idx.i, align 4, !dbg !21368
  %idxprom2.i = sext i32 %14 to i64, !dbg !21369
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !21369
  %15 = load float, float* %arrayidx3.i, align 4, !dbg !21369
  store float %15, float* %Q34.i, align 4, !dbg !21305
  %16 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !21370
  %add4.i = add nsw i32 200, %16, !dbg !21371
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !21372
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !21373
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !21374
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !21374
  %17 = load float, float* %arrayidx8.i, align 4, !dbg !21374
  store float %17, float* %IQ.i, align 4, !dbg !21306
  %18 = load float, float* %IQ.i, align 4, !dbg !21375
  %mul.i = fmul float 1.651400e+05, %18, !dbg !21376
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !21307
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !21310
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !21311
  %19 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !21377
  %tobool.i = icmp ne i32 %19, 0, !dbg !21377
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !21377
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !21312
  store i32 0, i32* %resbits.i, align 4, !dbg !21313
  %20 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !21378
  %tobool9.i = icmp ne i32 %20, 0, !dbg !21378
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !21379

lor.lhs.false.i:                                  ; preds = %entry
  %21 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !21380
  %tobool10.i = icmp ne i32 %21, 0, !dbg !21380
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !21381

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %22 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !21382
  %tobool12.i = icmp ne i32 %22, 0, !dbg !21382
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !21383

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !21384
  br label %for.cond.i, !dbg !21385

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %23 = load i32, i32* %i.i, align 4, !dbg !21386
  %24 = load i32, i32* %size.addr.i, align 4, !dbg !21387
  %cmp.i = icmp slt i32 %23, %24, !dbg !21388
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !21389

for.body.i:                                       ; preds = %for.cond.i
  %25 = load i32, i32* %i.i, align 4, !dbg !21390
  %idxprom13.i = sext i32 %25 to i64, !dbg !21391
  %26 = load float*, float** %in.addr.i, align 8, !dbg !21391
  %arrayidx14.i = getelementptr inbounds float, float* %26, i64 %idxprom13.i, !dbg !21391
  %27 = load float, float* %arrayidx14.i, align 4, !dbg !21391
  %28 = load i32, i32* %i.i, align 4, !dbg !21392
  %idxprom15.i = sext i32 %28 to i64, !dbg !21393
  %29 = load float*, float** %in.addr.i, align 8, !dbg !21393
  %arrayidx16.i = getelementptr inbounds float, float* %29, i64 %idxprom15.i, !dbg !21393
  %30 = load float, float* %arrayidx16.i, align 4, !dbg !21393
  %mul17.i = fmul float %27, %30, !dbg !21394
  %31 = load float, float* %cost.i, align 4, !dbg !21395
  %add18.i = fadd float %31, %mul17.i, !dbg !21395
  store float %add18.i, float* %cost.i, align 4, !dbg !21395
  %32 = load i32, i32* %i.i, align 4, !dbg !21396
  %inc.i = add nsw i32 %32, 1, !dbg !21396
  store i32 %inc.i, i32* %i.i, align 4, !dbg !21396
  br label %for.cond.i, !dbg !21397, !llvm.loop !16965

for.end.i:                                        ; preds = %for.cond.i
  %33 = load i32*, i32** %bits.addr.i, align 8, !dbg !21398
  %tobool19.i = icmp ne i32* %33, null, !dbg !21398
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !21399

if.then20.i:                                      ; preds = %for.end.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !21400
  store i32 0, i32* %34, align 4, !dbg !21401
  br label %if.end.i, !dbg !21402

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %35 = load float*, float** %energy.addr.i, align 8, !dbg !21403
  %tobool21.i = icmp ne float* %35, null, !dbg !21403
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !21404

if.then22.i:                                      ; preds = %if.end.i
  %36 = load float, float* %qenergy.i, align 4, !dbg !21405
  %37 = load float*, float** %energy.addr.i, align 8, !dbg !21406
  store float %36, float* %37, align 4, !dbg !21407
  br label %if.end23.i, !dbg !21408

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %38 = load float*, float** %out.addr.i, align 8, !dbg !21409
  %tobool24.i = icmp ne float* %38, null, !dbg !21409
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !21410

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !21411
  br label %for.cond26.i, !dbg !21412

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %39 = load i32, i32* %i.i, align 4, !dbg !21413
  %40 = load i32, i32* %size.addr.i, align 4, !dbg !21414
  %cmp27.i = icmp slt i32 %39, %40, !dbg !21415
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !21416

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !21417
  br label %for.cond29.i, !dbg !21418

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %41 = load i32, i32* %j.i, align 4, !dbg !21419
  %42 = load i32, i32* %dim.i, align 4, !dbg !21420
  %cmp30.i = icmp slt i32 %41, %42, !dbg !21421
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !21422

for.body31.i:                                     ; preds = %for.cond29.i
  %43 = load i32, i32* %i.i, align 4, !dbg !21423
  %44 = load i32, i32* %j.i, align 4, !dbg !21424
  %add32.i = add nsw i32 %43, %44, !dbg !21425
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !21426
  %45 = load float*, float** %out.addr.i, align 8, !dbg !21426
  %arrayidx34.i = getelementptr inbounds float, float* %45, i64 %idxprom33.i, !dbg !21426
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !21427
  %46 = load i32, i32* %j.i, align 4, !dbg !21428
  %inc36.i = add nsw i32 %46, 1, !dbg !21428
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !21428
  br label %for.cond29.i, !dbg !21429, !llvm.loop !17010

for.end37.i:                                      ; preds = %for.cond29.i
  %47 = load i32, i32* %dim.i, align 4, !dbg !21430
  %48 = load i32, i32* %i.i, align 4, !dbg !21431
  %add39.i = add nsw i32 %48, %47, !dbg !21431
  store i32 %add39.i, i32* %i.i, align 4, !dbg !21431
  br label %for.cond26.i, !dbg !21432, !llvm.loop !17016

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !21433

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %49 = load float, float* %cost.i, align 4, !dbg !21434
  %50 = load float, float* %lambda.addr.i, align 4, !dbg !21435
  %mul42.i = fmul float %49, %50, !dbg !21436
  store float %mul42.i, float* %retval.i, align 4, !dbg !21437
  br label %quantize_and_encode_band_cost_template.exit, !dbg !21437

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %51 = load float*, float** %scaled.addr.i, align 8, !dbg !21438
  %tobool44.i = icmp ne float* %51, null, !dbg !21438
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !21439

if.then45.i:                                      ; preds = %if.end43.i
  %52 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21440
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %52, i32 0, i32 32, !dbg !21441
  %53 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !21441
  %54 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21442
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %54, i32 0, i32 29, !dbg !21443
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !21442
  %55 = load float*, float** %in.addr.i, align 8, !dbg !21444
  %56 = load i32, i32* %size.addr.i, align 4, !dbg !21445
  call void %53(float* %arraydecay.i, float* %55, i32 %56) #9, !dbg !21440
  %57 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21446
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %57, i32 0, i32 29, !dbg !21447
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !21446
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !21448
  br label %if.end48.i, !dbg !21449

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21450
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 33, !dbg !21451
  %59 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !21451
  %60 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21452
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %60, i32 0, i32 28, !dbg !21453
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !21452
  %61 = load float*, float** %in.addr.i, align 8, !dbg !21454
  %62 = load float*, float** %scaled.addr.i, align 8, !dbg !21455
  %63 = load i32, i32* %size.addr.i, align 4, !dbg !21456
  %64 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !21457
  %tobool50.i = icmp ne i32 %64, 0, !dbg !21458
  %lnot.i = xor i1 %tobool50.i, true, !dbg !21458
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !21458
  %65 = load i32, i32* %cb.addr.i, align 4, !dbg !21459
  %idxprom51.i = sext i32 %65 to i64, !dbg !21460
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !21460
  %66 = load i8, i8* %arrayidx52.i, align 1, !dbg !21460
  %conv.i = zext i8 %66 to i32, !dbg !21460
  %67 = load float, float* %Q34.i, align 4, !dbg !21461
  %68 = load float, float* %ROUNDING.addr.i, align 4, !dbg !21462
  call void %59(i32* %arraydecay49.i, float* %61, float* %62, i32 %63, i32 %lnot.ext.i, i32 %conv.i, float %67, float %68) #9, !dbg !21450
  %69 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !21463
  %tobool53.i = icmp ne i32 %69, 0, !dbg !21463
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !21464

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !21465
  br label %if.end58.i, !dbg !21466

if.else.i:                                        ; preds = %if.end48.i
  %70 = load i32, i32* %cb.addr.i, align 4, !dbg !21467
  %idxprom55.i = sext i32 %70 to i64, !dbg !21468
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !21468
  %71 = load i8, i8* %arrayidx56.i, align 1, !dbg !21468
  %conv57.i = zext i8 %71 to i32, !dbg !21468
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !21469
  br label %if.end58.i, !dbg !21361

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !21470
  br label %for.cond59.i, !dbg !21471

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %72 = load i32, i32* %i.i, align 4, !dbg !21472
  %73 = load i32, i32* %size.addr.i, align 4, !dbg !21473
  %cmp60.i = icmp slt i32 %72, %73, !dbg !21474
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !21475

for.body62.i:                                     ; preds = %for.cond59.i
  %74 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !21476
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %74, i32 0, i32 28, !dbg !21477
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !21476
  %75 = load i32, i32* %i.i, align 4, !dbg !21478
  %idx.ext.i = sext i32 %75 to i64, !dbg !21479
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !21479
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !21316
  store i32 0, i32* %curidx.i, align 4, !dbg !21317
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !21320
  store i32 0, i32* %j.i, align 4, !dbg !21480
  br label %for.cond65.i, !dbg !21481

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %76 = load i32, i32* %j.i, align 4, !dbg !21482
  %77 = load i32, i32* %dim.i, align 4, !dbg !21483
  %cmp66.i = icmp slt i32 %76, %77, !dbg !21484
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !21485

for.body68.i:                                     ; preds = %for.cond65.i
  %78 = load i32, i32* %cb.addr.i, align 4, !dbg !21486
  %idxprom69.i = sext i32 %78 to i64, !dbg !21487
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !21487
  %79 = load i8, i8* %arrayidx70.i, align 1, !dbg !21487
  %conv71.i = zext i8 %79 to i32, !dbg !21487
  %80 = load i32, i32* %curidx.i, align 4, !dbg !21488
  %mul72.i = mul nsw i32 %80, %conv71.i, !dbg !21488
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !21488
  %81 = load i32, i32* %j.i, align 4, !dbg !21489
  %idxprom73.i = sext i32 %81 to i64, !dbg !21490
  %82 = load i32*, i32** %quants.i, align 8, !dbg !21490
  %arrayidx74.i = getelementptr inbounds i32, i32* %82, i64 %idxprom73.i, !dbg !21490
  %83 = load i32, i32* %arrayidx74.i, align 4, !dbg !21490
  %84 = load i32, i32* %off.i, align 4, !dbg !21491
  %add75.i = add nsw i32 %83, %84, !dbg !21492
  %85 = load i32, i32* %curidx.i, align 4, !dbg !21493
  %add76.i = add nsw i32 %85, %add75.i, !dbg !21493
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !21493
  %86 = load i32, i32* %j.i, align 4, !dbg !21494
  %inc78.i = add nsw i32 %86, 1, !dbg !21494
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !21494
  br label %for.cond65.i, !dbg !21495, !llvm.loop !17092

for.end79.i:                                      ; preds = %for.cond65.i
  %87 = load i32, i32* %curidx.i, align 4, !dbg !21496
  %idxprom80.i = sext i32 %87 to i64, !dbg !21497
  %88 = load i32, i32* %cb.addr.i, align 4, !dbg !21498
  %sub81.i = sub nsw i32 %88, 1, !dbg !21499
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !21497
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !21497
  %89 = load i8*, i8** %arrayidx83.i, align 8, !dbg !21497
  %arrayidx84.i = getelementptr inbounds i8, i8* %89, i64 %idxprom80.i, !dbg !21497
  %90 = load i8, i8* %arrayidx84.i, align 1, !dbg !21497
  %conv85.i = zext i8 %90 to i32, !dbg !21497
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !21500
  %91 = load i32, i32* %curidx.i, align 4, !dbg !21501
  %92 = load i32, i32* %dim.i, align 4, !dbg !21502
  %mul86.i = mul nsw i32 %91, %92, !dbg !21503
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !21504
  %93 = load i32, i32* %cb.addr.i, align 4, !dbg !21505
  %sub88.i = sub nsw i32 %93, 1, !dbg !21506
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !21504
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !21504
  %94 = load float*, float** %arrayidx90.i, align 8, !dbg !21504
  %arrayidx91.i = getelementptr inbounds float, float* %94, i64 %idxprom87.i, !dbg !21504
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !21507
  %95 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !21508
  %tobool92.i = icmp ne i32 %95, 0, !dbg !21508
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !21509

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !21510
  br label %for.cond94.i, !dbg !21511

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %96 = load i32, i32* %j.i, align 4, !dbg !21512
  %97 = load i32, i32* %dim.i, align 4, !dbg !21513
  %cmp95.i = icmp slt i32 %96, %97, !dbg !21514
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !21515

for.body97.i:                                     ; preds = %for.cond94.i
  %98 = load i32, i32* %i.i, align 4, !dbg !21516
  %99 = load i32, i32* %j.i, align 4, !dbg !21517
  %add98.i = add nsw i32 %98, %99, !dbg !21518
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !21519
  %100 = load float*, float** %in.addr.i, align 8, !dbg !21519
  %arrayidx100.i = getelementptr inbounds float, float* %100, i64 %idxprom99.i, !dbg !21519
  %101 = load float, float* %arrayidx100.i, align 4, !dbg !21519
  %call.i = call float @fabsf(float %101) #3, !dbg !21520
  store float %call.i, float* %t.i, align 4, !dbg !21321
  %102 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !21521
  %tobool101.i = icmp ne i32 %102, 0, !dbg !21521
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !21522

land.lhs.true.i:                                  ; preds = %for.body97.i
  %103 = load i32, i32* %j.i, align 4, !dbg !21523
  %idxprom102.i = sext i32 %103 to i64, !dbg !21524
  %104 = load float*, float** %vec.i, align 8, !dbg !21524
  %arrayidx103.i = getelementptr inbounds float, float* %104, i64 %idxprom102.i, !dbg !21524
  %105 = load float, float* %arrayidx103.i, align 4, !dbg !21524
  %cmp104.i = fcmp oeq float %105, 6.400000e+01, !dbg !21525
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !21526

if.then106.i:                                     ; preds = %land.lhs.true.i
  %106 = load float, float* %t.i, align 4, !dbg !21527
  %107 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !21528
  %cmp107.i = fcmp oge float %106, %107, !dbg !21529
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !21530

if.then109.i:                                     ; preds = %if.then106.i
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !21531
  store float %108, float* %quantized.i, align 4, !dbg !21532
  %109 = load i32, i32* %curbits.i, align 4, !dbg !21533
  %add110.i = add nsw i32 %109, 21, !dbg !21533
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !21533
  br label %if.end124.i, !dbg !21534

if.else111.i:                                     ; preds = %if.then106.i
  %110 = load float, float* %t.i, align 4, !dbg !21535
  %111 = load float, float* %Q.i, align 4, !dbg !21536
  %112 = load float, float* %ROUNDING.addr.i, align 4, !dbg !21537
  %call112.i = call i32 @quant(float %110, float %111, float %112) #9, !dbg !21538
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !21539
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !21539
  %113 = load i32, i32* %a.addr.i.i, align 4, !dbg !21540
  %114 = load i32, i32* %p.addr.i.i, align 4, !dbg !21541
  %shl.i.i = shl i32 1, %114, !dbg !21542
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !21543
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !21544
  %and.i.i = and i32 %113, %neg.i.i, !dbg !21545
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !21545
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !21546

if.then.i.i:                                      ; preds = %if.else111.i
  %115 = load i32, i32* %a.addr.i.i, align 4, !dbg !21547
  %neg1.i.i = xor i32 %115, -1, !dbg !21548
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !21549
  %116 = load i32, i32* %p.addr.i.i, align 4, !dbg !21550
  %shl2.i.i = shl i32 1, %116, !dbg !21551
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !21552
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !21553
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !21554
  br label %av_clip_uintp2_c.exit.i, !dbg !21554

if.else.i.i:                                      ; preds = %if.else111.i
  %117 = load i32, i32* %a.addr.i.i, align 4, !dbg !21555
  store i32 %117, i32* %retval.i.i, align 4, !dbg !21556
  br label %av_clip_uintp2_c.exit.i, !dbg !21556

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %118 = load i32, i32* %retval.i.i, align 4, !dbg !21557
  store i32 %118, i32* %c.i, align 4, !dbg !21323
  %119 = load i32, i32* %c.i, align 4, !dbg !21558
  %conv114.i = sitofp i32 %119 to float, !dbg !21558
  %120 = load i32, i32* %c.i, align 4, !dbg !21559
  %conv115.i = sitofp i32 %120 to float, !dbg !21559
  %call116.i = call float @cbrtf(float %conv115.i) #9, !dbg !21560
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !21561
  %121 = load float, float* %IQ.i, align 4, !dbg !21562
  %mul118.i = fmul float %mul117.i, %121, !dbg !21563
  store float %mul118.i, float* %quantized.i, align 4, !dbg !21564
  %122 = load i32, i32* %c.i, align 4, !dbg !21565
  %or.i = or i32 %122, 1, !dbg !21566
  %123 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !21567
  %sub119.i = sub nsw i32 31, %123, !dbg !21568
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !21569
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !21570
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !21571
  %124 = load i32, i32* %curbits.i, align 4, !dbg !21572
  %add123.i = add nsw i32 %124, %add122.i, !dbg !21572
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !21572
  br label %if.end124.i, !dbg !21361

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !21573

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %125 = load i32, i32* %j.i, align 4, !dbg !21574
  %idxprom126.i = sext i32 %125 to i64, !dbg !21575
  %126 = load float*, float** %vec.i, align 8, !dbg !21575
  %arrayidx127.i = getelementptr inbounds float, float* %126, i64 %idxprom126.i, !dbg !21575
  %127 = load float, float* %arrayidx127.i, align 4, !dbg !21575
  %128 = load float, float* %IQ.i, align 4, !dbg !21576
  %mul128.i = fmul float %127, %128, !dbg !21577
  store float %mul128.i, float* %quantized.i, align 4, !dbg !21578
  br label %if.end129.i, !dbg !21361

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %129 = load float, float* %t.i, align 4, !dbg !21579
  %130 = load float, float* %quantized.i, align 4, !dbg !21580
  %sub130.i = fsub float %129, %130, !dbg !21581
  store float %sub130.i, float* %di.i, align 4, !dbg !21582
  %131 = load float*, float** %out.addr.i, align 8, !dbg !21583
  %tobool131.i = icmp ne float* %131, null, !dbg !21583
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !21584

if.then132.i:                                     ; preds = %if.end129.i
  %132 = load i32, i32* %i.i, align 4, !dbg !21585
  %133 = load i32, i32* %j.i, align 4, !dbg !21586
  %add133.i = add nsw i32 %132, %133, !dbg !21587
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !21588
  %134 = load float*, float** %in.addr.i, align 8, !dbg !21588
  %arrayidx135.i = getelementptr inbounds float, float* %134, i64 %idxprom134.i, !dbg !21588
  %135 = load float, float* %arrayidx135.i, align 4, !dbg !21588
  %cmp136.i = fcmp oge float %135, 0.000000e+00, !dbg !21589
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !21588

cond.true.i:                                      ; preds = %if.then132.i
  %136 = load float, float* %quantized.i, align 4, !dbg !21590
  br label %cond.end.i, !dbg !21591

cond.false.i:                                     ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !21592
  %sub138.i = fsub float -0.000000e+00, %137, !dbg !21593
  br label %cond.end.i, !dbg !21594

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %136, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !21595
  %138 = load i32, i32* %i.i, align 4, !dbg !21596
  %139 = load i32, i32* %j.i, align 4, !dbg !21597
  %add140.i = add nsw i32 %138, %139, !dbg !21598
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !21599
  %140 = load float*, float** %out.addr.i, align 8, !dbg !21599
  %arrayidx142.i = getelementptr inbounds float, float* %140, i64 %idxprom141.i, !dbg !21599
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !21600
  br label %if.end143.i, !dbg !21599

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %141 = load i32, i32* %j.i, align 4, !dbg !21601
  %idxprom144.i = sext i32 %141 to i64, !dbg !21602
  %142 = load float*, float** %vec.i, align 8, !dbg !21602
  %arrayidx145.i = getelementptr inbounds float, float* %142, i64 %idxprom144.i, !dbg !21602
  %143 = load float, float* %arrayidx145.i, align 4, !dbg !21602
  %cmp146.i = fcmp une float %143, 0.000000e+00, !dbg !21603
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !21604

if.then148.i:                                     ; preds = %if.end143.i
  %144 = load i32, i32* %curbits.i, align 4, !dbg !21605
  %inc149.i = add nsw i32 %144, 1, !dbg !21605
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !21605
  br label %if.end150.i, !dbg !21606

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %145 = load float, float* %quantized.i, align 4, !dbg !21607
  %146 = load float, float* %quantized.i, align 4, !dbg !21608
  %mul151.i = fmul float %145, %146, !dbg !21609
  %147 = load float, float* %qenergy.i, align 4, !dbg !21610
  %add152.i = fadd float %147, %mul151.i, !dbg !21610
  store float %add152.i, float* %qenergy.i, align 4, !dbg !21610
  %148 = load float, float* %di.i, align 4, !dbg !21611
  %149 = load float, float* %di.i, align 4, !dbg !21612
  %mul153.i = fmul float %148, %149, !dbg !21613
  %150 = load float, float* %rd.i, align 4, !dbg !21614
  %add154.i = fadd float %150, %mul153.i, !dbg !21614
  store float %add154.i, float* %rd.i, align 4, !dbg !21614
  %151 = load i32, i32* %j.i, align 4, !dbg !21615
  %inc156.i = add nsw i32 %151, 1, !dbg !21615
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !21615
  br label %for.cond94.i, !dbg !21616, !llvm.loop !17227

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !21617

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !21618
  br label %for.cond159.i, !dbg !21619

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %152 = load i32, i32* %j.i, align 4, !dbg !21620
  %153 = load i32, i32* %dim.i, align 4, !dbg !21621
  %cmp160.i = icmp slt i32 %152, %153, !dbg !21622
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !21623

for.body162.i:                                    ; preds = %for.cond159.i
  %154 = load i32, i32* %j.i, align 4, !dbg !21624
  %idxprom163.i = sext i32 %154 to i64, !dbg !21625
  %155 = load float*, float** %vec.i, align 8, !dbg !21625
  %arrayidx164.i = getelementptr inbounds float, float* %155, i64 %idxprom163.i, !dbg !21625
  %156 = load float, float* %arrayidx164.i, align 4, !dbg !21625
  %157 = load float, float* %IQ.i, align 4, !dbg !21626
  %mul165.i = fmul float %156, %157, !dbg !21627
  store float %mul165.i, float* %quantized.i, align 4, !dbg !21628
  %158 = load float, float* %quantized.i, align 4, !dbg !21629
  %159 = load float, float* %quantized.i, align 4, !dbg !21630
  %mul166.i = fmul float %158, %159, !dbg !21631
  %160 = load float, float* %qenergy.i, align 4, !dbg !21632
  %add167.i = fadd float %160, %mul166.i, !dbg !21632
  store float %add167.i, float* %qenergy.i, align 4, !dbg !21632
  %161 = load float*, float** %out.addr.i, align 8, !dbg !21633
  %tobool168.i = icmp ne float* %161, null, !dbg !21633
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !21634

if.then169.i:                                     ; preds = %for.body162.i
  %162 = load float, float* %quantized.i, align 4, !dbg !21635
  %163 = load i32, i32* %i.i, align 4, !dbg !21636
  %164 = load i32, i32* %j.i, align 4, !dbg !21637
  %add170.i = add nsw i32 %163, %164, !dbg !21638
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !21639
  %165 = load float*, float** %out.addr.i, align 8, !dbg !21639
  %arrayidx172.i = getelementptr inbounds float, float* %165, i64 %idxprom171.i, !dbg !21639
  store float %162, float* %arrayidx172.i, align 4, !dbg !21640
  br label %if.end173.i, !dbg !21639

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %166 = load i32, i32* %i.i, align 4, !dbg !21641
  %167 = load i32, i32* %j.i, align 4, !dbg !21642
  %add174.i = add nsw i32 %166, %167, !dbg !21643
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !21644
  %168 = load float*, float** %in.addr.i, align 8, !dbg !21644
  %arrayidx176.i = getelementptr inbounds float, float* %168, i64 %idxprom175.i, !dbg !21644
  %169 = load float, float* %arrayidx176.i, align 4, !dbg !21644
  %170 = load float, float* %quantized.i, align 4, !dbg !21645
  %sub177.i = fsub float %169, %170, !dbg !21646
  %171 = load i32, i32* %i.i, align 4, !dbg !21647
  %172 = load i32, i32* %j.i, align 4, !dbg !21648
  %add178.i = add nsw i32 %171, %172, !dbg !21649
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !21650
  %173 = load float*, float** %in.addr.i, align 8, !dbg !21650
  %arrayidx180.i = getelementptr inbounds float, float* %173, i64 %idxprom179.i, !dbg !21650
  %174 = load float, float* %arrayidx180.i, align 4, !dbg !21650
  %175 = load float, float* %quantized.i, align 4, !dbg !21651
  %sub181.i = fsub float %174, %175, !dbg !21652
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !21653
  %176 = load float, float* %rd.i, align 4, !dbg !21654
  %add183.i = fadd float %176, %mul182.i, !dbg !21654
  store float %add183.i, float* %rd.i, align 4, !dbg !21654
  %177 = load i32, i32* %j.i, align 4, !dbg !21655
  %inc185.i = add nsw i32 %177, 1, !dbg !21655
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !21655
  br label %for.cond159.i, !dbg !21656, !llvm.loop !17276

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !21361

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %178 = load float, float* %rd.i, align 4, !dbg !21657
  %179 = load float, float* %lambda.addr.i, align 4, !dbg !21658
  %mul188.i = fmul float %178, %179, !dbg !21659
  %180 = load i32, i32* %curbits.i, align 4, !dbg !21660
  %conv189.i = sitofp i32 %180 to float, !dbg !21660
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !21661
  %181 = load float, float* %cost.i, align 4, !dbg !21662
  %add191.i = fadd float %181, %add190.i, !dbg !21662
  store float %add191.i, float* %cost.i, align 4, !dbg !21662
  %182 = load i32, i32* %curbits.i, align 4, !dbg !21663
  %183 = load i32, i32* %resbits.i, align 4, !dbg !21664
  %add192.i = add nsw i32 %183, %182, !dbg !21664
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !21664
  %184 = load float, float* %cost.i, align 4, !dbg !21665
  %185 = load float, float* %uplim.addr.i, align 4, !dbg !21666
  %cmp193.i = fcmp oge float %184, %185, !dbg !21667
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !21668

if.then195.i:                                     ; preds = %if.end187.i
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !21669
  store float %186, float* %retval.i, align 4, !dbg !21670
  br label %quantize_and_encode_band_cost_template.exit, !dbg !21670

if.end196.i:                                      ; preds = %if.end187.i
  %187 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21671
  %tobool197.i = icmp ne %struct.PutBitContext* %187, null, !dbg !21671
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !21672

if.then198.i:                                     ; preds = %if.end196.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21673
  %189 = load i32, i32* %curidx.i, align 4, !dbg !21674
  %idxprom199.i = sext i32 %189 to i64, !dbg !21675
  %190 = load i32, i32* %cb.addr.i, align 4, !dbg !21676
  %sub200.i = sub nsw i32 %190, 1, !dbg !21677
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !21675
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !21675
  %191 = load i8*, i8** %arrayidx202.i, align 8, !dbg !21675
  %arrayidx203.i = getelementptr inbounds i8, i8* %191, i64 %idxprom199.i, !dbg !21675
  %192 = load i8, i8* %arrayidx203.i, align 1, !dbg !21675
  %conv204.i = zext i8 %192 to i32, !dbg !21675
  %193 = load i32, i32* %curidx.i, align 4, !dbg !21678
  %idxprom205.i = sext i32 %193 to i64, !dbg !21679
  %194 = load i32, i32* %cb.addr.i, align 4, !dbg !21680
  %sub206.i = sub nsw i32 %194, 1, !dbg !21681
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !21679
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !21679
  %195 = load i16*, i16** %arrayidx208.i, align 8, !dbg !21679
  %arrayidx209.i = getelementptr inbounds i16, i16* %195, i64 %idxprom205.i, !dbg !21679
  %196 = load i16, i16* %arrayidx209.i, align 2, !dbg !21679
  %conv210.i = zext i16 %196 to i32, !dbg !21679
  call void @put_bits(%struct.PutBitContext* %188, i32 %conv204.i, i32 %conv210.i) #9, !dbg !21682
  %197 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !21683
  %tobool211.i = icmp ne i32 %197, 0, !dbg !21683
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !21684

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !21685
  br label %for.cond213.i, !dbg !21686

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %198 = load i32, i32* %j.i, align 4, !dbg !21687
  %199 = load i32, i32* %dim.i, align 4, !dbg !21688
  %cmp214.i = icmp slt i32 %198, %199, !dbg !21689
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !21690

for.body216.i:                                    ; preds = %for.cond213.i
  %200 = load i32, i32* %curidx.i, align 4, !dbg !21691
  %201 = load i32, i32* %dim.i, align 4, !dbg !21692
  %mul217.i = mul nsw i32 %200, %201, !dbg !21693
  %202 = load i32, i32* %j.i, align 4, !dbg !21694
  %add218.i = add nsw i32 %mul217.i, %202, !dbg !21695
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !21696
  %203 = load i32, i32* %cb.addr.i, align 4, !dbg !21697
  %sub220.i = sub nsw i32 %203, 1, !dbg !21698
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !21696
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !21696
  %204 = load float*, float** %arrayidx222.i, align 8, !dbg !21696
  %arrayidx223.i = getelementptr inbounds float, float* %204, i64 %idxprom219.i, !dbg !21696
  %205 = load float, float* %arrayidx223.i, align 4, !dbg !21696
  %cmp224.i = fcmp une float %205, 0.000000e+00, !dbg !21699
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !21700

if.then226.i:                                     ; preds = %for.body216.i
  %206 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21701
  %207 = load i32, i32* %i.i, align 4, !dbg !21702
  %208 = load i32, i32* %j.i, align 4, !dbg !21703
  %add227.i = add nsw i32 %207, %208, !dbg !21704
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !21705
  %209 = load float*, float** %in.addr.i, align 8, !dbg !21705
  %arrayidx229.i = getelementptr inbounds float, float* %209, i64 %idxprom228.i, !dbg !21705
  %210 = load float, float* %arrayidx229.i, align 4, !dbg !21705
  %cmp230.i = fcmp olt float %210, 0.000000e+00, !dbg !21706
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !21706
  call void @put_bits(%struct.PutBitContext* %206, i32 1, i32 %conv231.i) #9, !dbg !21707
  br label %if.end232.i, !dbg !21707

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %211 = load i32, i32* %j.i, align 4, !dbg !21708
  %inc234.i = add nsw i32 %211, 1, !dbg !21708
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !21708
  br label %for.cond213.i, !dbg !21709, !llvm.loop !17338

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !21710

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %212 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !21711
  %tobool237.i = icmp ne i32 %212, 0, !dbg !21711
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !21712

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !21713
  br label %for.cond239.i, !dbg !21714

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %213 = load i32, i32* %j.i, align 4, !dbg !21715
  %cmp240.i = icmp slt i32 %213, 2, !dbg !21716
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !21717

for.body242.i:                                    ; preds = %for.cond239.i
  %214 = load i32, i32* %curidx.i, align 4, !dbg !21718
  %mul243.i = mul nsw i32 %214, 2, !dbg !21719
  %215 = load i32, i32* %j.i, align 4, !dbg !21720
  %add244.i = add nsw i32 %mul243.i, %215, !dbg !21721
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !21722
  %216 = load i32, i32* %cb.addr.i, align 4, !dbg !21723
  %sub246.i = sub nsw i32 %216, 1, !dbg !21724
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !21722
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !21722
  %217 = load float*, float** %arrayidx248.i, align 8, !dbg !21722
  %arrayidx249.i = getelementptr inbounds float, float* %217, i64 %idxprom245.i, !dbg !21722
  %218 = load float, float* %arrayidx249.i, align 4, !dbg !21722
  %cmp250.i = fcmp oeq float %218, 6.400000e+01, !dbg !21725
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !21726

if.then252.i:                                     ; preds = %for.body242.i
  %219 = load i32, i32* %i.i, align 4, !dbg !21727
  %220 = load i32, i32* %j.i, align 4, !dbg !21728
  %add253.i = add nsw i32 %219, %220, !dbg !21729
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !21730
  %221 = load float*, float** %in.addr.i, align 8, !dbg !21730
  %arrayidx255.i = getelementptr inbounds float, float* %221, i64 %idxprom254.i, !dbg !21730
  %222 = load float, float* %arrayidx255.i, align 4, !dbg !21730
  %call256.i = call float @fabsf(float %222) #3, !dbg !21731
  %223 = load float, float* %Q.i, align 4, !dbg !21732
  %224 = load float, float* %ROUNDING.addr.i, align 4, !dbg !21733
  %call257.i = call i32 @quant(float %call256.i, float %223, float %224) #9, !dbg !21734
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !21735
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !21735
  %225 = load i32, i32* %a.addr.i282.i, align 4, !dbg !21736
  %226 = load i32, i32* %p.addr.i283.i, align 4, !dbg !21737
  %shl.i284.i = shl i32 1, %226, !dbg !21738
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !21739
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !21740
  %and.i287.i = and i32 %225, %neg.i286.i, !dbg !21741
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !21741
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !21742

if.then.i294.i:                                   ; preds = %if.then252.i
  %227 = load i32, i32* %a.addr.i282.i, align 4, !dbg !21743
  %neg1.i289.i = xor i32 %227, -1, !dbg !21744
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !21745
  %228 = load i32, i32* %p.addr.i283.i, align 4, !dbg !21746
  %shl2.i291.i = shl i32 1, %228, !dbg !21747
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !21748
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !21749
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !21750
  br label %av_clip_uintp2_c.exit296.i, !dbg !21750

if.else.i295.i:                                   ; preds = %if.then252.i
  %229 = load i32, i32* %a.addr.i282.i, align 4, !dbg !21751
  store i32 %229, i32* %retval.i281.i, align 4, !dbg !21752
  br label %av_clip_uintp2_c.exit296.i, !dbg !21752

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %230 = load i32, i32* %retval.i281.i, align 4, !dbg !21753
  store i32 %230, i32* %coef.i, align 4, !dbg !21324
  %231 = load i32, i32* %coef.i, align 4, !dbg !21754
  %or259.i = or i32 %231, 1, !dbg !21755
  %232 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #9, !dbg !21756
  %sub260.i = sub nsw i32 31, %232, !dbg !21757
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !21325
  %233 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21758
  %234 = load i32, i32* %len.i, align 4, !dbg !21759
  %sub261.i = sub nsw i32 %234, 4, !dbg !21760
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !21761
  %235 = load i32, i32* %len.i, align 4, !dbg !21762
  %sub263.i = sub nsw i32 %235, 4, !dbg !21763
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !21764
  %shl.i = shl i32 1, %add264.i, !dbg !21765
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !21766
  call void @put_bits(%struct.PutBitContext* %233, i32 %add262.i, i32 %sub265.i) #9, !dbg !21767
  %236 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !21768
  %237 = load i32, i32* %len.i, align 4, !dbg !21769
  %238 = load i32, i32* %coef.i, align 4, !dbg !21770
  call void @put_sbits(%struct.PutBitContext* %236, i32 %237, i32 %238) #9, !dbg !21771
  br label %if.end266.i, !dbg !21772

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %239 = load i32, i32* %j.i, align 4, !dbg !21773
  %inc268.i = add nsw i32 %239, 1, !dbg !21773
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !21773
  br label %for.cond239.i, !dbg !21774, !llvm.loop !17409

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !21775

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !21776

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %240 = load i32, i32* %dim.i, align 4, !dbg !21777
  %241 = load i32, i32* %i.i, align 4, !dbg !21778
  %add273.i = add nsw i32 %241, %240, !dbg !21778
  store i32 %add273.i, i32* %i.i, align 4, !dbg !21778
  br label %for.cond59.i, !dbg !21779, !llvm.loop !17417

for.end274.i:                                     ; preds = %for.cond59.i
  %242 = load i32*, i32** %bits.addr.i, align 8, !dbg !21780
  %tobool275.i = icmp ne i32* %242, null, !dbg !21780
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !21781

if.then276.i:                                     ; preds = %for.end274.i
  %243 = load i32, i32* %resbits.i, align 4, !dbg !21782
  %244 = load i32*, i32** %bits.addr.i, align 8, !dbg !21783
  store i32 %243, i32* %244, align 4, !dbg !21784
  br label %if.end277.i, !dbg !21785

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %245 = load float*, float** %energy.addr.i, align 8, !dbg !21786
  %tobool278.i = icmp ne float* %245, null, !dbg !21786
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !21787

if.then279.i:                                     ; preds = %if.end277.i
  %246 = load float, float* %qenergy.i, align 4, !dbg !21788
  %247 = load float*, float** %energy.addr.i, align 8, !dbg !21789
  store float %246, float* %247, align 4, !dbg !21790
  br label %if.end280.i, !dbg !21791

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %248 = load float, float* %cost.i, align 4, !dbg !21792
  store float %248, float* %retval.i, align 4, !dbg !21793
  br label %quantize_and_encode_band_cost_template.exit, !dbg !21793

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %249 = load float, float* %retval.i, align 4, !dbg !21794
  ret float %249, !dbg !21795
}

; Function Attrs: nounwind readnone
declare float @roundf(float) #4

; Function Attrs: nounwind readnone
declare float @ceilf(float) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_init_nextband_map(%struct.SingleChannelElement* %sce, i8* %nextband) #1 !dbg !21796 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %nextband.addr = alloca i8*, align 8
  %prevband = alloca i8, align 1
  %w = alloca i32, align 4
  %g = alloca i32, align 4
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !21801, metadata !2772), !dbg !21802
  store i8* %nextband, i8** %nextband.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nextband.addr, metadata !21803, metadata !2772), !dbg !21804
  call void @llvm.dbg.declare(metadata i8* %prevband, metadata !21805, metadata !2772), !dbg !21806
  store i8 0, i8* %prevband, align 1, !dbg !21806
  call void @llvm.dbg.declare(metadata i32* %w, metadata !21807, metadata !2772), !dbg !21808
  call void @llvm.dbg.declare(metadata i32* %g, metadata !21809, metadata !2772), !dbg !21810
  store i32 0, i32* %g, align 4, !dbg !21811
  br label %for.cond, !dbg !21813

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %g, align 4, !dbg !21814
  %cmp = icmp slt i32 %0, 128, !dbg !21817
  br i1 %cmp, label %for.body, label %for.end, !dbg !21818

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %g, align 4, !dbg !21819
  %conv = trunc i32 %1 to i8, !dbg !21819
  %2 = load i32, i32* %g, align 4, !dbg !21820
  %idxprom = sext i32 %2 to i64, !dbg !21821
  %3 = load i8*, i8** %nextband.addr, align 8, !dbg !21821
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !21821
  store i8 %conv, i8* %arrayidx, align 1, !dbg !21822
  br label %for.inc, !dbg !21821

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %g, align 4, !dbg !21823
  %inc = add nsw i32 %4, 1, !dbg !21823
  store i32 %inc, i32* %g, align 4, !dbg !21823
  br label %for.cond, !dbg !21825, !llvm.loop !21826

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %w, align 4, !dbg !21828
  br label %for.cond1, !dbg !21830

for.cond1:                                        ; preds = %for.inc26, %for.end
  %5 = load i32, i32* %w, align 4, !dbg !21831
  %6 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21834
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %6, i32 0, i32 0, !dbg !21835
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !21836
  %7 = load i32, i32* %num_windows, align 4, !dbg !21836
  %cmp2 = icmp slt i32 %5, %7, !dbg !21837
  br i1 %cmp2, label %for.body4, label %for.end32, !dbg !21838

for.body4:                                        ; preds = %for.cond1
  store i32 0, i32* %g, align 4, !dbg !21839
  br label %for.cond5, !dbg !21842

for.cond5:                                        ; preds = %for.inc23, %for.body4
  %8 = load i32, i32* %g, align 4, !dbg !21843
  %9 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21846
  %ics6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %9, i32 0, i32 0, !dbg !21847
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics6, i32 0, i32 8, !dbg !21848
  %10 = load i32, i32* %num_swb, align 32, !dbg !21848
  %cmp7 = icmp slt i32 %8, %10, !dbg !21849
  br i1 %cmp7, label %for.body9, label %for.end25, !dbg !21850

for.body9:                                        ; preds = %for.cond5
  %11 = load i32, i32* %w, align 4, !dbg !21851
  %mul = mul nsw i32 %11, 16, !dbg !21854
  %12 = load i32, i32* %g, align 4, !dbg !21855
  %add = add nsw i32 %mul, %12, !dbg !21856
  %idxprom10 = sext i32 %add to i64, !dbg !21857
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21857
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 8, !dbg !21858
  %arrayidx11 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom10, !dbg !21857
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !21857
  %tobool = icmp ne i8 %14, 0, !dbg !21857
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !21859

land.lhs.true:                                    ; preds = %for.body9
  %15 = load i32, i32* %w, align 4, !dbg !21860
  %mul12 = mul nsw i32 %15, 16, !dbg !21862
  %16 = load i32, i32* %g, align 4, !dbg !21863
  %add13 = add nsw i32 %mul12, %16, !dbg !21864
  %idxprom14 = sext i32 %add13 to i64, !dbg !21865
  %17 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21865
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %17, i32 0, i32 3, !dbg !21866
  %arrayidx15 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom14, !dbg !21865
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !21865
  %cmp16 = icmp ult i32 %18, 12, !dbg !21867
  br i1 %cmp16, label %if.then, label %if.end, !dbg !21868

if.then:                                          ; preds = %land.lhs.true
  %19 = load i32, i32* %w, align 4, !dbg !21869
  %mul18 = mul nsw i32 %19, 16, !dbg !21870
  %20 = load i32, i32* %g, align 4, !dbg !21871
  %add19 = add nsw i32 %mul18, %20, !dbg !21872
  %conv20 = trunc i32 %add19 to i8, !dbg !21869
  %21 = load i8, i8* %prevband, align 1, !dbg !21873
  %idxprom21 = zext i8 %21 to i64, !dbg !21874
  %22 = load i8*, i8** %nextband.addr, align 8, !dbg !21874
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %idxprom21, !dbg !21874
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !21875
  store i8 %conv20, i8* %prevband, align 1, !dbg !21876
  br label %if.end, !dbg !21877

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body9
  br label %for.inc23, !dbg !21878

for.inc23:                                        ; preds = %if.end
  %23 = load i32, i32* %g, align 4, !dbg !21879
  %inc24 = add nsw i32 %23, 1, !dbg !21879
  store i32 %inc24, i32* %g, align 4, !dbg !21879
  br label %for.cond5, !dbg !21881, !llvm.loop !21882

for.end25:                                        ; preds = %for.cond5
  br label %for.inc26, !dbg !21884

for.inc26:                                        ; preds = %for.end25
  %24 = load i32, i32* %w, align 4, !dbg !21885
  %idxprom27 = sext i32 %24 to i64, !dbg !21887
  %25 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21887
  %ics28 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %25, i32 0, i32 0, !dbg !21888
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics28, i32 0, i32 4, !dbg !21889
  %arrayidx29 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom27, !dbg !21887
  %26 = load i8, i8* %arrayidx29, align 1, !dbg !21887
  %conv30 = zext i8 %26 to i32, !dbg !21887
  %27 = load i32, i32* %w, align 4, !dbg !21890
  %add31 = add nsw i32 %27, %conv30, !dbg !21890
  store i32 %add31, i32* %w, align 4, !dbg !21890
  br label %for.cond1, !dbg !21891, !llvm.loop !21892

for.end32:                                        ; preds = %for.cond1
  %28 = load i8, i8* %prevband, align 1, !dbg !21894
  %29 = load i8, i8* %prevband, align 1, !dbg !21895
  %idxprom33 = zext i8 %29 to i64, !dbg !21896
  %30 = load i8*, i8** %nextband.addr, align 8, !dbg !21896
  %arrayidx34 = getelementptr inbounds i8, i8* %30, i64 %idxprom33, !dbg !21896
  store i8 %28, i8* %arrayidx34, align 1, !dbg !21897
  ret void, !dbg !21898
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_sfdelta_can_remove_band(%struct.SingleChannelElement* %sce, i8* %nextband, i32 %prev_sf, i32 %band) #1 !dbg !21899 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %nextband.addr = alloca i8*, align 8
  %prev_sf.addr = alloca i32, align 4
  %band.addr = alloca i32, align 4
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !21902, metadata !2772), !dbg !21903
  store i8* %nextband, i8** %nextband.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nextband.addr, metadata !21904, metadata !2772), !dbg !21905
  store i32 %prev_sf, i32* %prev_sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prev_sf.addr, metadata !21906, metadata !2772), !dbg !21907
  store i32 %band, i32* %band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr, metadata !21908, metadata !2772), !dbg !21909
  %0 = load i32, i32* %prev_sf.addr, align 4, !dbg !21910
  %cmp = icmp sge i32 %0, 0, !dbg !21911
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !21912

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %band.addr, align 4, !dbg !21913
  %idxprom = sext i32 %1 to i64, !dbg !21915
  %2 = load i8*, i8** %nextband.addr, align 8, !dbg !21915
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !21915
  %3 = load i8, i8* %arrayidx, align 1, !dbg !21915
  %idxprom1 = zext i8 %3 to i64, !dbg !21916
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21916
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 7, !dbg !21917
  %arrayidx2 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom1, !dbg !21916
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !21916
  %6 = load i32, i32* %prev_sf.addr, align 4, !dbg !21918
  %sub = sub nsw i32 %6, 60, !dbg !21919
  %cmp3 = icmp sge i32 %5, %sub, !dbg !21920
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !21921

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %band.addr, align 4, !dbg !21922
  %idxprom4 = sext i32 %7 to i64, !dbg !21923
  %8 = load i8*, i8** %nextband.addr, align 8, !dbg !21923
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !21923
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !21923
  %idxprom6 = zext i8 %9 to i64, !dbg !21924
  %10 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21924
  %sf_idx7 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %10, i32 0, i32 7, !dbg !21925
  %arrayidx8 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx7, i64 0, i64 %idxprom6, !dbg !21924
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !21924
  %12 = load i32, i32* %prev_sf.addr, align 4, !dbg !21926
  %add = add nsw i32 %12, 60, !dbg !21927
  %cmp9 = icmp sle i32 %11, %add, !dbg !21928
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp9, %land.rhs ]
  %land.ext = zext i1 %13 to i32, !dbg !21929
  ret i32 %land.ext, !dbg !21931
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_sfdelta_can_replace(%struct.SingleChannelElement* %sce, i8* %nextband, i32 %prev_sf, i32 %new_sf, i32 %band) #1 !dbg !21932 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %nextband.addr = alloca i8*, align 8
  %prev_sf.addr = alloca i32, align 4
  %new_sf.addr = alloca i32, align 4
  %band.addr = alloca i32, align 4
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !21935, metadata !2772), !dbg !21936
  store i8* %nextband, i8** %nextband.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nextband.addr, metadata !21937, metadata !2772), !dbg !21938
  store i32 %prev_sf, i32* %prev_sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prev_sf.addr, metadata !21939, metadata !2772), !dbg !21940
  store i32 %new_sf, i32* %new_sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_sf.addr, metadata !21941, metadata !2772), !dbg !21942
  store i32 %band, i32* %band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr, metadata !21943, metadata !2772), !dbg !21944
  %0 = load i32, i32* %new_sf.addr, align 4, !dbg !21945
  %1 = load i32, i32* %prev_sf.addr, align 4, !dbg !21946
  %sub = sub nsw i32 %1, 60, !dbg !21947
  %cmp = icmp sge i32 %0, %sub, !dbg !21948
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !21949

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %new_sf.addr, align 4, !dbg !21950
  %3 = load i32, i32* %prev_sf.addr, align 4, !dbg !21952
  %add = add nsw i32 %3, 60, !dbg !21953
  %cmp1 = icmp sle i32 %2, %add, !dbg !21954
  br i1 %cmp1, label %land.lhs.true2, label %land.end, !dbg !21955

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %band.addr, align 4, !dbg !21956
  %idxprom = sext i32 %4 to i64, !dbg !21957
  %5 = load i8*, i8** %nextband.addr, align 8, !dbg !21957
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !21957
  %6 = load i8, i8* %arrayidx, align 1, !dbg !21957
  %idxprom3 = zext i8 %6 to i64, !dbg !21958
  %7 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21958
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %7, i32 0, i32 7, !dbg !21959
  %arrayidx4 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom3, !dbg !21958
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !21958
  %9 = load i32, i32* %new_sf.addr, align 4, !dbg !21960
  %sub5 = sub nsw i32 %9, 60, !dbg !21961
  %cmp6 = icmp sge i32 %8, %sub5, !dbg !21962
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !21963

land.rhs:                                         ; preds = %land.lhs.true2
  %10 = load i32, i32* %band.addr, align 4, !dbg !21964
  %idxprom7 = sext i32 %10 to i64, !dbg !21965
  %11 = load i8*, i8** %nextband.addr, align 8, !dbg !21965
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %idxprom7, !dbg !21965
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !21965
  %idxprom9 = zext i8 %12 to i64, !dbg !21966
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !21966
  %sf_idx10 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 7, !dbg !21967
  %arrayidx11 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx10, i64 0, i64 %idxprom9, !dbg !21966
  %14 = load i32, i32* %arrayidx11, align 4, !dbg !21966
  %15 = load i32, i32* %new_sf.addr, align 4, !dbg !21968
  %add12 = add nsw i32 %15, 60, !dbg !21969
  %cmp13 = icmp sle i32 %14, %add12, !dbg !21970
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true2, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true2 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp13, %land.rhs ]
  %land.ext = zext i1 %16 to i32, !dbg !21971
  ret i32 %land.ext, !dbg !21973
}

; Function Attrs: nounwind
declare float @powf(float, float) #6

declare void @ff_quantize_band_cost_cache_init(%struct.AACEncContext*) #2

; Function Attrs: inlinehint nounwind readnone uwtable
define internal float @ff_sqrf(float %a) #8 !dbg !21974 {
entry:
  %a.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !21976, metadata !2772), !dbg !21977
  %0 = load float, float* %a.addr, align 4, !dbg !21978
  %1 = load float, float* %a.addr, align 4, !dbg !21979
  %mul = fmul float %0, %1, !dbg !21980
  ret float %mul, !dbg !21981
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @find_form_factor(i32 %group_len, i32 %swb_size, float %thresh, float* %scaled, float %nzslope) #1 !dbg !21982 {
entry:
  %x.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr.i, metadata !21985, metadata !2772), !dbg !21990
  %y.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr.i, metadata !22001, metadata !2772), !dbg !22002
  %retval = alloca float, align 4
  %group_len.addr = alloca i32, align 4
  %swb_size.addr = alloca i32, align 4
  %thresh.addr = alloca float, align 4
  %scaled.addr = alloca float*, align 8
  %nzslope.addr = alloca float, align 4
  %iswb_size = alloca float, align 4
  %iswb_sizem1 = alloca float, align 4
  %ethresh = alloca float, align 4
  %form = alloca float, align 4
  %weight = alloca float, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  %e = alloca float, align 4
  %e2 = alloca float, align 4
  %var = alloca float, align 4
  %maxval = alloca float, align 4
  %nzl = alloca float, align 4
  %s = alloca float, align 4
  %frm = alloca float, align 4
  %d = alloca float, align 4
  store i32 %group_len, i32* %group_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_len.addr, metadata !22003, metadata !2772), !dbg !22004
  store i32 %swb_size, i32* %swb_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %swb_size.addr, metadata !22005, metadata !2772), !dbg !22006
  store float %thresh, float* %thresh.addr, align 4
  call void @llvm.dbg.declare(metadata float* %thresh.addr, metadata !22007, metadata !2772), !dbg !22008
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !22009, metadata !2772), !dbg !22010
  store float %nzslope, float* %nzslope.addr, align 4
  call void @llvm.dbg.declare(metadata float* %nzslope.addr, metadata !22011, metadata !2772), !dbg !22012
  call void @llvm.dbg.declare(metadata float* %iswb_size, metadata !22013, metadata !2772), !dbg !22014
  %0 = load i32, i32* %swb_size.addr, align 4, !dbg !22015
  %conv = sitofp i32 %0 to float, !dbg !22015
  %div = fdiv float 1.000000e+00, %conv, !dbg !22016
  store float %div, float* %iswb_size, align 4, !dbg !22014
  call void @llvm.dbg.declare(metadata float* %iswb_sizem1, metadata !22017, metadata !2772), !dbg !22018
  %1 = load i32, i32* %swb_size.addr, align 4, !dbg !22019
  %sub = sub nsw i32 %1, 1, !dbg !22020
  %conv1 = sitofp i32 %sub to float, !dbg !22021
  %div2 = fdiv float 1.000000e+00, %conv1, !dbg !22022
  store float %div2, float* %iswb_sizem1, align 4, !dbg !22018
  call void @llvm.dbg.declare(metadata float* %ethresh, metadata !22023, metadata !2772), !dbg !22024
  %2 = load float, float* %thresh.addr, align 4, !dbg !22025
  store float %2, float* %ethresh, align 4, !dbg !22024
  call void @llvm.dbg.declare(metadata float* %form, metadata !22026, metadata !2772), !dbg !22027
  store float 0.000000e+00, float* %form, align 4, !dbg !22027
  call void @llvm.dbg.declare(metadata float* %weight, metadata !22028, metadata !2772), !dbg !22029
  store float 0.000000e+00, float* %weight, align 4, !dbg !22029
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !22030, metadata !2772), !dbg !22031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22032, metadata !2772), !dbg !22033
  store i32 0, i32* %w2, align 4, !dbg !22034
  br label %for.cond, !dbg !22035

for.cond:                                         ; preds = %for.inc73, %entry
  %3 = load i32, i32* %w2, align 4, !dbg !22036
  %4 = load i32, i32* %group_len.addr, align 4, !dbg !22038
  %cmp = icmp slt i32 %3, %4, !dbg !22039
  br i1 %cmp, label %for.body, label %for.end75, !dbg !22040

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %e, metadata !22041, metadata !2772), !dbg !22042
  store float 0.000000e+00, float* %e, align 4, !dbg !22042
  call void @llvm.dbg.declare(metadata float* %e2, metadata !22043, metadata !2772), !dbg !22044
  store float 0.000000e+00, float* %e2, align 4, !dbg !22044
  call void @llvm.dbg.declare(metadata float* %var, metadata !22045, metadata !2772), !dbg !22046
  store float 0.000000e+00, float* %var, align 4, !dbg !22046
  call void @llvm.dbg.declare(metadata float* %maxval, metadata !22047, metadata !2772), !dbg !22048
  store float 0.000000e+00, float* %maxval, align 4, !dbg !22048
  call void @llvm.dbg.declare(metadata float* %nzl, metadata !22049, metadata !2772), !dbg !22050
  store float 0.000000e+00, float* %nzl, align 4, !dbg !22050
  store i32 0, i32* %i, align 4, !dbg !22051
  br label %for.cond4, !dbg !22052

for.cond4:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !22053
  %6 = load i32, i32* %swb_size.addr, align 4, !dbg !22055
  %cmp5 = icmp slt i32 %5, %6, !dbg !22056
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !22057

for.body7:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata float* %s, metadata !22058, metadata !2772), !dbg !22059
  %7 = load i32, i32* %w2, align 4, !dbg !22060
  %mul = mul nsw i32 %7, 128, !dbg !22061
  %8 = load i32, i32* %i, align 4, !dbg !22062
  %add = add nsw i32 %mul, %8, !dbg !22063
  %idxprom = sext i32 %add to i64, !dbg !22064
  %9 = load float*, float** %scaled.addr, align 8, !dbg !22064
  %arrayidx = getelementptr inbounds float, float* %9, i64 %idxprom, !dbg !22064
  %10 = load float, float* %arrayidx, align 4, !dbg !22064
  %call = call float @fabsf(float %10) #3, !dbg !22065
  store float %call, float* %s, align 4, !dbg !22059
  %11 = load float, float* %maxval, align 4, !dbg !22066
  %12 = load float, float* %s, align 4, !dbg !22067
  %cmp8 = fcmp ogt float %11, %12, !dbg !22068
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !22069

cond.true:                                        ; preds = %for.body7
  %13 = load float, float* %maxval, align 4, !dbg !22070
  br label %cond.end, !dbg !22072

cond.false:                                       ; preds = %for.body7
  %14 = load float, float* %s, align 4, !dbg !22073
  br label %cond.end, !dbg !22075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %13, %cond.true ], [ %14, %cond.false ], !dbg !22076
  store float %cond, float* %maxval, align 4, !dbg !22078
  %15 = load float, float* %s, align 4, !dbg !22079
  %16 = load float, float* %e, align 4, !dbg !22080
  %add10 = fadd float %16, %15, !dbg !22080
  store float %add10, float* %e, align 4, !dbg !22080
  %17 = load float, float* %s, align 4, !dbg !22081
  %18 = load float, float* %s, align 4, !dbg !22082
  %mul11 = fmul float %18, %17, !dbg !22082
  store float %mul11, float* %s, align 4, !dbg !22082
  %19 = load float, float* %e2, align 4, !dbg !22083
  %add12 = fadd float %19, %mul11, !dbg !22083
  store float %add12, float* %e2, align 4, !dbg !22083
  %20 = load float, float* %s, align 4, !dbg !22084
  %21 = load float, float* %ethresh, align 4, !dbg !22085
  %cmp13 = fcmp oge float %20, %21, !dbg !22086
  br i1 %cmp13, label %if.then, label %if.else, !dbg !22087

if.then:                                          ; preds = %cond.end
  %22 = load float, float* %nzl, align 4, !dbg !22088
  %add15 = fadd float %22, 1.000000e+00, !dbg !22088
  store float %add15, float* %nzl, align 4, !dbg !22088
  br label %if.end27, !dbg !22090

if.else:                                          ; preds = %cond.end
  %23 = load float, float* %nzslope.addr, align 4, !dbg !22091
  %cmp16 = fcmp oeq float %23, 2.000000e+00, !dbg !22092
  br i1 %cmp16, label %if.then18, label %if.else23, !dbg !22093

if.then18:                                        ; preds = %if.else
  %24 = load float, float* %s, align 4, !dbg !22094
  %25 = load float, float* %ethresh, align 4, !dbg !22095
  %div19 = fdiv float %24, %25, !dbg !22096
  %26 = load float, float* %s, align 4, !dbg !22097
  %27 = load float, float* %ethresh, align 4, !dbg !22098
  %div20 = fdiv float %26, %27, !dbg !22099
  %mul21 = fmul float %div19, %div20, !dbg !22100
  %28 = load float, float* %nzl, align 4, !dbg !22101
  %add22 = fadd float %28, %mul21, !dbg !22101
  store float %add22, float* %nzl, align 4, !dbg !22101
  br label %if.end, !dbg !22102

if.else23:                                        ; preds = %if.else
  %29 = load float, float* %s, align 4, !dbg !22103
  %30 = load float, float* %ethresh, align 4, !dbg !22104
  %div24 = fdiv float %29, %30, !dbg !22105
  %31 = load float, float* %nzslope.addr, align 4, !dbg !22106
  store float %div24, float* %x.addr.i, align 4, !dbg !22107
  store float %31, float* %y.addr.i, align 4, !dbg !22107
  %32 = load float, float* %x.addr.i, align 4, !dbg !22108
  %call.i = call float @logf(float %32) #9, !dbg !22109
  %33 = load float, float* %y.addr.i, align 4, !dbg !22110
  %mul.i = fmul float %call.i, %33, !dbg !22111
  %call1.i = call float @expf(float %mul.i) #9, !dbg !22112
  %34 = load float, float* %nzl, align 4, !dbg !22114
  %add26 = fadd float %34, %call1.i, !dbg !22114
  store float %add26, float* %nzl, align 4, !dbg !22114
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then18
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !22115

for.inc:                                          ; preds = %if.end27
  %35 = load i32, i32* %i, align 4, !dbg !22116
  %inc = add nsw i32 %35, 1, !dbg !22116
  store i32 %inc, i32* %i, align 4, !dbg !22116
  br label %for.cond4, !dbg !22118, !llvm.loop !22119

for.end:                                          ; preds = %for.cond4
  %36 = load float, float* %e2, align 4, !dbg !22121
  %37 = load float, float* %thresh.addr, align 4, !dbg !22123
  %cmp28 = fcmp ogt float %36, %37, !dbg !22124
  br i1 %cmp28, label %if.then30, label %if.end72, !dbg !22125

if.then30:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %frm, metadata !22126, metadata !2772), !dbg !22128
  %38 = load float, float* %iswb_size, align 4, !dbg !22129
  %39 = load float, float* %e, align 4, !dbg !22130
  %mul31 = fmul float %39, %38, !dbg !22130
  store float %mul31, float* %e, align 4, !dbg !22130
  store i32 0, i32* %i, align 4, !dbg !22131
  br label %for.cond32, !dbg !22133

for.cond32:                                       ; preds = %for.inc44, %if.then30
  %40 = load i32, i32* %i, align 4, !dbg !22134
  %41 = load i32, i32* %swb_size.addr, align 4, !dbg !22137
  %cmp33 = icmp slt i32 %40, %41, !dbg !22138
  br i1 %cmp33, label %for.body35, label %for.end46, !dbg !22139

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata float* %d, metadata !22140, metadata !2772), !dbg !22142
  %42 = load i32, i32* %w2, align 4, !dbg !22143
  %mul36 = mul nsw i32 %42, 128, !dbg !22144
  %43 = load i32, i32* %i, align 4, !dbg !22145
  %add37 = add nsw i32 %mul36, %43, !dbg !22146
  %idxprom38 = sext i32 %add37 to i64, !dbg !22147
  %44 = load float*, float** %scaled.addr, align 8, !dbg !22147
  %arrayidx39 = getelementptr inbounds float, float* %44, i64 %idxprom38, !dbg !22147
  %45 = load float, float* %arrayidx39, align 4, !dbg !22147
  %call40 = call float @fabsf(float %45) #3, !dbg !22148
  %46 = load float, float* %e, align 4, !dbg !22149
  %sub41 = fsub float %call40, %46, !dbg !22150
  store float %sub41, float* %d, align 4, !dbg !22142
  %47 = load float, float* %d, align 4, !dbg !22151
  %48 = load float, float* %d, align 4, !dbg !22152
  %mul42 = fmul float %47, %48, !dbg !22153
  %49 = load float, float* %var, align 4, !dbg !22154
  %add43 = fadd float %49, %mul42, !dbg !22154
  store float %add43, float* %var, align 4, !dbg !22154
  br label %for.inc44, !dbg !22155

for.inc44:                                        ; preds = %for.body35
  %50 = load i32, i32* %i, align 4, !dbg !22156
  %inc45 = add nsw i32 %50, 1, !dbg !22156
  store i32 %inc45, i32* %i, align 4, !dbg !22156
  br label %for.cond32, !dbg !22158, !llvm.loop !22159

for.end46:                                        ; preds = %for.cond32
  %51 = load float, float* %var, align 4, !dbg !22161
  %52 = load float, float* %iswb_sizem1, align 4, !dbg !22162
  %mul47 = fmul float %51, %52, !dbg !22163
  %call48 = call float @sqrtf(float %mul47) #9, !dbg !22164
  store float %call48, float* %var, align 4, !dbg !22165
  %53 = load float, float* %iswb_size, align 4, !dbg !22166
  %54 = load float, float* %e2, align 4, !dbg !22167
  %mul49 = fmul float %54, %53, !dbg !22167
  store float %mul49, float* %e2, align 4, !dbg !22167
  %55 = load float, float* %e, align 4, !dbg !22168
  %56 = load float, float* %e, align 4, !dbg !22169
  %57 = load float, float* %var, align 4, !dbg !22170
  %mul50 = fmul float 4.000000e+00, %57, !dbg !22171
  %add51 = fadd float %56, %mul50, !dbg !22172
  %58 = load float, float* %maxval, align 4, !dbg !22173
  %cmp52 = fcmp ogt float %add51, %58, !dbg !22174
  br i1 %cmp52, label %cond.true54, label %cond.false55, !dbg !22175

cond.true54:                                      ; preds = %for.end46
  %59 = load float, float* %maxval, align 4, !dbg !22176
  br label %cond.end58, !dbg !22178

cond.false55:                                     ; preds = %for.end46
  %60 = load float, float* %e, align 4, !dbg !22179
  %61 = load float, float* %var, align 4, !dbg !22181
  %mul56 = fmul float 4.000000e+00, %61, !dbg !22182
  %add57 = fadd float %60, %mul56, !dbg !22183
  br label %cond.end58, !dbg !22184

cond.end58:                                       ; preds = %cond.false55, %cond.true54
  %cond59 = phi float [ %59, %cond.true54 ], [ %add57, %cond.false55 ], !dbg !22185
  %div60 = fdiv float %55, %cond59, !dbg !22187
  store float %div60, float* %frm, align 4, !dbg !22188
  %62 = load float, float* %e2, align 4, !dbg !22189
  %63 = load float, float* %frm, align 4, !dbg !22190
  %call61 = call float @sqrtf(float %63) #9, !dbg !22191
  %mul62 = fmul float %62, %call61, !dbg !22192
  %64 = load float, float* %nzl, align 4, !dbg !22193
  %cmp63 = fcmp ogt float 5.000000e-01, %64, !dbg !22194
  br i1 %cmp63, label %cond.true65, label %cond.false66, !dbg !22195

cond.true65:                                      ; preds = %cond.end58
  br label %cond.end67, !dbg !22196

cond.false66:                                     ; preds = %cond.end58
  %65 = load float, float* %nzl, align 4, !dbg !22197
  br label %cond.end67, !dbg !22198

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi float [ 5.000000e-01, %cond.true65 ], [ %65, %cond.false66 ], !dbg !22199
  %div69 = fdiv float %mul62, %cond68, !dbg !22200
  %66 = load float, float* %form, align 4, !dbg !22201
  %add70 = fadd float %66, %div69, !dbg !22201
  store float %add70, float* %form, align 4, !dbg !22201
  %67 = load float, float* %e2, align 4, !dbg !22202
  %68 = load float, float* %weight, align 4, !dbg !22203
  %add71 = fadd float %68, %67, !dbg !22203
  store float %add71, float* %weight, align 4, !dbg !22203
  br label %if.end72, !dbg !22204

if.end72:                                         ; preds = %cond.end67, %for.end
  br label %for.inc73, !dbg !22205

for.inc73:                                        ; preds = %if.end72
  %69 = load i32, i32* %w2, align 4, !dbg !22206
  %inc74 = add nsw i32 %69, 1, !dbg !22206
  store i32 %inc74, i32* %w2, align 4, !dbg !22206
  br label %for.cond, !dbg !22208, !llvm.loop !22209

for.end75:                                        ; preds = %for.cond
  %70 = load float, float* %weight, align 4, !dbg !22211
  %cmp76 = fcmp ogt float %70, 0.000000e+00, !dbg !22213
  br i1 %cmp76, label %if.then78, label %if.else80, !dbg !22214

if.then78:                                        ; preds = %for.end75
  %71 = load float, float* %form, align 4, !dbg !22215
  %72 = load float, float* %weight, align 4, !dbg !22217
  %div79 = fdiv float %71, %72, !dbg !22218
  store float %div79, float* %retval, align 4, !dbg !22219
  br label %return, !dbg !22219

if.else80:                                        ; preds = %for.end75
  store float 1.000000e+00, float* %retval, align 4, !dbg !22220
  br label %return, !dbg !22220

return:                                           ; preds = %if.else80, %if.then78
  %73 = load float, float* %retval, align 4, !dbg !22222
  ret float %73, !dbg !22222
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_pns_bits(%struct.SingleChannelElement* %sce, i32 %w, i32 %g) #1 !dbg !22223 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %w.addr = alloca i32, align 4
  %g.addr = alloca i32, align 4
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !22226, metadata !2772), !dbg !22227
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !22228, metadata !2772), !dbg !22229
  store i32 %g, i32* %g.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !22230, metadata !2772), !dbg !22231
  %0 = load i32, i32* %g.addr, align 4, !dbg !22232
  %tobool = icmp ne i32 %0, 0, !dbg !22232
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !22233

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %w.addr, align 4, !dbg !22234
  %mul = mul nsw i32 %1, 16, !dbg !22236
  %2 = load i32, i32* %g.addr, align 4, !dbg !22237
  %add = add nsw i32 %mul, %2, !dbg !22238
  %sub = sub nsw i32 %add, 1, !dbg !22239
  %idxprom = sext i32 %sub to i64, !dbg !22240
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !22240
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 8, !dbg !22241
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom, !dbg !22240
  %4 = load i8, i8* %arrayidx, align 1, !dbg !22240
  %tobool1 = icmp ne i8 %4, 0, !dbg !22240
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !22242

lor.rhs:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %w.addr, align 4, !dbg !22243
  %mul2 = mul nsw i32 %5, 16, !dbg !22245
  %6 = load i32, i32* %g.addr, align 4, !dbg !22246
  %add3 = add nsw i32 %mul2, %6, !dbg !22247
  %sub4 = sub nsw i32 %add3, 1, !dbg !22248
  %idxprom5 = sext i32 %sub4 to i64, !dbg !22249
  %7 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !22249
  %can_pns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %7, i32 0, i32 9, !dbg !22250
  %arrayidx6 = getelementptr inbounds [128 x i8], [128 x i8]* %can_pns, i64 0, i64 %idxprom5, !dbg !22249
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !22249
  %tobool7 = icmp ne i8 %8, 0, !dbg !22251
  %lnot = xor i1 %tobool7, true, !dbg !22251
  br label %lor.end, !dbg !22252

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %9 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %lnot, %lor.rhs ]
  %cond = select i1 %9, i32 9, i32 5, !dbg !22253
  ret i32 %cond, !dbg !22255
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @quantize_band_cost_cached(%struct.AACEncContext* %s, i32 %w, i32 %g, float* %in, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy, i32 %rtz) #1 !dbg !22256 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %w.addr = alloca i32, align 4
  %g.addr = alloca i32, align 4
  %in.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  %rtz.addr = alloca i32, align 4
  %entry1 = alloca %struct.AACQuantizeBandCostCacheEntry*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !22260, metadata !2772), !dbg !22261
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !22262, metadata !2772), !dbg !22263
  store i32 %g, i32* %g.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !22264, metadata !2772), !dbg !22265
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !22266, metadata !2772), !dbg !22267
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !22268, metadata !2772), !dbg !22269
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !22270, metadata !2772), !dbg !22271
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !22272, metadata !2772), !dbg !22273
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !22274, metadata !2772), !dbg !22275
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !22276, metadata !2772), !dbg !22277
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !22278, metadata !2772), !dbg !22279
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !22280, metadata !2772), !dbg !22281
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !22282, metadata !2772), !dbg !22283
  store i32 %rtz, i32* %rtz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtz.addr, metadata !22284, metadata !2772), !dbg !22285
  call void @llvm.dbg.declare(metadata %struct.AACQuantizeBandCostCacheEntry** %entry1, metadata !22286, metadata !2772), !dbg !22288
  %0 = load i32, i32* %w.addr, align 4, !dbg !22289
  %mul = mul nsw i32 %0, 16, !dbg !22290
  %1 = load i32, i32* %g.addr, align 4, !dbg !22291
  %add = add nsw i32 %mul, %1, !dbg !22292
  %idxprom = sext i32 %add to i64, !dbg !22293
  %2 = load i32, i32* %scale_idx.addr, align 4, !dbg !22294
  %idxprom2 = sext i32 %2 to i64, !dbg !22293
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !22293
  %quantize_band_cost_cache = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 31, !dbg !22295
  %arrayidx = getelementptr inbounds [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]], [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]]* %quantize_band_cost_cache, i64 0, i64 %idxprom2, !dbg !22293
  %arrayidx3 = getelementptr inbounds [128 x %struct.AACQuantizeBandCostCacheEntry], [128 x %struct.AACQuantizeBandCostCacheEntry]* %arrayidx, i64 0, i64 %idxprom, !dbg !22293
  store %struct.AACQuantizeBandCostCacheEntry* %arrayidx3, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22296
  %4 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22297
  %generation = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %4, i32 0, i32 5, !dbg !22299
  %5 = load i16, i16* %generation, align 2, !dbg !22299
  %conv = zext i16 %5 to i32, !dbg !22297
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !22300
  %quantize_band_cost_cache_generation = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %6, i32 0, i32 30, !dbg !22301
  %7 = load i16, i16* %quantize_band_cost_cache_generation, align 32, !dbg !22301
  %conv4 = zext i16 %7 to i32, !dbg !22300
  %cmp = icmp ne i32 %conv, %conv4, !dbg !22302
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !22303

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22304
  %cb6 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %8, i32 0, i32 3, !dbg !22306
  %9 = load i8, i8* %cb6, align 4, !dbg !22306
  %conv7 = sext i8 %9 to i32, !dbg !22304
  %10 = load i32, i32* %cb.addr, align 4, !dbg !22307
  %cmp8 = icmp ne i32 %conv7, %10, !dbg !22308
  br i1 %cmp8, label %if.then, label %lor.lhs.false10, !dbg !22309

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %11 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22310
  %rtz11 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %11, i32 0, i32 4, !dbg !22312
  %12 = load i8, i8* %rtz11, align 1, !dbg !22312
  %conv12 = sext i8 %12 to i32, !dbg !22310
  %13 = load i32, i32* %rtz.addr, align 4, !dbg !22313
  %cmp13 = icmp ne i32 %conv12, %13, !dbg !22314
  br i1 %cmp13, label %if.then, label %if.end, !dbg !22315

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false, %entry
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !22316
  %15 = load float*, float** %in.addr, align 8, !dbg !22318
  %16 = load float*, float** %scaled.addr, align 8, !dbg !22319
  %17 = load i32, i32* %size.addr, align 4, !dbg !22320
  %18 = load i32, i32* %scale_idx.addr, align 4, !dbg !22321
  %19 = load i32, i32* %cb.addr, align 4, !dbg !22322
  %20 = load float, float* %lambda.addr, align 4, !dbg !22323
  %21 = load float, float* %uplim.addr, align 4, !dbg !22324
  %22 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22325
  %bits15 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %22, i32 0, i32 2, !dbg !22326
  %23 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22327
  %energy16 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %23, i32 0, i32 1, !dbg !22328
  %24 = load i32, i32* %rtz.addr, align 4, !dbg !22329
  %call = call float @quantize_band_cost(%struct.AACEncContext* %14, float* %15, float* %16, i32 %17, i32 %18, i32 %19, float %20, float %21, i32* %bits15, float* %energy16, i32 %24), !dbg !22330
  %25 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22331
  %rd = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %25, i32 0, i32 0, !dbg !22332
  store float %call, float* %rd, align 4, !dbg !22333
  %26 = load i32, i32* %cb.addr, align 4, !dbg !22334
  %conv17 = trunc i32 %26 to i8, !dbg !22334
  %27 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22335
  %cb18 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %27, i32 0, i32 3, !dbg !22336
  store i8 %conv17, i8* %cb18, align 4, !dbg !22337
  %28 = load i32, i32* %rtz.addr, align 4, !dbg !22338
  %conv19 = trunc i32 %28 to i8, !dbg !22338
  %29 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22339
  %rtz20 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %29, i32 0, i32 4, !dbg !22340
  store i8 %conv19, i8* %rtz20, align 1, !dbg !22341
  %30 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !22342
  %quantize_band_cost_cache_generation21 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %30, i32 0, i32 30, !dbg !22343
  %31 = load i16, i16* %quantize_band_cost_cache_generation21, align 32, !dbg !22343
  %32 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22344
  %generation22 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %32, i32 0, i32 5, !dbg !22345
  store i16 %31, i16* %generation22, align 2, !dbg !22346
  br label %if.end, !dbg !22347

if.end:                                           ; preds = %if.then, %lor.lhs.false10
  %33 = load i32*, i32** %bits.addr, align 8, !dbg !22348
  %tobool = icmp ne i32* %33, null, !dbg !22348
  br i1 %tobool, label %if.then23, label %if.end25, !dbg !22350

if.then23:                                        ; preds = %if.end
  %34 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22351
  %bits24 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %34, i32 0, i32 2, !dbg !22352
  %35 = load i32, i32* %bits24, align 4, !dbg !22352
  %36 = load i32*, i32** %bits.addr, align 8, !dbg !22353
  store i32 %35, i32* %36, align 4, !dbg !22354
  br label %if.end25, !dbg !22355

if.end25:                                         ; preds = %if.then23, %if.end
  %37 = load float*, float** %energy.addr, align 8, !dbg !22356
  %tobool26 = icmp ne float* %37, null, !dbg !22356
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !22358

if.then27:                                        ; preds = %if.end25
  %38 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22359
  %energy28 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %38, i32 0, i32 1, !dbg !22360
  %39 = load float, float* %energy28, align 4, !dbg !22360
  %40 = load float*, float** %energy.addr, align 8, !dbg !22361
  store float %39, float* %40, align 4, !dbg !22362
  br label %if.end29, !dbg !22363

if.end29:                                         ; preds = %if.then27, %if.end25
  %41 = load %struct.AACQuantizeBandCostCacheEntry*, %struct.AACQuantizeBandCostCacheEntry** %entry1, align 8, !dbg !22364
  %rd30 = getelementptr inbounds %struct.AACQuantizeBandCostCacheEntry, %struct.AACQuantizeBandCostCacheEntry* %41, i32 0, i32 0, !dbg !22365
  %42 = load float, float* %rd30, align 4, !dbg !22365
  ret float %42, !dbg !22366
}

; Function Attrs: nounwind
declare float @expf(float) #6

; Function Attrs: nounwind
declare float @logf(float) #6

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @quantize_band_cost_bits(%struct.AACEncContext* %s, float* %in, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy, i32 %rtz) #1 !dbg !22367 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %in.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  %rtz.addr = alloca i32, align 4
  %auxbits = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !22370, metadata !2772), !dbg !22371
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !22372, metadata !2772), !dbg !22373
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !22374, metadata !2772), !dbg !22375
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !22376, metadata !2772), !dbg !22377
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !22378, metadata !2772), !dbg !22379
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !22380, metadata !2772), !dbg !22381
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !22382, metadata !2772), !dbg !22383
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !22384, metadata !2772), !dbg !22385
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !22386, metadata !2772), !dbg !22387
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !22388, metadata !2772), !dbg !22389
  store i32 %rtz, i32* %rtz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtz.addr, metadata !22390, metadata !2772), !dbg !22391
  call void @llvm.dbg.declare(metadata i32* %auxbits, metadata !22392, metadata !2772), !dbg !22393
  %0 = load i32, i32* %cb.addr, align 4, !dbg !22394
  %idxprom = sext i32 %0 to i64, !dbg !22395
  %1 = load i32, i32* %rtz.addr, align 4, !dbg !22396
  %tobool = icmp ne i32 %1, 0, !dbg !22397
  %cond = select i1 %tobool, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_rtz_arr, i32 0, i32 0), float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_arr, i32 0, i32 0), !dbg !22397
  %arrayidx = getelementptr inbounds float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %cond, i64 %idxprom, !dbg !22395
  %2 = load float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %arrayidx, align 8, !dbg !22395
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !22398
  %4 = load float*, float** %in.addr, align 8, !dbg !22397
  %5 = load float*, float** %scaled.addr, align 8, !dbg !22397
  %6 = load i32, i32* %size.addr, align 4, !dbg !22399
  %7 = load i32, i32* %scale_idx.addr, align 4, !dbg !22400
  %8 = load i32, i32* %cb.addr, align 4, !dbg !22401
  %9 = load float, float* %uplim.addr, align 4, !dbg !22402
  %10 = load float*, float** %energy.addr, align 8, !dbg !22403
  %call = call float %2(%struct.AACEncContext* %3, %struct.PutBitContext* null, float* %4, float* null, float* %5, i32 %6, i32 %7, i32 %8, float 0.000000e+00, float %9, i32* %auxbits, float* %10), !dbg !22395
  %11 = load i32*, i32** %bits.addr, align 8, !dbg !22404
  %tobool1 = icmp ne i32* %11, null, !dbg !22404
  br i1 %tobool1, label %if.then, label %if.end, !dbg !22406

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %auxbits, align 4, !dbg !22407
  %13 = load i32*, i32** %bits.addr, align 8, !dbg !22409
  store i32 %12, i32* %13, align 4, !dbg !22410
  br label %if.end, !dbg !22411

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %auxbits, align 4, !dbg !22412
  ret i32 %14, !dbg !22413
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2758, !2759}
!llvm.ident = !{!2760}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !944, globals: !955)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aaccoder.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893, !897, !906, !913, !922, !927, !937}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFLPCType", file: !898, line: 43, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!899 = !{!900, !901, !902, !903, !904, !905}
!900 = !DIEnumerator(name: "FF_LPC_TYPE_DEFAULT", value: -1)
!901 = !DIEnumerator(name: "FF_LPC_TYPE_NONE", value: 0)
!902 = !DIEnumerator(name: "FF_LPC_TYPE_FIXED", value: 1)
!903 = !DIEnumerator(name: "FF_LPC_TYPE_LEVINSON", value: 2)
!904 = !DIEnumerator(name: "FF_LPC_TYPE_CHOLESKY", value: 3)
!905 = !DIEnumerator(name: "FF_LPC_TYPE_NB", value: 4)
!906 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !907, line: 75, size: 32, align: 32, elements: !908)
!907 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!908 = !{!909, !910, !911, !912}
!909 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!910 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!911 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!912 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !907, line: 82, size: 32, align: 32, elements: !914)
!914 = !{!915, !916, !917, !918, !919, !920, !921}
!915 = !DIEnumerator(name: "ZERO_BT", value: 0)
!916 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!917 = !DIEnumerator(name: "ESC_BT", value: 11)
!918 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!919 = !DIEnumerator(name: "NOISE_BT", value: 13)
!920 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!921 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!922 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !907, line: 106, size: 32, align: 32, elements: !923)
!923 = !{!924, !925, !926}
!924 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!925 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!926 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !907, line: 55, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936}
!929 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!930 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!931 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!932 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!933 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!934 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!935 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!936 = !DIEnumerator(name: "TYPE_END", value: 7)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !907, line: 115, size: 32, align: 32, elements: !938)
!938 = !{!939, !940, !941, !942, !943}
!939 = !DIEnumerator(name: "OC_NONE", value: 0)
!940 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!941 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!942 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!943 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!944 = !{!945, !953, !954}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !947, line: 221, size: 32, align: 8, elements: !948)
!947 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !946, file: !947, line: 221, baseType: !950, size: 32, align: 32)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !951, line: 51, baseType: !952)
!951 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!952 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!954 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!955 = !{!956, !2727, !2733, !2740, !2744, !2745, !2746, !2750, !2752, !2755, !2757}
!956 = distinct !DIGlobalVariable(name: "ff_aac_coders", scope: !0, file: !957, line: 897, type: !958, isLocal: false, isDefinition: true, variable: [3 x %struct.AACCoefficientsEncoder]* @ff_aac_coders)
!957 = !DIFile(filename: "libavcodec/aaccoder.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 3840, align: 64, elements: !2154)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACCoefficientsEncoder", file: !961, line: 80, baseType: !962)
!961 = !DIFile(filename: "libavcodec/aacenc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACCoefficientsEncoder", file: !961, line: 56, size: 1280, align: 64, elements: !963)
!963 = !{!964, !2683, !2687, !2692, !2696, !2700, !2701, !2705, !2706, !2707, !2708, !2709, !2713, !2714, !2718, !2719, !2720, !2721, !2722, !2726}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_quantizers", scope: !962, file: !961, line: 57, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !968, !1695, !2458, !1781}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !971)
!971 = !{!972, !1017, !1018, !1019, !1294, !1295, !1296, !1297, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1450, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1633, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !970, file: !35, line: 1561, baseType: !973, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !977)
!977 = !{!978, !982, !986, !990, !992, !993, !994, !998, !1004, !1006, !1010}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !976, file: !4, line: 72, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !976, file: !4, line: 78, baseType: !983, size: 64, align: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!979, !953}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !976, file: !4, line: 85, baseType: !987, size: 64, align: 64, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!989 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !976, file: !4, line: 93, baseType: !991, size: 32, align: 32, offset: 192)
!991 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !976, file: !4, line: 99, baseType: !991, size: 32, align: 32, offset: 224)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !976, file: !4, line: 108, baseType: !991, size: 32, align: 32, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !976, file: !4, line: 113, baseType: !995, size: 64, align: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!953, !953, !953}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !976, file: !4, line: 123, baseType: !999, size: 64, align: 64, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!1002, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64, align: 64)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !976, file: !4, line: 130, baseType: !1005, size: 32, align: 32, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !976, file: !4, line: 136, baseType: !1007, size: 64, align: 64, offset: 512)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!1005, !953}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !976, file: !4, line: 142, baseType: !1011, size: 64, align: 64, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!991, !1014, !953, !979, !991}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !970, file: !35, line: 1562, baseType: !991, size: 32, align: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !970, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !970, file: !35, line: 1565, baseType: !1020, size: 64, align: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027, !1028, !1029, !1038, !1041, !1044, !1047, !1052, !1055, !1056, !1064, !1065, !1066, !1068, !1072, !1078, !1089, !1093, !1094, !1144, !1265, !1269, !1270, !1274, !1278, !1283, !1287, !1288, !1289}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1022, file: !35, line: 3475, baseType: !979, size: 64, align: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1022, file: !35, line: 3480, baseType: !979, size: 64, align: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1022, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1022, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1022, file: !35, line: 3487, baseType: !991, size: 32, align: 32, offset: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1022, file: !35, line: 3488, baseType: !1030, size: 64, align: 64, offset: 256)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1033, line: 61, baseType: !1034)
!1033 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1033, line: 58, size: 64, align: 32, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1034, file: !1033, line: 59, baseType: !991, size: 32, align: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1034, file: !1033, line: 60, baseType: !991, size: 32, align: 32, offset: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1022, file: !35, line: 3489, baseType: !1039, size: 64, align: 64, offset: 320)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1022, file: !35, line: 3490, baseType: !1042, size: 64, align: 64, offset: 384)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1022, file: !35, line: 3491, baseType: !1045, size: 64, align: 64, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1022, file: !35, line: 3492, baseType: !1048, size: 64, align: 64, offset: 512)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !951, line: 55, baseType: !1051)
!1051 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1022, file: !35, line: 3493, baseType: !1053, size: 8, align: 8, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !951, line: 48, baseType: !1054)
!1054 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1022, file: !35, line: 3494, baseType: !973, size: 64, align: 64, offset: 640)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1022, file: !35, line: 3495, baseType: !1057, size: 64, align: 64, offset: 704)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64, align: 64)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1061)
!1061 = !{!1062, !1063}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1060, file: !35, line: 3402, baseType: !991, size: 32, align: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1060, file: !35, line: 3403, baseType: !979, size: 64, align: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1022, file: !35, line: 3507, baseType: !979, size: 64, align: 64, offset: 768)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1022, file: !35, line: 3516, baseType: !991, size: 32, align: 32, offset: 832)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1022, file: !35, line: 3517, baseType: !1067, size: 64, align: 64, offset: 896)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1022, file: !35, line: 3527, baseType: !1069, size: 64, align: 64, offset: 960)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64, align: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!991, !968}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1022, file: !35, line: 3535, baseType: !1073, size: 64, align: 64, offset: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!991, !968, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1022, file: !35, line: 3541, baseType: !1079, size: 64, align: 64, offset: 1088)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1083, line: 223, size: 128, align: 64, elements: !1084)
!1083 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1084 = !{!1085, !1088}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1082, file: !1083, line: 224, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1082, file: !1083, line: 225, baseType: !1086, size: 64, align: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1022, file: !35, line: 3549, baseType: !1090, size: 64, align: 64, offset: 1152)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{null, !1067}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1022, file: !35, line: 3551, baseType: !1069, size: 64, align: 64, offset: 1216)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1022, file: !35, line: 3552, baseType: !1095, size: 64, align: 64, offset: 1280)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!991, !968, !1098, !991, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1102)
!1102 = !{!1103, !1106, !1107, !1108, !1109, !1141}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1101, file: !35, line: 3921, baseType: !1104, size: 16, align: 16)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !951, line: 49, baseType: !1105)
!1105 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1101, file: !35, line: 3922, baseType: !950, size: 32, align: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1101, file: !35, line: 3923, baseType: !950, size: 32, align: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1101, file: !35, line: 3924, baseType: !952, size: 32, align: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1101, file: !35, line: 3925, baseType: !1110, size: 64, align: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64, align: 64)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1119, !1120, !1130, !1134, !1136, !1137, !1139, !1140}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1113, file: !35, line: 3886, baseType: !991, size: 32, align: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1113, file: !35, line: 3887, baseType: !991, size: 32, align: 32, offset: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1113, file: !35, line: 3888, baseType: !991, size: 32, align: 32, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1113, file: !35, line: 3889, baseType: !991, size: 32, align: 32, offset: 96)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1113, file: !35, line: 3890, baseType: !991, size: 32, align: 32, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1113, file: !35, line: 3897, baseType: !1121, size: 768, align: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1123)
!1123 = !{!1124, !1128}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1122, file: !35, line: 3855, baseType: !1125, size: 512, align: 64)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 512, align: 64, elements: !1126)
!1126 = !{!1127}
!1127 = !DISubrange(count: 8)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1122, file: !35, line: 3857, baseType: !1129, size: 256, align: 32, offset: 512)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 256, align: 32, elements: !1126)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1113, file: !35, line: 3903, baseType: !1131, size: 256, align: 64, offset: 960)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 256, align: 64, elements: !1132)
!1132 = !{!1133}
!1133 = !DISubrange(count: 4)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1113, file: !35, line: 3904, baseType: !1135, size: 128, align: 32, offset: 1216)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 128, align: 32, elements: !1132)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1113, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1113, file: !35, line: 3908, baseType: !1138, size: 64, align: 64, offset: 1408)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1113, file: !35, line: 3915, baseType: !1138, size: 64, align: 64, offset: 1472)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1113, file: !35, line: 3917, baseType: !991, size: 32, align: 32, offset: 1536)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1101, file: !35, line: 3926, baseType: !1142, size: 64, align: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !951, line: 40, baseType: !1143)
!1143 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1022, file: !35, line: 3564, baseType: !1145, size: 64, align: 64, offset: 1344)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64, align: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!991, !968, !1148, !1182, !1264}
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1151)
!1151 = !{!1152, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1178, !1179, !1180, !1181}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1150, file: !35, line: 1451, baseType: !1153, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1155, line: 94, baseType: !1156)
!1155 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1155, line: 81, size: 192, align: 64, elements: !1157)
!1157 = !{!1158, !1162, !1163}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1156, file: !1155, line: 82, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1155, line: 73, baseType: !1161)
!1161 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1155, line: 73, flags: DIFlagFwdDecl)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1156, file: !1155, line: 89, baseType: !1098, size: 64, align: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1156, file: !1155, line: 93, baseType: !991, size: 32, align: 32, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1150, file: !35, line: 1461, baseType: !1142, size: 64, align: 64, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1150, file: !35, line: 1467, baseType: !1142, size: 64, align: 64, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1150, file: !35, line: 1468, baseType: !1098, size: 64, align: 64, offset: 192)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1150, file: !35, line: 1469, baseType: !991, size: 32, align: 32, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1150, file: !35, line: 1470, baseType: !991, size: 32, align: 32, offset: 288)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1150, file: !35, line: 1474, baseType: !991, size: 32, align: 32, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1150, file: !35, line: 1479, baseType: !1171, size: 64, align: 64, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1174)
!1174 = !{!1175, !1176, !1177}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1173, file: !35, line: 1412, baseType: !1098, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1173, file: !35, line: 1413, baseType: !991, size: 32, align: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1173, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1150, file: !35, line: 1480, baseType: !991, size: 32, align: 32, offset: 448)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1150, file: !35, line: 1486, baseType: !1142, size: 64, align: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1150, file: !35, line: 1488, baseType: !1142, size: 64, align: 64, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1150, file: !35, line: 1497, baseType: !1142, size: 64, align: 64, offset: 640)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1184)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1216, !1218, !1219, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1252, !1253, !1254, !1255, !1256, !1257, !1260, !1261, !1262, !1263}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1185, file: !758, line: 282, baseType: !1125, size: 512, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1185, file: !758, line: 299, baseType: !1129, size: 256, align: 32, offset: 512)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1185, file: !758, line: 315, baseType: !1190, size: 64, align: 64, offset: 768)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1185, file: !758, line: 326, baseType: !991, size: 32, align: 32, offset: 832)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1185, file: !758, line: 326, baseType: !991, size: 32, align: 32, offset: 864)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1185, file: !758, line: 334, baseType: !991, size: 32, align: 32, offset: 896)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1185, file: !758, line: 341, baseType: !991, size: 32, align: 32, offset: 928)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1185, file: !758, line: 346, baseType: !991, size: 32, align: 32, offset: 960)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1185, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1185, file: !758, line: 356, baseType: !1032, size: 64, align: 32, offset: 1024)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1185, file: !758, line: 361, baseType: !1142, size: 64, align: 64, offset: 1088)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1185, file: !758, line: 369, baseType: !1142, size: 64, align: 64, offset: 1152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1185, file: !758, line: 377, baseType: !1142, size: 64, align: 64, offset: 1216)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1185, file: !758, line: 382, baseType: !991, size: 32, align: 32, offset: 1280)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1185, file: !758, line: 386, baseType: !991, size: 32, align: 32, offset: 1312)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1185, file: !758, line: 391, baseType: !991, size: 32, align: 32, offset: 1344)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1185, file: !758, line: 396, baseType: !953, size: 64, align: 64, offset: 1408)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1185, file: !758, line: 403, baseType: !1206, size: 512, align: 64, offset: 1472)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 512, align: 64, elements: !1126)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1185, file: !758, line: 410, baseType: !991, size: 32, align: 32, offset: 1984)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1185, file: !758, line: 415, baseType: !991, size: 32, align: 32, offset: 2016)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1185, file: !758, line: 420, baseType: !991, size: 32, align: 32, offset: 2048)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1185, file: !758, line: 425, baseType: !991, size: 32, align: 32, offset: 2080)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1185, file: !758, line: 435, baseType: !1142, size: 64, align: 64, offset: 2112)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1185, file: !758, line: 440, baseType: !991, size: 32, align: 32, offset: 2176)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1185, file: !758, line: 445, baseType: !1050, size: 64, align: 64, offset: 2240)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1185, file: !758, line: 459, baseType: !1215, size: 512, align: 64, offset: 2304)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1153, size: 512, align: 64, elements: !1126)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1185, file: !758, line: 473, baseType: !1217, size: 64, align: 64, offset: 2816)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1185, file: !758, line: 477, baseType: !991, size: 32, align: 32, offset: 2880)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1185, file: !758, line: 479, baseType: !1220, size: 64, align: 64, offset: 2944)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1224)
!1224 = !{!1225, !1226, !1227, !1228, !1233}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1223, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1223, file: !758, line: 203, baseType: !1098, size: 64, align: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1223, file: !758, line: 204, baseType: !991, size: 32, align: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1223, file: !758, line: 205, baseType: !1229, size: 64, align: 64, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1231, line: 86, baseType: !1232)
!1231 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1232 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1231, line: 86, flags: DIFlagFwdDecl)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1223, file: !758, line: 206, baseType: !1153, size: 64, align: 64, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1185, file: !758, line: 480, baseType: !991, size: 32, align: 32, offset: 3008)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1185, file: !758, line: 505, baseType: !991, size: 32, align: 32, offset: 3040)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1185, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1185, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1185, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1185, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1185, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1185, file: !758, line: 532, baseType: !1142, size: 64, align: 64, offset: 3264)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1185, file: !758, line: 539, baseType: !1142, size: 64, align: 64, offset: 3328)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1185, file: !758, line: 547, baseType: !1142, size: 64, align: 64, offset: 3392)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1185, file: !758, line: 554, baseType: !1229, size: 64, align: 64, offset: 3456)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1185, file: !758, line: 563, baseType: !991, size: 32, align: 32, offset: 3520)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1185, file: !758, line: 572, baseType: !991, size: 32, align: 32, offset: 3552)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1185, file: !758, line: 581, baseType: !991, size: 32, align: 32, offset: 3584)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1185, file: !758, line: 588, baseType: !1249, size: 64, align: 64, offset: 3648)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !951, line: 36, baseType: !1251)
!1251 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1185, file: !758, line: 593, baseType: !991, size: 32, align: 32, offset: 3712)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1185, file: !758, line: 596, baseType: !991, size: 32, align: 32, offset: 3744)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1185, file: !758, line: 599, baseType: !1153, size: 64, align: 64, offset: 3776)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1185, file: !758, line: 605, baseType: !1153, size: 64, align: 64, offset: 3840)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1185, file: !758, line: 616, baseType: !1153, size: 64, align: 64, offset: 3904)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1185, file: !758, line: 626, baseType: !1258, size: 64, align: 64, offset: 3968)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1259, line: 216, baseType: !1051)
!1259 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1185, file: !758, line: 627, baseType: !1258, size: 64, align: 64, offset: 4032)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1185, file: !758, line: 628, baseType: !1258, size: 64, align: 64, offset: 4096)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1185, file: !758, line: 629, baseType: !1258, size: 64, align: 64, offset: 4160)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1185, file: !758, line: 645, baseType: !1153, size: 64, align: 64, offset: 4224)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1022, file: !35, line: 3566, baseType: !1266, size: 64, align: 64, offset: 1408)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!991, !968, !953, !1264, !1148}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1022, file: !35, line: 3567, baseType: !1069, size: 64, align: 64, offset: 1472)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1022, file: !35, line: 3576, baseType: !1271, size: 64, align: 64, offset: 1536)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64, align: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!991, !968, !1182}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1022, file: !35, line: 3577, baseType: !1275, size: 64, align: 64, offset: 1600)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!991, !968, !1148}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1022, file: !35, line: 3584, baseType: !1279, size: 64, align: 64, offset: 1664)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!991, !968, !1282}
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1022, file: !35, line: 3589, baseType: !1284, size: 64, align: 64, offset: 1728)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !968}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1022, file: !35, line: 3594, baseType: !991, size: 32, align: 32, offset: 1792)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1022, file: !35, line: 3600, baseType: !979, size: 64, align: 64, offset: 1856)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1022, file: !35, line: 3609, baseType: !1290, size: 64, align: 64, offset: 1920)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64, align: 64)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !970, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !970, file: !35, line: 1581, baseType: !952, size: 32, align: 32, offset: 224)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !970, file: !35, line: 1583, baseType: !953, size: 64, align: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !970, file: !35, line: 1591, baseType: !1298, size: 64, align: 64, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1083, line: 129, size: 1664, align: 64, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1304, !1305, !1323, !1324, !1330, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1299, file: !1083, line: 136, baseType: !991, size: 32, align: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1299, file: !1083, line: 151, baseType: !991, size: 32, align: 32, offset: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1299, file: !1083, line: 157, baseType: !991, size: 32, align: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1299, file: !1083, line: 159, baseType: !1282, size: 64, align: 64, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1299, file: !1083, line: 161, baseType: !1306, size: 64, align: 64, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1083, line: 117, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1083, line: 100, size: 832, align: 64, elements: !1309)
!1309 = !{!1310, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1308, file: !1083, line: 105, baseType: !1311, size: 256, align: 64)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 256, align: 64, elements: !1132)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1155, line: 238, baseType: !1314)
!1314 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1155, line: 238, flags: DIFlagFwdDecl)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1308, file: !1083, line: 110, baseType: !991, size: 32, align: 32, offset: 256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1308, file: !1083, line: 111, baseType: !991, size: 32, align: 32, offset: 288)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1308, file: !1083, line: 111, baseType: !991, size: 32, align: 32, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1308, file: !1083, line: 112, baseType: !1129, size: 256, align: 32, offset: 352)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1308, file: !1083, line: 113, baseType: !1135, size: 128, align: 32, offset: 608)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1308, file: !1083, line: 114, baseType: !991, size: 32, align: 32, offset: 736)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1308, file: !1083, line: 115, baseType: !991, size: 32, align: 32, offset: 768)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1308, file: !1083, line: 116, baseType: !991, size: 32, align: 32, offset: 800)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1299, file: !1083, line: 163, baseType: !953, size: 64, align: 64, offset: 256)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1299, file: !1083, line: 165, baseType: !1325, size: 128, align: 64, offset: 320)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1083, line: 122, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1083, line: 119, size: 128, align: 64, elements: !1327)
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1326, file: !1083, line: 120, baseType: !1148, size: 64, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1326, file: !1083, line: 121, baseType: !1282, size: 64, align: 64, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1299, file: !1083, line: 166, baseType: !1331, size: 128, align: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1083, line: 127, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1083, line: 124, size: 128, align: 64, elements: !1333)
!1333 = !{!1334, !1407}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1332, file: !1083, line: 125, baseType: !1335, size: 64, align: 64)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1339)
!1339 = !{!1340, !1341, !1365, !1369, !1370, !1404, !1405, !1406}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1338, file: !35, line: 5751, baseType: !973, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1338, file: !35, line: 5756, baseType: !1342, size: 64, align: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64, align: 64)
!1343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1345)
!1345 = !{!1346, !1347, !1350, !1351, !1352, !1356, !1360, !1364}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1344, file: !35, line: 5797, baseType: !979, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1344, file: !35, line: 5804, baseType: !1348, size: 64, align: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64, align: 64)
!1349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1344, file: !35, line: 5815, baseType: !973, size: 64, align: 64, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1344, file: !35, line: 5825, baseType: !991, size: 32, align: 32, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1344, file: !35, line: 5826, baseType: !1353, size: 64, align: 64, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64, align: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!991, !1336}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1344, file: !35, line: 5827, baseType: !1357, size: 64, align: 64, offset: 320)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64, align: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!991, !1336, !1148}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1344, file: !35, line: 5828, baseType: !1361, size: 64, align: 64, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64, align: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !1336}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1344, file: !35, line: 5829, baseType: !1361, size: 64, align: 64, offset: 448)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1338, file: !35, line: 5762, baseType: !1366, size: 64, align: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1368)
!1368 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1338, file: !35, line: 5768, baseType: !953, size: 64, align: 64, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1338, file: !35, line: 5775, baseType: !1371, size: 64, align: 64, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1373, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1373, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1373, file: !35, line: 3948, baseType: !950, size: 32, align: 32, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1373, file: !35, line: 3958, baseType: !1098, size: 64, align: 64, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1373, file: !35, line: 3962, baseType: !991, size: 32, align: 32, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1373, file: !35, line: 3968, baseType: !991, size: 32, align: 32, offset: 224)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1373, file: !35, line: 3973, baseType: !1142, size: 64, align: 64, offset: 256)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1373, file: !35, line: 3986, baseType: !991, size: 32, align: 32, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1373, file: !35, line: 3999, baseType: !991, size: 32, align: 32, offset: 352)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1373, file: !35, line: 4004, baseType: !991, size: 32, align: 32, offset: 384)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1373, file: !35, line: 4005, baseType: !991, size: 32, align: 32, offset: 416)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1373, file: !35, line: 4010, baseType: !991, size: 32, align: 32, offset: 448)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1373, file: !35, line: 4011, baseType: !991, size: 32, align: 32, offset: 480)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1373, file: !35, line: 4020, baseType: !1032, size: 64, align: 32, offset: 512)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1373, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1373, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1373, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1373, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1373, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1373, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1373, file: !35, line: 4039, baseType: !991, size: 32, align: 32, offset: 768)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1373, file: !35, line: 4046, baseType: !1050, size: 64, align: 64, offset: 832)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1373, file: !35, line: 4050, baseType: !991, size: 32, align: 32, offset: 896)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1373, file: !35, line: 4054, baseType: !991, size: 32, align: 32, offset: 928)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1373, file: !35, line: 4061, baseType: !991, size: 32, align: 32, offset: 960)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1373, file: !35, line: 4065, baseType: !991, size: 32, align: 32, offset: 992)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1373, file: !35, line: 4073, baseType: !991, size: 32, align: 32, offset: 1024)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1373, file: !35, line: 4080, baseType: !991, size: 32, align: 32, offset: 1056)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1373, file: !35, line: 4084, baseType: !991, size: 32, align: 32, offset: 1088)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1338, file: !35, line: 5781, baseType: !1371, size: 64, align: 64, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1338, file: !35, line: 5787, baseType: !1032, size: 64, align: 32, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1338, file: !35, line: 5793, baseType: !1032, size: 64, align: 32, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1332, file: !1083, line: 126, baseType: !991, size: 32, align: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1299, file: !1083, line: 172, baseType: !1148, size: 64, align: 64, offset: 576)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1299, file: !1083, line: 177, baseType: !1098, size: 64, align: 64, offset: 640)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1299, file: !1083, line: 178, baseType: !952, size: 32, align: 32, offset: 704)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1299, file: !1083, line: 180, baseType: !953, size: 64, align: 64, offset: 768)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1299, file: !1083, line: 185, baseType: !991, size: 32, align: 32, offset: 832)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1299, file: !1083, line: 190, baseType: !953, size: 64, align: 64, offset: 896)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1299, file: !1083, line: 195, baseType: !991, size: 32, align: 32, offset: 960)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1299, file: !1083, line: 200, baseType: !1148, size: 64, align: 64, offset: 1024)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1299, file: !1083, line: 201, baseType: !991, size: 32, align: 32, offset: 1088)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1299, file: !1083, line: 202, baseType: !1282, size: 64, align: 64, offset: 1152)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1299, file: !1083, line: 203, baseType: !991, size: 32, align: 32, offset: 1216)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1299, file: !1083, line: 205, baseType: !991, size: 32, align: 32, offset: 1248)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1299, file: !1083, line: 206, baseType: !991, size: 32, align: 32, offset: 1280)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1299, file: !1083, line: 209, baseType: !1258, size: 64, align: 64, offset: 1344)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1299, file: !1083, line: 212, baseType: !1258, size: 64, align: 64, offset: 1408)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1299, file: !1083, line: 213, baseType: !1282, size: 64, align: 64, offset: 1472)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1299, file: !1083, line: 215, baseType: !991, size: 32, align: 32, offset: 1536)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1299, file: !1083, line: 217, baseType: !991, size: 32, align: 32, offset: 1568)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1299, file: !1083, line: 220, baseType: !991, size: 32, align: 32, offset: 1600)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !970, file: !35, line: 1598, baseType: !953, size: 64, align: 64, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !970, file: !35, line: 1606, baseType: !1142, size: 64, align: 64, offset: 448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !970, file: !35, line: 1614, baseType: !991, size: 32, align: 32, offset: 512)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !970, file: !35, line: 1622, baseType: !991, size: 32, align: 32, offset: 544)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !970, file: !35, line: 1628, baseType: !991, size: 32, align: 32, offset: 576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !970, file: !35, line: 1636, baseType: !991, size: 32, align: 32, offset: 608)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !970, file: !35, line: 1643, baseType: !991, size: 32, align: 32, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !970, file: !35, line: 1657, baseType: !1098, size: 64, align: 64, offset: 704)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !970, file: !35, line: 1658, baseType: !991, size: 32, align: 32, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !970, file: !35, line: 1679, baseType: !1032, size: 64, align: 32, offset: 800)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !970, file: !35, line: 1688, baseType: !991, size: 32, align: 32, offset: 864)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !970, file: !35, line: 1712, baseType: !991, size: 32, align: 32, offset: 896)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !970, file: !35, line: 1729, baseType: !991, size: 32, align: 32, offset: 928)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !970, file: !35, line: 1729, baseType: !991, size: 32, align: 32, offset: 960)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !970, file: !35, line: 1744, baseType: !991, size: 32, align: 32, offset: 992)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !970, file: !35, line: 1744, baseType: !991, size: 32, align: 32, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !970, file: !35, line: 1751, baseType: !991, size: 32, align: 32, offset: 1056)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !970, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !970, file: !35, line: 1791, baseType: !1446, size: 64, align: 64, offset: 1152)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64, align: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !1449, !1182, !1264, !991, !991, !991}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !970, file: !35, line: 1808, baseType: !1451, size: 64, align: 64, offset: 1216)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!494, !1449, !1039}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !970, file: !35, line: 1816, baseType: !991, size: 32, align: 32, offset: 1280)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !970, file: !35, line: 1825, baseType: !954, size: 32, align: 32, offset: 1312)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !970, file: !35, line: 1830, baseType: !991, size: 32, align: 32, offset: 1344)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !970, file: !35, line: 1838, baseType: !954, size: 32, align: 32, offset: 1376)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !970, file: !35, line: 1846, baseType: !991, size: 32, align: 32, offset: 1408)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !970, file: !35, line: 1851, baseType: !991, size: 32, align: 32, offset: 1440)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !970, file: !35, line: 1861, baseType: !954, size: 32, align: 32, offset: 1472)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !970, file: !35, line: 1868, baseType: !954, size: 32, align: 32, offset: 1504)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !970, file: !35, line: 1875, baseType: !954, size: 32, align: 32, offset: 1536)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !970, file: !35, line: 1882, baseType: !954, size: 32, align: 32, offset: 1568)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !970, file: !35, line: 1889, baseType: !954, size: 32, align: 32, offset: 1600)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !970, file: !35, line: 1896, baseType: !954, size: 32, align: 32, offset: 1632)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !970, file: !35, line: 1903, baseType: !954, size: 32, align: 32, offset: 1664)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !970, file: !35, line: 1910, baseType: !991, size: 32, align: 32, offset: 1696)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !970, file: !35, line: 1915, baseType: !991, size: 32, align: 32, offset: 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !970, file: !35, line: 1926, baseType: !1264, size: 64, align: 64, offset: 1792)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !970, file: !35, line: 1935, baseType: !1032, size: 64, align: 32, offset: 1856)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !970, file: !35, line: 1942, baseType: !991, size: 32, align: 32, offset: 1920)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !970, file: !35, line: 1948, baseType: !991, size: 32, align: 32, offset: 1952)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !970, file: !35, line: 1954, baseType: !991, size: 32, align: 32, offset: 1984)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !970, file: !35, line: 1960, baseType: !991, size: 32, align: 32, offset: 2016)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !970, file: !35, line: 1984, baseType: !991, size: 32, align: 32, offset: 2048)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !970, file: !35, line: 1991, baseType: !991, size: 32, align: 32, offset: 2080)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !970, file: !35, line: 1996, baseType: !991, size: 32, align: 32, offset: 2112)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !970, file: !35, line: 2004, baseType: !991, size: 32, align: 32, offset: 2144)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !970, file: !35, line: 2011, baseType: !991, size: 32, align: 32, offset: 2176)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !970, file: !35, line: 2018, baseType: !991, size: 32, align: 32, offset: 2208)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !970, file: !35, line: 2027, baseType: !991, size: 32, align: 32, offset: 2240)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !970, file: !35, line: 2034, baseType: !991, size: 32, align: 32, offset: 2272)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !970, file: !35, line: 2044, baseType: !991, size: 32, align: 32, offset: 2304)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !970, file: !35, line: 2054, baseType: !1485, size: 64, align: 64, offset: 2368)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !970, file: !35, line: 2061, baseType: !1485, size: 64, align: 64, offset: 2432)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !970, file: !35, line: 2066, baseType: !991, size: 32, align: 32, offset: 2496)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !970, file: !35, line: 2070, baseType: !991, size: 32, align: 32, offset: 2528)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !970, file: !35, line: 2078, baseType: !991, size: 32, align: 32, offset: 2560)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !970, file: !35, line: 2085, baseType: !991, size: 32, align: 32, offset: 2592)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !970, file: !35, line: 2092, baseType: !991, size: 32, align: 32, offset: 2624)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !970, file: !35, line: 2099, baseType: !991, size: 32, align: 32, offset: 2656)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !970, file: !35, line: 2106, baseType: !991, size: 32, align: 32, offset: 2688)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !970, file: !35, line: 2113, baseType: !991, size: 32, align: 32, offset: 2720)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !970, file: !35, line: 2120, baseType: !991, size: 32, align: 32, offset: 2752)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !970, file: !35, line: 2125, baseType: !991, size: 32, align: 32, offset: 2784)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !970, file: !35, line: 2133, baseType: !991, size: 32, align: 32, offset: 2816)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !970, file: !35, line: 2140, baseType: !991, size: 32, align: 32, offset: 2848)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !970, file: !35, line: 2145, baseType: !991, size: 32, align: 32, offset: 2880)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !970, file: !35, line: 2153, baseType: !991, size: 32, align: 32, offset: 2912)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !970, file: !35, line: 2158, baseType: !991, size: 32, align: 32, offset: 2944)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !970, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !970, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !970, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !970, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !970, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !970, file: !35, line: 2203, baseType: !991, size: 32, align: 32, offset: 3136)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !970, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !970, file: !35, line: 2212, baseType: !991, size: 32, align: 32, offset: 3200)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !970, file: !35, line: 2213, baseType: !991, size: 32, align: 32, offset: 3232)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !970, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !970, file: !35, line: 2232, baseType: !991, size: 32, align: 32, offset: 3296)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !970, file: !35, line: 2243, baseType: !991, size: 32, align: 32, offset: 3328)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !970, file: !35, line: 2249, baseType: !991, size: 32, align: 32, offset: 3360)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !970, file: !35, line: 2256, baseType: !991, size: 32, align: 32, offset: 3392)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !970, file: !35, line: 2263, baseType: !1050, size: 64, align: 64, offset: 3456)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !970, file: !35, line: 2270, baseType: !1050, size: 64, align: 64, offset: 3520)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !970, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !970, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !970, file: !35, line: 2367, baseType: !1521, size: 64, align: 64, offset: 3648)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!991, !1449, !1282, !991}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !970, file: !35, line: 2383, baseType: !991, size: 32, align: 32, offset: 3712)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !970, file: !35, line: 2386, baseType: !954, size: 32, align: 32, offset: 3744)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !970, file: !35, line: 2387, baseType: !954, size: 32, align: 32, offset: 3776)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !970, file: !35, line: 2394, baseType: !991, size: 32, align: 32, offset: 3808)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !970, file: !35, line: 2401, baseType: !991, size: 32, align: 32, offset: 3840)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !970, file: !35, line: 2408, baseType: !991, size: 32, align: 32, offset: 3872)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !970, file: !35, line: 2415, baseType: !991, size: 32, align: 32, offset: 3904)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !970, file: !35, line: 2422, baseType: !991, size: 32, align: 32, offset: 3936)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !970, file: !35, line: 2423, baseType: !1533, size: 64, align: 64, offset: 3968)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1535, file: !35, line: 827, baseType: !991, size: 32, align: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1535, file: !35, line: 828, baseType: !991, size: 32, align: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1535, file: !35, line: 829, baseType: !991, size: 32, align: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1535, file: !35, line: 830, baseType: !954, size: 32, align: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !970, file: !35, line: 2430, baseType: !1142, size: 64, align: 64, offset: 4032)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !970, file: !35, line: 2437, baseType: !1142, size: 64, align: 64, offset: 4096)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !970, file: !35, line: 2444, baseType: !954, size: 32, align: 32, offset: 4160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !970, file: !35, line: 2451, baseType: !954, size: 32, align: 32, offset: 4192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !970, file: !35, line: 2458, baseType: !991, size: 32, align: 32, offset: 4224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !970, file: !35, line: 2469, baseType: !991, size: 32, align: 32, offset: 4256)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !970, file: !35, line: 2475, baseType: !991, size: 32, align: 32, offset: 4288)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !970, file: !35, line: 2481, baseType: !991, size: 32, align: 32, offset: 4320)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !970, file: !35, line: 2485, baseType: !991, size: 32, align: 32, offset: 4352)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !970, file: !35, line: 2489, baseType: !991, size: 32, align: 32, offset: 4384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !970, file: !35, line: 2493, baseType: !991, size: 32, align: 32, offset: 4416)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !970, file: !35, line: 2501, baseType: !991, size: 32, align: 32, offset: 4448)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !970, file: !35, line: 2506, baseType: !991, size: 32, align: 32, offset: 4480)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !970, file: !35, line: 2510, baseType: !991, size: 32, align: 32, offset: 4512)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !970, file: !35, line: 2514, baseType: !1142, size: 64, align: 64, offset: 4544)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !970, file: !35, line: 2528, baseType: !1557, size: 64, align: 64, offset: 4608)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !1449, !953, !991, !991}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !970, file: !35, line: 2534, baseType: !991, size: 32, align: 32, offset: 4672)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !970, file: !35, line: 2545, baseType: !991, size: 32, align: 32, offset: 4704)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !970, file: !35, line: 2547, baseType: !991, size: 32, align: 32, offset: 4736)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !970, file: !35, line: 2549, baseType: !991, size: 32, align: 32, offset: 4768)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !970, file: !35, line: 2551, baseType: !991, size: 32, align: 32, offset: 4800)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !970, file: !35, line: 2553, baseType: !991, size: 32, align: 32, offset: 4832)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !970, file: !35, line: 2555, baseType: !991, size: 32, align: 32, offset: 4864)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !970, file: !35, line: 2557, baseType: !991, size: 32, align: 32, offset: 4896)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !970, file: !35, line: 2559, baseType: !991, size: 32, align: 32, offset: 4928)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !970, file: !35, line: 2563, baseType: !991, size: 32, align: 32, offset: 4960)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !970, file: !35, line: 2571, baseType: !1138, size: 64, align: 64, offset: 4992)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !970, file: !35, line: 2579, baseType: !1138, size: 64, align: 64, offset: 5056)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !970, file: !35, line: 2586, baseType: !991, size: 32, align: 32, offset: 5120)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !970, file: !35, line: 2615, baseType: !991, size: 32, align: 32, offset: 5152)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !970, file: !35, line: 2627, baseType: !991, size: 32, align: 32, offset: 5184)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !970, file: !35, line: 2637, baseType: !991, size: 32, align: 32, offset: 5216)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !970, file: !35, line: 2681, baseType: !991, size: 32, align: 32, offset: 5248)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !970, file: !35, line: 2709, baseType: !1142, size: 64, align: 64, offset: 5312)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !970, file: !35, line: 2716, baseType: !1579, size: 64, align: 64, offset: 5376)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589, !1593, !1597, !1598, !1599, !1600, !1606, !1607, !1608, !1609, !1610}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1581, file: !35, line: 3642, baseType: !979, size: 64, align: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1581, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1581, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1581, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1581, file: !35, line: 3669, baseType: !991, size: 32, align: 32, offset: 160)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1581, file: !35, line: 3682, baseType: !1279, size: 64, align: 64, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1581, file: !35, line: 3698, baseType: !1590, size: 64, align: 64, offset: 256)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!991, !968, !1086, !950}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1581, file: !35, line: 3712, baseType: !1594, size: 64, align: 64, offset: 320)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!991, !968, !991, !1086, !950}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1581, file: !35, line: 3726, baseType: !1590, size: 64, align: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1581, file: !35, line: 3737, baseType: !1069, size: 64, align: 64, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1581, file: !35, line: 3746, baseType: !991, size: 32, align: 32, offset: 512)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1581, file: !35, line: 3757, baseType: !1601, size: 64, align: 64, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{null, !1604}
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64, align: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1581, file: !35, line: 3766, baseType: !1069, size: 64, align: 64, offset: 640)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1581, file: !35, line: 3774, baseType: !1069, size: 64, align: 64, offset: 704)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1581, file: !35, line: 3780, baseType: !991, size: 32, align: 32, offset: 768)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1581, file: !35, line: 3785, baseType: !991, size: 32, align: 32, offset: 800)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1581, file: !35, line: 3795, baseType: !1611, size: 64, align: 64, offset: 832)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!991, !968, !1153}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !970, file: !35, line: 2728, baseType: !953, size: 64, align: 64, offset: 5440)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !970, file: !35, line: 2735, baseType: !1206, size: 512, align: 64, offset: 5504)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !970, file: !35, line: 2742, baseType: !991, size: 32, align: 32, offset: 6016)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !970, file: !35, line: 2755, baseType: !991, size: 32, align: 32, offset: 6048)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !970, file: !35, line: 2776, baseType: !991, size: 32, align: 32, offset: 6080)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !970, file: !35, line: 2783, baseType: !991, size: 32, align: 32, offset: 6112)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !970, file: !35, line: 2791, baseType: !991, size: 32, align: 32, offset: 6144)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !970, file: !35, line: 2802, baseType: !1282, size: 64, align: 64, offset: 6208)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !970, file: !35, line: 2811, baseType: !991, size: 32, align: 32, offset: 6272)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !970, file: !35, line: 2821, baseType: !991, size: 32, align: 32, offset: 6304)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !970, file: !35, line: 2830, baseType: !991, size: 32, align: 32, offset: 6336)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !970, file: !35, line: 2840, baseType: !991, size: 32, align: 32, offset: 6368)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !970, file: !35, line: 2851, baseType: !1627, size: 64, align: 64, offset: 6400)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!991, !1449, !1630, !953, !1264, !991, !991}
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!991, !1449, !953}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !970, file: !35, line: 2871, baseType: !1634, size: 64, align: 64, offset: 6464)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!991, !1449, !1637, !953, !1264, !991}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!991, !1449, !953, !991, !991}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !970, file: !35, line: 2878, baseType: !991, size: 32, align: 32, offset: 6528)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !970, file: !35, line: 2885, baseType: !991, size: 32, align: 32, offset: 6560)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !970, file: !35, line: 3005, baseType: !991, size: 32, align: 32, offset: 6592)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !970, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !970, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !970, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !970, file: !35, line: 3037, baseType: !1098, size: 64, align: 64, offset: 6720)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !970, file: !35, line: 3038, baseType: !991, size: 32, align: 32, offset: 6784)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !970, file: !35, line: 3050, baseType: !1050, size: 64, align: 64, offset: 6848)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !970, file: !35, line: 3065, baseType: !991, size: 32, align: 32, offset: 6912)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !970, file: !35, line: 3083, baseType: !991, size: 32, align: 32, offset: 6944)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !970, file: !35, line: 3092, baseType: !1032, size: 64, align: 32, offset: 6976)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !970, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !970, file: !35, line: 3106, baseType: !1032, size: 64, align: 32, offset: 7072)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !970, file: !35, line: 3113, baseType: !1655, size: 64, align: 64, offset: 7168)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1664, !1665, !1668}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1658, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1658, file: !35, line: 720, baseType: !979, size: 64, align: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1658, file: !35, line: 724, baseType: !979, size: 64, align: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1658, file: !35, line: 728, baseType: !991, size: 32, align: 32, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1658, file: !35, line: 734, baseType: !1666, size: 64, align: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1658, file: !35, line: 739, baseType: !1669, size: 64, align: 64, offset: 320)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64, align: 64)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1060)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !970, file: !35, line: 3129, baseType: !1142, size: 64, align: 64, offset: 7232)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !970, file: !35, line: 3130, baseType: !1142, size: 64, align: 64, offset: 7296)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !970, file: !35, line: 3131, baseType: !1142, size: 64, align: 64, offset: 7360)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !970, file: !35, line: 3132, baseType: !1142, size: 64, align: 64, offset: 7424)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !970, file: !35, line: 3139, baseType: !1138, size: 64, align: 64, offset: 7488)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !970, file: !35, line: 3147, baseType: !991, size: 32, align: 32, offset: 7552)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !970, file: !35, line: 3165, baseType: !991, size: 32, align: 32, offset: 7584)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !970, file: !35, line: 3172, baseType: !991, size: 32, align: 32, offset: 7616)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !970, file: !35, line: 3180, baseType: !991, size: 32, align: 32, offset: 7648)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !970, file: !35, line: 3191, baseType: !1485, size: 64, align: 64, offset: 7680)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !970, file: !35, line: 3199, baseType: !1098, size: 64, align: 64, offset: 7744)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !970, file: !35, line: 3207, baseType: !1138, size: 64, align: 64, offset: 7808)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !970, file: !35, line: 3214, baseType: !952, size: 32, align: 32, offset: 7872)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !970, file: !35, line: 3224, baseType: !1171, size: 64, align: 64, offset: 7936)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !970, file: !35, line: 3225, baseType: !991, size: 32, align: 32, offset: 8000)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !970, file: !35, line: 3249, baseType: !1153, size: 64, align: 64, offset: 8064)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !970, file: !35, line: 3256, baseType: !991, size: 32, align: 32, offset: 8128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !970, file: !35, line: 3271, baseType: !991, size: 32, align: 32, offset: 8160)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !970, file: !35, line: 3279, baseType: !1142, size: 64, align: 64, offset: 8192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !970, file: !35, line: 3301, baseType: !1153, size: 64, align: 64, offset: 8256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !970, file: !35, line: 3310, baseType: !991, size: 32, align: 32, offset: 8320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !970, file: !35, line: 3337, baseType: !991, size: 32, align: 32, offset: 8352)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !970, file: !35, line: 3351, baseType: !991, size: 32, align: 32, offset: 8384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !970, file: !35, line: 3359, baseType: !991, size: 32, align: 32, offset: 8416)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64, align: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACEncContext", file: !961, line: 376, size: 4539904, align: 256, elements: !1697)
!1697 = !{!1698, !1700, !1712, !1723, !1768, !1769, !1815, !1833, !1835, !1836, !1837, !1886, !1887, !1888, !1889, !1890, !2542, !2622, !2625, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2651, !2655, !2657, !2658, !2671, !2675, !2679}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1696, file: !961, line: 377, baseType: !1699, size: 64, align: 64)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64, align: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1696, file: !961, line: 378, baseType: !1701, size: 256, align: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACEncOptions", file: !961, line: 52, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACEncOptions", file: !961, line: 43, size: 256, align: 32, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "coder", scope: !1702, file: !961, line: 44, baseType: !991, size: 32, align: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pns", scope: !1702, file: !961, line: 45, baseType: !991, size: 32, align: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1702, file: !961, line: 46, baseType: !991, size: 32, align: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1702, file: !961, line: 47, baseType: !991, size: 32, align: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !1702, file: !961, line: 48, baseType: !991, size: 32, align: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1702, file: !961, line: 49, baseType: !991, size: 32, align: 32, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "mid_side", scope: !1702, file: !961, line: 50, baseType: !991, size: 32, align: 32, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "intensity_stereo", scope: !1702, file: !961, line: 51, baseType: !991, size: 32, align: 32, offset: 224)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1696, file: !961, line: 379, baseType: !1713, size: 320, align: 64, offset: 320)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1714, line: 40, baseType: !1715)
!1714 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1714, line: 35, size: 320, align: 64, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720, !1721, !1722}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1715, file: !1714, line: 36, baseType: !950, size: 32, align: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1715, file: !1714, line: 37, baseType: !991, size: 32, align: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1715, file: !1714, line: 38, baseType: !1098, size: 64, align: 64, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1715, file: !1714, line: 38, baseType: !1098, size: 64, align: 64, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1715, file: !1714, line: 38, baseType: !1098, size: 64, align: 64, offset: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1715, file: !1714, line: 39, baseType: !991, size: 32, align: 32, offset: 256)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "mdct1024", scope: !1696, file: !961, line: 380, baseType: !1724, size: 896, align: 64, offset: 640)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1725, line: 41, baseType: !1726)
!1725 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1739, !1740, !1741, !1743, !1744, !1749, !1750, !1756, !1757, !1758, !1764, !1765, !1766}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1726, file: !888, line: 89, baseType: !991, size: 32, align: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1726, file: !888, line: 90, baseType: !991, size: 32, align: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1726, file: !888, line: 91, baseType: !1485, size: 64, align: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1726, file: !888, line: 92, baseType: !1732, size: 64, align: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1725, line: 39, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1725, line: 37, size: 64, align: 32, elements: !1735)
!1735 = !{!1736, !1738}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1734, file: !1725, line: 38, baseType: !1737, size: 32, align: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1725, line: 35, baseType: !954)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1734, file: !1725, line: 38, baseType: !1737, size: 32, align: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1726, file: !888, line: 93, baseType: !991, size: 32, align: 32, offset: 192)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1726, file: !888, line: 94, baseType: !991, size: 32, align: 32, offset: 224)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1726, file: !888, line: 96, baseType: !1742, size: 64, align: 64, offset: 256)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64, align: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1726, file: !888, line: 97, baseType: !1742, size: 64, align: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1726, file: !888, line: 101, baseType: !1745, size: 64, align: 64, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64, align: 64)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{null, !1748, !1732}
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64, align: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1726, file: !888, line: 106, baseType: !1745, size: 64, align: 64, offset: 448)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1726, file: !888, line: 107, baseType: !1751, size: 64, align: 64, offset: 512)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{null, !1748, !1742, !1754}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64, align: 64)
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1726, file: !888, line: 108, baseType: !1751, size: 64, align: 64, offset: 576)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1726, file: !888, line: 109, baseType: !1751, size: 64, align: 64, offset: 640)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1726, file: !888, line: 110, baseType: !1759, size: 64, align: 64, offset: 704)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{null, !1748, !1762, !1754}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !954)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1726, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1726, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1726, file: !888, line: 113, baseType: !1767, size: 64, align: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "mdct128", scope: !1696, file: !961, line: 381, baseType: !1724, size: 896, align: 64, offset: 1536)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1696, file: !961, line: 382, baseType: !1770, size: 64, align: 64, offset: 2432)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1772, line: 192, baseType: !1773)
!1772 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1772, line: 24, size: 704, align: 64, elements: !1774)
!1774 = !{!1775, !1782, !1786, !1794, !1795, !1796, !1800, !1801, !1802, !1807, !1811}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1773, file: !1772, line: 38, baseType: !1776, size: 64, align: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64, align: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{null, !1779, !1780, !1780, !991}
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64, align: 64)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1773, file: !1772, line: 54, baseType: !1783, size: 64, align: 64, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1779, !1780, !954, !991}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1773, file: !1772, line: 70, baseType: !1787, size: 64, align: 64, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{null, !1790, !1792, !1791, !991}
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64, align: 64)
!1791 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64, align: 64)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1791)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1773, file: !1772, line: 85, baseType: !1783, size: 64, align: 64, offset: 192)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1773, file: !1772, line: 100, baseType: !1787, size: 64, align: 64, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1773, file: !1772, line: 119, baseType: !1797, size: 64, align: 64, offset: 320)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{null, !1779, !1780, !1780, !1780, !991}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1773, file: !1772, line: 137, baseType: !1797, size: 64, align: 64, offset: 384)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1773, file: !1772, line: 154, baseType: !1776, size: 64, align: 64, offset: 448)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1773, file: !1772, line: 164, baseType: !1803, size: 64, align: 64, offset: 512)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64, align: 64)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !1806, !1806, !991}
!1806 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1779)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1773, file: !1772, line: 175, baseType: !1808, size: 64, align: 64, offset: 576)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!954, !1780, !1780, !991}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1773, file: !1772, line: 190, baseType: !1812, size: 64, align: 64, offset: 640)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64, align: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{null, !1790, !1792, !1792, !991}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !1696, file: !961, line: 383, baseType: !1816, size: 2240, align: 64, offset: 2496)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACPCEInfo", file: !961, line: 100, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACPCEInfo", file: !961, line: 93, size: 2240, align: 64, elements: !1818)
!1818 = !{!1819, !1820, !1821, !1825, !1828, !1832}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1817, file: !961, line: 94, baseType: !1142, size: 64, align: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "num_ele", scope: !1817, file: !961, line: 95, baseType: !1135, size: 128, align: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "pairing", scope: !1817, file: !961, line: 96, baseType: !1822, size: 768, align: 32, offset: 192)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 768, align: 32, elements: !1823)
!1823 = !{!1824, !1127}
!1824 = !DISubrange(count: 3)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1817, file: !961, line: 97, baseType: !1826, size: 1024, align: 32, offset: 960)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 1024, align: 32, elements: !1827)
!1827 = !{!1133, !1127}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "config_map", scope: !1817, file: !961, line: 98, baseType: !1829, size: 128, align: 8, offset: 1984)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 128, align: 8, elements: !1830)
!1830 = !{!1831}
!1831 = !DISubrange(count: 16)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_map", scope: !1817, file: !961, line: 99, baseType: !1829, size: 128, align: 8, offset: 2112)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "planar_samples", scope: !1696, file: !961, line: 384, baseType: !1834, size: 1024, align: 64, offset: 4736)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1779, size: 1024, align: 64, elements: !1830)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1696, file: !961, line: 386, baseType: !991, size: 32, align: 32, offset: 5760)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "needs_pce", scope: !1696, file: !961, line: 387, baseType: !991, size: 32, align: 32, offset: 5792)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "lpc", scope: !1696, file: !961, line: 388, baseType: !1838, size: 302080, align: 256, offset: 5888)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPCContext", file: !898, line: 87, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LPCContext", file: !898, line: 52, size: 302080, align: 256, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1853, !1857}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !1839, file: !898, line: 53, baseType: !991, size: 32, align: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !1839, file: !898, line: 54, baseType: !991, size: 32, align: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !1839, file: !898, line: 55, baseType: !897, size: 32, align: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_buffer", scope: !1839, file: !898, line: 56, baseType: !1790, size: 64, align: 64, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !1839, file: !898, line: 57, baseType: !1790, size: 64, align: 64, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_apply_welch_window", scope: !1839, file: !898, line: 67, baseType: !1847, size: 64, align: 64, offset: 256)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64, align: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1850, !991, !1790}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64, align: 64)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !951, line: 38, baseType: !991)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_compute_autocorr", scope: !1839, file: !898, line: 82, baseType: !1854, size: 64, align: 64, offset: 320)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64, align: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{null, !1792, !991, !991, !1790}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "lls_models", scope: !1839, file: !898, line: 86, baseType: !1858, size: 301568, align: 256, offset: 512)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 301568, align: 256, elements: !1884)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLSModel", file: !1860, line: 58, baseType: !1861)
!1860 = !DIFile(filename: "./libavutil/lls.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLSModel", file: !1860, line: 38, size: 150784, align: 256, elements: !1862)
!1862 = !{!1863, !1867, !1871, !1874, !1875, !1880}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "covariance", scope: !1861, file: !1860, line: 39, baseType: !1864, size: 82944, align: 64)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 82944, align: 64, elements: !1865)
!1865 = !{!1866, !1866}
!1866 = !DISubrange(count: 36)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !1861, file: !1860, line: 40, baseType: !1868, size: 65536, align: 64, offset: 82944)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 65536, align: 64, elements: !1869)
!1869 = !{!1870, !1870}
!1870 = !DISubrange(count: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !1861, file: !1860, line: 41, baseType: !1872, size: 2048, align: 64, offset: 148480)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 2048, align: 64, elements: !1873)
!1873 = !{!1870}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "indep_count", scope: !1861, file: !1860, line: 42, baseType: !991, size: 32, align: 32, offset: 150528)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "update_lls", scope: !1861, file: !1860, line: 50, baseType: !1876, size: 64, align: 64, offset: 150592)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1879, !1792}
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_lls", scope: !1861, file: !1860, line: 57, baseType: !1881, size: 64, align: 64, offset: 150656)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64, align: 64)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!1791, !1879, !1792, !991}
!1884 = !{!1885}
!1885 = !DISubrange(count: 2)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "samplerate_index", scope: !1696, file: !961, line: 389, baseType: !991, size: 32, align: 32, offset: 307968)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1696, file: !961, line: 390, baseType: !991, size: 32, align: 32, offset: 308000)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_map", scope: !1696, file: !961, line: 391, baseType: !1086, size: 64, align: 64, offset: 308032)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "chan_map", scope: !1696, file: !961, line: 392, baseType: !1086, size: 64, align: 64, offset: 308096)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "cpe", scope: !1696, file: !961, line: 394, baseType: !1891, size: 64, align: 64, offset: 308160)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64, align: 64)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !907, line: 288, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !907, line: 275, size: 4381952, align: 256, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1903, !1904, !2036, !2049}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1893, file: !907, line: 276, baseType: !991, size: 32, align: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !1893, file: !907, line: 278, baseType: !991, size: 32, align: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !1893, file: !907, line: 279, baseType: !991, size: 32, align: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !1893, file: !907, line: 280, baseType: !1053, size: 8, align: 8, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !1893, file: !907, line: 281, baseType: !1900, size: 1024, align: 8, offset: 104)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 1024, align: 8, elements: !1901)
!1901 = !{!1902}
!1902 = !DISubrange(count: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !1893, file: !907, line: 282, baseType: !1900, size: 1024, align: 8, offset: 1128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !1893, file: !907, line: 284, baseType: !1905, size: 1187328, align: 256, offset: 2304)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 1187328, align: 256, elements: !1884)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !907, line: 270, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !907, line: 248, size: 593664, align: 256, elements: !1908)
!1908 = !{!1909, !1957, !1974, !1982, !1984, !1985, !1989, !1991, !1993, !1994, !1995, !1997, !1998, !2002, !2003, !2007, !2011, !2015, !2018, !2019, !2034}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !1907, file: !907, line: 249, baseType: !1910, size: 2432, align: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !907, line: 193, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !907, line: 174, size: 2432, align: 64, elements: !1912)
!1912 = !{!1913, !1914, !1916, !1918, !1919, !1921, !1937, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1951, !1955, !1956}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !1911, file: !907, line: 175, baseType: !1053, size: 8, align: 8)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !1911, file: !907, line: 176, baseType: !1915, size: 64, align: 32, offset: 32)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 64, align: 32, elements: !1884)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !1911, file: !907, line: 177, baseType: !1917, size: 16, align: 8, offset: 96)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 16, align: 8, elements: !1884)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !1911, file: !907, line: 178, baseType: !991, size: 32, align: 32, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !1911, file: !907, line: 179, baseType: !1920, size: 64, align: 8, offset: 160)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 64, align: 8, elements: !1126)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1911, file: !907, line: 180, baseType: !1922, size: 416, align: 32, offset: 224)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !907, line: 169, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !907, line: 163, size: 416, align: 32, elements: !1924)
!1924 = !{!1925, !1926, !1929, !1930, !1933}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1923, file: !907, line: 164, baseType: !1250, size: 8, align: 8)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !1923, file: !907, line: 165, baseType: !1927, size: 16, align: 16, offset: 16)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !951, line: 37, baseType: !1928)
!1928 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1923, file: !907, line: 166, baseType: !991, size: 32, align: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1923, file: !907, line: 167, baseType: !1931, size: 32, align: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !1932, line: 86, baseType: !954)
!1932 = !DIFile(filename: "libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1923, file: !907, line: 168, baseType: !1934, size: 320, align: 8, offset: 96)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1250, size: 320, align: 8, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 40)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !1911, file: !907, line: 181, baseType: !1938, size: 64, align: 64, offset: 640)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64, align: 64)
!1939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !1911, file: !907, line: 182, baseType: !1086, size: 64, align: 64, offset: 704)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !1911, file: !907, line: 183, baseType: !991, size: 32, align: 32, offset: 768)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1911, file: !907, line: 184, baseType: !991, size: 32, align: 32, offset: 800)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !1911, file: !907, line: 185, baseType: !991, size: 32, align: 32, offset: 832)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !1911, file: !907, line: 186, baseType: !991, size: 32, align: 32, offset: 864)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !1911, file: !907, line: 187, baseType: !991, size: 32, align: 32, offset: 896)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !1911, file: !907, line: 188, baseType: !991, size: 32, align: 32, offset: 928)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !1911, file: !907, line: 189, baseType: !1948, size: 992, align: 32, offset: 960)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 992, align: 32, elements: !1949)
!1949 = !{!1950}
!1950 = !DISubrange(count: 31)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !1911, file: !907, line: 190, baseType: !1952, size: 328, align: 8, offset: 1952)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 328, align: 8, elements: !1953)
!1953 = !{!1954}
!1954 = !DISubrange(count: 41)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !1911, file: !907, line: 191, baseType: !1920, size: 64, align: 8, offset: 2280)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !1911, file: !907, line: 192, baseType: !954, size: 32, align: 32, offset: 2368)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1907, file: !907, line: 250, baseType: !1958, size: 44320, align: 32, offset: 2432)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !907, line: 206, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !907, line: 198, size: 44320, align: 32, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1966, !1967, !1968, !1972}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1959, file: !907, line: 199, baseType: !991, size: 32, align: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !1959, file: !907, line: 200, baseType: !1129, size: 256, align: 32, offset: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1959, file: !907, line: 201, baseType: !1964, size: 1024, align: 32, offset: 288)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 1024, align: 32, elements: !1965)
!1965 = !{!1127, !1133}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1959, file: !907, line: 202, baseType: !1964, size: 1024, align: 32, offset: 1312)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1959, file: !907, line: 203, baseType: !1964, size: 1024, align: 32, offset: 2336)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1959, file: !907, line: 204, baseType: !1969, size: 20480, align: 32, offset: 3360)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 20480, align: 32, elements: !1970)
!1970 = !{!1127, !1133, !1971}
!1971 = !DISubrange(count: 20)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1959, file: !907, line: 205, baseType: !1973, size: 20480, align: 32, offset: 23840)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 20480, align: 32, elements: !1970)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !1907, file: !907, line: 251, baseType: !1975, size: 320, align: 32, offset: 46752)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !907, line: 229, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !907, line: 224, size: 320, align: 32, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !1976, file: !907, line: 225, baseType: !991, size: 32, align: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1976, file: !907, line: 226, baseType: !991, size: 32, align: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1976, file: !907, line: 227, baseType: !1135, size: 128, align: 32, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !1976, file: !907, line: 228, baseType: !1135, size: 128, align: 32, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !1907, file: !907, line: 252, baseType: !1983, size: 4096, align: 32, offset: 47072)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 4096, align: 32, elements: !1901)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !1907, file: !907, line: 253, baseType: !1983, size: 4096, align: 32, offset: 51168)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !1907, file: !907, line: 254, baseType: !1986, size: 3840, align: 32, offset: 55264)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 3840, align: 32, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 120)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1907, file: !907, line: 255, baseType: !1990, size: 3840, align: 32, offset: 59104)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 3840, align: 32, elements: !1987)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !1907, file: !907, line: 256, baseType: !1992, size: 4096, align: 32, offset: 62944)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 4096, align: 32, elements: !1901)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !1907, file: !907, line: 257, baseType: !1900, size: 1024, align: 8, offset: 67040)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !1907, file: !907, line: 258, baseType: !1900, size: 1024, align: 8, offset: 68064)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !1907, file: !907, line: 259, baseType: !1996, size: 4096, align: 32, offset: 69088)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 4096, align: 32, elements: !1901)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !1907, file: !907, line: 260, baseType: !1996, size: 4096, align: 32, offset: 73184)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !1907, file: !907, line: 261, baseType: !1999, size: 32768, align: 32, offset: 77312)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 32768, align: 32, elements: !2000)
!2000 = !{!2001}
!2001 = !DISubrange(count: 1024)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1907, file: !907, line: 262, baseType: !1999, size: 32768, align: 32, offset: 110080)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1907, file: !907, line: 263, baseType: !2004, size: 49152, align: 32, offset: 142848)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 49152, align: 32, elements: !2005)
!2005 = !{!2006}
!2006 = !DISubrange(count: 1536)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !1907, file: !907, line: 264, baseType: !2008, size: 65536, align: 32, offset: 192000)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 65536, align: 32, elements: !2009)
!2009 = !{!2010}
!2010 = !DISubrange(count: 2048)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !1907, file: !907, line: 265, baseType: !2012, size: 98304, align: 32, offset: 257536)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 98304, align: 32, elements: !2013)
!2013 = !{!2014}
!2014 = !DISubrange(count: 3072)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !1907, file: !907, line: 266, baseType: !2016, size: 32768, align: 32, offset: 355840)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 32768, align: 32, elements: !2000)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !1932, line: 90, baseType: !954)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !1907, file: !907, line: 267, baseType: !2016, size: 32768, align: 32, offset: 388608)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !1907, file: !907, line: 268, baseType: !2020, size: 172032, align: 32, offset: 421376)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2021, size: 172032, align: 32, elements: !2032)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !907, line: 144, baseType: !2022)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !907, line: 135, size: 256, align: 32, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !2022, file: !907, line: 136, baseType: !2017, size: 32, align: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !2022, file: !907, line: 137, baseType: !2017, size: 32, align: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !2022, file: !907, line: 138, baseType: !2017, size: 32, align: 32, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !2022, file: !907, line: 139, baseType: !2017, size: 32, align: 32, offset: 96)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2022, file: !907, line: 140, baseType: !2017, size: 32, align: 32, offset: 128)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2022, file: !907, line: 141, baseType: !2017, size: 32, align: 32, offset: 160)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2022, file: !907, line: 142, baseType: !2017, size: 32, align: 32, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !2022, file: !907, line: 143, baseType: !2017, size: 32, align: 32, offset: 224)
!2032 = !{!2033}
!2033 = !DISubrange(count: 672)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !1907, file: !907, line: 269, baseType: !2035, size: 64, align: 64, offset: 593408)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64, align: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !1893, file: !907, line: 286, baseType: !2037, size: 62272, align: 32, offset: 1189632)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !907, line: 243, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !907, line: 234, size: 62272, align: 32, elements: !2039)
!2039 = !{!2040, !2041, !2042, !2044, !2045, !2046}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !2038, file: !907, line: 235, baseType: !922, size: 32, align: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !2038, file: !907, line: 236, baseType: !991, size: 32, align: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2038, file: !907, line: 237, baseType: !2043, size: 256, align: 32, offset: 64)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !927, size: 256, align: 32, elements: !1126)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !2038, file: !907, line: 238, baseType: !1129, size: 256, align: 32, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !2038, file: !907, line: 239, baseType: !1129, size: 256, align: 32, offset: 576)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2038, file: !907, line: 242, baseType: !2047, size: 61440, align: 32, offset: 832)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 61440, align: 32, elements: !2048)
!2048 = !{!1831, !1988}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !1893, file: !907, line: 287, baseType: !2050, size: 3129856, align: 256, offset: 1252096)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !2051, line: 115, baseType: !2052)
!2051 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !2051, line: 139, size: 3129856, align: 256, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057, !2058, !2059, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2080, !2082, !2083, !2084, !2085, !2157, !2274, !2275, !2276, !2277, !2281, !2285, !2286, !2288, !2292, !2293, !2295, !2296, !2299, !2302, !2305, !2308, !2309, !2312, !2313, !2315, !2316, !2317, !2318, !2319, !2322, !2323, !2324, !2377}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2052, file: !2051, line: 140, baseType: !991, size: 32, align: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2052, file: !2051, line: 141, baseType: !991, size: 32, align: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !2052, file: !2051, line: 142, baseType: !991, size: 32, align: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !2052, file: !2051, line: 143, baseType: !991, size: 32, align: 32, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2052, file: !2051, line: 144, baseType: !991, size: 32, align: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !2052, file: !2051, line: 145, baseType: !2060, size: 48, align: 8, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !2051, line: 55, baseType: !2061)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !2051, line: 42, size: 48, align: 8, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2066, !2067, !2068}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !2061, file: !2051, line: 43, baseType: !1053, size: 8, align: 8)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !2061, file: !2051, line: 44, baseType: !1053, size: 8, align: 8, offset: 8)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !2061, file: !2051, line: 45, baseType: !1053, size: 8, align: 8, offset: 16)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !2061, file: !2051, line: 51, baseType: !1053, size: 8, align: 8, offset: 24)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !2061, file: !2051, line: 52, baseType: !1053, size: 8, align: 8, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !2061, file: !2051, line: 53, baseType: !1053, size: 8, align: 8, offset: 40)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !2052, file: !2051, line: 146, baseType: !991, size: 32, align: 32, offset: 224)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !2052, file: !2051, line: 151, baseType: !952, size: 32, align: 32, offset: 256)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !2052, file: !2051, line: 152, baseType: !952, size: 32, align: 32, offset: 288)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !2052, file: !2051, line: 153, baseType: !952, size: 32, align: 32, offset: 320)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !2052, file: !2051, line: 154, baseType: !952, size: 32, align: 32, offset: 352)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !2052, file: !2051, line: 156, baseType: !952, size: 32, align: 32, offset: 384)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2052, file: !2051, line: 157, baseType: !2076, size: 160, align: 32, offset: 416)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 160, align: 32, elements: !2078)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !1932, line: 91, baseType: !952)
!2078 = !{!2079}
!2079 = !DISubrange(count: 5)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !2052, file: !2051, line: 160, baseType: !2081, size: 64, align: 32, offset: 576)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 64, align: 32, elements: !1884)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2052, file: !2051, line: 162, baseType: !2081, size: 64, align: 32, offset: 640)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !2052, file: !2051, line: 163, baseType: !952, size: 32, align: 32, offset: 704)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !2052, file: !2051, line: 165, baseType: !2077, size: 32, align: 32, offset: 736)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2052, file: !2051, line: 166, baseType: !2086, size: 1407488, align: 256, offset: 768)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2087, size: 1407488, align: 256, elements: !1884)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !2051, line: 113, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !2051, line: 62, size: 703744, align: 256, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2093, !2097, !2098, !2100, !2101, !2104, !2108, !2109, !2113, !2117, !2118, !2120, !2122, !2125, !2126, !2131, !2135, !2136, !2139, !2143, !2145, !2148, !2150, !2151, !2152, !2155, !2156}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !2088, file: !2051, line: 67, baseType: !952, size: 32, align: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !2088, file: !2051, line: 68, baseType: !952, size: 32, align: 32, offset: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !2088, file: !2051, line: 69, baseType: !2077, size: 32, align: 32, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !2088, file: !2051, line: 70, baseType: !2094, size: 56, align: 8, offset: 96)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 56, align: 8, elements: !2095)
!2095 = !{!2096}
!2096 = !DISubrange(count: 7)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !2088, file: !2051, line: 71, baseType: !2077, size: 32, align: 32, offset: 160)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !2088, file: !2051, line: 72, baseType: !2099, size: 40, align: 8, offset: 192)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 40, align: 8, elements: !2078)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !2088, file: !2051, line: 73, baseType: !1917, size: 16, align: 8, offset: 232)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !2088, file: !2051, line: 74, baseType: !2102, size: 80, align: 8, offset: 248)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 80, align: 8, elements: !2103)
!2103 = !{!1885, !2079}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !2088, file: !2051, line: 75, baseType: !2105, size: 384, align: 8, offset: 328)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 384, align: 8, elements: !2106)
!2106 = !{!2107}
!2107 = !DISubrange(count: 48)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !2088, file: !2051, line: 76, baseType: !952, size: 32, align: 32, offset: 736)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !2088, file: !2051, line: 83, baseType: !2110, size: 73728, align: 32, offset: 768)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 73728, align: 32, elements: !2111)
!2111 = !{!2112}
!2112 = !DISubrange(count: 2304)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !2088, file: !2051, line: 84, baseType: !2114, size: 41984, align: 32, offset: 74496)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 41984, align: 32, elements: !2115)
!2115 = !{!2116}
!2116 = !DISubrange(count: 1312)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !2088, file: !2051, line: 85, baseType: !991, size: 32, align: 32, offset: 116480)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !2088, file: !2051, line: 87, baseType: !2119, size: 64, align: 32, offset: 116512)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 64, align: 32, elements: !1884)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !2088, file: !2051, line: 89, baseType: !2121, size: 160, align: 32, offset: 116576)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 160, align: 32, elements: !2078)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !2088, file: !2051, line: 91, baseType: !2123, size: 131072, align: 32, offset: 116736)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 131072, align: 32, elements: !2124)
!2124 = !{!1885, !1870, !1870, !1885}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !2088, file: !2051, line: 93, baseType: !991, size: 32, align: 32, offset: 247808)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !2088, file: !2051, line: 94, baseType: !2127, size: 311296, align: 32, offset: 247936)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 311296, align: 32, elements: !2128)
!2128 = !{!1885, !2129, !2130, !1885}
!2129 = !DISubrange(count: 38)
!2130 = !DISubrange(count: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !2088, file: !2051, line: 95, baseType: !2132, size: 64512, align: 32, offset: 559232)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 64512, align: 32, elements: !2133)
!2133 = !{!2134, !2107}
!2134 = !DISubrange(count: 42)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !2088, file: !2051, line: 96, baseType: !2132, size: 64512, align: 32, offset: 623744)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !2088, file: !2051, line: 97, baseType: !2137, size: 3072, align: 8, offset: 688256)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 3072, align: 8, elements: !2138)
!2138 = !{!1127, !2107}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !2088, file: !2051, line: 99, baseType: !2140, size: 2304, align: 8, offset: 691328)
!2140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 2304, align: 8, elements: !2141)
!2141 = !{!2142, !2107}
!2142 = !DISubrange(count: 6)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !2088, file: !2051, line: 100, baseType: !2144, size: 9216, align: 32, offset: 693632)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 9216, align: 32, elements: !2141)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !2088, file: !2051, line: 102, baseType: !2146, size: 120, align: 8, offset: 702848)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 120, align: 8, elements: !2147)
!2147 = !{!1824, !2079}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !2088, file: !2051, line: 103, baseType: !2149, size: 480, align: 32, offset: 702976)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 480, align: 32, elements: !2147)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !2088, file: !2051, line: 105, baseType: !1920, size: 64, align: 8, offset: 703456)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !2088, file: !2051, line: 107, baseType: !1053, size: 8, align: 8, offset: 703520)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !2088, file: !2051, line: 109, baseType: !2153, size: 24, align: 8, offset: 703528)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 24, align: 8, elements: !2154)
!2154 = !{!1824}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !2088, file: !2051, line: 110, baseType: !952, size: 32, align: 32, offset: 703552)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !2088, file: !2051, line: 111, baseType: !952, size: 32, align: 32, offset: 703584)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2052, file: !2051, line: 167, baseType: !2158, size: 1072896, align: 128, offset: 1408256)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !2159, line: 79, baseType: !2160)
!2159 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !2159, line: 41, size: 1072896, align: 128, elements: !2161)
!2161 = !{!2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2178, !2182, !2183, !2184, !2185, !2186, !2187, !2191, !2196, !2201, !2204, !2205, !2206, !2209, !2210, !2211, !2212, !2215, !2216, !2218, !2219}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2160, file: !2159, line: 42, baseType: !991, size: 32, align: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !2160, file: !2159, line: 43, baseType: !991, size: 32, align: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !2160, file: !2159, line: 44, baseType: !991, size: 32, align: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !2160, file: !2159, line: 45, baseType: !991, size: 32, align: 32, offset: 96)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !2160, file: !2159, line: 46, baseType: !991, size: 32, align: 32, offset: 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !2160, file: !2159, line: 47, baseType: !991, size: 32, align: 32, offset: 160)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !2160, file: !2159, line: 48, baseType: !991, size: 32, align: 32, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !2160, file: !2159, line: 49, baseType: !991, size: 32, align: 32, offset: 224)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !2160, file: !2159, line: 50, baseType: !991, size: 32, align: 32, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !2160, file: !2159, line: 51, baseType: !991, size: 32, align: 32, offset: 288)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !2160, file: !2159, line: 52, baseType: !991, size: 32, align: 32, offset: 320)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !2160, file: !2159, line: 53, baseType: !991, size: 32, align: 32, offset: 352)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !2160, file: !2159, line: 54, baseType: !991, size: 32, align: 32, offset: 384)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !2160, file: !2159, line: 55, baseType: !2176, size: 192, align: 32, offset: 416)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 192, align: 32, elements: !2177)
!2177 = !{!2142}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !2160, file: !2159, line: 56, baseType: !2179, size: 1360, align: 8, offset: 608)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1250, size: 1360, align: 8, elements: !2180)
!2180 = !{!2079, !2181}
!2181 = !DISubrange(count: 34)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !2160, file: !2159, line: 57, baseType: !2179, size: 1360, align: 8, offset: 1968)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !2160, file: !2159, line: 59, baseType: !2179, size: 1360, align: 8, offset: 3328)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !2160, file: !2159, line: 60, baseType: !2179, size: 1360, align: 8, offset: 4688)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !2160, file: !2159, line: 61, baseType: !991, size: 32, align: 32, offset: 6048)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !2160, file: !2159, line: 62, baseType: !991, size: 32, align: 32, offset: 6080)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !2160, file: !2159, line: 64, baseType: !2188, size: 14080, align: 32, offset: 6144)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 14080, align: 32, elements: !2189)
!2189 = !{!2079, !2190, !1885}
!2190 = !DISubrange(count: 44)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !2160, file: !2159, line: 65, baseType: !2192, size: 267904, align: 32, offset: 20224)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 267904, align: 32, elements: !2193)
!2193 = !{!2194, !2195, !1885}
!2194 = !DISubrange(count: 91)
!2195 = !DISubrange(count: 46)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !2160, file: !2159, line: 66, baseType: !2197, size: 355200, align: 32, offset: 288128)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 355200, align: 32, elements: !2198)
!2198 = !{!2199, !1824, !2200, !1885}
!2199 = !DISubrange(count: 50)
!2200 = !DISubrange(count: 37)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !2160, file: !2159, line: 67, baseType: !2202, size: 1088, align: 32, offset: 643328)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 1088, align: 32, elements: !2203)
!2203 = !{!2181}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !2160, file: !2159, line: 68, baseType: !2202, size: 1088, align: 32, offset: 644480)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !2160, file: !2159, line: 69, baseType: !2202, size: 1088, align: 32, offset: 645632)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !2160, file: !2159, line: 70, baseType: !2207, size: 13056, align: 32, offset: 646784)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 13056, align: 32, elements: !2208)
!2208 = !{!1885, !2142, !2181}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !2160, file: !2159, line: 71, baseType: !2207, size: 13056, align: 32, offset: 659840)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !2160, file: !2159, line: 72, baseType: !2207, size: 13056, align: 32, offset: 672896)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !2160, file: !2159, line: 73, baseType: !2207, size: 13056, align: 32, offset: 685952)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !2160, file: !2159, line: 74, baseType: !2213, size: 186368, align: 32, offset: 699008)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 186368, align: 32, elements: !2214)
!2214 = !{!2194, !1870, !1885}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !2160, file: !2159, line: 75, baseType: !2213, size: 186368, align: 32, offset: 885376)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !2160, file: !2159, line: 76, baseType: !2217, size: 272, align: 8, offset: 1071744)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1250, size: 272, align: 8, elements: !2203)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !2160, file: !2159, line: 77, baseType: !2217, size: 272, align: 8, offset: 1072016)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2160, file: !2159, line: 78, baseType: !2220, size: 512, align: 64, offset: 1072320)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !2221, line: 52, baseType: !2222)
!2221 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !2221, line: 32, size: 512, align: 64, elements: !2223)
!2223 = !{!2224, !2231, !2237, !2245, !2255, !2259, !2267}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !2222, file: !2221, line: 33, baseType: !2225, size: 64, align: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64, align: 64)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{null, !2035, !2228, !991}
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64, align: 64)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 64, align: 32, elements: !1884)
!2230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !2222, file: !2221, line: 34, baseType: !2232, size: 64, align: 64, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64, align: 64)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{null, !2235, !2235, !2035, !991}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64, align: 64)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 64, align: 32, elements: !1884)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !2222, file: !2221, line: 36, baseType: !2238, size: 64, align: 64, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64, align: 64)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{null, !2235, !2235, !2241, !2244, !991}
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64, align: 64)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 512, align: 32, elements: !2243)
!2243 = !{!1127, !1885}
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1259, line: 149, baseType: !1143)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !2222, file: !2221, line: 39, baseType: !2246, size: 64, align: 64, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64, align: 64)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !2249, !2252, !991, !991}
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64, align: 64)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 2048, align: 32, elements: !2251)
!2251 = !{!1870, !1885}
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64, align: 64)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 77824, align: 32, elements: !2254)
!2254 = !{!2129, !2130}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !2222, file: !2221, line: 41, baseType: !2256, size: 64, align: 64, offset: 256)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64, align: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{null, !2252, !2249, !991, !991}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !2222, file: !2221, line: 43, baseType: !2260, size: 64, align: 64, offset: 320)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64, align: 64)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{null, !2235, !2235, !2263, !2266, !2228, !2266, !1931, !991}
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64, align: 64)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 2368, align: 32, elements: !2265)
!2265 = !{!2200, !1885}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64, align: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !2222, file: !2221, line: 49, baseType: !2268, size: 128, align: 64, offset: 384)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 128, align: 64, elements: !1884)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64, align: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{null, !2235, !2235, !2272, !2272, !991}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64, align: 64)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 128, align: 32, elements: !1132)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2052, file: !2051, line: 169, baseType: !2081, size: 64, align: 32, offset: 2481152)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !2052, file: !2051, line: 171, baseType: !2077, size: 32, align: 32, offset: 2481216)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !2052, file: !2051, line: 173, baseType: !2077, size: 32, align: 32, offset: 2481248)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !2052, file: !2051, line: 175, baseType: !2278, size: 784, align: 16, offset: 2481280)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 784, align: 16, elements: !2279)
!2279 = !{!2280}
!2280 = !DISubrange(count: 49)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !2052, file: !2051, line: 177, baseType: !2282, size: 400, align: 16, offset: 2482064)
!2282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 400, align: 16, elements: !2283)
!2283 = !{!2284}
!2284 = !DISubrange(count: 25)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !2052, file: !2051, line: 179, baseType: !2278, size: 784, align: 16, offset: 2482464)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !2052, file: !2051, line: 181, baseType: !2287, size: 96, align: 16, offset: 2483248)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 96, align: 16, elements: !2177)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !2052, file: !2051, line: 183, baseType: !2289, size: 480, align: 16, offset: 2483344)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 480, align: 16, elements: !2290)
!2290 = !{!2291}
!2291 = !DISubrange(count: 30)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !2052, file: !2051, line: 184, baseType: !2077, size: 32, align: 32, offset: 2483840)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !2052, file: !2051, line: 185, baseType: !2294, size: 48, align: 8, offset: 2483872)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 48, align: 8, elements: !2177)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !2052, file: !2051, line: 186, baseType: !2294, size: 48, align: 8, offset: 2483920)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !2052, file: !2051, line: 188, baseType: !2297, size: 81920, align: 32, offset: 2483968)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 81920, align: 32, elements: !2298)
!2298 = !{!1870, !1936, !1885}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !2052, file: !2051, line: 190, baseType: !2300, size: 163840, align: 32, offset: 2565888)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 163840, align: 32, elements: !2301)
!2301 = !{!2130, !1936, !1885}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !2052, file: !2051, line: 192, baseType: !2303, size: 311296, align: 32, offset: 2729728)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 311296, align: 32, elements: !2304)
!2304 = !{!1885, !1885, !2129, !2130}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !2052, file: !2051, line: 194, baseType: !2306, size: 4096, align: 32, offset: 3041024)
!2306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 4096, align: 32, elements: !2307)
!2307 = !{!2130, !1885}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !2052, file: !2051, line: 196, baseType: !2306, size: 4096, align: 32, offset: 3045120)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !2052, file: !2051, line: 198, baseType: !2310, size: 10752, align: 32, offset: 3049216)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 10752, align: 32, elements: !2311)
!2311 = !{!2096, !2107}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !2052, file: !2051, line: 200, baseType: !2310, size: 10752, align: 32, offset: 3059968)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !2052, file: !2051, line: 202, baseType: !2314, size: 2688, align: 8, offset: 3070720)
!2314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 2688, align: 8, elements: !2311)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !2052, file: !2051, line: 204, baseType: !2310, size: 10752, align: 32, offset: 3073408)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !2052, file: !2051, line: 206, baseType: !2310, size: 10752, align: 32, offset: 3084160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !2052, file: !2051, line: 208, baseType: !2310, size: 10752, align: 32, offset: 3094912)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2052, file: !2051, line: 209, baseType: !2310, size: 10752, align: 32, offset: 3105664)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !2052, file: !2051, line: 210, baseType: !2320, size: 10240, align: 32, offset: 3116544)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 10240, align: 32, elements: !2321)
!2321 = !{!2079, !2130}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !2052, file: !2051, line: 211, baseType: !1724, size: 896, align: 64, offset: 3126784)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2052, file: !2051, line: 212, baseType: !1724, size: 896, align: 64, offset: 3127680)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2052, file: !2051, line: 213, baseType: !2325, size: 896, align: 64, offset: 3128576)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !2326, line: 45, baseType: !2327)
!2326 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !2326, line: 28, size: 896, align: 64, elements: !2328)
!2328 = !{!2329, !2333, !2337, !2338, !2339, !2343, !2347, !2351, !2358, !2362, !2372}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !2327, file: !2326, line: 29, baseType: !2330, size: 64, align: 64)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64, align: 64)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{null, !2035}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !2327, file: !2326, line: 30, baseType: !2334, size: 64, align: 64, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64, align: 64)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!2017, !2235, !991}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !2327, file: !2326, line: 31, baseType: !2330, size: 64, align: 64, offset: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !2327, file: !2326, line: 32, baseType: !2330, size: 64, align: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !2327, file: !2326, line: 33, baseType: !2340, size: 64, align: 64, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64, align: 64)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{null, !2235, !2266}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !2327, file: !2326, line: 34, baseType: !2344, size: 64, align: 64, offset: 320)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64, align: 64)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{null, !2035, !2266}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !2327, file: !2326, line: 35, baseType: !2348, size: 64, align: 64, offset: 384)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64, align: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{null, !2035, !2266, !2266}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !2327, file: !2326, line: 36, baseType: !2352, size: 64, align: 64, offset: 448)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64, align: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !2228, !2355}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64, align: 64)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 128, align: 32, elements: !2357)
!2357 = !{!1885, !1885}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !2327, file: !2326, line: 37, baseType: !2359, size: 64, align: 64, offset: 512)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64, align: 64)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{null, !2235, !2228, !2266, !2266, !1931, !991, !991}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !2327, file: !2326, line: 40, baseType: !2363, size: 64, align: 64, offset: 576)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64, align: 64)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{null, !2235, !2366, !2369, !991, !2371}
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64, align: 64)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 2560, align: 32, elements: !2368)
!2368 = !{!1936, !1885}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64, align: 64)
!2370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !951, line: 119, baseType: !1143)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !2327, file: !2326, line: 42, baseType: !2373, size: 256, align: 64, offset: 640)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 256, align: 64, elements: !1132)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64, align: 64)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{null, !2235, !2369, !2369, !991, !991, !991}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2052, file: !2051, line: 214, baseType: !2378, size: 256, align: 64, offset: 3129472)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !2051, line: 134, baseType: !2379)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !2051, line: 120, size: 256, align: 64, elements: !2380)
!2380 = !{!2381, !2525, !2531, !2537}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !2379, file: !2051, line: 121, baseType: !2382, size: 64, align: 64)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64, align: 64)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!991, !2385, !2519, !2520, !2522, !991}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64, align: 64)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !2051, line: 37, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !907, line: 293, size: 62208, align: 256, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2410, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2452, !2453, !2454, !2455, !2456, !2459, !2460, !2461, !2463, !2492, !2493, !2494, !2495, !2499, !2500, !2506, !2510, !2511, !2515}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2387, file: !907, line: 294, baseType: !1699, size: 64, align: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2387, file: !907, line: 295, baseType: !968, size: 64, align: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2387, file: !907, line: 296, baseType: !1282, size: 64, align: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !2387, file: !907, line: 298, baseType: !991, size: 32, align: 32, offset: 192)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !2387, file: !907, line: 299, baseType: !2394, size: 3808, align: 32, offset: 224)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !907, line: 222, baseType: !2395)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !907, line: 211, size: 3808, align: 32, elements: !2396)
!2396 = !{!2397, !2398, !2402, !2403, !2406, !2407, !2408, !2409}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2395, file: !907, line: 212, baseType: !991, size: 32, align: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2395, file: !907, line: 213, baseType: !2399, size: 544, align: 32, offset: 32)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 544, align: 32, elements: !2400)
!2400 = !{!2401}
!2401 = !DISubrange(count: 17)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2395, file: !907, line: 214, baseType: !2399, size: 544, align: 32, offset: 576)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2395, file: !907, line: 215, baseType: !2404, size: 2048, align: 32, offset: 1120)
!2404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 2048, align: 32, elements: !2405)
!2405 = !{!2130}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2395, file: !907, line: 216, baseType: !991, size: 32, align: 32, offset: 3168)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2395, file: !907, line: 217, baseType: !991, size: 32, align: 32, offset: 3200)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2395, file: !907, line: 218, baseType: !2399, size: 544, align: 32, offset: 3232)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2395, file: !907, line: 219, baseType: !991, size: 32, align: 32, offset: 3776)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !2387, file: !907, line: 305, baseType: !2411, size: 4096, align: 64, offset: 4032)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 4096, align: 64, elements: !2412)
!2412 = !{!1133, !1831}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !2387, file: !907, line: 306, baseType: !2411, size: 4096, align: 64, offset: 8128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !2387, file: !907, line: 307, baseType: !991, size: 32, align: 32, offset: 12224)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !2387, file: !907, line: 308, baseType: !991, size: 32, align: 32, offset: 12256)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !2387, file: !907, line: 316, baseType: !1999, size: 32768, align: 32, offset: 12288)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2387, file: !907, line: 323, baseType: !1724, size: 896, align: 64, offset: 45056)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !2387, file: !907, line: 324, baseType: !1724, size: 896, align: 64, offset: 45952)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !2387, file: !907, line: 325, baseType: !1724, size: 896, align: 64, offset: 46848)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !2387, file: !907, line: 326, baseType: !1724, size: 896, align: 64, offset: 47744)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "mdct120", scope: !2387, file: !907, line: 330, baseType: !2422, size: 64, align: 64, offset: 48640)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64, align: 64)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDCT15Context", file: !2424, line: 54, baseType: !2425)
!2424 = !DIFile(filename: "libavcodec/mdct15.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDCT15Context", file: !2424, line: 28, size: 5632, align: 256, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2438, !2442, !2446, !2451}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "fft_n", scope: !2425, file: !2424, line: 29, baseType: !991, size: 32, align: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "len2", scope: !2425, file: !2424, line: 30, baseType: !991, size: 32, align: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "len4", scope: !2425, file: !2424, line: 31, baseType: !991, size: 32, align: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2425, file: !2424, line: 32, baseType: !991, size: 32, align: 32, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_prereindex", scope: !2425, file: !2424, line: 33, baseType: !1264, size: 64, align: 64, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_postreindex", scope: !2425, file: !2424, line: 34, baseType: !1264, size: 64, align: 64, offset: 192)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ptwo_fft", scope: !2425, file: !2424, line: 36, baseType: !1724, size: 896, align: 64, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2425, file: !2424, line: 37, baseType: !1732, size: 64, align: 64, offset: 1152)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "twiddle_exptab", scope: !2425, file: !2424, line: 38, baseType: !1732, size: 64, align: 64, offset: 1216)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "exptab", scope: !2425, file: !2424, line: 40, baseType: !2437, size: 4096, align: 32, offset: 1280)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 4096, align: 32, elements: !2405)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "fft15", scope: !2425, file: !2424, line: 43, baseType: !2439, size: 64, align: 64, offset: 5376)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64, align: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{null, !1732, !1732, !1732, !2244}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "postreindex", scope: !2425, file: !2424, line: 46, baseType: !2443, size: 64, align: 64, offset: 5440)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64, align: 64)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{null, !1732, !1732, !1732, !1264, !2244}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2425, file: !2424, line: 49, baseType: !2447, size: 64, align: 64, offset: 5504)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64, align: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{null, !2450, !1779, !1780, !2244}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64, align: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2425, file: !2424, line: 52, baseType: !2447, size: 64, align: 64, offset: 5568)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "mdct480", scope: !2387, file: !907, line: 331, baseType: !2422, size: 64, align: 64, offset: 48704)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "mdct960", scope: !2387, file: !907, line: 332, baseType: !2422, size: 64, align: 64, offset: 48768)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !2387, file: !907, line: 333, baseType: !1770, size: 64, align: 64, offset: 48832)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !2387, file: !907, line: 335, baseType: !991, size: 32, align: 32, offset: 48896)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !2387, file: !907, line: 342, baseType: !2457, size: 4096, align: 64, offset: 48960)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2458, size: 4096, align: 64, elements: !2405)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64, align: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !2387, file: !907, line: 350, baseType: !991, size: 32, align: 32, offset: 53056)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !2387, file: !907, line: 351, baseType: !991, size: 32, align: 32, offset: 53088)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2387, file: !907, line: 354, baseType: !2462, size: 4096, align: 32, offset: 53248)
!2462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 4096, align: 32, elements: !1901)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !2387, file: !907, line: 356, baseType: !2464, size: 4224, align: 64, offset: 57344)
!2464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2465, size: 4224, align: 64, elements: !1884)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !907, line: 130, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !907, line: 123, size: 2112, align: 64, elements: !2467)
!2467 = !{!2468, !2485, !2488, !2489, !2490, !2491}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2466, file: !907, line: 124, baseType: !2469, size: 384, align: 32)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !2470, line: 46, baseType: !2471)
!2470 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !2470, line: 33, size: 384, align: 32, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2471, file: !2470, line: 34, baseType: !991, size: 32, align: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2471, file: !2470, line: 35, baseType: !991, size: 32, align: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2471, file: !2470, line: 36, baseType: !991, size: 32, align: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2471, file: !2470, line: 37, baseType: !991, size: 32, align: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2471, file: !2470, line: 38, baseType: !991, size: 32, align: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2471, file: !2470, line: 39, baseType: !991, size: 32, align: 32, offset: 160)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2471, file: !2470, line: 40, baseType: !991, size: 32, align: 32, offset: 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2471, file: !2470, line: 41, baseType: !991, size: 32, align: 32, offset: 224)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2471, file: !2470, line: 42, baseType: !991, size: 32, align: 32, offset: 256)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2471, file: !2470, line: 43, baseType: !991, size: 32, align: 32, offset: 288)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2471, file: !2470, line: 44, baseType: !991, size: 32, align: 32, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2471, file: !2470, line: 45, baseType: !991, size: 32, align: 32, offset: 352)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2466, file: !907, line: 125, baseType: !2486, size: 1536, align: 8, offset: 384)
!2486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 1536, align: 8, elements: !2487)
!2487 = !{!2130, !1824}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2466, file: !907, line: 126, baseType: !991, size: 32, align: 32, offset: 1920)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2466, file: !907, line: 127, baseType: !991, size: 32, align: 32, offset: 1952)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2466, file: !907, line: 128, baseType: !1050, size: 64, align: 64, offset: 1984)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2466, file: !907, line: 129, baseType: !937, size: 32, align: 32, offset: 2048)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !2387, file: !907, line: 357, baseType: !991, size: 32, align: 32, offset: 61568)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !2387, file: !907, line: 358, baseType: !991, size: 32, align: 32, offset: 61600)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !2387, file: !907, line: 360, baseType: !991, size: 32, align: 32, offset: 61632)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !2387, file: !907, line: 363, baseType: !2496, size: 64, align: 64, offset: 61696)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64, align: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !2385, !2458}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !2387, file: !907, line: 364, baseType: !2496, size: 64, align: 64, offset: 61760)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !2387, file: !907, line: 365, baseType: !2501, size: 64, align: 64, offset: 61824)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64, align: 64)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{null, !2035, !2504, !2505, !991}
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64, align: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64, align: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !2387, file: !907, line: 367, baseType: !2507, size: 64, align: 64, offset: 61888)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64, align: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2385, !2035, !2035, !2505}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !2387, file: !907, line: 369, baseType: !2496, size: 64, align: 64, offset: 61952)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !2387, file: !907, line: 370, baseType: !2512, size: 64, align: 64, offset: 62016)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64, align: 64)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !1264, !991}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !2387, file: !907, line: 371, baseType: !2516, size: 64, align: 64, offset: 62080)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64, align: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !1264, !1264, !991, !991, !991, !953}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64, align: 64)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64, align: 64)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 2560, align: 32, elements: !2368)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64, align: 64)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 65536, align: 32, elements: !2524)
!2524 = !{!1870, !1870, !1885}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !2379, file: !2051, line: 124, baseType: !2526, size: 64, align: 64, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64, align: 64)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{null, !2529, !2366, !2519, !2530, !1042}
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64, align: 64)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64, align: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !2379, file: !2051, line: 128, baseType: !2532, size: 64, align: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64, align: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!991, !2519, !2252, !2535, !2535, !2366, !991}
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64, align: 64)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 4096, align: 32, elements: !2307)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !2379, file: !2051, line: 131, baseType: !2538, size: 64, align: 64, offset: 192)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64, align: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{null, !2541, !2235, !2235, !2366, !991}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64, align: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "psy", scope: !1696, file: !961, line: 395, baseType: !2543, size: 640, align: 64, offset: 308224)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyContext", file: !2544, line: 109, baseType: !2545)
!2544 = !DIFile(filename: "libavcodec/psymodel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyContext", file: !2544, line: 89, size: 640, align: 64, elements: !2546)
!2546 = !{!2547, !2548, !2585, !2600, !2610, !2611, !2612, !2613, !2614, !2615, !2621}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2545, file: !2544, line: 90, baseType: !968, size: 64, align: 64)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !2545, file: !2544, line: 91, baseType: !2549, size: 64, align: 64, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64, align: 64)
!2550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyModel", file: !2544, line: 114, size: 320, align: 64, elements: !2552)
!2552 = !{!2553, !2554, !2559, !2574, !2581}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2551, file: !2544, line: 115, baseType: !979, size: 64, align: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2551, file: !2544, line: 116, baseType: !2555, size: 64, align: 64, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64, align: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!991, !2558}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64, align: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !2551, file: !2544, line: 129, baseType: !2560, size: 64, align: 64, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64, align: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!2563, !2558, !1780, !1780, !991, !991}
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyWindowInfo", file: !2544, line: 84, baseType: !2564)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyWindowInfo", file: !2544, line: 77, size: 768, align: 64, elements: !2565)
!2565 = !{!2566, !2568, !2569, !2570, !2571, !2573}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "window_type", scope: !2564, file: !2544, line: 78, baseType: !2567, size: 96, align: 32)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 96, align: 32, elements: !2154)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "window_shape", scope: !2564, file: !2544, line: 79, baseType: !991, size: 32, align: 32, offset: 96)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !2564, file: !2544, line: 80, baseType: !991, size: 32, align: 32, offset: 128)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !2564, file: !2544, line: 81, baseType: !1129, size: 256, align: 32, offset: 160)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "clipping", scope: !2564, file: !2544, line: 82, baseType: !2572, size: 256, align: 32, offset: 416)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 256, align: 32, elements: !1126)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "window_sizes", scope: !2564, file: !2544, line: 83, baseType: !1264, size: 64, align: 64, offset: 704)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "analyze", scope: !2551, file: !2544, line: 139, baseType: !2575, size: 64, align: 64, offset: 192)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64, align: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{null, !2558, !991, !2578, !2579}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64, align: 64)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64, align: 64)
!2580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2563)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2551, file: !2544, line: 141, baseType: !2582, size: 64, align: 64, offset: 256)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64, align: 64)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{null, !2558}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2545, file: !2544, line: 93, baseType: !2586, size: 64, align: 64, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64, align: 64)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyChannel", file: !2544, line: 63, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyChannel", file: !2544, line: 60, size: 16416, align: 32, elements: !2589)
!2589 = !{!2590, !2599}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "psy_bands", scope: !2588, file: !2544, line: 61, baseType: !2591, size: 16384, align: 32)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2592, size: 16384, align: 32, elements: !1901)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyBand", file: !2544, line: 55, baseType: !2593)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyBand", file: !2544, line: 50, size: 128, align: 32, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2598}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2593, file: !2544, line: 51, baseType: !991, size: 32, align: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2593, file: !2544, line: 52, baseType: !954, size: 32, align: 32, offset: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !2593, file: !2544, line: 53, baseType: !954, size: 32, align: 32, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2593, file: !2544, line: 54, baseType: !954, size: 32, align: 32, offset: 96)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "entropy", scope: !2588, file: !2544, line: 62, baseType: !954, size: 32, align: 32, offset: 16384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2545, file: !2544, line: 94, baseType: !2601, size: 64, align: 64, offset: 192)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64, align: 64)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyChannelGroup", file: !2544, line: 72, baseType: !2603)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyChannelGroup", file: !2544, line: 68, size: 2368, align: 64, elements: !2604)
!2604 = !{!2605, !2608, !2609}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2603, file: !2544, line: 69, baseType: !2606, size: 1280, align: 64)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2586, size: 1280, align: 64, elements: !2607)
!2607 = !{!1971}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "num_ch", scope: !2603, file: !2544, line: 70, baseType: !1053, size: 8, align: 8, offset: 1280)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "coupling", scope: !2603, file: !2544, line: 71, baseType: !1900, size: 1024, align: 8, offset: 1288)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "num_groups", scope: !2545, file: !2544, line: 95, baseType: !991, size: 32, align: 32, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !2545, file: !2544, line: 96, baseType: !991, size: 32, align: 32, offset: 288)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !2545, file: !2544, line: 98, baseType: !1190, size: 64, align: 64, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !2545, file: !2544, line: 99, baseType: !1264, size: 64, align: 64, offset: 384)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "num_lens", scope: !2545, file: !2544, line: 100, baseType: !991, size: 32, align: 32, offset: 448)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "bitres", scope: !2545, file: !2544, line: 106, baseType: !2616, size: 96, align: 32, offset: 480)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2545, file: !2544, line: 102, size: 96, align: 32, elements: !2617)
!2617 = !{!2618, !2619, !2620}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2616, file: !2544, line: 103, baseType: !991, size: 32, align: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2616, file: !2544, line: 104, baseType: !991, size: 32, align: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2616, file: !2544, line: 105, baseType: !991, size: 32, align: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "model_priv_data", scope: !2545, file: !2544, line: 108, baseType: !953, size: 64, align: 64, offset: 576)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "psypp", scope: !1696, file: !961, line: 396, baseType: !2623, size: 64, align: 64, offset: 308864)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64, align: 64)
!2624 = !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyPreprocessContext", file: !2544, line: 183, flags: DIFlagFwdDecl)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "coder", scope: !1696, file: !961, line: 397, baseType: !2626, size: 64, align: 64, offset: 308928)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "cur_channel", scope: !1696, file: !961, line: 398, baseType: !991, size: 32, align: 32, offset: 308992)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !1696, file: !961, line: 399, baseType: !991, size: 32, align: 32, offset: 309024)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !1696, file: !961, line: 400, baseType: !954, size: 32, align: 32, offset: 309056)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame_pb_count", scope: !1696, file: !961, line: 401, baseType: !991, size: 32, align: 32, offset: 309088)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_sum", scope: !1696, file: !961, line: 402, baseType: !954, size: 32, align: 32, offset: 309120)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_count", scope: !1696, file: !961, line: 403, baseType: !991, size: 32, align: 32, offset: 309152)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "cur_type", scope: !1696, file: !961, line: 404, baseType: !927, size: 32, align: 32, offset: 309184)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "afq", scope: !1696, file: !961, line: 406, baseType: !2635, size: 256, align: 64, offset: 309248)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrameQueue", file: !2636, line: 39, baseType: !2637)
!2636 = !DIFile(filename: "libavcodec/audio_frame_queue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrameQueue", file: !2636, line: 32, size: 256, align: 64, elements: !2638)
!2638 = !{!2639, !2640, !2641, !2642, !2649, !2650}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2637, file: !2636, line: 33, baseType: !968, size: 64, align: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_delay", scope: !2637, file: !2636, line: 34, baseType: !991, size: 32, align: 32, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_samples", scope: !2637, file: !2636, line: 35, baseType: !991, size: 32, align: 32, offset: 96)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2637, file: !2636, line: 36, baseType: !2643, size: 64, align: 64, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64, align: 64)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrame", file: !2636, line: 30, baseType: !2645)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrame", file: !2636, line: 27, size: 128, align: 64, elements: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2645, file: !2636, line: 28, baseType: !1142, size: 64, align: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2645, file: !2636, line: 29, baseType: !991, size: 32, align: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2637, file: !2636, line: 37, baseType: !952, size: 32, align: 32, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "frame_alloc", scope: !2637, file: !2636, line: 38, baseType: !952, size: 32, align: 32, offset: 224)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "qcoefs", scope: !1696, file: !961, line: 407, baseType: !2652, size: 3072, align: 32, offset: 309504)
!2652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 3072, align: 32, elements: !2653)
!2653 = !{!2654}
!2654 = !DISubrange(count: 96)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "scoefs", scope: !1696, file: !961, line: 408, baseType: !2656, size: 32768, align: 32, offset: 312576)
!2656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 32768, align: 32, elements: !2000)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_band_cost_cache_generation", scope: !1696, file: !961, line: 410, baseType: !1104, size: 16, align: 16, offset: 345344)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_band_cost_cache", scope: !1696, file: !961, line: 411, baseType: !2659, size: 4194304, align: 32, offset: 345376)
!2659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2660, size: 4194304, align: 32, elements: !2669)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACQuantizeBandCostCacheEntry", file: !961, line: 91, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACQuantizeBandCostCacheEntry", file: !961, line: 84, size: 128, align: 32, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !2661, file: !961, line: 85, baseType: !954, size: 32, align: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2661, file: !961, line: 86, baseType: !954, size: 32, align: 32, offset: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2661, file: !961, line: 87, baseType: !991, size: 32, align: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2661, file: !961, line: 88, baseType: !981, size: 8, align: 8, offset: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "rtz", scope: !2661, file: !961, line: 89, baseType: !981, size: 8, align: 8, offset: 104)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !2661, file: !961, line: 90, baseType: !1104, size: 16, align: 16, offset: 112)
!2669 = !{!2670, !1902}
!2670 = !DISubrange(count: 256)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "abs_pow34", scope: !1696, file: !961, line: 413, baseType: !2672, size: 64, align: 64, offset: 4539712)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64, align: 64)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{null, !1779, !1780, !1043}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "quant_bands", scope: !1696, file: !961, line: 414, baseType: !2676, size: 64, align: 64, offset: 4539776)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64, align: 64)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{null, !1264, !1780, !1780, !991, !991, !991, !1781, !1781}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1696, file: !961, line: 420, baseType: !2680, size: 64, align: 64, offset: 4539840)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1696, file: !961, line: 418, size: 64, align: 64, elements: !2681)
!2681 = !{!2682}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2680, file: !961, line: 419, baseType: !1779, size: 64, align: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "encode_window_bands_info", scope: !962, file: !961, line: 59, baseType: !2684, size: 64, align: 64, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64, align: 64)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{null, !1695, !2458, !991, !991, !1781}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_and_encode_band", scope: !962, file: !961, line: 61, baseType: !2688, size: 64, align: 64, offset: 128)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64, align: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{null, !1695, !2691, !1780, !1779, !991, !991, !991, !1781, !991}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "encode_tns_info", scope: !962, file: !961, line: 63, baseType: !2693, size: 64, align: 64, offset: 192)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64, align: 64)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{null, !1695, !2458}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "encode_ltp_info", scope: !962, file: !961, line: 64, baseType: !2697, size: 64, align: 64, offset: 256)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64, align: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !1695, !2458, !991}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "encode_main_pred", scope: !962, file: !961, line: 65, baseType: !2693, size: 64, align: 64, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_common_pred", scope: !962, file: !961, line: 66, baseType: !2702, size: 64, align: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64, align: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{null, !1695, !1891}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_common_ltp", scope: !962, file: !961, line: 67, baseType: !2702, size: 64, align: 64, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "apply_main_pred", scope: !962, file: !961, line: 68, baseType: !2693, size: 64, align: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns_filt", scope: !962, file: !961, line: 69, baseType: !2693, size: 64, align: 64, offset: 576)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !962, file: !961, line: 70, baseType: !2693, size: 64, align: 64, offset: 640)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_insert_new_frame", scope: !962, file: !961, line: 71, baseType: !2710, size: 64, align: 64, offset: 704)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64, align: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{null, !1695}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "set_special_band_scalefactors", scope: !962, file: !961, line: 72, baseType: !2693, size: 64, align: 64, offset: 768)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_pns", scope: !962, file: !961, line: 73, baseType: !2715, size: 64, align: 64, offset: 832)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64, align: 64)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{null, !1695, !968, !2458}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "mark_pns", scope: !962, file: !961, line: 74, baseType: !2715, size: 64, align: 64, offset: 896)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_tns", scope: !962, file: !961, line: 75, baseType: !2693, size: 64, align: 64, offset: 960)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_ltp", scope: !962, file: !961, line: 76, baseType: !2697, size: 64, align: 64, offset: 1024)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_ms", scope: !962, file: !961, line: 77, baseType: !2702, size: 64, align: 64, offset: 1088)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_is", scope: !962, file: !961, line: 78, baseType: !2723, size: 64, align: 64, offset: 1152)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64, align: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !1695, !968, !1891}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_pred", scope: !962, file: !961, line: 79, baseType: !2693, size: 64, align: 64, offset: 1216)
!2727 = distinct !DIGlobalVariable(name: "aac_maxval_cb", scope: !0, file: !2728, line: 128, type: !2729, isLocal: true, isDefinition: true, variable: [14 x i8]* @aac_maxval_cb)
!2728 = !DIFile(filename: "libavcodec/aacenctab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2730, size: 112, align: 8, elements: !2731)
!2730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!2731 = !{!2732}
!2732 = !DISubrange(count: 14)
!2733 = distinct !DIGlobalVariable(name: "quantize_and_encode_band_cost_rtz_arr", scope: !0, file: !2734, line: 219, type: !2735, isLocal: true, isDefinition: true, variable: [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_rtz_arr)
!2734 = !DIFile(filename: "libavcodec/aacenc_quantization.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2736, size: 1024, align: 64, elements: !1830)
!2736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2737)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64, align: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{!954, !1695, !2691, !1780, !1779, !1780, !991, !991, !991, !1781, !1781, !1264, !1779}
!2740 = distinct !DIGlobalVariable(name: "aac_cb_maxval", scope: !0, file: !2728, line: 126, type: !2741, isLocal: true, isDefinition: true, variable: [12 x i8]* @aac_cb_maxval)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 96, align: 8, elements: !2742)
!2742 = !{!2743}
!2743 = !DISubrange(count: 12)
!2744 = distinct !DIGlobalVariable(name: "aac_cb_range", scope: !0, file: !2728, line: 125, type: !2741, isLocal: true, isDefinition: true, variable: [12 x i8]* @aac_cb_range)
!2745 = distinct !DIGlobalVariable(name: "quantize_and_encode_band_cost_arr", scope: !0, file: !2734, line: 195, type: !2735, isLocal: true, isDefinition: true, variable: [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_arr)
!2746 = distinct !DIGlobalVariable(name: "aac_cb_out_map", scope: !0, file: !2728, line: 121, type: !2747, isLocal: true, isDefinition: true, variable: [15 x i8]* @aac_cb_out_map)
!2747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 120, align: 8, elements: !2748)
!2748 = !{!2749}
!2749 = !DISubrange(count: 15)
!2750 = distinct !DIGlobalVariable(name: "aac_cb_in_map", scope: !0, file: !2728, line: 123, type: !2751, isLocal: true, isDefinition: true, variable: [16 x i8]* @aac_cb_in_map)
!2751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 128, align: 8, elements: !1830)
!2752 = distinct !DIGlobalVariable(name: "run_value_bits", scope: !0, file: !2728, line: 116, type: !2753, isLocal: true, isDefinition: true, variable: [2 x i8*]* @run_value_bits)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2754, size: 128, align: 64, elements: !1884)
!2754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!2755 = distinct !DIGlobalVariable(name: "run_value_bits_long", scope: !0, file: !2728, line: 91, type: !2756, isLocal: true, isDefinition: true, variable: [64 x i8]* @run_value_bits_long)
!2756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 512, align: 8, elements: !2405)
!2757 = distinct !DIGlobalVariable(name: "run_value_bits_short", scope: !0, file: !2728, line: 99, type: !2751, isLocal: true, isDefinition: true, variable: [16 x i8]* @run_value_bits_short)
!2758 = !{i32 2, !"Dwarf Version", i32 4}
!2759 = !{i32 2, !"Debug Info Version", i32 3}
!2760 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2761 = distinct !DISubprogram(name: "search_for_quantizers_anmr", scope: !957, file: !957, line: 235, type: !2762, isLocal: true, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{null, !968, !2764, !2458, !1781}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64, align: 64)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACEncContext", file: !961, line: 421, baseType: !1696)
!2766 = !{}
!2767 = !DILocalVariable(name: "a", arg: 1, scope: !2768, file: !2769, line: 127, type: !991)
!2768 = distinct !DISubprogram(name: "av_clip_c", scope: !2769, file: !2769, line: 127, type: !2770, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!2769 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!991, !991, !991, !991}
!2772 = !DIExpression()
!2773 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2774)
!2774 = distinct !DILocation(line: 288, column: 14, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !957, line: 285, column: 19)
!2776 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 285, column: 9)
!2777 = !DILocalVariable(name: "amin", arg: 2, scope: !2768, file: !2769, line: 127, type: !991)
!2778 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2774)
!2779 = !DILocalVariable(name: "amax", arg: 3, scope: !2768, file: !2769, line: 127, type: !991)
!2780 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2774)
!2781 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2782)
!2782 = distinct !DILocation(line: 336, column: 28, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2784, file: !957, line: 328, column: 21)
!2784 = distinct !DILexicalBlock(scope: !2785, file: !957, line: 328, column: 17)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !957, line: 305, column: 48)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !957, line: 305, column: 9)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !957, line: 305, column: 9)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !957, line: 303, column: 71)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !957, line: 303, column: 5)
!2790 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 303, column: 5)
!2791 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2782)
!2792 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2782)
!2793 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2794)
!2794 = distinct !DILocation(line: 337, column: 28, scope: !2783)
!2795 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2794)
!2796 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2794)
!2797 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2798)
!2798 = distinct !DILocation(line: 339, column: 32, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !957, line: 338, column: 43)
!2800 = distinct !DILexicalBlock(scope: !2783, file: !957, line: 338, column: 21)
!2801 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2798)
!2802 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2798)
!2803 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2804)
!2804 = distinct !DILocation(line: 340, column: 32, scope: !2799)
!2805 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2804)
!2806 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2804)
!2807 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2808)
!2808 = distinct !DILocation(line: 287, column: 14, scope: !2775)
!2809 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2808)
!2810 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2808)
!2811 = !DILocalVariable(name: "a", arg: 1, scope: !2812, file: !2769, line: 159, type: !991)
!2812 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !2769, file: !2769, line: 159, type: !2813, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!1053, !991}
!2815 = !DILocation(line: 159, column: 97, scope: !2812, inlinedAt: !2816)
!2816 = distinct !DILocation(line: 273, column: 20, scope: !2817)
!2817 = !DILexicalBlockFile(scope: !2818, file: !957, discriminator: 2)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !957, line: 269, column: 23)
!2819 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 269, column: 9)
!2820 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2821)
!2821 = distinct !DILocation(line: 268, column: 10, scope: !2822)
!2822 = !DILexicalBlockFile(scope: !2761, file: !957, discriminator: 1)
!2823 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2821)
!2824 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2821)
!2825 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !2826)
!2826 = distinct !DILocation(line: 266, column: 10, scope: !2822)
!2827 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !2826)
!2828 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !2826)
!2829 = !DILocalVariable(name: "avctx", arg: 1, scope: !2761, file: !957, line: 235, type: !968)
!2830 = !DILocation(line: 235, column: 56, scope: !2761)
!2831 = !DILocalVariable(name: "s", arg: 2, scope: !2761, file: !957, line: 235, type: !2764)
!2832 = !DILocation(line: 235, column: 78, scope: !2761)
!2833 = !DILocalVariable(name: "sce", arg: 3, scope: !2761, file: !957, line: 236, type: !2458)
!2834 = !DILocation(line: 236, column: 62, scope: !2761)
!2835 = !DILocalVariable(name: "lambda", arg: 4, scope: !2761, file: !957, line: 237, type: !1781)
!2836 = !DILocation(line: 237, column: 52, scope: !2761)
!2837 = !DILocalVariable(name: "q", scope: !2761, file: !957, line: 239, type: !991)
!2838 = !DILocation(line: 239, column: 9, scope: !2761)
!2839 = !DILocalVariable(name: "w", scope: !2761, file: !957, line: 239, type: !991)
!2840 = !DILocation(line: 239, column: 12, scope: !2761)
!2841 = !DILocalVariable(name: "w2", scope: !2761, file: !957, line: 239, type: !991)
!2842 = !DILocation(line: 239, column: 15, scope: !2761)
!2843 = !DILocalVariable(name: "g", scope: !2761, file: !957, line: 239, type: !991)
!2844 = !DILocation(line: 239, column: 19, scope: !2761)
!2845 = !DILocalVariable(name: "start", scope: !2761, file: !957, line: 239, type: !991)
!2846 = !DILocation(line: 239, column: 22, scope: !2761)
!2847 = !DILocalVariable(name: "i", scope: !2761, file: !957, line: 240, type: !991)
!2848 = !DILocation(line: 240, column: 9, scope: !2761)
!2849 = !DILocalVariable(name: "j", scope: !2761, file: !957, line: 240, type: !991)
!2850 = !DILocation(line: 240, column: 12, scope: !2761)
!2851 = !DILocalVariable(name: "idx", scope: !2761, file: !957, line: 241, type: !991)
!2852 = !DILocation(line: 241, column: 9, scope: !2761)
!2853 = !DILocalVariable(name: "paths", scope: !2761, file: !957, line: 242, type: !2854)
!2854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2855, size: 472384, align: 32, elements: !2860)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "TrellisPath", file: !957, line: 191, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TrellisPath", file: !957, line: 188, size: 64, align: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2856, file: !957, line: 189, baseType: !954, size: 32, align: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2856, file: !957, line: 190, baseType: !991, size: 32, align: 32, offset: 32)
!2860 = !{!2861, !2862}
!2861 = !DISubrange(count: 121)
!2862 = !DISubrange(count: 61)
!2863 = !DILocation(line: 242, column: 17, scope: !2761)
!2864 = !DILocalVariable(name: "bandaddr", scope: !2761, file: !957, line: 243, type: !2865)
!2865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 3872, align: 32, elements: !2866)
!2866 = !{!2861}
!2867 = !DILocation(line: 243, column: 9, scope: !2761)
!2868 = !DILocalVariable(name: "minq", scope: !2761, file: !957, line: 244, type: !991)
!2869 = !DILocation(line: 244, column: 9, scope: !2761)
!2870 = !DILocalVariable(name: "mincost", scope: !2761, file: !957, line: 245, type: !954)
!2871 = !DILocation(line: 245, column: 11, scope: !2761)
!2872 = !DILocalVariable(name: "q0f", scope: !2761, file: !957, line: 246, type: !954)
!2873 = !DILocation(line: 246, column: 11, scope: !2761)
!2874 = !DILocalVariable(name: "q1f", scope: !2761, file: !957, line: 246, type: !954)
!2875 = !DILocation(line: 246, column: 46, scope: !2761)
!2876 = !DILocalVariable(name: "qnrgf", scope: !2761, file: !957, line: 246, type: !954)
!2877 = !DILocation(line: 246, column: 58, scope: !2761)
!2878 = !DILocalVariable(name: "q0", scope: !2761, file: !957, line: 247, type: !991)
!2879 = !DILocation(line: 247, column: 9, scope: !2761)
!2880 = !DILocalVariable(name: "q1", scope: !2761, file: !957, line: 247, type: !991)
!2881 = !DILocation(line: 247, column: 13, scope: !2761)
!2882 = !DILocalVariable(name: "qcnt", scope: !2761, file: !957, line: 247, type: !991)
!2883 = !DILocation(line: 247, column: 17, scope: !2761)
!2884 = !DILocation(line: 249, column: 12, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 249, column: 5)
!2886 = !DILocation(line: 249, column: 10, scope: !2885)
!2887 = !DILocation(line: 249, column: 17, scope: !2888)
!2888 = !DILexicalBlockFile(scope: !2889, file: !957, discriminator: 1)
!2889 = distinct !DILexicalBlock(scope: !2885, file: !957, line: 249, column: 5)
!2890 = !DILocation(line: 249, column: 19, scope: !2888)
!2891 = !DILocation(line: 249, column: 5, scope: !2888)
!2892 = !DILocalVariable(name: "t", scope: !2893, file: !957, line: 250, type: !954)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !957, line: 249, column: 32)
!2894 = !DILocation(line: 250, column: 15, scope: !2893)
!2895 = !DILocation(line: 250, column: 37, scope: !2893)
!2896 = !DILocation(line: 250, column: 25, scope: !2893)
!2897 = !DILocation(line: 250, column: 30, scope: !2893)
!2898 = !DILocation(line: 250, column: 19, scope: !2893)
!2899 = !DILocation(line: 251, column: 13, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2893, file: !957, line: 251, column: 13)
!2901 = !DILocation(line: 251, column: 15, scope: !2900)
!2902 = !DILocation(line: 251, column: 13, scope: !2893)
!2903 = !DILocation(line: 252, column: 21, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2900, file: !957, line: 251, column: 23)
!2905 = !DILocation(line: 252, column: 29, scope: !2904)
!2906 = !DILocation(line: 252, column: 26, scope: !2904)
!2907 = !DILocation(line: 252, column: 20, scope: !2904)
!2908 = !DILocation(line: 252, column: 35, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2904, file: !957, discriminator: 1)
!2910 = !DILocation(line: 252, column: 20, scope: !2909)
!2911 = !DILocation(line: 252, column: 41, scope: !2912)
!2912 = !DILexicalBlockFile(scope: !2904, file: !957, discriminator: 2)
!2913 = !DILocation(line: 252, column: 20, scope: !2912)
!2914 = !DILocation(line: 252, column: 20, scope: !2915)
!2915 = !DILexicalBlockFile(scope: !2904, file: !957, discriminator: 3)
!2916 = !DILocation(line: 252, column: 17, scope: !2915)
!2917 = !DILocation(line: 253, column: 21, scope: !2904)
!2918 = !DILocation(line: 253, column: 29, scope: !2904)
!2919 = !DILocation(line: 253, column: 26, scope: !2904)
!2920 = !DILocation(line: 253, column: 20, scope: !2904)
!2921 = !DILocation(line: 253, column: 35, scope: !2909)
!2922 = !DILocation(line: 253, column: 20, scope: !2909)
!2923 = !DILocation(line: 253, column: 43, scope: !2912)
!2924 = !DILocation(line: 253, column: 20, scope: !2912)
!2925 = !DILocation(line: 253, column: 20, scope: !2915)
!2926 = !DILocation(line: 253, column: 17, scope: !2915)
!2927 = !DILocation(line: 254, column: 22, scope: !2904)
!2928 = !DILocation(line: 254, column: 24, scope: !2904)
!2929 = !DILocation(line: 254, column: 23, scope: !2904)
!2930 = !DILocation(line: 254, column: 19, scope: !2904)
!2931 = !DILocation(line: 255, column: 17, scope: !2904)
!2932 = !DILocation(line: 256, column: 9, scope: !2904)
!2933 = !DILocation(line: 257, column: 5, scope: !2893)
!2934 = !DILocation(line: 249, column: 28, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2889, file: !957, discriminator: 2)
!2936 = !DILocation(line: 249, column: 5, scope: !2935)
!2937 = distinct !{!2937, !2938}
!2938 = !DILocation(line: 249, column: 5, scope: !2761)
!2939 = !DILocation(line: 259, column: 10, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 259, column: 9)
!2941 = !DILocation(line: 259, column: 9, scope: !2761)
!2942 = !DILocation(line: 260, column: 16, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2940, file: !957, line: 259, column: 16)
!2944 = !DILocation(line: 260, column: 21, scope: !2943)
!2945 = !DILocation(line: 260, column: 9, scope: !2943)
!2946 = !DILocation(line: 261, column: 16, scope: !2943)
!2947 = !DILocation(line: 261, column: 21, scope: !2943)
!2948 = !DILocation(line: 261, column: 9, scope: !2943)
!2949 = !DILocation(line: 262, column: 9, scope: !2943)
!2950 = !DILocation(line: 266, column: 31, scope: !2761)
!2951 = !DILocation(line: 266, column: 20, scope: !2761)
!2952 = !DILocation(line: 266, column: 10, scope: !2822)
!2953 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2826)
!2954 = distinct !DILexicalBlock(scope: !2768, file: !2769, line: 132, column: 9)
!2955 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2826)
!2956 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2826)
!2957 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2826)
!2958 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2826)
!2959 = !DILexicalBlockFile(scope: !2954, file: !2769, discriminator: 1)
!2960 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2826)
!2961 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2826)
!2962 = distinct !DILexicalBlock(scope: !2954, file: !2769, line: 133, column: 14)
!2963 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2826)
!2964 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2826)
!2965 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2826)
!2966 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2826)
!2967 = !DILexicalBlockFile(scope: !2962, file: !2769, discriminator: 1)
!2968 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2826)
!2969 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2826)
!2970 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2826)
!2971 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2826)
!2972 = !DILocation(line: 266, column: 8, scope: !2761)
!2973 = !DILocation(line: 268, column: 31, scope: !2761)
!2974 = !DILocation(line: 268, column: 20, scope: !2761)
!2975 = !DILocation(line: 268, column: 10, scope: !2822)
!2976 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2821)
!2977 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2821)
!2978 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2821)
!2979 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2821)
!2980 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2821)
!2981 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2821)
!2982 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2821)
!2983 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2821)
!2984 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2821)
!2985 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2821)
!2986 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2821)
!2987 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2821)
!2988 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2821)
!2989 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2821)
!2990 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2821)
!2991 = !DILocation(line: 268, column: 8, scope: !2761)
!2992 = !DILocation(line: 269, column: 9, scope: !2819)
!2993 = !DILocation(line: 269, column: 14, scope: !2819)
!2994 = !DILocation(line: 269, column: 12, scope: !2819)
!2995 = !DILocation(line: 269, column: 17, scope: !2819)
!2996 = !DILocation(line: 269, column: 9, scope: !2761)
!2997 = !DILocalVariable(name: "q0low", scope: !2818, file: !957, line: 270, type: !991)
!2998 = !DILocation(line: 270, column: 13, scope: !2818)
!2999 = !DILocation(line: 270, column: 21, scope: !2818)
!3000 = !DILocalVariable(name: "q1high", scope: !2818, file: !957, line: 271, type: !991)
!3001 = !DILocation(line: 271, column: 13, scope: !2818)
!3002 = !DILocation(line: 271, column: 22, scope: !2818)
!3003 = !DILocalVariable(name: "qnrg", scope: !2818, file: !957, line: 273, type: !991)
!3004 = !DILocation(line: 273, column: 13, scope: !2818)
!3005 = !DILocation(line: 273, column: 48, scope: !2818)
!3006 = !DILocation(line: 273, column: 54, scope: !2818)
!3007 = !DILocation(line: 273, column: 53, scope: !2818)
!3008 = !DILocation(line: 273, column: 42, scope: !2818)
!3009 = !DILocation(line: 273, column: 36, scope: !3010)
!3010 = !DILexicalBlockFile(scope: !2818, file: !957, discriminator: 1)
!3011 = !DILocation(line: 273, column: 60, scope: !2818)
!3012 = !DILocation(line: 273, column: 63, scope: !2818)
!3013 = !DILocation(line: 273, column: 68, scope: !2818)
!3014 = !DILocation(line: 273, column: 74, scope: !2818)
!3015 = !DILocation(line: 273, column: 36, scope: !2818)
!3016 = !DILocation(line: 273, column: 20, scope: !2817)
!3017 = !DILocation(line: 161, column: 9, scope: !3018, inlinedAt: !2816)
!3018 = distinct !DILexicalBlock(scope: !2812, file: !2769, line: 161, column: 9)
!3019 = !DILocation(line: 161, column: 10, scope: !3018, inlinedAt: !2816)
!3020 = !DILocation(line: 161, column: 9, scope: !2812, inlinedAt: !2816)
!3021 = !DILocation(line: 161, column: 29, scope: !3022, inlinedAt: !2816)
!3022 = !DILexicalBlockFile(scope: !3018, file: !2769, discriminator: 1)
!3023 = !DILocation(line: 161, column: 28, scope: !3022, inlinedAt: !2816)
!3024 = !DILocation(line: 161, column: 31, scope: !3022, inlinedAt: !2816)
!3025 = !DILocation(line: 161, column: 27, scope: !3022, inlinedAt: !2816)
!3026 = !DILocation(line: 161, column: 20, scope: !3022, inlinedAt: !2816)
!3027 = !DILocation(line: 162, column: 17, scope: !3018, inlinedAt: !2816)
!3028 = !DILocation(line: 162, column: 10, scope: !3018, inlinedAt: !2816)
!3029 = !DILocation(line: 163, column: 1, scope: !2812, inlinedAt: !2816)
!3030 = !DILocation(line: 273, column: 20, scope: !2818)
!3031 = !DILocation(line: 274, column: 14, scope: !2818)
!3032 = !DILocation(line: 274, column: 19, scope: !2818)
!3033 = !DILocation(line: 274, column: 12, scope: !2818)
!3034 = !DILocation(line: 275, column: 14, scope: !2818)
!3035 = !DILocation(line: 275, column: 19, scope: !2818)
!3036 = !DILocation(line: 275, column: 12, scope: !2818)
!3037 = !DILocation(line: 276, column: 13, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2818, file: !957, line: 276, column: 13)
!3039 = !DILocation(line: 276, column: 18, scope: !3038)
!3040 = !DILocation(line: 276, column: 16, scope: !3038)
!3041 = !DILocation(line: 276, column: 13, scope: !2818)
!3042 = !DILocation(line: 277, column: 19, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3038, file: !957, line: 276, column: 25)
!3044 = !DILocation(line: 277, column: 27, scope: !3043)
!3045 = !DILocation(line: 277, column: 25, scope: !3043)
!3046 = !DILocation(line: 277, column: 16, scope: !3043)
!3047 = !DILocation(line: 278, column: 18, scope: !3043)
!3048 = !DILocation(line: 278, column: 16, scope: !3043)
!3049 = !DILocation(line: 279, column: 9, scope: !3043)
!3050 = !DILocation(line: 279, column: 20, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3052, file: !957, discriminator: 1)
!3052 = distinct !DILexicalBlock(scope: !3038, file: !957, line: 279, column: 20)
!3053 = !DILocation(line: 279, column: 25, scope: !3051)
!3054 = !DILocation(line: 279, column: 23, scope: !3051)
!3055 = !DILocation(line: 280, column: 19, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3052, file: !957, line: 279, column: 33)
!3057 = !DILocation(line: 280, column: 24, scope: !3056)
!3058 = !DILocation(line: 280, column: 22, scope: !3056)
!3059 = !DILocation(line: 280, column: 16, scope: !3056)
!3060 = !DILocation(line: 281, column: 18, scope: !3056)
!3061 = !DILocation(line: 281, column: 16, scope: !3056)
!3062 = !DILocation(line: 282, column: 9, scope: !3056)
!3063 = !DILocation(line: 283, column: 5, scope: !2818)
!3064 = !DILocation(line: 285, column: 9, scope: !2776)
!3065 = !DILocation(line: 285, column: 15, scope: !2776)
!3066 = !DILocation(line: 285, column: 12, scope: !2776)
!3067 = !DILocation(line: 285, column: 9, scope: !2761)
!3068 = !DILocation(line: 287, column: 24, scope: !2775)
!3069 = !DILocation(line: 287, column: 26, scope: !2775)
!3070 = !DILocation(line: 287, column: 14, scope: !2775)
!3071 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2808)
!3072 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2808)
!3073 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2808)
!3074 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2808)
!3075 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2808)
!3076 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2808)
!3077 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2808)
!3078 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2808)
!3079 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2808)
!3080 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2808)
!3081 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2808)
!3082 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2808)
!3083 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2808)
!3084 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2808)
!3085 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2808)
!3086 = !DILocation(line: 287, column: 12, scope: !2775)
!3087 = !DILocation(line: 288, column: 24, scope: !2775)
!3088 = !DILocation(line: 288, column: 26, scope: !2775)
!3089 = !DILocation(line: 288, column: 14, scope: !2775)
!3090 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2774)
!3091 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2774)
!3092 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2774)
!3093 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2774)
!3094 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2774)
!3095 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2774)
!3096 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2774)
!3097 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2774)
!3098 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2774)
!3099 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2774)
!3100 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2774)
!3101 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2774)
!3102 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2774)
!3103 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2774)
!3104 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2774)
!3105 = !DILocation(line: 288, column: 12, scope: !2775)
!3106 = !DILocation(line: 289, column: 5, scope: !2775)
!3107 = !DILocation(line: 291, column: 12, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 291, column: 5)
!3109 = !DILocation(line: 291, column: 10, scope: !3108)
!3110 = !DILocation(line: 291, column: 17, scope: !3111)
!3111 = !DILexicalBlockFile(scope: !3112, file: !957, discriminator: 1)
!3112 = distinct !DILexicalBlock(scope: !3108, file: !957, line: 291, column: 5)
!3113 = !DILocation(line: 291, column: 19, scope: !3111)
!3114 = !DILocation(line: 291, column: 5, scope: !3111)
!3115 = !DILocation(line: 292, column: 18, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3112, file: !957, line: 291, column: 35)
!3117 = !DILocation(line: 292, column: 9, scope: !3116)
!3118 = !DILocation(line: 292, column: 21, scope: !3116)
!3119 = !DILocation(line: 292, column: 26, scope: !3116)
!3120 = !DILocation(line: 293, column: 18, scope: !3116)
!3121 = !DILocation(line: 293, column: 9, scope: !3116)
!3122 = !DILocation(line: 293, column: 21, scope: !3116)
!3123 = !DILocation(line: 293, column: 26, scope: !3116)
!3124 = !DILocation(line: 294, column: 5, scope: !3116)
!3125 = !DILocation(line: 291, column: 31, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !3112, file: !957, discriminator: 2)
!3127 = !DILocation(line: 291, column: 5, scope: !3126)
!3128 = distinct !{!3128, !3129}
!3129 = !DILocation(line: 291, column: 5, scope: !2761)
!3130 = !DILocation(line: 295, column: 12, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 295, column: 5)
!3132 = !DILocation(line: 295, column: 10, scope: !3131)
!3133 = !DILocation(line: 295, column: 17, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !3135, file: !957, discriminator: 1)
!3135 = distinct !DILexicalBlock(scope: !3131, file: !957, line: 295, column: 5)
!3136 = !DILocation(line: 295, column: 19, scope: !3134)
!3137 = !DILocation(line: 295, column: 5, scope: !3134)
!3138 = !DILocation(line: 296, column: 16, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !957, line: 296, column: 9)
!3140 = distinct !DILexicalBlock(scope: !3135, file: !957, line: 295, column: 31)
!3141 = !DILocation(line: 296, column: 14, scope: !3139)
!3142 = !DILocation(line: 296, column: 21, scope: !3143)
!3143 = !DILexicalBlockFile(scope: !3144, file: !957, discriminator: 1)
!3144 = distinct !DILexicalBlock(scope: !3139, file: !957, line: 296, column: 9)
!3145 = !DILocation(line: 296, column: 23, scope: !3143)
!3146 = !DILocation(line: 296, column: 9, scope: !3143)
!3147 = !DILocation(line: 297, column: 22, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3144, file: !957, line: 296, column: 39)
!3149 = !DILocation(line: 297, column: 13, scope: !3148)
!3150 = !DILocation(line: 297, column: 19, scope: !3148)
!3151 = !DILocation(line: 297, column: 25, scope: !3148)
!3152 = !DILocation(line: 297, column: 30, scope: !3148)
!3153 = !DILocation(line: 298, column: 22, scope: !3148)
!3154 = !DILocation(line: 298, column: 13, scope: !3148)
!3155 = !DILocation(line: 298, column: 19, scope: !3148)
!3156 = !DILocation(line: 298, column: 25, scope: !3148)
!3157 = !DILocation(line: 298, column: 30, scope: !3148)
!3158 = !DILocation(line: 299, column: 9, scope: !3148)
!3159 = !DILocation(line: 296, column: 35, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !3144, file: !957, discriminator: 2)
!3161 = !DILocation(line: 296, column: 9, scope: !3160)
!3162 = distinct !{!3162, !3163}
!3163 = !DILocation(line: 296, column: 9, scope: !3140)
!3164 = !DILocation(line: 300, column: 5, scope: !3140)
!3165 = !DILocation(line: 295, column: 27, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3135, file: !957, discriminator: 2)
!3167 = !DILocation(line: 295, column: 5, scope: !3166)
!3168 = distinct !{!3168, !3169}
!3169 = !DILocation(line: 295, column: 5, scope: !2761)
!3170 = !DILocation(line: 301, column: 9, scope: !2761)
!3171 = !DILocation(line: 302, column: 5, scope: !2761)
!3172 = !DILocation(line: 302, column: 8, scope: !2761)
!3173 = !DILocation(line: 302, column: 18, scope: !2761)
!3174 = !DILocation(line: 302, column: 21, scope: !2761)
!3175 = !DILocation(line: 302, column: 29, scope: !2761)
!3176 = !DILocation(line: 302, column: 34, scope: !2761)
!3177 = !DILocation(line: 303, column: 12, scope: !2790)
!3178 = !DILocation(line: 303, column: 10, scope: !2790)
!3179 = !DILocation(line: 303, column: 17, scope: !3180)
!3180 = !DILexicalBlockFile(scope: !2789, file: !957, discriminator: 1)
!3181 = !DILocation(line: 303, column: 21, scope: !3180)
!3182 = !DILocation(line: 303, column: 26, scope: !3180)
!3183 = !DILocation(line: 303, column: 30, scope: !3180)
!3184 = !DILocation(line: 303, column: 19, scope: !3180)
!3185 = !DILocation(line: 303, column: 5, scope: !3180)
!3186 = !DILocation(line: 304, column: 17, scope: !2788)
!3187 = !DILocation(line: 304, column: 18, scope: !2788)
!3188 = !DILocation(line: 304, column: 15, scope: !2788)
!3189 = !DILocation(line: 305, column: 16, scope: !2787)
!3190 = !DILocation(line: 305, column: 14, scope: !2787)
!3191 = !DILocation(line: 305, column: 21, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !2786, file: !957, discriminator: 1)
!3193 = !DILocation(line: 305, column: 25, scope: !3192)
!3194 = !DILocation(line: 305, column: 30, scope: !3192)
!3195 = !DILocation(line: 305, column: 34, scope: !3192)
!3196 = !DILocation(line: 305, column: 23, scope: !3192)
!3197 = !DILocation(line: 305, column: 9, scope: !3192)
!3198 = !DILocalVariable(name: "coefs", scope: !2785, file: !957, line: 306, type: !1780)
!3199 = !DILocation(line: 306, column: 26, scope: !2785)
!3200 = !DILocation(line: 306, column: 47, scope: !2785)
!3201 = !DILocation(line: 306, column: 35, scope: !2785)
!3202 = !DILocation(line: 306, column: 40, scope: !2785)
!3203 = !DILocalVariable(name: "qmin", scope: !2785, file: !957, line: 307, type: !954)
!3204 = !DILocation(line: 307, column: 19, scope: !2785)
!3205 = !DILocalVariable(name: "qmax", scope: !2785, file: !957, line: 307, type: !954)
!3206 = !DILocation(line: 307, column: 25, scope: !2785)
!3207 = !DILocalVariable(name: "nz", scope: !2785, file: !957, line: 308, type: !991)
!3208 = !DILocation(line: 308, column: 17, scope: !2785)
!3209 = !DILocation(line: 310, column: 29, scope: !2785)
!3210 = !DILocation(line: 310, column: 31, scope: !2785)
!3211 = !DILocation(line: 310, column: 38, scope: !2785)
!3212 = !DILocation(line: 310, column: 36, scope: !2785)
!3213 = !DILocation(line: 310, column: 22, scope: !2785)
!3214 = !DILocation(line: 310, column: 13, scope: !2785)
!3215 = !DILocation(line: 310, column: 27, scope: !2785)
!3216 = !DILocation(line: 311, column: 18, scope: !2785)
!3217 = !DILocation(line: 312, column: 18, scope: !2785)
!3218 = !DILocation(line: 313, column: 21, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !2785, file: !957, line: 313, column: 13)
!3220 = !DILocation(line: 313, column: 18, scope: !3219)
!3221 = !DILocation(line: 313, column: 26, scope: !3222)
!3222 = !DILexicalBlockFile(scope: !3223, file: !957, discriminator: 1)
!3223 = distinct !DILexicalBlock(scope: !3219, file: !957, line: 313, column: 13)
!3224 = !DILocation(line: 313, column: 50, scope: !3222)
!3225 = !DILocation(line: 313, column: 31, scope: !3222)
!3226 = !DILocation(line: 313, column: 36, scope: !3222)
!3227 = !DILocation(line: 313, column: 40, scope: !3222)
!3228 = !DILocation(line: 313, column: 29, scope: !3222)
!3229 = !DILocation(line: 313, column: 13, scope: !3222)
!3230 = !DILocalVariable(name: "band", scope: !3231, file: !957, line: 314, type: !3232)
!3231 = distinct !DILexicalBlock(scope: !3223, file: !957, line: 313, column: 60)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64, align: 64)
!3233 = !DILocation(line: 314, column: 28, scope: !3231)
!3234 = !DILocation(line: 314, column: 73, scope: !3231)
!3235 = !DILocation(line: 314, column: 75, scope: !3231)
!3236 = !DILocation(line: 314, column: 74, scope: !3231)
!3237 = !DILocation(line: 314, column: 78, scope: !3231)
!3238 = !DILocation(line: 314, column: 82, scope: !3231)
!3239 = !DILocation(line: 314, column: 81, scope: !3231)
!3240 = !DILocation(line: 314, column: 36, scope: !3231)
!3241 = !DILocation(line: 314, column: 46, scope: !3231)
!3242 = !DILocation(line: 314, column: 49, scope: !3231)
!3243 = !DILocation(line: 314, column: 39, scope: !3231)
!3244 = !DILocation(line: 314, column: 43, scope: !3231)
!3245 = !DILocation(line: 314, column: 62, scope: !3231)
!3246 = !DILocation(line: 315, column: 21, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3231, file: !957, line: 315, column: 21)
!3248 = !DILocation(line: 315, column: 27, scope: !3247)
!3249 = !DILocation(line: 315, column: 37, scope: !3247)
!3250 = !DILocation(line: 315, column: 43, scope: !3247)
!3251 = !DILocation(line: 315, column: 34, scope: !3247)
!3252 = !DILocation(line: 315, column: 53, scope: !3247)
!3253 = !DILocation(line: 315, column: 56, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3247, file: !957, discriminator: 1)
!3255 = !DILocation(line: 315, column: 62, scope: !3254)
!3256 = !DILocation(line: 315, column: 72, scope: !3254)
!3257 = !DILocation(line: 315, column: 21, scope: !3254)
!3258 = !DILocation(line: 316, column: 34, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3247, file: !957, line: 315, column: 81)
!3260 = !DILocation(line: 316, column: 36, scope: !3259)
!3261 = !DILocation(line: 316, column: 35, scope: !3259)
!3262 = !DILocation(line: 316, column: 39, scope: !3259)
!3263 = !DILocation(line: 316, column: 43, scope: !3259)
!3264 = !DILocation(line: 316, column: 42, scope: !3259)
!3265 = !DILocation(line: 316, column: 21, scope: !3259)
!3266 = !DILocation(line: 316, column: 26, scope: !3259)
!3267 = !DILocation(line: 316, column: 46, scope: !3259)
!3268 = !DILocation(line: 317, column: 21, scope: !3259)
!3269 = !DILocation(line: 319, column: 30, scope: !3231)
!3270 = !DILocation(line: 319, column: 32, scope: !3231)
!3271 = !DILocation(line: 319, column: 31, scope: !3231)
!3272 = !DILocation(line: 319, column: 35, scope: !3231)
!3273 = !DILocation(line: 319, column: 39, scope: !3231)
!3274 = !DILocation(line: 319, column: 38, scope: !3231)
!3275 = !DILocation(line: 319, column: 17, scope: !3231)
!3276 = !DILocation(line: 319, column: 22, scope: !3231)
!3277 = !DILocation(line: 319, column: 42, scope: !3231)
!3278 = !DILocation(line: 320, column: 20, scope: !3231)
!3279 = !DILocation(line: 321, column: 24, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3231, file: !957, line: 321, column: 17)
!3281 = !DILocation(line: 321, column: 22, scope: !3280)
!3282 = !DILocation(line: 321, column: 29, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3284, file: !957, discriminator: 1)
!3284 = distinct !DILexicalBlock(scope: !3280, file: !957, line: 321, column: 17)
!3285 = !DILocation(line: 321, column: 52, scope: !3283)
!3286 = !DILocation(line: 321, column: 33, scope: !3283)
!3287 = !DILocation(line: 321, column: 38, scope: !3283)
!3288 = !DILocation(line: 321, column: 42, scope: !3283)
!3289 = !DILocation(line: 321, column: 31, scope: !3283)
!3290 = !DILocation(line: 321, column: 17, scope: !3283)
!3291 = !DILocalVariable(name: "t", scope: !3292, file: !957, line: 322, type: !954)
!3292 = distinct !DILexicalBlock(scope: !3284, file: !957, line: 321, column: 61)
!3293 = !DILocation(line: 322, column: 27, scope: !3292)
!3294 = !DILocation(line: 322, column: 43, scope: !3292)
!3295 = !DILocation(line: 322, column: 45, scope: !3292)
!3296 = !DILocation(line: 322, column: 50, scope: !3292)
!3297 = !DILocation(line: 322, column: 49, scope: !3292)
!3298 = !DILocation(line: 322, column: 37, scope: !3292)
!3299 = !DILocation(line: 322, column: 31, scope: !3292)
!3300 = !DILocation(line: 323, column: 25, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3292, file: !957, line: 323, column: 25)
!3302 = !DILocation(line: 323, column: 27, scope: !3301)
!3303 = !DILocation(line: 323, column: 25, scope: !3292)
!3304 = !DILocation(line: 324, column: 34, scope: !3301)
!3305 = !DILocation(line: 324, column: 43, scope: !3301)
!3306 = !DILocation(line: 324, column: 40, scope: !3301)
!3307 = !DILocation(line: 324, column: 33, scope: !3301)
!3308 = !DILocation(line: 324, column: 49, scope: !3309)
!3309 = !DILexicalBlockFile(scope: !3301, file: !957, discriminator: 1)
!3310 = !DILocation(line: 324, column: 33, scope: !3309)
!3311 = !DILocation(line: 324, column: 55, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3301, file: !957, discriminator: 2)
!3313 = !DILocation(line: 324, column: 33, scope: !3312)
!3314 = !DILocation(line: 324, column: 33, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3301, file: !957, discriminator: 3)
!3316 = !DILocation(line: 324, column: 30, scope: !3315)
!3317 = !DILocation(line: 324, column: 25, scope: !3315)
!3318 = !DILocation(line: 325, column: 30, scope: !3292)
!3319 = !DILocation(line: 325, column: 39, scope: !3292)
!3320 = !DILocation(line: 325, column: 36, scope: !3292)
!3321 = !DILocation(line: 325, column: 29, scope: !3292)
!3322 = !DILocation(line: 325, column: 45, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !3292, file: !957, discriminator: 1)
!3324 = !DILocation(line: 325, column: 29, scope: !3323)
!3325 = !DILocation(line: 325, column: 54, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3292, file: !957, discriminator: 2)
!3327 = !DILocation(line: 325, column: 29, scope: !3326)
!3328 = !DILocation(line: 325, column: 29, scope: !3329)
!3329 = !DILexicalBlockFile(scope: !3292, file: !957, discriminator: 3)
!3330 = !DILocation(line: 325, column: 26, scope: !3329)
!3331 = !DILocation(line: 326, column: 17, scope: !3292)
!3332 = !DILocation(line: 321, column: 57, scope: !3333)
!3333 = !DILexicalBlockFile(scope: !3284, file: !957, discriminator: 2)
!3334 = !DILocation(line: 321, column: 17, scope: !3333)
!3335 = distinct !{!3335, !3336}
!3336 = !DILocation(line: 321, column: 17, scope: !3231)
!3337 = !DILocation(line: 327, column: 13, scope: !3231)
!3338 = !DILocation(line: 313, column: 56, scope: !3339)
!3339 = !DILexicalBlockFile(scope: !3223, file: !957, discriminator: 2)
!3340 = !DILocation(line: 313, column: 13, scope: !3339)
!3341 = distinct !{!3341, !3342}
!3342 = !DILocation(line: 313, column: 13, scope: !2785)
!3343 = !DILocation(line: 328, column: 17, scope: !2784)
!3344 = !DILocation(line: 328, column: 17, scope: !2785)
!3345 = !DILocalVariable(name: "minscale", scope: !2783, file: !957, line: 329, type: !991)
!3346 = !DILocation(line: 329, column: 21, scope: !2783)
!3347 = !DILocalVariable(name: "maxscale", scope: !2783, file: !957, line: 329, type: !991)
!3348 = !DILocation(line: 329, column: 31, scope: !2783)
!3349 = !DILocalVariable(name: "minrd", scope: !2783, file: !957, line: 330, type: !954)
!3350 = !DILocation(line: 330, column: 23, scope: !2783)
!3351 = !DILocalVariable(name: "maxval", scope: !2783, file: !957, line: 331, type: !954)
!3352 = !DILocation(line: 331, column: 23, scope: !2783)
!3353 = !DILocation(line: 333, column: 39, scope: !2783)
!3354 = !DILocation(line: 333, column: 28, scope: !2783)
!3355 = !DILocation(line: 333, column: 26, scope: !2783)
!3356 = !DILocation(line: 335, column: 39, scope: !2783)
!3357 = !DILocation(line: 335, column: 28, scope: !2783)
!3358 = !DILocation(line: 335, column: 26, scope: !2783)
!3359 = !DILocation(line: 336, column: 38, scope: !2783)
!3360 = !DILocation(line: 336, column: 49, scope: !2783)
!3361 = !DILocation(line: 336, column: 47, scope: !2783)
!3362 = !DILocation(line: 336, column: 28, scope: !2783)
!3363 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2782)
!3364 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2782)
!3365 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2782)
!3366 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2782)
!3367 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2782)
!3368 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2782)
!3369 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2782)
!3370 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2782)
!3371 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2782)
!3372 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2782)
!3373 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2782)
!3374 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2782)
!3375 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2782)
!3376 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2782)
!3377 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2782)
!3378 = !DILocation(line: 336, column: 26, scope: !2783)
!3379 = !DILocation(line: 337, column: 38, scope: !2783)
!3380 = !DILocation(line: 337, column: 49, scope: !2783)
!3381 = !DILocation(line: 337, column: 47, scope: !2783)
!3382 = !DILocation(line: 337, column: 28, scope: !2783)
!3383 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2794)
!3384 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2794)
!3385 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2794)
!3386 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2794)
!3387 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2794)
!3388 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2794)
!3389 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2794)
!3390 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2794)
!3391 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2794)
!3392 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2794)
!3393 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2794)
!3394 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2794)
!3395 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2794)
!3396 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2794)
!3397 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2794)
!3398 = !DILocation(line: 337, column: 26, scope: !2783)
!3399 = !DILocation(line: 338, column: 21, scope: !2800)
!3400 = !DILocation(line: 338, column: 33, scope: !2800)
!3401 = !DILocation(line: 338, column: 30, scope: !2800)
!3402 = !DILocation(line: 338, column: 21, scope: !2783)
!3403 = !DILocation(line: 339, column: 42, scope: !2799)
!3404 = !DILocation(line: 339, column: 50, scope: !2799)
!3405 = !DILocation(line: 339, column: 32, scope: !2799)
!3406 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2798)
!3407 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2798)
!3408 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2798)
!3409 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2798)
!3410 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2798)
!3411 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2798)
!3412 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2798)
!3413 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2798)
!3414 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2798)
!3415 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2798)
!3416 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2798)
!3417 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2798)
!3418 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2798)
!3419 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2798)
!3420 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2798)
!3421 = !DILocation(line: 339, column: 30, scope: !2799)
!3422 = !DILocation(line: 340, column: 42, scope: !2799)
!3423 = !DILocation(line: 340, column: 50, scope: !2799)
!3424 = !DILocation(line: 340, column: 32, scope: !2799)
!3425 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !2804)
!3426 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !2804)
!3427 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !2804)
!3428 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !2804)
!3429 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !2804)
!3430 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !2804)
!3431 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !2804)
!3432 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !2804)
!3433 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !2804)
!3434 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !2804)
!3435 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !2804)
!3436 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !2804)
!3437 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !2804)
!3438 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !2804)
!3439 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !2804)
!3440 = !DILocation(line: 340, column: 30, scope: !2799)
!3441 = !DILocation(line: 341, column: 17, scope: !2799)
!3442 = !DILocation(line: 342, column: 58, scope: !2783)
!3443 = !DILocation(line: 342, column: 39, scope: !2783)
!3444 = !DILocation(line: 342, column: 44, scope: !2783)
!3445 = !DILocation(line: 342, column: 48, scope: !2783)
!3446 = !DILocation(line: 342, column: 81, scope: !2783)
!3447 = !DILocation(line: 342, column: 62, scope: !2783)
!3448 = !DILocation(line: 342, column: 67, scope: !2783)
!3449 = !DILocation(line: 342, column: 71, scope: !2783)
!3450 = !DILocation(line: 342, column: 85, scope: !2783)
!3451 = !DILocation(line: 342, column: 88, scope: !2783)
!3452 = !DILocation(line: 342, column: 95, scope: !2783)
!3453 = !DILocation(line: 342, column: 94, scope: !2783)
!3454 = !DILocation(line: 342, column: 26, scope: !2783)
!3455 = !DILocation(line: 342, column: 24, scope: !2783)
!3456 = !DILocation(line: 343, column: 26, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !2783, file: !957, line: 343, column: 17)
!3458 = !DILocation(line: 343, column: 24, scope: !3457)
!3459 = !DILocation(line: 343, column: 22, scope: !3457)
!3460 = !DILocation(line: 343, column: 36, scope: !3461)
!3461 = !DILexicalBlockFile(scope: !3462, file: !957, discriminator: 1)
!3462 = distinct !DILexicalBlock(scope: !3457, file: !957, line: 343, column: 17)
!3463 = !DILocation(line: 343, column: 40, scope: !3461)
!3464 = !DILocation(line: 343, column: 38, scope: !3461)
!3465 = !DILocation(line: 343, column: 17, scope: !3461)
!3466 = !DILocalVariable(name: "dist", scope: !3467, file: !957, line: 344, type: !954)
!3467 = distinct !DILexicalBlock(scope: !3462, file: !957, line: 343, column: 55)
!3468 = !DILocation(line: 344, column: 27, scope: !3467)
!3469 = !DILocalVariable(name: "cb", scope: !3467, file: !957, line: 345, type: !991)
!3470 = !DILocation(line: 345, column: 25, scope: !3467)
!3471 = !DILocation(line: 345, column: 44, scope: !3467)
!3472 = !DILocation(line: 345, column: 64, scope: !3467)
!3473 = !DILocation(line: 345, column: 65, scope: !3467)
!3474 = !DILocation(line: 345, column: 69, scope: !3467)
!3475 = !DILocation(line: 345, column: 68, scope: !3467)
!3476 = !DILocation(line: 345, column: 52, scope: !3467)
!3477 = !DILocation(line: 345, column: 57, scope: !3467)
!3478 = !DILocation(line: 345, column: 30, scope: !3467)
!3479 = !DILocation(line: 346, column: 29, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3467, file: !957, line: 346, column: 21)
!3481 = !DILocation(line: 346, column: 26, scope: !3480)
!3482 = !DILocation(line: 346, column: 34, scope: !3483)
!3483 = !DILexicalBlockFile(scope: !3484, file: !957, discriminator: 1)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !957, line: 346, column: 21)
!3485 = !DILocation(line: 346, column: 58, scope: !3483)
!3486 = !DILocation(line: 346, column: 39, scope: !3483)
!3487 = !DILocation(line: 346, column: 44, scope: !3483)
!3488 = !DILocation(line: 346, column: 48, scope: !3483)
!3489 = !DILocation(line: 346, column: 37, scope: !3483)
!3490 = !DILocation(line: 346, column: 21, scope: !3483)
!3491 = !DILocalVariable(name: "band", scope: !3492, file: !957, line: 347, type: !3232)
!3492 = distinct !DILexicalBlock(scope: !3484, file: !957, line: 346, column: 68)
!3493 = !DILocation(line: 347, column: 36, scope: !3492)
!3494 = !DILocation(line: 347, column: 81, scope: !3492)
!3495 = !DILocation(line: 347, column: 83, scope: !3492)
!3496 = !DILocation(line: 347, column: 82, scope: !3492)
!3497 = !DILocation(line: 347, column: 86, scope: !3492)
!3498 = !DILocation(line: 347, column: 90, scope: !3492)
!3499 = !DILocation(line: 347, column: 89, scope: !3492)
!3500 = !DILocation(line: 347, column: 44, scope: !3492)
!3501 = !DILocation(line: 347, column: 54, scope: !3492)
!3502 = !DILocation(line: 347, column: 57, scope: !3492)
!3503 = !DILocation(line: 347, column: 47, scope: !3492)
!3504 = !DILocation(line: 347, column: 51, scope: !3492)
!3505 = !DILocation(line: 347, column: 70, scope: !3492)
!3506 = !DILocation(line: 348, column: 52, scope: !3492)
!3507 = !DILocation(line: 348, column: 55, scope: !3492)
!3508 = !DILocation(line: 348, column: 63, scope: !3492)
!3509 = !DILocation(line: 348, column: 65, scope: !3492)
!3510 = !DILocation(line: 348, column: 61, scope: !3492)
!3511 = !DILocation(line: 348, column: 71, scope: !3492)
!3512 = !DILocation(line: 348, column: 74, scope: !3492)
!3513 = !DILocation(line: 348, column: 83, scope: !3492)
!3514 = !DILocation(line: 348, column: 81, scope: !3492)
!3515 = !DILocation(line: 348, column: 91, scope: !3492)
!3516 = !DILocation(line: 348, column: 93, scope: !3492)
!3517 = !DILocation(line: 348, column: 89, scope: !3492)
!3518 = !DILocation(line: 348, column: 118, scope: !3492)
!3519 = !DILocation(line: 348, column: 99, scope: !3492)
!3520 = !DILocation(line: 348, column: 104, scope: !3492)
!3521 = !DILocation(line: 348, column: 108, scope: !3492)
!3522 = !DILocation(line: 349, column: 52, scope: !3492)
!3523 = !DILocation(line: 349, column: 56, scope: !3492)
!3524 = !DILocation(line: 349, column: 54, scope: !3492)
!3525 = !DILocation(line: 349, column: 60, scope: !3492)
!3526 = !DILocation(line: 349, column: 64, scope: !3492)
!3527 = !DILocation(line: 349, column: 73, scope: !3492)
!3528 = !DILocation(line: 349, column: 79, scope: !3492)
!3529 = !DILocation(line: 349, column: 71, scope: !3492)
!3530 = !DILocation(line: 348, column: 33, scope: !3492)
!3531 = !DILocation(line: 348, column: 30, scope: !3492)
!3532 = !DILocation(line: 350, column: 21, scope: !3492)
!3533 = !DILocation(line: 346, column: 64, scope: !3534)
!3534 = !DILexicalBlockFile(scope: !3484, file: !957, discriminator: 2)
!3535 = !DILocation(line: 346, column: 21, scope: !3534)
!3536 = distinct !{!3536, !3537}
!3537 = !DILocation(line: 346, column: 21, scope: !3467)
!3538 = !DILocation(line: 351, column: 31, scope: !3467)
!3539 = !DILocation(line: 351, column: 41, scope: !3467)
!3540 = !DILocation(line: 351, column: 38, scope: !3467)
!3541 = !DILocation(line: 351, column: 30, scope: !3467)
!3542 = !DILocation(line: 351, column: 50, scope: !3543)
!3543 = !DILexicalBlockFile(scope: !3467, file: !957, discriminator: 1)
!3544 = !DILocation(line: 351, column: 30, scope: !3543)
!3545 = !DILocation(line: 351, column: 59, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3467, file: !957, discriminator: 2)
!3547 = !DILocation(line: 351, column: 30, scope: !3546)
!3548 = !DILocation(line: 351, column: 30, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3467, file: !957, discriminator: 3)
!3550 = !DILocation(line: 351, column: 27, scope: !3549)
!3551 = !DILocation(line: 353, column: 28, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3467, file: !957, line: 353, column: 21)
!3553 = !DILocation(line: 353, column: 26, scope: !3552)
!3554 = !DILocation(line: 353, column: 33, scope: !3555)
!3555 = !DILexicalBlockFile(scope: !3556, file: !957, discriminator: 1)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !957, line: 353, column: 21)
!3557 = !DILocation(line: 353, column: 37, scope: !3555)
!3558 = !DILocation(line: 353, column: 42, scope: !3555)
!3559 = !DILocation(line: 353, column: 40, scope: !3555)
!3560 = !DILocation(line: 353, column: 35, scope: !3555)
!3561 = !DILocation(line: 353, column: 21, scope: !3555)
!3562 = !DILocalVariable(name: "cost", scope: !3563, file: !957, line: 354, type: !954)
!3563 = distinct !DILexicalBlock(scope: !3556, file: !957, line: 353, column: 51)
!3564 = !DILocation(line: 354, column: 31, scope: !3563)
!3565 = !DILocation(line: 355, column: 47, scope: !3563)
!3566 = !DILocation(line: 355, column: 32, scope: !3563)
!3567 = !DILocation(line: 355, column: 38, scope: !3563)
!3568 = !DILocation(line: 355, column: 42, scope: !3563)
!3569 = !DILocation(line: 355, column: 50, scope: !3563)
!3570 = !DILocation(line: 355, column: 57, scope: !3563)
!3571 = !DILocation(line: 355, column: 55, scope: !3563)
!3572 = !DILocation(line: 356, column: 58, scope: !3563)
!3573 = !DILocation(line: 356, column: 62, scope: !3563)
!3574 = !DILocation(line: 356, column: 60, scope: !3563)
!3575 = !DILocation(line: 356, column: 64, scope: !3563)
!3576 = !DILocation(line: 356, column: 34, scope: !3563)
!3577 = !DILocation(line: 356, column: 32, scope: !3563)
!3578 = !DILocation(line: 355, column: 30, scope: !3563)
!3579 = !DILocation(line: 357, column: 29, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3563, file: !957, line: 357, column: 29)
!3581 = !DILocation(line: 357, column: 47, scope: !3580)
!3582 = !DILocation(line: 357, column: 36, scope: !3580)
!3583 = !DILocation(line: 357, column: 42, scope: !3580)
!3584 = !DILocation(line: 357, column: 50, scope: !3580)
!3585 = !DILocation(line: 357, column: 34, scope: !3580)
!3586 = !DILocation(line: 357, column: 29, scope: !3563)
!3587 = !DILocation(line: 358, column: 50, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3580, file: !957, line: 357, column: 56)
!3589 = !DILocation(line: 358, column: 40, scope: !3588)
!3590 = !DILocation(line: 358, column: 29, scope: !3588)
!3591 = !DILocation(line: 358, column: 35, scope: !3588)
!3592 = !DILocation(line: 358, column: 43, scope: !3588)
!3593 = !DILocation(line: 358, column: 48, scope: !3588)
!3594 = !DILocation(line: 359, column: 50, scope: !3588)
!3595 = !DILocation(line: 359, column: 40, scope: !3588)
!3596 = !DILocation(line: 359, column: 29, scope: !3588)
!3597 = !DILocation(line: 359, column: 35, scope: !3588)
!3598 = !DILocation(line: 359, column: 43, scope: !3588)
!3599 = !DILocation(line: 359, column: 48, scope: !3588)
!3600 = !DILocation(line: 360, column: 25, scope: !3588)
!3601 = !DILocation(line: 361, column: 21, scope: !3563)
!3602 = !DILocation(line: 353, column: 47, scope: !3603)
!3603 = !DILexicalBlockFile(scope: !3556, file: !957, discriminator: 2)
!3604 = !DILocation(line: 353, column: 21, scope: !3603)
!3605 = distinct !{!3605, !3606}
!3606 = !DILocation(line: 353, column: 21, scope: !3467)
!3607 = !DILocation(line: 362, column: 17, scope: !3467)
!3608 = !DILocation(line: 343, column: 51, scope: !3609)
!3609 = !DILexicalBlockFile(scope: !3462, file: !957, discriminator: 2)
!3610 = !DILocation(line: 343, column: 17, scope: !3609)
!3611 = distinct !{!3611, !3612}
!3612 = !DILocation(line: 343, column: 17, scope: !2783)
!3613 = !DILocation(line: 363, column: 13, scope: !2783)
!3614 = !DILocation(line: 364, column: 24, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !957, line: 364, column: 17)
!3616 = distinct !DILexicalBlock(scope: !2784, file: !957, line: 363, column: 20)
!3617 = !DILocation(line: 364, column: 22, scope: !3615)
!3618 = !DILocation(line: 364, column: 29, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3620, file: !957, discriminator: 1)
!3620 = distinct !DILexicalBlock(scope: !3615, file: !957, line: 364, column: 17)
!3621 = !DILocation(line: 364, column: 33, scope: !3619)
!3622 = !DILocation(line: 364, column: 38, scope: !3619)
!3623 = !DILocation(line: 364, column: 36, scope: !3619)
!3624 = !DILocation(line: 364, column: 31, scope: !3619)
!3625 = !DILocation(line: 364, column: 17, scope: !3619)
!3626 = !DILocation(line: 365, column: 57, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3620, file: !957, line: 364, column: 47)
!3628 = !DILocation(line: 365, column: 42, scope: !3627)
!3629 = !DILocation(line: 365, column: 48, scope: !3627)
!3630 = !DILocation(line: 365, column: 52, scope: !3627)
!3631 = !DILocation(line: 365, column: 60, scope: !3627)
!3632 = !DILocation(line: 365, column: 65, scope: !3627)
!3633 = !DILocation(line: 365, column: 32, scope: !3627)
!3634 = !DILocation(line: 365, column: 21, scope: !3627)
!3635 = !DILocation(line: 365, column: 27, scope: !3627)
!3636 = !DILocation(line: 365, column: 35, scope: !3627)
!3637 = !DILocation(line: 365, column: 40, scope: !3627)
!3638 = !DILocation(line: 366, column: 42, scope: !3627)
!3639 = !DILocation(line: 366, column: 32, scope: !3627)
!3640 = !DILocation(line: 366, column: 21, scope: !3627)
!3641 = !DILocation(line: 366, column: 27, scope: !3627)
!3642 = !DILocation(line: 366, column: 35, scope: !3627)
!3643 = !DILocation(line: 366, column: 40, scope: !3627)
!3644 = !DILocation(line: 367, column: 17, scope: !3627)
!3645 = !DILocation(line: 364, column: 43, scope: !3646)
!3646 = !DILexicalBlockFile(scope: !3620, file: !957, discriminator: 2)
!3647 = !DILocation(line: 364, column: 17, scope: !3646)
!3648 = distinct !{!3648, !3649}
!3649 = !DILocation(line: 364, column: 17, scope: !3616)
!3650 = !DILocation(line: 369, column: 36, scope: !2785)
!3651 = !DILocation(line: 369, column: 35, scope: !2785)
!3652 = !DILocation(line: 369, column: 25, scope: !2785)
!3653 = !DILocation(line: 369, column: 26, scope: !2785)
!3654 = !DILocation(line: 369, column: 30, scope: !2785)
!3655 = !DILocation(line: 369, column: 29, scope: !2785)
!3656 = !DILocation(line: 369, column: 13, scope: !2785)
!3657 = !DILocation(line: 369, column: 18, scope: !2785)
!3658 = !DILocation(line: 369, column: 33, scope: !2785)
!3659 = !DILocation(line: 370, column: 41, scope: !2785)
!3660 = !DILocation(line: 370, column: 22, scope: !2785)
!3661 = !DILocation(line: 370, column: 27, scope: !2785)
!3662 = !DILocation(line: 370, column: 31, scope: !2785)
!3663 = !DILocation(line: 370, column: 19, scope: !2785)
!3664 = !DILocation(line: 371, column: 16, scope: !2785)
!3665 = !DILocation(line: 372, column: 9, scope: !2785)
!3666 = !DILocation(line: 305, column: 44, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !2786, file: !957, discriminator: 2)
!3668 = !DILocation(line: 305, column: 9, scope: !3667)
!3669 = distinct !{!3669, !3670}
!3670 = !DILocation(line: 305, column: 9, scope: !2788)
!3671 = !DILocation(line: 373, column: 5, scope: !2788)
!3672 = !DILocation(line: 303, column: 67, scope: !3673)
!3673 = !DILexicalBlockFile(scope: !2789, file: !957, discriminator: 2)
!3674 = !DILocation(line: 303, column: 48, scope: !3673)
!3675 = !DILocation(line: 303, column: 53, scope: !3673)
!3676 = !DILocation(line: 303, column: 57, scope: !3673)
!3677 = !DILocation(line: 303, column: 45, scope: !3673)
!3678 = !DILocation(line: 303, column: 5, scope: !3673)
!3679 = distinct !{!3679, !3680}
!3680 = !DILocation(line: 303, column: 5, scope: !2761)
!3681 = !DILocation(line: 374, column: 8, scope: !2761)
!3682 = !DILocation(line: 375, column: 21, scope: !2761)
!3683 = !DILocation(line: 375, column: 15, scope: !2761)
!3684 = !DILocation(line: 375, column: 29, scope: !2761)
!3685 = !DILocation(line: 375, column: 13, scope: !2761)
!3686 = !DILocation(line: 376, column: 10, scope: !2761)
!3687 = !DILocation(line: 377, column: 12, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 377, column: 5)
!3689 = !DILocation(line: 377, column: 10, scope: !3688)
!3690 = !DILocation(line: 377, column: 17, scope: !3691)
!3691 = !DILexicalBlockFile(scope: !3692, file: !957, discriminator: 1)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !957, line: 377, column: 5)
!3693 = !DILocation(line: 377, column: 19, scope: !3691)
!3694 = !DILocation(line: 377, column: 5, scope: !3691)
!3695 = !DILocation(line: 378, column: 24, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !957, line: 378, column: 13)
!3697 = distinct !DILexicalBlock(scope: !3692, file: !957, line: 377, column: 35)
!3698 = !DILocation(line: 378, column: 13, scope: !3696)
!3699 = !DILocation(line: 378, column: 19, scope: !3696)
!3700 = !DILocation(line: 378, column: 27, scope: !3696)
!3701 = !DILocation(line: 378, column: 34, scope: !3696)
!3702 = !DILocation(line: 378, column: 32, scope: !3696)
!3703 = !DILocation(line: 378, column: 13, scope: !3697)
!3704 = !DILocation(line: 379, column: 34, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3696, file: !957, line: 378, column: 43)
!3706 = !DILocation(line: 379, column: 23, scope: !3705)
!3707 = !DILocation(line: 379, column: 29, scope: !3705)
!3708 = !DILocation(line: 379, column: 37, scope: !3705)
!3709 = !DILocation(line: 379, column: 21, scope: !3705)
!3710 = !DILocation(line: 380, column: 20, scope: !3705)
!3711 = !DILocation(line: 380, column: 18, scope: !3705)
!3712 = !DILocation(line: 381, column: 9, scope: !3705)
!3713 = !DILocation(line: 382, column: 5, scope: !3697)
!3714 = !DILocation(line: 377, column: 31, scope: !3715)
!3715 = !DILexicalBlockFile(scope: !3692, file: !957, discriminator: 2)
!3716 = !DILocation(line: 377, column: 5, scope: !3715)
!3717 = distinct !{!3717, !3718}
!3718 = !DILocation(line: 377, column: 5, scope: !2761)
!3719 = !DILocation(line: 383, column: 5, scope: !2761)
!3720 = !DILocation(line: 383, column: 12, scope: !2822)
!3721 = !DILocation(line: 383, column: 5, scope: !2822)
!3722 = !DILocation(line: 384, column: 38, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 383, column: 17)
!3724 = !DILocation(line: 384, column: 45, scope: !3723)
!3725 = !DILocation(line: 384, column: 43, scope: !3723)
!3726 = !DILocation(line: 384, column: 30, scope: !3723)
!3727 = !DILocation(line: 384, column: 21, scope: !3723)
!3728 = !DILocation(line: 384, column: 9, scope: !3723)
!3729 = !DILocation(line: 384, column: 14, scope: !3723)
!3730 = !DILocation(line: 384, column: 36, scope: !3723)
!3731 = !DILocation(line: 385, column: 29, scope: !3723)
!3732 = !DILocation(line: 385, column: 18, scope: !3723)
!3733 = !DILocation(line: 385, column: 24, scope: !3723)
!3734 = !DILocation(line: 385, column: 35, scope: !3723)
!3735 = !DILocation(line: 385, column: 41, scope: !3723)
!3736 = !DILocation(line: 385, column: 17, scope: !3723)
!3737 = !DILocation(line: 385, column: 61, scope: !3738)
!3738 = !DILexicalBlockFile(scope: !3723, file: !957, discriminator: 1)
!3739 = !DILocation(line: 385, column: 50, scope: !3738)
!3740 = !DILocation(line: 385, column: 56, scope: !3738)
!3741 = !DILocation(line: 385, column: 67, scope: !3738)
!3742 = !DILocation(line: 385, column: 17, scope: !3738)
!3743 = !DILocation(line: 385, column: 17, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3723, file: !957, discriminator: 2)
!3745 = !DILocation(line: 385, column: 17, scope: !3746)
!3746 = !DILexicalBlockFile(scope: !3723, file: !957, discriminator: 3)
!3747 = !DILocation(line: 385, column: 14, scope: !3746)
!3748 = !DILocation(line: 386, column: 12, scope: !3723)
!3749 = !DILocation(line: 383, column: 5, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !2761, file: !957, discriminator: 2)
!3751 = distinct !{!3751, !3719}
!3752 = !DILocation(line: 389, column: 12, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !2761, file: !957, line: 389, column: 5)
!3754 = !DILocation(line: 389, column: 10, scope: !3753)
!3755 = !DILocation(line: 389, column: 17, scope: !3756)
!3756 = !DILexicalBlockFile(scope: !3757, file: !957, discriminator: 1)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !957, line: 389, column: 5)
!3758 = !DILocation(line: 389, column: 21, scope: !3756)
!3759 = !DILocation(line: 389, column: 26, scope: !3756)
!3760 = !DILocation(line: 389, column: 30, scope: !3756)
!3761 = !DILocation(line: 389, column: 19, scope: !3756)
!3762 = !DILocation(line: 389, column: 5, scope: !3756)
!3763 = !DILocation(line: 390, column: 16, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3757, file: !957, line: 390, column: 9)
!3765 = !DILocation(line: 390, column: 14, scope: !3764)
!3766 = !DILocation(line: 390, column: 21, scope: !3767)
!3767 = !DILexicalBlockFile(scope: !3768, file: !957, discriminator: 1)
!3768 = distinct !DILexicalBlock(scope: !3764, file: !957, line: 390, column: 9)
!3769 = !DILocation(line: 390, column: 25, scope: !3767)
!3770 = !DILocation(line: 390, column: 30, scope: !3767)
!3771 = !DILocation(line: 390, column: 34, scope: !3767)
!3772 = !DILocation(line: 390, column: 23, scope: !3767)
!3773 = !DILocation(line: 390, column: 9, scope: !3767)
!3774 = !DILocation(line: 391, column: 21, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3768, file: !957, line: 391, column: 13)
!3776 = !DILocation(line: 391, column: 18, scope: !3775)
!3777 = !DILocation(line: 391, column: 26, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3779, file: !957, discriminator: 1)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !957, line: 391, column: 13)
!3780 = !DILocation(line: 391, column: 50, scope: !3778)
!3781 = !DILocation(line: 391, column: 31, scope: !3778)
!3782 = !DILocation(line: 391, column: 36, scope: !3778)
!3783 = !DILocation(line: 391, column: 40, scope: !3778)
!3784 = !DILocation(line: 391, column: 29, scope: !3778)
!3785 = !DILocation(line: 391, column: 13, scope: !3778)
!3786 = !DILocation(line: 392, column: 56, scope: !3779)
!3787 = !DILocation(line: 392, column: 57, scope: !3779)
!3788 = !DILocation(line: 392, column: 61, scope: !3779)
!3789 = !DILocation(line: 392, column: 60, scope: !3779)
!3790 = !DILocation(line: 392, column: 44, scope: !3779)
!3791 = !DILocation(line: 392, column: 49, scope: !3779)
!3792 = !DILocation(line: 392, column: 30, scope: !3779)
!3793 = !DILocation(line: 392, column: 32, scope: !3779)
!3794 = !DILocation(line: 392, column: 31, scope: !3779)
!3795 = !DILocation(line: 392, column: 35, scope: !3779)
!3796 = !DILocation(line: 392, column: 39, scope: !3779)
!3797 = !DILocation(line: 392, column: 38, scope: !3779)
!3798 = !DILocation(line: 392, column: 17, scope: !3779)
!3799 = !DILocation(line: 392, column: 22, scope: !3779)
!3800 = !DILocation(line: 392, column: 42, scope: !3779)
!3801 = !DILocation(line: 391, column: 56, scope: !3802)
!3802 = !DILexicalBlockFile(scope: !3779, file: !957, discriminator: 2)
!3803 = !DILocation(line: 391, column: 13, scope: !3802)
!3804 = distinct !{!3804, !3805}
!3805 = !DILocation(line: 391, column: 13, scope: !3768)
!3806 = !DILocation(line: 392, column: 62, scope: !3807)
!3807 = !DILexicalBlockFile(scope: !3775, file: !957, discriminator: 1)
!3808 = !DILocation(line: 390, column: 44, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3768, file: !957, discriminator: 2)
!3810 = !DILocation(line: 390, column: 9, scope: !3809)
!3811 = distinct !{!3811, !3812}
!3812 = !DILocation(line: 390, column: 9, scope: !3757)
!3813 = !DILocation(line: 392, column: 62, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !3764, file: !957, discriminator: 2)
!3815 = !DILocation(line: 389, column: 67, scope: !3816)
!3816 = !DILexicalBlockFile(scope: !3757, file: !957, discriminator: 2)
!3817 = !DILocation(line: 389, column: 48, scope: !3816)
!3818 = !DILocation(line: 389, column: 53, scope: !3816)
!3819 = !DILocation(line: 389, column: 57, scope: !3816)
!3820 = !DILocation(line: 389, column: 45, scope: !3816)
!3821 = !DILocation(line: 389, column: 5, scope: !3816)
!3822 = distinct !{!3822, !3823}
!3823 = !DILocation(line: 389, column: 5, scope: !2761)
!3824 = !DILocation(line: 393, column: 1, scope: !2761)
!3825 = distinct !DISubprogram(name: "encode_window_bands_info", scope: !957, file: !957, line: 77, type: !3826, isLocal: true, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{null, !2764, !2458, !991, !991, !1781}
!3828 = !DILocalVariable(name: "s", arg: 1, scope: !3825, file: !957, line: 77, type: !2764)
!3829 = !DILocation(line: 77, column: 53, scope: !3825)
!3830 = !DILocalVariable(name: "sce", arg: 2, scope: !3825, file: !957, line: 77, type: !2458)
!3831 = !DILocation(line: 77, column: 78, scope: !3825)
!3832 = !DILocalVariable(name: "win", arg: 3, scope: !3825, file: !957, line: 78, type: !991)
!3833 = !DILocation(line: 78, column: 42, scope: !3825)
!3834 = !DILocalVariable(name: "group_len", arg: 4, scope: !3825, file: !957, line: 78, type: !991)
!3835 = !DILocation(line: 78, column: 51, scope: !3825)
!3836 = !DILocalVariable(name: "lambda", arg: 5, scope: !3825, file: !957, line: 78, type: !1781)
!3837 = !DILocation(line: 78, column: 74, scope: !3825)
!3838 = !DILocalVariable(name: "path", scope: !3825, file: !957, line: 80, type: !3839)
!3839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3840, size: 172800, align: 32, elements: !3846)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "BandCodingPath", file: !957, line: 72, baseType: !3841)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BandCodingPath", file: !957, line: 68, size: 96, align: 32, elements: !3842)
!3842 = !{!3843, !3844, !3845}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "prev_idx", scope: !3841, file: !957, line: 69, baseType: !991, size: 32, align: 32)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3841, file: !957, line: 70, baseType: !954, size: 32, align: 32, offset: 32)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3841, file: !957, line: 71, baseType: !991, size: 32, align: 32, offset: 64)
!3846 = !{!1988, !2749}
!3847 = !DILocation(line: 80, column: 20, scope: !3825)
!3848 = !DILocalVariable(name: "w", scope: !3825, file: !957, line: 81, type: !991)
!3849 = !DILocation(line: 81, column: 9, scope: !3825)
!3850 = !DILocalVariable(name: "swb", scope: !3825, file: !957, line: 81, type: !991)
!3851 = !DILocation(line: 81, column: 12, scope: !3825)
!3852 = !DILocalVariable(name: "cb", scope: !3825, file: !957, line: 81, type: !991)
!3853 = !DILocation(line: 81, column: 17, scope: !3825)
!3854 = !DILocalVariable(name: "start", scope: !3825, file: !957, line: 81, type: !991)
!3855 = !DILocation(line: 81, column: 21, scope: !3825)
!3856 = !DILocalVariable(name: "size", scope: !3825, file: !957, line: 81, type: !991)
!3857 = !DILocation(line: 81, column: 28, scope: !3825)
!3858 = !DILocalVariable(name: "i", scope: !3825, file: !957, line: 82, type: !991)
!3859 = !DILocation(line: 82, column: 9, scope: !3825)
!3860 = !DILocalVariable(name: "j", scope: !3825, file: !957, line: 82, type: !991)
!3861 = !DILocation(line: 82, column: 12, scope: !3825)
!3862 = !DILocalVariable(name: "max_sfb", scope: !3825, file: !957, line: 83, type: !1043)
!3863 = !DILocation(line: 83, column: 15, scope: !3825)
!3864 = !DILocation(line: 83, column: 25, scope: !3825)
!3865 = !DILocation(line: 83, column: 30, scope: !3825)
!3866 = !DILocation(line: 83, column: 34, scope: !3825)
!3867 = !DILocalVariable(name: "run_bits", scope: !3825, file: !957, line: 84, type: !1043)
!3868 = !DILocation(line: 84, column: 15, scope: !3825)
!3869 = !DILocation(line: 84, column: 26, scope: !3825)
!3870 = !DILocation(line: 84, column: 31, scope: !3825)
!3871 = !DILocation(line: 84, column: 35, scope: !3825)
!3872 = !DILocation(line: 84, column: 47, scope: !3825)
!3873 = !DILocalVariable(name: "run_esc", scope: !3825, file: !957, line: 85, type: !1043)
!3874 = !DILocation(line: 85, column: 15, scope: !3825)
!3875 = !DILocation(line: 85, column: 31, scope: !3825)
!3876 = !DILocation(line: 85, column: 28, scope: !3825)
!3877 = !DILocation(line: 85, column: 41, scope: !3825)
!3878 = !DILocalVariable(name: "idx", scope: !3825, file: !957, line: 86, type: !991)
!3879 = !DILocation(line: 86, column: 9, scope: !3825)
!3880 = !DILocalVariable(name: "ppos", scope: !3825, file: !957, line: 86, type: !991)
!3881 = !DILocation(line: 86, column: 14, scope: !3825)
!3882 = !DILocalVariable(name: "count", scope: !3825, file: !957, line: 86, type: !991)
!3883 = !DILocation(line: 86, column: 20, scope: !3825)
!3884 = !DILocalVariable(name: "stackrun", scope: !3825, file: !957, line: 87, type: !1986)
!3885 = !DILocation(line: 87, column: 9, scope: !3825)
!3886 = !DILocalVariable(name: "stackcb", scope: !3825, file: !957, line: 87, type: !1986)
!3887 = !DILocation(line: 87, column: 24, scope: !3825)
!3888 = !DILocalVariable(name: "stack_len", scope: !3825, file: !957, line: 87, type: !991)
!3889 = !DILocation(line: 87, column: 38, scope: !3825)
!3890 = !DILocalVariable(name: "next_minrd", scope: !3825, file: !957, line: 88, type: !954)
!3891 = !DILocation(line: 88, column: 11, scope: !3825)
!3892 = !DILocalVariable(name: "next_mincb", scope: !3825, file: !957, line: 89, type: !991)
!3893 = !DILocation(line: 89, column: 9, scope: !3825)
!3894 = !DILocation(line: 91, column: 5, scope: !3825)
!3895 = !DILocation(line: 91, column: 8, scope: !3825)
!3896 = !DILocation(line: 91, column: 18, scope: !3825)
!3897 = !DILocation(line: 91, column: 21, scope: !3825)
!3898 = !DILocation(line: 91, column: 29, scope: !3825)
!3899 = !DILocation(line: 91, column: 34, scope: !3825)
!3900 = !DILocation(line: 92, column: 13, scope: !3825)
!3901 = !DILocation(line: 92, column: 16, scope: !3825)
!3902 = !DILocation(line: 92, column: 11, scope: !3825)
!3903 = !DILocation(line: 93, column: 13, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3825, file: !957, line: 93, column: 5)
!3905 = !DILocation(line: 93, column: 10, scope: !3904)
!3906 = !DILocation(line: 93, column: 18, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3908, file: !957, discriminator: 1)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !957, line: 93, column: 5)
!3909 = !DILocation(line: 93, column: 21, scope: !3907)
!3910 = !DILocation(line: 93, column: 5, scope: !3907)
!3911 = !DILocation(line: 94, column: 17, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3908, file: !957, line: 93, column: 33)
!3913 = !DILocation(line: 94, column: 9, scope: !3912)
!3914 = !DILocation(line: 94, column: 21, scope: !3912)
!3915 = !DILocation(line: 94, column: 26, scope: !3912)
!3916 = !DILocation(line: 95, column: 17, scope: !3912)
!3917 = !DILocation(line: 95, column: 9, scope: !3912)
!3918 = !DILocation(line: 95, column: 21, scope: !3912)
!3919 = !DILocation(line: 95, column: 30, scope: !3912)
!3920 = !DILocation(line: 96, column: 17, scope: !3912)
!3921 = !DILocation(line: 96, column: 9, scope: !3912)
!3922 = !DILocation(line: 96, column: 21, scope: !3912)
!3923 = !DILocation(line: 96, column: 25, scope: !3912)
!3924 = !DILocation(line: 97, column: 5, scope: !3912)
!3925 = !DILocation(line: 93, column: 29, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3908, file: !957, discriminator: 2)
!3927 = !DILocation(line: 93, column: 5, scope: !3926)
!3928 = distinct !{!3928, !3929}
!3929 = !DILocation(line: 93, column: 5, scope: !3825)
!3930 = !DILocation(line: 98, column: 14, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3825, file: !957, line: 98, column: 5)
!3932 = !DILocation(line: 98, column: 10, scope: !3931)
!3933 = !DILocation(line: 98, column: 19, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3935, file: !957, discriminator: 1)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !957, line: 98, column: 5)
!3936 = !DILocation(line: 98, column: 25, scope: !3934)
!3937 = !DILocation(line: 98, column: 23, scope: !3934)
!3938 = !DILocation(line: 98, column: 5, scope: !3934)
!3939 = !DILocation(line: 99, column: 35, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3935, file: !957, line: 98, column: 41)
!3941 = !DILocation(line: 99, column: 16, scope: !3940)
!3942 = !DILocation(line: 99, column: 21, scope: !3940)
!3943 = !DILocation(line: 99, column: 25, scope: !3940)
!3944 = !DILocation(line: 99, column: 14, scope: !3940)
!3945 = !DILocation(line: 100, column: 25, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3940, file: !957, line: 100, column: 13)
!3947 = !DILocation(line: 100, column: 28, scope: !3946)
!3948 = !DILocation(line: 100, column: 34, scope: !3946)
!3949 = !DILocation(line: 100, column: 32, scope: !3946)
!3950 = !DILocation(line: 100, column: 13, scope: !3946)
!3951 = !DILocation(line: 100, column: 18, scope: !3946)
!3952 = !DILocation(line: 100, column: 13, scope: !3940)
!3953 = !DILocation(line: 101, column: 21, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !957, line: 101, column: 13)
!3955 = distinct !DILexicalBlock(scope: !3946, file: !957, line: 100, column: 40)
!3956 = !DILocation(line: 101, column: 18, scope: !3954)
!3957 = !DILocation(line: 101, column: 26, scope: !3958)
!3958 = !DILexicalBlockFile(scope: !3959, file: !957, discriminator: 1)
!3959 = distinct !DILexicalBlock(scope: !3954, file: !957, line: 101, column: 13)
!3960 = !DILocation(line: 101, column: 29, scope: !3958)
!3961 = !DILocation(line: 101, column: 13, scope: !3958)
!3962 = !DILocation(line: 102, column: 44, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3959, file: !957, line: 101, column: 41)
!3964 = !DILocation(line: 102, column: 29, scope: !3963)
!3965 = !DILocation(line: 102, column: 17, scope: !3963)
!3966 = !DILocation(line: 102, column: 22, scope: !3963)
!3967 = !DILocation(line: 102, column: 25, scope: !3963)
!3968 = !DILocation(line: 102, column: 33, scope: !3963)
!3969 = !DILocation(line: 102, column: 42, scope: !3963)
!3970 = !DILocation(line: 103, column: 50, scope: !3963)
!3971 = !DILocation(line: 103, column: 40, scope: !3963)
!3972 = !DILocation(line: 103, column: 45, scope: !3963)
!3973 = !DILocation(line: 103, column: 54, scope: !3963)
!3974 = !DILocation(line: 103, column: 29, scope: !3963)
!3975 = !DILocation(line: 103, column: 17, scope: !3963)
!3976 = !DILocation(line: 103, column: 22, scope: !3963)
!3977 = !DILocation(line: 103, column: 25, scope: !3963)
!3978 = !DILocation(line: 103, column: 33, scope: !3963)
!3979 = !DILocation(line: 103, column: 38, scope: !3963)
!3980 = !DILocation(line: 104, column: 49, scope: !3963)
!3981 = !DILocation(line: 104, column: 39, scope: !3963)
!3982 = !DILocation(line: 104, column: 44, scope: !3963)
!3983 = !DILocation(line: 104, column: 53, scope: !3963)
!3984 = !DILocation(line: 104, column: 57, scope: !3963)
!3985 = !DILocation(line: 104, column: 29, scope: !3963)
!3986 = !DILocation(line: 104, column: 17, scope: !3963)
!3987 = !DILocation(line: 104, column: 22, scope: !3963)
!3988 = !DILocation(line: 104, column: 25, scope: !3963)
!3989 = !DILocation(line: 104, column: 33, scope: !3963)
!3990 = !DILocation(line: 104, column: 37, scope: !3963)
!3991 = !DILocation(line: 105, column: 13, scope: !3963)
!3992 = !DILocation(line: 101, column: 37, scope: !3993)
!3993 = !DILexicalBlockFile(scope: !3959, file: !957, discriminator: 2)
!3994 = !DILocation(line: 101, column: 13, scope: !3993)
!3995 = distinct !{!3995, !3996}
!3996 = !DILocation(line: 101, column: 13, scope: !3955)
!3997 = !DILocation(line: 106, column: 9, scope: !3955)
!3998 = !DILocalVariable(name: "minrd", scope: !3999, file: !957, line: 107, type: !954)
!3999 = distinct !DILexicalBlock(scope: !3946, file: !957, line: 106, column: 16)
!4000 = !DILocation(line: 107, column: 19, scope: !3999)
!4001 = !DILocation(line: 107, column: 27, scope: !3999)
!4002 = !DILocalVariable(name: "mincb", scope: !3999, file: !957, line: 108, type: !991)
!4003 = !DILocation(line: 108, column: 17, scope: !3999)
!4004 = !DILocation(line: 108, column: 25, scope: !3999)
!4005 = !DILocation(line: 109, column: 24, scope: !3999)
!4006 = !DILocation(line: 110, column: 24, scope: !3999)
!4007 = !DILocation(line: 111, column: 21, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3999, file: !957, line: 111, column: 13)
!4009 = !DILocation(line: 111, column: 18, scope: !4008)
!4010 = !DILocation(line: 111, column: 26, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !4012, file: !957, discriminator: 1)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !957, line: 111, column: 13)
!4013 = !DILocation(line: 111, column: 29, scope: !4011)
!4014 = !DILocation(line: 111, column: 13, scope: !4011)
!4015 = !DILocalVariable(name: "cost_stay_here", scope: !4016, file: !957, line: 112, type: !954)
!4016 = distinct !DILexicalBlock(scope: !4012, file: !957, line: 111, column: 41)
!4017 = !DILocation(line: 112, column: 23, scope: !4016)
!4018 = !DILocalVariable(name: "cost_get_here", scope: !4016, file: !957, line: 112, type: !954)
!4019 = !DILocation(line: 112, column: 39, scope: !4016)
!4020 = !DILocalVariable(name: "rd", scope: !4016, file: !957, line: 113, type: !954)
!4021 = !DILocation(line: 113, column: 23, scope: !4016)
!4022 = !DILocation(line: 114, column: 21, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4016, file: !957, line: 114, column: 21)
!4024 = !DILocation(line: 114, column: 24, scope: !4023)
!4025 = !DILocation(line: 114, column: 30, scope: !4023)
!4026 = !DILocation(line: 114, column: 48, scope: !4027)
!4027 = !DILexicalBlockFile(scope: !4023, file: !957, discriminator: 1)
!4028 = !DILocation(line: 114, column: 51, scope: !4027)
!4029 = !DILocation(line: 114, column: 55, scope: !4027)
!4030 = !DILocation(line: 114, column: 54, scope: !4027)
!4031 = !DILocation(line: 114, column: 33, scope: !4027)
!4032 = !DILocation(line: 114, column: 38, scope: !4027)
!4033 = !DILocation(line: 114, column: 77, scope: !4027)
!4034 = !DILocation(line: 114, column: 62, scope: !4027)
!4035 = !DILocation(line: 114, column: 60, scope: !4027)
!4036 = !DILocation(line: 114, column: 81, scope: !4027)
!4037 = !DILocation(line: 115, column: 21, scope: !4023)
!4038 = !DILocation(line: 115, column: 55, scope: !4023)
!4039 = !DILocation(line: 115, column: 58, scope: !4023)
!4040 = !DILocation(line: 115, column: 62, scope: !4023)
!4041 = !DILocation(line: 115, column: 61, scope: !4023)
!4042 = !DILocation(line: 115, column: 40, scope: !4023)
!4043 = !DILocation(line: 115, column: 45, scope: !4023)
!4044 = !DILocation(line: 115, column: 26, scope: !4023)
!4045 = !DILocation(line: 115, column: 24, scope: !4023)
!4046 = !DILocation(line: 115, column: 68, scope: !4023)
!4047 = !DILocation(line: 115, column: 86, scope: !4027)
!4048 = !DILocation(line: 115, column: 89, scope: !4027)
!4049 = !DILocation(line: 115, column: 93, scope: !4027)
!4050 = !DILocation(line: 115, column: 92, scope: !4027)
!4051 = !DILocation(line: 115, column: 71, scope: !4027)
!4052 = !DILocation(line: 115, column: 76, scope: !4027)
!4053 = !DILocation(line: 115, column: 115, scope: !4027)
!4054 = !DILocation(line: 115, column: 100, scope: !4027)
!4055 = !DILocation(line: 115, column: 98, scope: !4027)
!4056 = !DILocation(line: 114, column: 21, scope: !4057)
!4057 = !DILexicalBlockFile(scope: !4016, file: !957, discriminator: 2)
!4058 = !DILocation(line: 116, column: 33, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4023, file: !957, line: 115, column: 120)
!4060 = !DILocation(line: 116, column: 21, scope: !4059)
!4061 = !DILocation(line: 116, column: 26, scope: !4059)
!4062 = !DILocation(line: 116, column: 29, scope: !4059)
!4063 = !DILocation(line: 116, column: 37, scope: !4059)
!4064 = !DILocation(line: 116, column: 46, scope: !4059)
!4065 = !DILocation(line: 117, column: 33, scope: !4059)
!4066 = !DILocation(line: 117, column: 21, scope: !4059)
!4067 = !DILocation(line: 117, column: 26, scope: !4059)
!4068 = !DILocation(line: 117, column: 29, scope: !4059)
!4069 = !DILocation(line: 117, column: 37, scope: !4059)
!4070 = !DILocation(line: 117, column: 42, scope: !4059)
!4071 = !DILocation(line: 118, column: 53, scope: !4059)
!4072 = !DILocation(line: 118, column: 43, scope: !4059)
!4073 = !DILocation(line: 118, column: 48, scope: !4059)
!4074 = !DILocation(line: 118, column: 57, scope: !4059)
!4075 = !DILocation(line: 118, column: 61, scope: !4059)
!4076 = !DILocation(line: 118, column: 33, scope: !4059)
!4077 = !DILocation(line: 118, column: 21, scope: !4059)
!4078 = !DILocation(line: 118, column: 26, scope: !4059)
!4079 = !DILocation(line: 118, column: 29, scope: !4059)
!4080 = !DILocation(line: 118, column: 37, scope: !4059)
!4081 = !DILocation(line: 118, column: 41, scope: !4059)
!4082 = !DILocation(line: 119, column: 21, scope: !4059)
!4083 = !DILocation(line: 121, column: 24, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4016, file: !957, line: 121, column: 17)
!4085 = !DILocation(line: 121, column: 22, scope: !4084)
!4086 = !DILocation(line: 121, column: 29, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !4088, file: !957, discriminator: 1)
!4088 = distinct !DILexicalBlock(scope: !4084, file: !957, line: 121, column: 17)
!4089 = !DILocation(line: 121, column: 33, scope: !4087)
!4090 = !DILocation(line: 121, column: 31, scope: !4087)
!4091 = !DILocation(line: 121, column: 17, scope: !4087)
!4092 = !DILocalVariable(name: "band", scope: !4093, file: !957, line: 122, type: !3232)
!4093 = distinct !DILexicalBlock(scope: !4088, file: !957, line: 121, column: 49)
!4094 = !DILocation(line: 122, column: 32, scope: !4093)
!4095 = !DILocation(line: 122, column: 77, scope: !4093)
!4096 = !DILocation(line: 122, column: 81, scope: !4093)
!4097 = !DILocation(line: 122, column: 80, scope: !4093)
!4098 = !DILocation(line: 122, column: 83, scope: !4093)
!4099 = !DILocation(line: 122, column: 87, scope: !4093)
!4100 = !DILocation(line: 122, column: 86, scope: !4093)
!4101 = !DILocation(line: 122, column: 40, scope: !4093)
!4102 = !DILocation(line: 122, column: 50, scope: !4093)
!4103 = !DILocation(line: 122, column: 53, scope: !4093)
!4104 = !DILocation(line: 122, column: 43, scope: !4093)
!4105 = !DILocation(line: 122, column: 47, scope: !4093)
!4106 = !DILocation(line: 122, column: 66, scope: !4093)
!4107 = !DILocation(line: 123, column: 46, scope: !4093)
!4108 = !DILocation(line: 123, column: 62, scope: !4093)
!4109 = !DILocation(line: 123, column: 70, scope: !4093)
!4110 = !DILocation(line: 123, column: 71, scope: !4093)
!4111 = !DILocation(line: 123, column: 68, scope: !4093)
!4112 = !DILocation(line: 123, column: 50, scope: !4093)
!4113 = !DILocation(line: 123, column: 55, scope: !4093)
!4114 = !DILocation(line: 124, column: 57, scope: !4093)
!4115 = !DILocation(line: 124, column: 65, scope: !4093)
!4116 = !DILocation(line: 124, column: 66, scope: !4093)
!4117 = !DILocation(line: 124, column: 63, scope: !4093)
!4118 = !DILocation(line: 124, column: 47, scope: !4093)
!4119 = !DILocation(line: 124, column: 50, scope: !4093)
!4120 = !DILocation(line: 124, column: 73, scope: !4093)
!4121 = !DILocation(line: 125, column: 59, scope: !4093)
!4122 = !DILocation(line: 125, column: 63, scope: !4093)
!4123 = !DILocation(line: 125, column: 62, scope: !4093)
!4124 = !DILocation(line: 125, column: 65, scope: !4093)
!4125 = !DILocation(line: 125, column: 69, scope: !4093)
!4126 = !DILocation(line: 125, column: 68, scope: !4093)
!4127 = !DILocation(line: 125, column: 46, scope: !4093)
!4128 = !DILocation(line: 125, column: 51, scope: !4093)
!4129 = !DILocation(line: 125, column: 90, scope: !4093)
!4130 = !DILocation(line: 125, column: 75, scope: !4093)
!4131 = !DILocation(line: 126, column: 46, scope: !4093)
!4132 = !DILocation(line: 126, column: 55, scope: !4093)
!4133 = !DILocation(line: 126, column: 61, scope: !4093)
!4134 = !DILocation(line: 126, column: 53, scope: !4093)
!4135 = !DILocation(line: 123, column: 27, scope: !4093)
!4136 = !DILocation(line: 123, column: 24, scope: !4093)
!4137 = !DILocation(line: 127, column: 17, scope: !4093)
!4138 = !DILocation(line: 121, column: 45, scope: !4139)
!4139 = !DILexicalBlockFile(scope: !4088, file: !957, discriminator: 2)
!4140 = !DILocation(line: 121, column: 17, scope: !4139)
!4141 = distinct !{!4141, !4142}
!4142 = !DILocation(line: 121, column: 17, scope: !4016)
!4143 = !DILocation(line: 128, column: 44, scope: !4016)
!4144 = !DILocation(line: 128, column: 34, scope: !4016)
!4145 = !DILocation(line: 128, column: 39, scope: !4016)
!4146 = !DILocation(line: 128, column: 48, scope: !4016)
!4147 = !DILocation(line: 128, column: 55, scope: !4016)
!4148 = !DILocation(line: 128, column: 53, scope: !4016)
!4149 = !DILocation(line: 128, column: 32, scope: !4016)
!4150 = !DILocation(line: 129, column: 33, scope: !4016)
!4151 = !DILocation(line: 129, column: 41, scope: !4016)
!4152 = !DILocation(line: 129, column: 39, scope: !4016)
!4153 = !DILocation(line: 129, column: 46, scope: !4016)
!4154 = !DILocation(line: 129, column: 44, scope: !4016)
!4155 = !DILocation(line: 129, column: 55, scope: !4016)
!4156 = !DILocation(line: 129, column: 31, scope: !4016)
!4157 = !DILocation(line: 130, column: 74, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4016, file: !957, line: 130, column: 22)
!4159 = !DILocation(line: 130, column: 64, scope: !4158)
!4160 = !DILocation(line: 130, column: 69, scope: !4158)
!4161 = !DILocation(line: 130, column: 78, scope: !4158)
!4162 = !DILocation(line: 130, column: 22, scope: !4158)
!4163 = !DILocation(line: 130, column: 37, scope: !4158)
!4164 = !DILocation(line: 130, column: 42, scope: !4158)
!4165 = !DILocation(line: 130, column: 46, scope: !4158)
!4166 = !DILocation(line: 130, column: 58, scope: !4158)
!4167 = !DILocation(line: 131, column: 76, scope: !4158)
!4168 = !DILocation(line: 131, column: 66, scope: !4158)
!4169 = !DILocation(line: 131, column: 71, scope: !4158)
!4170 = !DILocation(line: 131, column: 80, scope: !4158)
!4171 = !DILocation(line: 131, column: 83, scope: !4158)
!4172 = !DILocation(line: 131, column: 24, scope: !4158)
!4173 = !DILocation(line: 131, column: 39, scope: !4158)
!4174 = !DILocation(line: 131, column: 44, scope: !4158)
!4175 = !DILocation(line: 131, column: 48, scope: !4158)
!4176 = !DILocation(line: 131, column: 60, scope: !4158)
!4177 = !DILocation(line: 131, column: 21, scope: !4158)
!4178 = !DILocation(line: 130, column: 22, scope: !4016)
!4179 = !DILocation(line: 132, column: 39, scope: !4158)
!4180 = !DILocation(line: 132, column: 36, scope: !4158)
!4181 = !DILocation(line: 132, column: 21, scope: !4158)
!4182 = !DILocation(line: 133, column: 21, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4016, file: !957, line: 133, column: 21)
!4184 = !DILocation(line: 133, column: 37, scope: !4183)
!4185 = !DILocation(line: 133, column: 35, scope: !4183)
!4186 = !DILocation(line: 133, column: 21, scope: !4016)
!4187 = !DILocation(line: 134, column: 48, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4183, file: !957, line: 133, column: 53)
!4189 = !DILocation(line: 134, column: 33, scope: !4188)
!4190 = !DILocation(line: 134, column: 21, scope: !4188)
!4191 = !DILocation(line: 134, column: 26, scope: !4188)
!4192 = !DILocation(line: 134, column: 29, scope: !4188)
!4193 = !DILocation(line: 134, column: 37, scope: !4188)
!4194 = !DILocation(line: 134, column: 46, scope: !4188)
!4195 = !DILocation(line: 135, column: 44, scope: !4188)
!4196 = !DILocation(line: 135, column: 33, scope: !4188)
!4197 = !DILocation(line: 135, column: 21, scope: !4188)
!4198 = !DILocation(line: 135, column: 26, scope: !4188)
!4199 = !DILocation(line: 135, column: 29, scope: !4188)
!4200 = !DILocation(line: 135, column: 37, scope: !4188)
!4201 = !DILocation(line: 135, column: 42, scope: !4188)
!4202 = !DILocation(line: 136, column: 33, scope: !4188)
!4203 = !DILocation(line: 136, column: 21, scope: !4188)
!4204 = !DILocation(line: 136, column: 26, scope: !4188)
!4205 = !DILocation(line: 136, column: 29, scope: !4188)
!4206 = !DILocation(line: 136, column: 37, scope: !4188)
!4207 = !DILocation(line: 136, column: 41, scope: !4188)
!4208 = !DILocation(line: 137, column: 17, scope: !4188)
!4209 = !DILocation(line: 138, column: 48, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4183, file: !957, line: 137, column: 24)
!4211 = !DILocation(line: 138, column: 33, scope: !4210)
!4212 = !DILocation(line: 138, column: 21, scope: !4210)
!4213 = !DILocation(line: 138, column: 26, scope: !4210)
!4214 = !DILocation(line: 138, column: 29, scope: !4210)
!4215 = !DILocation(line: 138, column: 37, scope: !4210)
!4216 = !DILocation(line: 138, column: 46, scope: !4210)
!4217 = !DILocation(line: 139, column: 44, scope: !4210)
!4218 = !DILocation(line: 139, column: 33, scope: !4210)
!4219 = !DILocation(line: 139, column: 21, scope: !4210)
!4220 = !DILocation(line: 139, column: 26, scope: !4210)
!4221 = !DILocation(line: 139, column: 29, scope: !4210)
!4222 = !DILocation(line: 139, column: 37, scope: !4210)
!4223 = !DILocation(line: 139, column: 42, scope: !4210)
!4224 = !DILocation(line: 140, column: 53, scope: !4210)
!4225 = !DILocation(line: 140, column: 43, scope: !4210)
!4226 = !DILocation(line: 140, column: 48, scope: !4210)
!4227 = !DILocation(line: 140, column: 57, scope: !4210)
!4228 = !DILocation(line: 140, column: 61, scope: !4210)
!4229 = !DILocation(line: 140, column: 33, scope: !4210)
!4230 = !DILocation(line: 140, column: 21, scope: !4210)
!4231 = !DILocation(line: 140, column: 26, scope: !4210)
!4232 = !DILocation(line: 140, column: 29, scope: !4210)
!4233 = !DILocation(line: 140, column: 37, scope: !4210)
!4234 = !DILocation(line: 140, column: 41, scope: !4210)
!4235 = !DILocation(line: 142, column: 33, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4016, file: !957, line: 142, column: 21)
!4237 = !DILocation(line: 142, column: 21, scope: !4236)
!4238 = !DILocation(line: 142, column: 26, scope: !4236)
!4239 = !DILocation(line: 142, column: 29, scope: !4236)
!4240 = !DILocation(line: 142, column: 37, scope: !4236)
!4241 = !DILocation(line: 142, column: 44, scope: !4236)
!4242 = !DILocation(line: 142, column: 42, scope: !4236)
!4243 = !DILocation(line: 142, column: 21, scope: !4016)
!4244 = !DILocation(line: 143, column: 46, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4236, file: !957, line: 142, column: 56)
!4246 = !DILocation(line: 143, column: 34, scope: !4245)
!4247 = !DILocation(line: 143, column: 39, scope: !4245)
!4248 = !DILocation(line: 143, column: 42, scope: !4245)
!4249 = !DILocation(line: 143, column: 50, scope: !4245)
!4250 = !DILocation(line: 143, column: 32, scope: !4245)
!4251 = !DILocation(line: 144, column: 34, scope: !4245)
!4252 = !DILocation(line: 144, column: 32, scope: !4245)
!4253 = !DILocation(line: 145, column: 17, scope: !4245)
!4254 = !DILocation(line: 146, column: 13, scope: !4016)
!4255 = !DILocation(line: 111, column: 37, scope: !4256)
!4256 = !DILexicalBlockFile(scope: !4012, file: !957, discriminator: 2)
!4257 = !DILocation(line: 111, column: 13, scope: !4256)
!4258 = distinct !{!4258, !4259}
!4259 = !DILocation(line: 111, column: 13, scope: !3999)
!4260 = !DILocation(line: 148, column: 37, scope: !3940)
!4261 = !DILocation(line: 148, column: 18, scope: !3940)
!4262 = !DILocation(line: 148, column: 23, scope: !3940)
!4263 = !DILocation(line: 148, column: 27, scope: !3940)
!4264 = !DILocation(line: 148, column: 15, scope: !3940)
!4265 = !DILocation(line: 149, column: 5, scope: !3940)
!4266 = !DILocation(line: 98, column: 37, scope: !4267)
!4267 = !DILexicalBlockFile(scope: !3935, file: !957, discriminator: 2)
!4268 = !DILocation(line: 98, column: 5, scope: !4267)
!4269 = distinct !{!4269, !4270}
!4270 = !DILocation(line: 98, column: 5, scope: !3825)
!4271 = !DILocation(line: 152, column: 15, scope: !3825)
!4272 = !DILocation(line: 153, column: 9, scope: !3825)
!4273 = !DILocation(line: 154, column: 13, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !3825, file: !957, line: 154, column: 5)
!4275 = !DILocation(line: 154, column: 10, scope: !4274)
!4276 = !DILocation(line: 154, column: 18, scope: !4277)
!4277 = !DILexicalBlockFile(scope: !4278, file: !957, discriminator: 1)
!4278 = distinct !DILexicalBlock(scope: !4274, file: !957, line: 154, column: 5)
!4279 = !DILocation(line: 154, column: 21, scope: !4277)
!4280 = !DILocation(line: 154, column: 5, scope: !4277)
!4281 = !DILocation(line: 155, column: 27, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !957, line: 155, column: 13)
!4283 = !DILocation(line: 155, column: 13, scope: !4282)
!4284 = !DILocation(line: 155, column: 18, scope: !4282)
!4285 = !DILocation(line: 155, column: 31, scope: !4282)
!4286 = !DILocation(line: 155, column: 52, scope: !4282)
!4287 = !DILocation(line: 155, column: 38, scope: !4282)
!4288 = !DILocation(line: 155, column: 43, scope: !4282)
!4289 = !DILocation(line: 155, column: 57, scope: !4282)
!4290 = !DILocation(line: 155, column: 36, scope: !4282)
!4291 = !DILocation(line: 155, column: 13, scope: !4278)
!4292 = !DILocation(line: 156, column: 19, scope: !4282)
!4293 = !DILocation(line: 156, column: 17, scope: !4282)
!4294 = !DILocation(line: 156, column: 13, scope: !4282)
!4295 = !DILocation(line: 155, column: 57, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !4282, file: !957, discriminator: 1)
!4297 = !DILocation(line: 154, column: 29, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !4278, file: !957, discriminator: 2)
!4299 = !DILocation(line: 154, column: 5, scope: !4298)
!4300 = distinct !{!4300, !4301}
!4301 = !DILocation(line: 154, column: 5, scope: !3825)
!4302 = !DILocation(line: 157, column: 12, scope: !3825)
!4303 = !DILocation(line: 157, column: 10, scope: !3825)
!4304 = !DILocation(line: 158, column: 5, scope: !3825)
!4305 = !DILocation(line: 158, column: 12, scope: !4306)
!4306 = !DILexicalBlockFile(scope: !3825, file: !957, discriminator: 1)
!4307 = !DILocation(line: 158, column: 17, scope: !4306)
!4308 = !DILocation(line: 158, column: 5, scope: !4306)
!4309 = !DILocation(line: 160, column: 14, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !3825, file: !957, line: 158, column: 22)
!4311 = !DILocation(line: 160, column: 12, scope: !4310)
!4312 = !DILocation(line: 161, column: 42, scope: !4310)
!4313 = !DILocation(line: 161, column: 31, scope: !4310)
!4314 = !DILocation(line: 161, column: 36, scope: !4310)
!4315 = !DILocation(line: 161, column: 46, scope: !4310)
!4316 = !DILocation(line: 161, column: 18, scope: !4310)
!4317 = !DILocation(line: 161, column: 9, scope: !4310)
!4318 = !DILocation(line: 161, column: 29, scope: !4310)
!4319 = !DILocation(line: 162, column: 31, scope: !4310)
!4320 = !DILocation(line: 162, column: 18, scope: !4310)
!4321 = !DILocation(line: 162, column: 9, scope: !4310)
!4322 = !DILocation(line: 162, column: 29, scope: !4310)
!4323 = !DILocation(line: 163, column: 47, scope: !4310)
!4324 = !DILocation(line: 163, column: 15, scope: !4310)
!4325 = !DILocation(line: 163, column: 20, scope: !4310)
!4326 = !DILocation(line: 163, column: 36, scope: !4310)
!4327 = !DILocation(line: 163, column: 25, scope: !4310)
!4328 = !DILocation(line: 163, column: 30, scope: !4310)
!4329 = !DILocation(line: 163, column: 40, scope: !4310)
!4330 = !DILocation(line: 163, column: 24, scope: !4310)
!4331 = !DILocation(line: 163, column: 43, scope: !4310)
!4332 = !DILocation(line: 163, column: 51, scope: !4310)
!4333 = !DILocation(line: 163, column: 13, scope: !4310)
!4334 = !DILocation(line: 164, column: 28, scope: !4310)
!4335 = !DILocation(line: 164, column: 17, scope: !4310)
!4336 = !DILocation(line: 164, column: 22, scope: !4310)
!4337 = !DILocation(line: 164, column: 32, scope: !4310)
!4338 = !DILocation(line: 164, column: 14, scope: !4310)
!4339 = !DILocation(line: 165, column: 18, scope: !4310)
!4340 = !DILocation(line: 158, column: 5, scope: !4341)
!4341 = !DILexicalBlockFile(scope: !3825, file: !957, discriminator: 2)
!4342 = distinct !{!4342, !4304}
!4343 = !DILocation(line: 168, column: 11, scope: !3825)
!4344 = !DILocation(line: 169, column: 14, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !3825, file: !957, line: 169, column: 5)
!4346 = !DILocation(line: 169, column: 24, scope: !4345)
!4347 = !DILocation(line: 169, column: 12, scope: !4345)
!4348 = !DILocation(line: 169, column: 10, scope: !4345)
!4349 = !DILocation(line: 169, column: 29, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4351, file: !957, discriminator: 1)
!4351 = distinct !DILexicalBlock(scope: !4345, file: !957, line: 169, column: 5)
!4352 = !DILocation(line: 169, column: 31, scope: !4350)
!4353 = !DILocation(line: 169, column: 5, scope: !4350)
!4354 = !DILocation(line: 170, column: 37, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4351, file: !957, line: 169, column: 42)
!4356 = !DILocation(line: 170, column: 29, scope: !4355)
!4357 = !DILocation(line: 170, column: 14, scope: !4355)
!4358 = !DILocation(line: 170, column: 12, scope: !4355)
!4359 = !DILocation(line: 171, column: 19, scope: !4355)
!4360 = !DILocation(line: 171, column: 22, scope: !4355)
!4361 = !DILocation(line: 171, column: 29, scope: !4355)
!4362 = !DILocation(line: 171, column: 9, scope: !4355)
!4363 = !DILocation(line: 172, column: 26, scope: !4355)
!4364 = !DILocation(line: 172, column: 17, scope: !4355)
!4365 = !DILocation(line: 172, column: 15, scope: !4355)
!4366 = !DILocation(line: 173, column: 16, scope: !4355)
!4367 = !DILocation(line: 173, column: 21, scope: !4355)
!4368 = !DILocation(line: 173, column: 30, scope: !4355)
!4369 = !DILocation(line: 173, column: 33, scope: !4355)
!4370 = !DILocation(line: 173, column: 28, scope: !4355)
!4371 = !DILocation(line: 173, column: 39, scope: !4355)
!4372 = !DILocation(line: 173, column: 37, scope: !4355)
!4373 = !DILocation(line: 173, column: 47, scope: !4355)
!4374 = !DILocation(line: 173, column: 46, scope: !4355)
!4375 = !DILocation(line: 173, column: 9, scope: !4355)
!4376 = !DILocation(line: 173, column: 51, scope: !4355)
!4377 = !DILocation(line: 175, column: 16, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4355, file: !957, line: 175, column: 9)
!4379 = !DILocation(line: 175, column: 14, scope: !4378)
!4380 = !DILocation(line: 175, column: 21, scope: !4381)
!4381 = !DILexicalBlockFile(scope: !4382, file: !957, discriminator: 1)
!4382 = distinct !DILexicalBlock(scope: !4378, file: !957, line: 175, column: 9)
!4383 = !DILocation(line: 175, column: 25, scope: !4381)
!4384 = !DILocation(line: 175, column: 23, scope: !4381)
!4385 = !DILocation(line: 175, column: 9, scope: !4381)
!4386 = !DILocation(line: 176, column: 46, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4382, file: !957, line: 175, column: 37)
!4388 = !DILocation(line: 176, column: 28, scope: !4387)
!4389 = !DILocation(line: 176, column: 31, scope: !4387)
!4390 = !DILocation(line: 176, column: 37, scope: !4387)
!4391 = !DILocation(line: 176, column: 35, scope: !4387)
!4392 = !DILocation(line: 176, column: 13, scope: !4387)
!4393 = !DILocation(line: 176, column: 18, scope: !4387)
!4394 = !DILocation(line: 176, column: 44, scope: !4387)
!4395 = !DILocation(line: 177, column: 18, scope: !4387)
!4396 = !DILocation(line: 178, column: 9, scope: !4387)
!4397 = !DILocation(line: 175, column: 33, scope: !4398)
!4398 = !DILexicalBlockFile(scope: !4382, file: !957, discriminator: 2)
!4399 = !DILocation(line: 175, column: 9, scope: !4398)
!4400 = distinct !{!4400, !4401}
!4401 = !DILocation(line: 175, column: 9, scope: !4355)
!4402 = !DILocation(line: 179, column: 9, scope: !4355)
!4403 = !DILocation(line: 179, column: 16, scope: !4404)
!4404 = !DILexicalBlockFile(scope: !4355, file: !957, discriminator: 1)
!4405 = !DILocation(line: 179, column: 25, scope: !4404)
!4406 = !DILocation(line: 179, column: 22, scope: !4404)
!4407 = !DILocation(line: 179, column: 9, scope: !4404)
!4408 = !DILocation(line: 180, column: 23, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4355, file: !957, line: 179, column: 34)
!4410 = !DILocation(line: 180, column: 26, scope: !4409)
!4411 = !DILocation(line: 180, column: 30, scope: !4409)
!4412 = !DILocation(line: 180, column: 40, scope: !4409)
!4413 = !DILocation(line: 180, column: 13, scope: !4409)
!4414 = !DILocation(line: 181, column: 22, scope: !4409)
!4415 = !DILocation(line: 181, column: 19, scope: !4409)
!4416 = !DILocation(line: 179, column: 9, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4355, file: !957, discriminator: 2)
!4418 = distinct !{!4418, !4402}
!4419 = !DILocation(line: 183, column: 19, scope: !4355)
!4420 = !DILocation(line: 183, column: 22, scope: !4355)
!4421 = !DILocation(line: 183, column: 26, scope: !4355)
!4422 = !DILocation(line: 183, column: 36, scope: !4355)
!4423 = !DILocation(line: 183, column: 9, scope: !4355)
!4424 = !DILocation(line: 184, column: 5, scope: !4355)
!4425 = !DILocation(line: 169, column: 38, scope: !4426)
!4426 = !DILexicalBlockFile(scope: !4351, file: !957, discriminator: 2)
!4427 = !DILocation(line: 169, column: 5, scope: !4426)
!4428 = distinct !{!4428, !4429}
!4429 = !DILocation(line: 169, column: 5, scope: !3825)
!4430 = !DILocation(line: 185, column: 1, scope: !3825)
!4431 = distinct !DISubprogram(name: "quantize_and_encode_band", scope: !2734, file: !2734, line: 273, type: !2689, isLocal: true, isDefinition: true, scopeLine: 276, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!4432 = !DILocalVariable(name: "s", arg: 1, scope: !4431, file: !2734, line: 273, type: !1695)
!4433 = !DILocation(line: 273, column: 67, scope: !4431)
!4434 = !DILocalVariable(name: "pb", arg: 2, scope: !4431, file: !2734, line: 273, type: !2691)
!4435 = !DILocation(line: 273, column: 85, scope: !4431)
!4436 = !DILocalVariable(name: "in", arg: 3, scope: !4431, file: !2734, line: 274, type: !1780)
!4437 = !DILocation(line: 274, column: 58, scope: !4431)
!4438 = !DILocalVariable(name: "out", arg: 4, scope: !4431, file: !2734, line: 274, type: !1779)
!4439 = !DILocation(line: 274, column: 69, scope: !4431)
!4440 = !DILocalVariable(name: "size", arg: 5, scope: !4431, file: !2734, line: 274, type: !991)
!4441 = !DILocation(line: 274, column: 78, scope: !4431)
!4442 = !DILocalVariable(name: "scale_idx", arg: 6, scope: !4431, file: !2734, line: 274, type: !991)
!4443 = !DILocation(line: 274, column: 88, scope: !4431)
!4444 = !DILocalVariable(name: "cb", arg: 7, scope: !4431, file: !2734, line: 275, type: !991)
!4445 = !DILocation(line: 275, column: 49, scope: !4431)
!4446 = !DILocalVariable(name: "lambda", arg: 8, scope: !4431, file: !2734, line: 275, type: !1781)
!4447 = !DILocation(line: 275, column: 65, scope: !4431)
!4448 = !DILocalVariable(name: "rtz", arg: 9, scope: !4431, file: !2734, line: 275, type: !991)
!4449 = !DILocation(line: 275, column: 77, scope: !4431)
!4450 = !DILocation(line: 277, column: 89, scope: !4431)
!4451 = !DILocation(line: 277, column: 5, scope: !4431)
!4452 = !DILocation(line: 277, column: 7, scope: !4431)
!4453 = !DILocation(line: 277, column: 6, scope: !4431)
!4454 = !DILocation(line: 277, column: 94, scope: !4431)
!4455 = !DILocation(line: 277, column: 97, scope: !4431)
!4456 = !DILocation(line: 277, column: 101, scope: !4431)
!4457 = !DILocation(line: 277, column: 105, scope: !4431)
!4458 = !DILocation(line: 277, column: 12, scope: !4431)
!4459 = !DILocation(line: 277, column: 23, scope: !4431)
!4460 = !DILocation(line: 277, column: 27, scope: !4431)
!4461 = !DILocation(line: 279, column: 1, scope: !4431)
!4462 = distinct !DISubprogram(name: "set_special_band_scalefactors", scope: !957, file: !957, line: 196, type: !4463, isLocal: true, isDefinition: true, scopeLine: 197, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{null, !2764, !2458}
!4465 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !4466)
!4466 = distinct !DILocation(line: 210, column: 39, scope: !4467)
!4467 = !DILexicalBlockFile(scope: !4468, file: !957, discriminator: 2)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !957, line: 209, column: 60)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !957, line: 209, column: 24)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !957, line: 206, column: 17)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !957, line: 203, column: 48)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !957, line: 203, column: 9)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !957, line: 203, column: 9)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !957, line: 202, column: 71)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !957, line: 202, column: 5)
!4476 = distinct !DILexicalBlock(scope: !4462, file: !957, line: 202, column: 5)
!4477 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !4466)
!4478 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !4466)
!4479 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !4480)
!4480 = distinct !DILocation(line: 227, column: 54, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !957, line: 226, column: 100)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !957, line: 226, column: 17)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !957, line: 223, column: 48)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !957, line: 223, column: 9)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !957, line: 223, column: 9)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !957, line: 222, column: 71)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !957, line: 222, column: 5)
!4488 = distinct !DILexicalBlock(scope: !4462, file: !957, line: 222, column: 5)
!4489 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !4480)
!4490 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !4480)
!4491 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !4492)
!4492 = distinct !DILocation(line: 229, column: 54, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !957, line: 228, column: 60)
!4494 = distinct !DILexicalBlock(scope: !4482, file: !957, line: 228, column: 24)
!4495 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !4492)
!4496 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !4492)
!4497 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !4498)
!4498 = distinct !DILocation(line: 207, column: 39, scope: !4499)
!4499 = !DILexicalBlockFile(scope: !4500, file: !957, discriminator: 2)
!4500 = distinct !DILexicalBlock(scope: !4470, file: !957, line: 206, column: 100)
!4501 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !4498)
!4502 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !4498)
!4503 = !DILocalVariable(name: "s", arg: 1, scope: !4462, file: !957, line: 196, type: !2764)
!4504 = !DILocation(line: 196, column: 58, scope: !4462)
!4505 = !DILocalVariable(name: "sce", arg: 2, scope: !4462, file: !957, line: 196, type: !2458)
!4506 = !DILocation(line: 196, column: 83, scope: !4462)
!4507 = !DILocalVariable(name: "w", scope: !4462, file: !957, line: 198, type: !991)
!4508 = !DILocation(line: 198, column: 9, scope: !4462)
!4509 = !DILocalVariable(name: "g", scope: !4462, file: !957, line: 198, type: !991)
!4510 = !DILocation(line: 198, column: 12, scope: !4462)
!4511 = !DILocalVariable(name: "prevscaler_n", scope: !4462, file: !957, line: 199, type: !991)
!4512 = !DILocation(line: 199, column: 9, scope: !4462)
!4513 = !DILocalVariable(name: "prevscaler_i", scope: !4462, file: !957, line: 199, type: !991)
!4514 = !DILocation(line: 199, column: 30, scope: !4462)
!4515 = !DILocalVariable(name: "bands", scope: !4462, file: !957, line: 200, type: !991)
!4516 = !DILocation(line: 200, column: 9, scope: !4462)
!4517 = !DILocation(line: 202, column: 12, scope: !4476)
!4518 = !DILocation(line: 202, column: 10, scope: !4476)
!4519 = !DILocation(line: 202, column: 17, scope: !4520)
!4520 = !DILexicalBlockFile(scope: !4475, file: !957, discriminator: 1)
!4521 = !DILocation(line: 202, column: 21, scope: !4520)
!4522 = !DILocation(line: 202, column: 26, scope: !4520)
!4523 = !DILocation(line: 202, column: 30, scope: !4520)
!4524 = !DILocation(line: 202, column: 19, scope: !4520)
!4525 = !DILocation(line: 202, column: 5, scope: !4520)
!4526 = !DILocation(line: 203, column: 16, scope: !4473)
!4527 = !DILocation(line: 203, column: 14, scope: !4473)
!4528 = !DILocation(line: 203, column: 21, scope: !4529)
!4529 = !DILexicalBlockFile(scope: !4472, file: !957, discriminator: 1)
!4530 = !DILocation(line: 203, column: 25, scope: !4529)
!4531 = !DILocation(line: 203, column: 30, scope: !4529)
!4532 = !DILocation(line: 203, column: 34, scope: !4529)
!4533 = !DILocation(line: 203, column: 23, scope: !4529)
!4534 = !DILocation(line: 203, column: 9, scope: !4529)
!4535 = !DILocation(line: 204, column: 29, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4471, file: !957, line: 204, column: 17)
!4537 = !DILocation(line: 204, column: 30, scope: !4536)
!4538 = !DILocation(line: 204, column: 34, scope: !4536)
!4539 = !DILocation(line: 204, column: 33, scope: !4536)
!4540 = !DILocation(line: 204, column: 17, scope: !4536)
!4541 = !DILocation(line: 204, column: 22, scope: !4536)
!4542 = !DILocation(line: 204, column: 17, scope: !4471)
!4543 = !DILocation(line: 205, column: 17, scope: !4536)
!4544 = !DILocation(line: 206, column: 32, scope: !4470)
!4545 = !DILocation(line: 206, column: 33, scope: !4470)
!4546 = !DILocation(line: 206, column: 37, scope: !4470)
!4547 = !DILocation(line: 206, column: 36, scope: !4470)
!4548 = !DILocation(line: 206, column: 17, scope: !4470)
!4549 = !DILocation(line: 206, column: 22, scope: !4470)
!4550 = !DILocation(line: 206, column: 40, scope: !4470)
!4551 = !DILocation(line: 206, column: 56, scope: !4470)
!4552 = !DILocation(line: 206, column: 74, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !4470, file: !957, discriminator: 1)
!4554 = !DILocation(line: 206, column: 75, scope: !4553)
!4555 = !DILocation(line: 206, column: 79, scope: !4553)
!4556 = !DILocation(line: 206, column: 78, scope: !4553)
!4557 = !DILocation(line: 206, column: 59, scope: !4553)
!4558 = !DILocation(line: 206, column: 64, scope: !4553)
!4559 = !DILocation(line: 206, column: 82, scope: !4553)
!4560 = !DILocation(line: 206, column: 17, scope: !4553)
!4561 = !DILocation(line: 207, column: 75, scope: !4500)
!4562 = !DILocation(line: 207, column: 76, scope: !4500)
!4563 = !DILocation(line: 207, column: 80, scope: !4500)
!4564 = !DILocation(line: 207, column: 79, scope: !4500)
!4565 = !DILocation(line: 207, column: 62, scope: !4500)
!4566 = !DILocation(line: 207, column: 67, scope: !4500)
!4567 = !DILocation(line: 207, column: 56, scope: !4500)
!4568 = !DILocation(line: 207, column: 83, scope: !4500)
!4569 = !DILocation(line: 207, column: 49, scope: !4570)
!4570 = !DILexicalBlockFile(scope: !4500, file: !957, discriminator: 1)
!4571 = !DILocation(line: 207, column: 49, scope: !4500)
!4572 = !DILocation(line: 207, column: 39, scope: !4499)
!4573 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !4498)
!4574 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !4498)
!4575 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !4498)
!4576 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !4498)
!4577 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !4498)
!4578 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !4498)
!4579 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !4498)
!4580 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !4498)
!4581 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !4498)
!4582 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !4498)
!4583 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !4498)
!4584 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !4498)
!4585 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !4498)
!4586 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !4498)
!4587 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !4498)
!4588 = !DILocation(line: 207, column: 29, scope: !4500)
!4589 = !DILocation(line: 207, column: 30, scope: !4500)
!4590 = !DILocation(line: 207, column: 34, scope: !4500)
!4591 = !DILocation(line: 207, column: 33, scope: !4500)
!4592 = !DILocation(line: 207, column: 17, scope: !4500)
!4593 = !DILocation(line: 207, column: 22, scope: !4500)
!4594 = !DILocation(line: 207, column: 37, scope: !4500)
!4595 = !DILocation(line: 208, column: 22, scope: !4500)
!4596 = !DILocation(line: 209, column: 13, scope: !4500)
!4597 = !DILocation(line: 209, column: 39, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !4469, file: !957, discriminator: 1)
!4599 = !DILocation(line: 209, column: 40, scope: !4598)
!4600 = !DILocation(line: 209, column: 44, scope: !4598)
!4601 = !DILocation(line: 209, column: 43, scope: !4598)
!4602 = !DILocation(line: 209, column: 24, scope: !4598)
!4603 = !DILocation(line: 209, column: 29, scope: !4598)
!4604 = !DILocation(line: 209, column: 47, scope: !4598)
!4605 = !DILocation(line: 210, column: 77, scope: !4468)
!4606 = !DILocation(line: 210, column: 78, scope: !4468)
!4607 = !DILocation(line: 210, column: 82, scope: !4468)
!4608 = !DILocation(line: 210, column: 81, scope: !4468)
!4609 = !DILocation(line: 210, column: 63, scope: !4468)
!4610 = !DILocation(line: 210, column: 68, scope: !4468)
!4611 = !DILocation(line: 210, column: 57, scope: !4468)
!4612 = !DILocation(line: 210, column: 85, scope: !4468)
!4613 = !DILocation(line: 210, column: 51, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4468, file: !957, discriminator: 1)
!4615 = !DILocation(line: 210, column: 50, scope: !4468)
!4616 = !DILocation(line: 210, column: 49, scope: !4468)
!4617 = !DILocation(line: 210, column: 39, scope: !4467)
!4618 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !4466)
!4619 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !4466)
!4620 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !4466)
!4621 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !4466)
!4622 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !4466)
!4623 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !4466)
!4624 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !4466)
!4625 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !4466)
!4626 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !4466)
!4627 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !4466)
!4628 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !4466)
!4629 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !4466)
!4630 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !4466)
!4631 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !4466)
!4632 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !4466)
!4633 = !DILocation(line: 210, column: 29, scope: !4468)
!4634 = !DILocation(line: 210, column: 30, scope: !4468)
!4635 = !DILocation(line: 210, column: 34, scope: !4468)
!4636 = !DILocation(line: 210, column: 33, scope: !4468)
!4637 = !DILocation(line: 210, column: 17, scope: !4468)
!4638 = !DILocation(line: 210, column: 22, scope: !4468)
!4639 = !DILocation(line: 210, column: 37, scope: !4468)
!4640 = !DILocation(line: 211, column: 21, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4468, file: !957, line: 211, column: 21)
!4642 = !DILocation(line: 211, column: 34, scope: !4641)
!4643 = !DILocation(line: 211, column: 21, scope: !4468)
!4644 = !DILocation(line: 212, column: 48, scope: !4641)
!4645 = !DILocation(line: 212, column: 49, scope: !4641)
!4646 = !DILocation(line: 212, column: 53, scope: !4641)
!4647 = !DILocation(line: 212, column: 52, scope: !4641)
!4648 = !DILocation(line: 212, column: 36, scope: !4641)
!4649 = !DILocation(line: 212, column: 41, scope: !4641)
!4650 = !DILocation(line: 212, column: 34, scope: !4641)
!4651 = !DILocation(line: 212, column: 21, scope: !4641)
!4652 = !DILocation(line: 213, column: 22, scope: !4468)
!4653 = !DILocation(line: 214, column: 13, scope: !4468)
!4654 = !DILocation(line: 215, column: 9, scope: !4471)
!4655 = !DILocation(line: 203, column: 44, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4472, file: !957, discriminator: 2)
!4657 = !DILocation(line: 203, column: 9, scope: !4656)
!4658 = distinct !{!4658, !4659}
!4659 = !DILocation(line: 203, column: 9, scope: !4474)
!4660 = !DILocation(line: 216, column: 5, scope: !4474)
!4661 = !DILocation(line: 202, column: 67, scope: !4662)
!4662 = !DILexicalBlockFile(scope: !4475, file: !957, discriminator: 2)
!4663 = !DILocation(line: 202, column: 48, scope: !4662)
!4664 = !DILocation(line: 202, column: 53, scope: !4662)
!4665 = !DILocation(line: 202, column: 57, scope: !4662)
!4666 = !DILocation(line: 202, column: 45, scope: !4662)
!4667 = !DILocation(line: 202, column: 5, scope: !4662)
!4668 = distinct !{!4668, !4669}
!4669 = !DILocation(line: 202, column: 5, scope: !4462)
!4670 = !DILocation(line: 218, column: 10, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4462, file: !957, line: 218, column: 9)
!4672 = !DILocation(line: 218, column: 9, scope: !4462)
!4673 = !DILocation(line: 219, column: 9, scope: !4671)
!4674 = !DILocation(line: 222, column: 12, scope: !4488)
!4675 = !DILocation(line: 222, column: 10, scope: !4488)
!4676 = !DILocation(line: 222, column: 17, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !4487, file: !957, discriminator: 1)
!4678 = !DILocation(line: 222, column: 21, scope: !4677)
!4679 = !DILocation(line: 222, column: 26, scope: !4677)
!4680 = !DILocation(line: 222, column: 30, scope: !4677)
!4681 = !DILocation(line: 222, column: 19, scope: !4677)
!4682 = !DILocation(line: 222, column: 5, scope: !4677)
!4683 = !DILocation(line: 223, column: 16, scope: !4485)
!4684 = !DILocation(line: 223, column: 14, scope: !4485)
!4685 = !DILocation(line: 223, column: 21, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4484, file: !957, discriminator: 1)
!4687 = !DILocation(line: 223, column: 25, scope: !4686)
!4688 = !DILocation(line: 223, column: 30, scope: !4686)
!4689 = !DILocation(line: 223, column: 34, scope: !4686)
!4690 = !DILocation(line: 223, column: 23, scope: !4686)
!4691 = !DILocation(line: 223, column: 9, scope: !4686)
!4692 = !DILocation(line: 224, column: 29, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4483, file: !957, line: 224, column: 17)
!4694 = !DILocation(line: 224, column: 30, scope: !4693)
!4695 = !DILocation(line: 224, column: 34, scope: !4693)
!4696 = !DILocation(line: 224, column: 33, scope: !4693)
!4697 = !DILocation(line: 224, column: 17, scope: !4693)
!4698 = !DILocation(line: 224, column: 22, scope: !4693)
!4699 = !DILocation(line: 224, column: 17, scope: !4483)
!4700 = !DILocation(line: 225, column: 17, scope: !4693)
!4701 = !DILocation(line: 226, column: 32, scope: !4482)
!4702 = !DILocation(line: 226, column: 33, scope: !4482)
!4703 = !DILocation(line: 226, column: 37, scope: !4482)
!4704 = !DILocation(line: 226, column: 36, scope: !4482)
!4705 = !DILocation(line: 226, column: 17, scope: !4482)
!4706 = !DILocation(line: 226, column: 22, scope: !4482)
!4707 = !DILocation(line: 226, column: 40, scope: !4482)
!4708 = !DILocation(line: 226, column: 56, scope: !4482)
!4709 = !DILocation(line: 226, column: 74, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4482, file: !957, discriminator: 1)
!4711 = !DILocation(line: 226, column: 75, scope: !4710)
!4712 = !DILocation(line: 226, column: 79, scope: !4710)
!4713 = !DILocation(line: 226, column: 78, scope: !4710)
!4714 = !DILocation(line: 226, column: 59, scope: !4710)
!4715 = !DILocation(line: 226, column: 64, scope: !4710)
!4716 = !DILocation(line: 226, column: 82, scope: !4710)
!4717 = !DILocation(line: 226, column: 17, scope: !4710)
!4718 = !DILocation(line: 227, column: 76, scope: !4481)
!4719 = !DILocation(line: 227, column: 77, scope: !4481)
!4720 = !DILocation(line: 227, column: 81, scope: !4481)
!4721 = !DILocation(line: 227, column: 80, scope: !4481)
!4722 = !DILocation(line: 227, column: 64, scope: !4481)
!4723 = !DILocation(line: 227, column: 69, scope: !4481)
!4724 = !DILocation(line: 227, column: 85, scope: !4481)
!4725 = !DILocation(line: 227, column: 98, scope: !4481)
!4726 = !DILocation(line: 227, column: 104, scope: !4481)
!4727 = !DILocation(line: 227, column: 117, scope: !4481)
!4728 = !DILocation(line: 227, column: 54, scope: !4481)
!4729 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !4480)
!4730 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !4480)
!4731 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !4480)
!4732 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !4480)
!4733 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !4480)
!4734 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !4480)
!4735 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !4480)
!4736 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !4480)
!4737 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !4480)
!4738 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !4480)
!4739 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !4480)
!4740 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !4480)
!4741 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !4480)
!4742 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !4480)
!4743 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !4480)
!4744 = !DILocation(line: 227, column: 52, scope: !4481)
!4745 = !DILocation(line: 227, column: 29, scope: !4481)
!4746 = !DILocation(line: 227, column: 30, scope: !4481)
!4747 = !DILocation(line: 227, column: 34, scope: !4481)
!4748 = !DILocation(line: 227, column: 33, scope: !4481)
!4749 = !DILocation(line: 227, column: 17, scope: !4481)
!4750 = !DILocation(line: 227, column: 22, scope: !4481)
!4751 = !DILocation(line: 227, column: 37, scope: !4481)
!4752 = !DILocation(line: 228, column: 13, scope: !4481)
!4753 = !DILocation(line: 228, column: 39, scope: !4754)
!4754 = !DILexicalBlockFile(scope: !4494, file: !957, discriminator: 1)
!4755 = !DILocation(line: 228, column: 40, scope: !4754)
!4756 = !DILocation(line: 228, column: 44, scope: !4754)
!4757 = !DILocation(line: 228, column: 43, scope: !4754)
!4758 = !DILocation(line: 228, column: 24, scope: !4754)
!4759 = !DILocation(line: 228, column: 29, scope: !4754)
!4760 = !DILocation(line: 228, column: 47, scope: !4754)
!4761 = !DILocation(line: 229, column: 76, scope: !4493)
!4762 = !DILocation(line: 229, column: 77, scope: !4493)
!4763 = !DILocation(line: 229, column: 81, scope: !4493)
!4764 = !DILocation(line: 229, column: 80, scope: !4493)
!4765 = !DILocation(line: 229, column: 64, scope: !4493)
!4766 = !DILocation(line: 229, column: 69, scope: !4493)
!4767 = !DILocation(line: 229, column: 85, scope: !4493)
!4768 = !DILocation(line: 229, column: 98, scope: !4493)
!4769 = !DILocation(line: 229, column: 104, scope: !4493)
!4770 = !DILocation(line: 229, column: 117, scope: !4493)
!4771 = !DILocation(line: 229, column: 54, scope: !4493)
!4772 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !4492)
!4773 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !4492)
!4774 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !4492)
!4775 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !4492)
!4776 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !4492)
!4777 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !4492)
!4778 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !4492)
!4779 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !4492)
!4780 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !4492)
!4781 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !4492)
!4782 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !4492)
!4783 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !4492)
!4784 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !4492)
!4785 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !4492)
!4786 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !4492)
!4787 = !DILocation(line: 229, column: 52, scope: !4493)
!4788 = !DILocation(line: 229, column: 29, scope: !4493)
!4789 = !DILocation(line: 229, column: 30, scope: !4493)
!4790 = !DILocation(line: 229, column: 34, scope: !4493)
!4791 = !DILocation(line: 229, column: 33, scope: !4493)
!4792 = !DILocation(line: 229, column: 17, scope: !4493)
!4793 = !DILocation(line: 229, column: 22, scope: !4493)
!4794 = !DILocation(line: 229, column: 37, scope: !4493)
!4795 = !DILocation(line: 230, column: 13, scope: !4493)
!4796 = !DILocation(line: 231, column: 9, scope: !4483)
!4797 = !DILocation(line: 223, column: 44, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !4484, file: !957, discriminator: 2)
!4799 = !DILocation(line: 223, column: 9, scope: !4798)
!4800 = distinct !{!4800, !4801}
!4801 = !DILocation(line: 223, column: 9, scope: !4486)
!4802 = !DILocation(line: 232, column: 5, scope: !4486)
!4803 = !DILocation(line: 222, column: 67, scope: !4804)
!4804 = !DILexicalBlockFile(scope: !4487, file: !957, discriminator: 2)
!4805 = !DILocation(line: 222, column: 48, scope: !4804)
!4806 = !DILocation(line: 222, column: 53, scope: !4804)
!4807 = !DILocation(line: 222, column: 57, scope: !4804)
!4808 = !DILocation(line: 222, column: 45, scope: !4804)
!4809 = !DILocation(line: 222, column: 5, scope: !4804)
!4810 = distinct !{!4810, !4811}
!4811 = !DILocation(line: 222, column: 5, scope: !4462)
!4812 = !DILocation(line: 233, column: 1, scope: !4462)
!4813 = distinct !DISubprogram(name: "search_for_pns", scope: !957, file: !957, line: 543, type: !4814, isLocal: true, isDefinition: true, scopeLine: 544, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{null, !2764, !968, !2458}
!4816 = !DILocalVariable(name: "previous_val", arg: 1, scope: !4817, file: !4818, line: 262, type: !952)
!4817 = distinct !DISubprogram(name: "lcg_random", scope: !4818, file: !4818, line: 262, type: !4819, isLocal: true, isDefinition: true, scopeLine: 263, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!4818 = !DIFile(filename: "libavcodec/aacenc_utils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!991, !952}
!4821 = !DILocation(line: 262, column: 70, scope: !4817, inlinedAt: !4822)
!4822 = distinct !DILocation(line: 647, column: 39, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !957, line: 646, column: 61)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !957, line: 646, column: 17)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !957, line: 646, column: 17)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !957, line: 642, column: 60)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !957, line: 642, column: 13)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 642, column: 13)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !957, line: 584, column: 48)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !957, line: 584, column: 9)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !957, line: 584, column: 9)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !957, line: 582, column: 71)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !957, line: 582, column: 5)
!4834 = distinct !DILexicalBlock(scope: !4813, file: !957, line: 582, column: 5)
!4835 = !DILocalVariable(name: "v", scope: !4817, file: !4818, line: 264, type: !4836)
!4836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4817, file: !4818, line: 264, size: 32, align: 32, elements: !4837)
!4837 = !{!4838, !4839}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !4836, file: !4818, line: 264, baseType: !952, size: 32, align: 32)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4836, file: !4818, line: 264, baseType: !991, size: 32, align: 32)
!4840 = !DILocation(line: 264, column: 34, scope: !4817, inlinedAt: !4822)
!4841 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !4842)
!4842 = distinct !DILocation(line: 632, column: 25, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4829, file: !957, discriminator: 2)
!4844 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !4842)
!4845 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !4842)
!4846 = !DILocalVariable(name: "a", arg: 1, scope: !4847, file: !4848, line: 124, type: !954)
!4847 = distinct !DISubprogram(name: "av_clipf_sse", scope: !4848, file: !4848, line: 124, type: !4849, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!4848 = !DIFile(filename: "./libavutil/x86/intmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!954, !954, !954, !954}
!4851 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !4852)
!4852 = distinct !DILocation(line: 612, column: 27, scope: !4829)
!4853 = !DILocalVariable(name: "amin", arg: 2, scope: !4847, file: !4848, line: 124, type: !954)
!4854 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !4852)
!4855 = !DILocalVariable(name: "amax", arg: 3, scope: !4847, file: !4848, line: 124, type: !954)
!4856 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !4852)
!4857 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !4858)
!4858 = distinct !DILocation(line: 556, column: 29, scope: !4813)
!4859 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !4858)
!4860 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !4858)
!4861 = !DILocalVariable(name: "s", arg: 1, scope: !4813, file: !957, line: 543, type: !2764)
!4862 = !DILocation(line: 543, column: 43, scope: !4813)
!4863 = !DILocalVariable(name: "avctx", arg: 2, scope: !4813, file: !957, line: 543, type: !968)
!4864 = !DILocation(line: 543, column: 62, scope: !4813)
!4865 = !DILocalVariable(name: "sce", arg: 3, scope: !4813, file: !957, line: 543, type: !2458)
!4866 = !DILocation(line: 543, column: 91, scope: !4813)
!4867 = !DILocalVariable(name: "band", scope: !4813, file: !957, line: 545, type: !3232)
!4868 = !DILocation(line: 545, column: 16, scope: !4813)
!4869 = !DILocalVariable(name: "w", scope: !4813, file: !957, line: 546, type: !991)
!4870 = !DILocation(line: 546, column: 9, scope: !4813)
!4871 = !DILocalVariable(name: "g", scope: !4813, file: !957, line: 546, type: !991)
!4872 = !DILocation(line: 546, column: 12, scope: !4813)
!4873 = !DILocalVariable(name: "w2", scope: !4813, file: !957, line: 546, type: !991)
!4874 = !DILocation(line: 546, column: 15, scope: !4813)
!4875 = !DILocalVariable(name: "i", scope: !4813, file: !957, line: 546, type: !991)
!4876 = !DILocation(line: 546, column: 19, scope: !4813)
!4877 = !DILocalVariable(name: "wlen", scope: !4813, file: !957, line: 547, type: !991)
!4878 = !DILocation(line: 547, column: 9, scope: !4813)
!4879 = !DILocation(line: 547, column: 23, scope: !4813)
!4880 = !DILocation(line: 547, column: 28, scope: !4813)
!4881 = !DILocation(line: 547, column: 32, scope: !4813)
!4882 = !DILocation(line: 547, column: 21, scope: !4813)
!4883 = !DILocalVariable(name: "bandwidth", scope: !4813, file: !957, line: 548, type: !991)
!4884 = !DILocation(line: 548, column: 9, scope: !4813)
!4885 = !DILocalVariable(name: "cutoff", scope: !4813, file: !957, line: 548, type: !991)
!4886 = !DILocation(line: 548, column: 20, scope: !4813)
!4887 = !DILocalVariable(name: "PNS", scope: !4813, file: !957, line: 549, type: !1779)
!4888 = !DILocation(line: 549, column: 12, scope: !4813)
!4889 = !DILocation(line: 549, column: 19, scope: !4813)
!4890 = !DILocation(line: 549, column: 22, scope: !4813)
!4891 = !DILocalVariable(name: "PNS34", scope: !4813, file: !957, line: 549, type: !1779)
!4892 = !DILocation(line: 549, column: 38, scope: !4813)
!4893 = !DILocation(line: 549, column: 47, scope: !4813)
!4894 = !DILocation(line: 549, column: 50, scope: !4813)
!4895 = !DILocalVariable(name: "NOR34", scope: !4813, file: !957, line: 550, type: !1779)
!4896 = !DILocation(line: 550, column: 12, scope: !4813)
!4897 = !DILocation(line: 550, column: 21, scope: !4813)
!4898 = !DILocation(line: 550, column: 24, scope: !4813)
!4899 = !DILocalVariable(name: "nextband", scope: !4813, file: !957, line: 551, type: !1900)
!4900 = !DILocation(line: 551, column: 13, scope: !4813)
!4901 = !DILocalVariable(name: "lambda", scope: !4813, file: !957, line: 552, type: !1781)
!4902 = !DILocation(line: 552, column: 17, scope: !4813)
!4903 = !DILocation(line: 552, column: 26, scope: !4813)
!4904 = !DILocation(line: 552, column: 29, scope: !4813)
!4905 = !DILocalVariable(name: "freq_mult", scope: !4813, file: !957, line: 553, type: !1781)
!4906 = !DILocation(line: 553, column: 17, scope: !4813)
!4907 = !DILocation(line: 553, column: 29, scope: !4813)
!4908 = !DILocation(line: 553, column: 36, scope: !4813)
!4909 = !DILocation(line: 553, column: 47, scope: !4813)
!4910 = !DILocation(line: 553, column: 53, scope: !4813)
!4911 = !DILocation(line: 553, column: 52, scope: !4813)
!4912 = !DILocalVariable(name: "thr_mult", scope: !4813, file: !957, line: 554, type: !1781)
!4913 = !DILocation(line: 554, column: 17, scope: !4813)
!4914 = !DILocation(line: 554, column: 43, scope: !4813)
!4915 = !DILocation(line: 554, column: 42, scope: !4813)
!4916 = !DILocation(line: 554, column: 34, scope: !4813)
!4917 = !DILocalVariable(name: "spread_threshold", scope: !4813, file: !957, line: 555, type: !1781)
!4918 = !DILocation(line: 555, column: 17, scope: !4813)
!4919 = !DILocation(line: 555, column: 64, scope: !4813)
!4920 = !DILocation(line: 555, column: 70, scope: !4813)
!4921 = !DILocation(line: 555, column: 61, scope: !4813)
!4922 = !DILocation(line: 555, column: 54, scope: !4813)
!4923 = !DILocation(line: 555, column: 54, scope: !4924)
!4924 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 1)
!4925 = !DILocation(line: 555, column: 90, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 2)
!4927 = !DILocation(line: 555, column: 96, scope: !4926)
!4928 = !DILocation(line: 555, column: 54, scope: !4926)
!4929 = !DILocation(line: 555, column: 54, scope: !4930)
!4930 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 3)
!4931 = !DILocation(line: 555, column: 52, scope: !4930)
!4932 = !DILocation(line: 555, column: 45, scope: !4930)
!4933 = !DILocation(line: 555, column: 37, scope: !4930)
!4934 = !DILocation(line: 555, column: 125, scope: !4935)
!4935 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 4)
!4936 = !DILocation(line: 555, column: 131, scope: !4935)
!4937 = !DILocation(line: 555, column: 122, scope: !4935)
!4938 = !DILocation(line: 555, column: 115, scope: !4935)
!4939 = !DILocation(line: 555, column: 115, scope: !4940)
!4940 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 5)
!4941 = !DILocation(line: 555, column: 151, scope: !4942)
!4942 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 6)
!4943 = !DILocation(line: 555, column: 157, scope: !4942)
!4944 = !DILocation(line: 555, column: 115, scope: !4942)
!4945 = !DILocation(line: 555, column: 115, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 7)
!4947 = !DILocation(line: 555, column: 113, scope: !4946)
!4948 = !DILocation(line: 555, column: 37, scope: !4946)
!4949 = !DILocation(line: 555, column: 37, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 8)
!4951 = !DILocation(line: 555, column: 37, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4813, file: !957, discriminator: 9)
!4953 = !DILocation(line: 555, column: 17, scope: !4952)
!4954 = !DILocalVariable(name: "dist_bias", scope: !4813, file: !957, line: 556, type: !1781)
!4955 = !DILocation(line: 556, column: 17, scope: !4813)
!4956 = !DILocation(line: 556, column: 54, scope: !4813)
!4957 = !DILocation(line: 556, column: 52, scope: !4813)
!4958 = !DILocation(line: 556, column: 29, scope: !4813)
!4959 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !4858)
!4960 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !4858)
!4961 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !4858)
!4962 = !{i32 83114, i32 83130, i32 83163}
!4963 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !4858)
!4964 = !DILocalVariable(name: "pns_transient_energy_r", scope: !4813, file: !957, line: 557, type: !1781)
!4965 = !DILocation(line: 557, column: 17, scope: !4813)
!4966 = !DILocation(line: 557, column: 53, scope: !4813)
!4967 = !DILocation(line: 557, column: 60, scope: !4813)
!4968 = !DILocation(line: 557, column: 50, scope: !4813)
!4969 = !DILocation(line: 557, column: 43, scope: !4813)
!4970 = !DILocation(line: 557, column: 72, scope: !4924)
!4971 = !DILocation(line: 557, column: 79, scope: !4924)
!4972 = !DILocation(line: 557, column: 43, scope: !4924)
!4973 = !DILocation(line: 557, column: 43, scope: !4926)
!4974 = !DILocation(line: 557, column: 43, scope: !4930)
!4975 = !DILocation(line: 557, column: 17, scope: !4930)
!4976 = !DILocalVariable(name: "refbits", scope: !4813, file: !957, line: 559, type: !991)
!4977 = !DILocation(line: 559, column: 9, scope: !4813)
!4978 = !DILocation(line: 559, column: 19, scope: !4813)
!4979 = !DILocation(line: 559, column: 26, scope: !4813)
!4980 = !DILocation(line: 559, column: 35, scope: !4813)
!4981 = !DILocation(line: 559, column: 46, scope: !4813)
!4982 = !DILocation(line: 559, column: 53, scope: !4813)
!4983 = !DILocation(line: 559, column: 44, scope: !4813)
!4984 = !DILocation(line: 560, column: 13, scope: !4813)
!4985 = !DILocation(line: 560, column: 20, scope: !4813)
!4986 = !DILocation(line: 560, column: 26, scope: !4813)
!4987 = !DILocation(line: 560, column: 12, scope: !4813)
!4988 = !DILocation(line: 560, column: 12, scope: !4924)
!4989 = !DILocation(line: 560, column: 47, scope: !4926)
!4990 = !DILocation(line: 560, column: 54, scope: !4926)
!4991 = !DILocation(line: 560, column: 12, scope: !4926)
!4992 = !DILocation(line: 560, column: 12, scope: !4930)
!4993 = !DILocation(line: 560, column: 11, scope: !4930)
!4994 = !DILocation(line: 560, column: 9, scope: !4930)
!4995 = !DILocation(line: 561, column: 12, scope: !4813)
!4996 = !DILocation(line: 561, column: 19, scope: !4813)
!4997 = !DILocation(line: 561, column: 11, scope: !4813)
!4998 = !DILocation(line: 561, column: 9, scope: !4813)
!4999 = !DILocation(line: 559, column: 19, scope: !4924)
!5000 = !DILocation(line: 559, column: 9, scope: !4924)
!5001 = !DILocalVariable(name: "rate_bandwidth_multiplier", scope: !4813, file: !957, line: 564, type: !954)
!5002 = !DILocation(line: 564, column: 11, scope: !4813)
!5003 = !DILocalVariable(name: "prev", scope: !4813, file: !957, line: 565, type: !991)
!5004 = !DILocation(line: 565, column: 9, scope: !4813)
!5005 = !DILocalVariable(name: "prev_sf", scope: !4813, file: !957, line: 565, type: !991)
!5006 = !DILocation(line: 565, column: 23, scope: !4813)
!5007 = !DILocalVariable(name: "frame_bit_rate", scope: !4813, file: !957, line: 566, type: !991)
!5008 = !DILocation(line: 566, column: 9, scope: !4813)
!5009 = !DILocation(line: 566, column: 27, scope: !4813)
!5010 = !DILocation(line: 566, column: 34, scope: !4813)
!5011 = !DILocation(line: 566, column: 40, scope: !4813)
!5012 = !DILocation(line: 566, column: 26, scope: !4813)
!5013 = !DILocation(line: 567, column: 12, scope: !4813)
!5014 = !DILocation(line: 567, column: 22, scope: !4813)
!5015 = !DILocation(line: 567, column: 20, scope: !4813)
!5016 = !DILocation(line: 567, column: 50, scope: !4813)
!5017 = !DILocation(line: 567, column: 57, scope: !4813)
!5018 = !DILocation(line: 567, column: 48, scope: !4813)
!5019 = !DILocation(line: 567, column: 69, scope: !4813)
!5020 = !DILocation(line: 566, column: 26, scope: !4924)
!5021 = !DILocation(line: 568, column: 12, scope: !4813)
!5022 = !DILocation(line: 568, column: 19, scope: !4813)
!5023 = !DILocation(line: 568, column: 30, scope: !4813)
!5024 = !DILocation(line: 568, column: 37, scope: !4813)
!5025 = !DILocation(line: 568, column: 28, scope: !4813)
!5026 = !DILocation(line: 568, column: 11, scope: !4813)
!5027 = !DILocation(line: 566, column: 26, scope: !4926)
!5028 = !DILocation(line: 566, column: 26, scope: !4930)
!5029 = !DILocation(line: 566, column: 9, scope: !4930)
!5030 = !DILocation(line: 570, column: 20, scope: !4813)
!5031 = !DILocation(line: 572, column: 9, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4813, file: !957, line: 572, column: 9)
!5033 = !DILocation(line: 572, column: 16, scope: !5032)
!5034 = !DILocation(line: 572, column: 23, scope: !5032)
!5035 = !DILocation(line: 572, column: 9, scope: !4813)
!5036 = !DILocation(line: 573, column: 21, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5032, file: !957, line: 572, column: 28)
!5038 = !DILocation(line: 573, column: 28, scope: !5037)
!5039 = !DILocation(line: 573, column: 19, scope: !5037)
!5040 = !DILocation(line: 574, column: 5, scope: !5037)
!5041 = !DILocation(line: 575, column: 33, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5032, file: !957, line: 574, column: 12)
!5043 = !DILocation(line: 575, column: 60, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 1)
!5045 = !DILocation(line: 575, column: 74, scope: !5044)
!5046 = !DILocation(line: 575, column: 76, scope: !5044)
!5047 = !DILocation(line: 575, column: 83, scope: !5044)
!5048 = !DILocation(line: 575, column: 97, scope: !5044)
!5049 = !DILocation(line: 575, column: 99, scope: !5044)
!5050 = !DILocation(line: 575, column: 102, scope: !5044)
!5051 = !DILocation(line: 575, column: 106, scope: !5044)
!5052 = !DILocation(line: 575, column: 80, scope: !5044)
!5053 = !DILocation(line: 575, column: 59, scope: !5044)
!5054 = !DILocation(line: 575, column: 117, scope: !5055)
!5055 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 2)
!5056 = !DILocation(line: 575, column: 131, scope: !5055)
!5057 = !DILocation(line: 575, column: 133, scope: !5055)
!5058 = !DILocation(line: 575, column: 59, scope: !5055)
!5059 = !DILocation(line: 575, column: 140, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 3)
!5061 = !DILocation(line: 575, column: 154, scope: !5060)
!5062 = !DILocation(line: 575, column: 156, scope: !5060)
!5063 = !DILocation(line: 575, column: 159, scope: !5060)
!5064 = !DILocation(line: 575, column: 163, scope: !5060)
!5065 = !DILocation(line: 575, column: 59, scope: !5060)
!5066 = !DILocation(line: 575, column: 59, scope: !5067)
!5067 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 4)
!5068 = !DILocation(line: 575, column: 183, scope: !5067)
!5069 = !DILocation(line: 575, column: 197, scope: !5067)
!5070 = !DILocation(line: 575, column: 199, scope: !5067)
!5071 = !DILocation(line: 575, column: 181, scope: !5067)
!5072 = !DILocation(line: 575, column: 173, scope: !5067)
!5073 = !DILocation(line: 575, column: 57, scope: !5067)
!5074 = !DILocation(line: 575, column: 213, scope: !5075)
!5075 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 5)
!5076 = !DILocation(line: 575, column: 227, scope: !5075)
!5077 = !DILocation(line: 575, column: 229, scope: !5075)
!5078 = !DILocation(line: 575, column: 211, scope: !5075)
!5079 = !DILocation(line: 575, column: 57, scope: !5075)
!5080 = !DILocation(line: 575, column: 238, scope: !5081)
!5081 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 6)
!5082 = !DILocation(line: 575, column: 252, scope: !5081)
!5083 = !DILocation(line: 575, column: 254, scope: !5081)
!5084 = !DILocation(line: 575, column: 261, scope: !5081)
!5085 = !DILocation(line: 575, column: 275, scope: !5081)
!5086 = !DILocation(line: 575, column: 277, scope: !5081)
!5087 = !DILocation(line: 575, column: 280, scope: !5081)
!5088 = !DILocation(line: 575, column: 284, scope: !5081)
!5089 = !DILocation(line: 575, column: 258, scope: !5081)
!5090 = !DILocation(line: 575, column: 237, scope: !5081)
!5091 = !DILocation(line: 575, column: 295, scope: !5092)
!5092 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 7)
!5093 = !DILocation(line: 575, column: 309, scope: !5092)
!5094 = !DILocation(line: 575, column: 311, scope: !5092)
!5095 = !DILocation(line: 575, column: 237, scope: !5092)
!5096 = !DILocation(line: 575, column: 318, scope: !5097)
!5097 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 8)
!5098 = !DILocation(line: 575, column: 332, scope: !5097)
!5099 = !DILocation(line: 575, column: 334, scope: !5097)
!5100 = !DILocation(line: 575, column: 337, scope: !5097)
!5101 = !DILocation(line: 575, column: 341, scope: !5097)
!5102 = !DILocation(line: 575, column: 237, scope: !5097)
!5103 = !DILocation(line: 575, column: 237, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 9)
!5105 = !DILocation(line: 575, column: 57, scope: !5104)
!5106 = !DILocation(line: 575, column: 57, scope: !5107)
!5107 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 10)
!5108 = !DILocation(line: 575, column: 364, scope: !5107)
!5109 = !DILocation(line: 575, column: 378, scope: !5107)
!5110 = !DILocation(line: 575, column: 380, scope: !5107)
!5111 = !DILocation(line: 575, column: 362, scope: !5107)
!5112 = !DILocation(line: 575, column: 353, scope: !5107)
!5113 = !DILocation(line: 575, column: 55, scope: !5107)
!5114 = !DILocation(line: 575, column: 396, scope: !5115)
!5115 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 11)
!5116 = !DILocation(line: 575, column: 410, scope: !5115)
!5117 = !DILocation(line: 575, column: 412, scope: !5115)
!5118 = !DILocation(line: 575, column: 394, scope: !5115)
!5119 = !DILocation(line: 575, column: 55, scope: !5115)
!5120 = !DILocation(line: 575, column: 424, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 12)
!5122 = !DILocation(line: 575, column: 438, scope: !5121)
!5123 = !DILocation(line: 575, column: 440, scope: !5121)
!5124 = !DILocation(line: 575, column: 447, scope: !5121)
!5125 = !DILocation(line: 575, column: 461, scope: !5121)
!5126 = !DILocation(line: 575, column: 463, scope: !5121)
!5127 = !DILocation(line: 575, column: 466, scope: !5121)
!5128 = !DILocation(line: 575, column: 470, scope: !5121)
!5129 = !DILocation(line: 575, column: 444, scope: !5121)
!5130 = !DILocation(line: 575, column: 423, scope: !5121)
!5131 = !DILocation(line: 575, column: 481, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 13)
!5133 = !DILocation(line: 575, column: 495, scope: !5132)
!5134 = !DILocation(line: 575, column: 497, scope: !5132)
!5135 = !DILocation(line: 575, column: 423, scope: !5132)
!5136 = !DILocation(line: 575, column: 504, scope: !5137)
!5137 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 14)
!5138 = !DILocation(line: 575, column: 518, scope: !5137)
!5139 = !DILocation(line: 575, column: 520, scope: !5137)
!5140 = !DILocation(line: 575, column: 523, scope: !5137)
!5141 = !DILocation(line: 575, column: 527, scope: !5137)
!5142 = !DILocation(line: 575, column: 423, scope: !5137)
!5143 = !DILocation(line: 575, column: 423, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 15)
!5145 = !DILocation(line: 575, column: 547, scope: !5144)
!5146 = !DILocation(line: 575, column: 561, scope: !5144)
!5147 = !DILocation(line: 575, column: 563, scope: !5144)
!5148 = !DILocation(line: 575, column: 545, scope: !5144)
!5149 = !DILocation(line: 575, column: 537, scope: !5144)
!5150 = !DILocation(line: 575, column: 421, scope: !5144)
!5151 = !DILocation(line: 575, column: 577, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 16)
!5153 = !DILocation(line: 575, column: 591, scope: !5152)
!5154 = !DILocation(line: 575, column: 593, scope: !5152)
!5155 = !DILocation(line: 575, column: 575, scope: !5152)
!5156 = !DILocation(line: 575, column: 421, scope: !5152)
!5157 = !DILocation(line: 575, column: 602, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 17)
!5159 = !DILocation(line: 575, column: 616, scope: !5158)
!5160 = !DILocation(line: 575, column: 618, scope: !5158)
!5161 = !DILocation(line: 575, column: 625, scope: !5158)
!5162 = !DILocation(line: 575, column: 639, scope: !5158)
!5163 = !DILocation(line: 575, column: 641, scope: !5158)
!5164 = !DILocation(line: 575, column: 644, scope: !5158)
!5165 = !DILocation(line: 575, column: 648, scope: !5158)
!5166 = !DILocation(line: 575, column: 622, scope: !5158)
!5167 = !DILocation(line: 575, column: 601, scope: !5158)
!5168 = !DILocation(line: 575, column: 659, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 18)
!5170 = !DILocation(line: 575, column: 673, scope: !5169)
!5171 = !DILocation(line: 575, column: 675, scope: !5169)
!5172 = !DILocation(line: 575, column: 601, scope: !5169)
!5173 = !DILocation(line: 575, column: 682, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 19)
!5175 = !DILocation(line: 575, column: 696, scope: !5174)
!5176 = !DILocation(line: 575, column: 698, scope: !5174)
!5177 = !DILocation(line: 575, column: 701, scope: !5174)
!5178 = !DILocation(line: 575, column: 705, scope: !5174)
!5179 = !DILocation(line: 575, column: 601, scope: !5174)
!5180 = !DILocation(line: 575, column: 601, scope: !5181)
!5181 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 20)
!5182 = !DILocation(line: 575, column: 421, scope: !5181)
!5183 = !DILocation(line: 575, column: 421, scope: !5184)
!5184 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 21)
!5185 = !DILocation(line: 575, column: 55, scope: !5184)
!5186 = !DILocation(line: 575, column: 55, scope: !5187)
!5187 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 22)
!5188 = !DILocation(line: 575, column: 719, scope: !5187)
!5189 = !DILocation(line: 575, column: 53, scope: !5187)
!5190 = !DILocation(line: 575, column: 53, scope: !5191)
!5191 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 23)
!5192 = !DILocation(line: 575, column: 748, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 24)
!5194 = !DILocation(line: 575, column: 762, scope: !5193)
!5195 = !DILocation(line: 575, column: 764, scope: !5193)
!5196 = !DILocation(line: 575, column: 771, scope: !5193)
!5197 = !DILocation(line: 575, column: 785, scope: !5193)
!5198 = !DILocation(line: 575, column: 787, scope: !5193)
!5199 = !DILocation(line: 575, column: 790, scope: !5193)
!5200 = !DILocation(line: 575, column: 794, scope: !5193)
!5201 = !DILocation(line: 575, column: 768, scope: !5193)
!5202 = !DILocation(line: 575, column: 747, scope: !5193)
!5203 = !DILocation(line: 575, column: 805, scope: !5204)
!5204 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 25)
!5205 = !DILocation(line: 575, column: 819, scope: !5204)
!5206 = !DILocation(line: 575, column: 821, scope: !5204)
!5207 = !DILocation(line: 575, column: 747, scope: !5204)
!5208 = !DILocation(line: 575, column: 828, scope: !5209)
!5209 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 26)
!5210 = !DILocation(line: 575, column: 842, scope: !5209)
!5211 = !DILocation(line: 575, column: 844, scope: !5209)
!5212 = !DILocation(line: 575, column: 847, scope: !5209)
!5213 = !DILocation(line: 575, column: 851, scope: !5209)
!5214 = !DILocation(line: 575, column: 747, scope: !5209)
!5215 = !DILocation(line: 575, column: 747, scope: !5216)
!5216 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 27)
!5217 = !DILocation(line: 575, column: 871, scope: !5216)
!5218 = !DILocation(line: 575, column: 885, scope: !5216)
!5219 = !DILocation(line: 575, column: 887, scope: !5216)
!5220 = !DILocation(line: 575, column: 869, scope: !5216)
!5221 = !DILocation(line: 575, column: 861, scope: !5216)
!5222 = !DILocation(line: 575, column: 745, scope: !5216)
!5223 = !DILocation(line: 575, column: 901, scope: !5224)
!5224 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 28)
!5225 = !DILocation(line: 575, column: 915, scope: !5224)
!5226 = !DILocation(line: 575, column: 917, scope: !5224)
!5227 = !DILocation(line: 575, column: 899, scope: !5224)
!5228 = !DILocation(line: 575, column: 745, scope: !5224)
!5229 = !DILocation(line: 575, column: 926, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 29)
!5231 = !DILocation(line: 575, column: 940, scope: !5230)
!5232 = !DILocation(line: 575, column: 942, scope: !5230)
!5233 = !DILocation(line: 575, column: 949, scope: !5230)
!5234 = !DILocation(line: 575, column: 963, scope: !5230)
!5235 = !DILocation(line: 575, column: 965, scope: !5230)
!5236 = !DILocation(line: 575, column: 968, scope: !5230)
!5237 = !DILocation(line: 575, column: 972, scope: !5230)
!5238 = !DILocation(line: 575, column: 946, scope: !5230)
!5239 = !DILocation(line: 575, column: 925, scope: !5230)
!5240 = !DILocation(line: 575, column: 983, scope: !5241)
!5241 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 30)
!5242 = !DILocation(line: 575, column: 997, scope: !5241)
!5243 = !DILocation(line: 575, column: 999, scope: !5241)
!5244 = !DILocation(line: 575, column: 925, scope: !5241)
!5245 = !DILocation(line: 575, column: 1006, scope: !5246)
!5246 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 31)
!5247 = !DILocation(line: 575, column: 1020, scope: !5246)
!5248 = !DILocation(line: 575, column: 1022, scope: !5246)
!5249 = !DILocation(line: 575, column: 1025, scope: !5246)
!5250 = !DILocation(line: 575, column: 1029, scope: !5246)
!5251 = !DILocation(line: 575, column: 925, scope: !5246)
!5252 = !DILocation(line: 575, column: 925, scope: !5253)
!5253 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 32)
!5254 = !DILocation(line: 575, column: 745, scope: !5253)
!5255 = !DILocation(line: 575, column: 745, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 33)
!5257 = !DILocation(line: 575, column: 1052, scope: !5256)
!5258 = !DILocation(line: 575, column: 1066, scope: !5256)
!5259 = !DILocation(line: 575, column: 1068, scope: !5256)
!5260 = !DILocation(line: 575, column: 1050, scope: !5256)
!5261 = !DILocation(line: 575, column: 1041, scope: !5256)
!5262 = !DILocation(line: 575, column: 743, scope: !5256)
!5263 = !DILocation(line: 575, column: 1084, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 34)
!5265 = !DILocation(line: 575, column: 1098, scope: !5264)
!5266 = !DILocation(line: 575, column: 1100, scope: !5264)
!5267 = !DILocation(line: 575, column: 1082, scope: !5264)
!5268 = !DILocation(line: 575, column: 743, scope: !5264)
!5269 = !DILocation(line: 575, column: 1112, scope: !5270)
!5270 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 35)
!5271 = !DILocation(line: 575, column: 1126, scope: !5270)
!5272 = !DILocation(line: 575, column: 1128, scope: !5270)
!5273 = !DILocation(line: 575, column: 1135, scope: !5270)
!5274 = !DILocation(line: 575, column: 1149, scope: !5270)
!5275 = !DILocation(line: 575, column: 1151, scope: !5270)
!5276 = !DILocation(line: 575, column: 1154, scope: !5270)
!5277 = !DILocation(line: 575, column: 1158, scope: !5270)
!5278 = !DILocation(line: 575, column: 1132, scope: !5270)
!5279 = !DILocation(line: 575, column: 1111, scope: !5270)
!5280 = !DILocation(line: 575, column: 1169, scope: !5281)
!5281 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 36)
!5282 = !DILocation(line: 575, column: 1183, scope: !5281)
!5283 = !DILocation(line: 575, column: 1185, scope: !5281)
!5284 = !DILocation(line: 575, column: 1111, scope: !5281)
!5285 = !DILocation(line: 575, column: 1192, scope: !5286)
!5286 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 37)
!5287 = !DILocation(line: 575, column: 1206, scope: !5286)
!5288 = !DILocation(line: 575, column: 1208, scope: !5286)
!5289 = !DILocation(line: 575, column: 1211, scope: !5286)
!5290 = !DILocation(line: 575, column: 1215, scope: !5286)
!5291 = !DILocation(line: 575, column: 1111, scope: !5286)
!5292 = !DILocation(line: 575, column: 1111, scope: !5293)
!5293 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 38)
!5294 = !DILocation(line: 575, column: 1235, scope: !5293)
!5295 = !DILocation(line: 575, column: 1249, scope: !5293)
!5296 = !DILocation(line: 575, column: 1251, scope: !5293)
!5297 = !DILocation(line: 575, column: 1233, scope: !5293)
!5298 = !DILocation(line: 575, column: 1225, scope: !5293)
!5299 = !DILocation(line: 575, column: 1109, scope: !5293)
!5300 = !DILocation(line: 575, column: 1265, scope: !5301)
!5301 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 39)
!5302 = !DILocation(line: 575, column: 1279, scope: !5301)
!5303 = !DILocation(line: 575, column: 1281, scope: !5301)
!5304 = !DILocation(line: 575, column: 1263, scope: !5301)
!5305 = !DILocation(line: 575, column: 1109, scope: !5301)
!5306 = !DILocation(line: 575, column: 1290, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 40)
!5308 = !DILocation(line: 575, column: 1304, scope: !5307)
!5309 = !DILocation(line: 575, column: 1306, scope: !5307)
!5310 = !DILocation(line: 575, column: 1313, scope: !5307)
!5311 = !DILocation(line: 575, column: 1327, scope: !5307)
!5312 = !DILocation(line: 575, column: 1329, scope: !5307)
!5313 = !DILocation(line: 575, column: 1332, scope: !5307)
!5314 = !DILocation(line: 575, column: 1336, scope: !5307)
!5315 = !DILocation(line: 575, column: 1310, scope: !5307)
!5316 = !DILocation(line: 575, column: 1289, scope: !5307)
!5317 = !DILocation(line: 575, column: 1347, scope: !5318)
!5318 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 41)
!5319 = !DILocation(line: 575, column: 1361, scope: !5318)
!5320 = !DILocation(line: 575, column: 1363, scope: !5318)
!5321 = !DILocation(line: 575, column: 1289, scope: !5318)
!5322 = !DILocation(line: 575, column: 1370, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 42)
!5324 = !DILocation(line: 575, column: 1384, scope: !5323)
!5325 = !DILocation(line: 575, column: 1386, scope: !5323)
!5326 = !DILocation(line: 575, column: 1389, scope: !5323)
!5327 = !DILocation(line: 575, column: 1393, scope: !5323)
!5328 = !DILocation(line: 575, column: 1289, scope: !5323)
!5329 = !DILocation(line: 575, column: 1289, scope: !5330)
!5330 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 43)
!5331 = !DILocation(line: 575, column: 1109, scope: !5330)
!5332 = !DILocation(line: 575, column: 1109, scope: !5333)
!5333 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 44)
!5334 = !DILocation(line: 575, column: 743, scope: !5333)
!5335 = !DILocation(line: 575, column: 743, scope: !5336)
!5336 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 45)
!5337 = !DILocation(line: 575, column: 53, scope: !5336)
!5338 = !DILocation(line: 575, column: 53, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 46)
!5340 = !DILocation(line: 575, column: 1412, scope: !5339)
!5341 = !DILocation(line: 575, column: 1419, scope: !5339)
!5342 = !DILocation(line: 575, column: 1431, scope: !5339)
!5343 = !DILocation(line: 575, column: 1409, scope: !5339)
!5344 = !DILocation(line: 575, column: 51, scope: !5339)
!5345 = !DILocation(line: 575, column: 1439, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 47)
!5347 = !DILocation(line: 575, column: 1446, scope: !5346)
!5348 = !DILocation(line: 575, column: 1458, scope: !5346)
!5349 = !DILocation(line: 575, column: 51, scope: !5346)
!5350 = !DILocation(line: 575, column: 1474, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 48)
!5352 = !DILocation(line: 575, column: 1488, scope: !5351)
!5353 = !DILocation(line: 575, column: 1490, scope: !5351)
!5354 = !DILocation(line: 575, column: 1497, scope: !5351)
!5355 = !DILocation(line: 575, column: 1511, scope: !5351)
!5356 = !DILocation(line: 575, column: 1513, scope: !5351)
!5357 = !DILocation(line: 575, column: 1516, scope: !5351)
!5358 = !DILocation(line: 575, column: 1520, scope: !5351)
!5359 = !DILocation(line: 575, column: 1494, scope: !5351)
!5360 = !DILocation(line: 575, column: 1473, scope: !5351)
!5361 = !DILocation(line: 575, column: 1531, scope: !5362)
!5362 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 49)
!5363 = !DILocation(line: 575, column: 1545, scope: !5362)
!5364 = !DILocation(line: 575, column: 1547, scope: !5362)
!5365 = !DILocation(line: 575, column: 1473, scope: !5362)
!5366 = !DILocation(line: 575, column: 1554, scope: !5367)
!5367 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 50)
!5368 = !DILocation(line: 575, column: 1568, scope: !5367)
!5369 = !DILocation(line: 575, column: 1570, scope: !5367)
!5370 = !DILocation(line: 575, column: 1573, scope: !5367)
!5371 = !DILocation(line: 575, column: 1577, scope: !5367)
!5372 = !DILocation(line: 575, column: 1473, scope: !5367)
!5373 = !DILocation(line: 575, column: 1473, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 51)
!5375 = !DILocation(line: 575, column: 1597, scope: !5374)
!5376 = !DILocation(line: 575, column: 1611, scope: !5374)
!5377 = !DILocation(line: 575, column: 1613, scope: !5374)
!5378 = !DILocation(line: 575, column: 1595, scope: !5374)
!5379 = !DILocation(line: 575, column: 1587, scope: !5374)
!5380 = !DILocation(line: 575, column: 1471, scope: !5374)
!5381 = !DILocation(line: 575, column: 1627, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 52)
!5383 = !DILocation(line: 575, column: 1641, scope: !5382)
!5384 = !DILocation(line: 575, column: 1643, scope: !5382)
!5385 = !DILocation(line: 575, column: 1625, scope: !5382)
!5386 = !DILocation(line: 575, column: 1471, scope: !5382)
!5387 = !DILocation(line: 575, column: 1652, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 53)
!5389 = !DILocation(line: 575, column: 1666, scope: !5388)
!5390 = !DILocation(line: 575, column: 1668, scope: !5388)
!5391 = !DILocation(line: 575, column: 1675, scope: !5388)
!5392 = !DILocation(line: 575, column: 1689, scope: !5388)
!5393 = !DILocation(line: 575, column: 1691, scope: !5388)
!5394 = !DILocation(line: 575, column: 1694, scope: !5388)
!5395 = !DILocation(line: 575, column: 1698, scope: !5388)
!5396 = !DILocation(line: 575, column: 1672, scope: !5388)
!5397 = !DILocation(line: 575, column: 1651, scope: !5388)
!5398 = !DILocation(line: 575, column: 1709, scope: !5399)
!5399 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 54)
!5400 = !DILocation(line: 575, column: 1723, scope: !5399)
!5401 = !DILocation(line: 575, column: 1725, scope: !5399)
!5402 = !DILocation(line: 575, column: 1651, scope: !5399)
!5403 = !DILocation(line: 575, column: 1732, scope: !5404)
!5404 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 55)
!5405 = !DILocation(line: 575, column: 1746, scope: !5404)
!5406 = !DILocation(line: 575, column: 1748, scope: !5404)
!5407 = !DILocation(line: 575, column: 1751, scope: !5404)
!5408 = !DILocation(line: 575, column: 1755, scope: !5404)
!5409 = !DILocation(line: 575, column: 1651, scope: !5404)
!5410 = !DILocation(line: 575, column: 1651, scope: !5411)
!5411 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 56)
!5412 = !DILocation(line: 575, column: 1471, scope: !5411)
!5413 = !DILocation(line: 575, column: 1471, scope: !5414)
!5414 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 57)
!5415 = !DILocation(line: 575, column: 1778, scope: !5414)
!5416 = !DILocation(line: 575, column: 1792, scope: !5414)
!5417 = !DILocation(line: 575, column: 1794, scope: !5414)
!5418 = !DILocation(line: 575, column: 1776, scope: !5414)
!5419 = !DILocation(line: 575, column: 1767, scope: !5414)
!5420 = !DILocation(line: 575, column: 1469, scope: !5414)
!5421 = !DILocation(line: 575, column: 1810, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 58)
!5423 = !DILocation(line: 575, column: 1824, scope: !5422)
!5424 = !DILocation(line: 575, column: 1826, scope: !5422)
!5425 = !DILocation(line: 575, column: 1808, scope: !5422)
!5426 = !DILocation(line: 575, column: 1469, scope: !5422)
!5427 = !DILocation(line: 575, column: 1838, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 59)
!5429 = !DILocation(line: 575, column: 1852, scope: !5428)
!5430 = !DILocation(line: 575, column: 1854, scope: !5428)
!5431 = !DILocation(line: 575, column: 1861, scope: !5428)
!5432 = !DILocation(line: 575, column: 1875, scope: !5428)
!5433 = !DILocation(line: 575, column: 1877, scope: !5428)
!5434 = !DILocation(line: 575, column: 1880, scope: !5428)
!5435 = !DILocation(line: 575, column: 1884, scope: !5428)
!5436 = !DILocation(line: 575, column: 1858, scope: !5428)
!5437 = !DILocation(line: 575, column: 1837, scope: !5428)
!5438 = !DILocation(line: 575, column: 1895, scope: !5439)
!5439 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 60)
!5440 = !DILocation(line: 575, column: 1909, scope: !5439)
!5441 = !DILocation(line: 575, column: 1911, scope: !5439)
!5442 = !DILocation(line: 575, column: 1837, scope: !5439)
!5443 = !DILocation(line: 575, column: 1918, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 61)
!5445 = !DILocation(line: 575, column: 1932, scope: !5444)
!5446 = !DILocation(line: 575, column: 1934, scope: !5444)
!5447 = !DILocation(line: 575, column: 1937, scope: !5444)
!5448 = !DILocation(line: 575, column: 1941, scope: !5444)
!5449 = !DILocation(line: 575, column: 1837, scope: !5444)
!5450 = !DILocation(line: 575, column: 1837, scope: !5451)
!5451 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 62)
!5452 = !DILocation(line: 575, column: 1961, scope: !5451)
!5453 = !DILocation(line: 575, column: 1975, scope: !5451)
!5454 = !DILocation(line: 575, column: 1977, scope: !5451)
!5455 = !DILocation(line: 575, column: 1959, scope: !5451)
!5456 = !DILocation(line: 575, column: 1951, scope: !5451)
!5457 = !DILocation(line: 575, column: 1835, scope: !5451)
!5458 = !DILocation(line: 575, column: 1991, scope: !5459)
!5459 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 63)
!5460 = !DILocation(line: 575, column: 2005, scope: !5459)
!5461 = !DILocation(line: 575, column: 2007, scope: !5459)
!5462 = !DILocation(line: 575, column: 1989, scope: !5459)
!5463 = !DILocation(line: 575, column: 1835, scope: !5459)
!5464 = !DILocation(line: 575, column: 2016, scope: !5465)
!5465 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 64)
!5466 = !DILocation(line: 575, column: 2030, scope: !5465)
!5467 = !DILocation(line: 575, column: 2032, scope: !5465)
!5468 = !DILocation(line: 575, column: 2039, scope: !5465)
!5469 = !DILocation(line: 575, column: 2053, scope: !5465)
!5470 = !DILocation(line: 575, column: 2055, scope: !5465)
!5471 = !DILocation(line: 575, column: 2058, scope: !5465)
!5472 = !DILocation(line: 575, column: 2062, scope: !5465)
!5473 = !DILocation(line: 575, column: 2036, scope: !5465)
!5474 = !DILocation(line: 575, column: 2015, scope: !5465)
!5475 = !DILocation(line: 575, column: 2073, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 65)
!5477 = !DILocation(line: 575, column: 2087, scope: !5476)
!5478 = !DILocation(line: 575, column: 2089, scope: !5476)
!5479 = !DILocation(line: 575, column: 2015, scope: !5476)
!5480 = !DILocation(line: 575, column: 2096, scope: !5481)
!5481 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 66)
!5482 = !DILocation(line: 575, column: 2110, scope: !5481)
!5483 = !DILocation(line: 575, column: 2112, scope: !5481)
!5484 = !DILocation(line: 575, column: 2115, scope: !5481)
!5485 = !DILocation(line: 575, column: 2119, scope: !5481)
!5486 = !DILocation(line: 575, column: 2015, scope: !5481)
!5487 = !DILocation(line: 575, column: 2015, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 67)
!5489 = !DILocation(line: 575, column: 1835, scope: !5488)
!5490 = !DILocation(line: 575, column: 1835, scope: !5491)
!5491 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 68)
!5492 = !DILocation(line: 575, column: 1469, scope: !5491)
!5493 = !DILocation(line: 575, column: 1469, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 69)
!5495 = !DILocation(line: 575, column: 2133, scope: !5494)
!5496 = !DILocation(line: 575, column: 1467, scope: !5494)
!5497 = !DILocation(line: 575, column: 1467, scope: !5498)
!5498 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 70)
!5499 = !DILocation(line: 575, column: 2162, scope: !5500)
!5500 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 71)
!5501 = !DILocation(line: 575, column: 2176, scope: !5500)
!5502 = !DILocation(line: 575, column: 2178, scope: !5500)
!5503 = !DILocation(line: 575, column: 2185, scope: !5500)
!5504 = !DILocation(line: 575, column: 2199, scope: !5500)
!5505 = !DILocation(line: 575, column: 2201, scope: !5500)
!5506 = !DILocation(line: 575, column: 2204, scope: !5500)
!5507 = !DILocation(line: 575, column: 2208, scope: !5500)
!5508 = !DILocation(line: 575, column: 2182, scope: !5500)
!5509 = !DILocation(line: 575, column: 2161, scope: !5500)
!5510 = !DILocation(line: 575, column: 2219, scope: !5511)
!5511 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 72)
!5512 = !DILocation(line: 575, column: 2233, scope: !5511)
!5513 = !DILocation(line: 575, column: 2235, scope: !5511)
!5514 = !DILocation(line: 575, column: 2161, scope: !5511)
!5515 = !DILocation(line: 575, column: 2242, scope: !5516)
!5516 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 73)
!5517 = !DILocation(line: 575, column: 2256, scope: !5516)
!5518 = !DILocation(line: 575, column: 2258, scope: !5516)
!5519 = !DILocation(line: 575, column: 2261, scope: !5516)
!5520 = !DILocation(line: 575, column: 2265, scope: !5516)
!5521 = !DILocation(line: 575, column: 2161, scope: !5516)
!5522 = !DILocation(line: 575, column: 2161, scope: !5523)
!5523 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 74)
!5524 = !DILocation(line: 575, column: 2285, scope: !5523)
!5525 = !DILocation(line: 575, column: 2299, scope: !5523)
!5526 = !DILocation(line: 575, column: 2301, scope: !5523)
!5527 = !DILocation(line: 575, column: 2283, scope: !5523)
!5528 = !DILocation(line: 575, column: 2275, scope: !5523)
!5529 = !DILocation(line: 575, column: 2159, scope: !5523)
!5530 = !DILocation(line: 575, column: 2315, scope: !5531)
!5531 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 75)
!5532 = !DILocation(line: 575, column: 2329, scope: !5531)
!5533 = !DILocation(line: 575, column: 2331, scope: !5531)
!5534 = !DILocation(line: 575, column: 2313, scope: !5531)
!5535 = !DILocation(line: 575, column: 2159, scope: !5531)
!5536 = !DILocation(line: 575, column: 2340, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 76)
!5538 = !DILocation(line: 575, column: 2354, scope: !5537)
!5539 = !DILocation(line: 575, column: 2356, scope: !5537)
!5540 = !DILocation(line: 575, column: 2363, scope: !5537)
!5541 = !DILocation(line: 575, column: 2377, scope: !5537)
!5542 = !DILocation(line: 575, column: 2379, scope: !5537)
!5543 = !DILocation(line: 575, column: 2382, scope: !5537)
!5544 = !DILocation(line: 575, column: 2386, scope: !5537)
!5545 = !DILocation(line: 575, column: 2360, scope: !5537)
!5546 = !DILocation(line: 575, column: 2339, scope: !5537)
!5547 = !DILocation(line: 575, column: 2397, scope: !5548)
!5548 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 77)
!5549 = !DILocation(line: 575, column: 2411, scope: !5548)
!5550 = !DILocation(line: 575, column: 2413, scope: !5548)
!5551 = !DILocation(line: 575, column: 2339, scope: !5548)
!5552 = !DILocation(line: 575, column: 2420, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 78)
!5554 = !DILocation(line: 575, column: 2434, scope: !5553)
!5555 = !DILocation(line: 575, column: 2436, scope: !5553)
!5556 = !DILocation(line: 575, column: 2439, scope: !5553)
!5557 = !DILocation(line: 575, column: 2443, scope: !5553)
!5558 = !DILocation(line: 575, column: 2339, scope: !5553)
!5559 = !DILocation(line: 575, column: 2339, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 79)
!5561 = !DILocation(line: 575, column: 2159, scope: !5560)
!5562 = !DILocation(line: 575, column: 2159, scope: !5563)
!5563 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 80)
!5564 = !DILocation(line: 575, column: 2466, scope: !5563)
!5565 = !DILocation(line: 575, column: 2480, scope: !5563)
!5566 = !DILocation(line: 575, column: 2482, scope: !5563)
!5567 = !DILocation(line: 575, column: 2464, scope: !5563)
!5568 = !DILocation(line: 575, column: 2455, scope: !5563)
!5569 = !DILocation(line: 575, column: 2157, scope: !5563)
!5570 = !DILocation(line: 575, column: 2498, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 81)
!5572 = !DILocation(line: 575, column: 2512, scope: !5571)
!5573 = !DILocation(line: 575, column: 2514, scope: !5571)
!5574 = !DILocation(line: 575, column: 2496, scope: !5571)
!5575 = !DILocation(line: 575, column: 2157, scope: !5571)
!5576 = !DILocation(line: 575, column: 2526, scope: !5577)
!5577 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 82)
!5578 = !DILocation(line: 575, column: 2540, scope: !5577)
!5579 = !DILocation(line: 575, column: 2542, scope: !5577)
!5580 = !DILocation(line: 575, column: 2549, scope: !5577)
!5581 = !DILocation(line: 575, column: 2563, scope: !5577)
!5582 = !DILocation(line: 575, column: 2565, scope: !5577)
!5583 = !DILocation(line: 575, column: 2568, scope: !5577)
!5584 = !DILocation(line: 575, column: 2572, scope: !5577)
!5585 = !DILocation(line: 575, column: 2546, scope: !5577)
!5586 = !DILocation(line: 575, column: 2525, scope: !5577)
!5587 = !DILocation(line: 575, column: 2583, scope: !5588)
!5588 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 83)
!5589 = !DILocation(line: 575, column: 2597, scope: !5588)
!5590 = !DILocation(line: 575, column: 2599, scope: !5588)
!5591 = !DILocation(line: 575, column: 2525, scope: !5588)
!5592 = !DILocation(line: 575, column: 2606, scope: !5593)
!5593 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 84)
!5594 = !DILocation(line: 575, column: 2620, scope: !5593)
!5595 = !DILocation(line: 575, column: 2622, scope: !5593)
!5596 = !DILocation(line: 575, column: 2625, scope: !5593)
!5597 = !DILocation(line: 575, column: 2629, scope: !5593)
!5598 = !DILocation(line: 575, column: 2525, scope: !5593)
!5599 = !DILocation(line: 575, column: 2525, scope: !5600)
!5600 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 85)
!5601 = !DILocation(line: 575, column: 2649, scope: !5600)
!5602 = !DILocation(line: 575, column: 2663, scope: !5600)
!5603 = !DILocation(line: 575, column: 2665, scope: !5600)
!5604 = !DILocation(line: 575, column: 2647, scope: !5600)
!5605 = !DILocation(line: 575, column: 2639, scope: !5600)
!5606 = !DILocation(line: 575, column: 2523, scope: !5600)
!5607 = !DILocation(line: 575, column: 2679, scope: !5608)
!5608 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 86)
!5609 = !DILocation(line: 575, column: 2693, scope: !5608)
!5610 = !DILocation(line: 575, column: 2695, scope: !5608)
!5611 = !DILocation(line: 575, column: 2677, scope: !5608)
!5612 = !DILocation(line: 575, column: 2523, scope: !5608)
!5613 = !DILocation(line: 575, column: 2704, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 87)
!5615 = !DILocation(line: 575, column: 2718, scope: !5614)
!5616 = !DILocation(line: 575, column: 2720, scope: !5614)
!5617 = !DILocation(line: 575, column: 2727, scope: !5614)
!5618 = !DILocation(line: 575, column: 2741, scope: !5614)
!5619 = !DILocation(line: 575, column: 2743, scope: !5614)
!5620 = !DILocation(line: 575, column: 2746, scope: !5614)
!5621 = !DILocation(line: 575, column: 2750, scope: !5614)
!5622 = !DILocation(line: 575, column: 2724, scope: !5614)
!5623 = !DILocation(line: 575, column: 2703, scope: !5614)
!5624 = !DILocation(line: 575, column: 2761, scope: !5625)
!5625 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 88)
!5626 = !DILocation(line: 575, column: 2775, scope: !5625)
!5627 = !DILocation(line: 575, column: 2777, scope: !5625)
!5628 = !DILocation(line: 575, column: 2703, scope: !5625)
!5629 = !DILocation(line: 575, column: 2784, scope: !5630)
!5630 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 89)
!5631 = !DILocation(line: 575, column: 2798, scope: !5630)
!5632 = !DILocation(line: 575, column: 2800, scope: !5630)
!5633 = !DILocation(line: 575, column: 2803, scope: !5630)
!5634 = !DILocation(line: 575, column: 2807, scope: !5630)
!5635 = !DILocation(line: 575, column: 2703, scope: !5630)
!5636 = !DILocation(line: 575, column: 2703, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 90)
!5638 = !DILocation(line: 575, column: 2523, scope: !5637)
!5639 = !DILocation(line: 575, column: 2523, scope: !5640)
!5640 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 91)
!5641 = !DILocation(line: 575, column: 2157, scope: !5640)
!5642 = !DILocation(line: 575, column: 2157, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 92)
!5644 = !DILocation(line: 575, column: 1467, scope: !5643)
!5645 = !DILocation(line: 575, column: 1467, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 93)
!5647 = !DILocation(line: 575, column: 51, scope: !5646)
!5648 = !DILocation(line: 575, column: 51, scope: !5649)
!5649 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 94)
!5650 = !DILocation(line: 575, column: 33, scope: !5649)
!5651 = !DILocation(line: 575, column: 2826, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 95)
!5653 = !DILocation(line: 575, column: 2833, scope: !5652)
!5654 = !DILocation(line: 575, column: 2845, scope: !5652)
!5655 = !DILocation(line: 575, column: 33, scope: !5652)
!5656 = !DILocation(line: 575, column: 33, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 96)
!5658 = !DILocation(line: 575, column: 29, scope: !5657)
!5659 = !DILocation(line: 575, column: 22, scope: !5657)
!5660 = !DILocation(line: 575, column: 22, scope: !5661)
!5661 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 97)
!5662 = !DILocation(line: 575, column: 2865, scope: !5663)
!5663 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 98)
!5664 = !DILocation(line: 575, column: 2892, scope: !5665)
!5665 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 99)
!5666 = !DILocation(line: 575, column: 2906, scope: !5665)
!5667 = !DILocation(line: 575, column: 2908, scope: !5665)
!5668 = !DILocation(line: 575, column: 2915, scope: !5665)
!5669 = !DILocation(line: 575, column: 2929, scope: !5665)
!5670 = !DILocation(line: 575, column: 2931, scope: !5665)
!5671 = !DILocation(line: 575, column: 2934, scope: !5665)
!5672 = !DILocation(line: 575, column: 2938, scope: !5665)
!5673 = !DILocation(line: 575, column: 2912, scope: !5665)
!5674 = !DILocation(line: 575, column: 2891, scope: !5665)
!5675 = !DILocation(line: 575, column: 2949, scope: !5676)
!5676 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 100)
!5677 = !DILocation(line: 575, column: 2963, scope: !5676)
!5678 = !DILocation(line: 575, column: 2965, scope: !5676)
!5679 = !DILocation(line: 575, column: 2891, scope: !5676)
!5680 = !DILocation(line: 575, column: 2972, scope: !5681)
!5681 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 101)
!5682 = !DILocation(line: 575, column: 2986, scope: !5681)
!5683 = !DILocation(line: 575, column: 2988, scope: !5681)
!5684 = !DILocation(line: 575, column: 2991, scope: !5681)
!5685 = !DILocation(line: 575, column: 2995, scope: !5681)
!5686 = !DILocation(line: 575, column: 2891, scope: !5681)
!5687 = !DILocation(line: 575, column: 2891, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 102)
!5689 = !DILocation(line: 575, column: 3015, scope: !5688)
!5690 = !DILocation(line: 575, column: 3029, scope: !5688)
!5691 = !DILocation(line: 575, column: 3031, scope: !5688)
!5692 = !DILocation(line: 575, column: 3013, scope: !5688)
!5693 = !DILocation(line: 575, column: 3005, scope: !5688)
!5694 = !DILocation(line: 575, column: 2889, scope: !5688)
!5695 = !DILocation(line: 575, column: 3045, scope: !5696)
!5696 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 103)
!5697 = !DILocation(line: 575, column: 3059, scope: !5696)
!5698 = !DILocation(line: 575, column: 3061, scope: !5696)
!5699 = !DILocation(line: 575, column: 3043, scope: !5696)
!5700 = !DILocation(line: 575, column: 2889, scope: !5696)
!5701 = !DILocation(line: 575, column: 3070, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 104)
!5703 = !DILocation(line: 575, column: 3084, scope: !5702)
!5704 = !DILocation(line: 575, column: 3086, scope: !5702)
!5705 = !DILocation(line: 575, column: 3093, scope: !5702)
!5706 = !DILocation(line: 575, column: 3107, scope: !5702)
!5707 = !DILocation(line: 575, column: 3109, scope: !5702)
!5708 = !DILocation(line: 575, column: 3112, scope: !5702)
!5709 = !DILocation(line: 575, column: 3116, scope: !5702)
!5710 = !DILocation(line: 575, column: 3090, scope: !5702)
!5711 = !DILocation(line: 575, column: 3069, scope: !5702)
!5712 = !DILocation(line: 575, column: 3127, scope: !5713)
!5713 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 105)
!5714 = !DILocation(line: 575, column: 3141, scope: !5713)
!5715 = !DILocation(line: 575, column: 3143, scope: !5713)
!5716 = !DILocation(line: 575, column: 3069, scope: !5713)
!5717 = !DILocation(line: 575, column: 3150, scope: !5718)
!5718 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 106)
!5719 = !DILocation(line: 575, column: 3164, scope: !5718)
!5720 = !DILocation(line: 575, column: 3166, scope: !5718)
!5721 = !DILocation(line: 575, column: 3169, scope: !5718)
!5722 = !DILocation(line: 575, column: 3173, scope: !5718)
!5723 = !DILocation(line: 575, column: 3069, scope: !5718)
!5724 = !DILocation(line: 575, column: 3069, scope: !5725)
!5725 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 107)
!5726 = !DILocation(line: 575, column: 2889, scope: !5725)
!5727 = !DILocation(line: 575, column: 2889, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 108)
!5729 = !DILocation(line: 575, column: 3196, scope: !5728)
!5730 = !DILocation(line: 575, column: 3210, scope: !5728)
!5731 = !DILocation(line: 575, column: 3212, scope: !5728)
!5732 = !DILocation(line: 575, column: 3194, scope: !5728)
!5733 = !DILocation(line: 575, column: 3185, scope: !5728)
!5734 = !DILocation(line: 575, column: 2887, scope: !5728)
!5735 = !DILocation(line: 575, column: 3228, scope: !5736)
!5736 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 109)
!5737 = !DILocation(line: 575, column: 3242, scope: !5736)
!5738 = !DILocation(line: 575, column: 3244, scope: !5736)
!5739 = !DILocation(line: 575, column: 3226, scope: !5736)
!5740 = !DILocation(line: 575, column: 2887, scope: !5736)
!5741 = !DILocation(line: 575, column: 3256, scope: !5742)
!5742 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 110)
!5743 = !DILocation(line: 575, column: 3270, scope: !5742)
!5744 = !DILocation(line: 575, column: 3272, scope: !5742)
!5745 = !DILocation(line: 575, column: 3279, scope: !5742)
!5746 = !DILocation(line: 575, column: 3293, scope: !5742)
!5747 = !DILocation(line: 575, column: 3295, scope: !5742)
!5748 = !DILocation(line: 575, column: 3298, scope: !5742)
!5749 = !DILocation(line: 575, column: 3302, scope: !5742)
!5750 = !DILocation(line: 575, column: 3276, scope: !5742)
!5751 = !DILocation(line: 575, column: 3255, scope: !5742)
!5752 = !DILocation(line: 575, column: 3313, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 111)
!5754 = !DILocation(line: 575, column: 3327, scope: !5753)
!5755 = !DILocation(line: 575, column: 3329, scope: !5753)
!5756 = !DILocation(line: 575, column: 3255, scope: !5753)
!5757 = !DILocation(line: 575, column: 3336, scope: !5758)
!5758 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 112)
!5759 = !DILocation(line: 575, column: 3350, scope: !5758)
!5760 = !DILocation(line: 575, column: 3352, scope: !5758)
!5761 = !DILocation(line: 575, column: 3355, scope: !5758)
!5762 = !DILocation(line: 575, column: 3359, scope: !5758)
!5763 = !DILocation(line: 575, column: 3255, scope: !5758)
!5764 = !DILocation(line: 575, column: 3255, scope: !5765)
!5765 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 113)
!5766 = !DILocation(line: 575, column: 3379, scope: !5765)
!5767 = !DILocation(line: 575, column: 3393, scope: !5765)
!5768 = !DILocation(line: 575, column: 3395, scope: !5765)
!5769 = !DILocation(line: 575, column: 3377, scope: !5765)
!5770 = !DILocation(line: 575, column: 3369, scope: !5765)
!5771 = !DILocation(line: 575, column: 3253, scope: !5765)
!5772 = !DILocation(line: 575, column: 3409, scope: !5773)
!5773 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 114)
!5774 = !DILocation(line: 575, column: 3423, scope: !5773)
!5775 = !DILocation(line: 575, column: 3425, scope: !5773)
!5776 = !DILocation(line: 575, column: 3407, scope: !5773)
!5777 = !DILocation(line: 575, column: 3253, scope: !5773)
!5778 = !DILocation(line: 575, column: 3434, scope: !5779)
!5779 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 115)
!5780 = !DILocation(line: 575, column: 3448, scope: !5779)
!5781 = !DILocation(line: 575, column: 3450, scope: !5779)
!5782 = !DILocation(line: 575, column: 3457, scope: !5779)
!5783 = !DILocation(line: 575, column: 3471, scope: !5779)
!5784 = !DILocation(line: 575, column: 3473, scope: !5779)
!5785 = !DILocation(line: 575, column: 3476, scope: !5779)
!5786 = !DILocation(line: 575, column: 3480, scope: !5779)
!5787 = !DILocation(line: 575, column: 3454, scope: !5779)
!5788 = !DILocation(line: 575, column: 3433, scope: !5779)
!5789 = !DILocation(line: 575, column: 3491, scope: !5790)
!5790 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 116)
!5791 = !DILocation(line: 575, column: 3505, scope: !5790)
!5792 = !DILocation(line: 575, column: 3507, scope: !5790)
!5793 = !DILocation(line: 575, column: 3433, scope: !5790)
!5794 = !DILocation(line: 575, column: 3514, scope: !5795)
!5795 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 117)
!5796 = !DILocation(line: 575, column: 3528, scope: !5795)
!5797 = !DILocation(line: 575, column: 3530, scope: !5795)
!5798 = !DILocation(line: 575, column: 3533, scope: !5795)
!5799 = !DILocation(line: 575, column: 3537, scope: !5795)
!5800 = !DILocation(line: 575, column: 3433, scope: !5795)
!5801 = !DILocation(line: 575, column: 3433, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 118)
!5803 = !DILocation(line: 575, column: 3253, scope: !5802)
!5804 = !DILocation(line: 575, column: 3253, scope: !5805)
!5805 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 119)
!5806 = !DILocation(line: 575, column: 2887, scope: !5805)
!5807 = !DILocation(line: 575, column: 2887, scope: !5808)
!5808 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 120)
!5809 = !DILocation(line: 575, column: 3551, scope: !5808)
!5810 = !DILocation(line: 575, column: 2885, scope: !5808)
!5811 = !DILocation(line: 575, column: 2885, scope: !5812)
!5812 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 121)
!5813 = !DILocation(line: 575, column: 3580, scope: !5814)
!5814 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 122)
!5815 = !DILocation(line: 575, column: 3594, scope: !5814)
!5816 = !DILocation(line: 575, column: 3596, scope: !5814)
!5817 = !DILocation(line: 575, column: 3603, scope: !5814)
!5818 = !DILocation(line: 575, column: 3617, scope: !5814)
!5819 = !DILocation(line: 575, column: 3619, scope: !5814)
!5820 = !DILocation(line: 575, column: 3622, scope: !5814)
!5821 = !DILocation(line: 575, column: 3626, scope: !5814)
!5822 = !DILocation(line: 575, column: 3600, scope: !5814)
!5823 = !DILocation(line: 575, column: 3579, scope: !5814)
!5824 = !DILocation(line: 575, column: 3637, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 123)
!5826 = !DILocation(line: 575, column: 3651, scope: !5825)
!5827 = !DILocation(line: 575, column: 3653, scope: !5825)
!5828 = !DILocation(line: 575, column: 3579, scope: !5825)
!5829 = !DILocation(line: 575, column: 3660, scope: !5830)
!5830 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 124)
!5831 = !DILocation(line: 575, column: 3674, scope: !5830)
!5832 = !DILocation(line: 575, column: 3676, scope: !5830)
!5833 = !DILocation(line: 575, column: 3679, scope: !5830)
!5834 = !DILocation(line: 575, column: 3683, scope: !5830)
!5835 = !DILocation(line: 575, column: 3579, scope: !5830)
!5836 = !DILocation(line: 575, column: 3579, scope: !5837)
!5837 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 125)
!5838 = !DILocation(line: 575, column: 3703, scope: !5837)
!5839 = !DILocation(line: 575, column: 3717, scope: !5837)
!5840 = !DILocation(line: 575, column: 3719, scope: !5837)
!5841 = !DILocation(line: 575, column: 3701, scope: !5837)
!5842 = !DILocation(line: 575, column: 3693, scope: !5837)
!5843 = !DILocation(line: 575, column: 3577, scope: !5837)
!5844 = !DILocation(line: 575, column: 3733, scope: !5845)
!5845 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 126)
!5846 = !DILocation(line: 575, column: 3747, scope: !5845)
!5847 = !DILocation(line: 575, column: 3749, scope: !5845)
!5848 = !DILocation(line: 575, column: 3731, scope: !5845)
!5849 = !DILocation(line: 575, column: 3577, scope: !5845)
!5850 = !DILocation(line: 575, column: 3758, scope: !5851)
!5851 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 127)
!5852 = !DILocation(line: 575, column: 3772, scope: !5851)
!5853 = !DILocation(line: 575, column: 3774, scope: !5851)
!5854 = !DILocation(line: 575, column: 3781, scope: !5851)
!5855 = !DILocation(line: 575, column: 3795, scope: !5851)
!5856 = !DILocation(line: 575, column: 3797, scope: !5851)
!5857 = !DILocation(line: 575, column: 3800, scope: !5851)
!5858 = !DILocation(line: 575, column: 3804, scope: !5851)
!5859 = !DILocation(line: 575, column: 3778, scope: !5851)
!5860 = !DILocation(line: 575, column: 3757, scope: !5851)
!5861 = !DILocation(line: 575, column: 3815, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 128)
!5863 = !DILocation(line: 575, column: 3829, scope: !5862)
!5864 = !DILocation(line: 575, column: 3831, scope: !5862)
!5865 = !DILocation(line: 575, column: 3757, scope: !5862)
!5866 = !DILocation(line: 575, column: 3838, scope: !5867)
!5867 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 129)
!5868 = !DILocation(line: 575, column: 3852, scope: !5867)
!5869 = !DILocation(line: 575, column: 3854, scope: !5867)
!5870 = !DILocation(line: 575, column: 3857, scope: !5867)
!5871 = !DILocation(line: 575, column: 3861, scope: !5867)
!5872 = !DILocation(line: 575, column: 3757, scope: !5867)
!5873 = !DILocation(line: 575, column: 3757, scope: !5874)
!5874 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 130)
!5875 = !DILocation(line: 575, column: 3577, scope: !5874)
!5876 = !DILocation(line: 575, column: 3577, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 131)
!5878 = !DILocation(line: 575, column: 3884, scope: !5877)
!5879 = !DILocation(line: 575, column: 3898, scope: !5877)
!5880 = !DILocation(line: 575, column: 3900, scope: !5877)
!5881 = !DILocation(line: 575, column: 3882, scope: !5877)
!5882 = !DILocation(line: 575, column: 3873, scope: !5877)
!5883 = !DILocation(line: 575, column: 3575, scope: !5877)
!5884 = !DILocation(line: 575, column: 3916, scope: !5885)
!5885 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 132)
!5886 = !DILocation(line: 575, column: 3930, scope: !5885)
!5887 = !DILocation(line: 575, column: 3932, scope: !5885)
!5888 = !DILocation(line: 575, column: 3914, scope: !5885)
!5889 = !DILocation(line: 575, column: 3575, scope: !5885)
!5890 = !DILocation(line: 575, column: 3944, scope: !5891)
!5891 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 133)
!5892 = !DILocation(line: 575, column: 3958, scope: !5891)
!5893 = !DILocation(line: 575, column: 3960, scope: !5891)
!5894 = !DILocation(line: 575, column: 3967, scope: !5891)
!5895 = !DILocation(line: 575, column: 3981, scope: !5891)
!5896 = !DILocation(line: 575, column: 3983, scope: !5891)
!5897 = !DILocation(line: 575, column: 3986, scope: !5891)
!5898 = !DILocation(line: 575, column: 3990, scope: !5891)
!5899 = !DILocation(line: 575, column: 3964, scope: !5891)
!5900 = !DILocation(line: 575, column: 3943, scope: !5891)
!5901 = !DILocation(line: 575, column: 4001, scope: !5902)
!5902 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 134)
!5903 = !DILocation(line: 575, column: 4015, scope: !5902)
!5904 = !DILocation(line: 575, column: 4017, scope: !5902)
!5905 = !DILocation(line: 575, column: 3943, scope: !5902)
!5906 = !DILocation(line: 575, column: 4024, scope: !5907)
!5907 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 135)
!5908 = !DILocation(line: 575, column: 4038, scope: !5907)
!5909 = !DILocation(line: 575, column: 4040, scope: !5907)
!5910 = !DILocation(line: 575, column: 4043, scope: !5907)
!5911 = !DILocation(line: 575, column: 4047, scope: !5907)
!5912 = !DILocation(line: 575, column: 3943, scope: !5907)
!5913 = !DILocation(line: 575, column: 3943, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 136)
!5915 = !DILocation(line: 575, column: 4067, scope: !5914)
!5916 = !DILocation(line: 575, column: 4081, scope: !5914)
!5917 = !DILocation(line: 575, column: 4083, scope: !5914)
!5918 = !DILocation(line: 575, column: 4065, scope: !5914)
!5919 = !DILocation(line: 575, column: 4057, scope: !5914)
!5920 = !DILocation(line: 575, column: 3941, scope: !5914)
!5921 = !DILocation(line: 575, column: 4097, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 137)
!5923 = !DILocation(line: 575, column: 4111, scope: !5922)
!5924 = !DILocation(line: 575, column: 4113, scope: !5922)
!5925 = !DILocation(line: 575, column: 4095, scope: !5922)
!5926 = !DILocation(line: 575, column: 3941, scope: !5922)
!5927 = !DILocation(line: 575, column: 4122, scope: !5928)
!5928 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 138)
!5929 = !DILocation(line: 575, column: 4136, scope: !5928)
!5930 = !DILocation(line: 575, column: 4138, scope: !5928)
!5931 = !DILocation(line: 575, column: 4145, scope: !5928)
!5932 = !DILocation(line: 575, column: 4159, scope: !5928)
!5933 = !DILocation(line: 575, column: 4161, scope: !5928)
!5934 = !DILocation(line: 575, column: 4164, scope: !5928)
!5935 = !DILocation(line: 575, column: 4168, scope: !5928)
!5936 = !DILocation(line: 575, column: 4142, scope: !5928)
!5937 = !DILocation(line: 575, column: 4121, scope: !5928)
!5938 = !DILocation(line: 575, column: 4179, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 139)
!5940 = !DILocation(line: 575, column: 4193, scope: !5939)
!5941 = !DILocation(line: 575, column: 4195, scope: !5939)
!5942 = !DILocation(line: 575, column: 4121, scope: !5939)
!5943 = !DILocation(line: 575, column: 4202, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 140)
!5945 = !DILocation(line: 575, column: 4216, scope: !5944)
!5946 = !DILocation(line: 575, column: 4218, scope: !5944)
!5947 = !DILocation(line: 575, column: 4221, scope: !5944)
!5948 = !DILocation(line: 575, column: 4225, scope: !5944)
!5949 = !DILocation(line: 575, column: 4121, scope: !5944)
!5950 = !DILocation(line: 575, column: 4121, scope: !5951)
!5951 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 141)
!5952 = !DILocation(line: 575, column: 3941, scope: !5951)
!5953 = !DILocation(line: 575, column: 3941, scope: !5954)
!5954 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 142)
!5955 = !DILocation(line: 575, column: 3575, scope: !5954)
!5956 = !DILocation(line: 575, column: 3575, scope: !5957)
!5957 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 143)
!5958 = !DILocation(line: 575, column: 2885, scope: !5957)
!5959 = !DILocation(line: 575, column: 2885, scope: !5960)
!5960 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 144)
!5961 = !DILocation(line: 575, column: 4244, scope: !5960)
!5962 = !DILocation(line: 575, column: 4251, scope: !5960)
!5963 = !DILocation(line: 575, column: 4263, scope: !5960)
!5964 = !DILocation(line: 575, column: 4241, scope: !5960)
!5965 = !DILocation(line: 575, column: 2883, scope: !5960)
!5966 = !DILocation(line: 575, column: 4271, scope: !5967)
!5967 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 145)
!5968 = !DILocation(line: 575, column: 4278, scope: !5967)
!5969 = !DILocation(line: 575, column: 4290, scope: !5967)
!5970 = !DILocation(line: 575, column: 2883, scope: !5967)
!5971 = !DILocation(line: 575, column: 4306, scope: !5972)
!5972 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 146)
!5973 = !DILocation(line: 575, column: 4320, scope: !5972)
!5974 = !DILocation(line: 575, column: 4322, scope: !5972)
!5975 = !DILocation(line: 575, column: 4329, scope: !5972)
!5976 = !DILocation(line: 575, column: 4343, scope: !5972)
!5977 = !DILocation(line: 575, column: 4345, scope: !5972)
!5978 = !DILocation(line: 575, column: 4348, scope: !5972)
!5979 = !DILocation(line: 575, column: 4352, scope: !5972)
!5980 = !DILocation(line: 575, column: 4326, scope: !5972)
!5981 = !DILocation(line: 575, column: 4305, scope: !5972)
!5982 = !DILocation(line: 575, column: 4363, scope: !5983)
!5983 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 147)
!5984 = !DILocation(line: 575, column: 4377, scope: !5983)
!5985 = !DILocation(line: 575, column: 4379, scope: !5983)
!5986 = !DILocation(line: 575, column: 4305, scope: !5983)
!5987 = !DILocation(line: 575, column: 4386, scope: !5988)
!5988 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 148)
!5989 = !DILocation(line: 575, column: 4400, scope: !5988)
!5990 = !DILocation(line: 575, column: 4402, scope: !5988)
!5991 = !DILocation(line: 575, column: 4405, scope: !5988)
!5992 = !DILocation(line: 575, column: 4409, scope: !5988)
!5993 = !DILocation(line: 575, column: 4305, scope: !5988)
!5994 = !DILocation(line: 575, column: 4305, scope: !5995)
!5995 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 149)
!5996 = !DILocation(line: 575, column: 4429, scope: !5995)
!5997 = !DILocation(line: 575, column: 4443, scope: !5995)
!5998 = !DILocation(line: 575, column: 4445, scope: !5995)
!5999 = !DILocation(line: 575, column: 4427, scope: !5995)
!6000 = !DILocation(line: 575, column: 4419, scope: !5995)
!6001 = !DILocation(line: 575, column: 4303, scope: !5995)
!6002 = !DILocation(line: 575, column: 4459, scope: !6003)
!6003 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 150)
!6004 = !DILocation(line: 575, column: 4473, scope: !6003)
!6005 = !DILocation(line: 575, column: 4475, scope: !6003)
!6006 = !DILocation(line: 575, column: 4457, scope: !6003)
!6007 = !DILocation(line: 575, column: 4303, scope: !6003)
!6008 = !DILocation(line: 575, column: 4484, scope: !6009)
!6009 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 151)
!6010 = !DILocation(line: 575, column: 4498, scope: !6009)
!6011 = !DILocation(line: 575, column: 4500, scope: !6009)
!6012 = !DILocation(line: 575, column: 4507, scope: !6009)
!6013 = !DILocation(line: 575, column: 4521, scope: !6009)
!6014 = !DILocation(line: 575, column: 4523, scope: !6009)
!6015 = !DILocation(line: 575, column: 4526, scope: !6009)
!6016 = !DILocation(line: 575, column: 4530, scope: !6009)
!6017 = !DILocation(line: 575, column: 4504, scope: !6009)
!6018 = !DILocation(line: 575, column: 4483, scope: !6009)
!6019 = !DILocation(line: 575, column: 4541, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 152)
!6021 = !DILocation(line: 575, column: 4555, scope: !6020)
!6022 = !DILocation(line: 575, column: 4557, scope: !6020)
!6023 = !DILocation(line: 575, column: 4483, scope: !6020)
!6024 = !DILocation(line: 575, column: 4564, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 153)
!6026 = !DILocation(line: 575, column: 4578, scope: !6025)
!6027 = !DILocation(line: 575, column: 4580, scope: !6025)
!6028 = !DILocation(line: 575, column: 4583, scope: !6025)
!6029 = !DILocation(line: 575, column: 4587, scope: !6025)
!6030 = !DILocation(line: 575, column: 4483, scope: !6025)
!6031 = !DILocation(line: 575, column: 4483, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 154)
!6033 = !DILocation(line: 575, column: 4303, scope: !6032)
!6034 = !DILocation(line: 575, column: 4303, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 155)
!6036 = !DILocation(line: 575, column: 4610, scope: !6035)
!6037 = !DILocation(line: 575, column: 4624, scope: !6035)
!6038 = !DILocation(line: 575, column: 4626, scope: !6035)
!6039 = !DILocation(line: 575, column: 4608, scope: !6035)
!6040 = !DILocation(line: 575, column: 4599, scope: !6035)
!6041 = !DILocation(line: 575, column: 4301, scope: !6035)
!6042 = !DILocation(line: 575, column: 4642, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 156)
!6044 = !DILocation(line: 575, column: 4656, scope: !6043)
!6045 = !DILocation(line: 575, column: 4658, scope: !6043)
!6046 = !DILocation(line: 575, column: 4640, scope: !6043)
!6047 = !DILocation(line: 575, column: 4301, scope: !6043)
!6048 = !DILocation(line: 575, column: 4670, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 157)
!6050 = !DILocation(line: 575, column: 4684, scope: !6049)
!6051 = !DILocation(line: 575, column: 4686, scope: !6049)
!6052 = !DILocation(line: 575, column: 4693, scope: !6049)
!6053 = !DILocation(line: 575, column: 4707, scope: !6049)
!6054 = !DILocation(line: 575, column: 4709, scope: !6049)
!6055 = !DILocation(line: 575, column: 4712, scope: !6049)
!6056 = !DILocation(line: 575, column: 4716, scope: !6049)
!6057 = !DILocation(line: 575, column: 4690, scope: !6049)
!6058 = !DILocation(line: 575, column: 4669, scope: !6049)
!6059 = !DILocation(line: 575, column: 4727, scope: !6060)
!6060 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 158)
!6061 = !DILocation(line: 575, column: 4741, scope: !6060)
!6062 = !DILocation(line: 575, column: 4743, scope: !6060)
!6063 = !DILocation(line: 575, column: 4669, scope: !6060)
!6064 = !DILocation(line: 575, column: 4750, scope: !6065)
!6065 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 159)
!6066 = !DILocation(line: 575, column: 4764, scope: !6065)
!6067 = !DILocation(line: 575, column: 4766, scope: !6065)
!6068 = !DILocation(line: 575, column: 4769, scope: !6065)
!6069 = !DILocation(line: 575, column: 4773, scope: !6065)
!6070 = !DILocation(line: 575, column: 4669, scope: !6065)
!6071 = !DILocation(line: 575, column: 4669, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 160)
!6073 = !DILocation(line: 575, column: 4793, scope: !6072)
!6074 = !DILocation(line: 575, column: 4807, scope: !6072)
!6075 = !DILocation(line: 575, column: 4809, scope: !6072)
!6076 = !DILocation(line: 575, column: 4791, scope: !6072)
!6077 = !DILocation(line: 575, column: 4783, scope: !6072)
!6078 = !DILocation(line: 575, column: 4667, scope: !6072)
!6079 = !DILocation(line: 575, column: 4823, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 161)
!6081 = !DILocation(line: 575, column: 4837, scope: !6080)
!6082 = !DILocation(line: 575, column: 4839, scope: !6080)
!6083 = !DILocation(line: 575, column: 4821, scope: !6080)
!6084 = !DILocation(line: 575, column: 4667, scope: !6080)
!6085 = !DILocation(line: 575, column: 4848, scope: !6086)
!6086 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 162)
!6087 = !DILocation(line: 575, column: 4862, scope: !6086)
!6088 = !DILocation(line: 575, column: 4864, scope: !6086)
!6089 = !DILocation(line: 575, column: 4871, scope: !6086)
!6090 = !DILocation(line: 575, column: 4885, scope: !6086)
!6091 = !DILocation(line: 575, column: 4887, scope: !6086)
!6092 = !DILocation(line: 575, column: 4890, scope: !6086)
!6093 = !DILocation(line: 575, column: 4894, scope: !6086)
!6094 = !DILocation(line: 575, column: 4868, scope: !6086)
!6095 = !DILocation(line: 575, column: 4847, scope: !6086)
!6096 = !DILocation(line: 575, column: 4905, scope: !6097)
!6097 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 163)
!6098 = !DILocation(line: 575, column: 4919, scope: !6097)
!6099 = !DILocation(line: 575, column: 4921, scope: !6097)
!6100 = !DILocation(line: 575, column: 4847, scope: !6097)
!6101 = !DILocation(line: 575, column: 4928, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 164)
!6103 = !DILocation(line: 575, column: 4942, scope: !6102)
!6104 = !DILocation(line: 575, column: 4944, scope: !6102)
!6105 = !DILocation(line: 575, column: 4947, scope: !6102)
!6106 = !DILocation(line: 575, column: 4951, scope: !6102)
!6107 = !DILocation(line: 575, column: 4847, scope: !6102)
!6108 = !DILocation(line: 575, column: 4847, scope: !6109)
!6109 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 165)
!6110 = !DILocation(line: 575, column: 4667, scope: !6109)
!6111 = !DILocation(line: 575, column: 4667, scope: !6112)
!6112 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 166)
!6113 = !DILocation(line: 575, column: 4301, scope: !6112)
!6114 = !DILocation(line: 575, column: 4301, scope: !6115)
!6115 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 167)
!6116 = !DILocation(line: 575, column: 4965, scope: !6115)
!6117 = !DILocation(line: 575, column: 4299, scope: !6115)
!6118 = !DILocation(line: 575, column: 4299, scope: !6119)
!6119 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 168)
!6120 = !DILocation(line: 575, column: 4994, scope: !6121)
!6121 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 169)
!6122 = !DILocation(line: 575, column: 5008, scope: !6121)
!6123 = !DILocation(line: 575, column: 5010, scope: !6121)
!6124 = !DILocation(line: 575, column: 5017, scope: !6121)
!6125 = !DILocation(line: 575, column: 5031, scope: !6121)
!6126 = !DILocation(line: 575, column: 5033, scope: !6121)
!6127 = !DILocation(line: 575, column: 5036, scope: !6121)
!6128 = !DILocation(line: 575, column: 5040, scope: !6121)
!6129 = !DILocation(line: 575, column: 5014, scope: !6121)
!6130 = !DILocation(line: 575, column: 4993, scope: !6121)
!6131 = !DILocation(line: 575, column: 5051, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 170)
!6133 = !DILocation(line: 575, column: 5065, scope: !6132)
!6134 = !DILocation(line: 575, column: 5067, scope: !6132)
!6135 = !DILocation(line: 575, column: 4993, scope: !6132)
!6136 = !DILocation(line: 575, column: 5074, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 171)
!6138 = !DILocation(line: 575, column: 5088, scope: !6137)
!6139 = !DILocation(line: 575, column: 5090, scope: !6137)
!6140 = !DILocation(line: 575, column: 5093, scope: !6137)
!6141 = !DILocation(line: 575, column: 5097, scope: !6137)
!6142 = !DILocation(line: 575, column: 4993, scope: !6137)
!6143 = !DILocation(line: 575, column: 4993, scope: !6144)
!6144 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 172)
!6145 = !DILocation(line: 575, column: 5117, scope: !6144)
!6146 = !DILocation(line: 575, column: 5131, scope: !6144)
!6147 = !DILocation(line: 575, column: 5133, scope: !6144)
!6148 = !DILocation(line: 575, column: 5115, scope: !6144)
!6149 = !DILocation(line: 575, column: 5107, scope: !6144)
!6150 = !DILocation(line: 575, column: 4991, scope: !6144)
!6151 = !DILocation(line: 575, column: 5147, scope: !6152)
!6152 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 173)
!6153 = !DILocation(line: 575, column: 5161, scope: !6152)
!6154 = !DILocation(line: 575, column: 5163, scope: !6152)
!6155 = !DILocation(line: 575, column: 5145, scope: !6152)
!6156 = !DILocation(line: 575, column: 4991, scope: !6152)
!6157 = !DILocation(line: 575, column: 5172, scope: !6158)
!6158 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 174)
!6159 = !DILocation(line: 575, column: 5186, scope: !6158)
!6160 = !DILocation(line: 575, column: 5188, scope: !6158)
!6161 = !DILocation(line: 575, column: 5195, scope: !6158)
!6162 = !DILocation(line: 575, column: 5209, scope: !6158)
!6163 = !DILocation(line: 575, column: 5211, scope: !6158)
!6164 = !DILocation(line: 575, column: 5214, scope: !6158)
!6165 = !DILocation(line: 575, column: 5218, scope: !6158)
!6166 = !DILocation(line: 575, column: 5192, scope: !6158)
!6167 = !DILocation(line: 575, column: 5171, scope: !6158)
!6168 = !DILocation(line: 575, column: 5229, scope: !6169)
!6169 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 175)
!6170 = !DILocation(line: 575, column: 5243, scope: !6169)
!6171 = !DILocation(line: 575, column: 5245, scope: !6169)
!6172 = !DILocation(line: 575, column: 5171, scope: !6169)
!6173 = !DILocation(line: 575, column: 5252, scope: !6174)
!6174 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 176)
!6175 = !DILocation(line: 575, column: 5266, scope: !6174)
!6176 = !DILocation(line: 575, column: 5268, scope: !6174)
!6177 = !DILocation(line: 575, column: 5271, scope: !6174)
!6178 = !DILocation(line: 575, column: 5275, scope: !6174)
!6179 = !DILocation(line: 575, column: 5171, scope: !6174)
!6180 = !DILocation(line: 575, column: 5171, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 177)
!6182 = !DILocation(line: 575, column: 4991, scope: !6181)
!6183 = !DILocation(line: 575, column: 4991, scope: !6184)
!6184 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 178)
!6185 = !DILocation(line: 575, column: 5298, scope: !6184)
!6186 = !DILocation(line: 575, column: 5312, scope: !6184)
!6187 = !DILocation(line: 575, column: 5314, scope: !6184)
!6188 = !DILocation(line: 575, column: 5296, scope: !6184)
!6189 = !DILocation(line: 575, column: 5287, scope: !6184)
!6190 = !DILocation(line: 575, column: 4989, scope: !6184)
!6191 = !DILocation(line: 575, column: 5330, scope: !6192)
!6192 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 179)
!6193 = !DILocation(line: 575, column: 5344, scope: !6192)
!6194 = !DILocation(line: 575, column: 5346, scope: !6192)
!6195 = !DILocation(line: 575, column: 5328, scope: !6192)
!6196 = !DILocation(line: 575, column: 4989, scope: !6192)
!6197 = !DILocation(line: 575, column: 5358, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 180)
!6199 = !DILocation(line: 575, column: 5372, scope: !6198)
!6200 = !DILocation(line: 575, column: 5374, scope: !6198)
!6201 = !DILocation(line: 575, column: 5381, scope: !6198)
!6202 = !DILocation(line: 575, column: 5395, scope: !6198)
!6203 = !DILocation(line: 575, column: 5397, scope: !6198)
!6204 = !DILocation(line: 575, column: 5400, scope: !6198)
!6205 = !DILocation(line: 575, column: 5404, scope: !6198)
!6206 = !DILocation(line: 575, column: 5378, scope: !6198)
!6207 = !DILocation(line: 575, column: 5357, scope: !6198)
!6208 = !DILocation(line: 575, column: 5415, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 181)
!6210 = !DILocation(line: 575, column: 5429, scope: !6209)
!6211 = !DILocation(line: 575, column: 5431, scope: !6209)
!6212 = !DILocation(line: 575, column: 5357, scope: !6209)
!6213 = !DILocation(line: 575, column: 5438, scope: !6214)
!6214 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 182)
!6215 = !DILocation(line: 575, column: 5452, scope: !6214)
!6216 = !DILocation(line: 575, column: 5454, scope: !6214)
!6217 = !DILocation(line: 575, column: 5457, scope: !6214)
!6218 = !DILocation(line: 575, column: 5461, scope: !6214)
!6219 = !DILocation(line: 575, column: 5357, scope: !6214)
!6220 = !DILocation(line: 575, column: 5357, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 183)
!6222 = !DILocation(line: 575, column: 5481, scope: !6221)
!6223 = !DILocation(line: 575, column: 5495, scope: !6221)
!6224 = !DILocation(line: 575, column: 5497, scope: !6221)
!6225 = !DILocation(line: 575, column: 5479, scope: !6221)
!6226 = !DILocation(line: 575, column: 5471, scope: !6221)
!6227 = !DILocation(line: 575, column: 5355, scope: !6221)
!6228 = !DILocation(line: 575, column: 5511, scope: !6229)
!6229 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 184)
!6230 = !DILocation(line: 575, column: 5525, scope: !6229)
!6231 = !DILocation(line: 575, column: 5527, scope: !6229)
!6232 = !DILocation(line: 575, column: 5509, scope: !6229)
!6233 = !DILocation(line: 575, column: 5355, scope: !6229)
!6234 = !DILocation(line: 575, column: 5536, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 185)
!6236 = !DILocation(line: 575, column: 5550, scope: !6235)
!6237 = !DILocation(line: 575, column: 5552, scope: !6235)
!6238 = !DILocation(line: 575, column: 5559, scope: !6235)
!6239 = !DILocation(line: 575, column: 5573, scope: !6235)
!6240 = !DILocation(line: 575, column: 5575, scope: !6235)
!6241 = !DILocation(line: 575, column: 5578, scope: !6235)
!6242 = !DILocation(line: 575, column: 5582, scope: !6235)
!6243 = !DILocation(line: 575, column: 5556, scope: !6235)
!6244 = !DILocation(line: 575, column: 5535, scope: !6235)
!6245 = !DILocation(line: 575, column: 5593, scope: !6246)
!6246 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 186)
!6247 = !DILocation(line: 575, column: 5607, scope: !6246)
!6248 = !DILocation(line: 575, column: 5609, scope: !6246)
!6249 = !DILocation(line: 575, column: 5535, scope: !6246)
!6250 = !DILocation(line: 575, column: 5616, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 187)
!6252 = !DILocation(line: 575, column: 5630, scope: !6251)
!6253 = !DILocation(line: 575, column: 5632, scope: !6251)
!6254 = !DILocation(line: 575, column: 5635, scope: !6251)
!6255 = !DILocation(line: 575, column: 5639, scope: !6251)
!6256 = !DILocation(line: 575, column: 5535, scope: !6251)
!6257 = !DILocation(line: 575, column: 5535, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 188)
!6259 = !DILocation(line: 575, column: 5355, scope: !6258)
!6260 = !DILocation(line: 575, column: 5355, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 189)
!6262 = !DILocation(line: 575, column: 4989, scope: !6261)
!6263 = !DILocation(line: 575, column: 4989, scope: !6264)
!6264 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 190)
!6265 = !DILocation(line: 575, column: 4299, scope: !6264)
!6266 = !DILocation(line: 575, column: 4299, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 191)
!6268 = !DILocation(line: 575, column: 2883, scope: !6267)
!6269 = !DILocation(line: 575, column: 2883, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 192)
!6271 = !DILocation(line: 575, column: 2865, scope: !6270)
!6272 = !DILocation(line: 575, column: 5658, scope: !6273)
!6273 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 193)
!6274 = !DILocation(line: 575, column: 5665, scope: !6273)
!6275 = !DILocation(line: 575, column: 5677, scope: !6273)
!6276 = !DILocation(line: 575, column: 2865, scope: !6273)
!6277 = !DILocation(line: 575, column: 2865, scope: !6278)
!6278 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 194)
!6279 = !DILocation(line: 575, column: 22, scope: !6278)
!6280 = !DILocation(line: 575, column: 22, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !5042, file: !957, discriminator: 195)
!6282 = !DILocation(line: 575, column: 19, scope: !6281)
!6283 = !DILocation(line: 578, column: 14, scope: !4813)
!6284 = !DILocation(line: 578, column: 24, scope: !4813)
!6285 = !DILocation(line: 578, column: 30, scope: !4813)
!6286 = !DILocation(line: 578, column: 28, scope: !4813)
!6287 = !DILocation(line: 578, column: 37, scope: !4813)
!6288 = !DILocation(line: 578, column: 44, scope: !4813)
!6289 = !DILocation(line: 578, column: 35, scope: !4813)
!6290 = !DILocation(line: 578, column: 12, scope: !4813)
!6291 = !DILocation(line: 580, column: 12, scope: !4813)
!6292 = !DILocation(line: 580, column: 17, scope: !4813)
!6293 = !DILocation(line: 580, column: 5, scope: !4813)
!6294 = !DILocation(line: 580, column: 27, scope: !4813)
!6295 = !DILocation(line: 580, column: 32, scope: !4813)
!6296 = !DILocation(line: 581, column: 26, scope: !4813)
!6297 = !DILocation(line: 581, column: 31, scope: !4813)
!6298 = !DILocation(line: 581, column: 5, scope: !4813)
!6299 = !DILocation(line: 582, column: 12, scope: !4834)
!6300 = !DILocation(line: 582, column: 10, scope: !4834)
!6301 = !DILocation(line: 582, column: 17, scope: !6302)
!6302 = !DILexicalBlockFile(scope: !4833, file: !957, discriminator: 1)
!6303 = !DILocation(line: 582, column: 21, scope: !6302)
!6304 = !DILocation(line: 582, column: 26, scope: !6302)
!6305 = !DILocation(line: 582, column: 30, scope: !6302)
!6306 = !DILocation(line: 582, column: 19, scope: !6302)
!6307 = !DILocation(line: 582, column: 5, scope: !6302)
!6308 = !DILocalVariable(name: "wstart", scope: !4832, file: !957, line: 583, type: !991)
!6309 = !DILocation(line: 583, column: 13, scope: !4832)
!6310 = !DILocation(line: 583, column: 22, scope: !4832)
!6311 = !DILocation(line: 583, column: 23, scope: !4832)
!6312 = !DILocation(line: 584, column: 16, scope: !4831)
!6313 = !DILocation(line: 584, column: 14, scope: !4831)
!6314 = !DILocation(line: 584, column: 21, scope: !6315)
!6315 = !DILexicalBlockFile(scope: !4830, file: !957, discriminator: 1)
!6316 = !DILocation(line: 584, column: 25, scope: !6315)
!6317 = !DILocation(line: 584, column: 30, scope: !6315)
!6318 = !DILocation(line: 584, column: 34, scope: !6315)
!6319 = !DILocation(line: 584, column: 23, scope: !6315)
!6320 = !DILocation(line: 584, column: 9, scope: !6315)
!6321 = !DILocalVariable(name: "noise_sfi", scope: !4829, file: !957, line: 585, type: !991)
!6322 = !DILocation(line: 585, column: 17, scope: !4829)
!6323 = !DILocalVariable(name: "dist1", scope: !4829, file: !957, line: 586, type: !954)
!6324 = !DILocation(line: 586, column: 19, scope: !4829)
!6325 = !DILocalVariable(name: "dist2", scope: !4829, file: !957, line: 586, type: !954)
!6326 = !DILocation(line: 586, column: 33, scope: !4829)
!6327 = !DILocalVariable(name: "noise_amp", scope: !4829, file: !957, line: 586, type: !954)
!6328 = !DILocation(line: 586, column: 47, scope: !4829)
!6329 = !DILocalVariable(name: "pns_energy", scope: !4829, file: !957, line: 587, type: !954)
!6330 = !DILocation(line: 587, column: 19, scope: !4829)
!6331 = !DILocalVariable(name: "pns_tgt_energy", scope: !4829, file: !957, line: 587, type: !954)
!6332 = !DILocation(line: 587, column: 38, scope: !4829)
!6333 = !DILocalVariable(name: "energy_ratio", scope: !4829, file: !957, line: 587, type: !954)
!6334 = !DILocation(line: 587, column: 54, scope: !4829)
!6335 = !DILocalVariable(name: "dist_thresh", scope: !4829, file: !957, line: 587, type: !954)
!6336 = !DILocation(line: 587, column: 68, scope: !4829)
!6337 = !DILocalVariable(name: "sfb_energy", scope: !4829, file: !957, line: 588, type: !954)
!6338 = !DILocation(line: 588, column: 19, scope: !4829)
!6339 = !DILocalVariable(name: "threshold", scope: !4829, file: !957, line: 588, type: !954)
!6340 = !DILocation(line: 588, column: 38, scope: !4829)
!6341 = !DILocalVariable(name: "spread", scope: !4829, file: !957, line: 588, type: !954)
!6342 = !DILocation(line: 588, column: 56, scope: !4829)
!6343 = !DILocalVariable(name: "min_energy", scope: !4829, file: !957, line: 589, type: !954)
!6344 = !DILocation(line: 589, column: 19, scope: !4829)
!6345 = !DILocalVariable(name: "max_energy", scope: !4829, file: !957, line: 589, type: !954)
!6346 = !DILocation(line: 589, column: 39, scope: !4829)
!6347 = !DILocalVariable(name: "start", scope: !4829, file: !957, line: 590, type: !1043)
!6348 = !DILocation(line: 590, column: 23, scope: !4829)
!6349 = !DILocation(line: 590, column: 31, scope: !4829)
!6350 = !DILocation(line: 590, column: 58, scope: !4829)
!6351 = !DILocation(line: 590, column: 38, scope: !4829)
!6352 = !DILocation(line: 590, column: 43, scope: !4829)
!6353 = !DILocation(line: 590, column: 47, scope: !4829)
!6354 = !DILocation(line: 590, column: 37, scope: !4829)
!6355 = !DILocalVariable(name: "freq", scope: !4829, file: !957, line: 591, type: !1781)
!6356 = !DILocation(line: 591, column: 25, scope: !4829)
!6357 = !DILocation(line: 591, column: 33, scope: !4829)
!6358 = !DILocation(line: 591, column: 39, scope: !4829)
!6359 = !DILocation(line: 591, column: 38, scope: !4829)
!6360 = !DILocation(line: 591, column: 32, scope: !4829)
!6361 = !DILocation(line: 591, column: 47, scope: !4829)
!6362 = !DILocation(line: 591, column: 46, scope: !4829)
!6363 = !DILocalVariable(name: "freq_boost", scope: !4829, file: !957, line: 592, type: !1781)
!6364 = !DILocation(line: 592, column: 25, scope: !4829)
!6365 = !DILocation(line: 592, column: 46, scope: !4829)
!6366 = !DILocation(line: 592, column: 45, scope: !4829)
!6367 = !DILocation(line: 592, column: 50, scope: !4829)
!6368 = !DILocation(line: 592, column: 57, scope: !4829)
!6369 = !DILocation(line: 592, column: 39, scope: !4829)
!6370 = !DILocation(line: 592, column: 75, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !4829, file: !957, discriminator: 1)
!6372 = !DILocation(line: 592, column: 74, scope: !6371)
!6373 = !DILocation(line: 592, column: 79, scope: !6371)
!6374 = !DILocation(line: 592, column: 39, scope: !6371)
!6375 = !DILocation(line: 592, column: 39, scope: !4843)
!6376 = !DILocation(line: 592, column: 39, scope: !6377)
!6377 = !DILexicalBlockFile(scope: !4829, file: !957, discriminator: 3)
!6378 = !DILocation(line: 592, column: 25, scope: !6377)
!6379 = !DILocation(line: 593, column: 17, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 593, column: 17)
!6381 = !DILocation(line: 593, column: 22, scope: !6380)
!6382 = !DILocation(line: 593, column: 29, scope: !6380)
!6383 = !DILocation(line: 593, column: 33, scope: !6384)
!6384 = !DILexicalBlockFile(scope: !6380, file: !957, discriminator: 1)
!6385 = !DILocation(line: 593, column: 39, scope: !6384)
!6386 = !DILocation(line: 593, column: 38, scope: !6384)
!6387 = !DILocation(line: 593, column: 50, scope: !6384)
!6388 = !DILocation(line: 593, column: 47, scope: !6384)
!6389 = !DILocation(line: 593, column: 17, scope: !6384)
!6390 = !DILocation(line: 594, column: 34, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !957, line: 594, column: 21)
!6392 = distinct !DILexicalBlock(scope: !6380, file: !957, line: 593, column: 58)
!6393 = !DILocation(line: 594, column: 35, scope: !6391)
!6394 = !DILocation(line: 594, column: 39, scope: !6391)
!6395 = !DILocation(line: 594, column: 38, scope: !6391)
!6396 = !DILocation(line: 594, column: 22, scope: !6391)
!6397 = !DILocation(line: 594, column: 27, scope: !6391)
!6398 = !DILocation(line: 594, column: 21, scope: !6392)
!6399 = !DILocation(line: 595, column: 43, scope: !6391)
!6400 = !DILocation(line: 595, column: 44, scope: !6391)
!6401 = !DILocation(line: 595, column: 48, scope: !6391)
!6402 = !DILocation(line: 595, column: 47, scope: !6391)
!6403 = !DILocation(line: 595, column: 31, scope: !6391)
!6404 = !DILocation(line: 595, column: 36, scope: !6391)
!6405 = !DILocation(line: 595, column: 29, scope: !6391)
!6406 = !DILocation(line: 595, column: 21, scope: !6391)
!6407 = !DILocation(line: 596, column: 17, scope: !6392)
!6408 = !DILocation(line: 598, column: 21, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 598, column: 13)
!6410 = !DILocation(line: 598, column: 18, scope: !6409)
!6411 = !DILocation(line: 598, column: 26, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !6413, file: !957, discriminator: 1)
!6413 = distinct !DILexicalBlock(scope: !6409, file: !957, line: 598, column: 13)
!6414 = !DILocation(line: 598, column: 50, scope: !6412)
!6415 = !DILocation(line: 598, column: 31, scope: !6412)
!6416 = !DILocation(line: 598, column: 36, scope: !6412)
!6417 = !DILocation(line: 598, column: 40, scope: !6412)
!6418 = !DILocation(line: 598, column: 29, scope: !6412)
!6419 = !DILocation(line: 598, column: 13, scope: !6412)
!6420 = !DILocation(line: 599, column: 62, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6413, file: !957, line: 598, column: 60)
!6422 = !DILocation(line: 599, column: 64, scope: !6421)
!6423 = !DILocation(line: 599, column: 63, scope: !6421)
!6424 = !DILocation(line: 599, column: 67, scope: !6421)
!6425 = !DILocation(line: 599, column: 71, scope: !6421)
!6426 = !DILocation(line: 599, column: 70, scope: !6421)
!6427 = !DILocation(line: 599, column: 25, scope: !6421)
!6428 = !DILocation(line: 599, column: 35, scope: !6421)
!6429 = !DILocation(line: 599, column: 38, scope: !6421)
!6430 = !DILocation(line: 599, column: 28, scope: !6421)
!6431 = !DILocation(line: 599, column: 32, scope: !6421)
!6432 = !DILocation(line: 599, column: 51, scope: !6421)
!6433 = !DILocation(line: 599, column: 22, scope: !6421)
!6434 = !DILocation(line: 600, column: 31, scope: !6421)
!6435 = !DILocation(line: 600, column: 37, scope: !6421)
!6436 = !DILocation(line: 600, column: 28, scope: !6421)
!6437 = !DILocation(line: 601, column: 28, scope: !6421)
!6438 = !DILocation(line: 601, column: 39, scope: !6421)
!6439 = !DILocation(line: 601, column: 45, scope: !6421)
!6440 = !DILocation(line: 601, column: 36, scope: !6421)
!6441 = !DILocation(line: 601, column: 27, scope: !6421)
!6442 = !DILocation(line: 601, column: 56, scope: !6443)
!6443 = !DILexicalBlockFile(scope: !6421, file: !957, discriminator: 1)
!6444 = !DILocation(line: 601, column: 62, scope: !6443)
!6445 = !DILocation(line: 601, column: 27, scope: !6443)
!6446 = !DILocation(line: 601, column: 73, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !6421, file: !957, discriminator: 2)
!6448 = !DILocation(line: 601, column: 27, scope: !6447)
!6449 = !DILocation(line: 601, column: 27, scope: !6450)
!6450 = !DILexicalBlockFile(scope: !6421, file: !957, discriminator: 3)
!6451 = !DILocation(line: 601, column: 24, scope: !6450)
!6452 = !DILocation(line: 602, column: 30, scope: !6421)
!6453 = !DILocation(line: 602, column: 36, scope: !6421)
!6454 = !DILocation(line: 602, column: 27, scope: !6421)
!6455 = !DILocation(line: 603, column: 22, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6421, file: !957, line: 603, column: 21)
!6457 = !DILocation(line: 603, column: 21, scope: !6421)
!6458 = !DILocation(line: 604, column: 47, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6456, file: !957, line: 603, column: 26)
!6460 = !DILocation(line: 604, column: 53, scope: !6459)
!6461 = !DILocation(line: 604, column: 45, scope: !6459)
!6462 = !DILocation(line: 604, column: 32, scope: !6459)
!6463 = !DILocation(line: 605, column: 17, scope: !6459)
!6464 = !DILocation(line: 606, column: 36, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6456, file: !957, line: 605, column: 24)
!6466 = !DILocation(line: 606, column: 51, scope: !6465)
!6467 = !DILocation(line: 606, column: 57, scope: !6465)
!6468 = !DILocation(line: 606, column: 48, scope: !6465)
!6469 = !DILocation(line: 606, column: 35, scope: !6465)
!6470 = !DILocation(line: 606, column: 68, scope: !6471)
!6471 = !DILexicalBlockFile(scope: !6465, file: !957, discriminator: 1)
!6472 = !DILocation(line: 606, column: 74, scope: !6471)
!6473 = !DILocation(line: 606, column: 35, scope: !6471)
!6474 = !DILocation(line: 606, column: 85, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !6465, file: !957, discriminator: 2)
!6476 = !DILocation(line: 606, column: 35, scope: !6475)
!6477 = !DILocation(line: 606, column: 35, scope: !6478)
!6478 = !DILexicalBlockFile(scope: !6465, file: !957, discriminator: 3)
!6479 = !DILocation(line: 606, column: 32, scope: !6478)
!6480 = !DILocation(line: 607, column: 36, scope: !6465)
!6481 = !DILocation(line: 607, column: 51, scope: !6465)
!6482 = !DILocation(line: 607, column: 57, scope: !6465)
!6483 = !DILocation(line: 607, column: 48, scope: !6465)
!6484 = !DILocation(line: 607, column: 35, scope: !6465)
!6485 = !DILocation(line: 607, column: 68, scope: !6471)
!6486 = !DILocation(line: 607, column: 35, scope: !6471)
!6487 = !DILocation(line: 607, column: 83, scope: !6475)
!6488 = !DILocation(line: 607, column: 89, scope: !6475)
!6489 = !DILocation(line: 607, column: 35, scope: !6475)
!6490 = !DILocation(line: 607, column: 35, scope: !6478)
!6491 = !DILocation(line: 607, column: 32, scope: !6478)
!6492 = !DILocation(line: 609, column: 13, scope: !6421)
!6493 = !DILocation(line: 598, column: 56, scope: !6494)
!6494 = !DILexicalBlockFile(scope: !6413, file: !957, discriminator: 2)
!6495 = !DILocation(line: 598, column: 13, scope: !6494)
!6496 = distinct !{!6496, !6497}
!6497 = !DILocation(line: 598, column: 13, scope: !4829)
!6498 = !DILocation(line: 612, column: 50, scope: !4829)
!6499 = !DILocation(line: 612, column: 49, scope: !4829)
!6500 = !DILocation(line: 612, column: 27, scope: !4829)
!6501 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !4852)
!6502 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !4852)
!6503 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !4852)
!6504 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !4852)
!6505 = !DILocation(line: 612, column: 70, scope: !4829)
!6506 = !DILocation(line: 612, column: 68, scope: !4829)
!6507 = !DILocation(line: 612, column: 25, scope: !4829)
!6508 = !DILocation(line: 621, column: 31, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 621, column: 17)
!6510 = !DILocation(line: 621, column: 32, scope: !6509)
!6511 = !DILocation(line: 621, column: 36, scope: !6509)
!6512 = !DILocation(line: 621, column: 35, scope: !6509)
!6513 = !DILocation(line: 621, column: 19, scope: !6509)
!6514 = !DILocation(line: 621, column: 24, scope: !6509)
!6515 = !DILocation(line: 621, column: 39, scope: !6509)
!6516 = !DILocation(line: 621, column: 70, scope: !6517)
!6517 = !DILexicalBlockFile(scope: !6509, file: !957, discriminator: 1)
!6518 = !DILocation(line: 621, column: 75, scope: !6517)
!6519 = !DILocation(line: 621, column: 85, scope: !6517)
!6520 = !DILocation(line: 621, column: 94, scope: !6517)
!6521 = !DILocation(line: 621, column: 95, scope: !6517)
!6522 = !DILocation(line: 621, column: 99, scope: !6517)
!6523 = !DILocation(line: 621, column: 98, scope: !6517)
!6524 = !DILocation(line: 621, column: 43, scope: !6517)
!6525 = !DILocation(line: 621, column: 103, scope: !6517)
!6526 = !DILocation(line: 622, column: 31, scope: !6509)
!6527 = !DILocation(line: 622, column: 32, scope: !6509)
!6528 = !DILocation(line: 622, column: 36, scope: !6509)
!6529 = !DILocation(line: 622, column: 35, scope: !6509)
!6530 = !DILocation(line: 622, column: 19, scope: !6509)
!6531 = !DILocation(line: 622, column: 24, scope: !6509)
!6532 = !DILocation(line: 622, column: 39, scope: !6509)
!6533 = !DILocation(line: 622, column: 57, scope: !6517)
!6534 = !DILocation(line: 622, column: 58, scope: !6517)
!6535 = !DILocation(line: 622, column: 62, scope: !6517)
!6536 = !DILocation(line: 622, column: 61, scope: !6517)
!6537 = !DILocation(line: 622, column: 43, scope: !6517)
!6538 = !DILocation(line: 622, column: 48, scope: !6517)
!6539 = !DILocation(line: 622, column: 66, scope: !6517)
!6540 = !DILocation(line: 622, column: 69, scope: !6541)
!6541 = !DILexicalBlockFile(scope: !6509, file: !957, discriminator: 2)
!6542 = !DILocation(line: 622, column: 82, scope: !6541)
!6543 = !DILocation(line: 622, column: 103, scope: !6541)
!6544 = !DILocation(line: 622, column: 102, scope: !6541)
!6545 = !DILocation(line: 622, column: 92, scope: !6541)
!6546 = !DILocation(line: 622, column: 91, scope: !6541)
!6547 = !DILocation(line: 622, column: 80, scope: !6541)
!6548 = !DILocation(line: 622, column: 116, scope: !6541)
!6549 = !DILocation(line: 622, column: 119, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !6509, file: !957, discriminator: 3)
!6551 = !DILocation(line: 622, column: 128, scope: !6550)
!6552 = !DILocation(line: 622, column: 126, scope: !6550)
!6553 = !DILocation(line: 622, column: 145, scope: !6550)
!6554 = !DILocation(line: 623, column: 31, scope: !6509)
!6555 = !DILocation(line: 623, column: 32, scope: !6509)
!6556 = !DILocation(line: 623, column: 36, scope: !6509)
!6557 = !DILocation(line: 623, column: 35, scope: !6509)
!6558 = !DILocation(line: 623, column: 19, scope: !6509)
!6559 = !DILocation(line: 623, column: 24, scope: !6509)
!6560 = !DILocation(line: 623, column: 39, scope: !6509)
!6561 = !DILocation(line: 623, column: 56, scope: !6517)
!6562 = !DILocation(line: 623, column: 57, scope: !6517)
!6563 = !DILocation(line: 623, column: 61, scope: !6517)
!6564 = !DILocation(line: 623, column: 60, scope: !6517)
!6565 = !DILocation(line: 623, column: 42, scope: !6517)
!6566 = !DILocation(line: 623, column: 47, scope: !6517)
!6567 = !DILocation(line: 623, column: 64, scope: !6517)
!6568 = !DILocation(line: 623, column: 67, scope: !6541)
!6569 = !DILocation(line: 623, column: 80, scope: !6541)
!6570 = !DILocation(line: 623, column: 90, scope: !6541)
!6571 = !DILocation(line: 623, column: 89, scope: !6541)
!6572 = !DILocation(line: 623, column: 99, scope: !6541)
!6573 = !DILocation(line: 623, column: 98, scope: !6541)
!6574 = !DILocation(line: 623, column: 78, scope: !6541)
!6575 = !DILocation(line: 623, column: 111, scope: !6541)
!6576 = !DILocation(line: 624, column: 17, scope: !6509)
!6577 = !DILocation(line: 624, column: 30, scope: !6509)
!6578 = !DILocation(line: 624, column: 55, scope: !6509)
!6579 = !DILocation(line: 624, column: 53, scope: !6509)
!6580 = !DILocation(line: 624, column: 28, scope: !6509)
!6581 = !DILocation(line: 621, column: 17, scope: !4843)
!6582 = !DILocation(line: 625, column: 41, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6509, file: !957, line: 624, column: 68)
!6584 = !DILocation(line: 625, column: 31, scope: !6583)
!6585 = !DILocation(line: 625, column: 32, scope: !6583)
!6586 = !DILocation(line: 625, column: 36, scope: !6583)
!6587 = !DILocation(line: 625, column: 35, scope: !6583)
!6588 = !DILocation(line: 625, column: 17, scope: !6583)
!6589 = !DILocation(line: 625, column: 22, scope: !6583)
!6590 = !DILocation(line: 625, column: 39, scope: !6583)
!6591 = !DILocation(line: 626, column: 34, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6583, file: !957, line: 626, column: 21)
!6593 = !DILocation(line: 626, column: 35, scope: !6592)
!6594 = !DILocation(line: 626, column: 39, scope: !6592)
!6595 = !DILocation(line: 626, column: 38, scope: !6592)
!6596 = !DILocation(line: 626, column: 22, scope: !6592)
!6597 = !DILocation(line: 626, column: 27, scope: !6592)
!6598 = !DILocation(line: 626, column: 21, scope: !6583)
!6599 = !DILocation(line: 627, column: 43, scope: !6592)
!6600 = !DILocation(line: 627, column: 44, scope: !6592)
!6601 = !DILocation(line: 627, column: 48, scope: !6592)
!6602 = !DILocation(line: 627, column: 47, scope: !6592)
!6603 = !DILocation(line: 627, column: 31, scope: !6592)
!6604 = !DILocation(line: 627, column: 36, scope: !6592)
!6605 = !DILocation(line: 627, column: 29, scope: !6592)
!6606 = !DILocation(line: 627, column: 21, scope: !6592)
!6607 = !DILocation(line: 628, column: 17, scope: !6583)
!6608 = !DILocation(line: 631, column: 30, scope: !4829)
!6609 = !DILocation(line: 631, column: 52, scope: !4829)
!6610 = !DILocation(line: 631, column: 59, scope: !4829)
!6611 = !DILocation(line: 631, column: 58, scope: !4829)
!6612 = !DILocation(line: 631, column: 49, scope: !4829)
!6613 = !DILocation(line: 631, column: 42, scope: !4829)
!6614 = !DILocation(line: 631, column: 70, scope: !6371)
!6615 = !DILocation(line: 631, column: 77, scope: !6371)
!6616 = !DILocation(line: 631, column: 76, scope: !6371)
!6617 = !DILocation(line: 631, column: 42, scope: !6371)
!6618 = !DILocation(line: 631, column: 42, scope: !4843)
!6619 = !DILocation(line: 631, column: 42, scope: !6377)
!6620 = !DILocation(line: 631, column: 40, scope: !6377)
!6621 = !DILocation(line: 631, column: 28, scope: !6377)
!6622 = !DILocation(line: 632, column: 48, scope: !4829)
!6623 = !DILocation(line: 632, column: 42, scope: !4829)
!6624 = !DILocation(line: 632, column: 63, scope: !4829)
!6625 = !DILocation(line: 632, column: 35, scope: !6371)
!6626 = !DILocation(line: 632, column: 35, scope: !4829)
!6627 = !DILocation(line: 632, column: 25, scope: !4843)
!6628 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !4842)
!6629 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !4842)
!6630 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !4842)
!6631 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !4842)
!6632 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !4842)
!6633 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !4842)
!6634 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !4842)
!6635 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !4842)
!6636 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !4842)
!6637 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !4842)
!6638 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !4842)
!6639 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !4842)
!6640 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !4842)
!6641 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !4842)
!6642 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !4842)
!6643 = !DILocation(line: 632, column: 23, scope: !4829)
!6644 = !DILocation(line: 633, column: 44, scope: !4829)
!6645 = !DILocation(line: 633, column: 54, scope: !4829)
!6646 = !DILocation(line: 633, column: 26, scope: !4829)
!6647 = !DILocation(line: 633, column: 25, scope: !4829)
!6648 = !DILocation(line: 633, column: 23, scope: !4829)
!6649 = !DILocation(line: 634, column: 17, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 634, column: 17)
!6651 = !DILocation(line: 634, column: 22, scope: !6650)
!6652 = !DILocation(line: 634, column: 17, scope: !4829)
!6653 = !DILocalVariable(name: "noise_sfdiff", scope: !6654, file: !957, line: 635, type: !991)
!6654 = distinct !DILexicalBlock(scope: !6650, file: !957, line: 634, column: 32)
!6655 = !DILocation(line: 635, column: 21, scope: !6654)
!6656 = !DILocation(line: 635, column: 36, scope: !6654)
!6657 = !DILocation(line: 635, column: 48, scope: !6654)
!6658 = !DILocation(line: 635, column: 46, scope: !6654)
!6659 = !DILocation(line: 635, column: 53, scope: !6654)
!6660 = !DILocation(line: 636, column: 21, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !957, line: 636, column: 21)
!6662 = !DILocation(line: 636, column: 34, scope: !6661)
!6663 = !DILocation(line: 636, column: 38, scope: !6661)
!6664 = !DILocation(line: 636, column: 41, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !6661, file: !957, discriminator: 1)
!6666 = !DILocation(line: 636, column: 54, scope: !6665)
!6667 = !DILocation(line: 636, column: 21, scope: !6665)
!6668 = !DILocation(line: 637, column: 38, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !957, line: 637, column: 25)
!6670 = distinct !DILexicalBlock(scope: !6661, file: !957, line: 636, column: 62)
!6671 = !DILocation(line: 637, column: 39, scope: !6669)
!6672 = !DILocation(line: 637, column: 43, scope: !6669)
!6673 = !DILocation(line: 637, column: 42, scope: !6669)
!6674 = !DILocation(line: 637, column: 26, scope: !6669)
!6675 = !DILocation(line: 637, column: 31, scope: !6669)
!6676 = !DILocation(line: 637, column: 25, scope: !6670)
!6677 = !DILocation(line: 638, column: 47, scope: !6669)
!6678 = !DILocation(line: 638, column: 48, scope: !6669)
!6679 = !DILocation(line: 638, column: 52, scope: !6669)
!6680 = !DILocation(line: 638, column: 51, scope: !6669)
!6681 = !DILocation(line: 638, column: 35, scope: !6669)
!6682 = !DILocation(line: 638, column: 40, scope: !6669)
!6683 = !DILocation(line: 638, column: 33, scope: !6669)
!6684 = !DILocation(line: 638, column: 25, scope: !6669)
!6685 = !DILocation(line: 639, column: 21, scope: !6670)
!6686 = !DILocation(line: 641, column: 13, scope: !6654)
!6687 = !DILocation(line: 642, column: 21, scope: !4828)
!6688 = !DILocation(line: 642, column: 18, scope: !4828)
!6689 = !DILocation(line: 642, column: 26, scope: !6690)
!6690 = !DILexicalBlockFile(scope: !4827, file: !957, discriminator: 1)
!6691 = !DILocation(line: 642, column: 50, scope: !6690)
!6692 = !DILocation(line: 642, column: 31, scope: !6690)
!6693 = !DILocation(line: 642, column: 36, scope: !6690)
!6694 = !DILocation(line: 642, column: 40, scope: !6690)
!6695 = !DILocation(line: 642, column: 29, scope: !6690)
!6696 = !DILocation(line: 642, column: 13, scope: !6690)
!6697 = !DILocalVariable(name: "band_energy", scope: !4826, file: !957, line: 643, type: !954)
!6698 = !DILocation(line: 643, column: 23, scope: !4826)
!6699 = !DILocalVariable(name: "scale", scope: !4826, file: !957, line: 643, type: !954)
!6700 = !DILocation(line: 643, column: 36, scope: !4826)
!6701 = !DILocalVariable(name: "pns_senergy", scope: !4826, file: !957, line: 643, type: !954)
!6702 = !DILocation(line: 643, column: 43, scope: !4826)
!6703 = !DILocalVariable(name: "start_c", scope: !4826, file: !957, line: 644, type: !1043)
!6704 = !DILocation(line: 644, column: 27, scope: !4826)
!6705 = !DILocation(line: 644, column: 38, scope: !4826)
!6706 = !DILocation(line: 644, column: 40, scope: !4826)
!6707 = !DILocation(line: 644, column: 39, scope: !4826)
!6708 = !DILocation(line: 644, column: 43, scope: !4826)
!6709 = !DILocation(line: 644, column: 68, scope: !4826)
!6710 = !DILocation(line: 644, column: 48, scope: !4826)
!6711 = !DILocation(line: 644, column: 53, scope: !4826)
!6712 = !DILocation(line: 644, column: 57, scope: !4826)
!6713 = !DILocation(line: 644, column: 47, scope: !4826)
!6714 = !DILocation(line: 645, column: 62, scope: !4826)
!6715 = !DILocation(line: 645, column: 64, scope: !4826)
!6716 = !DILocation(line: 645, column: 63, scope: !4826)
!6717 = !DILocation(line: 645, column: 67, scope: !4826)
!6718 = !DILocation(line: 645, column: 71, scope: !4826)
!6719 = !DILocation(line: 645, column: 70, scope: !4826)
!6720 = !DILocation(line: 645, column: 25, scope: !4826)
!6721 = !DILocation(line: 645, column: 35, scope: !4826)
!6722 = !DILocation(line: 645, column: 38, scope: !4826)
!6723 = !DILocation(line: 645, column: 28, scope: !4826)
!6724 = !DILocation(line: 645, column: 32, scope: !4826)
!6725 = !DILocation(line: 645, column: 51, scope: !4826)
!6726 = !DILocation(line: 645, column: 22, scope: !4826)
!6727 = !DILocation(line: 646, column: 24, scope: !4825)
!6728 = !DILocation(line: 646, column: 22, scope: !4825)
!6729 = !DILocation(line: 646, column: 29, scope: !6730)
!6730 = !DILexicalBlockFile(scope: !4824, file: !957, discriminator: 1)
!6731 = !DILocation(line: 646, column: 52, scope: !6730)
!6732 = !DILocation(line: 646, column: 33, scope: !6730)
!6733 = !DILocation(line: 646, column: 38, scope: !6730)
!6734 = !DILocation(line: 646, column: 42, scope: !6730)
!6735 = !DILocation(line: 646, column: 31, scope: !6730)
!6736 = !DILocation(line: 646, column: 17, scope: !6730)
!6737 = !DILocation(line: 647, column: 50, scope: !4823)
!6738 = !DILocation(line: 647, column: 53, scope: !4823)
!6739 = !DILocation(line: 647, column: 39, scope: !4823)
!6740 = !DILocation(line: 264, column: 38, scope: !4817, inlinedAt: !4822)
!6741 = !DILocation(line: 264, column: 40, scope: !4817, inlinedAt: !4822)
!6742 = !DILocation(line: 264, column: 53, scope: !4817, inlinedAt: !4822)
!6743 = !DILocation(line: 264, column: 64, scope: !4817, inlinedAt: !4822)
!6744 = !DILocation(line: 265, column: 14, scope: !4817, inlinedAt: !4822)
!6745 = !DILocation(line: 647, column: 21, scope: !4823)
!6746 = !DILocation(line: 647, column: 24, scope: !4823)
!6747 = !DILocation(line: 647, column: 37, scope: !4823)
!6748 = !DILocation(line: 648, column: 30, scope: !4823)
!6749 = !DILocation(line: 648, column: 33, scope: !4823)
!6750 = !DILocation(line: 648, column: 25, scope: !4823)
!6751 = !DILocation(line: 648, column: 21, scope: !4823)
!6752 = !DILocation(line: 648, column: 28, scope: !4823)
!6753 = !DILocation(line: 649, column: 17, scope: !4823)
!6754 = !DILocation(line: 646, column: 57, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !4824, file: !957, discriminator: 2)
!6756 = !DILocation(line: 646, column: 17, scope: !6755)
!6757 = distinct !{!6757, !6758}
!6758 = !DILocation(line: 646, column: 17, scope: !4826)
!6759 = !DILocation(line: 650, column: 31, scope: !4826)
!6760 = !DILocation(line: 650, column: 34, scope: !4826)
!6761 = !DILocation(line: 650, column: 40, scope: !4826)
!6762 = !DILocation(line: 650, column: 60, scope: !4826)
!6763 = !DILocation(line: 650, column: 65, scope: !4826)
!6764 = !DILocation(line: 650, column: 89, scope: !4826)
!6765 = !DILocation(line: 650, column: 70, scope: !4826)
!6766 = !DILocation(line: 650, column: 75, scope: !4826)
!6767 = !DILocation(line: 650, column: 79, scope: !4826)
!6768 = !DILocation(line: 650, column: 29, scope: !4826)
!6769 = !DILocation(line: 651, column: 25, scope: !4826)
!6770 = !DILocation(line: 651, column: 41, scope: !4826)
!6771 = !DILocation(line: 651, column: 35, scope: !4826)
!6772 = !DILocation(line: 651, column: 34, scope: !4826)
!6773 = !DILocation(line: 651, column: 23, scope: !4826)
!6774 = !DILocation(line: 652, column: 17, scope: !4826)
!6775 = !DILocation(line: 652, column: 20, scope: !4826)
!6776 = !DILocation(line: 652, column: 26, scope: !4826)
!6777 = !DILocation(line: 652, column: 45, scope: !4826)
!6778 = !DILocation(line: 652, column: 50, scope: !4826)
!6779 = !DILocation(line: 652, column: 55, scope: !4826)
!6780 = !DILocation(line: 652, column: 81, scope: !4826)
!6781 = !DILocation(line: 652, column: 62, scope: !4826)
!6782 = !DILocation(line: 652, column: 67, scope: !4826)
!6783 = !DILocation(line: 652, column: 71, scope: !4826)
!6784 = !DILocation(line: 653, column: 31, scope: !4826)
!6785 = !DILocation(line: 653, column: 34, scope: !4826)
!6786 = !DILocation(line: 653, column: 40, scope: !4826)
!6787 = !DILocation(line: 653, column: 60, scope: !4826)
!6788 = !DILocation(line: 653, column: 65, scope: !4826)
!6789 = !DILocation(line: 653, column: 89, scope: !4826)
!6790 = !DILocation(line: 653, column: 70, scope: !4826)
!6791 = !DILocation(line: 653, column: 75, scope: !4826)
!6792 = !DILocation(line: 653, column: 79, scope: !4826)
!6793 = !DILocation(line: 653, column: 29, scope: !4826)
!6794 = !DILocation(line: 654, column: 31, scope: !4826)
!6795 = !DILocation(line: 654, column: 28, scope: !4826)
!6796 = !DILocation(line: 655, column: 17, scope: !4826)
!6797 = !DILocation(line: 655, column: 20, scope: !4826)
!6798 = !DILocation(line: 655, column: 30, scope: !4826)
!6799 = !DILocation(line: 655, column: 50, scope: !4826)
!6800 = !DILocation(line: 655, column: 38, scope: !4826)
!6801 = !DILocation(line: 655, column: 43, scope: !4826)
!6802 = !DILocation(line: 655, column: 79, scope: !4826)
!6803 = !DILocation(line: 655, column: 60, scope: !4826)
!6804 = !DILocation(line: 655, column: 65, scope: !4826)
!6805 = !DILocation(line: 655, column: 69, scope: !4826)
!6806 = !DILocation(line: 656, column: 17, scope: !4826)
!6807 = !DILocation(line: 656, column: 20, scope: !4826)
!6808 = !DILocation(line: 656, column: 30, scope: !4826)
!6809 = !DILocation(line: 656, column: 37, scope: !4826)
!6810 = !DILocation(line: 656, column: 61, scope: !4826)
!6811 = !DILocation(line: 656, column: 42, scope: !4826)
!6812 = !DILocation(line: 656, column: 47, scope: !4826)
!6813 = !DILocation(line: 656, column: 51, scope: !4826)
!6814 = !DILocation(line: 657, column: 45, scope: !4826)
!6815 = !DILocation(line: 657, column: 61, scope: !4826)
!6816 = !DILocation(line: 657, column: 49, scope: !4826)
!6817 = !DILocation(line: 657, column: 54, scope: !4826)
!6818 = !DILocation(line: 658, column: 45, scope: !4826)
!6819 = !DILocation(line: 659, column: 64, scope: !4826)
!6820 = !DILocation(line: 659, column: 45, scope: !4826)
!6821 = !DILocation(line: 659, column: 50, scope: !4826)
!6822 = !DILocation(line: 659, column: 54, scope: !4826)
!6823 = !DILocation(line: 660, column: 58, scope: !4826)
!6824 = !DILocation(line: 660, column: 60, scope: !4826)
!6825 = !DILocation(line: 660, column: 59, scope: !4826)
!6826 = !DILocation(line: 660, column: 63, scope: !4826)
!6827 = !DILocation(line: 660, column: 67, scope: !4826)
!6828 = !DILocation(line: 660, column: 66, scope: !4826)
!6829 = !DILocation(line: 660, column: 45, scope: !4826)
!6830 = !DILocation(line: 660, column: 50, scope: !4826)
!6831 = !DILocation(line: 661, column: 60, scope: !4826)
!6832 = !DILocation(line: 661, column: 62, scope: !4826)
!6833 = !DILocation(line: 661, column: 61, scope: !4826)
!6834 = !DILocation(line: 661, column: 65, scope: !4826)
!6835 = !DILocation(line: 661, column: 69, scope: !4826)
!6836 = !DILocation(line: 661, column: 68, scope: !4826)
!6837 = !DILocation(line: 661, column: 45, scope: !4826)
!6838 = !DILocation(line: 661, column: 50, scope: !4826)
!6839 = !DILocation(line: 662, column: 45, scope: !4826)
!6840 = !DILocation(line: 662, column: 52, scope: !4826)
!6841 = !DILocation(line: 662, column: 58, scope: !4826)
!6842 = !DILocation(line: 662, column: 51, scope: !4826)
!6843 = !DILocation(line: 657, column: 26, scope: !4826)
!6844 = !DILocation(line: 657, column: 23, scope: !4826)
!6845 = !DILocation(line: 664, column: 26, scope: !4826)
!6846 = !DILocation(line: 664, column: 32, scope: !4826)
!6847 = !DILocation(line: 664, column: 40, scope: !4826)
!6848 = !DILocation(line: 664, column: 46, scope: !4826)
!6849 = !DILocation(line: 664, column: 53, scope: !4826)
!6850 = !DILocation(line: 664, column: 59, scope: !4826)
!6851 = !DILocation(line: 664, column: 52, scope: !4826)
!6852 = !DILocation(line: 664, column: 38, scope: !4826)
!6853 = !DILocation(line: 664, column: 67, scope: !4826)
!6854 = !DILocation(line: 664, column: 66, scope: !4826)
!6855 = !DILocation(line: 664, column: 74, scope: !4826)
!6856 = !DILocation(line: 664, column: 73, scope: !4826)
!6857 = !DILocation(line: 664, column: 86, scope: !4826)
!6858 = !DILocation(line: 664, column: 92, scope: !4826)
!6859 = !DILocation(line: 664, column: 85, scope: !4826)
!6860 = !DILocation(line: 664, column: 23, scope: !4826)
!6861 = !DILocation(line: 665, column: 13, scope: !4826)
!6862 = !DILocation(line: 642, column: 56, scope: !6863)
!6863 = !DILexicalBlockFile(scope: !4827, file: !957, discriminator: 2)
!6864 = !DILocation(line: 642, column: 13, scope: !6863)
!6865 = distinct !{!6865, !6866}
!6866 = !DILocation(line: 642, column: 13, scope: !4829)
!6867 = !DILocation(line: 666, column: 17, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 666, column: 17)
!6869 = !DILocation(line: 666, column: 19, scope: !6868)
!6870 = !DILocation(line: 666, column: 37, scope: !6871)
!6871 = !DILexicalBlockFile(scope: !6868, file: !957, discriminator: 1)
!6872 = !DILocation(line: 666, column: 38, scope: !6871)
!6873 = !DILocation(line: 666, column: 42, scope: !6871)
!6874 = !DILocation(line: 666, column: 41, scope: !6871)
!6875 = !DILocation(line: 666, column: 43, scope: !6871)
!6876 = !DILocation(line: 666, column: 22, scope: !6871)
!6877 = !DILocation(line: 666, column: 27, scope: !6871)
!6878 = !DILocation(line: 666, column: 47, scope: !6871)
!6879 = !DILocation(line: 666, column: 17, scope: !6871)
!6880 = !DILocation(line: 667, column: 23, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6868, file: !957, line: 666, column: 60)
!6882 = !DILocation(line: 668, column: 13, scope: !6881)
!6883 = !DILocation(line: 669, column: 23, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6868, file: !957, line: 668, column: 20)
!6885 = !DILocation(line: 671, column: 28, scope: !4829)
!6886 = !DILocation(line: 671, column: 43, scope: !4829)
!6887 = !DILocation(line: 671, column: 42, scope: !4829)
!6888 = !DILocation(line: 671, column: 26, scope: !4829)
!6889 = !DILocation(line: 672, column: 37, scope: !4829)
!6890 = !DILocation(line: 672, column: 50, scope: !4829)
!6891 = !DILocation(line: 672, column: 49, scope: !4829)
!6892 = !DILocation(line: 672, column: 27, scope: !4829)
!6893 = !DILocation(line: 672, column: 28, scope: !4829)
!6894 = !DILocation(line: 672, column: 32, scope: !4829)
!6895 = !DILocation(line: 672, column: 31, scope: !4829)
!6896 = !DILocation(line: 672, column: 13, scope: !4829)
!6897 = !DILocation(line: 672, column: 18, scope: !4829)
!6898 = !DILocation(line: 672, column: 35, scope: !4829)
!6899 = !DILocation(line: 673, column: 29, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !4829, file: !957, line: 673, column: 17)
!6901 = !DILocation(line: 673, column: 30, scope: !6900)
!6902 = !DILocation(line: 673, column: 34, scope: !6900)
!6903 = !DILocation(line: 673, column: 33, scope: !6900)
!6904 = !DILocation(line: 673, column: 17, scope: !6900)
!6905 = !DILocation(line: 673, column: 22, scope: !6900)
!6906 = !DILocation(line: 673, column: 37, scope: !6900)
!6907 = !DILocation(line: 673, column: 55, scope: !6908)
!6908 = !DILexicalBlockFile(scope: !6900, file: !957, discriminator: 1)
!6909 = !DILocation(line: 673, column: 56, scope: !6908)
!6910 = !DILocation(line: 673, column: 60, scope: !6908)
!6911 = !DILocation(line: 673, column: 59, scope: !6908)
!6912 = !DILocation(line: 673, column: 41, scope: !6908)
!6913 = !DILocation(line: 673, column: 46, scope: !6908)
!6914 = !DILocation(line: 673, column: 63, scope: !6908)
!6915 = !DILocation(line: 673, column: 67, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6900, file: !957, discriminator: 2)
!6917 = !DILocation(line: 673, column: 80, scope: !6916)
!6918 = !DILocation(line: 673, column: 88, scope: !6916)
!6919 = !DILocation(line: 673, column: 91, scope: !6920)
!6920 = !DILexicalBlockFile(scope: !6900, file: !957, discriminator: 3)
!6921 = !DILocation(line: 673, column: 104, scope: !6920)
!6922 = !DILocation(line: 673, column: 112, scope: !6920)
!6923 = !DILocation(line: 673, column: 115, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6900, file: !957, discriminator: 4)
!6925 = !DILocation(line: 673, column: 123, scope: !6924)
!6926 = !DILocation(line: 673, column: 121, scope: !6924)
!6927 = !DILocation(line: 673, column: 17, scope: !6924)
!6928 = !DILocation(line: 674, column: 32, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6900, file: !957, line: 673, column: 131)
!6930 = !DILocation(line: 674, column: 33, scope: !6929)
!6931 = !DILocation(line: 674, column: 37, scope: !6929)
!6932 = !DILocation(line: 674, column: 36, scope: !6929)
!6933 = !DILocation(line: 674, column: 17, scope: !6929)
!6934 = !DILocation(line: 674, column: 22, scope: !6929)
!6935 = !DILocation(line: 674, column: 40, scope: !6929)
!6936 = !DILocation(line: 675, column: 29, scope: !6929)
!6937 = !DILocation(line: 675, column: 30, scope: !6929)
!6938 = !DILocation(line: 675, column: 34, scope: !6929)
!6939 = !DILocation(line: 675, column: 33, scope: !6929)
!6940 = !DILocation(line: 675, column: 17, scope: !6929)
!6941 = !DILocation(line: 675, column: 22, scope: !6929)
!6942 = !DILocation(line: 675, column: 37, scope: !6929)
!6943 = !DILocation(line: 676, column: 24, scope: !6929)
!6944 = !DILocation(line: 676, column: 22, scope: !6929)
!6945 = !DILocation(line: 677, column: 13, scope: !6929)
!6946 = !DILocation(line: 678, column: 34, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !957, line: 678, column: 21)
!6948 = distinct !DILexicalBlock(scope: !6900, file: !957, line: 677, column: 20)
!6949 = !DILocation(line: 678, column: 35, scope: !6947)
!6950 = !DILocation(line: 678, column: 39, scope: !6947)
!6951 = !DILocation(line: 678, column: 38, scope: !6947)
!6952 = !DILocation(line: 678, column: 22, scope: !6947)
!6953 = !DILocation(line: 678, column: 27, scope: !6947)
!6954 = !DILocation(line: 678, column: 21, scope: !6948)
!6955 = !DILocation(line: 679, column: 43, scope: !6947)
!6956 = !DILocation(line: 679, column: 44, scope: !6947)
!6957 = !DILocation(line: 679, column: 48, scope: !6947)
!6958 = !DILocation(line: 679, column: 47, scope: !6947)
!6959 = !DILocation(line: 679, column: 31, scope: !6947)
!6960 = !DILocation(line: 679, column: 36, scope: !6947)
!6961 = !DILocation(line: 679, column: 29, scope: !6947)
!6962 = !DILocation(line: 679, column: 21, scope: !6947)
!6963 = !DILocation(line: 681, column: 9, scope: !4829)
!6964 = !DILocation(line: 584, column: 44, scope: !6965)
!6965 = !DILexicalBlockFile(scope: !4830, file: !957, discriminator: 2)
!6966 = !DILocation(line: 584, column: 9, scope: !6965)
!6967 = distinct !{!6967, !6968}
!6968 = !DILocation(line: 584, column: 9, scope: !4832)
!6969 = !DILocation(line: 682, column: 5, scope: !4832)
!6970 = !DILocation(line: 582, column: 67, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !4833, file: !957, discriminator: 2)
!6972 = !DILocation(line: 582, column: 48, scope: !6971)
!6973 = !DILocation(line: 582, column: 53, scope: !6971)
!6974 = !DILocation(line: 582, column: 57, scope: !6971)
!6975 = !DILocation(line: 582, column: 45, scope: !6971)
!6976 = !DILocation(line: 582, column: 5, scope: !6971)
!6977 = distinct !{!6977, !6978}
!6978 = !DILocation(line: 582, column: 5, scope: !4813)
!6979 = !DILocation(line: 683, column: 1, scope: !4813)
!6980 = distinct !DISubprogram(name: "mark_pns", scope: !957, file: !957, line: 685, type: !4814, isLocal: true, isDefinition: true, scopeLine: 686, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!6981 = !DILocalVariable(name: "s", arg: 1, scope: !6980, file: !957, line: 685, type: !2764)
!6982 = !DILocation(line: 685, column: 37, scope: !6980)
!6983 = !DILocalVariable(name: "avctx", arg: 2, scope: !6980, file: !957, line: 685, type: !968)
!6984 = !DILocation(line: 685, column: 56, scope: !6980)
!6985 = !DILocalVariable(name: "sce", arg: 3, scope: !6980, file: !957, line: 685, type: !2458)
!6986 = !DILocation(line: 685, column: 85, scope: !6980)
!6987 = !DILocalVariable(name: "band", scope: !6980, file: !957, line: 687, type: !3232)
!6988 = !DILocation(line: 687, column: 16, scope: !6980)
!6989 = !DILocalVariable(name: "w", scope: !6980, file: !957, line: 688, type: !991)
!6990 = !DILocation(line: 688, column: 9, scope: !6980)
!6991 = !DILocalVariable(name: "g", scope: !6980, file: !957, line: 688, type: !991)
!6992 = !DILocation(line: 688, column: 12, scope: !6980)
!6993 = !DILocalVariable(name: "w2", scope: !6980, file: !957, line: 688, type: !991)
!6994 = !DILocation(line: 688, column: 15, scope: !6980)
!6995 = !DILocalVariable(name: "wlen", scope: !6980, file: !957, line: 689, type: !991)
!6996 = !DILocation(line: 689, column: 9, scope: !6980)
!6997 = !DILocation(line: 689, column: 23, scope: !6980)
!6998 = !DILocation(line: 689, column: 28, scope: !6980)
!6999 = !DILocation(line: 689, column: 32, scope: !6980)
!7000 = !DILocation(line: 689, column: 21, scope: !6980)
!7001 = !DILocalVariable(name: "bandwidth", scope: !6980, file: !957, line: 690, type: !991)
!7002 = !DILocation(line: 690, column: 9, scope: !6980)
!7003 = !DILocalVariable(name: "cutoff", scope: !6980, file: !957, line: 690, type: !991)
!7004 = !DILocation(line: 690, column: 20, scope: !6980)
!7005 = !DILocalVariable(name: "lambda", scope: !6980, file: !957, line: 691, type: !1781)
!7006 = !DILocation(line: 691, column: 17, scope: !6980)
!7007 = !DILocation(line: 691, column: 26, scope: !6980)
!7008 = !DILocation(line: 691, column: 29, scope: !6980)
!7009 = !DILocalVariable(name: "freq_mult", scope: !6980, file: !957, line: 692, type: !1781)
!7010 = !DILocation(line: 692, column: 17, scope: !6980)
!7011 = !DILocation(line: 692, column: 29, scope: !6980)
!7012 = !DILocation(line: 692, column: 36, scope: !6980)
!7013 = !DILocation(line: 692, column: 47, scope: !6980)
!7014 = !DILocation(line: 692, column: 53, scope: !6980)
!7015 = !DILocation(line: 692, column: 52, scope: !6980)
!7016 = !DILocalVariable(name: "spread_threshold", scope: !6980, file: !957, line: 693, type: !1781)
!7017 = !DILocation(line: 693, column: 17, scope: !6980)
!7018 = !DILocation(line: 693, column: 64, scope: !6980)
!7019 = !DILocation(line: 693, column: 70, scope: !6980)
!7020 = !DILocation(line: 693, column: 61, scope: !6980)
!7021 = !DILocation(line: 693, column: 54, scope: !6980)
!7022 = !DILocation(line: 693, column: 54, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 1)
!7024 = !DILocation(line: 693, column: 90, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 2)
!7026 = !DILocation(line: 693, column: 96, scope: !7025)
!7027 = !DILocation(line: 693, column: 54, scope: !7025)
!7028 = !DILocation(line: 693, column: 54, scope: !7029)
!7029 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 3)
!7030 = !DILocation(line: 693, column: 52, scope: !7029)
!7031 = !DILocation(line: 693, column: 45, scope: !7029)
!7032 = !DILocation(line: 693, column: 37, scope: !7029)
!7033 = !DILocation(line: 693, column: 125, scope: !7034)
!7034 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 4)
!7035 = !DILocation(line: 693, column: 131, scope: !7034)
!7036 = !DILocation(line: 693, column: 122, scope: !7034)
!7037 = !DILocation(line: 693, column: 115, scope: !7034)
!7038 = !DILocation(line: 693, column: 115, scope: !7039)
!7039 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 5)
!7040 = !DILocation(line: 693, column: 151, scope: !7041)
!7041 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 6)
!7042 = !DILocation(line: 693, column: 157, scope: !7041)
!7043 = !DILocation(line: 693, column: 115, scope: !7041)
!7044 = !DILocation(line: 693, column: 115, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 7)
!7046 = !DILocation(line: 693, column: 113, scope: !7045)
!7047 = !DILocation(line: 693, column: 37, scope: !7045)
!7048 = !DILocation(line: 693, column: 37, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 8)
!7050 = !DILocation(line: 693, column: 37, scope: !7051)
!7051 = !DILexicalBlockFile(scope: !6980, file: !957, discriminator: 9)
!7052 = !DILocation(line: 693, column: 17, scope: !7051)
!7053 = !DILocalVariable(name: "pns_transient_energy_r", scope: !6980, file: !957, line: 694, type: !1781)
!7054 = !DILocation(line: 694, column: 17, scope: !6980)
!7055 = !DILocation(line: 694, column: 53, scope: !6980)
!7056 = !DILocation(line: 694, column: 60, scope: !6980)
!7057 = !DILocation(line: 694, column: 50, scope: !6980)
!7058 = !DILocation(line: 694, column: 43, scope: !6980)
!7059 = !DILocation(line: 694, column: 72, scope: !7023)
!7060 = !DILocation(line: 694, column: 79, scope: !7023)
!7061 = !DILocation(line: 694, column: 43, scope: !7023)
!7062 = !DILocation(line: 694, column: 43, scope: !7025)
!7063 = !DILocation(line: 694, column: 43, scope: !7029)
!7064 = !DILocation(line: 694, column: 17, scope: !7029)
!7065 = !DILocalVariable(name: "refbits", scope: !6980, file: !957, line: 696, type: !991)
!7066 = !DILocation(line: 696, column: 9, scope: !6980)
!7067 = !DILocation(line: 696, column: 19, scope: !6980)
!7068 = !DILocation(line: 696, column: 26, scope: !6980)
!7069 = !DILocation(line: 696, column: 35, scope: !6980)
!7070 = !DILocation(line: 696, column: 46, scope: !6980)
!7071 = !DILocation(line: 696, column: 53, scope: !6980)
!7072 = !DILocation(line: 696, column: 44, scope: !6980)
!7073 = !DILocation(line: 697, column: 13, scope: !6980)
!7074 = !DILocation(line: 697, column: 20, scope: !6980)
!7075 = !DILocation(line: 697, column: 26, scope: !6980)
!7076 = !DILocation(line: 697, column: 12, scope: !6980)
!7077 = !DILocation(line: 697, column: 12, scope: !7023)
!7078 = !DILocation(line: 697, column: 47, scope: !7025)
!7079 = !DILocation(line: 697, column: 54, scope: !7025)
!7080 = !DILocation(line: 697, column: 12, scope: !7025)
!7081 = !DILocation(line: 697, column: 12, scope: !7029)
!7082 = !DILocation(line: 697, column: 11, scope: !7029)
!7083 = !DILocation(line: 697, column: 9, scope: !7029)
!7084 = !DILocation(line: 698, column: 12, scope: !6980)
!7085 = !DILocation(line: 698, column: 19, scope: !6980)
!7086 = !DILocation(line: 698, column: 11, scope: !6980)
!7087 = !DILocation(line: 698, column: 9, scope: !6980)
!7088 = !DILocation(line: 696, column: 19, scope: !7023)
!7089 = !DILocation(line: 696, column: 9, scope: !7023)
!7090 = !DILocalVariable(name: "rate_bandwidth_multiplier", scope: !6980, file: !957, line: 701, type: !954)
!7091 = !DILocation(line: 701, column: 11, scope: !6980)
!7092 = !DILocalVariable(name: "frame_bit_rate", scope: !6980, file: !957, line: 702, type: !991)
!7093 = !DILocation(line: 702, column: 9, scope: !6980)
!7094 = !DILocation(line: 702, column: 27, scope: !6980)
!7095 = !DILocation(line: 702, column: 34, scope: !6980)
!7096 = !DILocation(line: 702, column: 40, scope: !6980)
!7097 = !DILocation(line: 702, column: 26, scope: !6980)
!7098 = !DILocation(line: 703, column: 12, scope: !6980)
!7099 = !DILocation(line: 703, column: 22, scope: !6980)
!7100 = !DILocation(line: 703, column: 20, scope: !6980)
!7101 = !DILocation(line: 703, column: 50, scope: !6980)
!7102 = !DILocation(line: 703, column: 57, scope: !6980)
!7103 = !DILocation(line: 703, column: 48, scope: !6980)
!7104 = !DILocation(line: 703, column: 69, scope: !6980)
!7105 = !DILocation(line: 702, column: 26, scope: !7023)
!7106 = !DILocation(line: 704, column: 12, scope: !6980)
!7107 = !DILocation(line: 704, column: 19, scope: !6980)
!7108 = !DILocation(line: 704, column: 30, scope: !6980)
!7109 = !DILocation(line: 704, column: 37, scope: !6980)
!7110 = !DILocation(line: 704, column: 28, scope: !6980)
!7111 = !DILocation(line: 704, column: 11, scope: !6980)
!7112 = !DILocation(line: 702, column: 26, scope: !7025)
!7113 = !DILocation(line: 702, column: 26, scope: !7029)
!7114 = !DILocation(line: 702, column: 9, scope: !7029)
!7115 = !DILocation(line: 706, column: 20, scope: !6980)
!7116 = !DILocation(line: 708, column: 9, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !6980, file: !957, line: 708, column: 9)
!7118 = !DILocation(line: 708, column: 16, scope: !7117)
!7119 = !DILocation(line: 708, column: 23, scope: !7117)
!7120 = !DILocation(line: 708, column: 9, scope: !6980)
!7121 = !DILocation(line: 709, column: 21, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7117, file: !957, line: 708, column: 28)
!7123 = !DILocation(line: 709, column: 28, scope: !7122)
!7124 = !DILocation(line: 709, column: 19, scope: !7122)
!7125 = !DILocation(line: 710, column: 5, scope: !7122)
!7126 = !DILocation(line: 711, column: 33, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7117, file: !957, line: 710, column: 12)
!7128 = !DILocation(line: 711, column: 60, scope: !7129)
!7129 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 1)
!7130 = !DILocation(line: 711, column: 74, scope: !7129)
!7131 = !DILocation(line: 711, column: 76, scope: !7129)
!7132 = !DILocation(line: 711, column: 83, scope: !7129)
!7133 = !DILocation(line: 711, column: 97, scope: !7129)
!7134 = !DILocation(line: 711, column: 99, scope: !7129)
!7135 = !DILocation(line: 711, column: 102, scope: !7129)
!7136 = !DILocation(line: 711, column: 106, scope: !7129)
!7137 = !DILocation(line: 711, column: 80, scope: !7129)
!7138 = !DILocation(line: 711, column: 59, scope: !7129)
!7139 = !DILocation(line: 711, column: 117, scope: !7140)
!7140 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 2)
!7141 = !DILocation(line: 711, column: 131, scope: !7140)
!7142 = !DILocation(line: 711, column: 133, scope: !7140)
!7143 = !DILocation(line: 711, column: 59, scope: !7140)
!7144 = !DILocation(line: 711, column: 140, scope: !7145)
!7145 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 3)
!7146 = !DILocation(line: 711, column: 154, scope: !7145)
!7147 = !DILocation(line: 711, column: 156, scope: !7145)
!7148 = !DILocation(line: 711, column: 159, scope: !7145)
!7149 = !DILocation(line: 711, column: 163, scope: !7145)
!7150 = !DILocation(line: 711, column: 59, scope: !7145)
!7151 = !DILocation(line: 711, column: 59, scope: !7152)
!7152 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 4)
!7153 = !DILocation(line: 711, column: 183, scope: !7152)
!7154 = !DILocation(line: 711, column: 197, scope: !7152)
!7155 = !DILocation(line: 711, column: 199, scope: !7152)
!7156 = !DILocation(line: 711, column: 181, scope: !7152)
!7157 = !DILocation(line: 711, column: 173, scope: !7152)
!7158 = !DILocation(line: 711, column: 57, scope: !7152)
!7159 = !DILocation(line: 711, column: 213, scope: !7160)
!7160 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 5)
!7161 = !DILocation(line: 711, column: 227, scope: !7160)
!7162 = !DILocation(line: 711, column: 229, scope: !7160)
!7163 = !DILocation(line: 711, column: 211, scope: !7160)
!7164 = !DILocation(line: 711, column: 57, scope: !7160)
!7165 = !DILocation(line: 711, column: 238, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 6)
!7167 = !DILocation(line: 711, column: 252, scope: !7166)
!7168 = !DILocation(line: 711, column: 254, scope: !7166)
!7169 = !DILocation(line: 711, column: 261, scope: !7166)
!7170 = !DILocation(line: 711, column: 275, scope: !7166)
!7171 = !DILocation(line: 711, column: 277, scope: !7166)
!7172 = !DILocation(line: 711, column: 280, scope: !7166)
!7173 = !DILocation(line: 711, column: 284, scope: !7166)
!7174 = !DILocation(line: 711, column: 258, scope: !7166)
!7175 = !DILocation(line: 711, column: 237, scope: !7166)
!7176 = !DILocation(line: 711, column: 295, scope: !7177)
!7177 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 7)
!7178 = !DILocation(line: 711, column: 309, scope: !7177)
!7179 = !DILocation(line: 711, column: 311, scope: !7177)
!7180 = !DILocation(line: 711, column: 237, scope: !7177)
!7181 = !DILocation(line: 711, column: 318, scope: !7182)
!7182 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 8)
!7183 = !DILocation(line: 711, column: 332, scope: !7182)
!7184 = !DILocation(line: 711, column: 334, scope: !7182)
!7185 = !DILocation(line: 711, column: 337, scope: !7182)
!7186 = !DILocation(line: 711, column: 341, scope: !7182)
!7187 = !DILocation(line: 711, column: 237, scope: !7182)
!7188 = !DILocation(line: 711, column: 237, scope: !7189)
!7189 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 9)
!7190 = !DILocation(line: 711, column: 57, scope: !7189)
!7191 = !DILocation(line: 711, column: 57, scope: !7192)
!7192 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 10)
!7193 = !DILocation(line: 711, column: 364, scope: !7192)
!7194 = !DILocation(line: 711, column: 378, scope: !7192)
!7195 = !DILocation(line: 711, column: 380, scope: !7192)
!7196 = !DILocation(line: 711, column: 362, scope: !7192)
!7197 = !DILocation(line: 711, column: 353, scope: !7192)
!7198 = !DILocation(line: 711, column: 55, scope: !7192)
!7199 = !DILocation(line: 711, column: 396, scope: !7200)
!7200 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 11)
!7201 = !DILocation(line: 711, column: 410, scope: !7200)
!7202 = !DILocation(line: 711, column: 412, scope: !7200)
!7203 = !DILocation(line: 711, column: 394, scope: !7200)
!7204 = !DILocation(line: 711, column: 55, scope: !7200)
!7205 = !DILocation(line: 711, column: 424, scope: !7206)
!7206 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 12)
!7207 = !DILocation(line: 711, column: 438, scope: !7206)
!7208 = !DILocation(line: 711, column: 440, scope: !7206)
!7209 = !DILocation(line: 711, column: 447, scope: !7206)
!7210 = !DILocation(line: 711, column: 461, scope: !7206)
!7211 = !DILocation(line: 711, column: 463, scope: !7206)
!7212 = !DILocation(line: 711, column: 466, scope: !7206)
!7213 = !DILocation(line: 711, column: 470, scope: !7206)
!7214 = !DILocation(line: 711, column: 444, scope: !7206)
!7215 = !DILocation(line: 711, column: 423, scope: !7206)
!7216 = !DILocation(line: 711, column: 481, scope: !7217)
!7217 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 13)
!7218 = !DILocation(line: 711, column: 495, scope: !7217)
!7219 = !DILocation(line: 711, column: 497, scope: !7217)
!7220 = !DILocation(line: 711, column: 423, scope: !7217)
!7221 = !DILocation(line: 711, column: 504, scope: !7222)
!7222 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 14)
!7223 = !DILocation(line: 711, column: 518, scope: !7222)
!7224 = !DILocation(line: 711, column: 520, scope: !7222)
!7225 = !DILocation(line: 711, column: 523, scope: !7222)
!7226 = !DILocation(line: 711, column: 527, scope: !7222)
!7227 = !DILocation(line: 711, column: 423, scope: !7222)
!7228 = !DILocation(line: 711, column: 423, scope: !7229)
!7229 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 15)
!7230 = !DILocation(line: 711, column: 547, scope: !7229)
!7231 = !DILocation(line: 711, column: 561, scope: !7229)
!7232 = !DILocation(line: 711, column: 563, scope: !7229)
!7233 = !DILocation(line: 711, column: 545, scope: !7229)
!7234 = !DILocation(line: 711, column: 537, scope: !7229)
!7235 = !DILocation(line: 711, column: 421, scope: !7229)
!7236 = !DILocation(line: 711, column: 577, scope: !7237)
!7237 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 16)
!7238 = !DILocation(line: 711, column: 591, scope: !7237)
!7239 = !DILocation(line: 711, column: 593, scope: !7237)
!7240 = !DILocation(line: 711, column: 575, scope: !7237)
!7241 = !DILocation(line: 711, column: 421, scope: !7237)
!7242 = !DILocation(line: 711, column: 602, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 17)
!7244 = !DILocation(line: 711, column: 616, scope: !7243)
!7245 = !DILocation(line: 711, column: 618, scope: !7243)
!7246 = !DILocation(line: 711, column: 625, scope: !7243)
!7247 = !DILocation(line: 711, column: 639, scope: !7243)
!7248 = !DILocation(line: 711, column: 641, scope: !7243)
!7249 = !DILocation(line: 711, column: 644, scope: !7243)
!7250 = !DILocation(line: 711, column: 648, scope: !7243)
!7251 = !DILocation(line: 711, column: 622, scope: !7243)
!7252 = !DILocation(line: 711, column: 601, scope: !7243)
!7253 = !DILocation(line: 711, column: 659, scope: !7254)
!7254 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 18)
!7255 = !DILocation(line: 711, column: 673, scope: !7254)
!7256 = !DILocation(line: 711, column: 675, scope: !7254)
!7257 = !DILocation(line: 711, column: 601, scope: !7254)
!7258 = !DILocation(line: 711, column: 682, scope: !7259)
!7259 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 19)
!7260 = !DILocation(line: 711, column: 696, scope: !7259)
!7261 = !DILocation(line: 711, column: 698, scope: !7259)
!7262 = !DILocation(line: 711, column: 701, scope: !7259)
!7263 = !DILocation(line: 711, column: 705, scope: !7259)
!7264 = !DILocation(line: 711, column: 601, scope: !7259)
!7265 = !DILocation(line: 711, column: 601, scope: !7266)
!7266 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 20)
!7267 = !DILocation(line: 711, column: 421, scope: !7266)
!7268 = !DILocation(line: 711, column: 421, scope: !7269)
!7269 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 21)
!7270 = !DILocation(line: 711, column: 55, scope: !7269)
!7271 = !DILocation(line: 711, column: 55, scope: !7272)
!7272 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 22)
!7273 = !DILocation(line: 711, column: 719, scope: !7272)
!7274 = !DILocation(line: 711, column: 53, scope: !7272)
!7275 = !DILocation(line: 711, column: 53, scope: !7276)
!7276 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 23)
!7277 = !DILocation(line: 711, column: 748, scope: !7278)
!7278 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 24)
!7279 = !DILocation(line: 711, column: 762, scope: !7278)
!7280 = !DILocation(line: 711, column: 764, scope: !7278)
!7281 = !DILocation(line: 711, column: 771, scope: !7278)
!7282 = !DILocation(line: 711, column: 785, scope: !7278)
!7283 = !DILocation(line: 711, column: 787, scope: !7278)
!7284 = !DILocation(line: 711, column: 790, scope: !7278)
!7285 = !DILocation(line: 711, column: 794, scope: !7278)
!7286 = !DILocation(line: 711, column: 768, scope: !7278)
!7287 = !DILocation(line: 711, column: 747, scope: !7278)
!7288 = !DILocation(line: 711, column: 805, scope: !7289)
!7289 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 25)
!7290 = !DILocation(line: 711, column: 819, scope: !7289)
!7291 = !DILocation(line: 711, column: 821, scope: !7289)
!7292 = !DILocation(line: 711, column: 747, scope: !7289)
!7293 = !DILocation(line: 711, column: 828, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 26)
!7295 = !DILocation(line: 711, column: 842, scope: !7294)
!7296 = !DILocation(line: 711, column: 844, scope: !7294)
!7297 = !DILocation(line: 711, column: 847, scope: !7294)
!7298 = !DILocation(line: 711, column: 851, scope: !7294)
!7299 = !DILocation(line: 711, column: 747, scope: !7294)
!7300 = !DILocation(line: 711, column: 747, scope: !7301)
!7301 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 27)
!7302 = !DILocation(line: 711, column: 871, scope: !7301)
!7303 = !DILocation(line: 711, column: 885, scope: !7301)
!7304 = !DILocation(line: 711, column: 887, scope: !7301)
!7305 = !DILocation(line: 711, column: 869, scope: !7301)
!7306 = !DILocation(line: 711, column: 861, scope: !7301)
!7307 = !DILocation(line: 711, column: 745, scope: !7301)
!7308 = !DILocation(line: 711, column: 901, scope: !7309)
!7309 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 28)
!7310 = !DILocation(line: 711, column: 915, scope: !7309)
!7311 = !DILocation(line: 711, column: 917, scope: !7309)
!7312 = !DILocation(line: 711, column: 899, scope: !7309)
!7313 = !DILocation(line: 711, column: 745, scope: !7309)
!7314 = !DILocation(line: 711, column: 926, scope: !7315)
!7315 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 29)
!7316 = !DILocation(line: 711, column: 940, scope: !7315)
!7317 = !DILocation(line: 711, column: 942, scope: !7315)
!7318 = !DILocation(line: 711, column: 949, scope: !7315)
!7319 = !DILocation(line: 711, column: 963, scope: !7315)
!7320 = !DILocation(line: 711, column: 965, scope: !7315)
!7321 = !DILocation(line: 711, column: 968, scope: !7315)
!7322 = !DILocation(line: 711, column: 972, scope: !7315)
!7323 = !DILocation(line: 711, column: 946, scope: !7315)
!7324 = !DILocation(line: 711, column: 925, scope: !7315)
!7325 = !DILocation(line: 711, column: 983, scope: !7326)
!7326 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 30)
!7327 = !DILocation(line: 711, column: 997, scope: !7326)
!7328 = !DILocation(line: 711, column: 999, scope: !7326)
!7329 = !DILocation(line: 711, column: 925, scope: !7326)
!7330 = !DILocation(line: 711, column: 1006, scope: !7331)
!7331 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 31)
!7332 = !DILocation(line: 711, column: 1020, scope: !7331)
!7333 = !DILocation(line: 711, column: 1022, scope: !7331)
!7334 = !DILocation(line: 711, column: 1025, scope: !7331)
!7335 = !DILocation(line: 711, column: 1029, scope: !7331)
!7336 = !DILocation(line: 711, column: 925, scope: !7331)
!7337 = !DILocation(line: 711, column: 925, scope: !7338)
!7338 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 32)
!7339 = !DILocation(line: 711, column: 745, scope: !7338)
!7340 = !DILocation(line: 711, column: 745, scope: !7341)
!7341 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 33)
!7342 = !DILocation(line: 711, column: 1052, scope: !7341)
!7343 = !DILocation(line: 711, column: 1066, scope: !7341)
!7344 = !DILocation(line: 711, column: 1068, scope: !7341)
!7345 = !DILocation(line: 711, column: 1050, scope: !7341)
!7346 = !DILocation(line: 711, column: 1041, scope: !7341)
!7347 = !DILocation(line: 711, column: 743, scope: !7341)
!7348 = !DILocation(line: 711, column: 1084, scope: !7349)
!7349 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 34)
!7350 = !DILocation(line: 711, column: 1098, scope: !7349)
!7351 = !DILocation(line: 711, column: 1100, scope: !7349)
!7352 = !DILocation(line: 711, column: 1082, scope: !7349)
!7353 = !DILocation(line: 711, column: 743, scope: !7349)
!7354 = !DILocation(line: 711, column: 1112, scope: !7355)
!7355 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 35)
!7356 = !DILocation(line: 711, column: 1126, scope: !7355)
!7357 = !DILocation(line: 711, column: 1128, scope: !7355)
!7358 = !DILocation(line: 711, column: 1135, scope: !7355)
!7359 = !DILocation(line: 711, column: 1149, scope: !7355)
!7360 = !DILocation(line: 711, column: 1151, scope: !7355)
!7361 = !DILocation(line: 711, column: 1154, scope: !7355)
!7362 = !DILocation(line: 711, column: 1158, scope: !7355)
!7363 = !DILocation(line: 711, column: 1132, scope: !7355)
!7364 = !DILocation(line: 711, column: 1111, scope: !7355)
!7365 = !DILocation(line: 711, column: 1169, scope: !7366)
!7366 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 36)
!7367 = !DILocation(line: 711, column: 1183, scope: !7366)
!7368 = !DILocation(line: 711, column: 1185, scope: !7366)
!7369 = !DILocation(line: 711, column: 1111, scope: !7366)
!7370 = !DILocation(line: 711, column: 1192, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 37)
!7372 = !DILocation(line: 711, column: 1206, scope: !7371)
!7373 = !DILocation(line: 711, column: 1208, scope: !7371)
!7374 = !DILocation(line: 711, column: 1211, scope: !7371)
!7375 = !DILocation(line: 711, column: 1215, scope: !7371)
!7376 = !DILocation(line: 711, column: 1111, scope: !7371)
!7377 = !DILocation(line: 711, column: 1111, scope: !7378)
!7378 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 38)
!7379 = !DILocation(line: 711, column: 1235, scope: !7378)
!7380 = !DILocation(line: 711, column: 1249, scope: !7378)
!7381 = !DILocation(line: 711, column: 1251, scope: !7378)
!7382 = !DILocation(line: 711, column: 1233, scope: !7378)
!7383 = !DILocation(line: 711, column: 1225, scope: !7378)
!7384 = !DILocation(line: 711, column: 1109, scope: !7378)
!7385 = !DILocation(line: 711, column: 1265, scope: !7386)
!7386 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 39)
!7387 = !DILocation(line: 711, column: 1279, scope: !7386)
!7388 = !DILocation(line: 711, column: 1281, scope: !7386)
!7389 = !DILocation(line: 711, column: 1263, scope: !7386)
!7390 = !DILocation(line: 711, column: 1109, scope: !7386)
!7391 = !DILocation(line: 711, column: 1290, scope: !7392)
!7392 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 40)
!7393 = !DILocation(line: 711, column: 1304, scope: !7392)
!7394 = !DILocation(line: 711, column: 1306, scope: !7392)
!7395 = !DILocation(line: 711, column: 1313, scope: !7392)
!7396 = !DILocation(line: 711, column: 1327, scope: !7392)
!7397 = !DILocation(line: 711, column: 1329, scope: !7392)
!7398 = !DILocation(line: 711, column: 1332, scope: !7392)
!7399 = !DILocation(line: 711, column: 1336, scope: !7392)
!7400 = !DILocation(line: 711, column: 1310, scope: !7392)
!7401 = !DILocation(line: 711, column: 1289, scope: !7392)
!7402 = !DILocation(line: 711, column: 1347, scope: !7403)
!7403 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 41)
!7404 = !DILocation(line: 711, column: 1361, scope: !7403)
!7405 = !DILocation(line: 711, column: 1363, scope: !7403)
!7406 = !DILocation(line: 711, column: 1289, scope: !7403)
!7407 = !DILocation(line: 711, column: 1370, scope: !7408)
!7408 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 42)
!7409 = !DILocation(line: 711, column: 1384, scope: !7408)
!7410 = !DILocation(line: 711, column: 1386, scope: !7408)
!7411 = !DILocation(line: 711, column: 1389, scope: !7408)
!7412 = !DILocation(line: 711, column: 1393, scope: !7408)
!7413 = !DILocation(line: 711, column: 1289, scope: !7408)
!7414 = !DILocation(line: 711, column: 1289, scope: !7415)
!7415 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 43)
!7416 = !DILocation(line: 711, column: 1109, scope: !7415)
!7417 = !DILocation(line: 711, column: 1109, scope: !7418)
!7418 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 44)
!7419 = !DILocation(line: 711, column: 743, scope: !7418)
!7420 = !DILocation(line: 711, column: 743, scope: !7421)
!7421 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 45)
!7422 = !DILocation(line: 711, column: 53, scope: !7421)
!7423 = !DILocation(line: 711, column: 53, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 46)
!7425 = !DILocation(line: 711, column: 1412, scope: !7424)
!7426 = !DILocation(line: 711, column: 1419, scope: !7424)
!7427 = !DILocation(line: 711, column: 1431, scope: !7424)
!7428 = !DILocation(line: 711, column: 1409, scope: !7424)
!7429 = !DILocation(line: 711, column: 51, scope: !7424)
!7430 = !DILocation(line: 711, column: 1439, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 47)
!7432 = !DILocation(line: 711, column: 1446, scope: !7431)
!7433 = !DILocation(line: 711, column: 1458, scope: !7431)
!7434 = !DILocation(line: 711, column: 51, scope: !7431)
!7435 = !DILocation(line: 711, column: 1474, scope: !7436)
!7436 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 48)
!7437 = !DILocation(line: 711, column: 1488, scope: !7436)
!7438 = !DILocation(line: 711, column: 1490, scope: !7436)
!7439 = !DILocation(line: 711, column: 1497, scope: !7436)
!7440 = !DILocation(line: 711, column: 1511, scope: !7436)
!7441 = !DILocation(line: 711, column: 1513, scope: !7436)
!7442 = !DILocation(line: 711, column: 1516, scope: !7436)
!7443 = !DILocation(line: 711, column: 1520, scope: !7436)
!7444 = !DILocation(line: 711, column: 1494, scope: !7436)
!7445 = !DILocation(line: 711, column: 1473, scope: !7436)
!7446 = !DILocation(line: 711, column: 1531, scope: !7447)
!7447 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 49)
!7448 = !DILocation(line: 711, column: 1545, scope: !7447)
!7449 = !DILocation(line: 711, column: 1547, scope: !7447)
!7450 = !DILocation(line: 711, column: 1473, scope: !7447)
!7451 = !DILocation(line: 711, column: 1554, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 50)
!7453 = !DILocation(line: 711, column: 1568, scope: !7452)
!7454 = !DILocation(line: 711, column: 1570, scope: !7452)
!7455 = !DILocation(line: 711, column: 1573, scope: !7452)
!7456 = !DILocation(line: 711, column: 1577, scope: !7452)
!7457 = !DILocation(line: 711, column: 1473, scope: !7452)
!7458 = !DILocation(line: 711, column: 1473, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 51)
!7460 = !DILocation(line: 711, column: 1597, scope: !7459)
!7461 = !DILocation(line: 711, column: 1611, scope: !7459)
!7462 = !DILocation(line: 711, column: 1613, scope: !7459)
!7463 = !DILocation(line: 711, column: 1595, scope: !7459)
!7464 = !DILocation(line: 711, column: 1587, scope: !7459)
!7465 = !DILocation(line: 711, column: 1471, scope: !7459)
!7466 = !DILocation(line: 711, column: 1627, scope: !7467)
!7467 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 52)
!7468 = !DILocation(line: 711, column: 1641, scope: !7467)
!7469 = !DILocation(line: 711, column: 1643, scope: !7467)
!7470 = !DILocation(line: 711, column: 1625, scope: !7467)
!7471 = !DILocation(line: 711, column: 1471, scope: !7467)
!7472 = !DILocation(line: 711, column: 1652, scope: !7473)
!7473 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 53)
!7474 = !DILocation(line: 711, column: 1666, scope: !7473)
!7475 = !DILocation(line: 711, column: 1668, scope: !7473)
!7476 = !DILocation(line: 711, column: 1675, scope: !7473)
!7477 = !DILocation(line: 711, column: 1689, scope: !7473)
!7478 = !DILocation(line: 711, column: 1691, scope: !7473)
!7479 = !DILocation(line: 711, column: 1694, scope: !7473)
!7480 = !DILocation(line: 711, column: 1698, scope: !7473)
!7481 = !DILocation(line: 711, column: 1672, scope: !7473)
!7482 = !DILocation(line: 711, column: 1651, scope: !7473)
!7483 = !DILocation(line: 711, column: 1709, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 54)
!7485 = !DILocation(line: 711, column: 1723, scope: !7484)
!7486 = !DILocation(line: 711, column: 1725, scope: !7484)
!7487 = !DILocation(line: 711, column: 1651, scope: !7484)
!7488 = !DILocation(line: 711, column: 1732, scope: !7489)
!7489 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 55)
!7490 = !DILocation(line: 711, column: 1746, scope: !7489)
!7491 = !DILocation(line: 711, column: 1748, scope: !7489)
!7492 = !DILocation(line: 711, column: 1751, scope: !7489)
!7493 = !DILocation(line: 711, column: 1755, scope: !7489)
!7494 = !DILocation(line: 711, column: 1651, scope: !7489)
!7495 = !DILocation(line: 711, column: 1651, scope: !7496)
!7496 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 56)
!7497 = !DILocation(line: 711, column: 1471, scope: !7496)
!7498 = !DILocation(line: 711, column: 1471, scope: !7499)
!7499 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 57)
!7500 = !DILocation(line: 711, column: 1778, scope: !7499)
!7501 = !DILocation(line: 711, column: 1792, scope: !7499)
!7502 = !DILocation(line: 711, column: 1794, scope: !7499)
!7503 = !DILocation(line: 711, column: 1776, scope: !7499)
!7504 = !DILocation(line: 711, column: 1767, scope: !7499)
!7505 = !DILocation(line: 711, column: 1469, scope: !7499)
!7506 = !DILocation(line: 711, column: 1810, scope: !7507)
!7507 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 58)
!7508 = !DILocation(line: 711, column: 1824, scope: !7507)
!7509 = !DILocation(line: 711, column: 1826, scope: !7507)
!7510 = !DILocation(line: 711, column: 1808, scope: !7507)
!7511 = !DILocation(line: 711, column: 1469, scope: !7507)
!7512 = !DILocation(line: 711, column: 1838, scope: !7513)
!7513 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 59)
!7514 = !DILocation(line: 711, column: 1852, scope: !7513)
!7515 = !DILocation(line: 711, column: 1854, scope: !7513)
!7516 = !DILocation(line: 711, column: 1861, scope: !7513)
!7517 = !DILocation(line: 711, column: 1875, scope: !7513)
!7518 = !DILocation(line: 711, column: 1877, scope: !7513)
!7519 = !DILocation(line: 711, column: 1880, scope: !7513)
!7520 = !DILocation(line: 711, column: 1884, scope: !7513)
!7521 = !DILocation(line: 711, column: 1858, scope: !7513)
!7522 = !DILocation(line: 711, column: 1837, scope: !7513)
!7523 = !DILocation(line: 711, column: 1895, scope: !7524)
!7524 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 60)
!7525 = !DILocation(line: 711, column: 1909, scope: !7524)
!7526 = !DILocation(line: 711, column: 1911, scope: !7524)
!7527 = !DILocation(line: 711, column: 1837, scope: !7524)
!7528 = !DILocation(line: 711, column: 1918, scope: !7529)
!7529 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 61)
!7530 = !DILocation(line: 711, column: 1932, scope: !7529)
!7531 = !DILocation(line: 711, column: 1934, scope: !7529)
!7532 = !DILocation(line: 711, column: 1937, scope: !7529)
!7533 = !DILocation(line: 711, column: 1941, scope: !7529)
!7534 = !DILocation(line: 711, column: 1837, scope: !7529)
!7535 = !DILocation(line: 711, column: 1837, scope: !7536)
!7536 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 62)
!7537 = !DILocation(line: 711, column: 1961, scope: !7536)
!7538 = !DILocation(line: 711, column: 1975, scope: !7536)
!7539 = !DILocation(line: 711, column: 1977, scope: !7536)
!7540 = !DILocation(line: 711, column: 1959, scope: !7536)
!7541 = !DILocation(line: 711, column: 1951, scope: !7536)
!7542 = !DILocation(line: 711, column: 1835, scope: !7536)
!7543 = !DILocation(line: 711, column: 1991, scope: !7544)
!7544 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 63)
!7545 = !DILocation(line: 711, column: 2005, scope: !7544)
!7546 = !DILocation(line: 711, column: 2007, scope: !7544)
!7547 = !DILocation(line: 711, column: 1989, scope: !7544)
!7548 = !DILocation(line: 711, column: 1835, scope: !7544)
!7549 = !DILocation(line: 711, column: 2016, scope: !7550)
!7550 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 64)
!7551 = !DILocation(line: 711, column: 2030, scope: !7550)
!7552 = !DILocation(line: 711, column: 2032, scope: !7550)
!7553 = !DILocation(line: 711, column: 2039, scope: !7550)
!7554 = !DILocation(line: 711, column: 2053, scope: !7550)
!7555 = !DILocation(line: 711, column: 2055, scope: !7550)
!7556 = !DILocation(line: 711, column: 2058, scope: !7550)
!7557 = !DILocation(line: 711, column: 2062, scope: !7550)
!7558 = !DILocation(line: 711, column: 2036, scope: !7550)
!7559 = !DILocation(line: 711, column: 2015, scope: !7550)
!7560 = !DILocation(line: 711, column: 2073, scope: !7561)
!7561 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 65)
!7562 = !DILocation(line: 711, column: 2087, scope: !7561)
!7563 = !DILocation(line: 711, column: 2089, scope: !7561)
!7564 = !DILocation(line: 711, column: 2015, scope: !7561)
!7565 = !DILocation(line: 711, column: 2096, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 66)
!7567 = !DILocation(line: 711, column: 2110, scope: !7566)
!7568 = !DILocation(line: 711, column: 2112, scope: !7566)
!7569 = !DILocation(line: 711, column: 2115, scope: !7566)
!7570 = !DILocation(line: 711, column: 2119, scope: !7566)
!7571 = !DILocation(line: 711, column: 2015, scope: !7566)
!7572 = !DILocation(line: 711, column: 2015, scope: !7573)
!7573 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 67)
!7574 = !DILocation(line: 711, column: 1835, scope: !7573)
!7575 = !DILocation(line: 711, column: 1835, scope: !7576)
!7576 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 68)
!7577 = !DILocation(line: 711, column: 1469, scope: !7576)
!7578 = !DILocation(line: 711, column: 1469, scope: !7579)
!7579 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 69)
!7580 = !DILocation(line: 711, column: 2133, scope: !7579)
!7581 = !DILocation(line: 711, column: 1467, scope: !7579)
!7582 = !DILocation(line: 711, column: 1467, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 70)
!7584 = !DILocation(line: 711, column: 2162, scope: !7585)
!7585 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 71)
!7586 = !DILocation(line: 711, column: 2176, scope: !7585)
!7587 = !DILocation(line: 711, column: 2178, scope: !7585)
!7588 = !DILocation(line: 711, column: 2185, scope: !7585)
!7589 = !DILocation(line: 711, column: 2199, scope: !7585)
!7590 = !DILocation(line: 711, column: 2201, scope: !7585)
!7591 = !DILocation(line: 711, column: 2204, scope: !7585)
!7592 = !DILocation(line: 711, column: 2208, scope: !7585)
!7593 = !DILocation(line: 711, column: 2182, scope: !7585)
!7594 = !DILocation(line: 711, column: 2161, scope: !7585)
!7595 = !DILocation(line: 711, column: 2219, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 72)
!7597 = !DILocation(line: 711, column: 2233, scope: !7596)
!7598 = !DILocation(line: 711, column: 2235, scope: !7596)
!7599 = !DILocation(line: 711, column: 2161, scope: !7596)
!7600 = !DILocation(line: 711, column: 2242, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 73)
!7602 = !DILocation(line: 711, column: 2256, scope: !7601)
!7603 = !DILocation(line: 711, column: 2258, scope: !7601)
!7604 = !DILocation(line: 711, column: 2261, scope: !7601)
!7605 = !DILocation(line: 711, column: 2265, scope: !7601)
!7606 = !DILocation(line: 711, column: 2161, scope: !7601)
!7607 = !DILocation(line: 711, column: 2161, scope: !7608)
!7608 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 74)
!7609 = !DILocation(line: 711, column: 2285, scope: !7608)
!7610 = !DILocation(line: 711, column: 2299, scope: !7608)
!7611 = !DILocation(line: 711, column: 2301, scope: !7608)
!7612 = !DILocation(line: 711, column: 2283, scope: !7608)
!7613 = !DILocation(line: 711, column: 2275, scope: !7608)
!7614 = !DILocation(line: 711, column: 2159, scope: !7608)
!7615 = !DILocation(line: 711, column: 2315, scope: !7616)
!7616 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 75)
!7617 = !DILocation(line: 711, column: 2329, scope: !7616)
!7618 = !DILocation(line: 711, column: 2331, scope: !7616)
!7619 = !DILocation(line: 711, column: 2313, scope: !7616)
!7620 = !DILocation(line: 711, column: 2159, scope: !7616)
!7621 = !DILocation(line: 711, column: 2340, scope: !7622)
!7622 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 76)
!7623 = !DILocation(line: 711, column: 2354, scope: !7622)
!7624 = !DILocation(line: 711, column: 2356, scope: !7622)
!7625 = !DILocation(line: 711, column: 2363, scope: !7622)
!7626 = !DILocation(line: 711, column: 2377, scope: !7622)
!7627 = !DILocation(line: 711, column: 2379, scope: !7622)
!7628 = !DILocation(line: 711, column: 2382, scope: !7622)
!7629 = !DILocation(line: 711, column: 2386, scope: !7622)
!7630 = !DILocation(line: 711, column: 2360, scope: !7622)
!7631 = !DILocation(line: 711, column: 2339, scope: !7622)
!7632 = !DILocation(line: 711, column: 2397, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 77)
!7634 = !DILocation(line: 711, column: 2411, scope: !7633)
!7635 = !DILocation(line: 711, column: 2413, scope: !7633)
!7636 = !DILocation(line: 711, column: 2339, scope: !7633)
!7637 = !DILocation(line: 711, column: 2420, scope: !7638)
!7638 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 78)
!7639 = !DILocation(line: 711, column: 2434, scope: !7638)
!7640 = !DILocation(line: 711, column: 2436, scope: !7638)
!7641 = !DILocation(line: 711, column: 2439, scope: !7638)
!7642 = !DILocation(line: 711, column: 2443, scope: !7638)
!7643 = !DILocation(line: 711, column: 2339, scope: !7638)
!7644 = !DILocation(line: 711, column: 2339, scope: !7645)
!7645 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 79)
!7646 = !DILocation(line: 711, column: 2159, scope: !7645)
!7647 = !DILocation(line: 711, column: 2159, scope: !7648)
!7648 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 80)
!7649 = !DILocation(line: 711, column: 2466, scope: !7648)
!7650 = !DILocation(line: 711, column: 2480, scope: !7648)
!7651 = !DILocation(line: 711, column: 2482, scope: !7648)
!7652 = !DILocation(line: 711, column: 2464, scope: !7648)
!7653 = !DILocation(line: 711, column: 2455, scope: !7648)
!7654 = !DILocation(line: 711, column: 2157, scope: !7648)
!7655 = !DILocation(line: 711, column: 2498, scope: !7656)
!7656 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 81)
!7657 = !DILocation(line: 711, column: 2512, scope: !7656)
!7658 = !DILocation(line: 711, column: 2514, scope: !7656)
!7659 = !DILocation(line: 711, column: 2496, scope: !7656)
!7660 = !DILocation(line: 711, column: 2157, scope: !7656)
!7661 = !DILocation(line: 711, column: 2526, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 82)
!7663 = !DILocation(line: 711, column: 2540, scope: !7662)
!7664 = !DILocation(line: 711, column: 2542, scope: !7662)
!7665 = !DILocation(line: 711, column: 2549, scope: !7662)
!7666 = !DILocation(line: 711, column: 2563, scope: !7662)
!7667 = !DILocation(line: 711, column: 2565, scope: !7662)
!7668 = !DILocation(line: 711, column: 2568, scope: !7662)
!7669 = !DILocation(line: 711, column: 2572, scope: !7662)
!7670 = !DILocation(line: 711, column: 2546, scope: !7662)
!7671 = !DILocation(line: 711, column: 2525, scope: !7662)
!7672 = !DILocation(line: 711, column: 2583, scope: !7673)
!7673 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 83)
!7674 = !DILocation(line: 711, column: 2597, scope: !7673)
!7675 = !DILocation(line: 711, column: 2599, scope: !7673)
!7676 = !DILocation(line: 711, column: 2525, scope: !7673)
!7677 = !DILocation(line: 711, column: 2606, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 84)
!7679 = !DILocation(line: 711, column: 2620, scope: !7678)
!7680 = !DILocation(line: 711, column: 2622, scope: !7678)
!7681 = !DILocation(line: 711, column: 2625, scope: !7678)
!7682 = !DILocation(line: 711, column: 2629, scope: !7678)
!7683 = !DILocation(line: 711, column: 2525, scope: !7678)
!7684 = !DILocation(line: 711, column: 2525, scope: !7685)
!7685 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 85)
!7686 = !DILocation(line: 711, column: 2649, scope: !7685)
!7687 = !DILocation(line: 711, column: 2663, scope: !7685)
!7688 = !DILocation(line: 711, column: 2665, scope: !7685)
!7689 = !DILocation(line: 711, column: 2647, scope: !7685)
!7690 = !DILocation(line: 711, column: 2639, scope: !7685)
!7691 = !DILocation(line: 711, column: 2523, scope: !7685)
!7692 = !DILocation(line: 711, column: 2679, scope: !7693)
!7693 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 86)
!7694 = !DILocation(line: 711, column: 2693, scope: !7693)
!7695 = !DILocation(line: 711, column: 2695, scope: !7693)
!7696 = !DILocation(line: 711, column: 2677, scope: !7693)
!7697 = !DILocation(line: 711, column: 2523, scope: !7693)
!7698 = !DILocation(line: 711, column: 2704, scope: !7699)
!7699 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 87)
!7700 = !DILocation(line: 711, column: 2718, scope: !7699)
!7701 = !DILocation(line: 711, column: 2720, scope: !7699)
!7702 = !DILocation(line: 711, column: 2727, scope: !7699)
!7703 = !DILocation(line: 711, column: 2741, scope: !7699)
!7704 = !DILocation(line: 711, column: 2743, scope: !7699)
!7705 = !DILocation(line: 711, column: 2746, scope: !7699)
!7706 = !DILocation(line: 711, column: 2750, scope: !7699)
!7707 = !DILocation(line: 711, column: 2724, scope: !7699)
!7708 = !DILocation(line: 711, column: 2703, scope: !7699)
!7709 = !DILocation(line: 711, column: 2761, scope: !7710)
!7710 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 88)
!7711 = !DILocation(line: 711, column: 2775, scope: !7710)
!7712 = !DILocation(line: 711, column: 2777, scope: !7710)
!7713 = !DILocation(line: 711, column: 2703, scope: !7710)
!7714 = !DILocation(line: 711, column: 2784, scope: !7715)
!7715 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 89)
!7716 = !DILocation(line: 711, column: 2798, scope: !7715)
!7717 = !DILocation(line: 711, column: 2800, scope: !7715)
!7718 = !DILocation(line: 711, column: 2803, scope: !7715)
!7719 = !DILocation(line: 711, column: 2807, scope: !7715)
!7720 = !DILocation(line: 711, column: 2703, scope: !7715)
!7721 = !DILocation(line: 711, column: 2703, scope: !7722)
!7722 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 90)
!7723 = !DILocation(line: 711, column: 2523, scope: !7722)
!7724 = !DILocation(line: 711, column: 2523, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 91)
!7726 = !DILocation(line: 711, column: 2157, scope: !7725)
!7727 = !DILocation(line: 711, column: 2157, scope: !7728)
!7728 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 92)
!7729 = !DILocation(line: 711, column: 1467, scope: !7728)
!7730 = !DILocation(line: 711, column: 1467, scope: !7731)
!7731 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 93)
!7732 = !DILocation(line: 711, column: 51, scope: !7731)
!7733 = !DILocation(line: 711, column: 51, scope: !7734)
!7734 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 94)
!7735 = !DILocation(line: 711, column: 33, scope: !7734)
!7736 = !DILocation(line: 711, column: 2826, scope: !7737)
!7737 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 95)
!7738 = !DILocation(line: 711, column: 2833, scope: !7737)
!7739 = !DILocation(line: 711, column: 2845, scope: !7737)
!7740 = !DILocation(line: 711, column: 33, scope: !7737)
!7741 = !DILocation(line: 711, column: 33, scope: !7742)
!7742 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 96)
!7743 = !DILocation(line: 711, column: 29, scope: !7742)
!7744 = !DILocation(line: 711, column: 22, scope: !7742)
!7745 = !DILocation(line: 711, column: 22, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 97)
!7747 = !DILocation(line: 711, column: 2865, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 98)
!7749 = !DILocation(line: 711, column: 2892, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 99)
!7751 = !DILocation(line: 711, column: 2906, scope: !7750)
!7752 = !DILocation(line: 711, column: 2908, scope: !7750)
!7753 = !DILocation(line: 711, column: 2915, scope: !7750)
!7754 = !DILocation(line: 711, column: 2929, scope: !7750)
!7755 = !DILocation(line: 711, column: 2931, scope: !7750)
!7756 = !DILocation(line: 711, column: 2934, scope: !7750)
!7757 = !DILocation(line: 711, column: 2938, scope: !7750)
!7758 = !DILocation(line: 711, column: 2912, scope: !7750)
!7759 = !DILocation(line: 711, column: 2891, scope: !7750)
!7760 = !DILocation(line: 711, column: 2949, scope: !7761)
!7761 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 100)
!7762 = !DILocation(line: 711, column: 2963, scope: !7761)
!7763 = !DILocation(line: 711, column: 2965, scope: !7761)
!7764 = !DILocation(line: 711, column: 2891, scope: !7761)
!7765 = !DILocation(line: 711, column: 2972, scope: !7766)
!7766 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 101)
!7767 = !DILocation(line: 711, column: 2986, scope: !7766)
!7768 = !DILocation(line: 711, column: 2988, scope: !7766)
!7769 = !DILocation(line: 711, column: 2991, scope: !7766)
!7770 = !DILocation(line: 711, column: 2995, scope: !7766)
!7771 = !DILocation(line: 711, column: 2891, scope: !7766)
!7772 = !DILocation(line: 711, column: 2891, scope: !7773)
!7773 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 102)
!7774 = !DILocation(line: 711, column: 3015, scope: !7773)
!7775 = !DILocation(line: 711, column: 3029, scope: !7773)
!7776 = !DILocation(line: 711, column: 3031, scope: !7773)
!7777 = !DILocation(line: 711, column: 3013, scope: !7773)
!7778 = !DILocation(line: 711, column: 3005, scope: !7773)
!7779 = !DILocation(line: 711, column: 2889, scope: !7773)
!7780 = !DILocation(line: 711, column: 3045, scope: !7781)
!7781 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 103)
!7782 = !DILocation(line: 711, column: 3059, scope: !7781)
!7783 = !DILocation(line: 711, column: 3061, scope: !7781)
!7784 = !DILocation(line: 711, column: 3043, scope: !7781)
!7785 = !DILocation(line: 711, column: 2889, scope: !7781)
!7786 = !DILocation(line: 711, column: 3070, scope: !7787)
!7787 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 104)
!7788 = !DILocation(line: 711, column: 3084, scope: !7787)
!7789 = !DILocation(line: 711, column: 3086, scope: !7787)
!7790 = !DILocation(line: 711, column: 3093, scope: !7787)
!7791 = !DILocation(line: 711, column: 3107, scope: !7787)
!7792 = !DILocation(line: 711, column: 3109, scope: !7787)
!7793 = !DILocation(line: 711, column: 3112, scope: !7787)
!7794 = !DILocation(line: 711, column: 3116, scope: !7787)
!7795 = !DILocation(line: 711, column: 3090, scope: !7787)
!7796 = !DILocation(line: 711, column: 3069, scope: !7787)
!7797 = !DILocation(line: 711, column: 3127, scope: !7798)
!7798 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 105)
!7799 = !DILocation(line: 711, column: 3141, scope: !7798)
!7800 = !DILocation(line: 711, column: 3143, scope: !7798)
!7801 = !DILocation(line: 711, column: 3069, scope: !7798)
!7802 = !DILocation(line: 711, column: 3150, scope: !7803)
!7803 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 106)
!7804 = !DILocation(line: 711, column: 3164, scope: !7803)
!7805 = !DILocation(line: 711, column: 3166, scope: !7803)
!7806 = !DILocation(line: 711, column: 3169, scope: !7803)
!7807 = !DILocation(line: 711, column: 3173, scope: !7803)
!7808 = !DILocation(line: 711, column: 3069, scope: !7803)
!7809 = !DILocation(line: 711, column: 3069, scope: !7810)
!7810 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 107)
!7811 = !DILocation(line: 711, column: 2889, scope: !7810)
!7812 = !DILocation(line: 711, column: 2889, scope: !7813)
!7813 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 108)
!7814 = !DILocation(line: 711, column: 3196, scope: !7813)
!7815 = !DILocation(line: 711, column: 3210, scope: !7813)
!7816 = !DILocation(line: 711, column: 3212, scope: !7813)
!7817 = !DILocation(line: 711, column: 3194, scope: !7813)
!7818 = !DILocation(line: 711, column: 3185, scope: !7813)
!7819 = !DILocation(line: 711, column: 2887, scope: !7813)
!7820 = !DILocation(line: 711, column: 3228, scope: !7821)
!7821 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 109)
!7822 = !DILocation(line: 711, column: 3242, scope: !7821)
!7823 = !DILocation(line: 711, column: 3244, scope: !7821)
!7824 = !DILocation(line: 711, column: 3226, scope: !7821)
!7825 = !DILocation(line: 711, column: 2887, scope: !7821)
!7826 = !DILocation(line: 711, column: 3256, scope: !7827)
!7827 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 110)
!7828 = !DILocation(line: 711, column: 3270, scope: !7827)
!7829 = !DILocation(line: 711, column: 3272, scope: !7827)
!7830 = !DILocation(line: 711, column: 3279, scope: !7827)
!7831 = !DILocation(line: 711, column: 3293, scope: !7827)
!7832 = !DILocation(line: 711, column: 3295, scope: !7827)
!7833 = !DILocation(line: 711, column: 3298, scope: !7827)
!7834 = !DILocation(line: 711, column: 3302, scope: !7827)
!7835 = !DILocation(line: 711, column: 3276, scope: !7827)
!7836 = !DILocation(line: 711, column: 3255, scope: !7827)
!7837 = !DILocation(line: 711, column: 3313, scope: !7838)
!7838 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 111)
!7839 = !DILocation(line: 711, column: 3327, scope: !7838)
!7840 = !DILocation(line: 711, column: 3329, scope: !7838)
!7841 = !DILocation(line: 711, column: 3255, scope: !7838)
!7842 = !DILocation(line: 711, column: 3336, scope: !7843)
!7843 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 112)
!7844 = !DILocation(line: 711, column: 3350, scope: !7843)
!7845 = !DILocation(line: 711, column: 3352, scope: !7843)
!7846 = !DILocation(line: 711, column: 3355, scope: !7843)
!7847 = !DILocation(line: 711, column: 3359, scope: !7843)
!7848 = !DILocation(line: 711, column: 3255, scope: !7843)
!7849 = !DILocation(line: 711, column: 3255, scope: !7850)
!7850 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 113)
!7851 = !DILocation(line: 711, column: 3379, scope: !7850)
!7852 = !DILocation(line: 711, column: 3393, scope: !7850)
!7853 = !DILocation(line: 711, column: 3395, scope: !7850)
!7854 = !DILocation(line: 711, column: 3377, scope: !7850)
!7855 = !DILocation(line: 711, column: 3369, scope: !7850)
!7856 = !DILocation(line: 711, column: 3253, scope: !7850)
!7857 = !DILocation(line: 711, column: 3409, scope: !7858)
!7858 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 114)
!7859 = !DILocation(line: 711, column: 3423, scope: !7858)
!7860 = !DILocation(line: 711, column: 3425, scope: !7858)
!7861 = !DILocation(line: 711, column: 3407, scope: !7858)
!7862 = !DILocation(line: 711, column: 3253, scope: !7858)
!7863 = !DILocation(line: 711, column: 3434, scope: !7864)
!7864 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 115)
!7865 = !DILocation(line: 711, column: 3448, scope: !7864)
!7866 = !DILocation(line: 711, column: 3450, scope: !7864)
!7867 = !DILocation(line: 711, column: 3457, scope: !7864)
!7868 = !DILocation(line: 711, column: 3471, scope: !7864)
!7869 = !DILocation(line: 711, column: 3473, scope: !7864)
!7870 = !DILocation(line: 711, column: 3476, scope: !7864)
!7871 = !DILocation(line: 711, column: 3480, scope: !7864)
!7872 = !DILocation(line: 711, column: 3454, scope: !7864)
!7873 = !DILocation(line: 711, column: 3433, scope: !7864)
!7874 = !DILocation(line: 711, column: 3491, scope: !7875)
!7875 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 116)
!7876 = !DILocation(line: 711, column: 3505, scope: !7875)
!7877 = !DILocation(line: 711, column: 3507, scope: !7875)
!7878 = !DILocation(line: 711, column: 3433, scope: !7875)
!7879 = !DILocation(line: 711, column: 3514, scope: !7880)
!7880 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 117)
!7881 = !DILocation(line: 711, column: 3528, scope: !7880)
!7882 = !DILocation(line: 711, column: 3530, scope: !7880)
!7883 = !DILocation(line: 711, column: 3533, scope: !7880)
!7884 = !DILocation(line: 711, column: 3537, scope: !7880)
!7885 = !DILocation(line: 711, column: 3433, scope: !7880)
!7886 = !DILocation(line: 711, column: 3433, scope: !7887)
!7887 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 118)
!7888 = !DILocation(line: 711, column: 3253, scope: !7887)
!7889 = !DILocation(line: 711, column: 3253, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 119)
!7891 = !DILocation(line: 711, column: 2887, scope: !7890)
!7892 = !DILocation(line: 711, column: 2887, scope: !7893)
!7893 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 120)
!7894 = !DILocation(line: 711, column: 3551, scope: !7893)
!7895 = !DILocation(line: 711, column: 2885, scope: !7893)
!7896 = !DILocation(line: 711, column: 2885, scope: !7897)
!7897 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 121)
!7898 = !DILocation(line: 711, column: 3580, scope: !7899)
!7899 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 122)
!7900 = !DILocation(line: 711, column: 3594, scope: !7899)
!7901 = !DILocation(line: 711, column: 3596, scope: !7899)
!7902 = !DILocation(line: 711, column: 3603, scope: !7899)
!7903 = !DILocation(line: 711, column: 3617, scope: !7899)
!7904 = !DILocation(line: 711, column: 3619, scope: !7899)
!7905 = !DILocation(line: 711, column: 3622, scope: !7899)
!7906 = !DILocation(line: 711, column: 3626, scope: !7899)
!7907 = !DILocation(line: 711, column: 3600, scope: !7899)
!7908 = !DILocation(line: 711, column: 3579, scope: !7899)
!7909 = !DILocation(line: 711, column: 3637, scope: !7910)
!7910 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 123)
!7911 = !DILocation(line: 711, column: 3651, scope: !7910)
!7912 = !DILocation(line: 711, column: 3653, scope: !7910)
!7913 = !DILocation(line: 711, column: 3579, scope: !7910)
!7914 = !DILocation(line: 711, column: 3660, scope: !7915)
!7915 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 124)
!7916 = !DILocation(line: 711, column: 3674, scope: !7915)
!7917 = !DILocation(line: 711, column: 3676, scope: !7915)
!7918 = !DILocation(line: 711, column: 3679, scope: !7915)
!7919 = !DILocation(line: 711, column: 3683, scope: !7915)
!7920 = !DILocation(line: 711, column: 3579, scope: !7915)
!7921 = !DILocation(line: 711, column: 3579, scope: !7922)
!7922 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 125)
!7923 = !DILocation(line: 711, column: 3703, scope: !7922)
!7924 = !DILocation(line: 711, column: 3717, scope: !7922)
!7925 = !DILocation(line: 711, column: 3719, scope: !7922)
!7926 = !DILocation(line: 711, column: 3701, scope: !7922)
!7927 = !DILocation(line: 711, column: 3693, scope: !7922)
!7928 = !DILocation(line: 711, column: 3577, scope: !7922)
!7929 = !DILocation(line: 711, column: 3733, scope: !7930)
!7930 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 126)
!7931 = !DILocation(line: 711, column: 3747, scope: !7930)
!7932 = !DILocation(line: 711, column: 3749, scope: !7930)
!7933 = !DILocation(line: 711, column: 3731, scope: !7930)
!7934 = !DILocation(line: 711, column: 3577, scope: !7930)
!7935 = !DILocation(line: 711, column: 3758, scope: !7936)
!7936 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 127)
!7937 = !DILocation(line: 711, column: 3772, scope: !7936)
!7938 = !DILocation(line: 711, column: 3774, scope: !7936)
!7939 = !DILocation(line: 711, column: 3781, scope: !7936)
!7940 = !DILocation(line: 711, column: 3795, scope: !7936)
!7941 = !DILocation(line: 711, column: 3797, scope: !7936)
!7942 = !DILocation(line: 711, column: 3800, scope: !7936)
!7943 = !DILocation(line: 711, column: 3804, scope: !7936)
!7944 = !DILocation(line: 711, column: 3778, scope: !7936)
!7945 = !DILocation(line: 711, column: 3757, scope: !7936)
!7946 = !DILocation(line: 711, column: 3815, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 128)
!7948 = !DILocation(line: 711, column: 3829, scope: !7947)
!7949 = !DILocation(line: 711, column: 3831, scope: !7947)
!7950 = !DILocation(line: 711, column: 3757, scope: !7947)
!7951 = !DILocation(line: 711, column: 3838, scope: !7952)
!7952 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 129)
!7953 = !DILocation(line: 711, column: 3852, scope: !7952)
!7954 = !DILocation(line: 711, column: 3854, scope: !7952)
!7955 = !DILocation(line: 711, column: 3857, scope: !7952)
!7956 = !DILocation(line: 711, column: 3861, scope: !7952)
!7957 = !DILocation(line: 711, column: 3757, scope: !7952)
!7958 = !DILocation(line: 711, column: 3757, scope: !7959)
!7959 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 130)
!7960 = !DILocation(line: 711, column: 3577, scope: !7959)
!7961 = !DILocation(line: 711, column: 3577, scope: !7962)
!7962 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 131)
!7963 = !DILocation(line: 711, column: 3884, scope: !7962)
!7964 = !DILocation(line: 711, column: 3898, scope: !7962)
!7965 = !DILocation(line: 711, column: 3900, scope: !7962)
!7966 = !DILocation(line: 711, column: 3882, scope: !7962)
!7967 = !DILocation(line: 711, column: 3873, scope: !7962)
!7968 = !DILocation(line: 711, column: 3575, scope: !7962)
!7969 = !DILocation(line: 711, column: 3916, scope: !7970)
!7970 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 132)
!7971 = !DILocation(line: 711, column: 3930, scope: !7970)
!7972 = !DILocation(line: 711, column: 3932, scope: !7970)
!7973 = !DILocation(line: 711, column: 3914, scope: !7970)
!7974 = !DILocation(line: 711, column: 3575, scope: !7970)
!7975 = !DILocation(line: 711, column: 3944, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 133)
!7977 = !DILocation(line: 711, column: 3958, scope: !7976)
!7978 = !DILocation(line: 711, column: 3960, scope: !7976)
!7979 = !DILocation(line: 711, column: 3967, scope: !7976)
!7980 = !DILocation(line: 711, column: 3981, scope: !7976)
!7981 = !DILocation(line: 711, column: 3983, scope: !7976)
!7982 = !DILocation(line: 711, column: 3986, scope: !7976)
!7983 = !DILocation(line: 711, column: 3990, scope: !7976)
!7984 = !DILocation(line: 711, column: 3964, scope: !7976)
!7985 = !DILocation(line: 711, column: 3943, scope: !7976)
!7986 = !DILocation(line: 711, column: 4001, scope: !7987)
!7987 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 134)
!7988 = !DILocation(line: 711, column: 4015, scope: !7987)
!7989 = !DILocation(line: 711, column: 4017, scope: !7987)
!7990 = !DILocation(line: 711, column: 3943, scope: !7987)
!7991 = !DILocation(line: 711, column: 4024, scope: !7992)
!7992 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 135)
!7993 = !DILocation(line: 711, column: 4038, scope: !7992)
!7994 = !DILocation(line: 711, column: 4040, scope: !7992)
!7995 = !DILocation(line: 711, column: 4043, scope: !7992)
!7996 = !DILocation(line: 711, column: 4047, scope: !7992)
!7997 = !DILocation(line: 711, column: 3943, scope: !7992)
!7998 = !DILocation(line: 711, column: 3943, scope: !7999)
!7999 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 136)
!8000 = !DILocation(line: 711, column: 4067, scope: !7999)
!8001 = !DILocation(line: 711, column: 4081, scope: !7999)
!8002 = !DILocation(line: 711, column: 4083, scope: !7999)
!8003 = !DILocation(line: 711, column: 4065, scope: !7999)
!8004 = !DILocation(line: 711, column: 4057, scope: !7999)
!8005 = !DILocation(line: 711, column: 3941, scope: !7999)
!8006 = !DILocation(line: 711, column: 4097, scope: !8007)
!8007 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 137)
!8008 = !DILocation(line: 711, column: 4111, scope: !8007)
!8009 = !DILocation(line: 711, column: 4113, scope: !8007)
!8010 = !DILocation(line: 711, column: 4095, scope: !8007)
!8011 = !DILocation(line: 711, column: 3941, scope: !8007)
!8012 = !DILocation(line: 711, column: 4122, scope: !8013)
!8013 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 138)
!8014 = !DILocation(line: 711, column: 4136, scope: !8013)
!8015 = !DILocation(line: 711, column: 4138, scope: !8013)
!8016 = !DILocation(line: 711, column: 4145, scope: !8013)
!8017 = !DILocation(line: 711, column: 4159, scope: !8013)
!8018 = !DILocation(line: 711, column: 4161, scope: !8013)
!8019 = !DILocation(line: 711, column: 4164, scope: !8013)
!8020 = !DILocation(line: 711, column: 4168, scope: !8013)
!8021 = !DILocation(line: 711, column: 4142, scope: !8013)
!8022 = !DILocation(line: 711, column: 4121, scope: !8013)
!8023 = !DILocation(line: 711, column: 4179, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 139)
!8025 = !DILocation(line: 711, column: 4193, scope: !8024)
!8026 = !DILocation(line: 711, column: 4195, scope: !8024)
!8027 = !DILocation(line: 711, column: 4121, scope: !8024)
!8028 = !DILocation(line: 711, column: 4202, scope: !8029)
!8029 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 140)
!8030 = !DILocation(line: 711, column: 4216, scope: !8029)
!8031 = !DILocation(line: 711, column: 4218, scope: !8029)
!8032 = !DILocation(line: 711, column: 4221, scope: !8029)
!8033 = !DILocation(line: 711, column: 4225, scope: !8029)
!8034 = !DILocation(line: 711, column: 4121, scope: !8029)
!8035 = !DILocation(line: 711, column: 4121, scope: !8036)
!8036 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 141)
!8037 = !DILocation(line: 711, column: 3941, scope: !8036)
!8038 = !DILocation(line: 711, column: 3941, scope: !8039)
!8039 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 142)
!8040 = !DILocation(line: 711, column: 3575, scope: !8039)
!8041 = !DILocation(line: 711, column: 3575, scope: !8042)
!8042 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 143)
!8043 = !DILocation(line: 711, column: 2885, scope: !8042)
!8044 = !DILocation(line: 711, column: 2885, scope: !8045)
!8045 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 144)
!8046 = !DILocation(line: 711, column: 4244, scope: !8045)
!8047 = !DILocation(line: 711, column: 4251, scope: !8045)
!8048 = !DILocation(line: 711, column: 4263, scope: !8045)
!8049 = !DILocation(line: 711, column: 4241, scope: !8045)
!8050 = !DILocation(line: 711, column: 2883, scope: !8045)
!8051 = !DILocation(line: 711, column: 4271, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 145)
!8053 = !DILocation(line: 711, column: 4278, scope: !8052)
!8054 = !DILocation(line: 711, column: 4290, scope: !8052)
!8055 = !DILocation(line: 711, column: 2883, scope: !8052)
!8056 = !DILocation(line: 711, column: 4306, scope: !8057)
!8057 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 146)
!8058 = !DILocation(line: 711, column: 4320, scope: !8057)
!8059 = !DILocation(line: 711, column: 4322, scope: !8057)
!8060 = !DILocation(line: 711, column: 4329, scope: !8057)
!8061 = !DILocation(line: 711, column: 4343, scope: !8057)
!8062 = !DILocation(line: 711, column: 4345, scope: !8057)
!8063 = !DILocation(line: 711, column: 4348, scope: !8057)
!8064 = !DILocation(line: 711, column: 4352, scope: !8057)
!8065 = !DILocation(line: 711, column: 4326, scope: !8057)
!8066 = !DILocation(line: 711, column: 4305, scope: !8057)
!8067 = !DILocation(line: 711, column: 4363, scope: !8068)
!8068 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 147)
!8069 = !DILocation(line: 711, column: 4377, scope: !8068)
!8070 = !DILocation(line: 711, column: 4379, scope: !8068)
!8071 = !DILocation(line: 711, column: 4305, scope: !8068)
!8072 = !DILocation(line: 711, column: 4386, scope: !8073)
!8073 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 148)
!8074 = !DILocation(line: 711, column: 4400, scope: !8073)
!8075 = !DILocation(line: 711, column: 4402, scope: !8073)
!8076 = !DILocation(line: 711, column: 4405, scope: !8073)
!8077 = !DILocation(line: 711, column: 4409, scope: !8073)
!8078 = !DILocation(line: 711, column: 4305, scope: !8073)
!8079 = !DILocation(line: 711, column: 4305, scope: !8080)
!8080 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 149)
!8081 = !DILocation(line: 711, column: 4429, scope: !8080)
!8082 = !DILocation(line: 711, column: 4443, scope: !8080)
!8083 = !DILocation(line: 711, column: 4445, scope: !8080)
!8084 = !DILocation(line: 711, column: 4427, scope: !8080)
!8085 = !DILocation(line: 711, column: 4419, scope: !8080)
!8086 = !DILocation(line: 711, column: 4303, scope: !8080)
!8087 = !DILocation(line: 711, column: 4459, scope: !8088)
!8088 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 150)
!8089 = !DILocation(line: 711, column: 4473, scope: !8088)
!8090 = !DILocation(line: 711, column: 4475, scope: !8088)
!8091 = !DILocation(line: 711, column: 4457, scope: !8088)
!8092 = !DILocation(line: 711, column: 4303, scope: !8088)
!8093 = !DILocation(line: 711, column: 4484, scope: !8094)
!8094 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 151)
!8095 = !DILocation(line: 711, column: 4498, scope: !8094)
!8096 = !DILocation(line: 711, column: 4500, scope: !8094)
!8097 = !DILocation(line: 711, column: 4507, scope: !8094)
!8098 = !DILocation(line: 711, column: 4521, scope: !8094)
!8099 = !DILocation(line: 711, column: 4523, scope: !8094)
!8100 = !DILocation(line: 711, column: 4526, scope: !8094)
!8101 = !DILocation(line: 711, column: 4530, scope: !8094)
!8102 = !DILocation(line: 711, column: 4504, scope: !8094)
!8103 = !DILocation(line: 711, column: 4483, scope: !8094)
!8104 = !DILocation(line: 711, column: 4541, scope: !8105)
!8105 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 152)
!8106 = !DILocation(line: 711, column: 4555, scope: !8105)
!8107 = !DILocation(line: 711, column: 4557, scope: !8105)
!8108 = !DILocation(line: 711, column: 4483, scope: !8105)
!8109 = !DILocation(line: 711, column: 4564, scope: !8110)
!8110 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 153)
!8111 = !DILocation(line: 711, column: 4578, scope: !8110)
!8112 = !DILocation(line: 711, column: 4580, scope: !8110)
!8113 = !DILocation(line: 711, column: 4583, scope: !8110)
!8114 = !DILocation(line: 711, column: 4587, scope: !8110)
!8115 = !DILocation(line: 711, column: 4483, scope: !8110)
!8116 = !DILocation(line: 711, column: 4483, scope: !8117)
!8117 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 154)
!8118 = !DILocation(line: 711, column: 4303, scope: !8117)
!8119 = !DILocation(line: 711, column: 4303, scope: !8120)
!8120 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 155)
!8121 = !DILocation(line: 711, column: 4610, scope: !8120)
!8122 = !DILocation(line: 711, column: 4624, scope: !8120)
!8123 = !DILocation(line: 711, column: 4626, scope: !8120)
!8124 = !DILocation(line: 711, column: 4608, scope: !8120)
!8125 = !DILocation(line: 711, column: 4599, scope: !8120)
!8126 = !DILocation(line: 711, column: 4301, scope: !8120)
!8127 = !DILocation(line: 711, column: 4642, scope: !8128)
!8128 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 156)
!8129 = !DILocation(line: 711, column: 4656, scope: !8128)
!8130 = !DILocation(line: 711, column: 4658, scope: !8128)
!8131 = !DILocation(line: 711, column: 4640, scope: !8128)
!8132 = !DILocation(line: 711, column: 4301, scope: !8128)
!8133 = !DILocation(line: 711, column: 4670, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 157)
!8135 = !DILocation(line: 711, column: 4684, scope: !8134)
!8136 = !DILocation(line: 711, column: 4686, scope: !8134)
!8137 = !DILocation(line: 711, column: 4693, scope: !8134)
!8138 = !DILocation(line: 711, column: 4707, scope: !8134)
!8139 = !DILocation(line: 711, column: 4709, scope: !8134)
!8140 = !DILocation(line: 711, column: 4712, scope: !8134)
!8141 = !DILocation(line: 711, column: 4716, scope: !8134)
!8142 = !DILocation(line: 711, column: 4690, scope: !8134)
!8143 = !DILocation(line: 711, column: 4669, scope: !8134)
!8144 = !DILocation(line: 711, column: 4727, scope: !8145)
!8145 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 158)
!8146 = !DILocation(line: 711, column: 4741, scope: !8145)
!8147 = !DILocation(line: 711, column: 4743, scope: !8145)
!8148 = !DILocation(line: 711, column: 4669, scope: !8145)
!8149 = !DILocation(line: 711, column: 4750, scope: !8150)
!8150 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 159)
!8151 = !DILocation(line: 711, column: 4764, scope: !8150)
!8152 = !DILocation(line: 711, column: 4766, scope: !8150)
!8153 = !DILocation(line: 711, column: 4769, scope: !8150)
!8154 = !DILocation(line: 711, column: 4773, scope: !8150)
!8155 = !DILocation(line: 711, column: 4669, scope: !8150)
!8156 = !DILocation(line: 711, column: 4669, scope: !8157)
!8157 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 160)
!8158 = !DILocation(line: 711, column: 4793, scope: !8157)
!8159 = !DILocation(line: 711, column: 4807, scope: !8157)
!8160 = !DILocation(line: 711, column: 4809, scope: !8157)
!8161 = !DILocation(line: 711, column: 4791, scope: !8157)
!8162 = !DILocation(line: 711, column: 4783, scope: !8157)
!8163 = !DILocation(line: 711, column: 4667, scope: !8157)
!8164 = !DILocation(line: 711, column: 4823, scope: !8165)
!8165 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 161)
!8166 = !DILocation(line: 711, column: 4837, scope: !8165)
!8167 = !DILocation(line: 711, column: 4839, scope: !8165)
!8168 = !DILocation(line: 711, column: 4821, scope: !8165)
!8169 = !DILocation(line: 711, column: 4667, scope: !8165)
!8170 = !DILocation(line: 711, column: 4848, scope: !8171)
!8171 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 162)
!8172 = !DILocation(line: 711, column: 4862, scope: !8171)
!8173 = !DILocation(line: 711, column: 4864, scope: !8171)
!8174 = !DILocation(line: 711, column: 4871, scope: !8171)
!8175 = !DILocation(line: 711, column: 4885, scope: !8171)
!8176 = !DILocation(line: 711, column: 4887, scope: !8171)
!8177 = !DILocation(line: 711, column: 4890, scope: !8171)
!8178 = !DILocation(line: 711, column: 4894, scope: !8171)
!8179 = !DILocation(line: 711, column: 4868, scope: !8171)
!8180 = !DILocation(line: 711, column: 4847, scope: !8171)
!8181 = !DILocation(line: 711, column: 4905, scope: !8182)
!8182 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 163)
!8183 = !DILocation(line: 711, column: 4919, scope: !8182)
!8184 = !DILocation(line: 711, column: 4921, scope: !8182)
!8185 = !DILocation(line: 711, column: 4847, scope: !8182)
!8186 = !DILocation(line: 711, column: 4928, scope: !8187)
!8187 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 164)
!8188 = !DILocation(line: 711, column: 4942, scope: !8187)
!8189 = !DILocation(line: 711, column: 4944, scope: !8187)
!8190 = !DILocation(line: 711, column: 4947, scope: !8187)
!8191 = !DILocation(line: 711, column: 4951, scope: !8187)
!8192 = !DILocation(line: 711, column: 4847, scope: !8187)
!8193 = !DILocation(line: 711, column: 4847, scope: !8194)
!8194 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 165)
!8195 = !DILocation(line: 711, column: 4667, scope: !8194)
!8196 = !DILocation(line: 711, column: 4667, scope: !8197)
!8197 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 166)
!8198 = !DILocation(line: 711, column: 4301, scope: !8197)
!8199 = !DILocation(line: 711, column: 4301, scope: !8200)
!8200 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 167)
!8201 = !DILocation(line: 711, column: 4965, scope: !8200)
!8202 = !DILocation(line: 711, column: 4299, scope: !8200)
!8203 = !DILocation(line: 711, column: 4299, scope: !8204)
!8204 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 168)
!8205 = !DILocation(line: 711, column: 4994, scope: !8206)
!8206 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 169)
!8207 = !DILocation(line: 711, column: 5008, scope: !8206)
!8208 = !DILocation(line: 711, column: 5010, scope: !8206)
!8209 = !DILocation(line: 711, column: 5017, scope: !8206)
!8210 = !DILocation(line: 711, column: 5031, scope: !8206)
!8211 = !DILocation(line: 711, column: 5033, scope: !8206)
!8212 = !DILocation(line: 711, column: 5036, scope: !8206)
!8213 = !DILocation(line: 711, column: 5040, scope: !8206)
!8214 = !DILocation(line: 711, column: 5014, scope: !8206)
!8215 = !DILocation(line: 711, column: 4993, scope: !8206)
!8216 = !DILocation(line: 711, column: 5051, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 170)
!8218 = !DILocation(line: 711, column: 5065, scope: !8217)
!8219 = !DILocation(line: 711, column: 5067, scope: !8217)
!8220 = !DILocation(line: 711, column: 4993, scope: !8217)
!8221 = !DILocation(line: 711, column: 5074, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 171)
!8223 = !DILocation(line: 711, column: 5088, scope: !8222)
!8224 = !DILocation(line: 711, column: 5090, scope: !8222)
!8225 = !DILocation(line: 711, column: 5093, scope: !8222)
!8226 = !DILocation(line: 711, column: 5097, scope: !8222)
!8227 = !DILocation(line: 711, column: 4993, scope: !8222)
!8228 = !DILocation(line: 711, column: 4993, scope: !8229)
!8229 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 172)
!8230 = !DILocation(line: 711, column: 5117, scope: !8229)
!8231 = !DILocation(line: 711, column: 5131, scope: !8229)
!8232 = !DILocation(line: 711, column: 5133, scope: !8229)
!8233 = !DILocation(line: 711, column: 5115, scope: !8229)
!8234 = !DILocation(line: 711, column: 5107, scope: !8229)
!8235 = !DILocation(line: 711, column: 4991, scope: !8229)
!8236 = !DILocation(line: 711, column: 5147, scope: !8237)
!8237 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 173)
!8238 = !DILocation(line: 711, column: 5161, scope: !8237)
!8239 = !DILocation(line: 711, column: 5163, scope: !8237)
!8240 = !DILocation(line: 711, column: 5145, scope: !8237)
!8241 = !DILocation(line: 711, column: 4991, scope: !8237)
!8242 = !DILocation(line: 711, column: 5172, scope: !8243)
!8243 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 174)
!8244 = !DILocation(line: 711, column: 5186, scope: !8243)
!8245 = !DILocation(line: 711, column: 5188, scope: !8243)
!8246 = !DILocation(line: 711, column: 5195, scope: !8243)
!8247 = !DILocation(line: 711, column: 5209, scope: !8243)
!8248 = !DILocation(line: 711, column: 5211, scope: !8243)
!8249 = !DILocation(line: 711, column: 5214, scope: !8243)
!8250 = !DILocation(line: 711, column: 5218, scope: !8243)
!8251 = !DILocation(line: 711, column: 5192, scope: !8243)
!8252 = !DILocation(line: 711, column: 5171, scope: !8243)
!8253 = !DILocation(line: 711, column: 5229, scope: !8254)
!8254 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 175)
!8255 = !DILocation(line: 711, column: 5243, scope: !8254)
!8256 = !DILocation(line: 711, column: 5245, scope: !8254)
!8257 = !DILocation(line: 711, column: 5171, scope: !8254)
!8258 = !DILocation(line: 711, column: 5252, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 176)
!8260 = !DILocation(line: 711, column: 5266, scope: !8259)
!8261 = !DILocation(line: 711, column: 5268, scope: !8259)
!8262 = !DILocation(line: 711, column: 5271, scope: !8259)
!8263 = !DILocation(line: 711, column: 5275, scope: !8259)
!8264 = !DILocation(line: 711, column: 5171, scope: !8259)
!8265 = !DILocation(line: 711, column: 5171, scope: !8266)
!8266 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 177)
!8267 = !DILocation(line: 711, column: 4991, scope: !8266)
!8268 = !DILocation(line: 711, column: 4991, scope: !8269)
!8269 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 178)
!8270 = !DILocation(line: 711, column: 5298, scope: !8269)
!8271 = !DILocation(line: 711, column: 5312, scope: !8269)
!8272 = !DILocation(line: 711, column: 5314, scope: !8269)
!8273 = !DILocation(line: 711, column: 5296, scope: !8269)
!8274 = !DILocation(line: 711, column: 5287, scope: !8269)
!8275 = !DILocation(line: 711, column: 4989, scope: !8269)
!8276 = !DILocation(line: 711, column: 5330, scope: !8277)
!8277 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 179)
!8278 = !DILocation(line: 711, column: 5344, scope: !8277)
!8279 = !DILocation(line: 711, column: 5346, scope: !8277)
!8280 = !DILocation(line: 711, column: 5328, scope: !8277)
!8281 = !DILocation(line: 711, column: 4989, scope: !8277)
!8282 = !DILocation(line: 711, column: 5358, scope: !8283)
!8283 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 180)
!8284 = !DILocation(line: 711, column: 5372, scope: !8283)
!8285 = !DILocation(line: 711, column: 5374, scope: !8283)
!8286 = !DILocation(line: 711, column: 5381, scope: !8283)
!8287 = !DILocation(line: 711, column: 5395, scope: !8283)
!8288 = !DILocation(line: 711, column: 5397, scope: !8283)
!8289 = !DILocation(line: 711, column: 5400, scope: !8283)
!8290 = !DILocation(line: 711, column: 5404, scope: !8283)
!8291 = !DILocation(line: 711, column: 5378, scope: !8283)
!8292 = !DILocation(line: 711, column: 5357, scope: !8283)
!8293 = !DILocation(line: 711, column: 5415, scope: !8294)
!8294 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 181)
!8295 = !DILocation(line: 711, column: 5429, scope: !8294)
!8296 = !DILocation(line: 711, column: 5431, scope: !8294)
!8297 = !DILocation(line: 711, column: 5357, scope: !8294)
!8298 = !DILocation(line: 711, column: 5438, scope: !8299)
!8299 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 182)
!8300 = !DILocation(line: 711, column: 5452, scope: !8299)
!8301 = !DILocation(line: 711, column: 5454, scope: !8299)
!8302 = !DILocation(line: 711, column: 5457, scope: !8299)
!8303 = !DILocation(line: 711, column: 5461, scope: !8299)
!8304 = !DILocation(line: 711, column: 5357, scope: !8299)
!8305 = !DILocation(line: 711, column: 5357, scope: !8306)
!8306 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 183)
!8307 = !DILocation(line: 711, column: 5481, scope: !8306)
!8308 = !DILocation(line: 711, column: 5495, scope: !8306)
!8309 = !DILocation(line: 711, column: 5497, scope: !8306)
!8310 = !DILocation(line: 711, column: 5479, scope: !8306)
!8311 = !DILocation(line: 711, column: 5471, scope: !8306)
!8312 = !DILocation(line: 711, column: 5355, scope: !8306)
!8313 = !DILocation(line: 711, column: 5511, scope: !8314)
!8314 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 184)
!8315 = !DILocation(line: 711, column: 5525, scope: !8314)
!8316 = !DILocation(line: 711, column: 5527, scope: !8314)
!8317 = !DILocation(line: 711, column: 5509, scope: !8314)
!8318 = !DILocation(line: 711, column: 5355, scope: !8314)
!8319 = !DILocation(line: 711, column: 5536, scope: !8320)
!8320 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 185)
!8321 = !DILocation(line: 711, column: 5550, scope: !8320)
!8322 = !DILocation(line: 711, column: 5552, scope: !8320)
!8323 = !DILocation(line: 711, column: 5559, scope: !8320)
!8324 = !DILocation(line: 711, column: 5573, scope: !8320)
!8325 = !DILocation(line: 711, column: 5575, scope: !8320)
!8326 = !DILocation(line: 711, column: 5578, scope: !8320)
!8327 = !DILocation(line: 711, column: 5582, scope: !8320)
!8328 = !DILocation(line: 711, column: 5556, scope: !8320)
!8329 = !DILocation(line: 711, column: 5535, scope: !8320)
!8330 = !DILocation(line: 711, column: 5593, scope: !8331)
!8331 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 186)
!8332 = !DILocation(line: 711, column: 5607, scope: !8331)
!8333 = !DILocation(line: 711, column: 5609, scope: !8331)
!8334 = !DILocation(line: 711, column: 5535, scope: !8331)
!8335 = !DILocation(line: 711, column: 5616, scope: !8336)
!8336 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 187)
!8337 = !DILocation(line: 711, column: 5630, scope: !8336)
!8338 = !DILocation(line: 711, column: 5632, scope: !8336)
!8339 = !DILocation(line: 711, column: 5635, scope: !8336)
!8340 = !DILocation(line: 711, column: 5639, scope: !8336)
!8341 = !DILocation(line: 711, column: 5535, scope: !8336)
!8342 = !DILocation(line: 711, column: 5535, scope: !8343)
!8343 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 188)
!8344 = !DILocation(line: 711, column: 5355, scope: !8343)
!8345 = !DILocation(line: 711, column: 5355, scope: !8346)
!8346 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 189)
!8347 = !DILocation(line: 711, column: 4989, scope: !8346)
!8348 = !DILocation(line: 711, column: 4989, scope: !8349)
!8349 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 190)
!8350 = !DILocation(line: 711, column: 4299, scope: !8349)
!8351 = !DILocation(line: 711, column: 4299, scope: !8352)
!8352 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 191)
!8353 = !DILocation(line: 711, column: 2883, scope: !8352)
!8354 = !DILocation(line: 711, column: 2883, scope: !8355)
!8355 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 192)
!8356 = !DILocation(line: 711, column: 2865, scope: !8355)
!8357 = !DILocation(line: 711, column: 5658, scope: !8358)
!8358 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 193)
!8359 = !DILocation(line: 711, column: 5665, scope: !8358)
!8360 = !DILocation(line: 711, column: 5677, scope: !8358)
!8361 = !DILocation(line: 711, column: 2865, scope: !8358)
!8362 = !DILocation(line: 711, column: 2865, scope: !8363)
!8363 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 194)
!8364 = !DILocation(line: 711, column: 22, scope: !8363)
!8365 = !DILocation(line: 711, column: 22, scope: !8366)
!8366 = !DILexicalBlockFile(scope: !7127, file: !957, discriminator: 195)
!8367 = !DILocation(line: 711, column: 19, scope: !8366)
!8368 = !DILocation(line: 714, column: 14, scope: !6980)
!8369 = !DILocation(line: 714, column: 24, scope: !6980)
!8370 = !DILocation(line: 714, column: 30, scope: !6980)
!8371 = !DILocation(line: 714, column: 28, scope: !6980)
!8372 = !DILocation(line: 714, column: 37, scope: !6980)
!8373 = !DILocation(line: 714, column: 44, scope: !6980)
!8374 = !DILocation(line: 714, column: 35, scope: !6980)
!8375 = !DILocation(line: 714, column: 12, scope: !6980)
!8376 = !DILocation(line: 716, column: 12, scope: !6980)
!8377 = !DILocation(line: 716, column: 17, scope: !6980)
!8378 = !DILocation(line: 716, column: 5, scope: !6980)
!8379 = !DILocation(line: 716, column: 27, scope: !6980)
!8380 = !DILocation(line: 716, column: 32, scope: !6980)
!8381 = !DILocation(line: 717, column: 12, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !6980, file: !957, line: 717, column: 5)
!8383 = !DILocation(line: 717, column: 10, scope: !8382)
!8384 = !DILocation(line: 717, column: 17, scope: !8385)
!8385 = !DILexicalBlockFile(scope: !8386, file: !957, discriminator: 1)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !957, line: 717, column: 5)
!8387 = !DILocation(line: 717, column: 21, scope: !8385)
!8388 = !DILocation(line: 717, column: 26, scope: !8385)
!8389 = !DILocation(line: 717, column: 30, scope: !8385)
!8390 = !DILocation(line: 717, column: 19, scope: !8385)
!8391 = !DILocation(line: 717, column: 5, scope: !8385)
!8392 = !DILocation(line: 718, column: 16, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !957, line: 718, column: 9)
!8394 = distinct !DILexicalBlock(scope: !8386, file: !957, line: 717, column: 71)
!8395 = !DILocation(line: 718, column: 14, scope: !8393)
!8396 = !DILocation(line: 718, column: 21, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8398, file: !957, discriminator: 1)
!8398 = distinct !DILexicalBlock(scope: !8393, file: !957, line: 718, column: 9)
!8399 = !DILocation(line: 718, column: 25, scope: !8397)
!8400 = !DILocation(line: 718, column: 30, scope: !8397)
!8401 = !DILocation(line: 718, column: 34, scope: !8397)
!8402 = !DILocation(line: 718, column: 23, scope: !8397)
!8403 = !DILocation(line: 718, column: 9, scope: !8397)
!8404 = !DILocalVariable(name: "sfb_energy", scope: !8405, file: !957, line: 719, type: !954)
!8405 = distinct !DILexicalBlock(scope: !8398, file: !957, line: 718, column: 48)
!8406 = !DILocation(line: 719, column: 19, scope: !8405)
!8407 = !DILocalVariable(name: "threshold", scope: !8405, file: !957, line: 719, type: !954)
!8408 = !DILocation(line: 719, column: 38, scope: !8405)
!8409 = !DILocalVariable(name: "spread", scope: !8405, file: !957, line: 719, type: !954)
!8410 = !DILocation(line: 719, column: 56, scope: !8405)
!8411 = !DILocalVariable(name: "min_energy", scope: !8405, file: !957, line: 720, type: !954)
!8412 = !DILocation(line: 720, column: 19, scope: !8405)
!8413 = !DILocalVariable(name: "max_energy", scope: !8405, file: !957, line: 720, type: !954)
!8414 = !DILocation(line: 720, column: 39, scope: !8405)
!8415 = !DILocalVariable(name: "start", scope: !8405, file: !957, line: 721, type: !1043)
!8416 = !DILocation(line: 721, column: 23, scope: !8405)
!8417 = !DILocation(line: 721, column: 51, scope: !8405)
!8418 = !DILocation(line: 721, column: 31, scope: !8405)
!8419 = !DILocation(line: 721, column: 36, scope: !8405)
!8420 = !DILocation(line: 721, column: 40, scope: !8405)
!8421 = !DILocalVariable(name: "freq", scope: !8405, file: !957, line: 722, type: !1781)
!8422 = !DILocation(line: 722, column: 25, scope: !8405)
!8423 = !DILocation(line: 722, column: 32, scope: !8405)
!8424 = !DILocation(line: 722, column: 38, scope: !8405)
!8425 = !DILocation(line: 722, column: 37, scope: !8405)
!8426 = !DILocalVariable(name: "freq_boost", scope: !8405, file: !957, line: 723, type: !1781)
!8427 = !DILocation(line: 723, column: 25, scope: !8405)
!8428 = !DILocation(line: 723, column: 46, scope: !8405)
!8429 = !DILocation(line: 723, column: 45, scope: !8405)
!8430 = !DILocation(line: 723, column: 50, scope: !8405)
!8431 = !DILocation(line: 723, column: 57, scope: !8405)
!8432 = !DILocation(line: 723, column: 39, scope: !8405)
!8433 = !DILocation(line: 723, column: 75, scope: !8434)
!8434 = !DILexicalBlockFile(scope: !8405, file: !957, discriminator: 1)
!8435 = !DILocation(line: 723, column: 74, scope: !8434)
!8436 = !DILocation(line: 723, column: 79, scope: !8434)
!8437 = !DILocation(line: 723, column: 39, scope: !8434)
!8438 = !DILocation(line: 723, column: 39, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !8405, file: !957, discriminator: 2)
!8440 = !DILocation(line: 723, column: 39, scope: !8441)
!8441 = !DILexicalBlockFile(scope: !8405, file: !957, discriminator: 3)
!8442 = !DILocation(line: 723, column: 25, scope: !8441)
!8443 = !DILocation(line: 724, column: 17, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8405, file: !957, line: 724, column: 17)
!8445 = !DILocation(line: 724, column: 22, scope: !8444)
!8446 = !DILocation(line: 724, column: 29, scope: !8444)
!8447 = !DILocation(line: 724, column: 32, scope: !8448)
!8448 = !DILexicalBlockFile(scope: !8444, file: !957, discriminator: 1)
!8449 = !DILocation(line: 724, column: 41, scope: !8448)
!8450 = !DILocation(line: 724, column: 38, scope: !8448)
!8451 = !DILocation(line: 724, column: 17, scope: !8448)
!8452 = !DILocation(line: 725, column: 30, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8444, file: !957, line: 724, column: 49)
!8454 = !DILocation(line: 725, column: 31, scope: !8453)
!8455 = !DILocation(line: 725, column: 35, scope: !8453)
!8456 = !DILocation(line: 725, column: 34, scope: !8453)
!8457 = !DILocation(line: 725, column: 17, scope: !8453)
!8458 = !DILocation(line: 725, column: 22, scope: !8453)
!8459 = !DILocation(line: 725, column: 38, scope: !8453)
!8460 = !DILocation(line: 726, column: 17, scope: !8453)
!8461 = !DILocation(line: 728, column: 21, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8405, file: !957, line: 728, column: 13)
!8463 = !DILocation(line: 728, column: 18, scope: !8462)
!8464 = !DILocation(line: 728, column: 26, scope: !8465)
!8465 = !DILexicalBlockFile(scope: !8466, file: !957, discriminator: 1)
!8466 = distinct !DILexicalBlock(scope: !8462, file: !957, line: 728, column: 13)
!8467 = !DILocation(line: 728, column: 50, scope: !8465)
!8468 = !DILocation(line: 728, column: 31, scope: !8465)
!8469 = !DILocation(line: 728, column: 36, scope: !8465)
!8470 = !DILocation(line: 728, column: 40, scope: !8465)
!8471 = !DILocation(line: 728, column: 29, scope: !8465)
!8472 = !DILocation(line: 728, column: 13, scope: !8465)
!8473 = !DILocation(line: 729, column: 62, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8466, file: !957, line: 728, column: 60)
!8475 = !DILocation(line: 729, column: 64, scope: !8474)
!8476 = !DILocation(line: 729, column: 63, scope: !8474)
!8477 = !DILocation(line: 729, column: 67, scope: !8474)
!8478 = !DILocation(line: 729, column: 71, scope: !8474)
!8479 = !DILocation(line: 729, column: 70, scope: !8474)
!8480 = !DILocation(line: 729, column: 25, scope: !8474)
!8481 = !DILocation(line: 729, column: 35, scope: !8474)
!8482 = !DILocation(line: 729, column: 38, scope: !8474)
!8483 = !DILocation(line: 729, column: 28, scope: !8474)
!8484 = !DILocation(line: 729, column: 32, scope: !8474)
!8485 = !DILocation(line: 729, column: 51, scope: !8474)
!8486 = !DILocation(line: 729, column: 22, scope: !8474)
!8487 = !DILocation(line: 730, column: 31, scope: !8474)
!8488 = !DILocation(line: 730, column: 37, scope: !8474)
!8489 = !DILocation(line: 730, column: 28, scope: !8474)
!8490 = !DILocation(line: 731, column: 28, scope: !8474)
!8491 = !DILocation(line: 731, column: 39, scope: !8474)
!8492 = !DILocation(line: 731, column: 45, scope: !8474)
!8493 = !DILocation(line: 731, column: 36, scope: !8474)
!8494 = !DILocation(line: 731, column: 27, scope: !8474)
!8495 = !DILocation(line: 731, column: 56, scope: !8496)
!8496 = !DILexicalBlockFile(scope: !8474, file: !957, discriminator: 1)
!8497 = !DILocation(line: 731, column: 62, scope: !8496)
!8498 = !DILocation(line: 731, column: 27, scope: !8496)
!8499 = !DILocation(line: 731, column: 73, scope: !8500)
!8500 = !DILexicalBlockFile(scope: !8474, file: !957, discriminator: 2)
!8501 = !DILocation(line: 731, column: 27, scope: !8500)
!8502 = !DILocation(line: 731, column: 27, scope: !8503)
!8503 = !DILexicalBlockFile(scope: !8474, file: !957, discriminator: 3)
!8504 = !DILocation(line: 731, column: 24, scope: !8503)
!8505 = !DILocation(line: 732, column: 30, scope: !8474)
!8506 = !DILocation(line: 732, column: 36, scope: !8474)
!8507 = !DILocation(line: 732, column: 27, scope: !8474)
!8508 = !DILocation(line: 733, column: 22, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8474, file: !957, line: 733, column: 21)
!8510 = !DILocation(line: 733, column: 21, scope: !8474)
!8511 = !DILocation(line: 734, column: 47, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8509, file: !957, line: 733, column: 26)
!8513 = !DILocation(line: 734, column: 53, scope: !8512)
!8514 = !DILocation(line: 734, column: 45, scope: !8512)
!8515 = !DILocation(line: 734, column: 32, scope: !8512)
!8516 = !DILocation(line: 735, column: 17, scope: !8512)
!8517 = !DILocation(line: 736, column: 36, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8509, file: !957, line: 735, column: 24)
!8519 = !DILocation(line: 736, column: 51, scope: !8518)
!8520 = !DILocation(line: 736, column: 57, scope: !8518)
!8521 = !DILocation(line: 736, column: 48, scope: !8518)
!8522 = !DILocation(line: 736, column: 35, scope: !8518)
!8523 = !DILocation(line: 736, column: 68, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !8518, file: !957, discriminator: 1)
!8525 = !DILocation(line: 736, column: 74, scope: !8524)
!8526 = !DILocation(line: 736, column: 35, scope: !8524)
!8527 = !DILocation(line: 736, column: 85, scope: !8528)
!8528 = !DILexicalBlockFile(scope: !8518, file: !957, discriminator: 2)
!8529 = !DILocation(line: 736, column: 35, scope: !8528)
!8530 = !DILocation(line: 736, column: 35, scope: !8531)
!8531 = !DILexicalBlockFile(scope: !8518, file: !957, discriminator: 3)
!8532 = !DILocation(line: 736, column: 32, scope: !8531)
!8533 = !DILocation(line: 737, column: 36, scope: !8518)
!8534 = !DILocation(line: 737, column: 51, scope: !8518)
!8535 = !DILocation(line: 737, column: 57, scope: !8518)
!8536 = !DILocation(line: 737, column: 48, scope: !8518)
!8537 = !DILocation(line: 737, column: 35, scope: !8518)
!8538 = !DILocation(line: 737, column: 68, scope: !8524)
!8539 = !DILocation(line: 737, column: 35, scope: !8524)
!8540 = !DILocation(line: 737, column: 83, scope: !8528)
!8541 = !DILocation(line: 737, column: 89, scope: !8528)
!8542 = !DILocation(line: 737, column: 35, scope: !8528)
!8543 = !DILocation(line: 737, column: 35, scope: !8531)
!8544 = !DILocation(line: 737, column: 32, scope: !8531)
!8545 = !DILocation(line: 739, column: 13, scope: !8474)
!8546 = !DILocation(line: 728, column: 56, scope: !8547)
!8547 = !DILexicalBlockFile(scope: !8466, file: !957, discriminator: 2)
!8548 = !DILocation(line: 728, column: 13, scope: !8547)
!8549 = distinct !{!8549, !8550}
!8550 = !DILocation(line: 728, column: 13, scope: !8405)
!8551 = !DILocation(line: 746, column: 37, scope: !8405)
!8552 = !DILocation(line: 746, column: 27, scope: !8405)
!8553 = !DILocation(line: 746, column: 28, scope: !8405)
!8554 = !DILocation(line: 746, column: 32, scope: !8405)
!8555 = !DILocation(line: 746, column: 31, scope: !8405)
!8556 = !DILocation(line: 746, column: 13, scope: !8405)
!8557 = !DILocation(line: 746, column: 18, scope: !8405)
!8558 = !DILocation(line: 746, column: 35, scope: !8405)
!8559 = !DILocation(line: 747, column: 17, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8405, file: !957, line: 747, column: 17)
!8561 = !DILocation(line: 747, column: 30, scope: !8560)
!8562 = !DILocation(line: 747, column: 51, scope: !8560)
!8563 = !DILocation(line: 747, column: 50, scope: !8560)
!8564 = !DILocation(line: 747, column: 40, scope: !8560)
!8565 = !DILocation(line: 747, column: 39, scope: !8560)
!8566 = !DILocation(line: 747, column: 28, scope: !8560)
!8567 = !DILocation(line: 747, column: 63, scope: !8560)
!8568 = !DILocation(line: 747, column: 66, scope: !8569)
!8569 = !DILexicalBlockFile(scope: !8560, file: !957, discriminator: 1)
!8570 = !DILocation(line: 747, column: 75, scope: !8569)
!8571 = !DILocation(line: 747, column: 73, scope: !8569)
!8572 = !DILocation(line: 747, column: 92, scope: !8569)
!8573 = !DILocation(line: 747, column: 95, scope: !8574)
!8574 = !DILexicalBlockFile(scope: !8560, file: !957, discriminator: 2)
!8575 = !DILocation(line: 747, column: 108, scope: !8574)
!8576 = !DILocation(line: 747, column: 133, scope: !8574)
!8577 = !DILocation(line: 747, column: 131, scope: !8574)
!8578 = !DILocation(line: 747, column: 106, scope: !8574)
!8579 = !DILocation(line: 747, column: 17, scope: !8574)
!8580 = !DILocation(line: 748, column: 30, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8560, file: !957, line: 747, column: 145)
!8582 = !DILocation(line: 748, column: 31, scope: !8581)
!8583 = !DILocation(line: 748, column: 35, scope: !8581)
!8584 = !DILocation(line: 748, column: 34, scope: !8581)
!8585 = !DILocation(line: 748, column: 17, scope: !8581)
!8586 = !DILocation(line: 748, column: 22, scope: !8581)
!8587 = !DILocation(line: 748, column: 38, scope: !8581)
!8588 = !DILocation(line: 749, column: 13, scope: !8581)
!8589 = !DILocation(line: 750, column: 30, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8560, file: !957, line: 749, column: 20)
!8591 = !DILocation(line: 750, column: 31, scope: !8590)
!8592 = !DILocation(line: 750, column: 35, scope: !8590)
!8593 = !DILocation(line: 750, column: 34, scope: !8590)
!8594 = !DILocation(line: 750, column: 17, scope: !8590)
!8595 = !DILocation(line: 750, column: 22, scope: !8590)
!8596 = !DILocation(line: 750, column: 38, scope: !8590)
!8597 = !DILocation(line: 752, column: 9, scope: !8405)
!8598 = !DILocation(line: 718, column: 44, scope: !8599)
!8599 = !DILexicalBlockFile(scope: !8398, file: !957, discriminator: 2)
!8600 = !DILocation(line: 718, column: 9, scope: !8599)
!8601 = distinct !{!8601, !8602}
!8602 = !DILocation(line: 718, column: 9, scope: !8394)
!8603 = !DILocation(line: 753, column: 5, scope: !8394)
!8604 = !DILocation(line: 717, column: 67, scope: !8605)
!8605 = !DILexicalBlockFile(scope: !8386, file: !957, discriminator: 2)
!8606 = !DILocation(line: 717, column: 48, scope: !8605)
!8607 = !DILocation(line: 717, column: 53, scope: !8605)
!8608 = !DILocation(line: 717, column: 57, scope: !8605)
!8609 = !DILocation(line: 717, column: 45, scope: !8605)
!8610 = !DILocation(line: 717, column: 5, scope: !8605)
!8611 = distinct !{!8611, !8612}
!8612 = !DILocation(line: 717, column: 5, scope: !6980)
!8613 = !DILocation(line: 754, column: 1, scope: !6980)
!8614 = distinct !DISubprogram(name: "search_for_ms", scope: !957, file: !957, line: 756, type: !8615, isLocal: true, isDefinition: true, scopeLine: 757, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!8615 = !DISubroutineType(types: !8616)
!8616 = !{null, !2764, !1891}
!8617 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !8618)
!8618 = distinct !DILocation(line: 810, column: 30, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !957, line: 801, column: 74)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !957, line: 801, column: 17)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !957, line: 801, column: 17)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !957, line: 782, column: 90)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !957, line: 782, column: 17)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !957, line: 778, column: 49)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !957, line: 778, column: 9)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !957, line: 778, column: 9)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !957, line: 776, column: 73)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !957, line: 776, column: 5)
!8629 = distinct !DILexicalBlock(scope: !8614, file: !957, line: 776, column: 5)
!8630 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !8618)
!8631 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !8618)
!8632 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !8633)
!8633 = distinct !DILocation(line: 809, column: 30, scope: !8619)
!8634 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !8633)
!8635 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !8633)
!8636 = !DILocalVariable(name: "b", arg: 1, scope: !8637, file: !4818, line: 188, type: !954)
!8637 = distinct !DISubprogram(name: "bval2bmax", scope: !4818, file: !4818, line: 188, type: !8638, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!954, !954}
!8640 = !DILocation(line: 188, column: 68, scope: !8637, inlinedAt: !8641)
!8641 = distinct !DILocation(line: 779, column: 26, scope: !8624)
!8642 = !DILocalVariable(name: "s", arg: 1, scope: !8614, file: !957, line: 756, type: !2764)
!8643 = !DILocation(line: 756, column: 42, scope: !8614)
!8644 = !DILocalVariable(name: "cpe", arg: 2, scope: !8614, file: !957, line: 756, type: !1891)
!8645 = !DILocation(line: 756, column: 61, scope: !8614)
!8646 = !DILocalVariable(name: "start", scope: !8614, file: !957, line: 758, type: !991)
!8647 = !DILocation(line: 758, column: 9, scope: !8614)
!8648 = !DILocalVariable(name: "i", scope: !8614, file: !957, line: 758, type: !991)
!8649 = !DILocation(line: 758, column: 20, scope: !8614)
!8650 = !DILocalVariable(name: "w", scope: !8614, file: !957, line: 758, type: !991)
!8651 = !DILocation(line: 758, column: 23, scope: !8614)
!8652 = !DILocalVariable(name: "w2", scope: !8614, file: !957, line: 758, type: !991)
!8653 = !DILocation(line: 758, column: 26, scope: !8614)
!8654 = !DILocalVariable(name: "g", scope: !8614, file: !957, line: 758, type: !991)
!8655 = !DILocation(line: 758, column: 30, scope: !8614)
!8656 = !DILocalVariable(name: "sid_sf_boost", scope: !8614, file: !957, line: 758, type: !991)
!8657 = !DILocation(line: 758, column: 33, scope: !8614)
!8658 = !DILocalVariable(name: "prev_mid", scope: !8614, file: !957, line: 758, type: !991)
!8659 = !DILocation(line: 758, column: 47, scope: !8614)
!8660 = !DILocalVariable(name: "prev_side", scope: !8614, file: !957, line: 758, type: !991)
!8661 = !DILocation(line: 758, column: 57, scope: !8614)
!8662 = !DILocalVariable(name: "nextband0", scope: !8614, file: !957, line: 759, type: !1900)
!8663 = !DILocation(line: 759, column: 13, scope: !8614)
!8664 = !DILocalVariable(name: "nextband1", scope: !8614, file: !957, line: 759, type: !1900)
!8665 = !DILocation(line: 759, column: 29, scope: !8614)
!8666 = !DILocalVariable(name: "M", scope: !8614, file: !957, line: 760, type: !1779)
!8667 = !DILocation(line: 760, column: 12, scope: !8614)
!8668 = !DILocation(line: 760, column: 16, scope: !8614)
!8669 = !DILocation(line: 760, column: 19, scope: !8614)
!8670 = !DILocation(line: 760, column: 26, scope: !8614)
!8671 = !DILocalVariable(name: "S", scope: !8614, file: !957, line: 760, type: !1779)
!8672 = !DILocation(line: 760, column: 36, scope: !8614)
!8673 = !DILocation(line: 760, column: 40, scope: !8614)
!8674 = !DILocation(line: 760, column: 43, scope: !8614)
!8675 = !DILocation(line: 760, column: 50, scope: !8614)
!8676 = !DILocalVariable(name: "L34", scope: !8614, file: !957, line: 761, type: !1779)
!8677 = !DILocation(line: 761, column: 12, scope: !8614)
!8678 = !DILocation(line: 761, column: 18, scope: !8614)
!8679 = !DILocation(line: 761, column: 21, scope: !8614)
!8680 = !DILocation(line: 761, column: 28, scope: !8614)
!8681 = !DILocalVariable(name: "R34", scope: !8614, file: !957, line: 761, type: !1779)
!8682 = !DILocation(line: 761, column: 38, scope: !8614)
!8683 = !DILocation(line: 761, column: 44, scope: !8614)
!8684 = !DILocation(line: 761, column: 47, scope: !8614)
!8685 = !DILocation(line: 761, column: 54, scope: !8614)
!8686 = !DILocalVariable(name: "M34", scope: !8614, file: !957, line: 762, type: !1779)
!8687 = !DILocation(line: 762, column: 12, scope: !8614)
!8688 = !DILocation(line: 762, column: 18, scope: !8614)
!8689 = !DILocation(line: 762, column: 21, scope: !8614)
!8690 = !DILocation(line: 762, column: 28, scope: !8614)
!8691 = !DILocalVariable(name: "S34", scope: !8614, file: !957, line: 762, type: !1779)
!8692 = !DILocation(line: 762, column: 38, scope: !8614)
!8693 = !DILocation(line: 762, column: 44, scope: !8614)
!8694 = !DILocation(line: 762, column: 47, scope: !8614)
!8695 = !DILocation(line: 762, column: 54, scope: !8614)
!8696 = !DILocalVariable(name: "lambda", scope: !8614, file: !957, line: 763, type: !1781)
!8697 = !DILocation(line: 763, column: 17, scope: !8614)
!8698 = !DILocation(line: 763, column: 26, scope: !8614)
!8699 = !DILocation(line: 763, column: 29, scope: !8614)
!8700 = !DILocalVariable(name: "mslambda", scope: !8614, file: !957, line: 764, type: !1781)
!8701 = !DILocation(line: 764, column: 17, scope: !8614)
!8702 = !DILocation(line: 764, column: 39, scope: !8614)
!8703 = !DILocation(line: 764, column: 46, scope: !8614)
!8704 = !DILocation(line: 764, column: 36, scope: !8614)
!8705 = !DILocation(line: 764, column: 29, scope: !8614)
!8706 = !DILocation(line: 764, column: 58, scope: !8707)
!8707 = !DILexicalBlockFile(scope: !8614, file: !957, discriminator: 1)
!8708 = !DILocation(line: 764, column: 65, scope: !8707)
!8709 = !DILocation(line: 764, column: 29, scope: !8707)
!8710 = !DILocation(line: 764, column: 29, scope: !8711)
!8711 = !DILexicalBlockFile(scope: !8614, file: !957, discriminator: 2)
!8712 = !DILocation(line: 764, column: 29, scope: !8713)
!8713 = !DILexicalBlockFile(scope: !8614, file: !957, discriminator: 3)
!8714 = !DILocation(line: 764, column: 17, scope: !8713)
!8715 = !DILocalVariable(name: "sce0", scope: !8614, file: !957, line: 765, type: !2458)
!8716 = !DILocation(line: 765, column: 27, scope: !8614)
!8717 = !DILocation(line: 765, column: 35, scope: !8614)
!8718 = !DILocation(line: 765, column: 40, scope: !8614)
!8719 = !DILocalVariable(name: "sce1", scope: !8614, file: !957, line: 766, type: !2458)
!8720 = !DILocation(line: 766, column: 27, scope: !8614)
!8721 = !DILocation(line: 766, column: 35, scope: !8614)
!8722 = !DILocation(line: 766, column: 40, scope: !8614)
!8723 = !DILocation(line: 767, column: 10, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8614, file: !957, line: 767, column: 9)
!8725 = !DILocation(line: 767, column: 15, scope: !8724)
!8726 = !DILocation(line: 767, column: 9, scope: !8614)
!8727 = !DILocation(line: 768, column: 9, scope: !8724)
!8728 = !DILocation(line: 771, column: 26, scope: !8614)
!8729 = !DILocation(line: 771, column: 32, scope: !8614)
!8730 = !DILocation(line: 771, column: 5, scope: !8614)
!8731 = !DILocation(line: 772, column: 26, scope: !8614)
!8732 = !DILocation(line: 772, column: 32, scope: !8614)
!8733 = !DILocation(line: 772, column: 5, scope: !8614)
!8734 = !DILocation(line: 774, column: 16, scope: !8614)
!8735 = !DILocation(line: 774, column: 22, scope: !8614)
!8736 = !DILocation(line: 774, column: 14, scope: !8614)
!8737 = !DILocation(line: 775, column: 17, scope: !8614)
!8738 = !DILocation(line: 775, column: 23, scope: !8614)
!8739 = !DILocation(line: 775, column: 15, scope: !8614)
!8740 = !DILocation(line: 776, column: 12, scope: !8629)
!8741 = !DILocation(line: 776, column: 10, scope: !8629)
!8742 = !DILocation(line: 776, column: 17, scope: !8743)
!8743 = !DILexicalBlockFile(scope: !8628, file: !957, discriminator: 1)
!8744 = !DILocation(line: 776, column: 21, scope: !8743)
!8745 = !DILocation(line: 776, column: 27, scope: !8743)
!8746 = !DILocation(line: 776, column: 31, scope: !8743)
!8747 = !DILocation(line: 776, column: 19, scope: !8743)
!8748 = !DILocation(line: 776, column: 5, scope: !8743)
!8749 = !DILocation(line: 777, column: 15, scope: !8627)
!8750 = !DILocation(line: 778, column: 16, scope: !8626)
!8751 = !DILocation(line: 778, column: 14, scope: !8626)
!8752 = !DILocation(line: 778, column: 21, scope: !8753)
!8753 = !DILexicalBlockFile(scope: !8625, file: !957, discriminator: 1)
!8754 = !DILocation(line: 778, column: 25, scope: !8753)
!8755 = !DILocation(line: 778, column: 31, scope: !8753)
!8756 = !DILocation(line: 778, column: 35, scope: !8753)
!8757 = !DILocation(line: 778, column: 23, scope: !8753)
!8758 = !DILocation(line: 778, column: 9, scope: !8753)
!8759 = !DILocalVariable(name: "bmax", scope: !8624, file: !957, line: 779, type: !954)
!8760 = !DILocation(line: 779, column: 19, scope: !8624)
!8761 = !DILocation(line: 779, column: 36, scope: !8624)
!8762 = !DILocation(line: 779, column: 38, scope: !8624)
!8763 = !DILocation(line: 779, column: 48, scope: !8624)
!8764 = !DILocation(line: 779, column: 54, scope: !8624)
!8765 = !DILocation(line: 779, column: 58, scope: !8624)
!8766 = !DILocation(line: 779, column: 46, scope: !8624)
!8767 = !DILocation(line: 779, column: 26, scope: !8624)
!8768 = !DILocation(line: 190, column: 32, scope: !8637, inlinedAt: !8641)
!8769 = !DILocation(line: 190, column: 34, scope: !8637, inlinedAt: !8641)
!8770 = !DILocation(line: 190, column: 33, scope: !8637, inlinedAt: !8641)
!8771 = !DILocation(line: 190, column: 36, scope: !8637, inlinedAt: !8641)
!8772 = !DILocation(line: 190, column: 35, scope: !8637, inlinedAt: !8641)
!8773 = !DILocation(line: 190, column: 29, scope: !8637, inlinedAt: !8641)
!8774 = !DILocation(line: 190, column: 39, scope: !8637, inlinedAt: !8641)
!8775 = !DILocation(line: 190, column: 19, scope: !8637, inlinedAt: !8641)
!8776 = !DILocation(line: 779, column: 67, scope: !8624)
!8777 = !DILocation(line: 780, column: 31, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8624, file: !957, line: 780, column: 17)
!8779 = !DILocation(line: 780, column: 32, scope: !8778)
!8780 = !DILocation(line: 780, column: 36, scope: !8778)
!8781 = !DILocation(line: 780, column: 35, scope: !8778)
!8782 = !DILocation(line: 780, column: 18, scope: !8778)
!8783 = !DILocation(line: 780, column: 23, scope: !8778)
!8784 = !DILocation(line: 780, column: 17, scope: !8624)
!8785 = !DILocation(line: 781, column: 30, scope: !8778)
!8786 = !DILocation(line: 781, column: 31, scope: !8778)
!8787 = !DILocation(line: 781, column: 35, scope: !8778)
!8788 = !DILocation(line: 781, column: 34, scope: !8778)
!8789 = !DILocation(line: 781, column: 17, scope: !8778)
!8790 = !DILocation(line: 781, column: 22, scope: !8778)
!8791 = !DILocation(line: 781, column: 38, scope: !8778)
!8792 = !DILocation(line: 782, column: 31, scope: !8623)
!8793 = !DILocation(line: 782, column: 32, scope: !8623)
!8794 = !DILocation(line: 782, column: 36, scope: !8623)
!8795 = !DILocation(line: 782, column: 35, scope: !8623)
!8796 = !DILocation(line: 782, column: 18, scope: !8623)
!8797 = !DILocation(line: 782, column: 24, scope: !8623)
!8798 = !DILocation(line: 782, column: 39, scope: !8623)
!8799 = !DILocation(line: 782, column: 56, scope: !8800)
!8800 = !DILexicalBlockFile(scope: !8623, file: !957, discriminator: 1)
!8801 = !DILocation(line: 782, column: 57, scope: !8800)
!8802 = !DILocation(line: 782, column: 61, scope: !8800)
!8803 = !DILocation(line: 782, column: 60, scope: !8800)
!8804 = !DILocation(line: 782, column: 43, scope: !8800)
!8805 = !DILocation(line: 782, column: 49, scope: !8800)
!8806 = !DILocation(line: 782, column: 64, scope: !8800)
!8807 = !DILocation(line: 782, column: 81, scope: !8808)
!8808 = !DILexicalBlockFile(scope: !8623, file: !957, discriminator: 2)
!8809 = !DILocation(line: 782, column: 82, scope: !8808)
!8810 = !DILocation(line: 782, column: 86, scope: !8808)
!8811 = !DILocation(line: 782, column: 85, scope: !8808)
!8812 = !DILocation(line: 782, column: 68, scope: !8808)
!8813 = !DILocation(line: 782, column: 73, scope: !8808)
!8814 = !DILocation(line: 782, column: 17, scope: !8808)
!8815 = !DILocalVariable(name: "Mmax", scope: !8622, file: !957, line: 783, type: !954)
!8816 = !DILocation(line: 783, column: 23, scope: !8622)
!8817 = !DILocalVariable(name: "Smax", scope: !8622, file: !957, line: 783, type: !954)
!8818 = !DILocation(line: 783, column: 36, scope: !8622)
!8819 = !DILocation(line: 786, column: 25, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8622, file: !957, line: 786, column: 17)
!8821 = !DILocation(line: 786, column: 22, scope: !8820)
!8822 = !DILocation(line: 786, column: 30, scope: !8823)
!8823 = !DILexicalBlockFile(scope: !8824, file: !957, discriminator: 1)
!8824 = distinct !DILexicalBlock(scope: !8820, file: !957, line: 786, column: 17)
!8825 = !DILocation(line: 786, column: 55, scope: !8823)
!8826 = !DILocation(line: 786, column: 35, scope: !8823)
!8827 = !DILocation(line: 786, column: 41, scope: !8823)
!8828 = !DILocation(line: 786, column: 45, scope: !8823)
!8829 = !DILocation(line: 786, column: 33, scope: !8823)
!8830 = !DILocation(line: 786, column: 17, scope: !8823)
!8831 = !DILocation(line: 787, column: 28, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !957, line: 787, column: 21)
!8833 = distinct !DILexicalBlock(scope: !8824, file: !957, line: 786, column: 65)
!8834 = !DILocation(line: 787, column: 26, scope: !8832)
!8835 = !DILocation(line: 787, column: 33, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !8837, file: !957, discriminator: 1)
!8837 = distinct !DILexicalBlock(scope: !8832, file: !957, line: 787, column: 21)
!8838 = !DILocation(line: 787, column: 57, scope: !8836)
!8839 = !DILocation(line: 787, column: 37, scope: !8836)
!8840 = !DILocation(line: 787, column: 43, scope: !8836)
!8841 = !DILocation(line: 787, column: 47, scope: !8836)
!8842 = !DILocation(line: 787, column: 35, scope: !8836)
!8843 = !DILocation(line: 787, column: 21, scope: !8836)
!8844 = !DILocation(line: 788, column: 46, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8837, file: !957, line: 787, column: 66)
!8846 = !DILocation(line: 788, column: 53, scope: !8845)
!8847 = !DILocation(line: 788, column: 55, scope: !8845)
!8848 = !DILocation(line: 788, column: 54, scope: !8845)
!8849 = !DILocation(line: 788, column: 58, scope: !8845)
!8850 = !DILocation(line: 788, column: 51, scope: !8845)
!8851 = !DILocation(line: 788, column: 63, scope: !8845)
!8852 = !DILocation(line: 788, column: 62, scope: !8845)
!8853 = !DILocation(line: 788, column: 33, scope: !8845)
!8854 = !DILocation(line: 788, column: 39, scope: !8845)
!8855 = !DILocation(line: 789, column: 46, scope: !8845)
!8856 = !DILocation(line: 789, column: 53, scope: !8845)
!8857 = !DILocation(line: 789, column: 55, scope: !8845)
!8858 = !DILocation(line: 789, column: 54, scope: !8845)
!8859 = !DILocation(line: 789, column: 58, scope: !8845)
!8860 = !DILocation(line: 789, column: 51, scope: !8845)
!8861 = !DILocation(line: 789, column: 63, scope: !8845)
!8862 = !DILocation(line: 789, column: 62, scope: !8845)
!8863 = !DILocation(line: 789, column: 33, scope: !8845)
!8864 = !DILocation(line: 789, column: 39, scope: !8845)
!8865 = !DILocation(line: 789, column: 31, scope: !8845)
!8866 = !DILocation(line: 788, column: 32, scope: !8845)
!8867 = !DILocation(line: 789, column: 67, scope: !8845)
!8868 = !DILocation(line: 788, column: 27, scope: !8845)
!8869 = !DILocation(line: 788, column: 25, scope: !8845)
!8870 = !DILocation(line: 788, column: 30, scope: !8845)
!8871 = !DILocation(line: 790, column: 34, scope: !8845)
!8872 = !DILocation(line: 790, column: 32, scope: !8845)
!8873 = !DILocation(line: 791, column: 46, scope: !8845)
!8874 = !DILocation(line: 791, column: 53, scope: !8845)
!8875 = !DILocation(line: 791, column: 55, scope: !8845)
!8876 = !DILocation(line: 791, column: 54, scope: !8845)
!8877 = !DILocation(line: 791, column: 58, scope: !8845)
!8878 = !DILocation(line: 791, column: 51, scope: !8845)
!8879 = !DILocation(line: 791, column: 63, scope: !8845)
!8880 = !DILocation(line: 791, column: 62, scope: !8845)
!8881 = !DILocation(line: 791, column: 33, scope: !8845)
!8882 = !DILocation(line: 791, column: 39, scope: !8845)
!8883 = !DILocation(line: 791, column: 31, scope: !8845)
!8884 = !DILocation(line: 790, column: 27, scope: !8845)
!8885 = !DILocation(line: 790, column: 25, scope: !8845)
!8886 = !DILocation(line: 790, column: 30, scope: !8845)
!8887 = !DILocation(line: 792, column: 21, scope: !8845)
!8888 = !DILocation(line: 787, column: 62, scope: !8889)
!8889 = !DILexicalBlockFile(scope: !8837, file: !957, discriminator: 2)
!8890 = !DILocation(line: 787, column: 21, scope: !8889)
!8891 = distinct !{!8891, !8892}
!8892 = !DILocation(line: 787, column: 21, scope: !8833)
!8893 = !DILocation(line: 793, column: 21, scope: !8833)
!8894 = !DILocation(line: 793, column: 24, scope: !8833)
!8895 = !DILocation(line: 793, column: 34, scope: !8833)
!8896 = !DILocation(line: 793, column: 39, scope: !8833)
!8897 = !DILocation(line: 793, column: 62, scope: !8833)
!8898 = !DILocation(line: 793, column: 42, scope: !8833)
!8899 = !DILocation(line: 793, column: 48, scope: !8833)
!8900 = !DILocation(line: 793, column: 52, scope: !8833)
!8901 = !DILocation(line: 794, column: 21, scope: !8833)
!8902 = !DILocation(line: 794, column: 24, scope: !8833)
!8903 = !DILocation(line: 794, column: 34, scope: !8833)
!8904 = !DILocation(line: 794, column: 39, scope: !8833)
!8905 = !DILocation(line: 794, column: 62, scope: !8833)
!8906 = !DILocation(line: 794, column: 42, scope: !8833)
!8907 = !DILocation(line: 794, column: 48, scope: !8833)
!8908 = !DILocation(line: 794, column: 52, scope: !8833)
!8909 = !DILocation(line: 795, column: 28, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8833, file: !957, line: 795, column: 21)
!8911 = !DILocation(line: 795, column: 26, scope: !8910)
!8912 = !DILocation(line: 795, column: 33, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !8914, file: !957, discriminator: 1)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !957, line: 795, column: 21)
!8915 = !DILocation(line: 795, column: 57, scope: !8913)
!8916 = !DILocation(line: 795, column: 37, scope: !8913)
!8917 = !DILocation(line: 795, column: 43, scope: !8913)
!8918 = !DILocation(line: 795, column: 47, scope: !8913)
!8919 = !DILocation(line: 795, column: 35, scope: !8913)
!8920 = !DILocation(line: 795, column: 21, scope: !8913)
!8921 = !DILocation(line: 796, column: 34, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8914, file: !957, line: 795, column: 67)
!8923 = !DILocation(line: 796, column: 47, scope: !8922)
!8924 = !DILocation(line: 796, column: 43, scope: !8922)
!8925 = !DILocation(line: 796, column: 40, scope: !8922)
!8926 = !DILocation(line: 796, column: 33, scope: !8922)
!8927 = !DILocation(line: 796, column: 54, scope: !8928)
!8928 = !DILexicalBlockFile(scope: !8922, file: !957, discriminator: 1)
!8929 = !DILocation(line: 796, column: 33, scope: !8928)
!8930 = !DILocation(line: 796, column: 67, scope: !8931)
!8931 = !DILexicalBlockFile(scope: !8922, file: !957, discriminator: 2)
!8932 = !DILocation(line: 796, column: 63, scope: !8931)
!8933 = !DILocation(line: 796, column: 33, scope: !8931)
!8934 = !DILocation(line: 796, column: 33, scope: !8935)
!8935 = !DILexicalBlockFile(scope: !8922, file: !957, discriminator: 3)
!8936 = !DILocation(line: 796, column: 30, scope: !8935)
!8937 = !DILocation(line: 797, column: 34, scope: !8922)
!8938 = !DILocation(line: 797, column: 47, scope: !8922)
!8939 = !DILocation(line: 797, column: 43, scope: !8922)
!8940 = !DILocation(line: 797, column: 40, scope: !8922)
!8941 = !DILocation(line: 797, column: 33, scope: !8922)
!8942 = !DILocation(line: 797, column: 54, scope: !8928)
!8943 = !DILocation(line: 797, column: 33, scope: !8928)
!8944 = !DILocation(line: 797, column: 67, scope: !8931)
!8945 = !DILocation(line: 797, column: 63, scope: !8931)
!8946 = !DILocation(line: 797, column: 33, scope: !8931)
!8947 = !DILocation(line: 797, column: 33, scope: !8935)
!8948 = !DILocation(line: 797, column: 30, scope: !8935)
!8949 = !DILocation(line: 798, column: 21, scope: !8922)
!8950 = !DILocation(line: 795, column: 62, scope: !8951)
!8951 = !DILexicalBlockFile(scope: !8914, file: !957, discriminator: 2)
!8952 = !DILocation(line: 795, column: 21, scope: !8951)
!8953 = distinct !{!8953, !8954}
!8954 = !DILocation(line: 795, column: 21, scope: !8833)
!8955 = !DILocation(line: 799, column: 17, scope: !8833)
!8956 = !DILocation(line: 786, column: 61, scope: !8957)
!8957 = !DILexicalBlockFile(scope: !8824, file: !957, discriminator: 2)
!8958 = !DILocation(line: 786, column: 17, scope: !8957)
!8959 = distinct !{!8959, !8960}
!8960 = !DILocation(line: 786, column: 17, scope: !8622)
!8961 = !DILocation(line: 801, column: 35, scope: !8621)
!8962 = !DILocation(line: 801, column: 22, scope: !8621)
!8963 = !DILocation(line: 801, column: 40, scope: !8964)
!8964 = !DILexicalBlockFile(scope: !8620, file: !957, discriminator: 1)
!8965 = !DILocation(line: 801, column: 53, scope: !8964)
!8966 = !DILocation(line: 801, column: 17, scope: !8964)
!8967 = !DILocalVariable(name: "dist1", scope: !8619, file: !957, line: 802, type: !954)
!8968 = !DILocation(line: 802, column: 27, scope: !8619)
!8969 = !DILocalVariable(name: "dist2", scope: !8619, file: !957, line: 802, type: !954)
!8970 = !DILocation(line: 802, column: 41, scope: !8619)
!8971 = !DILocalVariable(name: "B0", scope: !8619, file: !957, line: 803, type: !991)
!8972 = !DILocation(line: 803, column: 25, scope: !8619)
!8973 = !DILocalVariable(name: "B1", scope: !8619, file: !957, line: 803, type: !991)
!8974 = !DILocation(line: 803, column: 33, scope: !8619)
!8975 = !DILocalVariable(name: "minidx", scope: !8619, file: !957, line: 804, type: !991)
!8976 = !DILocation(line: 804, column: 25, scope: !8619)
!8977 = !DILocalVariable(name: "mididx", scope: !8619, file: !957, line: 805, type: !991)
!8978 = !DILocation(line: 805, column: 25, scope: !8619)
!8979 = !DILocalVariable(name: "sididx", scope: !8619, file: !957, line: 805, type: !991)
!8980 = !DILocation(line: 805, column: 33, scope: !8619)
!8981 = !DILocalVariable(name: "midcb", scope: !8619, file: !957, line: 806, type: !991)
!8982 = !DILocation(line: 806, column: 25, scope: !8619)
!8983 = !DILocalVariable(name: "sidcb", scope: !8619, file: !957, line: 806, type: !991)
!8984 = !DILocation(line: 806, column: 32, scope: !8619)
!8985 = !DILocation(line: 808, column: 45, scope: !8619)
!8986 = !DILocation(line: 808, column: 46, scope: !8619)
!8987 = !DILocation(line: 808, column: 50, scope: !8619)
!8988 = !DILocation(line: 808, column: 49, scope: !8619)
!8989 = !DILocation(line: 808, column: 32, scope: !8619)
!8990 = !DILocation(line: 808, column: 38, scope: !8619)
!8991 = !DILocation(line: 808, column: 70, scope: !8619)
!8992 = !DILocation(line: 808, column: 71, scope: !8619)
!8993 = !DILocation(line: 808, column: 75, scope: !8619)
!8994 = !DILocation(line: 808, column: 74, scope: !8619)
!8995 = !DILocation(line: 808, column: 57, scope: !8619)
!8996 = !DILocation(line: 808, column: 63, scope: !8619)
!8997 = !DILocation(line: 808, column: 54, scope: !8619)
!8998 = !DILocation(line: 808, column: 31, scope: !8619)
!8999 = !DILocation(line: 808, column: 95, scope: !9000)
!9000 = !DILexicalBlockFile(scope: !8619, file: !957, discriminator: 1)
!9001 = !DILocation(line: 808, column: 96, scope: !9000)
!9002 = !DILocation(line: 808, column: 100, scope: !9000)
!9003 = !DILocation(line: 808, column: 99, scope: !9000)
!9004 = !DILocation(line: 808, column: 82, scope: !9000)
!9005 = !DILocation(line: 808, column: 88, scope: !9000)
!9006 = !DILocation(line: 808, column: 31, scope: !9000)
!9007 = !DILocation(line: 808, column: 120, scope: !9008)
!9008 = !DILexicalBlockFile(scope: !8619, file: !957, discriminator: 2)
!9009 = !DILocation(line: 808, column: 121, scope: !9008)
!9010 = !DILocation(line: 808, column: 125, scope: !9008)
!9011 = !DILocation(line: 808, column: 124, scope: !9008)
!9012 = !DILocation(line: 808, column: 107, scope: !9008)
!9013 = !DILocation(line: 808, column: 113, scope: !9008)
!9014 = !DILocation(line: 808, column: 31, scope: !9008)
!9015 = !DILocation(line: 808, column: 31, scope: !9016)
!9016 = !DILexicalBlockFile(scope: !8619, file: !957, discriminator: 3)
!9017 = !DILocation(line: 808, column: 28, scope: !9016)
!9018 = !DILocation(line: 809, column: 40, scope: !8619)
!9019 = !DILocation(line: 809, column: 30, scope: !8619)
!9020 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !8633)
!9021 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !8633)
!9022 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !8633)
!9023 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !8633)
!9024 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !8633)
!9025 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !8633)
!9026 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !8633)
!9027 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !8633)
!9028 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !8633)
!9029 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !8633)
!9030 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !8633)
!9031 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !8633)
!9032 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !8633)
!9033 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !8633)
!9034 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !8633)
!9035 = !DILocation(line: 809, column: 28, scope: !8619)
!9036 = !DILocation(line: 810, column: 40, scope: !8619)
!9037 = !DILocation(line: 810, column: 49, scope: !8619)
!9038 = !DILocation(line: 810, column: 62, scope: !8619)
!9039 = !DILocation(line: 810, column: 47, scope: !8619)
!9040 = !DILocation(line: 810, column: 30, scope: !8619)
!9041 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !8618)
!9042 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !8618)
!9043 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !8618)
!9044 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !8618)
!9045 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !8618)
!9046 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !8618)
!9047 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !8618)
!9048 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !8618)
!9049 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !8618)
!9050 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !8618)
!9051 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !8618)
!9052 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !8618)
!9053 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !8618)
!9054 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !8618)
!9055 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !8618)
!9056 = !DILocation(line: 810, column: 28, scope: !8619)
!9057 = !DILocation(line: 811, column: 41, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !8619, file: !957, line: 811, column: 25)
!9059 = !DILocation(line: 811, column: 42, scope: !9058)
!9060 = !DILocation(line: 811, column: 46, scope: !9058)
!9061 = !DILocation(line: 811, column: 45, scope: !9058)
!9062 = !DILocation(line: 811, column: 25, scope: !9058)
!9063 = !DILocation(line: 811, column: 31, scope: !9058)
!9064 = !DILocation(line: 811, column: 49, scope: !9058)
!9065 = !DILocation(line: 811, column: 61, scope: !9058)
!9066 = !DILocation(line: 811, column: 80, scope: !9067)
!9067 = !DILexicalBlockFile(scope: !9058, file: !957, discriminator: 1)
!9068 = !DILocation(line: 811, column: 81, scope: !9067)
!9069 = !DILocation(line: 811, column: 85, scope: !9067)
!9070 = !DILocation(line: 811, column: 84, scope: !9067)
!9071 = !DILocation(line: 811, column: 64, scope: !9067)
!9072 = !DILocation(line: 811, column: 70, scope: !9067)
!9073 = !DILocation(line: 811, column: 88, scope: !9067)
!9074 = !DILocation(line: 812, column: 25, scope: !9058)
!9075 = !DILocation(line: 812, column: 54, scope: !9067)
!9076 = !DILocation(line: 812, column: 60, scope: !9067)
!9077 = !DILocation(line: 812, column: 71, scope: !9067)
!9078 = !DILocation(line: 812, column: 81, scope: !9067)
!9079 = !DILocation(line: 812, column: 89, scope: !9067)
!9080 = !DILocation(line: 812, column: 90, scope: !9067)
!9081 = !DILocation(line: 812, column: 94, scope: !9067)
!9082 = !DILocation(line: 812, column: 93, scope: !9067)
!9083 = !DILocation(line: 812, column: 31, scope: !9067)
!9084 = !DILocation(line: 813, column: 29, scope: !9058)
!9085 = !DILocation(line: 813, column: 56, scope: !9067)
!9086 = !DILocation(line: 813, column: 62, scope: !9067)
!9087 = !DILocation(line: 813, column: 73, scope: !9067)
!9088 = !DILocation(line: 813, column: 84, scope: !9067)
!9089 = !DILocation(line: 813, column: 92, scope: !9067)
!9090 = !DILocation(line: 813, column: 93, scope: !9067)
!9091 = !DILocation(line: 813, column: 97, scope: !9067)
!9092 = !DILocation(line: 813, column: 96, scope: !9067)
!9093 = !DILocation(line: 813, column: 33, scope: !9067)
!9094 = !DILocation(line: 811, column: 25, scope: !9008)
!9095 = !DILocation(line: 815, column: 25, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9058, file: !957, line: 813, column: 102)
!9097 = !DILocation(line: 818, column: 43, scope: !8619)
!9098 = !DILocation(line: 818, column: 49, scope: !8619)
!9099 = !DILocation(line: 818, column: 29, scope: !8619)
!9100 = !DILocation(line: 818, column: 27, scope: !8619)
!9101 = !DILocation(line: 819, column: 43, scope: !8619)
!9102 = !DILocation(line: 819, column: 49, scope: !8619)
!9103 = !DILocation(line: 819, column: 29, scope: !8619)
!9104 = !DILocation(line: 819, column: 27, scope: !8619)
!9105 = !DILocation(line: 822, column: 37, scope: !8619)
!9106 = !DILocation(line: 822, column: 34, scope: !8619)
!9107 = !DILocation(line: 822, column: 30, scope: !8619)
!9108 = !DILocation(line: 822, column: 30, scope: !9000)
!9109 = !DILocation(line: 822, column: 53, scope: !9008)
!9110 = !DILocation(line: 822, column: 30, scope: !9008)
!9111 = !DILocation(line: 822, column: 30, scope: !9016)
!9112 = !DILocation(line: 822, column: 27, scope: !9016)
!9113 = !DILocation(line: 823, column: 37, scope: !8619)
!9114 = !DILocation(line: 823, column: 34, scope: !8619)
!9115 = !DILocation(line: 823, column: 30, scope: !8619)
!9116 = !DILocation(line: 823, column: 30, scope: !9000)
!9117 = !DILocation(line: 823, column: 53, scope: !9008)
!9118 = !DILocation(line: 823, column: 30, scope: !9008)
!9119 = !DILocation(line: 823, column: 30, scope: !9016)
!9120 = !DILocation(line: 823, column: 27, scope: !9016)
!9121 = !DILocation(line: 825, column: 29, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !8619, file: !957, line: 825, column: 21)
!9123 = !DILocation(line: 825, column: 26, scope: !9122)
!9124 = !DILocation(line: 825, column: 34, scope: !9125)
!9125 = !DILexicalBlockFile(scope: !9126, file: !957, discriminator: 1)
!9126 = distinct !DILexicalBlock(scope: !9122, file: !957, line: 825, column: 21)
!9127 = !DILocation(line: 825, column: 59, scope: !9125)
!9128 = !DILocation(line: 825, column: 39, scope: !9125)
!9129 = !DILocation(line: 825, column: 45, scope: !9125)
!9130 = !DILocation(line: 825, column: 49, scope: !9125)
!9131 = !DILocation(line: 825, column: 37, scope: !9125)
!9132 = !DILocation(line: 825, column: 21, scope: !9125)
!9133 = !DILocalVariable(name: "band0", scope: !9134, file: !957, line: 826, type: !3232)
!9134 = distinct !DILexicalBlock(scope: !9126, file: !957, line: 825, column: 69)
!9135 = !DILocation(line: 826, column: 36, scope: !9134)
!9136 = !DILocation(line: 826, column: 84, scope: !9134)
!9137 = !DILocation(line: 826, column: 86, scope: !9134)
!9138 = !DILocation(line: 826, column: 85, scope: !9134)
!9139 = !DILocation(line: 826, column: 89, scope: !9134)
!9140 = !DILocation(line: 826, column: 93, scope: !9134)
!9141 = !DILocation(line: 826, column: 92, scope: !9134)
!9142 = !DILocation(line: 826, column: 45, scope: !9134)
!9143 = !DILocation(line: 826, column: 55, scope: !9134)
!9144 = !DILocation(line: 826, column: 58, scope: !9134)
!9145 = !DILocation(line: 826, column: 69, scope: !9134)
!9146 = !DILocation(line: 826, column: 48, scope: !9134)
!9147 = !DILocation(line: 826, column: 52, scope: !9134)
!9148 = !DILocation(line: 826, column: 73, scope: !9134)
!9149 = !DILocalVariable(name: "band1", scope: !9134, file: !957, line: 827, type: !3232)
!9150 = !DILocation(line: 827, column: 36, scope: !9134)
!9151 = !DILocation(line: 827, column: 84, scope: !9134)
!9152 = !DILocation(line: 827, column: 86, scope: !9134)
!9153 = !DILocation(line: 827, column: 85, scope: !9134)
!9154 = !DILocation(line: 827, column: 89, scope: !9134)
!9155 = !DILocation(line: 827, column: 93, scope: !9134)
!9156 = !DILocation(line: 827, column: 92, scope: !9134)
!9157 = !DILocation(line: 827, column: 45, scope: !9134)
!9158 = !DILocation(line: 827, column: 55, scope: !9134)
!9159 = !DILocation(line: 827, column: 58, scope: !9134)
!9160 = !DILocation(line: 827, column: 69, scope: !9134)
!9161 = !DILocation(line: 827, column: 48, scope: !9134)
!9162 = !DILocation(line: 827, column: 52, scope: !9134)
!9163 = !DILocation(line: 827, column: 73, scope: !9134)
!9164 = !DILocalVariable(name: "minthr", scope: !9134, file: !957, line: 828, type: !954)
!9165 = !DILocation(line: 828, column: 31, scope: !9134)
!9166 = !DILocation(line: 828, column: 42, scope: !9134)
!9167 = !DILocation(line: 828, column: 49, scope: !9134)
!9168 = !DILocation(line: 828, column: 63, scope: !9134)
!9169 = !DILocation(line: 828, column: 70, scope: !9134)
!9170 = !DILocation(line: 828, column: 60, scope: !9134)
!9171 = !DILocation(line: 828, column: 41, scope: !9134)
!9172 = !DILocation(line: 828, column: 84, scope: !9173)
!9173 = !DILexicalBlockFile(scope: !9134, file: !957, discriminator: 1)
!9174 = !DILocation(line: 828, column: 91, scope: !9173)
!9175 = !DILocation(line: 828, column: 41, scope: !9173)
!9176 = !DILocation(line: 828, column: 105, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !9134, file: !957, discriminator: 2)
!9178 = !DILocation(line: 828, column: 112, scope: !9177)
!9179 = !DILocation(line: 828, column: 41, scope: !9177)
!9180 = !DILocation(line: 828, column: 41, scope: !9181)
!9181 = !DILexicalBlockFile(scope: !9134, file: !957, discriminator: 3)
!9182 = !DILocation(line: 828, column: 31, scope: !9181)
!9183 = !DILocalVariable(name: "b1", scope: !9134, file: !957, line: 829, type: !991)
!9184 = !DILocation(line: 829, column: 29, scope: !9134)
!9185 = !DILocalVariable(name: "b2", scope: !9134, file: !957, line: 829, type: !991)
!9186 = !DILocation(line: 829, column: 32, scope: !9134)
!9187 = !DILocalVariable(name: "b3", scope: !9134, file: !957, line: 829, type: !991)
!9188 = !DILocation(line: 829, column: 35, scope: !9134)
!9189 = !DILocalVariable(name: "b4", scope: !9134, file: !957, line: 829, type: !991)
!9190 = !DILocation(line: 829, column: 38, scope: !9134)
!9191 = !DILocation(line: 830, column: 32, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9134, file: !957, line: 830, column: 25)
!9193 = !DILocation(line: 830, column: 30, scope: !9192)
!9194 = !DILocation(line: 830, column: 37, scope: !9195)
!9195 = !DILexicalBlockFile(scope: !9196, file: !957, discriminator: 1)
!9196 = distinct !DILexicalBlock(scope: !9192, file: !957, line: 830, column: 25)
!9197 = !DILocation(line: 830, column: 61, scope: !9195)
!9198 = !DILocation(line: 830, column: 41, scope: !9195)
!9199 = !DILocation(line: 830, column: 47, scope: !9195)
!9200 = !DILocation(line: 830, column: 51, scope: !9195)
!9201 = !DILocation(line: 830, column: 39, scope: !9195)
!9202 = !DILocation(line: 830, column: 25, scope: !9195)
!9203 = !DILocation(line: 831, column: 50, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9196, file: !957, line: 830, column: 70)
!9205 = !DILocation(line: 831, column: 57, scope: !9204)
!9206 = !DILocation(line: 831, column: 59, scope: !9204)
!9207 = !DILocation(line: 831, column: 58, scope: !9204)
!9208 = !DILocation(line: 831, column: 62, scope: !9204)
!9209 = !DILocation(line: 831, column: 55, scope: !9204)
!9210 = !DILocation(line: 831, column: 67, scope: !9204)
!9211 = !DILocation(line: 831, column: 66, scope: !9204)
!9212 = !DILocation(line: 831, column: 37, scope: !9204)
!9213 = !DILocation(line: 831, column: 43, scope: !9204)
!9214 = !DILocation(line: 832, column: 50, scope: !9204)
!9215 = !DILocation(line: 832, column: 57, scope: !9204)
!9216 = !DILocation(line: 832, column: 59, scope: !9204)
!9217 = !DILocation(line: 832, column: 58, scope: !9204)
!9218 = !DILocation(line: 832, column: 62, scope: !9204)
!9219 = !DILocation(line: 832, column: 55, scope: !9204)
!9220 = !DILocation(line: 832, column: 67, scope: !9204)
!9221 = !DILocation(line: 832, column: 66, scope: !9204)
!9222 = !DILocation(line: 832, column: 37, scope: !9204)
!9223 = !DILocation(line: 832, column: 43, scope: !9204)
!9224 = !DILocation(line: 832, column: 35, scope: !9204)
!9225 = !DILocation(line: 831, column: 36, scope: !9204)
!9226 = !DILocation(line: 832, column: 71, scope: !9204)
!9227 = !DILocation(line: 831, column: 31, scope: !9204)
!9228 = !DILocation(line: 831, column: 29, scope: !9204)
!9229 = !DILocation(line: 831, column: 34, scope: !9204)
!9230 = !DILocation(line: 833, column: 38, scope: !9204)
!9231 = !DILocation(line: 833, column: 36, scope: !9204)
!9232 = !DILocation(line: 834, column: 50, scope: !9204)
!9233 = !DILocation(line: 834, column: 57, scope: !9204)
!9234 = !DILocation(line: 834, column: 59, scope: !9204)
!9235 = !DILocation(line: 834, column: 58, scope: !9204)
!9236 = !DILocation(line: 834, column: 62, scope: !9204)
!9237 = !DILocation(line: 834, column: 55, scope: !9204)
!9238 = !DILocation(line: 834, column: 67, scope: !9204)
!9239 = !DILocation(line: 834, column: 66, scope: !9204)
!9240 = !DILocation(line: 834, column: 37, scope: !9204)
!9241 = !DILocation(line: 834, column: 43, scope: !9204)
!9242 = !DILocation(line: 834, column: 35, scope: !9204)
!9243 = !DILocation(line: 833, column: 31, scope: !9204)
!9244 = !DILocation(line: 833, column: 29, scope: !9204)
!9245 = !DILocation(line: 833, column: 34, scope: !9204)
!9246 = !DILocation(line: 835, column: 25, scope: !9204)
!9247 = !DILocation(line: 830, column: 66, scope: !9248)
!9248 = !DILexicalBlockFile(scope: !9196, file: !957, discriminator: 2)
!9249 = !DILocation(line: 830, column: 25, scope: !9248)
!9250 = distinct !{!9250, !9251}
!9251 = !DILocation(line: 830, column: 25, scope: !9134)
!9252 = !DILocation(line: 837, column: 25, scope: !9134)
!9253 = !DILocation(line: 837, column: 28, scope: !9134)
!9254 = !DILocation(line: 837, column: 38, scope: !9134)
!9255 = !DILocation(line: 837, column: 43, scope: !9134)
!9256 = !DILocation(line: 837, column: 49, scope: !9134)
!9257 = !DILocation(line: 837, column: 56, scope: !9134)
!9258 = !DILocation(line: 837, column: 55, scope: !9134)
!9259 = !DILocation(line: 837, column: 63, scope: !9134)
!9260 = !DILocation(line: 837, column: 65, scope: !9134)
!9261 = !DILocation(line: 837, column: 64, scope: !9134)
!9262 = !DILocation(line: 837, column: 68, scope: !9134)
!9263 = !DILocation(line: 837, column: 61, scope: !9134)
!9264 = !DILocation(line: 837, column: 94, scope: !9134)
!9265 = !DILocation(line: 837, column: 74, scope: !9134)
!9266 = !DILocation(line: 837, column: 80, scope: !9134)
!9267 = !DILocation(line: 837, column: 84, scope: !9134)
!9268 = !DILocation(line: 838, column: 25, scope: !9134)
!9269 = !DILocation(line: 838, column: 28, scope: !9134)
!9270 = !DILocation(line: 838, column: 38, scope: !9134)
!9271 = !DILocation(line: 838, column: 43, scope: !9134)
!9272 = !DILocation(line: 838, column: 49, scope: !9134)
!9273 = !DILocation(line: 838, column: 56, scope: !9134)
!9274 = !DILocation(line: 838, column: 55, scope: !9134)
!9275 = !DILocation(line: 838, column: 63, scope: !9134)
!9276 = !DILocation(line: 838, column: 65, scope: !9134)
!9277 = !DILocation(line: 838, column: 64, scope: !9134)
!9278 = !DILocation(line: 838, column: 68, scope: !9134)
!9279 = !DILocation(line: 838, column: 61, scope: !9134)
!9280 = !DILocation(line: 838, column: 94, scope: !9134)
!9281 = !DILocation(line: 838, column: 74, scope: !9134)
!9282 = !DILocation(line: 838, column: 80, scope: !9134)
!9283 = !DILocation(line: 838, column: 84, scope: !9134)
!9284 = !DILocation(line: 839, column: 25, scope: !9134)
!9285 = !DILocation(line: 839, column: 28, scope: !9134)
!9286 = !DILocation(line: 839, column: 38, scope: !9134)
!9287 = !DILocation(line: 839, column: 43, scope: !9134)
!9288 = !DILocation(line: 839, column: 66, scope: !9134)
!9289 = !DILocation(line: 839, column: 46, scope: !9134)
!9290 = !DILocation(line: 839, column: 52, scope: !9134)
!9291 = !DILocation(line: 839, column: 56, scope: !9134)
!9292 = !DILocation(line: 840, column: 25, scope: !9134)
!9293 = !DILocation(line: 840, column: 28, scope: !9134)
!9294 = !DILocation(line: 840, column: 38, scope: !9134)
!9295 = !DILocation(line: 840, column: 43, scope: !9134)
!9296 = !DILocation(line: 840, column: 66, scope: !9134)
!9297 = !DILocation(line: 840, column: 46, scope: !9134)
!9298 = !DILocation(line: 840, column: 52, scope: !9134)
!9299 = !DILocation(line: 840, column: 56, scope: !9134)
!9300 = !DILocation(line: 841, column: 53, scope: !9134)
!9301 = !DILocation(line: 841, column: 70, scope: !9134)
!9302 = !DILocation(line: 841, column: 79, scope: !9134)
!9303 = !DILocation(line: 841, column: 81, scope: !9134)
!9304 = !DILocation(line: 841, column: 80, scope: !9134)
!9305 = !DILocation(line: 841, column: 84, scope: !9134)
!9306 = !DILocation(line: 841, column: 76, scope: !9134)
!9307 = !DILocation(line: 841, column: 57, scope: !9134)
!9308 = !DILocation(line: 841, column: 63, scope: !9134)
!9309 = !DILocation(line: 842, column: 53, scope: !9134)
!9310 = !DILocation(line: 843, column: 73, scope: !9134)
!9311 = !DILocation(line: 843, column: 53, scope: !9134)
!9312 = !DILocation(line: 843, column: 59, scope: !9134)
!9313 = !DILocation(line: 843, column: 63, scope: !9134)
!9314 = !DILocation(line: 844, column: 66, scope: !9134)
!9315 = !DILocation(line: 844, column: 67, scope: !9134)
!9316 = !DILocation(line: 844, column: 71, scope: !9134)
!9317 = !DILocation(line: 844, column: 70, scope: !9134)
!9318 = !DILocation(line: 844, column: 53, scope: !9134)
!9319 = !DILocation(line: 844, column: 59, scope: !9134)
!9320 = !DILocation(line: 845, column: 69, scope: !9134)
!9321 = !DILocation(line: 845, column: 70, scope: !9134)
!9322 = !DILocation(line: 845, column: 74, scope: !9134)
!9323 = !DILocation(line: 845, column: 73, scope: !9134)
!9324 = !DILocation(line: 845, column: 53, scope: !9134)
!9325 = !DILocation(line: 845, column: 59, scope: !9134)
!9326 = !DILocation(line: 846, column: 53, scope: !9134)
!9327 = !DILocation(line: 846, column: 62, scope: !9134)
!9328 = !DILocation(line: 846, column: 69, scope: !9134)
!9329 = !DILocation(line: 846, column: 60, scope: !9134)
!9330 = !DILocation(line: 841, column: 34, scope: !9134)
!9331 = !DILocation(line: 841, column: 31, scope: !9134)
!9332 = !DILocation(line: 847, column: 53, scope: !9134)
!9333 = !DILocation(line: 847, column: 70, scope: !9134)
!9334 = !DILocation(line: 847, column: 79, scope: !9134)
!9335 = !DILocation(line: 847, column: 81, scope: !9134)
!9336 = !DILocation(line: 847, column: 80, scope: !9134)
!9337 = !DILocation(line: 847, column: 84, scope: !9134)
!9338 = !DILocation(line: 847, column: 76, scope: !9134)
!9339 = !DILocation(line: 847, column: 57, scope: !9134)
!9340 = !DILocation(line: 847, column: 63, scope: !9134)
!9341 = !DILocation(line: 848, column: 53, scope: !9134)
!9342 = !DILocation(line: 849, column: 73, scope: !9134)
!9343 = !DILocation(line: 849, column: 53, scope: !9134)
!9344 = !DILocation(line: 849, column: 59, scope: !9134)
!9345 = !DILocation(line: 849, column: 63, scope: !9134)
!9346 = !DILocation(line: 850, column: 66, scope: !9134)
!9347 = !DILocation(line: 850, column: 67, scope: !9134)
!9348 = !DILocation(line: 850, column: 71, scope: !9134)
!9349 = !DILocation(line: 850, column: 70, scope: !9134)
!9350 = !DILocation(line: 850, column: 53, scope: !9134)
!9351 = !DILocation(line: 850, column: 59, scope: !9134)
!9352 = !DILocation(line: 851, column: 69, scope: !9134)
!9353 = !DILocation(line: 851, column: 70, scope: !9134)
!9354 = !DILocation(line: 851, column: 74, scope: !9134)
!9355 = !DILocation(line: 851, column: 73, scope: !9134)
!9356 = !DILocation(line: 851, column: 53, scope: !9134)
!9357 = !DILocation(line: 851, column: 59, scope: !9134)
!9358 = !DILocation(line: 852, column: 53, scope: !9134)
!9359 = !DILocation(line: 852, column: 62, scope: !9134)
!9360 = !DILocation(line: 852, column: 69, scope: !9134)
!9361 = !DILocation(line: 852, column: 60, scope: !9134)
!9362 = !DILocation(line: 847, column: 34, scope: !9134)
!9363 = !DILocation(line: 847, column: 31, scope: !9134)
!9364 = !DILocation(line: 853, column: 53, scope: !9134)
!9365 = !DILocation(line: 853, column: 56, scope: !9134)
!9366 = !DILocation(line: 854, column: 53, scope: !9134)
!9367 = !DILocation(line: 855, column: 73, scope: !9134)
!9368 = !DILocation(line: 855, column: 53, scope: !9134)
!9369 = !DILocation(line: 855, column: 59, scope: !9134)
!9370 = !DILocation(line: 855, column: 63, scope: !9134)
!9371 = !DILocation(line: 856, column: 53, scope: !9134)
!9372 = !DILocation(line: 857, column: 53, scope: !9134)
!9373 = !DILocation(line: 858, column: 53, scope: !9134)
!9374 = !DILocation(line: 858, column: 62, scope: !9134)
!9375 = !DILocation(line: 858, column: 60, scope: !9134)
!9376 = !DILocation(line: 853, column: 34, scope: !9134)
!9377 = !DILocation(line: 853, column: 31, scope: !9134)
!9378 = !DILocation(line: 859, column: 53, scope: !9134)
!9379 = !DILocation(line: 859, column: 56, scope: !9134)
!9380 = !DILocation(line: 860, column: 53, scope: !9134)
!9381 = !DILocation(line: 861, column: 73, scope: !9134)
!9382 = !DILocation(line: 861, column: 53, scope: !9134)
!9383 = !DILocation(line: 861, column: 59, scope: !9134)
!9384 = !DILocation(line: 861, column: 63, scope: !9134)
!9385 = !DILocation(line: 862, column: 53, scope: !9134)
!9386 = !DILocation(line: 863, column: 53, scope: !9134)
!9387 = !DILocation(line: 864, column: 53, scope: !9134)
!9388 = !DILocation(line: 864, column: 65, scope: !9134)
!9389 = !DILocation(line: 864, column: 74, scope: !9134)
!9390 = !DILocation(line: 864, column: 72, scope: !9134)
!9391 = !DILocation(line: 864, column: 62, scope: !9134)
!9392 = !DILocation(line: 859, column: 34, scope: !9134)
!9393 = !DILocation(line: 859, column: 31, scope: !9134)
!9394 = !DILocation(line: 865, column: 31, scope: !9134)
!9395 = !DILocation(line: 865, column: 34, scope: !9134)
!9396 = !DILocation(line: 865, column: 33, scope: !9134)
!9397 = !DILocation(line: 865, column: 28, scope: !9134)
!9398 = !DILocation(line: 866, column: 31, scope: !9134)
!9399 = !DILocation(line: 866, column: 34, scope: !9134)
!9400 = !DILocation(line: 866, column: 33, scope: !9134)
!9401 = !DILocation(line: 866, column: 28, scope: !9134)
!9402 = !DILocation(line: 867, column: 34, scope: !9134)
!9403 = !DILocation(line: 867, column: 37, scope: !9134)
!9404 = !DILocation(line: 867, column: 36, scope: !9134)
!9405 = !DILocation(line: 867, column: 31, scope: !9134)
!9406 = !DILocation(line: 868, column: 34, scope: !9134)
!9407 = !DILocation(line: 868, column: 37, scope: !9134)
!9408 = !DILocation(line: 868, column: 36, scope: !9134)
!9409 = !DILocation(line: 868, column: 31, scope: !9134)
!9410 = !DILocation(line: 869, column: 21, scope: !9134)
!9411 = !DILocation(line: 825, column: 65, scope: !9412)
!9412 = !DILexicalBlockFile(scope: !9126, file: !957, discriminator: 2)
!9413 = !DILocation(line: 825, column: 21, scope: !9412)
!9414 = distinct !{!9414, !9415}
!9415 = !DILocation(line: 825, column: 21, scope: !8619)
!9416 = !DILocation(line: 870, column: 44, scope: !8619)
!9417 = !DILocation(line: 870, column: 53, scope: !8619)
!9418 = !DILocation(line: 870, column: 50, scope: !8619)
!9419 = !DILocation(line: 870, column: 59, scope: !8619)
!9420 = !DILocation(line: 870, column: 62, scope: !9000)
!9421 = !DILocation(line: 870, column: 67, scope: !9000)
!9422 = !DILocation(line: 870, column: 65, scope: !9000)
!9423 = !DILocation(line: 870, column: 59, scope: !9008)
!9424 = !DILocation(line: 870, column: 44, scope: !9008)
!9425 = !DILocation(line: 870, column: 34, scope: !9008)
!9426 = !DILocation(line: 870, column: 35, scope: !9008)
!9427 = !DILocation(line: 870, column: 39, scope: !9008)
!9428 = !DILocation(line: 870, column: 38, scope: !9008)
!9429 = !DILocation(line: 870, column: 21, scope: !9008)
!9430 = !DILocation(line: 870, column: 26, scope: !9008)
!9431 = !DILocation(line: 870, column: 42, scope: !9008)
!9432 = !DILocation(line: 871, column: 38, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !8619, file: !957, line: 871, column: 25)
!9434 = !DILocation(line: 871, column: 39, scope: !9433)
!9435 = !DILocation(line: 871, column: 43, scope: !9433)
!9436 = !DILocation(line: 871, column: 42, scope: !9433)
!9437 = !DILocation(line: 871, column: 25, scope: !9433)
!9438 = !DILocation(line: 871, column: 30, scope: !9433)
!9439 = !DILocation(line: 871, column: 25, scope: !8619)
!9440 = !DILocation(line: 872, column: 45, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !957, line: 872, column: 29)
!9442 = distinct !DILexicalBlock(scope: !9433, file: !957, line: 871, column: 47)
!9443 = !DILocation(line: 872, column: 46, scope: !9441)
!9444 = !DILocation(line: 872, column: 50, scope: !9441)
!9445 = !DILocation(line: 872, column: 49, scope: !9441)
!9446 = !DILocation(line: 872, column: 29, scope: !9441)
!9447 = !DILocation(line: 872, column: 35, scope: !9441)
!9448 = !DILocation(line: 872, column: 53, scope: !9441)
!9449 = !DILocation(line: 872, column: 65, scope: !9441)
!9450 = !DILocation(line: 872, column: 84, scope: !9451)
!9451 = !DILexicalBlockFile(scope: !9441, file: !957, discriminator: 1)
!9452 = !DILocation(line: 872, column: 85, scope: !9451)
!9453 = !DILocation(line: 872, column: 89, scope: !9451)
!9454 = !DILocation(line: 872, column: 88, scope: !9451)
!9455 = !DILocation(line: 872, column: 68, scope: !9451)
!9456 = !DILocation(line: 872, column: 74, scope: !9451)
!9457 = !DILocation(line: 872, column: 92, scope: !9451)
!9458 = !DILocation(line: 872, column: 29, scope: !9451)
!9459 = !DILocation(line: 873, column: 52, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9441, file: !957, line: 872, column: 105)
!9461 = !DILocation(line: 873, column: 42, scope: !9460)
!9462 = !DILocation(line: 873, column: 43, scope: !9460)
!9463 = !DILocation(line: 873, column: 47, scope: !9460)
!9464 = !DILocation(line: 873, column: 46, scope: !9460)
!9465 = !DILocation(line: 873, column: 29, scope: !9460)
!9466 = !DILocation(line: 873, column: 35, scope: !9460)
!9467 = !DILocation(line: 873, column: 50, scope: !9460)
!9468 = !DILocation(line: 874, column: 52, scope: !9460)
!9469 = !DILocation(line: 874, column: 42, scope: !9460)
!9470 = !DILocation(line: 874, column: 43, scope: !9460)
!9471 = !DILocation(line: 874, column: 47, scope: !9460)
!9472 = !DILocation(line: 874, column: 46, scope: !9460)
!9473 = !DILocation(line: 874, column: 29, scope: !9460)
!9474 = !DILocation(line: 874, column: 35, scope: !9460)
!9475 = !DILocation(line: 874, column: 50, scope: !9460)
!9476 = !DILocation(line: 875, column: 55, scope: !9460)
!9477 = !DILocation(line: 875, column: 45, scope: !9460)
!9478 = !DILocation(line: 875, column: 46, scope: !9460)
!9479 = !DILocation(line: 875, column: 50, scope: !9460)
!9480 = !DILocation(line: 875, column: 49, scope: !9460)
!9481 = !DILocation(line: 875, column: 29, scope: !9460)
!9482 = !DILocation(line: 875, column: 35, scope: !9460)
!9483 = !DILocation(line: 875, column: 53, scope: !9460)
!9484 = !DILocation(line: 876, column: 55, scope: !9460)
!9485 = !DILocation(line: 876, column: 45, scope: !9460)
!9486 = !DILocation(line: 876, column: 46, scope: !9460)
!9487 = !DILocation(line: 876, column: 50, scope: !9460)
!9488 = !DILocation(line: 876, column: 49, scope: !9460)
!9489 = !DILocation(line: 876, column: 29, scope: !9460)
!9490 = !DILocation(line: 876, column: 35, scope: !9460)
!9491 = !DILocation(line: 876, column: 53, scope: !9460)
!9492 = !DILocation(line: 877, column: 25, scope: !9460)
!9493 = !DILocation(line: 877, column: 53, scope: !9494)
!9494 = !DILexicalBlockFile(scope: !9495, file: !957, discriminator: 1)
!9495 = distinct !DILexicalBlock(scope: !9441, file: !957, line: 877, column: 36)
!9496 = !DILocation(line: 877, column: 54, scope: !9494)
!9497 = !DILocation(line: 877, column: 58, scope: !9494)
!9498 = !DILocation(line: 877, column: 57, scope: !9494)
!9499 = !DILocation(line: 877, column: 37, scope: !9494)
!9500 = !DILocation(line: 877, column: 43, scope: !9494)
!9501 = !DILocation(line: 877, column: 61, scope: !9494)
!9502 = !DILocation(line: 877, column: 93, scope: !9494)
!9503 = !DILocation(line: 877, column: 94, scope: !9494)
!9504 = !DILocation(line: 877, column: 98, scope: !9494)
!9505 = !DILocation(line: 877, column: 97, scope: !9494)
!9506 = !DILocation(line: 877, column: 77, scope: !9494)
!9507 = !DILocation(line: 877, column: 83, scope: !9494)
!9508 = !DILocation(line: 877, column: 101, scope: !9494)
!9509 = !DILocation(line: 877, column: 74, scope: !9494)
!9510 = !DILocation(line: 877, column: 36, scope: !9494)
!9511 = !DILocation(line: 879, column: 42, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9495, file: !957, line: 877, column: 115)
!9513 = !DILocation(line: 879, column: 43, scope: !9512)
!9514 = !DILocation(line: 879, column: 47, scope: !9512)
!9515 = !DILocation(line: 879, column: 46, scope: !9512)
!9516 = !DILocation(line: 879, column: 29, scope: !9512)
!9517 = !DILocation(line: 879, column: 34, scope: !9512)
!9518 = !DILocation(line: 879, column: 50, scope: !9512)
!9519 = !DILocation(line: 880, column: 25, scope: !9512)
!9520 = !DILocation(line: 881, column: 25, scope: !9442)
!9521 = !DILocation(line: 882, column: 32, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9433, file: !957, line: 882, column: 32)
!9523 = !DILocation(line: 882, column: 37, scope: !9522)
!9524 = !DILocation(line: 882, column: 35, scope: !9522)
!9525 = !DILocation(line: 882, column: 32, scope: !9433)
!9526 = !DILocation(line: 884, column: 25, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9522, file: !957, line: 882, column: 41)
!9528 = !DILocation(line: 886, column: 17, scope: !8619)
!9529 = !DILocation(line: 801, column: 70, scope: !9530)
!9530 = !DILexicalBlockFile(scope: !8620, file: !957, discriminator: 2)
!9531 = !DILocation(line: 801, column: 17, scope: !9530)
!9532 = distinct !{!9532, !9533}
!9533 = !DILocation(line: 801, column: 17, scope: !8622)
!9534 = !DILocation(line: 887, column: 13, scope: !8622)
!9535 = !DILocation(line: 888, column: 31, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !8624, file: !957, line: 888, column: 17)
!9537 = !DILocation(line: 888, column: 32, scope: !9536)
!9538 = !DILocation(line: 888, column: 36, scope: !9536)
!9539 = !DILocation(line: 888, column: 35, scope: !9536)
!9540 = !DILocation(line: 888, column: 18, scope: !9536)
!9541 = !DILocation(line: 888, column: 24, scope: !9536)
!9542 = !DILocation(line: 888, column: 39, scope: !9536)
!9543 = !DILocation(line: 888, column: 58, scope: !9544)
!9544 = !DILexicalBlockFile(scope: !9536, file: !957, discriminator: 1)
!9545 = !DILocation(line: 888, column: 59, scope: !9544)
!9546 = !DILocation(line: 888, column: 63, scope: !9544)
!9547 = !DILocation(line: 888, column: 62, scope: !9544)
!9548 = !DILocation(line: 888, column: 42, scope: !9544)
!9549 = !DILocation(line: 888, column: 48, scope: !9544)
!9550 = !DILocation(line: 888, column: 66, scope: !9544)
!9551 = !DILocation(line: 888, column: 17, scope: !9544)
!9552 = !DILocation(line: 889, column: 41, scope: !9536)
!9553 = !DILocation(line: 889, column: 42, scope: !9536)
!9554 = !DILocation(line: 889, column: 46, scope: !9536)
!9555 = !DILocation(line: 889, column: 45, scope: !9536)
!9556 = !DILocation(line: 889, column: 28, scope: !9536)
!9557 = !DILocation(line: 889, column: 34, scope: !9536)
!9558 = !DILocation(line: 889, column: 26, scope: !9536)
!9559 = !DILocation(line: 889, column: 17, scope: !9536)
!9560 = !DILocation(line: 890, column: 31, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !8624, file: !957, line: 890, column: 17)
!9562 = !DILocation(line: 890, column: 32, scope: !9561)
!9563 = !DILocation(line: 890, column: 36, scope: !9561)
!9564 = !DILocation(line: 890, column: 35, scope: !9561)
!9565 = !DILocation(line: 890, column: 18, scope: !9561)
!9566 = !DILocation(line: 890, column: 24, scope: !9561)
!9567 = !DILocation(line: 890, column: 39, scope: !9561)
!9568 = !DILocation(line: 890, column: 56, scope: !9569)
!9569 = !DILexicalBlockFile(scope: !9561, file: !957, discriminator: 1)
!9570 = !DILocation(line: 890, column: 57, scope: !9569)
!9571 = !DILocation(line: 890, column: 61, scope: !9569)
!9572 = !DILocation(line: 890, column: 60, scope: !9569)
!9573 = !DILocation(line: 890, column: 43, scope: !9569)
!9574 = !DILocation(line: 890, column: 48, scope: !9569)
!9575 = !DILocation(line: 890, column: 64, scope: !9569)
!9576 = !DILocation(line: 890, column: 83, scope: !9577)
!9577 = !DILexicalBlockFile(scope: !9561, file: !957, discriminator: 2)
!9578 = !DILocation(line: 890, column: 84, scope: !9577)
!9579 = !DILocation(line: 890, column: 88, scope: !9577)
!9580 = !DILocation(line: 890, column: 87, scope: !9577)
!9581 = !DILocation(line: 890, column: 67, scope: !9577)
!9582 = !DILocation(line: 890, column: 73, scope: !9577)
!9583 = !DILocation(line: 890, column: 91, scope: !9577)
!9584 = !DILocation(line: 890, column: 17, scope: !9577)
!9585 = !DILocation(line: 891, column: 42, scope: !9561)
!9586 = !DILocation(line: 891, column: 43, scope: !9561)
!9587 = !DILocation(line: 891, column: 47, scope: !9561)
!9588 = !DILocation(line: 891, column: 46, scope: !9561)
!9589 = !DILocation(line: 891, column: 29, scope: !9561)
!9590 = !DILocation(line: 891, column: 35, scope: !9561)
!9591 = !DILocation(line: 891, column: 27, scope: !9561)
!9592 = !DILocation(line: 891, column: 17, scope: !9561)
!9593 = !DILocation(line: 892, column: 42, scope: !8624)
!9594 = !DILocation(line: 892, column: 22, scope: !8624)
!9595 = !DILocation(line: 892, column: 28, scope: !8624)
!9596 = !DILocation(line: 892, column: 32, scope: !8624)
!9597 = !DILocation(line: 892, column: 19, scope: !8624)
!9598 = !DILocation(line: 893, column: 9, scope: !8624)
!9599 = !DILocation(line: 778, column: 45, scope: !9600)
!9600 = !DILexicalBlockFile(scope: !8625, file: !957, discriminator: 2)
!9601 = !DILocation(line: 778, column: 9, scope: !9600)
!9602 = distinct !{!9602, !9603}
!9603 = !DILocation(line: 778, column: 9, scope: !8627)
!9604 = !DILocation(line: 894, column: 5, scope: !8627)
!9605 = !DILocation(line: 776, column: 69, scope: !9606)
!9606 = !DILexicalBlockFile(scope: !8628, file: !957, discriminator: 2)
!9607 = !DILocation(line: 776, column: 49, scope: !9606)
!9608 = !DILocation(line: 776, column: 55, scope: !9606)
!9609 = !DILocation(line: 776, column: 59, scope: !9606)
!9610 = !DILocation(line: 776, column: 46, scope: !9606)
!9611 = !DILocation(line: 776, column: 5, scope: !9606)
!9612 = distinct !{!9612, !9613}
!9613 = !DILocation(line: 776, column: 5, scope: !8614)
!9614 = !DILocation(line: 895, column: 1, scope: !8614)
!9615 = distinct !DISubprogram(name: "search_for_quantizers_twoloop", scope: !9616, file: !9616, line: 67, type: !2762, isLocal: true, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!9616 = !DIFile(filename: "./libavcodec/aaccoder_twoloop.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9617 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9618)
!9618 = distinct !DILocation(line: 697, column: 50, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !9616, line: 600, column: 43)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !9616, line: 600, column: 21)
!9621 = distinct !DILexicalBlock(scope: !9622, file: !9616, line: 596, column: 52)
!9622 = distinct !DILexicalBlock(scope: !9623, file: !9616, line: 596, column: 13)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !9616, line: 596, column: 13)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !9616, line: 589, column: 75)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !9616, line: 589, column: 9)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !9616, line: 589, column: 9)
!9627 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 366, column: 8)
!9628 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9618)
!9629 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9618)
!9630 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9631)
!9631 = distinct !DILocation(line: 587, column: 34, scope: !9627)
!9632 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9631)
!9633 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9631)
!9634 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9635)
!9635 = distinct !DILocation(line: 715, column: 43, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !9616, line: 711, column: 43)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !9616, line: 711, column: 21)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !9616, line: 710, column: 52)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !9616, line: 710, column: 13)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !9616, line: 710, column: 13)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !9616, line: 709, column: 75)
!9642 = distinct !DILexicalBlock(scope: !9643, file: !9616, line: 709, column: 9)
!9643 = distinct !DILexicalBlock(scope: !9627, file: !9616, line: 709, column: 9)
!9644 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9635)
!9645 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9635)
!9646 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9647)
!9647 = distinct !DILocation(line: 493, column: 42, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9649, file: !9616, line: 492, column: 41)
!9649 = distinct !DILexicalBlock(scope: !9650, file: !9616, line: 492, column: 29)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !9616, line: 458, column: 60)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !9616, line: 458, column: 21)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !9616, line: 458, column: 21)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !9616, line: 456, column: 83)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !9616, line: 456, column: 17)
!9655 = distinct !DILexicalBlock(scope: !9656, file: !9616, line: 456, column: 17)
!9656 = distinct !DILexicalBlock(scope: !9657, file: !9616, line: 452, column: 27)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !9616, line: 452, column: 17)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !9616, line: 451, column: 59)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !9616, line: 451, column: 9)
!9660 = distinct !DILexicalBlock(scope: !9627, file: !9616, line: 451, column: 9)
!9661 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9647)
!9662 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9647)
!9663 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 412, column: 38, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !9616, line: 411, column: 37)
!9666 = distinct !DILexicalBlock(scope: !9667, file: !9616, line: 411, column: 25)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !9616, line: 377, column: 56)
!9668 = distinct !DILexicalBlock(scope: !9669, file: !9616, line: 377, column: 17)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !9616, line: 377, column: 17)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !9616, line: 375, column: 79)
!9671 = distinct !DILexicalBlock(scope: !9672, file: !9616, line: 375, column: 13)
!9672 = distinct !DILexicalBlock(scope: !9673, file: !9616, line: 375, column: 13)
!9673 = distinct !DILexicalBlock(scope: !9627, file: !9616, line: 370, column: 12)
!9674 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9664)
!9675 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9664)
!9676 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !9677)
!9677 = distinct !DILocation(line: 354, column: 36, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !9616, line: 327, column: 29)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !9616, line: 327, column: 17)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !9616, line: 326, column: 48)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !9616, line: 326, column: 9)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !9616, line: 326, column: 9)
!9683 = distinct !DILexicalBlock(scope: !9684, file: !9616, line: 322, column: 71)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !9616, line: 322, column: 5)
!9685 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 322, column: 5)
!9686 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !9677)
!9687 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !9677)
!9688 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !9689)
!9689 = distinct !DILocation(line: 340, column: 35, scope: !9678)
!9690 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !9689)
!9691 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !9689)
!9692 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !9693)
!9693 = distinct !DILocation(line: 328, column: 48, scope: !9678)
!9694 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !9693)
!9695 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !9693)
!9696 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9697)
!9697 = distinct !DILocation(line: 290, column: 39, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !9616, line: 289, column: 17)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !9616, line: 288, column: 9)
!9700 = distinct !DILexicalBlock(scope: !9701, file: !9616, line: 288, column: 9)
!9701 = distinct !DILexicalBlock(scope: !9702, file: !9616, line: 287, column: 5)
!9702 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 287, column: 5)
!9703 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9697)
!9704 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9697)
!9705 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 286, column: 17, scope: !9615)
!9707 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9706)
!9708 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9706)
!9709 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !9710)
!9710 = distinct !DILocation(line: 276, column: 35, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !9616, line: 265, column: 48)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !9616, line: 265, column: 9)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !9616, line: 265, column: 9)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !9616, line: 264, column: 71)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !9616, line: 264, column: 5)
!9716 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 264, column: 5)
!9717 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !9710)
!9718 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !9710)
!9719 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 125, column: 21, scope: !9721)
!9721 = !DILexicalBlockFile(scope: !9722, file: !9616, discriminator: 1)
!9722 = distinct !DILexicalBlock(scope: !9723, file: !9616, line: 124, column: 25)
!9723 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 124, column: 9)
!9724 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !9720)
!9725 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !9720)
!9726 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !9727)
!9727 = distinct !DILocation(line: 104, column: 20, scope: !9728)
!9728 = !DILexicalBlockFile(scope: !9615, file: !9616, discriminator: 1)
!9729 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !9727)
!9730 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !9727)
!9731 = !DILocation(line: 124, column: 94, scope: !4847, inlinedAt: !9732)
!9732 = distinct !DILocation(line: 94, column: 22, scope: !9615)
!9733 = !DILocation(line: 124, column: 103, scope: !4847, inlinedAt: !9732)
!9734 = !DILocation(line: 124, column: 115, scope: !4847, inlinedAt: !9732)
!9735 = !DILocalVariable(name: "avctx", arg: 1, scope: !9615, file: !9616, line: 67, type: !968)
!9736 = !DILocation(line: 67, column: 59, scope: !9615)
!9737 = !DILocalVariable(name: "s", arg: 2, scope: !9615, file: !9616, line: 68, type: !2764)
!9738 = !DILocation(line: 68, column: 58, scope: !9615)
!9739 = !DILocalVariable(name: "sce", arg: 3, scope: !9615, file: !9616, line: 69, type: !2458)
!9740 = !DILocation(line: 69, column: 65, scope: !9615)
!9741 = !DILocalVariable(name: "lambda", arg: 4, scope: !9615, file: !9616, line: 70, type: !1781)
!9742 = !DILocation(line: 70, column: 55, scope: !9615)
!9743 = !DILocalVariable(name: "start", scope: !9615, file: !9616, line: 72, type: !991)
!9744 = !DILocation(line: 72, column: 9, scope: !9615)
!9745 = !DILocalVariable(name: "i", scope: !9615, file: !9616, line: 72, type: !991)
!9746 = !DILocation(line: 72, column: 20, scope: !9615)
!9747 = !DILocalVariable(name: "w", scope: !9615, file: !9616, line: 72, type: !991)
!9748 = !DILocation(line: 72, column: 23, scope: !9615)
!9749 = !DILocalVariable(name: "w2", scope: !9615, file: !9616, line: 72, type: !991)
!9750 = !DILocation(line: 72, column: 26, scope: !9615)
!9751 = !DILocalVariable(name: "g", scope: !9615, file: !9616, line: 72, type: !991)
!9752 = !DILocation(line: 72, column: 30, scope: !9615)
!9753 = !DILocalVariable(name: "recomprd", scope: !9615, file: !9616, line: 72, type: !991)
!9754 = !DILocation(line: 72, column: 33, scope: !9615)
!9755 = !DILocalVariable(name: "destbits", scope: !9615, file: !9616, line: 73, type: !991)
!9756 = !DILocation(line: 73, column: 9, scope: !9615)
!9757 = !DILocation(line: 73, column: 20, scope: !9615)
!9758 = !DILocation(line: 73, column: 27, scope: !9615)
!9759 = !DILocation(line: 73, column: 36, scope: !9615)
!9760 = !DILocation(line: 73, column: 47, scope: !9615)
!9761 = !DILocation(line: 73, column: 54, scope: !9615)
!9762 = !DILocation(line: 73, column: 45, scope: !9615)
!9763 = !DILocation(line: 74, column: 13, scope: !9615)
!9764 = !DILocation(line: 74, column: 20, scope: !9615)
!9765 = !DILocation(line: 74, column: 26, scope: !9615)
!9766 = !DILocation(line: 74, column: 12, scope: !9615)
!9767 = !DILocation(line: 74, column: 12, scope: !9728)
!9768 = !DILocation(line: 74, column: 47, scope: !9769)
!9769 = !DILexicalBlockFile(scope: !9615, file: !9616, discriminator: 2)
!9770 = !DILocation(line: 74, column: 54, scope: !9769)
!9771 = !DILocation(line: 74, column: 12, scope: !9769)
!9772 = !DILocation(line: 74, column: 12, scope: !9773)
!9773 = !DILexicalBlockFile(scope: !9615, file: !9616, discriminator: 3)
!9774 = !DILocation(line: 74, column: 11, scope: !9773)
!9775 = !DILocation(line: 74, column: 9, scope: !9773)
!9776 = !DILocation(line: 75, column: 12, scope: !9615)
!9777 = !DILocation(line: 75, column: 19, scope: !9615)
!9778 = !DILocation(line: 75, column: 11, scope: !9615)
!9779 = !DILocation(line: 75, column: 9, scope: !9615)
!9780 = !DILocation(line: 73, column: 20, scope: !9728)
!9781 = !DILocation(line: 73, column: 9, scope: !9728)
!9782 = !DILocalVariable(name: "refbits", scope: !9615, file: !9616, line: 76, type: !991)
!9783 = !DILocation(line: 76, column: 9, scope: !9615)
!9784 = !DILocation(line: 76, column: 19, scope: !9615)
!9785 = !DILocalVariable(name: "toomanybits", scope: !9615, file: !9616, line: 77, type: !991)
!9786 = !DILocation(line: 77, column: 9, scope: !9615)
!9787 = !DILocalVariable(name: "toofewbits", scope: !9615, file: !9616, line: 77, type: !991)
!9788 = !DILocation(line: 77, column: 22, scope: !9615)
!9789 = !DILocalVariable(name: "nzs", scope: !9615, file: !9616, line: 78, type: !9790)
!9790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 1024, align: 8, elements: !1901)
!9791 = !DILocation(line: 78, column: 10, scope: !9615)
!9792 = !DILocalVariable(name: "nextband", scope: !9615, file: !9616, line: 79, type: !1900)
!9793 = !DILocation(line: 79, column: 13, scope: !9615)
!9794 = !DILocalVariable(name: "maxsf", scope: !9615, file: !9616, line: 80, type: !1992)
!9795 = !DILocation(line: 80, column: 9, scope: !9615)
!9796 = !DILocalVariable(name: "minsf", scope: !9615, file: !9616, line: 80, type: !1992)
!9797 = !DILocation(line: 80, column: 21, scope: !9615)
!9798 = !DILocalVariable(name: "dists", scope: !9615, file: !9616, line: 81, type: !1996)
!9799 = !DILocation(line: 81, column: 11, scope: !9615)
!9800 = !DILocalVariable(name: "qenergies", scope: !9615, file: !9616, line: 81, type: !1996)
!9801 = !DILocation(line: 81, column: 31, scope: !9615)
!9802 = !DILocation(line: 81, column: 31, scope: !9728)
!9803 = !DILocalVariable(name: "uplims", scope: !9615, file: !9616, line: 81, type: !1996)
!9804 = !DILocation(line: 81, column: 55, scope: !9615)
!9805 = !DILocalVariable(name: "euplims", scope: !9615, file: !9616, line: 81, type: !1996)
!9806 = !DILocation(line: 81, column: 68, scope: !9615)
!9807 = !DILocalVariable(name: "energies", scope: !9615, file: !9616, line: 81, type: !1996)
!9808 = !DILocation(line: 81, column: 82, scope: !9615)
!9809 = !DILocalVariable(name: "maxvals", scope: !9615, file: !9616, line: 82, type: !1996)
!9810 = !DILocation(line: 82, column: 11, scope: !9615)
!9811 = !DILocalVariable(name: "spread_thr_r", scope: !9615, file: !9616, line: 82, type: !1996)
!9812 = !DILocation(line: 82, column: 25, scope: !9615)
!9813 = !DILocalVariable(name: "min_spread_thr_r", scope: !9615, file: !9616, line: 83, type: !954)
!9814 = !DILocation(line: 83, column: 11, scope: !9615)
!9815 = !DILocalVariable(name: "max_spread_thr_r", scope: !9615, file: !9616, line: 83, type: !954)
!9816 = !DILocation(line: 83, column: 29, scope: !9615)
!9817 = !DILocalVariable(name: "rdlambda", scope: !9615, file: !9616, line: 94, type: !954)
!9818 = !DILocation(line: 94, column: 11, scope: !9615)
!9819 = !DILocation(line: 94, column: 50, scope: !9615)
!9820 = !DILocation(line: 94, column: 48, scope: !9615)
!9821 = !DILocation(line: 94, column: 22, scope: !9615)
!9822 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !9732)
!9823 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !9732)
!9824 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !9732)
!9825 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !9732)
!9826 = !DILocalVariable(name: "nzslope", scope: !9615, file: !9616, line: 95, type: !1781)
!9827 = !DILocation(line: 95, column: 17, scope: !9615)
!9828 = !DILocalVariable(name: "rdmin", scope: !9615, file: !9616, line: 96, type: !954)
!9829 = !DILocation(line: 96, column: 11, scope: !9615)
!9830 = !DILocalVariable(name: "rdmax", scope: !9615, file: !9616, line: 97, type: !954)
!9831 = !DILocation(line: 97, column: 11, scope: !9615)
!9832 = !DILocalVariable(name: "sfoffs", scope: !9615, file: !9616, line: 104, type: !954)
!9833 = !DILocation(line: 104, column: 11, scope: !9615)
!9834 = !DILocation(line: 104, column: 48, scope: !9615)
!9835 = !DILocation(line: 104, column: 46, scope: !9615)
!9836 = !DILocation(line: 104, column: 33, scope: !9615)
!9837 = !DILocation(line: 104, column: 56, scope: !9615)
!9838 = !DILocation(line: 104, column: 20, scope: !9728)
!9839 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !9727)
!9840 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !9727)
!9841 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !9727)
!9842 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !9727)
!9843 = !DILocalVariable(name: "fflag", scope: !9615, file: !9616, line: 106, type: !991)
!9844 = !DILocation(line: 106, column: 9, scope: !9615)
!9845 = !DILocalVariable(name: "minscaler", scope: !9615, file: !9616, line: 106, type: !991)
!9846 = !DILocation(line: 106, column: 16, scope: !9615)
!9847 = !DILocalVariable(name: "maxscaler", scope: !9615, file: !9616, line: 106, type: !991)
!9848 = !DILocation(line: 106, column: 27, scope: !9615)
!9849 = !DILocalVariable(name: "nminscaler", scope: !9615, file: !9616, line: 106, type: !991)
!9850 = !DILocation(line: 106, column: 38, scope: !9615)
!9851 = !DILocalVariable(name: "its", scope: !9615, file: !9616, line: 107, type: !991)
!9852 = !DILocation(line: 107, column: 9, scope: !9615)
!9853 = !DILocalVariable(name: "maxits", scope: !9615, file: !9616, line: 108, type: !991)
!9854 = !DILocation(line: 108, column: 9, scope: !9615)
!9855 = !DILocalVariable(name: "allz", scope: !9615, file: !9616, line: 109, type: !991)
!9856 = !DILocation(line: 109, column: 9, scope: !9615)
!9857 = !DILocalVariable(name: "tbits", scope: !9615, file: !9616, line: 110, type: !991)
!9858 = !DILocation(line: 110, column: 9, scope: !9615)
!9859 = !DILocalVariable(name: "cutoff", scope: !9615, file: !9616, line: 111, type: !991)
!9860 = !DILocation(line: 111, column: 9, scope: !9615)
!9861 = !DILocalVariable(name: "pns_start_pos", scope: !9615, file: !9616, line: 112, type: !991)
!9862 = !DILocation(line: 112, column: 9, scope: !9615)
!9863 = !DILocalVariable(name: "prev", scope: !9615, file: !9616, line: 113, type: !991)
!9864 = !DILocation(line: 113, column: 9, scope: !9615)
!9865 = !DILocalVariable(name: "zeroscale", scope: !9615, file: !9616, line: 123, type: !954)
!9866 = !DILocation(line: 123, column: 11, scope: !9615)
!9867 = !DILocation(line: 124, column: 9, scope: !9723)
!9868 = !DILocation(line: 124, column: 16, scope: !9723)
!9869 = !DILocation(line: 124, column: 9, scope: !9615)
!9870 = !DILocation(line: 125, column: 47, scope: !9722)
!9871 = !DILocation(line: 125, column: 45, scope: !9722)
!9872 = !DILocation(line: 125, column: 34, scope: !9722)
!9873 = !DILocation(line: 125, column: 21, scope: !9721)
!9874 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !9720)
!9875 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !9720)
!9876 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !9720)
!9877 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !9720)
!9878 = !DILocation(line: 125, column: 19, scope: !9722)
!9879 = !DILocation(line: 126, column: 5, scope: !9722)
!9880 = !DILocation(line: 127, column: 19, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9723, file: !9616, line: 126, column: 12)
!9882 = !DILocation(line: 130, column: 9, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 130, column: 9)
!9884 = !DILocation(line: 130, column: 12, scope: !9883)
!9885 = !DILocation(line: 130, column: 16, scope: !9883)
!9886 = !DILocation(line: 130, column: 23, scope: !9883)
!9887 = !DILocation(line: 130, column: 29, scope: !9883)
!9888 = !DILocation(line: 130, column: 9, scope: !9615)
!9889 = !DILocation(line: 135, column: 20, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9883, file: !9616, line: 130, column: 35)
!9891 = !DILocation(line: 135, column: 23, scope: !9890)
!9892 = !DILocation(line: 135, column: 27, scope: !9890)
!9893 = !DILocation(line: 135, column: 34, scope: !9890)
!9894 = !DILocation(line: 136, column: 16, scope: !9890)
!9895 = !DILocation(line: 136, column: 26, scope: !9890)
!9896 = !DILocation(line: 136, column: 33, scope: !9890)
!9897 = !DILocation(line: 136, column: 50, scope: !9898)
!9898 = !DILexicalBlockFile(scope: !9890, file: !9616, discriminator: 1)
!9899 = !DILocation(line: 136, column: 57, scope: !9898)
!9900 = !DILocation(line: 136, column: 26, scope: !9898)
!9901 = !DILocation(line: 136, column: 26, scope: !9902)
!9902 = !DILexicalBlockFile(scope: !9890, file: !9616, discriminator: 2)
!9903 = !DILocation(line: 136, column: 26, scope: !9904)
!9904 = !DILexicalBlockFile(scope: !9890, file: !9616, discriminator: 3)
!9905 = !DILocation(line: 136, column: 25, scope: !9904)
!9906 = !DILocation(line: 136, column: 23, scope: !9904)
!9907 = !DILocation(line: 136, column: 13, scope: !9904)
!9908 = !DILocation(line: 135, column: 20, scope: !9898)
!9909 = !DILocation(line: 135, column: 18, scope: !9898)
!9910 = !DILocation(line: 137, column: 5, scope: !9890)
!9911 = !DILocation(line: 139, column: 9, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 139, column: 9)
!9913 = !DILocation(line: 139, column: 16, scope: !9912)
!9914 = !DILocation(line: 139, column: 22, scope: !9912)
!9915 = !DILocation(line: 139, column: 9, scope: !9615)
!9916 = !DILocation(line: 145, column: 13, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !9616, line: 145, column: 13)
!9918 = distinct !DILexicalBlock(scope: !9912, file: !9616, line: 139, column: 34)
!9919 = !DILocation(line: 145, column: 16, scope: !9917)
!9920 = !DILocation(line: 145, column: 24, scope: !9917)
!9921 = !DILocation(line: 145, column: 33, scope: !9917)
!9922 = !DILocation(line: 145, column: 36, scope: !9923)
!9923 = !DILexicalBlockFile(scope: !9917, file: !9616, discriminator: 1)
!9924 = !DILocation(line: 145, column: 39, scope: !9923)
!9925 = !DILocation(line: 145, column: 48, scope: !9923)
!9926 = !DILocation(line: 145, column: 13, scope: !9923)
!9927 = !DILocation(line: 146, column: 22, scope: !9917)
!9928 = !DILocation(line: 146, column: 13, scope: !9917)
!9929 = !DILocation(line: 152, column: 21, scope: !9918)
!9930 = !DILocation(line: 153, column: 22, scope: !9918)
!9931 = !DILocation(line: 153, column: 31, scope: !9918)
!9932 = !DILocation(line: 153, column: 20, scope: !9918)
!9933 = !DILocation(line: 156, column: 18, scope: !9918)
!9934 = !DILocation(line: 156, column: 23, scope: !9918)
!9935 = !DILocation(line: 156, column: 27, scope: !9918)
!9936 = !DILocation(line: 156, column: 39, scope: !9918)
!9937 = !DILocation(line: 156, column: 16, scope: !9918)
!9938 = !DILocation(line: 157, column: 26, scope: !9918)
!9939 = !DILocation(line: 157, column: 20, scope: !9918)
!9940 = !DILocation(line: 157, column: 18, scope: !9918)
!9941 = !DILocation(line: 160, column: 16, scope: !9918)
!9942 = !DILocation(line: 161, column: 5, scope: !9918)
!9943 = !DILocation(line: 167, column: 23, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9912, file: !9616, line: 161, column: 12)
!9945 = !DILocation(line: 167, column: 34, scope: !9944)
!9946 = !DILocation(line: 167, column: 42, scope: !9944)
!9947 = !DILocation(line: 167, column: 32, scope: !9944)
!9948 = !DILocation(line: 167, column: 21, scope: !9944)
!9949 = !DILocation(line: 168, column: 22, scope: !9944)
!9950 = !DILocation(line: 168, column: 33, scope: !9944)
!9951 = !DILocation(line: 168, column: 41, scope: !9944)
!9952 = !DILocation(line: 168, column: 31, scope: !9944)
!9953 = !DILocation(line: 168, column: 20, scope: !9944)
!9954 = !DILocation(line: 170, column: 16, scope: !9944)
!9955 = !DILocation(line: 171, column: 26, scope: !9944)
!9956 = !DILocation(line: 171, column: 20, scope: !9944)
!9957 = !DILocation(line: 171, column: 18, scope: !9944)
!9958 = !DILocalVariable(name: "wlen", scope: !9959, file: !9616, line: 176, type: !991)
!9959 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 175, column: 5)
!9960 = !DILocation(line: 176, column: 13, scope: !9959)
!9961 = !DILocation(line: 176, column: 27, scope: !9959)
!9962 = !DILocation(line: 176, column: 32, scope: !9959)
!9963 = !DILocation(line: 176, column: 36, scope: !9959)
!9964 = !DILocation(line: 176, column: 25, scope: !9959)
!9965 = !DILocalVariable(name: "bandwidth", scope: !9959, file: !9616, line: 177, type: !991)
!9966 = !DILocation(line: 177, column: 13, scope: !9959)
!9967 = !DILocalVariable(name: "rate_bandwidth_multiplier", scope: !9959, file: !9616, line: 186, type: !954)
!9968 = !DILocation(line: 186, column: 15, scope: !9959)
!9969 = !DILocalVariable(name: "frame_bit_rate", scope: !9959, file: !9616, line: 187, type: !991)
!9970 = !DILocation(line: 187, column: 13, scope: !9959)
!9971 = !DILocation(line: 187, column: 31, scope: !9959)
!9972 = !DILocation(line: 187, column: 38, scope: !9959)
!9973 = !DILocation(line: 187, column: 44, scope: !9959)
!9974 = !DILocation(line: 187, column: 30, scope: !9959)
!9975 = !DILocation(line: 188, column: 16, scope: !9959)
!9976 = !DILocation(line: 188, column: 26, scope: !9959)
!9977 = !DILocation(line: 188, column: 24, scope: !9959)
!9978 = !DILocation(line: 188, column: 54, scope: !9959)
!9979 = !DILocation(line: 188, column: 61, scope: !9959)
!9980 = !DILocation(line: 188, column: 52, scope: !9959)
!9981 = !DILocation(line: 188, column: 73, scope: !9959)
!9982 = !DILocation(line: 187, column: 30, scope: !9983)
!9983 = !DILexicalBlockFile(scope: !9959, file: !9616, discriminator: 1)
!9984 = !DILocation(line: 189, column: 16, scope: !9959)
!9985 = !DILocation(line: 189, column: 23, scope: !9959)
!9986 = !DILocation(line: 189, column: 34, scope: !9959)
!9987 = !DILocation(line: 189, column: 41, scope: !9959)
!9988 = !DILocation(line: 189, column: 32, scope: !9959)
!9989 = !DILocation(line: 189, column: 15, scope: !9959)
!9990 = !DILocation(line: 187, column: 30, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !9959, file: !9616, discriminator: 2)
!9992 = !DILocation(line: 187, column: 30, scope: !9993)
!9993 = !DILexicalBlockFile(scope: !9959, file: !9616, discriminator: 3)
!9994 = !DILocation(line: 187, column: 13, scope: !9993)
!9995 = !DILocation(line: 192, column: 13, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9959, file: !9616, line: 192, column: 13)
!9997 = !DILocation(line: 192, column: 16, scope: !9996)
!9998 = !DILocation(line: 192, column: 24, scope: !9996)
!9999 = !DILocation(line: 192, column: 28, scope: !9996)
!10000 = !DILocation(line: 192, column: 31, scope: !10001)
!10001 = !DILexicalBlockFile(scope: !9996, file: !9616, discriminator: 1)
!10002 = !DILocation(line: 192, column: 34, scope: !10001)
!10003 = !DILocation(line: 192, column: 42, scope: !10001)
!10004 = !DILocation(line: 192, column: 13, scope: !10001)
!10005 = !DILocation(line: 193, column: 28, scope: !9996)
!10006 = !DILocation(line: 193, column: 13, scope: !9996)
!10007 = !DILocation(line: 195, column: 13, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9959, file: !9616, line: 195, column: 13)
!10009 = !DILocation(line: 195, column: 20, scope: !10008)
!10010 = !DILocation(line: 195, column: 27, scope: !10008)
!10011 = !DILocation(line: 195, column: 13, scope: !9959)
!10012 = !DILocation(line: 196, column: 25, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10008, file: !9616, line: 195, column: 32)
!10014 = !DILocation(line: 196, column: 32, scope: !10013)
!10015 = !DILocation(line: 196, column: 23, scope: !10013)
!10016 = !DILocation(line: 197, column: 9, scope: !10013)
!10017 = !DILocation(line: 198, column: 37, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10008, file: !9616, line: 197, column: 16)
!10019 = !DILocation(line: 198, column: 64, scope: !10020)
!10020 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 1)
!10021 = !DILocation(line: 198, column: 78, scope: !10020)
!10022 = !DILocation(line: 198, column: 80, scope: !10020)
!10023 = !DILocation(line: 198, column: 87, scope: !10020)
!10024 = !DILocation(line: 198, column: 101, scope: !10020)
!10025 = !DILocation(line: 198, column: 103, scope: !10020)
!10026 = !DILocation(line: 198, column: 106, scope: !10020)
!10027 = !DILocation(line: 198, column: 110, scope: !10020)
!10028 = !DILocation(line: 198, column: 84, scope: !10020)
!10029 = !DILocation(line: 198, column: 63, scope: !10020)
!10030 = !DILocation(line: 198, column: 121, scope: !10031)
!10031 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 2)
!10032 = !DILocation(line: 198, column: 135, scope: !10031)
!10033 = !DILocation(line: 198, column: 137, scope: !10031)
!10034 = !DILocation(line: 198, column: 63, scope: !10031)
!10035 = !DILocation(line: 198, column: 144, scope: !10036)
!10036 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 3)
!10037 = !DILocation(line: 198, column: 158, scope: !10036)
!10038 = !DILocation(line: 198, column: 160, scope: !10036)
!10039 = !DILocation(line: 198, column: 163, scope: !10036)
!10040 = !DILocation(line: 198, column: 167, scope: !10036)
!10041 = !DILocation(line: 198, column: 63, scope: !10036)
!10042 = !DILocation(line: 198, column: 63, scope: !10043)
!10043 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 4)
!10044 = !DILocation(line: 198, column: 187, scope: !10043)
!10045 = !DILocation(line: 198, column: 201, scope: !10043)
!10046 = !DILocation(line: 198, column: 203, scope: !10043)
!10047 = !DILocation(line: 198, column: 185, scope: !10043)
!10048 = !DILocation(line: 198, column: 177, scope: !10043)
!10049 = !DILocation(line: 198, column: 61, scope: !10043)
!10050 = !DILocation(line: 198, column: 217, scope: !10051)
!10051 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 5)
!10052 = !DILocation(line: 198, column: 231, scope: !10051)
!10053 = !DILocation(line: 198, column: 233, scope: !10051)
!10054 = !DILocation(line: 198, column: 215, scope: !10051)
!10055 = !DILocation(line: 198, column: 61, scope: !10051)
!10056 = !DILocation(line: 198, column: 242, scope: !10057)
!10057 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 6)
!10058 = !DILocation(line: 198, column: 256, scope: !10057)
!10059 = !DILocation(line: 198, column: 258, scope: !10057)
!10060 = !DILocation(line: 198, column: 265, scope: !10057)
!10061 = !DILocation(line: 198, column: 279, scope: !10057)
!10062 = !DILocation(line: 198, column: 281, scope: !10057)
!10063 = !DILocation(line: 198, column: 284, scope: !10057)
!10064 = !DILocation(line: 198, column: 288, scope: !10057)
!10065 = !DILocation(line: 198, column: 262, scope: !10057)
!10066 = !DILocation(line: 198, column: 241, scope: !10057)
!10067 = !DILocation(line: 198, column: 299, scope: !10068)
!10068 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 7)
!10069 = !DILocation(line: 198, column: 313, scope: !10068)
!10070 = !DILocation(line: 198, column: 315, scope: !10068)
!10071 = !DILocation(line: 198, column: 241, scope: !10068)
!10072 = !DILocation(line: 198, column: 322, scope: !10073)
!10073 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 8)
!10074 = !DILocation(line: 198, column: 336, scope: !10073)
!10075 = !DILocation(line: 198, column: 338, scope: !10073)
!10076 = !DILocation(line: 198, column: 341, scope: !10073)
!10077 = !DILocation(line: 198, column: 345, scope: !10073)
!10078 = !DILocation(line: 198, column: 241, scope: !10073)
!10079 = !DILocation(line: 198, column: 241, scope: !10080)
!10080 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 9)
!10081 = !DILocation(line: 198, column: 61, scope: !10080)
!10082 = !DILocation(line: 198, column: 61, scope: !10083)
!10083 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 10)
!10084 = !DILocation(line: 198, column: 368, scope: !10083)
!10085 = !DILocation(line: 198, column: 382, scope: !10083)
!10086 = !DILocation(line: 198, column: 384, scope: !10083)
!10087 = !DILocation(line: 198, column: 366, scope: !10083)
!10088 = !DILocation(line: 198, column: 357, scope: !10083)
!10089 = !DILocation(line: 198, column: 59, scope: !10083)
!10090 = !DILocation(line: 198, column: 400, scope: !10091)
!10091 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 11)
!10092 = !DILocation(line: 198, column: 414, scope: !10091)
!10093 = !DILocation(line: 198, column: 416, scope: !10091)
!10094 = !DILocation(line: 198, column: 398, scope: !10091)
!10095 = !DILocation(line: 198, column: 59, scope: !10091)
!10096 = !DILocation(line: 198, column: 428, scope: !10097)
!10097 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 12)
!10098 = !DILocation(line: 198, column: 442, scope: !10097)
!10099 = !DILocation(line: 198, column: 444, scope: !10097)
!10100 = !DILocation(line: 198, column: 451, scope: !10097)
!10101 = !DILocation(line: 198, column: 465, scope: !10097)
!10102 = !DILocation(line: 198, column: 467, scope: !10097)
!10103 = !DILocation(line: 198, column: 470, scope: !10097)
!10104 = !DILocation(line: 198, column: 474, scope: !10097)
!10105 = !DILocation(line: 198, column: 448, scope: !10097)
!10106 = !DILocation(line: 198, column: 427, scope: !10097)
!10107 = !DILocation(line: 198, column: 485, scope: !10108)
!10108 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 13)
!10109 = !DILocation(line: 198, column: 499, scope: !10108)
!10110 = !DILocation(line: 198, column: 501, scope: !10108)
!10111 = !DILocation(line: 198, column: 427, scope: !10108)
!10112 = !DILocation(line: 198, column: 508, scope: !10113)
!10113 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 14)
!10114 = !DILocation(line: 198, column: 522, scope: !10113)
!10115 = !DILocation(line: 198, column: 524, scope: !10113)
!10116 = !DILocation(line: 198, column: 527, scope: !10113)
!10117 = !DILocation(line: 198, column: 531, scope: !10113)
!10118 = !DILocation(line: 198, column: 427, scope: !10113)
!10119 = !DILocation(line: 198, column: 427, scope: !10120)
!10120 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 15)
!10121 = !DILocation(line: 198, column: 551, scope: !10120)
!10122 = !DILocation(line: 198, column: 565, scope: !10120)
!10123 = !DILocation(line: 198, column: 567, scope: !10120)
!10124 = !DILocation(line: 198, column: 549, scope: !10120)
!10125 = !DILocation(line: 198, column: 541, scope: !10120)
!10126 = !DILocation(line: 198, column: 425, scope: !10120)
!10127 = !DILocation(line: 198, column: 581, scope: !10128)
!10128 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 16)
!10129 = !DILocation(line: 198, column: 595, scope: !10128)
!10130 = !DILocation(line: 198, column: 597, scope: !10128)
!10131 = !DILocation(line: 198, column: 579, scope: !10128)
!10132 = !DILocation(line: 198, column: 425, scope: !10128)
!10133 = !DILocation(line: 198, column: 606, scope: !10134)
!10134 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 17)
!10135 = !DILocation(line: 198, column: 620, scope: !10134)
!10136 = !DILocation(line: 198, column: 622, scope: !10134)
!10137 = !DILocation(line: 198, column: 629, scope: !10134)
!10138 = !DILocation(line: 198, column: 643, scope: !10134)
!10139 = !DILocation(line: 198, column: 645, scope: !10134)
!10140 = !DILocation(line: 198, column: 648, scope: !10134)
!10141 = !DILocation(line: 198, column: 652, scope: !10134)
!10142 = !DILocation(line: 198, column: 626, scope: !10134)
!10143 = !DILocation(line: 198, column: 605, scope: !10134)
!10144 = !DILocation(line: 198, column: 663, scope: !10145)
!10145 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 18)
!10146 = !DILocation(line: 198, column: 677, scope: !10145)
!10147 = !DILocation(line: 198, column: 679, scope: !10145)
!10148 = !DILocation(line: 198, column: 605, scope: !10145)
!10149 = !DILocation(line: 198, column: 686, scope: !10150)
!10150 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 19)
!10151 = !DILocation(line: 198, column: 700, scope: !10150)
!10152 = !DILocation(line: 198, column: 702, scope: !10150)
!10153 = !DILocation(line: 198, column: 705, scope: !10150)
!10154 = !DILocation(line: 198, column: 709, scope: !10150)
!10155 = !DILocation(line: 198, column: 605, scope: !10150)
!10156 = !DILocation(line: 198, column: 605, scope: !10157)
!10157 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 20)
!10158 = !DILocation(line: 198, column: 425, scope: !10157)
!10159 = !DILocation(line: 198, column: 425, scope: !10160)
!10160 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 21)
!10161 = !DILocation(line: 198, column: 59, scope: !10160)
!10162 = !DILocation(line: 198, column: 59, scope: !10163)
!10163 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 22)
!10164 = !DILocation(line: 198, column: 723, scope: !10163)
!10165 = !DILocation(line: 198, column: 57, scope: !10163)
!10166 = !DILocation(line: 198, column: 57, scope: !10167)
!10167 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 23)
!10168 = !DILocation(line: 198, column: 752, scope: !10169)
!10169 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 24)
!10170 = !DILocation(line: 198, column: 766, scope: !10169)
!10171 = !DILocation(line: 198, column: 768, scope: !10169)
!10172 = !DILocation(line: 198, column: 775, scope: !10169)
!10173 = !DILocation(line: 198, column: 789, scope: !10169)
!10174 = !DILocation(line: 198, column: 791, scope: !10169)
!10175 = !DILocation(line: 198, column: 794, scope: !10169)
!10176 = !DILocation(line: 198, column: 798, scope: !10169)
!10177 = !DILocation(line: 198, column: 772, scope: !10169)
!10178 = !DILocation(line: 198, column: 751, scope: !10169)
!10179 = !DILocation(line: 198, column: 809, scope: !10180)
!10180 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 25)
!10181 = !DILocation(line: 198, column: 823, scope: !10180)
!10182 = !DILocation(line: 198, column: 825, scope: !10180)
!10183 = !DILocation(line: 198, column: 751, scope: !10180)
!10184 = !DILocation(line: 198, column: 832, scope: !10185)
!10185 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 26)
!10186 = !DILocation(line: 198, column: 846, scope: !10185)
!10187 = !DILocation(line: 198, column: 848, scope: !10185)
!10188 = !DILocation(line: 198, column: 851, scope: !10185)
!10189 = !DILocation(line: 198, column: 855, scope: !10185)
!10190 = !DILocation(line: 198, column: 751, scope: !10185)
!10191 = !DILocation(line: 198, column: 751, scope: !10192)
!10192 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 27)
!10193 = !DILocation(line: 198, column: 875, scope: !10192)
!10194 = !DILocation(line: 198, column: 889, scope: !10192)
!10195 = !DILocation(line: 198, column: 891, scope: !10192)
!10196 = !DILocation(line: 198, column: 873, scope: !10192)
!10197 = !DILocation(line: 198, column: 865, scope: !10192)
!10198 = !DILocation(line: 198, column: 749, scope: !10192)
!10199 = !DILocation(line: 198, column: 905, scope: !10200)
!10200 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 28)
!10201 = !DILocation(line: 198, column: 919, scope: !10200)
!10202 = !DILocation(line: 198, column: 921, scope: !10200)
!10203 = !DILocation(line: 198, column: 903, scope: !10200)
!10204 = !DILocation(line: 198, column: 749, scope: !10200)
!10205 = !DILocation(line: 198, column: 930, scope: !10206)
!10206 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 29)
!10207 = !DILocation(line: 198, column: 944, scope: !10206)
!10208 = !DILocation(line: 198, column: 946, scope: !10206)
!10209 = !DILocation(line: 198, column: 953, scope: !10206)
!10210 = !DILocation(line: 198, column: 967, scope: !10206)
!10211 = !DILocation(line: 198, column: 969, scope: !10206)
!10212 = !DILocation(line: 198, column: 972, scope: !10206)
!10213 = !DILocation(line: 198, column: 976, scope: !10206)
!10214 = !DILocation(line: 198, column: 950, scope: !10206)
!10215 = !DILocation(line: 198, column: 929, scope: !10206)
!10216 = !DILocation(line: 198, column: 987, scope: !10217)
!10217 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 30)
!10218 = !DILocation(line: 198, column: 1001, scope: !10217)
!10219 = !DILocation(line: 198, column: 1003, scope: !10217)
!10220 = !DILocation(line: 198, column: 929, scope: !10217)
!10221 = !DILocation(line: 198, column: 1010, scope: !10222)
!10222 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 31)
!10223 = !DILocation(line: 198, column: 1024, scope: !10222)
!10224 = !DILocation(line: 198, column: 1026, scope: !10222)
!10225 = !DILocation(line: 198, column: 1029, scope: !10222)
!10226 = !DILocation(line: 198, column: 1033, scope: !10222)
!10227 = !DILocation(line: 198, column: 929, scope: !10222)
!10228 = !DILocation(line: 198, column: 929, scope: !10229)
!10229 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 32)
!10230 = !DILocation(line: 198, column: 749, scope: !10229)
!10231 = !DILocation(line: 198, column: 749, scope: !10232)
!10232 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 33)
!10233 = !DILocation(line: 198, column: 1056, scope: !10232)
!10234 = !DILocation(line: 198, column: 1070, scope: !10232)
!10235 = !DILocation(line: 198, column: 1072, scope: !10232)
!10236 = !DILocation(line: 198, column: 1054, scope: !10232)
!10237 = !DILocation(line: 198, column: 1045, scope: !10232)
!10238 = !DILocation(line: 198, column: 747, scope: !10232)
!10239 = !DILocation(line: 198, column: 1088, scope: !10240)
!10240 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 34)
!10241 = !DILocation(line: 198, column: 1102, scope: !10240)
!10242 = !DILocation(line: 198, column: 1104, scope: !10240)
!10243 = !DILocation(line: 198, column: 1086, scope: !10240)
!10244 = !DILocation(line: 198, column: 747, scope: !10240)
!10245 = !DILocation(line: 198, column: 1116, scope: !10246)
!10246 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 35)
!10247 = !DILocation(line: 198, column: 1130, scope: !10246)
!10248 = !DILocation(line: 198, column: 1132, scope: !10246)
!10249 = !DILocation(line: 198, column: 1139, scope: !10246)
!10250 = !DILocation(line: 198, column: 1153, scope: !10246)
!10251 = !DILocation(line: 198, column: 1155, scope: !10246)
!10252 = !DILocation(line: 198, column: 1158, scope: !10246)
!10253 = !DILocation(line: 198, column: 1162, scope: !10246)
!10254 = !DILocation(line: 198, column: 1136, scope: !10246)
!10255 = !DILocation(line: 198, column: 1115, scope: !10246)
!10256 = !DILocation(line: 198, column: 1173, scope: !10257)
!10257 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 36)
!10258 = !DILocation(line: 198, column: 1187, scope: !10257)
!10259 = !DILocation(line: 198, column: 1189, scope: !10257)
!10260 = !DILocation(line: 198, column: 1115, scope: !10257)
!10261 = !DILocation(line: 198, column: 1196, scope: !10262)
!10262 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 37)
!10263 = !DILocation(line: 198, column: 1210, scope: !10262)
!10264 = !DILocation(line: 198, column: 1212, scope: !10262)
!10265 = !DILocation(line: 198, column: 1215, scope: !10262)
!10266 = !DILocation(line: 198, column: 1219, scope: !10262)
!10267 = !DILocation(line: 198, column: 1115, scope: !10262)
!10268 = !DILocation(line: 198, column: 1115, scope: !10269)
!10269 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 38)
!10270 = !DILocation(line: 198, column: 1239, scope: !10269)
!10271 = !DILocation(line: 198, column: 1253, scope: !10269)
!10272 = !DILocation(line: 198, column: 1255, scope: !10269)
!10273 = !DILocation(line: 198, column: 1237, scope: !10269)
!10274 = !DILocation(line: 198, column: 1229, scope: !10269)
!10275 = !DILocation(line: 198, column: 1113, scope: !10269)
!10276 = !DILocation(line: 198, column: 1269, scope: !10277)
!10277 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 39)
!10278 = !DILocation(line: 198, column: 1283, scope: !10277)
!10279 = !DILocation(line: 198, column: 1285, scope: !10277)
!10280 = !DILocation(line: 198, column: 1267, scope: !10277)
!10281 = !DILocation(line: 198, column: 1113, scope: !10277)
!10282 = !DILocation(line: 198, column: 1294, scope: !10283)
!10283 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 40)
!10284 = !DILocation(line: 198, column: 1308, scope: !10283)
!10285 = !DILocation(line: 198, column: 1310, scope: !10283)
!10286 = !DILocation(line: 198, column: 1317, scope: !10283)
!10287 = !DILocation(line: 198, column: 1331, scope: !10283)
!10288 = !DILocation(line: 198, column: 1333, scope: !10283)
!10289 = !DILocation(line: 198, column: 1336, scope: !10283)
!10290 = !DILocation(line: 198, column: 1340, scope: !10283)
!10291 = !DILocation(line: 198, column: 1314, scope: !10283)
!10292 = !DILocation(line: 198, column: 1293, scope: !10283)
!10293 = !DILocation(line: 198, column: 1351, scope: !10294)
!10294 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 41)
!10295 = !DILocation(line: 198, column: 1365, scope: !10294)
!10296 = !DILocation(line: 198, column: 1367, scope: !10294)
!10297 = !DILocation(line: 198, column: 1293, scope: !10294)
!10298 = !DILocation(line: 198, column: 1374, scope: !10299)
!10299 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 42)
!10300 = !DILocation(line: 198, column: 1388, scope: !10299)
!10301 = !DILocation(line: 198, column: 1390, scope: !10299)
!10302 = !DILocation(line: 198, column: 1393, scope: !10299)
!10303 = !DILocation(line: 198, column: 1397, scope: !10299)
!10304 = !DILocation(line: 198, column: 1293, scope: !10299)
!10305 = !DILocation(line: 198, column: 1293, scope: !10306)
!10306 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 43)
!10307 = !DILocation(line: 198, column: 1113, scope: !10306)
!10308 = !DILocation(line: 198, column: 1113, scope: !10309)
!10309 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 44)
!10310 = !DILocation(line: 198, column: 747, scope: !10309)
!10311 = !DILocation(line: 198, column: 747, scope: !10312)
!10312 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 45)
!10313 = !DILocation(line: 198, column: 57, scope: !10312)
!10314 = !DILocation(line: 198, column: 57, scope: !10315)
!10315 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 46)
!10316 = !DILocation(line: 198, column: 1416, scope: !10315)
!10317 = !DILocation(line: 198, column: 1423, scope: !10315)
!10318 = !DILocation(line: 198, column: 1435, scope: !10315)
!10319 = !DILocation(line: 198, column: 1413, scope: !10315)
!10320 = !DILocation(line: 198, column: 55, scope: !10315)
!10321 = !DILocation(line: 198, column: 1443, scope: !10322)
!10322 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 47)
!10323 = !DILocation(line: 198, column: 1450, scope: !10322)
!10324 = !DILocation(line: 198, column: 1462, scope: !10322)
!10325 = !DILocation(line: 198, column: 55, scope: !10322)
!10326 = !DILocation(line: 198, column: 1478, scope: !10327)
!10327 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 48)
!10328 = !DILocation(line: 198, column: 1492, scope: !10327)
!10329 = !DILocation(line: 198, column: 1494, scope: !10327)
!10330 = !DILocation(line: 198, column: 1501, scope: !10327)
!10331 = !DILocation(line: 198, column: 1515, scope: !10327)
!10332 = !DILocation(line: 198, column: 1517, scope: !10327)
!10333 = !DILocation(line: 198, column: 1520, scope: !10327)
!10334 = !DILocation(line: 198, column: 1524, scope: !10327)
!10335 = !DILocation(line: 198, column: 1498, scope: !10327)
!10336 = !DILocation(line: 198, column: 1477, scope: !10327)
!10337 = !DILocation(line: 198, column: 1535, scope: !10338)
!10338 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 49)
!10339 = !DILocation(line: 198, column: 1549, scope: !10338)
!10340 = !DILocation(line: 198, column: 1551, scope: !10338)
!10341 = !DILocation(line: 198, column: 1477, scope: !10338)
!10342 = !DILocation(line: 198, column: 1558, scope: !10343)
!10343 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 50)
!10344 = !DILocation(line: 198, column: 1572, scope: !10343)
!10345 = !DILocation(line: 198, column: 1574, scope: !10343)
!10346 = !DILocation(line: 198, column: 1577, scope: !10343)
!10347 = !DILocation(line: 198, column: 1581, scope: !10343)
!10348 = !DILocation(line: 198, column: 1477, scope: !10343)
!10349 = !DILocation(line: 198, column: 1477, scope: !10350)
!10350 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 51)
!10351 = !DILocation(line: 198, column: 1601, scope: !10350)
!10352 = !DILocation(line: 198, column: 1615, scope: !10350)
!10353 = !DILocation(line: 198, column: 1617, scope: !10350)
!10354 = !DILocation(line: 198, column: 1599, scope: !10350)
!10355 = !DILocation(line: 198, column: 1591, scope: !10350)
!10356 = !DILocation(line: 198, column: 1475, scope: !10350)
!10357 = !DILocation(line: 198, column: 1631, scope: !10358)
!10358 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 52)
!10359 = !DILocation(line: 198, column: 1645, scope: !10358)
!10360 = !DILocation(line: 198, column: 1647, scope: !10358)
!10361 = !DILocation(line: 198, column: 1629, scope: !10358)
!10362 = !DILocation(line: 198, column: 1475, scope: !10358)
!10363 = !DILocation(line: 198, column: 1656, scope: !10364)
!10364 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 53)
!10365 = !DILocation(line: 198, column: 1670, scope: !10364)
!10366 = !DILocation(line: 198, column: 1672, scope: !10364)
!10367 = !DILocation(line: 198, column: 1679, scope: !10364)
!10368 = !DILocation(line: 198, column: 1693, scope: !10364)
!10369 = !DILocation(line: 198, column: 1695, scope: !10364)
!10370 = !DILocation(line: 198, column: 1698, scope: !10364)
!10371 = !DILocation(line: 198, column: 1702, scope: !10364)
!10372 = !DILocation(line: 198, column: 1676, scope: !10364)
!10373 = !DILocation(line: 198, column: 1655, scope: !10364)
!10374 = !DILocation(line: 198, column: 1713, scope: !10375)
!10375 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 54)
!10376 = !DILocation(line: 198, column: 1727, scope: !10375)
!10377 = !DILocation(line: 198, column: 1729, scope: !10375)
!10378 = !DILocation(line: 198, column: 1655, scope: !10375)
!10379 = !DILocation(line: 198, column: 1736, scope: !10380)
!10380 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 55)
!10381 = !DILocation(line: 198, column: 1750, scope: !10380)
!10382 = !DILocation(line: 198, column: 1752, scope: !10380)
!10383 = !DILocation(line: 198, column: 1755, scope: !10380)
!10384 = !DILocation(line: 198, column: 1759, scope: !10380)
!10385 = !DILocation(line: 198, column: 1655, scope: !10380)
!10386 = !DILocation(line: 198, column: 1655, scope: !10387)
!10387 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 56)
!10388 = !DILocation(line: 198, column: 1475, scope: !10387)
!10389 = !DILocation(line: 198, column: 1475, scope: !10390)
!10390 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 57)
!10391 = !DILocation(line: 198, column: 1782, scope: !10390)
!10392 = !DILocation(line: 198, column: 1796, scope: !10390)
!10393 = !DILocation(line: 198, column: 1798, scope: !10390)
!10394 = !DILocation(line: 198, column: 1780, scope: !10390)
!10395 = !DILocation(line: 198, column: 1771, scope: !10390)
!10396 = !DILocation(line: 198, column: 1473, scope: !10390)
!10397 = !DILocation(line: 198, column: 1814, scope: !10398)
!10398 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 58)
!10399 = !DILocation(line: 198, column: 1828, scope: !10398)
!10400 = !DILocation(line: 198, column: 1830, scope: !10398)
!10401 = !DILocation(line: 198, column: 1812, scope: !10398)
!10402 = !DILocation(line: 198, column: 1473, scope: !10398)
!10403 = !DILocation(line: 198, column: 1842, scope: !10404)
!10404 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 59)
!10405 = !DILocation(line: 198, column: 1856, scope: !10404)
!10406 = !DILocation(line: 198, column: 1858, scope: !10404)
!10407 = !DILocation(line: 198, column: 1865, scope: !10404)
!10408 = !DILocation(line: 198, column: 1879, scope: !10404)
!10409 = !DILocation(line: 198, column: 1881, scope: !10404)
!10410 = !DILocation(line: 198, column: 1884, scope: !10404)
!10411 = !DILocation(line: 198, column: 1888, scope: !10404)
!10412 = !DILocation(line: 198, column: 1862, scope: !10404)
!10413 = !DILocation(line: 198, column: 1841, scope: !10404)
!10414 = !DILocation(line: 198, column: 1899, scope: !10415)
!10415 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 60)
!10416 = !DILocation(line: 198, column: 1913, scope: !10415)
!10417 = !DILocation(line: 198, column: 1915, scope: !10415)
!10418 = !DILocation(line: 198, column: 1841, scope: !10415)
!10419 = !DILocation(line: 198, column: 1922, scope: !10420)
!10420 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 61)
!10421 = !DILocation(line: 198, column: 1936, scope: !10420)
!10422 = !DILocation(line: 198, column: 1938, scope: !10420)
!10423 = !DILocation(line: 198, column: 1941, scope: !10420)
!10424 = !DILocation(line: 198, column: 1945, scope: !10420)
!10425 = !DILocation(line: 198, column: 1841, scope: !10420)
!10426 = !DILocation(line: 198, column: 1841, scope: !10427)
!10427 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 62)
!10428 = !DILocation(line: 198, column: 1965, scope: !10427)
!10429 = !DILocation(line: 198, column: 1979, scope: !10427)
!10430 = !DILocation(line: 198, column: 1981, scope: !10427)
!10431 = !DILocation(line: 198, column: 1963, scope: !10427)
!10432 = !DILocation(line: 198, column: 1955, scope: !10427)
!10433 = !DILocation(line: 198, column: 1839, scope: !10427)
!10434 = !DILocation(line: 198, column: 1995, scope: !10435)
!10435 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 63)
!10436 = !DILocation(line: 198, column: 2009, scope: !10435)
!10437 = !DILocation(line: 198, column: 2011, scope: !10435)
!10438 = !DILocation(line: 198, column: 1993, scope: !10435)
!10439 = !DILocation(line: 198, column: 1839, scope: !10435)
!10440 = !DILocation(line: 198, column: 2020, scope: !10441)
!10441 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 64)
!10442 = !DILocation(line: 198, column: 2034, scope: !10441)
!10443 = !DILocation(line: 198, column: 2036, scope: !10441)
!10444 = !DILocation(line: 198, column: 2043, scope: !10441)
!10445 = !DILocation(line: 198, column: 2057, scope: !10441)
!10446 = !DILocation(line: 198, column: 2059, scope: !10441)
!10447 = !DILocation(line: 198, column: 2062, scope: !10441)
!10448 = !DILocation(line: 198, column: 2066, scope: !10441)
!10449 = !DILocation(line: 198, column: 2040, scope: !10441)
!10450 = !DILocation(line: 198, column: 2019, scope: !10441)
!10451 = !DILocation(line: 198, column: 2077, scope: !10452)
!10452 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 65)
!10453 = !DILocation(line: 198, column: 2091, scope: !10452)
!10454 = !DILocation(line: 198, column: 2093, scope: !10452)
!10455 = !DILocation(line: 198, column: 2019, scope: !10452)
!10456 = !DILocation(line: 198, column: 2100, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 66)
!10458 = !DILocation(line: 198, column: 2114, scope: !10457)
!10459 = !DILocation(line: 198, column: 2116, scope: !10457)
!10460 = !DILocation(line: 198, column: 2119, scope: !10457)
!10461 = !DILocation(line: 198, column: 2123, scope: !10457)
!10462 = !DILocation(line: 198, column: 2019, scope: !10457)
!10463 = !DILocation(line: 198, column: 2019, scope: !10464)
!10464 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 67)
!10465 = !DILocation(line: 198, column: 1839, scope: !10464)
!10466 = !DILocation(line: 198, column: 1839, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 68)
!10468 = !DILocation(line: 198, column: 1473, scope: !10467)
!10469 = !DILocation(line: 198, column: 1473, scope: !10470)
!10470 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 69)
!10471 = !DILocation(line: 198, column: 2137, scope: !10470)
!10472 = !DILocation(line: 198, column: 1471, scope: !10470)
!10473 = !DILocation(line: 198, column: 1471, scope: !10474)
!10474 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 70)
!10475 = !DILocation(line: 198, column: 2166, scope: !10476)
!10476 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 71)
!10477 = !DILocation(line: 198, column: 2180, scope: !10476)
!10478 = !DILocation(line: 198, column: 2182, scope: !10476)
!10479 = !DILocation(line: 198, column: 2189, scope: !10476)
!10480 = !DILocation(line: 198, column: 2203, scope: !10476)
!10481 = !DILocation(line: 198, column: 2205, scope: !10476)
!10482 = !DILocation(line: 198, column: 2208, scope: !10476)
!10483 = !DILocation(line: 198, column: 2212, scope: !10476)
!10484 = !DILocation(line: 198, column: 2186, scope: !10476)
!10485 = !DILocation(line: 198, column: 2165, scope: !10476)
!10486 = !DILocation(line: 198, column: 2223, scope: !10487)
!10487 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 72)
!10488 = !DILocation(line: 198, column: 2237, scope: !10487)
!10489 = !DILocation(line: 198, column: 2239, scope: !10487)
!10490 = !DILocation(line: 198, column: 2165, scope: !10487)
!10491 = !DILocation(line: 198, column: 2246, scope: !10492)
!10492 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 73)
!10493 = !DILocation(line: 198, column: 2260, scope: !10492)
!10494 = !DILocation(line: 198, column: 2262, scope: !10492)
!10495 = !DILocation(line: 198, column: 2265, scope: !10492)
!10496 = !DILocation(line: 198, column: 2269, scope: !10492)
!10497 = !DILocation(line: 198, column: 2165, scope: !10492)
!10498 = !DILocation(line: 198, column: 2165, scope: !10499)
!10499 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 74)
!10500 = !DILocation(line: 198, column: 2289, scope: !10499)
!10501 = !DILocation(line: 198, column: 2303, scope: !10499)
!10502 = !DILocation(line: 198, column: 2305, scope: !10499)
!10503 = !DILocation(line: 198, column: 2287, scope: !10499)
!10504 = !DILocation(line: 198, column: 2279, scope: !10499)
!10505 = !DILocation(line: 198, column: 2163, scope: !10499)
!10506 = !DILocation(line: 198, column: 2319, scope: !10507)
!10507 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 75)
!10508 = !DILocation(line: 198, column: 2333, scope: !10507)
!10509 = !DILocation(line: 198, column: 2335, scope: !10507)
!10510 = !DILocation(line: 198, column: 2317, scope: !10507)
!10511 = !DILocation(line: 198, column: 2163, scope: !10507)
!10512 = !DILocation(line: 198, column: 2344, scope: !10513)
!10513 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 76)
!10514 = !DILocation(line: 198, column: 2358, scope: !10513)
!10515 = !DILocation(line: 198, column: 2360, scope: !10513)
!10516 = !DILocation(line: 198, column: 2367, scope: !10513)
!10517 = !DILocation(line: 198, column: 2381, scope: !10513)
!10518 = !DILocation(line: 198, column: 2383, scope: !10513)
!10519 = !DILocation(line: 198, column: 2386, scope: !10513)
!10520 = !DILocation(line: 198, column: 2390, scope: !10513)
!10521 = !DILocation(line: 198, column: 2364, scope: !10513)
!10522 = !DILocation(line: 198, column: 2343, scope: !10513)
!10523 = !DILocation(line: 198, column: 2401, scope: !10524)
!10524 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 77)
!10525 = !DILocation(line: 198, column: 2415, scope: !10524)
!10526 = !DILocation(line: 198, column: 2417, scope: !10524)
!10527 = !DILocation(line: 198, column: 2343, scope: !10524)
!10528 = !DILocation(line: 198, column: 2424, scope: !10529)
!10529 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 78)
!10530 = !DILocation(line: 198, column: 2438, scope: !10529)
!10531 = !DILocation(line: 198, column: 2440, scope: !10529)
!10532 = !DILocation(line: 198, column: 2443, scope: !10529)
!10533 = !DILocation(line: 198, column: 2447, scope: !10529)
!10534 = !DILocation(line: 198, column: 2343, scope: !10529)
!10535 = !DILocation(line: 198, column: 2343, scope: !10536)
!10536 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 79)
!10537 = !DILocation(line: 198, column: 2163, scope: !10536)
!10538 = !DILocation(line: 198, column: 2163, scope: !10539)
!10539 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 80)
!10540 = !DILocation(line: 198, column: 2470, scope: !10539)
!10541 = !DILocation(line: 198, column: 2484, scope: !10539)
!10542 = !DILocation(line: 198, column: 2486, scope: !10539)
!10543 = !DILocation(line: 198, column: 2468, scope: !10539)
!10544 = !DILocation(line: 198, column: 2459, scope: !10539)
!10545 = !DILocation(line: 198, column: 2161, scope: !10539)
!10546 = !DILocation(line: 198, column: 2502, scope: !10547)
!10547 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 81)
!10548 = !DILocation(line: 198, column: 2516, scope: !10547)
!10549 = !DILocation(line: 198, column: 2518, scope: !10547)
!10550 = !DILocation(line: 198, column: 2500, scope: !10547)
!10551 = !DILocation(line: 198, column: 2161, scope: !10547)
!10552 = !DILocation(line: 198, column: 2530, scope: !10553)
!10553 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 82)
!10554 = !DILocation(line: 198, column: 2544, scope: !10553)
!10555 = !DILocation(line: 198, column: 2546, scope: !10553)
!10556 = !DILocation(line: 198, column: 2553, scope: !10553)
!10557 = !DILocation(line: 198, column: 2567, scope: !10553)
!10558 = !DILocation(line: 198, column: 2569, scope: !10553)
!10559 = !DILocation(line: 198, column: 2572, scope: !10553)
!10560 = !DILocation(line: 198, column: 2576, scope: !10553)
!10561 = !DILocation(line: 198, column: 2550, scope: !10553)
!10562 = !DILocation(line: 198, column: 2529, scope: !10553)
!10563 = !DILocation(line: 198, column: 2587, scope: !10564)
!10564 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 83)
!10565 = !DILocation(line: 198, column: 2601, scope: !10564)
!10566 = !DILocation(line: 198, column: 2603, scope: !10564)
!10567 = !DILocation(line: 198, column: 2529, scope: !10564)
!10568 = !DILocation(line: 198, column: 2610, scope: !10569)
!10569 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 84)
!10570 = !DILocation(line: 198, column: 2624, scope: !10569)
!10571 = !DILocation(line: 198, column: 2626, scope: !10569)
!10572 = !DILocation(line: 198, column: 2629, scope: !10569)
!10573 = !DILocation(line: 198, column: 2633, scope: !10569)
!10574 = !DILocation(line: 198, column: 2529, scope: !10569)
!10575 = !DILocation(line: 198, column: 2529, scope: !10576)
!10576 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 85)
!10577 = !DILocation(line: 198, column: 2653, scope: !10576)
!10578 = !DILocation(line: 198, column: 2667, scope: !10576)
!10579 = !DILocation(line: 198, column: 2669, scope: !10576)
!10580 = !DILocation(line: 198, column: 2651, scope: !10576)
!10581 = !DILocation(line: 198, column: 2643, scope: !10576)
!10582 = !DILocation(line: 198, column: 2527, scope: !10576)
!10583 = !DILocation(line: 198, column: 2683, scope: !10584)
!10584 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 86)
!10585 = !DILocation(line: 198, column: 2697, scope: !10584)
!10586 = !DILocation(line: 198, column: 2699, scope: !10584)
!10587 = !DILocation(line: 198, column: 2681, scope: !10584)
!10588 = !DILocation(line: 198, column: 2527, scope: !10584)
!10589 = !DILocation(line: 198, column: 2708, scope: !10590)
!10590 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 87)
!10591 = !DILocation(line: 198, column: 2722, scope: !10590)
!10592 = !DILocation(line: 198, column: 2724, scope: !10590)
!10593 = !DILocation(line: 198, column: 2731, scope: !10590)
!10594 = !DILocation(line: 198, column: 2745, scope: !10590)
!10595 = !DILocation(line: 198, column: 2747, scope: !10590)
!10596 = !DILocation(line: 198, column: 2750, scope: !10590)
!10597 = !DILocation(line: 198, column: 2754, scope: !10590)
!10598 = !DILocation(line: 198, column: 2728, scope: !10590)
!10599 = !DILocation(line: 198, column: 2707, scope: !10590)
!10600 = !DILocation(line: 198, column: 2765, scope: !10601)
!10601 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 88)
!10602 = !DILocation(line: 198, column: 2779, scope: !10601)
!10603 = !DILocation(line: 198, column: 2781, scope: !10601)
!10604 = !DILocation(line: 198, column: 2707, scope: !10601)
!10605 = !DILocation(line: 198, column: 2788, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 89)
!10607 = !DILocation(line: 198, column: 2802, scope: !10606)
!10608 = !DILocation(line: 198, column: 2804, scope: !10606)
!10609 = !DILocation(line: 198, column: 2807, scope: !10606)
!10610 = !DILocation(line: 198, column: 2811, scope: !10606)
!10611 = !DILocation(line: 198, column: 2707, scope: !10606)
!10612 = !DILocation(line: 198, column: 2707, scope: !10613)
!10613 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 90)
!10614 = !DILocation(line: 198, column: 2527, scope: !10613)
!10615 = !DILocation(line: 198, column: 2527, scope: !10616)
!10616 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 91)
!10617 = !DILocation(line: 198, column: 2161, scope: !10616)
!10618 = !DILocation(line: 198, column: 2161, scope: !10619)
!10619 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 92)
!10620 = !DILocation(line: 198, column: 1471, scope: !10619)
!10621 = !DILocation(line: 198, column: 1471, scope: !10622)
!10622 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 93)
!10623 = !DILocation(line: 198, column: 55, scope: !10622)
!10624 = !DILocation(line: 198, column: 55, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 94)
!10626 = !DILocation(line: 198, column: 37, scope: !10625)
!10627 = !DILocation(line: 198, column: 2830, scope: !10628)
!10628 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 95)
!10629 = !DILocation(line: 198, column: 2837, scope: !10628)
!10630 = !DILocation(line: 198, column: 2849, scope: !10628)
!10631 = !DILocation(line: 198, column: 37, scope: !10628)
!10632 = !DILocation(line: 198, column: 37, scope: !10633)
!10633 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 96)
!10634 = !DILocation(line: 198, column: 33, scope: !10633)
!10635 = !DILocation(line: 198, column: 26, scope: !10633)
!10636 = !DILocation(line: 198, column: 26, scope: !10637)
!10637 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 97)
!10638 = !DILocation(line: 198, column: 2869, scope: !10639)
!10639 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 98)
!10640 = !DILocation(line: 198, column: 2896, scope: !10641)
!10641 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 99)
!10642 = !DILocation(line: 198, column: 2910, scope: !10641)
!10643 = !DILocation(line: 198, column: 2912, scope: !10641)
!10644 = !DILocation(line: 198, column: 2919, scope: !10641)
!10645 = !DILocation(line: 198, column: 2933, scope: !10641)
!10646 = !DILocation(line: 198, column: 2935, scope: !10641)
!10647 = !DILocation(line: 198, column: 2938, scope: !10641)
!10648 = !DILocation(line: 198, column: 2942, scope: !10641)
!10649 = !DILocation(line: 198, column: 2916, scope: !10641)
!10650 = !DILocation(line: 198, column: 2895, scope: !10641)
!10651 = !DILocation(line: 198, column: 2953, scope: !10652)
!10652 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 100)
!10653 = !DILocation(line: 198, column: 2967, scope: !10652)
!10654 = !DILocation(line: 198, column: 2969, scope: !10652)
!10655 = !DILocation(line: 198, column: 2895, scope: !10652)
!10656 = !DILocation(line: 198, column: 2976, scope: !10657)
!10657 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 101)
!10658 = !DILocation(line: 198, column: 2990, scope: !10657)
!10659 = !DILocation(line: 198, column: 2992, scope: !10657)
!10660 = !DILocation(line: 198, column: 2995, scope: !10657)
!10661 = !DILocation(line: 198, column: 2999, scope: !10657)
!10662 = !DILocation(line: 198, column: 2895, scope: !10657)
!10663 = !DILocation(line: 198, column: 2895, scope: !10664)
!10664 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 102)
!10665 = !DILocation(line: 198, column: 3019, scope: !10664)
!10666 = !DILocation(line: 198, column: 3033, scope: !10664)
!10667 = !DILocation(line: 198, column: 3035, scope: !10664)
!10668 = !DILocation(line: 198, column: 3017, scope: !10664)
!10669 = !DILocation(line: 198, column: 3009, scope: !10664)
!10670 = !DILocation(line: 198, column: 2893, scope: !10664)
!10671 = !DILocation(line: 198, column: 3049, scope: !10672)
!10672 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 103)
!10673 = !DILocation(line: 198, column: 3063, scope: !10672)
!10674 = !DILocation(line: 198, column: 3065, scope: !10672)
!10675 = !DILocation(line: 198, column: 3047, scope: !10672)
!10676 = !DILocation(line: 198, column: 2893, scope: !10672)
!10677 = !DILocation(line: 198, column: 3074, scope: !10678)
!10678 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 104)
!10679 = !DILocation(line: 198, column: 3088, scope: !10678)
!10680 = !DILocation(line: 198, column: 3090, scope: !10678)
!10681 = !DILocation(line: 198, column: 3097, scope: !10678)
!10682 = !DILocation(line: 198, column: 3111, scope: !10678)
!10683 = !DILocation(line: 198, column: 3113, scope: !10678)
!10684 = !DILocation(line: 198, column: 3116, scope: !10678)
!10685 = !DILocation(line: 198, column: 3120, scope: !10678)
!10686 = !DILocation(line: 198, column: 3094, scope: !10678)
!10687 = !DILocation(line: 198, column: 3073, scope: !10678)
!10688 = !DILocation(line: 198, column: 3131, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 105)
!10690 = !DILocation(line: 198, column: 3145, scope: !10689)
!10691 = !DILocation(line: 198, column: 3147, scope: !10689)
!10692 = !DILocation(line: 198, column: 3073, scope: !10689)
!10693 = !DILocation(line: 198, column: 3154, scope: !10694)
!10694 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 106)
!10695 = !DILocation(line: 198, column: 3168, scope: !10694)
!10696 = !DILocation(line: 198, column: 3170, scope: !10694)
!10697 = !DILocation(line: 198, column: 3173, scope: !10694)
!10698 = !DILocation(line: 198, column: 3177, scope: !10694)
!10699 = !DILocation(line: 198, column: 3073, scope: !10694)
!10700 = !DILocation(line: 198, column: 3073, scope: !10701)
!10701 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 107)
!10702 = !DILocation(line: 198, column: 2893, scope: !10701)
!10703 = !DILocation(line: 198, column: 2893, scope: !10704)
!10704 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 108)
!10705 = !DILocation(line: 198, column: 3200, scope: !10704)
!10706 = !DILocation(line: 198, column: 3214, scope: !10704)
!10707 = !DILocation(line: 198, column: 3216, scope: !10704)
!10708 = !DILocation(line: 198, column: 3198, scope: !10704)
!10709 = !DILocation(line: 198, column: 3189, scope: !10704)
!10710 = !DILocation(line: 198, column: 2891, scope: !10704)
!10711 = !DILocation(line: 198, column: 3232, scope: !10712)
!10712 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 109)
!10713 = !DILocation(line: 198, column: 3246, scope: !10712)
!10714 = !DILocation(line: 198, column: 3248, scope: !10712)
!10715 = !DILocation(line: 198, column: 3230, scope: !10712)
!10716 = !DILocation(line: 198, column: 2891, scope: !10712)
!10717 = !DILocation(line: 198, column: 3260, scope: !10718)
!10718 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 110)
!10719 = !DILocation(line: 198, column: 3274, scope: !10718)
!10720 = !DILocation(line: 198, column: 3276, scope: !10718)
!10721 = !DILocation(line: 198, column: 3283, scope: !10718)
!10722 = !DILocation(line: 198, column: 3297, scope: !10718)
!10723 = !DILocation(line: 198, column: 3299, scope: !10718)
!10724 = !DILocation(line: 198, column: 3302, scope: !10718)
!10725 = !DILocation(line: 198, column: 3306, scope: !10718)
!10726 = !DILocation(line: 198, column: 3280, scope: !10718)
!10727 = !DILocation(line: 198, column: 3259, scope: !10718)
!10728 = !DILocation(line: 198, column: 3317, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 111)
!10730 = !DILocation(line: 198, column: 3331, scope: !10729)
!10731 = !DILocation(line: 198, column: 3333, scope: !10729)
!10732 = !DILocation(line: 198, column: 3259, scope: !10729)
!10733 = !DILocation(line: 198, column: 3340, scope: !10734)
!10734 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 112)
!10735 = !DILocation(line: 198, column: 3354, scope: !10734)
!10736 = !DILocation(line: 198, column: 3356, scope: !10734)
!10737 = !DILocation(line: 198, column: 3359, scope: !10734)
!10738 = !DILocation(line: 198, column: 3363, scope: !10734)
!10739 = !DILocation(line: 198, column: 3259, scope: !10734)
!10740 = !DILocation(line: 198, column: 3259, scope: !10741)
!10741 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 113)
!10742 = !DILocation(line: 198, column: 3383, scope: !10741)
!10743 = !DILocation(line: 198, column: 3397, scope: !10741)
!10744 = !DILocation(line: 198, column: 3399, scope: !10741)
!10745 = !DILocation(line: 198, column: 3381, scope: !10741)
!10746 = !DILocation(line: 198, column: 3373, scope: !10741)
!10747 = !DILocation(line: 198, column: 3257, scope: !10741)
!10748 = !DILocation(line: 198, column: 3413, scope: !10749)
!10749 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 114)
!10750 = !DILocation(line: 198, column: 3427, scope: !10749)
!10751 = !DILocation(line: 198, column: 3429, scope: !10749)
!10752 = !DILocation(line: 198, column: 3411, scope: !10749)
!10753 = !DILocation(line: 198, column: 3257, scope: !10749)
!10754 = !DILocation(line: 198, column: 3438, scope: !10755)
!10755 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 115)
!10756 = !DILocation(line: 198, column: 3452, scope: !10755)
!10757 = !DILocation(line: 198, column: 3454, scope: !10755)
!10758 = !DILocation(line: 198, column: 3461, scope: !10755)
!10759 = !DILocation(line: 198, column: 3475, scope: !10755)
!10760 = !DILocation(line: 198, column: 3477, scope: !10755)
!10761 = !DILocation(line: 198, column: 3480, scope: !10755)
!10762 = !DILocation(line: 198, column: 3484, scope: !10755)
!10763 = !DILocation(line: 198, column: 3458, scope: !10755)
!10764 = !DILocation(line: 198, column: 3437, scope: !10755)
!10765 = !DILocation(line: 198, column: 3495, scope: !10766)
!10766 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 116)
!10767 = !DILocation(line: 198, column: 3509, scope: !10766)
!10768 = !DILocation(line: 198, column: 3511, scope: !10766)
!10769 = !DILocation(line: 198, column: 3437, scope: !10766)
!10770 = !DILocation(line: 198, column: 3518, scope: !10771)
!10771 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 117)
!10772 = !DILocation(line: 198, column: 3532, scope: !10771)
!10773 = !DILocation(line: 198, column: 3534, scope: !10771)
!10774 = !DILocation(line: 198, column: 3537, scope: !10771)
!10775 = !DILocation(line: 198, column: 3541, scope: !10771)
!10776 = !DILocation(line: 198, column: 3437, scope: !10771)
!10777 = !DILocation(line: 198, column: 3437, scope: !10778)
!10778 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 118)
!10779 = !DILocation(line: 198, column: 3257, scope: !10778)
!10780 = !DILocation(line: 198, column: 3257, scope: !10781)
!10781 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 119)
!10782 = !DILocation(line: 198, column: 2891, scope: !10781)
!10783 = !DILocation(line: 198, column: 2891, scope: !10784)
!10784 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 120)
!10785 = !DILocation(line: 198, column: 3555, scope: !10784)
!10786 = !DILocation(line: 198, column: 2889, scope: !10784)
!10787 = !DILocation(line: 198, column: 2889, scope: !10788)
!10788 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 121)
!10789 = !DILocation(line: 198, column: 3584, scope: !10790)
!10790 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 122)
!10791 = !DILocation(line: 198, column: 3598, scope: !10790)
!10792 = !DILocation(line: 198, column: 3600, scope: !10790)
!10793 = !DILocation(line: 198, column: 3607, scope: !10790)
!10794 = !DILocation(line: 198, column: 3621, scope: !10790)
!10795 = !DILocation(line: 198, column: 3623, scope: !10790)
!10796 = !DILocation(line: 198, column: 3626, scope: !10790)
!10797 = !DILocation(line: 198, column: 3630, scope: !10790)
!10798 = !DILocation(line: 198, column: 3604, scope: !10790)
!10799 = !DILocation(line: 198, column: 3583, scope: !10790)
!10800 = !DILocation(line: 198, column: 3641, scope: !10801)
!10801 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 123)
!10802 = !DILocation(line: 198, column: 3655, scope: !10801)
!10803 = !DILocation(line: 198, column: 3657, scope: !10801)
!10804 = !DILocation(line: 198, column: 3583, scope: !10801)
!10805 = !DILocation(line: 198, column: 3664, scope: !10806)
!10806 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 124)
!10807 = !DILocation(line: 198, column: 3678, scope: !10806)
!10808 = !DILocation(line: 198, column: 3680, scope: !10806)
!10809 = !DILocation(line: 198, column: 3683, scope: !10806)
!10810 = !DILocation(line: 198, column: 3687, scope: !10806)
!10811 = !DILocation(line: 198, column: 3583, scope: !10806)
!10812 = !DILocation(line: 198, column: 3583, scope: !10813)
!10813 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 125)
!10814 = !DILocation(line: 198, column: 3707, scope: !10813)
!10815 = !DILocation(line: 198, column: 3721, scope: !10813)
!10816 = !DILocation(line: 198, column: 3723, scope: !10813)
!10817 = !DILocation(line: 198, column: 3705, scope: !10813)
!10818 = !DILocation(line: 198, column: 3697, scope: !10813)
!10819 = !DILocation(line: 198, column: 3581, scope: !10813)
!10820 = !DILocation(line: 198, column: 3737, scope: !10821)
!10821 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 126)
!10822 = !DILocation(line: 198, column: 3751, scope: !10821)
!10823 = !DILocation(line: 198, column: 3753, scope: !10821)
!10824 = !DILocation(line: 198, column: 3735, scope: !10821)
!10825 = !DILocation(line: 198, column: 3581, scope: !10821)
!10826 = !DILocation(line: 198, column: 3762, scope: !10827)
!10827 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 127)
!10828 = !DILocation(line: 198, column: 3776, scope: !10827)
!10829 = !DILocation(line: 198, column: 3778, scope: !10827)
!10830 = !DILocation(line: 198, column: 3785, scope: !10827)
!10831 = !DILocation(line: 198, column: 3799, scope: !10827)
!10832 = !DILocation(line: 198, column: 3801, scope: !10827)
!10833 = !DILocation(line: 198, column: 3804, scope: !10827)
!10834 = !DILocation(line: 198, column: 3808, scope: !10827)
!10835 = !DILocation(line: 198, column: 3782, scope: !10827)
!10836 = !DILocation(line: 198, column: 3761, scope: !10827)
!10837 = !DILocation(line: 198, column: 3819, scope: !10838)
!10838 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 128)
!10839 = !DILocation(line: 198, column: 3833, scope: !10838)
!10840 = !DILocation(line: 198, column: 3835, scope: !10838)
!10841 = !DILocation(line: 198, column: 3761, scope: !10838)
!10842 = !DILocation(line: 198, column: 3842, scope: !10843)
!10843 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 129)
!10844 = !DILocation(line: 198, column: 3856, scope: !10843)
!10845 = !DILocation(line: 198, column: 3858, scope: !10843)
!10846 = !DILocation(line: 198, column: 3861, scope: !10843)
!10847 = !DILocation(line: 198, column: 3865, scope: !10843)
!10848 = !DILocation(line: 198, column: 3761, scope: !10843)
!10849 = !DILocation(line: 198, column: 3761, scope: !10850)
!10850 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 130)
!10851 = !DILocation(line: 198, column: 3581, scope: !10850)
!10852 = !DILocation(line: 198, column: 3581, scope: !10853)
!10853 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 131)
!10854 = !DILocation(line: 198, column: 3888, scope: !10853)
!10855 = !DILocation(line: 198, column: 3902, scope: !10853)
!10856 = !DILocation(line: 198, column: 3904, scope: !10853)
!10857 = !DILocation(line: 198, column: 3886, scope: !10853)
!10858 = !DILocation(line: 198, column: 3877, scope: !10853)
!10859 = !DILocation(line: 198, column: 3579, scope: !10853)
!10860 = !DILocation(line: 198, column: 3920, scope: !10861)
!10861 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 132)
!10862 = !DILocation(line: 198, column: 3934, scope: !10861)
!10863 = !DILocation(line: 198, column: 3936, scope: !10861)
!10864 = !DILocation(line: 198, column: 3918, scope: !10861)
!10865 = !DILocation(line: 198, column: 3579, scope: !10861)
!10866 = !DILocation(line: 198, column: 3948, scope: !10867)
!10867 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 133)
!10868 = !DILocation(line: 198, column: 3962, scope: !10867)
!10869 = !DILocation(line: 198, column: 3964, scope: !10867)
!10870 = !DILocation(line: 198, column: 3971, scope: !10867)
!10871 = !DILocation(line: 198, column: 3985, scope: !10867)
!10872 = !DILocation(line: 198, column: 3987, scope: !10867)
!10873 = !DILocation(line: 198, column: 3990, scope: !10867)
!10874 = !DILocation(line: 198, column: 3994, scope: !10867)
!10875 = !DILocation(line: 198, column: 3968, scope: !10867)
!10876 = !DILocation(line: 198, column: 3947, scope: !10867)
!10877 = !DILocation(line: 198, column: 4005, scope: !10878)
!10878 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 134)
!10879 = !DILocation(line: 198, column: 4019, scope: !10878)
!10880 = !DILocation(line: 198, column: 4021, scope: !10878)
!10881 = !DILocation(line: 198, column: 3947, scope: !10878)
!10882 = !DILocation(line: 198, column: 4028, scope: !10883)
!10883 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 135)
!10884 = !DILocation(line: 198, column: 4042, scope: !10883)
!10885 = !DILocation(line: 198, column: 4044, scope: !10883)
!10886 = !DILocation(line: 198, column: 4047, scope: !10883)
!10887 = !DILocation(line: 198, column: 4051, scope: !10883)
!10888 = !DILocation(line: 198, column: 3947, scope: !10883)
!10889 = !DILocation(line: 198, column: 3947, scope: !10890)
!10890 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 136)
!10891 = !DILocation(line: 198, column: 4071, scope: !10890)
!10892 = !DILocation(line: 198, column: 4085, scope: !10890)
!10893 = !DILocation(line: 198, column: 4087, scope: !10890)
!10894 = !DILocation(line: 198, column: 4069, scope: !10890)
!10895 = !DILocation(line: 198, column: 4061, scope: !10890)
!10896 = !DILocation(line: 198, column: 3945, scope: !10890)
!10897 = !DILocation(line: 198, column: 4101, scope: !10898)
!10898 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 137)
!10899 = !DILocation(line: 198, column: 4115, scope: !10898)
!10900 = !DILocation(line: 198, column: 4117, scope: !10898)
!10901 = !DILocation(line: 198, column: 4099, scope: !10898)
!10902 = !DILocation(line: 198, column: 3945, scope: !10898)
!10903 = !DILocation(line: 198, column: 4126, scope: !10904)
!10904 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 138)
!10905 = !DILocation(line: 198, column: 4140, scope: !10904)
!10906 = !DILocation(line: 198, column: 4142, scope: !10904)
!10907 = !DILocation(line: 198, column: 4149, scope: !10904)
!10908 = !DILocation(line: 198, column: 4163, scope: !10904)
!10909 = !DILocation(line: 198, column: 4165, scope: !10904)
!10910 = !DILocation(line: 198, column: 4168, scope: !10904)
!10911 = !DILocation(line: 198, column: 4172, scope: !10904)
!10912 = !DILocation(line: 198, column: 4146, scope: !10904)
!10913 = !DILocation(line: 198, column: 4125, scope: !10904)
!10914 = !DILocation(line: 198, column: 4183, scope: !10915)
!10915 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 139)
!10916 = !DILocation(line: 198, column: 4197, scope: !10915)
!10917 = !DILocation(line: 198, column: 4199, scope: !10915)
!10918 = !DILocation(line: 198, column: 4125, scope: !10915)
!10919 = !DILocation(line: 198, column: 4206, scope: !10920)
!10920 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 140)
!10921 = !DILocation(line: 198, column: 4220, scope: !10920)
!10922 = !DILocation(line: 198, column: 4222, scope: !10920)
!10923 = !DILocation(line: 198, column: 4225, scope: !10920)
!10924 = !DILocation(line: 198, column: 4229, scope: !10920)
!10925 = !DILocation(line: 198, column: 4125, scope: !10920)
!10926 = !DILocation(line: 198, column: 4125, scope: !10927)
!10927 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 141)
!10928 = !DILocation(line: 198, column: 3945, scope: !10927)
!10929 = !DILocation(line: 198, column: 3945, scope: !10930)
!10930 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 142)
!10931 = !DILocation(line: 198, column: 3579, scope: !10930)
!10932 = !DILocation(line: 198, column: 3579, scope: !10933)
!10933 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 143)
!10934 = !DILocation(line: 198, column: 2889, scope: !10933)
!10935 = !DILocation(line: 198, column: 2889, scope: !10936)
!10936 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 144)
!10937 = !DILocation(line: 198, column: 4248, scope: !10936)
!10938 = !DILocation(line: 198, column: 4255, scope: !10936)
!10939 = !DILocation(line: 198, column: 4267, scope: !10936)
!10940 = !DILocation(line: 198, column: 4245, scope: !10936)
!10941 = !DILocation(line: 198, column: 2887, scope: !10936)
!10942 = !DILocation(line: 198, column: 4275, scope: !10943)
!10943 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 145)
!10944 = !DILocation(line: 198, column: 4282, scope: !10943)
!10945 = !DILocation(line: 198, column: 4294, scope: !10943)
!10946 = !DILocation(line: 198, column: 2887, scope: !10943)
!10947 = !DILocation(line: 198, column: 4310, scope: !10948)
!10948 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 146)
!10949 = !DILocation(line: 198, column: 4324, scope: !10948)
!10950 = !DILocation(line: 198, column: 4326, scope: !10948)
!10951 = !DILocation(line: 198, column: 4333, scope: !10948)
!10952 = !DILocation(line: 198, column: 4347, scope: !10948)
!10953 = !DILocation(line: 198, column: 4349, scope: !10948)
!10954 = !DILocation(line: 198, column: 4352, scope: !10948)
!10955 = !DILocation(line: 198, column: 4356, scope: !10948)
!10956 = !DILocation(line: 198, column: 4330, scope: !10948)
!10957 = !DILocation(line: 198, column: 4309, scope: !10948)
!10958 = !DILocation(line: 198, column: 4367, scope: !10959)
!10959 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 147)
!10960 = !DILocation(line: 198, column: 4381, scope: !10959)
!10961 = !DILocation(line: 198, column: 4383, scope: !10959)
!10962 = !DILocation(line: 198, column: 4309, scope: !10959)
!10963 = !DILocation(line: 198, column: 4390, scope: !10964)
!10964 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 148)
!10965 = !DILocation(line: 198, column: 4404, scope: !10964)
!10966 = !DILocation(line: 198, column: 4406, scope: !10964)
!10967 = !DILocation(line: 198, column: 4409, scope: !10964)
!10968 = !DILocation(line: 198, column: 4413, scope: !10964)
!10969 = !DILocation(line: 198, column: 4309, scope: !10964)
!10970 = !DILocation(line: 198, column: 4309, scope: !10971)
!10971 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 149)
!10972 = !DILocation(line: 198, column: 4433, scope: !10971)
!10973 = !DILocation(line: 198, column: 4447, scope: !10971)
!10974 = !DILocation(line: 198, column: 4449, scope: !10971)
!10975 = !DILocation(line: 198, column: 4431, scope: !10971)
!10976 = !DILocation(line: 198, column: 4423, scope: !10971)
!10977 = !DILocation(line: 198, column: 4307, scope: !10971)
!10978 = !DILocation(line: 198, column: 4463, scope: !10979)
!10979 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 150)
!10980 = !DILocation(line: 198, column: 4477, scope: !10979)
!10981 = !DILocation(line: 198, column: 4479, scope: !10979)
!10982 = !DILocation(line: 198, column: 4461, scope: !10979)
!10983 = !DILocation(line: 198, column: 4307, scope: !10979)
!10984 = !DILocation(line: 198, column: 4488, scope: !10985)
!10985 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 151)
!10986 = !DILocation(line: 198, column: 4502, scope: !10985)
!10987 = !DILocation(line: 198, column: 4504, scope: !10985)
!10988 = !DILocation(line: 198, column: 4511, scope: !10985)
!10989 = !DILocation(line: 198, column: 4525, scope: !10985)
!10990 = !DILocation(line: 198, column: 4527, scope: !10985)
!10991 = !DILocation(line: 198, column: 4530, scope: !10985)
!10992 = !DILocation(line: 198, column: 4534, scope: !10985)
!10993 = !DILocation(line: 198, column: 4508, scope: !10985)
!10994 = !DILocation(line: 198, column: 4487, scope: !10985)
!10995 = !DILocation(line: 198, column: 4545, scope: !10996)
!10996 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 152)
!10997 = !DILocation(line: 198, column: 4559, scope: !10996)
!10998 = !DILocation(line: 198, column: 4561, scope: !10996)
!10999 = !DILocation(line: 198, column: 4487, scope: !10996)
!11000 = !DILocation(line: 198, column: 4568, scope: !11001)
!11001 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 153)
!11002 = !DILocation(line: 198, column: 4582, scope: !11001)
!11003 = !DILocation(line: 198, column: 4584, scope: !11001)
!11004 = !DILocation(line: 198, column: 4587, scope: !11001)
!11005 = !DILocation(line: 198, column: 4591, scope: !11001)
!11006 = !DILocation(line: 198, column: 4487, scope: !11001)
!11007 = !DILocation(line: 198, column: 4487, scope: !11008)
!11008 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 154)
!11009 = !DILocation(line: 198, column: 4307, scope: !11008)
!11010 = !DILocation(line: 198, column: 4307, scope: !11011)
!11011 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 155)
!11012 = !DILocation(line: 198, column: 4614, scope: !11011)
!11013 = !DILocation(line: 198, column: 4628, scope: !11011)
!11014 = !DILocation(line: 198, column: 4630, scope: !11011)
!11015 = !DILocation(line: 198, column: 4612, scope: !11011)
!11016 = !DILocation(line: 198, column: 4603, scope: !11011)
!11017 = !DILocation(line: 198, column: 4305, scope: !11011)
!11018 = !DILocation(line: 198, column: 4646, scope: !11019)
!11019 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 156)
!11020 = !DILocation(line: 198, column: 4660, scope: !11019)
!11021 = !DILocation(line: 198, column: 4662, scope: !11019)
!11022 = !DILocation(line: 198, column: 4644, scope: !11019)
!11023 = !DILocation(line: 198, column: 4305, scope: !11019)
!11024 = !DILocation(line: 198, column: 4674, scope: !11025)
!11025 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 157)
!11026 = !DILocation(line: 198, column: 4688, scope: !11025)
!11027 = !DILocation(line: 198, column: 4690, scope: !11025)
!11028 = !DILocation(line: 198, column: 4697, scope: !11025)
!11029 = !DILocation(line: 198, column: 4711, scope: !11025)
!11030 = !DILocation(line: 198, column: 4713, scope: !11025)
!11031 = !DILocation(line: 198, column: 4716, scope: !11025)
!11032 = !DILocation(line: 198, column: 4720, scope: !11025)
!11033 = !DILocation(line: 198, column: 4694, scope: !11025)
!11034 = !DILocation(line: 198, column: 4673, scope: !11025)
!11035 = !DILocation(line: 198, column: 4731, scope: !11036)
!11036 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 158)
!11037 = !DILocation(line: 198, column: 4745, scope: !11036)
!11038 = !DILocation(line: 198, column: 4747, scope: !11036)
!11039 = !DILocation(line: 198, column: 4673, scope: !11036)
!11040 = !DILocation(line: 198, column: 4754, scope: !11041)
!11041 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 159)
!11042 = !DILocation(line: 198, column: 4768, scope: !11041)
!11043 = !DILocation(line: 198, column: 4770, scope: !11041)
!11044 = !DILocation(line: 198, column: 4773, scope: !11041)
!11045 = !DILocation(line: 198, column: 4777, scope: !11041)
!11046 = !DILocation(line: 198, column: 4673, scope: !11041)
!11047 = !DILocation(line: 198, column: 4673, scope: !11048)
!11048 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 160)
!11049 = !DILocation(line: 198, column: 4797, scope: !11048)
!11050 = !DILocation(line: 198, column: 4811, scope: !11048)
!11051 = !DILocation(line: 198, column: 4813, scope: !11048)
!11052 = !DILocation(line: 198, column: 4795, scope: !11048)
!11053 = !DILocation(line: 198, column: 4787, scope: !11048)
!11054 = !DILocation(line: 198, column: 4671, scope: !11048)
!11055 = !DILocation(line: 198, column: 4827, scope: !11056)
!11056 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 161)
!11057 = !DILocation(line: 198, column: 4841, scope: !11056)
!11058 = !DILocation(line: 198, column: 4843, scope: !11056)
!11059 = !DILocation(line: 198, column: 4825, scope: !11056)
!11060 = !DILocation(line: 198, column: 4671, scope: !11056)
!11061 = !DILocation(line: 198, column: 4852, scope: !11062)
!11062 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 162)
!11063 = !DILocation(line: 198, column: 4866, scope: !11062)
!11064 = !DILocation(line: 198, column: 4868, scope: !11062)
!11065 = !DILocation(line: 198, column: 4875, scope: !11062)
!11066 = !DILocation(line: 198, column: 4889, scope: !11062)
!11067 = !DILocation(line: 198, column: 4891, scope: !11062)
!11068 = !DILocation(line: 198, column: 4894, scope: !11062)
!11069 = !DILocation(line: 198, column: 4898, scope: !11062)
!11070 = !DILocation(line: 198, column: 4872, scope: !11062)
!11071 = !DILocation(line: 198, column: 4851, scope: !11062)
!11072 = !DILocation(line: 198, column: 4909, scope: !11073)
!11073 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 163)
!11074 = !DILocation(line: 198, column: 4923, scope: !11073)
!11075 = !DILocation(line: 198, column: 4925, scope: !11073)
!11076 = !DILocation(line: 198, column: 4851, scope: !11073)
!11077 = !DILocation(line: 198, column: 4932, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 164)
!11079 = !DILocation(line: 198, column: 4946, scope: !11078)
!11080 = !DILocation(line: 198, column: 4948, scope: !11078)
!11081 = !DILocation(line: 198, column: 4951, scope: !11078)
!11082 = !DILocation(line: 198, column: 4955, scope: !11078)
!11083 = !DILocation(line: 198, column: 4851, scope: !11078)
!11084 = !DILocation(line: 198, column: 4851, scope: !11085)
!11085 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 165)
!11086 = !DILocation(line: 198, column: 4671, scope: !11085)
!11087 = !DILocation(line: 198, column: 4671, scope: !11088)
!11088 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 166)
!11089 = !DILocation(line: 198, column: 4305, scope: !11088)
!11090 = !DILocation(line: 198, column: 4305, scope: !11091)
!11091 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 167)
!11092 = !DILocation(line: 198, column: 4969, scope: !11091)
!11093 = !DILocation(line: 198, column: 4303, scope: !11091)
!11094 = !DILocation(line: 198, column: 4303, scope: !11095)
!11095 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 168)
!11096 = !DILocation(line: 198, column: 4998, scope: !11097)
!11097 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 169)
!11098 = !DILocation(line: 198, column: 5012, scope: !11097)
!11099 = !DILocation(line: 198, column: 5014, scope: !11097)
!11100 = !DILocation(line: 198, column: 5021, scope: !11097)
!11101 = !DILocation(line: 198, column: 5035, scope: !11097)
!11102 = !DILocation(line: 198, column: 5037, scope: !11097)
!11103 = !DILocation(line: 198, column: 5040, scope: !11097)
!11104 = !DILocation(line: 198, column: 5044, scope: !11097)
!11105 = !DILocation(line: 198, column: 5018, scope: !11097)
!11106 = !DILocation(line: 198, column: 4997, scope: !11097)
!11107 = !DILocation(line: 198, column: 5055, scope: !11108)
!11108 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 170)
!11109 = !DILocation(line: 198, column: 5069, scope: !11108)
!11110 = !DILocation(line: 198, column: 5071, scope: !11108)
!11111 = !DILocation(line: 198, column: 4997, scope: !11108)
!11112 = !DILocation(line: 198, column: 5078, scope: !11113)
!11113 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 171)
!11114 = !DILocation(line: 198, column: 5092, scope: !11113)
!11115 = !DILocation(line: 198, column: 5094, scope: !11113)
!11116 = !DILocation(line: 198, column: 5097, scope: !11113)
!11117 = !DILocation(line: 198, column: 5101, scope: !11113)
!11118 = !DILocation(line: 198, column: 4997, scope: !11113)
!11119 = !DILocation(line: 198, column: 4997, scope: !11120)
!11120 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 172)
!11121 = !DILocation(line: 198, column: 5121, scope: !11120)
!11122 = !DILocation(line: 198, column: 5135, scope: !11120)
!11123 = !DILocation(line: 198, column: 5137, scope: !11120)
!11124 = !DILocation(line: 198, column: 5119, scope: !11120)
!11125 = !DILocation(line: 198, column: 5111, scope: !11120)
!11126 = !DILocation(line: 198, column: 4995, scope: !11120)
!11127 = !DILocation(line: 198, column: 5151, scope: !11128)
!11128 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 173)
!11129 = !DILocation(line: 198, column: 5165, scope: !11128)
!11130 = !DILocation(line: 198, column: 5167, scope: !11128)
!11131 = !DILocation(line: 198, column: 5149, scope: !11128)
!11132 = !DILocation(line: 198, column: 4995, scope: !11128)
!11133 = !DILocation(line: 198, column: 5176, scope: !11134)
!11134 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 174)
!11135 = !DILocation(line: 198, column: 5190, scope: !11134)
!11136 = !DILocation(line: 198, column: 5192, scope: !11134)
!11137 = !DILocation(line: 198, column: 5199, scope: !11134)
!11138 = !DILocation(line: 198, column: 5213, scope: !11134)
!11139 = !DILocation(line: 198, column: 5215, scope: !11134)
!11140 = !DILocation(line: 198, column: 5218, scope: !11134)
!11141 = !DILocation(line: 198, column: 5222, scope: !11134)
!11142 = !DILocation(line: 198, column: 5196, scope: !11134)
!11143 = !DILocation(line: 198, column: 5175, scope: !11134)
!11144 = !DILocation(line: 198, column: 5233, scope: !11145)
!11145 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 175)
!11146 = !DILocation(line: 198, column: 5247, scope: !11145)
!11147 = !DILocation(line: 198, column: 5249, scope: !11145)
!11148 = !DILocation(line: 198, column: 5175, scope: !11145)
!11149 = !DILocation(line: 198, column: 5256, scope: !11150)
!11150 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 176)
!11151 = !DILocation(line: 198, column: 5270, scope: !11150)
!11152 = !DILocation(line: 198, column: 5272, scope: !11150)
!11153 = !DILocation(line: 198, column: 5275, scope: !11150)
!11154 = !DILocation(line: 198, column: 5279, scope: !11150)
!11155 = !DILocation(line: 198, column: 5175, scope: !11150)
!11156 = !DILocation(line: 198, column: 5175, scope: !11157)
!11157 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 177)
!11158 = !DILocation(line: 198, column: 4995, scope: !11157)
!11159 = !DILocation(line: 198, column: 4995, scope: !11160)
!11160 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 178)
!11161 = !DILocation(line: 198, column: 5302, scope: !11160)
!11162 = !DILocation(line: 198, column: 5316, scope: !11160)
!11163 = !DILocation(line: 198, column: 5318, scope: !11160)
!11164 = !DILocation(line: 198, column: 5300, scope: !11160)
!11165 = !DILocation(line: 198, column: 5291, scope: !11160)
!11166 = !DILocation(line: 198, column: 4993, scope: !11160)
!11167 = !DILocation(line: 198, column: 5334, scope: !11168)
!11168 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 179)
!11169 = !DILocation(line: 198, column: 5348, scope: !11168)
!11170 = !DILocation(line: 198, column: 5350, scope: !11168)
!11171 = !DILocation(line: 198, column: 5332, scope: !11168)
!11172 = !DILocation(line: 198, column: 4993, scope: !11168)
!11173 = !DILocation(line: 198, column: 5362, scope: !11174)
!11174 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 180)
!11175 = !DILocation(line: 198, column: 5376, scope: !11174)
!11176 = !DILocation(line: 198, column: 5378, scope: !11174)
!11177 = !DILocation(line: 198, column: 5385, scope: !11174)
!11178 = !DILocation(line: 198, column: 5399, scope: !11174)
!11179 = !DILocation(line: 198, column: 5401, scope: !11174)
!11180 = !DILocation(line: 198, column: 5404, scope: !11174)
!11181 = !DILocation(line: 198, column: 5408, scope: !11174)
!11182 = !DILocation(line: 198, column: 5382, scope: !11174)
!11183 = !DILocation(line: 198, column: 5361, scope: !11174)
!11184 = !DILocation(line: 198, column: 5419, scope: !11185)
!11185 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 181)
!11186 = !DILocation(line: 198, column: 5433, scope: !11185)
!11187 = !DILocation(line: 198, column: 5435, scope: !11185)
!11188 = !DILocation(line: 198, column: 5361, scope: !11185)
!11189 = !DILocation(line: 198, column: 5442, scope: !11190)
!11190 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 182)
!11191 = !DILocation(line: 198, column: 5456, scope: !11190)
!11192 = !DILocation(line: 198, column: 5458, scope: !11190)
!11193 = !DILocation(line: 198, column: 5461, scope: !11190)
!11194 = !DILocation(line: 198, column: 5465, scope: !11190)
!11195 = !DILocation(line: 198, column: 5361, scope: !11190)
!11196 = !DILocation(line: 198, column: 5361, scope: !11197)
!11197 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 183)
!11198 = !DILocation(line: 198, column: 5485, scope: !11197)
!11199 = !DILocation(line: 198, column: 5499, scope: !11197)
!11200 = !DILocation(line: 198, column: 5501, scope: !11197)
!11201 = !DILocation(line: 198, column: 5483, scope: !11197)
!11202 = !DILocation(line: 198, column: 5475, scope: !11197)
!11203 = !DILocation(line: 198, column: 5359, scope: !11197)
!11204 = !DILocation(line: 198, column: 5515, scope: !11205)
!11205 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 184)
!11206 = !DILocation(line: 198, column: 5529, scope: !11205)
!11207 = !DILocation(line: 198, column: 5531, scope: !11205)
!11208 = !DILocation(line: 198, column: 5513, scope: !11205)
!11209 = !DILocation(line: 198, column: 5359, scope: !11205)
!11210 = !DILocation(line: 198, column: 5540, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 185)
!11212 = !DILocation(line: 198, column: 5554, scope: !11211)
!11213 = !DILocation(line: 198, column: 5556, scope: !11211)
!11214 = !DILocation(line: 198, column: 5563, scope: !11211)
!11215 = !DILocation(line: 198, column: 5577, scope: !11211)
!11216 = !DILocation(line: 198, column: 5579, scope: !11211)
!11217 = !DILocation(line: 198, column: 5582, scope: !11211)
!11218 = !DILocation(line: 198, column: 5586, scope: !11211)
!11219 = !DILocation(line: 198, column: 5560, scope: !11211)
!11220 = !DILocation(line: 198, column: 5539, scope: !11211)
!11221 = !DILocation(line: 198, column: 5597, scope: !11222)
!11222 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 186)
!11223 = !DILocation(line: 198, column: 5611, scope: !11222)
!11224 = !DILocation(line: 198, column: 5613, scope: !11222)
!11225 = !DILocation(line: 198, column: 5539, scope: !11222)
!11226 = !DILocation(line: 198, column: 5620, scope: !11227)
!11227 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 187)
!11228 = !DILocation(line: 198, column: 5634, scope: !11227)
!11229 = !DILocation(line: 198, column: 5636, scope: !11227)
!11230 = !DILocation(line: 198, column: 5639, scope: !11227)
!11231 = !DILocation(line: 198, column: 5643, scope: !11227)
!11232 = !DILocation(line: 198, column: 5539, scope: !11227)
!11233 = !DILocation(line: 198, column: 5539, scope: !11234)
!11234 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 188)
!11235 = !DILocation(line: 198, column: 5359, scope: !11234)
!11236 = !DILocation(line: 198, column: 5359, scope: !11237)
!11237 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 189)
!11238 = !DILocation(line: 198, column: 4993, scope: !11237)
!11239 = !DILocation(line: 198, column: 4993, scope: !11240)
!11240 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 190)
!11241 = !DILocation(line: 198, column: 4303, scope: !11240)
!11242 = !DILocation(line: 198, column: 4303, scope: !11243)
!11243 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 191)
!11244 = !DILocation(line: 198, column: 2887, scope: !11243)
!11245 = !DILocation(line: 198, column: 2887, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 192)
!11247 = !DILocation(line: 198, column: 2869, scope: !11246)
!11248 = !DILocation(line: 198, column: 5662, scope: !11249)
!11249 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 193)
!11250 = !DILocation(line: 198, column: 5669, scope: !11249)
!11251 = !DILocation(line: 198, column: 5681, scope: !11249)
!11252 = !DILocation(line: 198, column: 2869, scope: !11249)
!11253 = !DILocation(line: 198, column: 2869, scope: !11254)
!11254 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 194)
!11255 = !DILocation(line: 198, column: 26, scope: !11254)
!11256 = !DILocation(line: 198, column: 26, scope: !11257)
!11257 = !DILexicalBlockFile(scope: !10018, file: !9616, discriminator: 195)
!11258 = !DILocation(line: 198, column: 23, scope: !11257)
!11259 = !DILocation(line: 199, column: 29, scope: !10018)
!11260 = !DILocation(line: 199, column: 13, scope: !10018)
!11261 = !DILocation(line: 199, column: 16, scope: !10018)
!11262 = !DILocation(line: 199, column: 20, scope: !10018)
!11263 = !DILocation(line: 199, column: 27, scope: !10018)
!11264 = !DILocation(line: 202, column: 18, scope: !9959)
!11265 = !DILocation(line: 202, column: 28, scope: !9959)
!11266 = !DILocation(line: 202, column: 34, scope: !9959)
!11267 = !DILocation(line: 202, column: 32, scope: !9959)
!11268 = !DILocation(line: 202, column: 41, scope: !9959)
!11269 = !DILocation(line: 202, column: 48, scope: !9959)
!11270 = !DILocation(line: 202, column: 39, scope: !9959)
!11271 = !DILocation(line: 202, column: 16, scope: !9959)
!11272 = !DILocation(line: 203, column: 36, scope: !9959)
!11273 = !DILocation(line: 203, column: 34, scope: !9959)
!11274 = !DILocation(line: 203, column: 43, scope: !9959)
!11275 = !DILocation(line: 203, column: 50, scope: !9959)
!11276 = !DILocation(line: 203, column: 41, scope: !9959)
!11277 = !DILocation(line: 203, column: 23, scope: !9959)
!11278 = !DILocation(line: 210, column: 18, scope: !9615)
!11279 = !DILocation(line: 210, column: 28, scope: !9615)
!11280 = !DILocation(line: 210, column: 17, scope: !9615)
!11281 = !DILocation(line: 210, column: 17, scope: !9728)
!11282 = !DILocation(line: 210, column: 49, scope: !9769)
!11283 = !DILocation(line: 210, column: 17, scope: !9769)
!11284 = !DILocation(line: 210, column: 17, scope: !9773)
!11285 = !DILocation(line: 210, column: 14, scope: !9773)
!11286 = !DILocation(line: 211, column: 21, scope: !9615)
!11287 = !DILocation(line: 211, column: 34, scope: !9615)
!11288 = !DILocation(line: 211, column: 20, scope: !9615)
!11289 = !DILocation(line: 211, column: 20, scope: !9728)
!11290 = !DILocation(line: 211, column: 55, scope: !9769)
!11291 = !DILocation(line: 211, column: 20, scope: !9769)
!11292 = !DILocation(line: 211, column: 20, scope: !9773)
!11293 = !DILocation(line: 211, column: 17, scope: !9773)
!11294 = !DILocation(line: 212, column: 20, scope: !9615)
!11295 = !DILocation(line: 212, column: 32, scope: !9615)
!11296 = !DILocation(line: 212, column: 19, scope: !9615)
!11297 = !DILocation(line: 212, column: 19, scope: !9728)
!11298 = !DILocation(line: 212, column: 53, scope: !9769)
!11299 = !DILocation(line: 212, column: 19, scope: !9769)
!11300 = !DILocation(line: 212, column: 19, scope: !9773)
!11301 = !DILocation(line: 212, column: 16, scope: !9773)
!11302 = !DILocation(line: 217, column: 22, scope: !9615)
!11303 = !DILocation(line: 218, column: 22, scope: !9615)
!11304 = !DILocation(line: 219, column: 12, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 219, column: 5)
!11306 = !DILocation(line: 219, column: 10, scope: !11305)
!11307 = !DILocation(line: 219, column: 17, scope: !11308)
!11308 = !DILexicalBlockFile(scope: !11309, file: !9616, discriminator: 1)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !9616, line: 219, column: 5)
!11310 = !DILocation(line: 219, column: 21, scope: !11308)
!11311 = !DILocation(line: 219, column: 26, scope: !11308)
!11312 = !DILocation(line: 219, column: 30, scope: !11308)
!11313 = !DILocation(line: 219, column: 19, scope: !11308)
!11314 = !DILocation(line: 219, column: 5, scope: !11308)
!11315 = !DILocation(line: 220, column: 24, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !9616, line: 220, column: 9)
!11317 = distinct !DILexicalBlock(scope: !11309, file: !9616, line: 219, column: 71)
!11318 = !DILocation(line: 220, column: 16, scope: !11316)
!11319 = !DILocation(line: 220, column: 14, scope: !11316)
!11320 = !DILocation(line: 220, column: 29, scope: !11321)
!11321 = !DILexicalBlockFile(scope: !11322, file: !9616, discriminator: 1)
!11322 = distinct !DILexicalBlock(scope: !11316, file: !9616, line: 220, column: 9)
!11323 = !DILocation(line: 220, column: 33, scope: !11321)
!11324 = !DILocation(line: 220, column: 38, scope: !11321)
!11325 = !DILocation(line: 220, column: 42, scope: !11321)
!11326 = !DILocation(line: 220, column: 31, scope: !11321)
!11327 = !DILocation(line: 220, column: 9, scope: !11321)
!11328 = !DILocalVariable(name: "nz", scope: !11329, file: !9616, line: 221, type: !991)
!11329 = distinct !DILexicalBlock(scope: !11322, file: !9616, line: 220, column: 85)
!11330 = !DILocation(line: 221, column: 17, scope: !11329)
!11331 = !DILocalVariable(name: "uplim", scope: !11329, file: !9616, line: 222, type: !954)
!11332 = !DILocation(line: 222, column: 19, scope: !11329)
!11333 = !DILocalVariable(name: "energy", scope: !11329, file: !9616, line: 222, type: !954)
!11334 = !DILocation(line: 222, column: 33, scope: !11329)
!11335 = !DILocalVariable(name: "spread", scope: !11329, file: !9616, line: 222, type: !954)
!11336 = !DILocation(line: 222, column: 48, scope: !11329)
!11337 = !DILocation(line: 223, column: 21, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11329, file: !9616, line: 223, column: 13)
!11339 = !DILocation(line: 223, column: 18, scope: !11338)
!11340 = !DILocation(line: 223, column: 26, scope: !11341)
!11341 = !DILexicalBlockFile(scope: !11342, file: !9616, discriminator: 1)
!11342 = distinct !DILexicalBlock(scope: !11338, file: !9616, line: 223, column: 13)
!11343 = !DILocation(line: 223, column: 50, scope: !11341)
!11344 = !DILocation(line: 223, column: 31, scope: !11341)
!11345 = !DILocation(line: 223, column: 36, scope: !11341)
!11346 = !DILocation(line: 223, column: 40, scope: !11341)
!11347 = !DILocation(line: 223, column: 29, scope: !11341)
!11348 = !DILocation(line: 223, column: 13, scope: !11341)
!11349 = !DILocalVariable(name: "band", scope: !11350, file: !9616, line: 224, type: !3232)
!11350 = distinct !DILexicalBlock(scope: !11342, file: !9616, line: 223, column: 60)
!11351 = !DILocation(line: 224, column: 28, scope: !11350)
!11352 = !DILocation(line: 224, column: 73, scope: !11350)
!11353 = !DILocation(line: 224, column: 75, scope: !11350)
!11354 = !DILocation(line: 224, column: 74, scope: !11350)
!11355 = !DILocation(line: 224, column: 78, scope: !11350)
!11356 = !DILocation(line: 224, column: 82, scope: !11350)
!11357 = !DILocation(line: 224, column: 81, scope: !11350)
!11358 = !DILocation(line: 224, column: 36, scope: !11350)
!11359 = !DILocation(line: 224, column: 46, scope: !11350)
!11360 = !DILocation(line: 224, column: 49, scope: !11350)
!11361 = !DILocation(line: 224, column: 39, scope: !11350)
!11362 = !DILocation(line: 224, column: 43, scope: !11350)
!11363 = !DILocation(line: 224, column: 62, scope: !11350)
!11364 = !DILocation(line: 225, column: 21, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11350, file: !9616, line: 225, column: 21)
!11366 = !DILocation(line: 225, column: 30, scope: !11365)
!11367 = !DILocation(line: 225, column: 27, scope: !11365)
!11368 = !DILocation(line: 225, column: 37, scope: !11365)
!11369 = !DILocation(line: 225, column: 40, scope: !11370)
!11370 = !DILexicalBlockFile(scope: !11365, file: !9616, discriminator: 1)
!11371 = !DILocation(line: 225, column: 46, scope: !11370)
!11372 = !DILocation(line: 225, column: 57, scope: !11370)
!11373 = !DILocation(line: 225, column: 63, scope: !11370)
!11374 = !DILocation(line: 225, column: 75, scope: !11370)
!11375 = !DILocation(line: 225, column: 73, scope: !11370)
!11376 = !DILocation(line: 225, column: 53, scope: !11370)
!11377 = !DILocation(line: 225, column: 86, scope: !11370)
!11378 = !DILocation(line: 225, column: 89, scope: !11379)
!11379 = !DILexicalBlockFile(scope: !11365, file: !9616, discriminator: 2)
!11380 = !DILocation(line: 225, column: 95, scope: !11379)
!11381 = !DILocation(line: 225, column: 105, scope: !11379)
!11382 = !DILocation(line: 225, column: 21, scope: !11379)
!11383 = !DILocation(line: 226, column: 34, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11365, file: !9616, line: 225, column: 114)
!11385 = !DILocation(line: 226, column: 36, scope: !11384)
!11386 = !DILocation(line: 226, column: 35, scope: !11384)
!11387 = !DILocation(line: 226, column: 39, scope: !11384)
!11388 = !DILocation(line: 226, column: 43, scope: !11384)
!11389 = !DILocation(line: 226, column: 42, scope: !11384)
!11390 = !DILocation(line: 226, column: 21, scope: !11384)
!11391 = !DILocation(line: 226, column: 26, scope: !11384)
!11392 = !DILocation(line: 226, column: 46, scope: !11384)
!11393 = !DILocation(line: 227, column: 21, scope: !11384)
!11394 = !DILocation(line: 229, column: 20, scope: !11350)
!11395 = !DILocation(line: 230, column: 13, scope: !11350)
!11396 = !DILocation(line: 223, column: 56, scope: !11397)
!11397 = !DILexicalBlockFile(scope: !11342, file: !9616, discriminator: 2)
!11398 = !DILocation(line: 223, column: 13, scope: !11397)
!11399 = distinct !{!11399, !11400}
!11400 = !DILocation(line: 223, column: 13, scope: !11329)
!11401 = !DILocation(line: 231, column: 18, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11329, file: !9616, line: 231, column: 17)
!11403 = !DILocation(line: 231, column: 17, scope: !11329)
!11404 = !DILocation(line: 232, column: 23, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11402, file: !9616, line: 231, column: 22)
!11406 = !DILocation(line: 233, column: 13, scope: !11405)
!11407 = !DILocation(line: 234, column: 20, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11402, file: !9616, line: 233, column: 20)
!11409 = !DILocation(line: 235, column: 25, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11408, file: !9616, line: 235, column: 17)
!11411 = !DILocation(line: 235, column: 22, scope: !11410)
!11412 = !DILocation(line: 235, column: 30, scope: !11413)
!11413 = !DILexicalBlockFile(scope: !11414, file: !9616, discriminator: 1)
!11414 = distinct !DILexicalBlock(scope: !11410, file: !9616, line: 235, column: 17)
!11415 = !DILocation(line: 235, column: 54, scope: !11413)
!11416 = !DILocation(line: 235, column: 35, scope: !11413)
!11417 = !DILocation(line: 235, column: 40, scope: !11413)
!11418 = !DILocation(line: 235, column: 44, scope: !11413)
!11419 = !DILocation(line: 235, column: 33, scope: !11413)
!11420 = !DILocation(line: 235, column: 17, scope: !11413)
!11421 = !DILocalVariable(name: "band", scope: !11422, file: !9616, line: 236, type: !3232)
!11422 = distinct !DILexicalBlock(scope: !11414, file: !9616, line: 235, column: 64)
!11423 = !DILocation(line: 236, column: 32, scope: !11422)
!11424 = !DILocation(line: 236, column: 77, scope: !11422)
!11425 = !DILocation(line: 236, column: 79, scope: !11422)
!11426 = !DILocation(line: 236, column: 78, scope: !11422)
!11427 = !DILocation(line: 236, column: 82, scope: !11422)
!11428 = !DILocation(line: 236, column: 86, scope: !11422)
!11429 = !DILocation(line: 236, column: 85, scope: !11422)
!11430 = !DILocation(line: 236, column: 40, scope: !11422)
!11431 = !DILocation(line: 236, column: 50, scope: !11422)
!11432 = !DILocation(line: 236, column: 53, scope: !11422)
!11433 = !DILocation(line: 236, column: 43, scope: !11422)
!11434 = !DILocation(line: 236, column: 47, scope: !11422)
!11435 = !DILocation(line: 236, column: 66, scope: !11422)
!11436 = !DILocation(line: 237, column: 25, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11422, file: !9616, line: 237, column: 25)
!11438 = !DILocation(line: 237, column: 31, scope: !11437)
!11439 = !DILocation(line: 237, column: 42, scope: !11437)
!11440 = !DILocation(line: 237, column: 48, scope: !11437)
!11441 = !DILocation(line: 237, column: 60, scope: !11437)
!11442 = !DILocation(line: 237, column: 58, scope: !11437)
!11443 = !DILocation(line: 237, column: 38, scope: !11437)
!11444 = !DILocation(line: 237, column: 71, scope: !11437)
!11445 = !DILocation(line: 237, column: 74, scope: !11446)
!11446 = !DILexicalBlockFile(scope: !11437, file: !9616, discriminator: 1)
!11447 = !DILocation(line: 237, column: 80, scope: !11446)
!11448 = !DILocation(line: 237, column: 90, scope: !11446)
!11449 = !DILocation(line: 237, column: 25, scope: !11446)
!11450 = !DILocation(line: 238, column: 25, scope: !11437)
!11451 = !DILocation(line: 239, column: 30, scope: !11422)
!11452 = !DILocation(line: 239, column: 36, scope: !11422)
!11453 = !DILocation(line: 239, column: 27, scope: !11422)
!11454 = !DILocation(line: 240, column: 31, scope: !11422)
!11455 = !DILocation(line: 240, column: 37, scope: !11422)
!11456 = !DILocation(line: 240, column: 28, scope: !11422)
!11457 = !DILocation(line: 241, column: 31, scope: !11422)
!11458 = !DILocation(line: 241, column: 37, scope: !11422)
!11459 = !DILocation(line: 241, column: 28, scope: !11422)
!11460 = !DILocation(line: 242, column: 23, scope: !11422)
!11461 = !DILocation(line: 243, column: 17, scope: !11422)
!11462 = !DILocation(line: 235, column: 60, scope: !11463)
!11463 = !DILexicalBlockFile(scope: !11414, file: !9616, discriminator: 2)
!11464 = !DILocation(line: 235, column: 17, scope: !11463)
!11465 = distinct !{!11465, !11466}
!11466 = !DILocation(line: 235, column: 17, scope: !11408)
!11467 = !DILocation(line: 245, column: 30, scope: !11329)
!11468 = !DILocation(line: 245, column: 20, scope: !11329)
!11469 = !DILocation(line: 245, column: 21, scope: !11329)
!11470 = !DILocation(line: 245, column: 25, scope: !11329)
!11471 = !DILocation(line: 245, column: 24, scope: !11329)
!11472 = !DILocation(line: 245, column: 13, scope: !11329)
!11473 = !DILocation(line: 245, column: 28, scope: !11329)
!11474 = !DILocation(line: 246, column: 32, scope: !11329)
!11475 = !DILocation(line: 246, column: 22, scope: !11329)
!11476 = !DILocation(line: 246, column: 23, scope: !11329)
!11477 = !DILocation(line: 246, column: 27, scope: !11329)
!11478 = !DILocation(line: 246, column: 26, scope: !11329)
!11479 = !DILocation(line: 246, column: 13, scope: !11329)
!11480 = !DILocation(line: 246, column: 30, scope: !11329)
!11481 = !DILocation(line: 247, column: 27, scope: !11329)
!11482 = !DILocation(line: 247, column: 17, scope: !11329)
!11483 = !DILocation(line: 247, column: 18, scope: !11329)
!11484 = !DILocation(line: 247, column: 22, scope: !11329)
!11485 = !DILocation(line: 247, column: 21, scope: !11329)
!11486 = !DILocation(line: 247, column: 13, scope: !11329)
!11487 = !DILocation(line: 247, column: 25, scope: !11329)
!11488 = !DILocation(line: 248, column: 36, scope: !11329)
!11489 = !DILocation(line: 248, column: 35, scope: !11329)
!11490 = !DILocation(line: 248, column: 25, scope: !11329)
!11491 = !DILocation(line: 248, column: 26, scope: !11329)
!11492 = !DILocation(line: 248, column: 30, scope: !11329)
!11493 = !DILocation(line: 248, column: 29, scope: !11329)
!11494 = !DILocation(line: 248, column: 13, scope: !11329)
!11495 = !DILocation(line: 248, column: 18, scope: !11329)
!11496 = !DILocation(line: 248, column: 33, scope: !11329)
!11497 = !DILocation(line: 249, column: 21, scope: !11329)
!11498 = !DILocation(line: 249, column: 18, scope: !11329)
!11499 = !DILocation(line: 250, column: 17, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11329, file: !9616, line: 250, column: 17)
!11501 = !DILocation(line: 250, column: 20, scope: !11500)
!11502 = !DILocation(line: 250, column: 36, scope: !11503)
!11503 = !DILexicalBlockFile(scope: !11500, file: !9616, discriminator: 1)
!11504 = !DILocation(line: 250, column: 37, scope: !11503)
!11505 = !DILocation(line: 250, column: 41, scope: !11503)
!11506 = !DILocation(line: 250, column: 40, scope: !11503)
!11507 = !DILocation(line: 250, column: 23, scope: !11503)
!11508 = !DILocation(line: 250, column: 28, scope: !11503)
!11509 = !DILocation(line: 250, column: 17, scope: !11503)
!11510 = !DILocation(line: 251, column: 40, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11500, file: !9616, line: 250, column: 45)
!11512 = !DILocation(line: 251, column: 49, scope: !11511)
!11513 = !DILocation(line: 251, column: 47, scope: !11511)
!11514 = !DILocation(line: 251, column: 55, scope: !11511)
!11515 = !DILocation(line: 251, column: 63, scope: !11511)
!11516 = !DILocation(line: 251, column: 61, scope: !11511)
!11517 = !DILocation(line: 251, column: 52, scope: !11511)
!11518 = !DILocation(line: 251, column: 30, scope: !11511)
!11519 = !DILocation(line: 251, column: 31, scope: !11511)
!11520 = !DILocation(line: 251, column: 35, scope: !11511)
!11521 = !DILocation(line: 251, column: 34, scope: !11511)
!11522 = !DILocation(line: 251, column: 17, scope: !11511)
!11523 = !DILocation(line: 251, column: 38, scope: !11511)
!11524 = !DILocation(line: 252, column: 21, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11511, file: !9616, line: 252, column: 21)
!11526 = !DILocation(line: 252, column: 38, scope: !11525)
!11527 = !DILocation(line: 252, column: 21, scope: !11511)
!11528 = !DILocation(line: 253, column: 72, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11525, file: !9616, line: 252, column: 43)
!11530 = !DILocation(line: 253, column: 73, scope: !11529)
!11531 = !DILocation(line: 253, column: 77, scope: !11529)
!11532 = !DILocation(line: 253, column: 76, scope: !11529)
!11533 = !DILocation(line: 253, column: 59, scope: !11529)
!11534 = !DILocation(line: 253, column: 57, scope: !11529)
!11535 = !DILocation(line: 253, column: 38, scope: !11529)
!11536 = !DILocation(line: 254, column: 17, scope: !11529)
!11537 = !DILocation(line: 255, column: 42, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11525, file: !9616, line: 254, column: 24)
!11539 = !DILocation(line: 255, column: 76, scope: !11538)
!11540 = !DILocation(line: 255, column: 77, scope: !11538)
!11541 = !DILocation(line: 255, column: 81, scope: !11538)
!11542 = !DILocation(line: 255, column: 80, scope: !11538)
!11543 = !DILocation(line: 255, column: 63, scope: !11538)
!11544 = !DILocation(line: 255, column: 60, scope: !11538)
!11545 = !DILocation(line: 255, column: 41, scope: !11538)
!11546 = !DILocation(line: 255, column: 101, scope: !11547)
!11547 = !DILexicalBlockFile(scope: !11538, file: !9616, discriminator: 1)
!11548 = !DILocation(line: 255, column: 102, scope: !11547)
!11549 = !DILocation(line: 255, column: 106, scope: !11547)
!11550 = !DILocation(line: 255, column: 105, scope: !11547)
!11551 = !DILocation(line: 255, column: 88, scope: !11547)
!11552 = !DILocation(line: 255, column: 41, scope: !11547)
!11553 = !DILocation(line: 255, column: 113, scope: !11554)
!11554 = !DILexicalBlockFile(scope: !11538, file: !9616, discriminator: 2)
!11555 = !DILocation(line: 255, column: 41, scope: !11554)
!11556 = !DILocation(line: 255, column: 41, scope: !11557)
!11557 = !DILexicalBlockFile(scope: !11538, file: !9616, discriminator: 3)
!11558 = !DILocation(line: 255, column: 38, scope: !11557)
!11559 = !DILocation(line: 256, column: 42, scope: !11538)
!11560 = !DILocation(line: 256, column: 76, scope: !11538)
!11561 = !DILocation(line: 256, column: 77, scope: !11538)
!11562 = !DILocation(line: 256, column: 81, scope: !11538)
!11563 = !DILocation(line: 256, column: 80, scope: !11538)
!11564 = !DILocation(line: 256, column: 63, scope: !11538)
!11565 = !DILocation(line: 256, column: 60, scope: !11538)
!11566 = !DILocation(line: 256, column: 41, scope: !11538)
!11567 = !DILocation(line: 256, column: 88, scope: !11547)
!11568 = !DILocation(line: 256, column: 41, scope: !11547)
!11569 = !DILocation(line: 256, column: 122, scope: !11554)
!11570 = !DILocation(line: 256, column: 123, scope: !11554)
!11571 = !DILocation(line: 256, column: 127, scope: !11554)
!11572 = !DILocation(line: 256, column: 126, scope: !11554)
!11573 = !DILocation(line: 256, column: 109, scope: !11554)
!11574 = !DILocation(line: 256, column: 41, scope: !11554)
!11575 = !DILocation(line: 256, column: 41, scope: !11557)
!11576 = !DILocation(line: 256, column: 38, scope: !11557)
!11577 = !DILocation(line: 258, column: 13, scope: !11511)
!11578 = !DILocation(line: 259, column: 9, scope: !11329)
!11579 = !DILocation(line: 220, column: 80, scope: !11580)
!11580 = !DILexicalBlockFile(scope: !11322, file: !9616, discriminator: 2)
!11581 = !DILocation(line: 220, column: 60, scope: !11580)
!11582 = !DILocation(line: 220, column: 65, scope: !11580)
!11583 = !DILocation(line: 220, column: 69, scope: !11580)
!11584 = !DILocation(line: 220, column: 57, scope: !11580)
!11585 = !DILocation(line: 220, column: 9, scope: !11580)
!11586 = distinct !{!11586, !11587}
!11587 = !DILocation(line: 220, column: 9, scope: !11317)
!11588 = !DILocation(line: 260, column: 5, scope: !11317)
!11589 = !DILocation(line: 219, column: 67, scope: !11590)
!11590 = !DILexicalBlockFile(scope: !11309, file: !9616, discriminator: 2)
!11591 = !DILocation(line: 219, column: 48, scope: !11590)
!11592 = !DILocation(line: 219, column: 53, scope: !11590)
!11593 = !DILocation(line: 219, column: 57, scope: !11590)
!11594 = !DILocation(line: 219, column: 45, scope: !11590)
!11595 = !DILocation(line: 219, column: 5, scope: !11590)
!11596 = distinct !{!11596, !11597}
!11597 = !DILocation(line: 219, column: 5, scope: !9615)
!11598 = !DILocation(line: 263, column: 15, scope: !9615)
!11599 = !DILocation(line: 264, column: 12, scope: !9716)
!11600 = !DILocation(line: 264, column: 10, scope: !9716)
!11601 = !DILocation(line: 264, column: 17, scope: !11602)
!11602 = !DILexicalBlockFile(scope: !9715, file: !9616, discriminator: 1)
!11603 = !DILocation(line: 264, column: 21, scope: !11602)
!11604 = !DILocation(line: 264, column: 26, scope: !11602)
!11605 = !DILocation(line: 264, column: 30, scope: !11602)
!11606 = !DILocation(line: 264, column: 19, scope: !11602)
!11607 = !DILocation(line: 264, column: 5, scope: !11602)
!11608 = !DILocation(line: 265, column: 16, scope: !9713)
!11609 = !DILocation(line: 265, column: 14, scope: !9713)
!11610 = !DILocation(line: 265, column: 21, scope: !11611)
!11611 = !DILexicalBlockFile(scope: !9712, file: !9616, discriminator: 1)
!11612 = !DILocation(line: 265, column: 25, scope: !11611)
!11613 = !DILocation(line: 265, column: 30, scope: !11611)
!11614 = !DILocation(line: 265, column: 34, scope: !11611)
!11615 = !DILocation(line: 265, column: 23, scope: !11611)
!11616 = !DILocation(line: 265, column: 9, scope: !11611)
!11617 = !DILocation(line: 266, column: 29, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !9711, file: !9616, line: 266, column: 17)
!11619 = !DILocation(line: 266, column: 30, scope: !11618)
!11620 = !DILocation(line: 266, column: 34, scope: !11618)
!11621 = !DILocation(line: 266, column: 33, scope: !11618)
!11622 = !DILocation(line: 266, column: 17, scope: !11618)
!11623 = !DILocation(line: 266, column: 22, scope: !11618)
!11624 = !DILocation(line: 266, column: 17, scope: !9711)
!11625 = !DILocation(line: 267, column: 29, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11618, file: !9616, line: 266, column: 38)
!11627 = !DILocation(line: 267, column: 30, scope: !11626)
!11628 = !DILocation(line: 267, column: 34, scope: !11626)
!11629 = !DILocation(line: 267, column: 33, scope: !11626)
!11630 = !DILocation(line: 267, column: 17, scope: !11626)
!11631 = !DILocation(line: 267, column: 22, scope: !11626)
!11632 = !DILocation(line: 267, column: 37, scope: !11626)
!11633 = !DILocation(line: 268, column: 17, scope: !11626)
!11634 = !DILocation(line: 278, column: 56, scope: !9711)
!11635 = !DILocation(line: 278, column: 57, scope: !9711)
!11636 = !DILocation(line: 278, column: 61, scope: !9711)
!11637 = !DILocation(line: 278, column: 60, scope: !9711)
!11638 = !DILocation(line: 278, column: 49, scope: !9711)
!11639 = !DILocation(line: 278, column: 46, scope: !9711)
!11640 = !DILocation(line: 278, column: 35, scope: !9711)
!11641 = !DILocation(line: 278, column: 35, scope: !11642)
!11642 = !DILexicalBlockFile(scope: !9711, file: !9616, discriminator: 1)
!11643 = !DILocation(line: 278, column: 88, scope: !11644)
!11644 = !DILexicalBlockFile(scope: !9711, file: !9616, discriminator: 2)
!11645 = !DILocation(line: 278, column: 89, scope: !11644)
!11646 = !DILocation(line: 278, column: 93, scope: !11644)
!11647 = !DILocation(line: 278, column: 92, scope: !11644)
!11648 = !DILocation(line: 278, column: 81, scope: !11644)
!11649 = !DILocation(line: 278, column: 35, scope: !11644)
!11650 = !DILocation(line: 278, column: 35, scope: !11651)
!11651 = !DILexicalBlockFile(scope: !9711, file: !9616, discriminator: 3)
!11652 = !DILocation(line: 278, column: 119, scope: !11651)
!11653 = !DILocation(line: 278, column: 100, scope: !11651)
!11654 = !DILocation(line: 278, column: 105, scope: !11651)
!11655 = !DILocation(line: 278, column: 109, scope: !11651)
!11656 = !DILocation(line: 278, column: 98, scope: !11651)
!11657 = !DILocation(line: 278, column: 28, scope: !11651)
!11658 = !DILocation(line: 278, column: 27, scope: !11651)
!11659 = !DILocation(line: 278, column: 21, scope: !11651)
!11660 = !DILocation(line: 279, column: 23, scope: !9711)
!11661 = !DILocation(line: 279, column: 21, scope: !9711)
!11662 = !DILocation(line: 277, column: 17, scope: !9711)
!11663 = !DILocation(line: 276, column: 35, scope: !9711)
!11664 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9710)
!11665 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9710)
!11666 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9710)
!11667 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9710)
!11668 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9710)
!11669 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9710)
!11670 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9710)
!11671 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9710)
!11672 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9710)
!11673 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9710)
!11674 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9710)
!11675 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9710)
!11676 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9710)
!11677 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9710)
!11678 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9710)
!11679 = !DILocation(line: 276, column: 25, scope: !9711)
!11680 = !DILocation(line: 276, column: 26, scope: !9711)
!11681 = !DILocation(line: 276, column: 30, scope: !9711)
!11682 = !DILocation(line: 276, column: 29, scope: !9711)
!11683 = !DILocation(line: 276, column: 13, scope: !9711)
!11684 = !DILocation(line: 276, column: 18, scope: !9711)
!11685 = !DILocation(line: 276, column: 33, scope: !9711)
!11686 = !DILocation(line: 281, column: 27, scope: !9711)
!11687 = !DILocation(line: 281, column: 53, scope: !9711)
!11688 = !DILocation(line: 281, column: 54, scope: !9711)
!11689 = !DILocation(line: 281, column: 58, scope: !9711)
!11690 = !DILocation(line: 281, column: 57, scope: !9711)
!11691 = !DILocation(line: 281, column: 41, scope: !9711)
!11692 = !DILocation(line: 281, column: 46, scope: !9711)
!11693 = !DILocation(line: 281, column: 38, scope: !9711)
!11694 = !DILocation(line: 281, column: 26, scope: !9711)
!11695 = !DILocation(line: 281, column: 77, scope: !11642)
!11696 = !DILocation(line: 281, column: 78, scope: !11642)
!11697 = !DILocation(line: 281, column: 82, scope: !11642)
!11698 = !DILocation(line: 281, column: 81, scope: !11642)
!11699 = !DILocation(line: 281, column: 65, scope: !11642)
!11700 = !DILocation(line: 281, column: 70, scope: !11642)
!11701 = !DILocation(line: 281, column: 26, scope: !11642)
!11702 = !DILocation(line: 281, column: 89, scope: !11644)
!11703 = !DILocation(line: 281, column: 26, scope: !11644)
!11704 = !DILocation(line: 281, column: 26, scope: !11651)
!11705 = !DILocation(line: 281, column: 23, scope: !11651)
!11706 = !DILocation(line: 282, column: 9, scope: !9711)
!11707 = !DILocation(line: 265, column: 44, scope: !11708)
!11708 = !DILexicalBlockFile(scope: !9712, file: !9616, discriminator: 2)
!11709 = !DILocation(line: 265, column: 9, scope: !11708)
!11710 = distinct !{!11710, !11711}
!11711 = !DILocation(line: 265, column: 9, scope: !9714)
!11712 = !DILocation(line: 283, column: 5, scope: !9714)
!11713 = !DILocation(line: 264, column: 67, scope: !11714)
!11714 = !DILexicalBlockFile(scope: !9715, file: !9616, discriminator: 2)
!11715 = !DILocation(line: 264, column: 48, scope: !11714)
!11716 = !DILocation(line: 264, column: 53, scope: !11714)
!11717 = !DILocation(line: 264, column: 57, scope: !11714)
!11718 = !DILocation(line: 264, column: 45, scope: !11714)
!11719 = !DILocation(line: 264, column: 5, scope: !11714)
!11720 = distinct !{!11720, !11721}
!11721 = !DILocation(line: 264, column: 5, scope: !9615)
!11722 = !DILocation(line: 286, column: 27, scope: !9615)
!11723 = !DILocation(line: 286, column: 17, scope: !9615)
!11724 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9706)
!11725 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9706)
!11726 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9706)
!11727 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9706)
!11728 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9706)
!11729 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9706)
!11730 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9706)
!11731 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9706)
!11732 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9706)
!11733 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9706)
!11734 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9706)
!11735 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9706)
!11736 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9706)
!11737 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9706)
!11738 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9706)
!11739 = !DILocation(line: 286, column: 15, scope: !9615)
!11740 = !DILocation(line: 287, column: 12, scope: !9702)
!11741 = !DILocation(line: 287, column: 10, scope: !9702)
!11742 = !DILocation(line: 287, column: 17, scope: !11743)
!11743 = !DILexicalBlockFile(scope: !9701, file: !9616, discriminator: 1)
!11744 = !DILocation(line: 287, column: 21, scope: !11743)
!11745 = !DILocation(line: 287, column: 26, scope: !11743)
!11746 = !DILocation(line: 287, column: 30, scope: !11743)
!11747 = !DILocation(line: 287, column: 19, scope: !11743)
!11748 = !DILocation(line: 287, column: 5, scope: !11743)
!11749 = !DILocation(line: 288, column: 16, scope: !9700)
!11750 = !DILocation(line: 288, column: 14, scope: !9700)
!11751 = !DILocation(line: 288, column: 21, scope: !11752)
!11752 = !DILexicalBlockFile(scope: !9699, file: !9616, discriminator: 1)
!11753 = !DILocation(line: 288, column: 25, scope: !11752)
!11754 = !DILocation(line: 288, column: 30, scope: !11752)
!11755 = !DILocation(line: 288, column: 34, scope: !11752)
!11756 = !DILocation(line: 288, column: 23, scope: !11752)
!11757 = !DILocation(line: 288, column: 9, scope: !11752)
!11758 = !DILocation(line: 289, column: 30, scope: !9698)
!11759 = !DILocation(line: 289, column: 31, scope: !9698)
!11760 = !DILocation(line: 289, column: 35, scope: !9698)
!11761 = !DILocation(line: 289, column: 34, scope: !9698)
!11762 = !DILocation(line: 289, column: 18, scope: !9698)
!11763 = !DILocation(line: 289, column: 23, scope: !9698)
!11764 = !DILocation(line: 289, column: 17, scope: !9699)
!11765 = !DILocation(line: 290, column: 61, scope: !9698)
!11766 = !DILocation(line: 290, column: 62, scope: !9698)
!11767 = !DILocation(line: 290, column: 66, scope: !9698)
!11768 = !DILocation(line: 290, column: 65, scope: !9698)
!11769 = !DILocation(line: 290, column: 49, scope: !9698)
!11770 = !DILocation(line: 290, column: 54, scope: !9698)
!11771 = !DILocation(line: 290, column: 70, scope: !9698)
!11772 = !DILocation(line: 290, column: 81, scope: !9698)
!11773 = !DILocation(line: 290, column: 91, scope: !9698)
!11774 = !DILocation(line: 290, column: 96, scope: !9698)
!11775 = !DILocation(line: 290, column: 39, scope: !9698)
!11776 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9697)
!11777 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9697)
!11778 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9697)
!11779 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9697)
!11780 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9697)
!11781 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9697)
!11782 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9697)
!11783 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9697)
!11784 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9697)
!11785 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9697)
!11786 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9697)
!11787 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9697)
!11788 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9697)
!11789 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9697)
!11790 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9697)
!11791 = !DILocation(line: 290, column: 29, scope: !9698)
!11792 = !DILocation(line: 290, column: 30, scope: !9698)
!11793 = !DILocation(line: 290, column: 34, scope: !9698)
!11794 = !DILocation(line: 290, column: 33, scope: !9698)
!11795 = !DILocation(line: 290, column: 17, scope: !9698)
!11796 = !DILocation(line: 290, column: 22, scope: !9698)
!11797 = !DILocation(line: 290, column: 37, scope: !9698)
!11798 = !DILocation(line: 289, column: 36, scope: !11799)
!11799 = !DILexicalBlockFile(scope: !9698, file: !9616, discriminator: 1)
!11800 = !DILocation(line: 288, column: 44, scope: !11801)
!11801 = !DILexicalBlockFile(scope: !9699, file: !9616, discriminator: 2)
!11802 = !DILocation(line: 288, column: 9, scope: !11801)
!11803 = distinct !{!11803, !11804}
!11804 = !DILocation(line: 288, column: 9, scope: !9701)
!11805 = !DILocation(line: 290, column: 99, scope: !11806)
!11806 = !DILexicalBlockFile(scope: !9700, file: !9616, discriminator: 1)
!11807 = !DILocation(line: 287, column: 67, scope: !11808)
!11808 = !DILexicalBlockFile(scope: !9701, file: !9616, discriminator: 2)
!11809 = !DILocation(line: 287, column: 48, scope: !11808)
!11810 = !DILocation(line: 287, column: 53, scope: !11808)
!11811 = !DILocation(line: 287, column: 57, scope: !11808)
!11812 = !DILocation(line: 287, column: 45, scope: !11808)
!11813 = !DILocation(line: 287, column: 5, scope: !11808)
!11814 = distinct !{!11814, !11815}
!11815 = !DILocation(line: 287, column: 5, scope: !9615)
!11816 = !DILocation(line: 292, column: 10, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 292, column: 9)
!11818 = !DILocation(line: 292, column: 9, scope: !9615)
!11819 = !DILocation(line: 293, column: 9, scope: !11817)
!11820 = !DILocation(line: 294, column: 5, scope: !9615)
!11821 = !DILocation(line: 294, column: 8, scope: !9615)
!11822 = !DILocation(line: 294, column: 18, scope: !9615)
!11823 = !DILocation(line: 294, column: 21, scope: !9615)
!11824 = !DILocation(line: 294, column: 29, scope: !9615)
!11825 = !DILocation(line: 294, column: 34, scope: !9615)
!11826 = !DILocation(line: 295, column: 38, scope: !9615)
!11827 = !DILocation(line: 295, column: 5, scope: !9615)
!11828 = !DILocation(line: 297, column: 12, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 297, column: 5)
!11830 = !DILocation(line: 297, column: 10, scope: !11829)
!11831 = !DILocation(line: 297, column: 17, scope: !11832)
!11832 = !DILexicalBlockFile(scope: !11833, file: !9616, discriminator: 1)
!11833 = distinct !DILexicalBlock(scope: !11829, file: !9616, line: 297, column: 5)
!11834 = !DILocation(line: 297, column: 19, scope: !11832)
!11835 = !DILocation(line: 297, column: 5, scope: !11832)
!11836 = !DILocation(line: 298, column: 15, scope: !11833)
!11837 = !DILocation(line: 298, column: 9, scope: !11833)
!11838 = !DILocation(line: 298, column: 18, scope: !11833)
!11839 = !DILocation(line: 297, column: 55, scope: !11840)
!11840 = !DILexicalBlockFile(scope: !11833, file: !9616, discriminator: 2)
!11841 = !DILocation(line: 297, column: 5, scope: !11840)
!11842 = distinct !{!11842, !11843}
!11843 = !DILocation(line: 297, column: 5, scope: !9615)
!11844 = !DILocation(line: 299, column: 12, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 299, column: 5)
!11846 = !DILocation(line: 299, column: 10, scope: !11845)
!11847 = !DILocation(line: 299, column: 17, scope: !11848)
!11848 = !DILexicalBlockFile(scope: !11849, file: !9616, discriminator: 1)
!11849 = distinct !DILexicalBlock(scope: !11845, file: !9616, line: 299, column: 5)
!11850 = !DILocation(line: 299, column: 21, scope: !11848)
!11851 = !DILocation(line: 299, column: 26, scope: !11848)
!11852 = !DILocation(line: 299, column: 30, scope: !11848)
!11853 = !DILocation(line: 299, column: 19, scope: !11848)
!11854 = !DILocation(line: 299, column: 5, scope: !11848)
!11855 = !DILocation(line: 300, column: 17, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11849, file: !9616, line: 299, column: 71)
!11857 = !DILocation(line: 300, column: 18, scope: !11856)
!11858 = !DILocation(line: 300, column: 15, scope: !11856)
!11859 = !DILocation(line: 301, column: 16, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11856, file: !9616, line: 301, column: 9)
!11861 = !DILocation(line: 301, column: 14, scope: !11860)
!11862 = !DILocation(line: 301, column: 21, scope: !11863)
!11863 = !DILexicalBlockFile(scope: !11864, file: !9616, discriminator: 1)
!11864 = distinct !DILexicalBlock(scope: !11860, file: !9616, line: 301, column: 9)
!11865 = !DILocation(line: 301, column: 25, scope: !11863)
!11866 = !DILocation(line: 301, column: 30, scope: !11863)
!11867 = !DILocation(line: 301, column: 34, scope: !11863)
!11868 = !DILocation(line: 301, column: 23, scope: !11863)
!11869 = !DILocation(line: 301, column: 9, scope: !11863)
!11870 = !DILocalVariable(name: "scaled", scope: !11871, file: !9616, line: 302, type: !1780)
!11871 = distinct !DILexicalBlock(scope: !11864, file: !9616, line: 301, column: 48)
!11872 = !DILocation(line: 302, column: 26, scope: !11871)
!11873 = !DILocation(line: 302, column: 35, scope: !11871)
!11874 = !DILocation(line: 302, column: 38, scope: !11871)
!11875 = !DILocation(line: 302, column: 47, scope: !11871)
!11876 = !DILocation(line: 302, column: 45, scope: !11871)
!11877 = !DILocalVariable(name: "minsfidx", scope: !11871, file: !9616, line: 303, type: !991)
!11878 = !DILocation(line: 303, column: 17, scope: !11871)
!11879 = !DILocation(line: 304, column: 63, scope: !11871)
!11880 = !DILocation(line: 304, column: 44, scope: !11871)
!11881 = !DILocation(line: 304, column: 49, scope: !11871)
!11882 = !DILocation(line: 304, column: 53, scope: !11871)
!11883 = !DILocation(line: 304, column: 86, scope: !11871)
!11884 = !DILocation(line: 304, column: 67, scope: !11871)
!11885 = !DILocation(line: 304, column: 72, scope: !11871)
!11886 = !DILocation(line: 304, column: 76, scope: !11871)
!11887 = !DILocation(line: 304, column: 90, scope: !11871)
!11888 = !DILocation(line: 304, column: 31, scope: !11871)
!11889 = !DILocation(line: 304, column: 21, scope: !11871)
!11890 = !DILocation(line: 304, column: 22, scope: !11871)
!11891 = !DILocation(line: 304, column: 26, scope: !11871)
!11892 = !DILocation(line: 304, column: 25, scope: !11871)
!11893 = !DILocation(line: 304, column: 13, scope: !11871)
!11894 = !DILocation(line: 304, column: 29, scope: !11871)
!11895 = !DILocation(line: 305, column: 25, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11871, file: !9616, line: 305, column: 17)
!11897 = !DILocation(line: 305, column: 26, scope: !11896)
!11898 = !DILocation(line: 305, column: 30, scope: !11896)
!11899 = !DILocation(line: 305, column: 29, scope: !11896)
!11900 = !DILocation(line: 305, column: 17, scope: !11896)
!11901 = !DILocation(line: 305, column: 33, scope: !11896)
!11902 = !DILocation(line: 305, column: 17, scope: !11871)
!11903 = !DILocation(line: 306, column: 47, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11896, file: !9616, line: 305, column: 38)
!11905 = !DILocation(line: 306, column: 48, scope: !11904)
!11906 = !DILocation(line: 306, column: 52, scope: !11904)
!11907 = !DILocation(line: 306, column: 51, scope: !11904)
!11908 = !DILocation(line: 306, column: 39, scope: !11904)
!11909 = !DILocation(line: 306, column: 28, scope: !11904)
!11910 = !DILocation(line: 306, column: 26, scope: !11904)
!11911 = !DILocation(line: 307, column: 25, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11904, file: !9616, line: 307, column: 17)
!11913 = !DILocation(line: 307, column: 22, scope: !11912)
!11914 = !DILocation(line: 307, column: 30, scope: !11915)
!11915 = !DILexicalBlockFile(scope: !11916, file: !9616, discriminator: 1)
!11916 = distinct !DILexicalBlock(scope: !11912, file: !9616, line: 307, column: 17)
!11917 = !DILocation(line: 307, column: 54, scope: !11915)
!11918 = !DILocation(line: 307, column: 35, scope: !11915)
!11919 = !DILocation(line: 307, column: 40, scope: !11915)
!11920 = !DILocation(line: 307, column: 44, scope: !11915)
!11921 = !DILocation(line: 307, column: 33, scope: !11915)
!11922 = !DILocation(line: 307, column: 17, scope: !11915)
!11923 = !DILocation(line: 308, column: 42, scope: !11916)
!11924 = !DILocation(line: 308, column: 28, scope: !11916)
!11925 = !DILocation(line: 308, column: 30, scope: !11916)
!11926 = !DILocation(line: 308, column: 29, scope: !11916)
!11927 = !DILocation(line: 308, column: 33, scope: !11916)
!11928 = !DILocation(line: 308, column: 37, scope: !11916)
!11929 = !DILocation(line: 308, column: 36, scope: !11916)
!11930 = !DILocation(line: 308, column: 21, scope: !11916)
!11931 = !DILocation(line: 308, column: 40, scope: !11916)
!11932 = !DILocation(line: 307, column: 60, scope: !11933)
!11933 = !DILexicalBlockFile(scope: !11916, file: !9616, discriminator: 2)
!11934 = !DILocation(line: 307, column: 17, scope: !11933)
!11935 = distinct !{!11935, !11936}
!11936 = !DILocation(line: 307, column: 17, scope: !11904)
!11937 = !DILocation(line: 309, column: 13, scope: !11904)
!11938 = !DILocation(line: 310, column: 41, scope: !11871)
!11939 = !DILocation(line: 310, column: 22, scope: !11871)
!11940 = !DILocation(line: 310, column: 27, scope: !11871)
!11941 = !DILocation(line: 310, column: 31, scope: !11871)
!11942 = !DILocation(line: 310, column: 19, scope: !11871)
!11943 = !DILocation(line: 311, column: 9, scope: !11871)
!11944 = !DILocation(line: 301, column: 44, scope: !11945)
!11945 = !DILexicalBlockFile(scope: !11864, file: !9616, discriminator: 2)
!11946 = !DILocation(line: 301, column: 9, scope: !11945)
!11947 = distinct !{!11947, !11948}
!11948 = !DILocation(line: 301, column: 9, scope: !11856)
!11949 = !DILocation(line: 312, column: 5, scope: !11856)
!11950 = !DILocation(line: 299, column: 67, scope: !11951)
!11951 = !DILexicalBlockFile(scope: !11849, file: !9616, discriminator: 2)
!11952 = !DILocation(line: 299, column: 48, scope: !11951)
!11953 = !DILocation(line: 299, column: 53, scope: !11951)
!11954 = !DILocation(line: 299, column: 57, scope: !11951)
!11955 = !DILocation(line: 299, column: 45, scope: !11951)
!11956 = !DILocation(line: 299, column: 5, scope: !11951)
!11957 = distinct !{!11957, !11958}
!11958 = !DILocation(line: 299, column: 5, scope: !9615)
!11959 = !DILocation(line: 321, column: 5, scope: !9615)
!11960 = !DILocation(line: 322, column: 12, scope: !9685)
!11961 = !DILocation(line: 322, column: 10, scope: !9685)
!11962 = !DILocation(line: 322, column: 17, scope: !11963)
!11963 = !DILexicalBlockFile(scope: !9684, file: !9616, discriminator: 1)
!11964 = !DILocation(line: 322, column: 21, scope: !11963)
!11965 = !DILocation(line: 322, column: 26, scope: !11963)
!11966 = !DILocation(line: 322, column: 30, scope: !11963)
!11967 = !DILocation(line: 322, column: 19, scope: !11963)
!11968 = !DILocation(line: 322, column: 5, scope: !11963)
!11969 = !DILocalVariable(name: "de_psy_factor", scope: !9683, file: !9616, line: 324, type: !954)
!11970 = !DILocation(line: 324, column: 15, scope: !9683)
!11971 = !DILocation(line: 324, column: 32, scope: !9683)
!11972 = !DILocation(line: 324, column: 37, scope: !9683)
!11973 = !DILocation(line: 324, column: 41, scope: !9683)
!11974 = !DILocation(line: 324, column: 53, scope: !9683)
!11975 = !DILocation(line: 324, column: 31, scope: !9683)
!11976 = !DILocation(line: 324, column: 86, scope: !11977)
!11977 = !DILexicalBlockFile(scope: !9683, file: !9616, discriminator: 1)
!11978 = !DILocation(line: 324, column: 67, scope: !11977)
!11979 = !DILocation(line: 324, column: 72, scope: !11977)
!11980 = !DILocation(line: 324, column: 76, scope: !11977)
!11981 = !DILocation(line: 324, column: 65, scope: !11977)
!11982 = !DILocation(line: 324, column: 31, scope: !11977)
!11983 = !DILocation(line: 324, column: 31, scope: !11984)
!11984 = !DILexicalBlockFile(scope: !9683, file: !9616, discriminator: 2)
!11985 = !DILocation(line: 324, column: 31, scope: !11986)
!11986 = !DILexicalBlockFile(scope: !9683, file: !9616, discriminator: 3)
!11987 = !DILocation(line: 324, column: 15, scope: !11986)
!11988 = !DILocation(line: 325, column: 17, scope: !9683)
!11989 = !DILocation(line: 325, column: 18, scope: !9683)
!11990 = !DILocation(line: 325, column: 15, scope: !9683)
!11991 = !DILocation(line: 326, column: 16, scope: !9682)
!11992 = !DILocation(line: 326, column: 14, scope: !9682)
!11993 = !DILocation(line: 326, column: 21, scope: !11994)
!11994 = !DILexicalBlockFile(scope: !9681, file: !9616, discriminator: 1)
!11995 = !DILocation(line: 326, column: 25, scope: !11994)
!11996 = !DILocation(line: 326, column: 30, scope: !11994)
!11997 = !DILocation(line: 326, column: 34, scope: !11994)
!11998 = !DILocation(line: 326, column: 23, scope: !11994)
!11999 = !DILocation(line: 326, column: 9, scope: !11994)
!12000 = !DILocation(line: 327, column: 21, scope: !9679)
!12001 = !DILocation(line: 327, column: 17, scope: !9679)
!12002 = !DILocation(line: 327, column: 24, scope: !9679)
!12003 = !DILocation(line: 327, column: 17, scope: !9680)
!12004 = !DILocalVariable(name: "cleanup_factor", scope: !9678, file: !9616, line: 328, type: !954)
!12005 = !DILocation(line: 328, column: 23, scope: !9678)
!12006 = !DILocation(line: 328, column: 61, scope: !9678)
!12007 = !DILocation(line: 328, column: 70, scope: !9678)
!12008 = !DILocation(line: 328, column: 77, scope: !9678)
!12009 = !DILocation(line: 328, column: 67, scope: !9678)
!12010 = !DILocation(line: 328, column: 48, scope: !9678)
!12011 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !9693)
!12012 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !9693)
!12013 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !9693)
!12014 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !9693)
!12015 = !DILocation(line: 328, column: 40, scope: !12016)
!12016 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 1)
!12017 = !DILocalVariable(name: "energy2uplim", scope: !9678, file: !9616, line: 329, type: !954)
!12018 = !DILocation(line: 329, column: 23, scope: !9678)
!12019 = !DILocation(line: 330, column: 40, scope: !9678)
!12020 = !DILocation(line: 330, column: 21, scope: !9678)
!12021 = !DILocation(line: 330, column: 26, scope: !9678)
!12022 = !DILocation(line: 330, column: 30, scope: !9678)
!12023 = !DILocation(line: 330, column: 63, scope: !9678)
!12024 = !DILocation(line: 330, column: 44, scope: !9678)
!12025 = !DILocation(line: 330, column: 49, scope: !9678)
!12026 = !DILocation(line: 330, column: 53, scope: !9678)
!12027 = !DILocation(line: 331, column: 28, scope: !9678)
!12028 = !DILocation(line: 331, column: 29, scope: !9678)
!12029 = !DILocation(line: 331, column: 33, scope: !9678)
!12030 = !DILocation(line: 331, column: 32, scope: !9678)
!12031 = !DILocation(line: 331, column: 21, scope: !9678)
!12032 = !DILocation(line: 331, column: 43, scope: !9678)
!12033 = !DILocation(line: 331, column: 39, scope: !9678)
!12034 = !DILocation(line: 331, column: 67, scope: !9678)
!12035 = !DILocation(line: 331, column: 48, scope: !9678)
!12036 = !DILocation(line: 331, column: 53, scope: !9678)
!12037 = !DILocation(line: 331, column: 57, scope: !9678)
!12038 = !DILocation(line: 331, column: 46, scope: !9678)
!12039 = !DILocation(line: 331, column: 38, scope: !9678)
!12040 = !DILocation(line: 331, column: 36, scope: !9678)
!12041 = !DILocation(line: 332, column: 21, scope: !9678)
!12042 = !DILocation(line: 332, column: 26, scope: !9678)
!12043 = !DILocation(line: 332, column: 35, scope: !9678)
!12044 = !DILocation(line: 332, column: 33, scope: !9678)
!12045 = !DILocation(line: 333, column: 31, scope: !9678)
!12046 = !DILocation(line: 333, column: 29, scope: !9678)
!12047 = !DILocation(line: 329, column: 38, scope: !9678)
!12048 = !DILocation(line: 334, column: 33, scope: !9678)
!12049 = !DILocation(line: 334, column: 30, scope: !9678)
!12050 = !DILocation(line: 335, column: 23, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !9678, file: !9616, line: 335, column: 21)
!12052 = !DILocation(line: 335, column: 30, scope: !12051)
!12053 = !DILocation(line: 335, column: 36, scope: !12051)
!12054 = !DILocation(line: 335, column: 21, scope: !9678)
!12055 = !DILocation(line: 337, column: 42, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12051, file: !9616, line: 335, column: 49)
!12057 = !DILocation(line: 337, column: 36, scope: !12056)
!12058 = !DILocation(line: 337, column: 34, scope: !12056)
!12059 = !DILocation(line: 338, column: 17, scope: !12056)
!12060 = !DILocation(line: 339, column: 59, scope: !9678)
!12061 = !DILocation(line: 339, column: 56, scope: !9678)
!12062 = !DILocation(line: 339, column: 49, scope: !9678)
!12063 = !DILocation(line: 339, column: 76, scope: !12016)
!12064 = !DILocation(line: 339, column: 49, scope: !12016)
!12065 = !DILocation(line: 339, column: 49, scope: !12066)
!12066 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 2)
!12067 = !DILocation(line: 339, column: 49, scope: !12068)
!12068 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 3)
!12069 = !DILocation(line: 339, column: 45, scope: !12068)
!12070 = !DILocation(line: 339, column: 33, scope: !12068)
!12071 = !DILocation(line: 339, column: 33, scope: !12072)
!12072 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 4)
!12073 = !DILocation(line: 339, column: 129, scope: !12074)
!12074 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 5)
!12075 = !DILocation(line: 339, column: 126, scope: !12074)
!12076 = !DILocation(line: 339, column: 119, scope: !12074)
!12077 = !DILocation(line: 339, column: 146, scope: !12078)
!12078 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 6)
!12079 = !DILocation(line: 339, column: 119, scope: !12078)
!12080 = !DILocation(line: 339, column: 119, scope: !12081)
!12081 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 7)
!12082 = !DILocation(line: 339, column: 119, scope: !12083)
!12083 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 8)
!12084 = !DILocation(line: 339, column: 33, scope: !12083)
!12085 = !DILocation(line: 339, column: 33, scope: !12086)
!12086 = !DILexicalBlockFile(scope: !9678, file: !9616, discriminator: 9)
!12087 = !DILocation(line: 339, column: 30, scope: !12086)
!12088 = !DILocation(line: 340, column: 48, scope: !9678)
!12089 = !DILocation(line: 340, column: 59, scope: !9678)
!12090 = !DILocation(line: 340, column: 57, scope: !9678)
!12091 = !DILocation(line: 340, column: 73, scope: !9678)
!12092 = !DILocation(line: 340, column: 80, scope: !9678)
!12093 = !DILocation(line: 340, column: 35, scope: !9678)
!12094 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !9689)
!12095 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !9689)
!12096 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !9689)
!12097 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !9689)
!12098 = !DILocation(line: 341, column: 56, scope: !9678)
!12099 = !DILocation(line: 341, column: 37, scope: !9678)
!12100 = !DILocation(line: 341, column: 42, scope: !9678)
!12101 = !DILocation(line: 341, column: 46, scope: !9678)
!12102 = !DILocation(line: 341, column: 35, scope: !9678)
!12103 = !DILocation(line: 340, column: 24, scope: !9678)
!12104 = !DILocation(line: 340, column: 25, scope: !9678)
!12105 = !DILocation(line: 340, column: 29, scope: !9678)
!12106 = !DILocation(line: 340, column: 28, scope: !9678)
!12107 = !DILocation(line: 340, column: 17, scope: !9678)
!12108 = !DILocation(line: 340, column: 32, scope: !9678)
!12109 = !DILocation(line: 344, column: 40, scope: !9678)
!12110 = !DILocation(line: 344, column: 21, scope: !9678)
!12111 = !DILocation(line: 344, column: 26, scope: !9678)
!12112 = !DILocation(line: 344, column: 30, scope: !9678)
!12113 = !DILocation(line: 344, column: 63, scope: !9678)
!12114 = !DILocation(line: 344, column: 44, scope: !9678)
!12115 = !DILocation(line: 344, column: 49, scope: !9678)
!12116 = !DILocation(line: 344, column: 53, scope: !9678)
!12117 = !DILocation(line: 345, column: 28, scope: !9678)
!12118 = !DILocation(line: 345, column: 29, scope: !9678)
!12119 = !DILocation(line: 345, column: 33, scope: !9678)
!12120 = !DILocation(line: 345, column: 32, scope: !9678)
!12121 = !DILocation(line: 345, column: 21, scope: !9678)
!12122 = !DILocation(line: 345, column: 43, scope: !9678)
!12123 = !DILocation(line: 345, column: 39, scope: !9678)
!12124 = !DILocation(line: 345, column: 67, scope: !9678)
!12125 = !DILocation(line: 345, column: 48, scope: !9678)
!12126 = !DILocation(line: 345, column: 53, scope: !9678)
!12127 = !DILocation(line: 345, column: 57, scope: !9678)
!12128 = !DILocation(line: 345, column: 46, scope: !9678)
!12129 = !DILocation(line: 345, column: 38, scope: !9678)
!12130 = !DILocation(line: 345, column: 36, scope: !9678)
!12131 = !DILocation(line: 346, column: 21, scope: !9678)
!12132 = !DILocation(line: 346, column: 26, scope: !9678)
!12133 = !DILocation(line: 346, column: 35, scope: !9678)
!12134 = !DILocation(line: 346, column: 33, scope: !9678)
!12135 = !DILocation(line: 343, column: 32, scope: !9678)
!12136 = !DILocation(line: 343, column: 30, scope: !9678)
!12137 = !DILocation(line: 348, column: 33, scope: !9678)
!12138 = !DILocation(line: 348, column: 30, scope: !9678)
!12139 = !DILocation(line: 349, column: 23, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !9678, file: !9616, line: 349, column: 21)
!12141 = !DILocation(line: 349, column: 30, scope: !12140)
!12142 = !DILocation(line: 349, column: 36, scope: !12140)
!12143 = !DILocation(line: 349, column: 21, scope: !9678)
!12144 = !DILocation(line: 351, column: 42, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12140, file: !9616, line: 349, column: 49)
!12146 = !DILocation(line: 351, column: 36, scope: !12145)
!12147 = !DILocation(line: 351, column: 34, scope: !12145)
!12148 = !DILocation(line: 352, column: 17, scope: !12145)
!12149 = !DILocation(line: 353, column: 59, scope: !9678)
!12150 = !DILocation(line: 353, column: 56, scope: !9678)
!12151 = !DILocation(line: 353, column: 49, scope: !9678)
!12152 = !DILocation(line: 353, column: 76, scope: !12016)
!12153 = !DILocation(line: 353, column: 49, scope: !12016)
!12154 = !DILocation(line: 353, column: 49, scope: !12066)
!12155 = !DILocation(line: 353, column: 49, scope: !12068)
!12156 = !DILocation(line: 353, column: 45, scope: !12068)
!12157 = !DILocation(line: 353, column: 33, scope: !12068)
!12158 = !DILocation(line: 353, column: 33, scope: !12072)
!12159 = !DILocation(line: 353, column: 129, scope: !12074)
!12160 = !DILocation(line: 353, column: 126, scope: !12074)
!12161 = !DILocation(line: 353, column: 119, scope: !12074)
!12162 = !DILocation(line: 353, column: 146, scope: !12078)
!12163 = !DILocation(line: 353, column: 119, scope: !12078)
!12164 = !DILocation(line: 353, column: 119, scope: !12081)
!12165 = !DILocation(line: 353, column: 119, scope: !12083)
!12166 = !DILocation(line: 353, column: 33, scope: !12083)
!12167 = !DILocation(line: 353, column: 33, scope: !12086)
!12168 = !DILocation(line: 353, column: 30, scope: !12086)
!12169 = !DILocation(line: 354, column: 49, scope: !9678)
!12170 = !DILocation(line: 354, column: 60, scope: !9678)
!12171 = !DILocation(line: 354, column: 58, scope: !9678)
!12172 = !DILocation(line: 354, column: 94, scope: !9678)
!12173 = !DILocation(line: 354, column: 75, scope: !9678)
!12174 = !DILocation(line: 354, column: 80, scope: !9678)
!12175 = !DILocation(line: 354, column: 84, scope: !9678)
!12176 = !DILocation(line: 354, column: 73, scope: !9678)
!12177 = !DILocation(line: 354, column: 36, scope: !9678)
!12178 = !DILocation(line: 129, column: 5, scope: !4847, inlinedAt: !9677)
!12179 = !DILocation(line: 131, column: 32, scope: !4847, inlinedAt: !9677)
!12180 = !DILocation(line: 131, column: 44, scope: !4847, inlinedAt: !9677)
!12181 = !DILocation(line: 132, column: 12, scope: !4847, inlinedAt: !9677)
!12182 = !DILocation(line: 354, column: 25, scope: !9678)
!12183 = !DILocation(line: 354, column: 26, scope: !9678)
!12184 = !DILocation(line: 354, column: 30, scope: !9678)
!12185 = !DILocation(line: 354, column: 29, scope: !9678)
!12186 = !DILocation(line: 354, column: 17, scope: !9678)
!12187 = !DILocation(line: 354, column: 33, scope: !9678)
!12188 = !DILocation(line: 356, column: 13, scope: !9678)
!12189 = !DILocation(line: 357, column: 41, scope: !9680)
!12190 = !DILocation(line: 357, column: 22, scope: !9680)
!12191 = !DILocation(line: 357, column: 27, scope: !9680)
!12192 = !DILocation(line: 357, column: 31, scope: !9680)
!12193 = !DILocation(line: 357, column: 19, scope: !9680)
!12194 = !DILocation(line: 358, column: 9, scope: !9680)
!12195 = !DILocation(line: 326, column: 44, scope: !12196)
!12196 = !DILexicalBlockFile(scope: !9681, file: !9616, discriminator: 2)
!12197 = !DILocation(line: 326, column: 9, scope: !12196)
!12198 = distinct !{!12198, !12199}
!12199 = !DILocation(line: 326, column: 9, scope: !9683)
!12200 = !DILocation(line: 359, column: 5, scope: !9683)
!12201 = !DILocation(line: 322, column: 67, scope: !12202)
!12202 = !DILexicalBlockFile(scope: !9684, file: !9616, discriminator: 2)
!12203 = !DILocation(line: 322, column: 48, scope: !12202)
!12204 = !DILocation(line: 322, column: 53, scope: !12202)
!12205 = !DILocation(line: 322, column: 57, scope: !12202)
!12206 = !DILocation(line: 322, column: 45, scope: !12202)
!12207 = !DILocation(line: 322, column: 5, scope: !12202)
!12208 = distinct !{!12208, !12209}
!12209 = !DILocation(line: 322, column: 5, scope: !9615)
!12210 = !DILocation(line: 361, column: 12, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 361, column: 5)
!12212 = !DILocation(line: 361, column: 10, scope: !12211)
!12213 = !DILocation(line: 361, column: 17, scope: !12214)
!12214 = !DILexicalBlockFile(scope: !12215, file: !9616, discriminator: 1)
!12215 = distinct !DILexicalBlock(scope: !12211, file: !9616, line: 361, column: 5)
!12216 = !DILocation(line: 361, column: 19, scope: !12214)
!12217 = !DILocation(line: 361, column: 5, scope: !12214)
!12218 = !DILocation(line: 362, column: 15, scope: !12215)
!12219 = !DILocation(line: 362, column: 9, scope: !12215)
!12220 = !DILocation(line: 362, column: 18, scope: !12215)
!12221 = !DILocation(line: 361, column: 55, scope: !12222)
!12222 = !DILexicalBlockFile(scope: !12215, file: !9616, discriminator: 2)
!12223 = !DILocation(line: 361, column: 5, scope: !12222)
!12224 = distinct !{!12224, !12225}
!12225 = !DILocation(line: 361, column: 5, scope: !9615)
!12226 = !DILocation(line: 366, column: 5, scope: !9615)
!12227 = distinct !{!12227, !12226}
!12228 = !DILocalVariable(name: "overdist", scope: !9627, file: !9616, line: 368, type: !991)
!12229 = !DILocation(line: 368, column: 13, scope: !9627)
!12230 = !DILocalVariable(name: "qstep", scope: !9627, file: !9616, line: 369, type: !991)
!12231 = !DILocation(line: 369, column: 13, scope: !9627)
!12232 = !DILocation(line: 369, column: 21, scope: !9627)
!12233 = !DILocation(line: 370, column: 9, scope: !9627)
!12234 = distinct !{!12234, !12233}
!12235 = !DILocalVariable(name: "changed", scope: !9673, file: !9616, line: 371, type: !991)
!12236 = !DILocation(line: 371, column: 17, scope: !9673)
!12237 = !DILocation(line: 372, column: 18, scope: !9673)
!12238 = !DILocation(line: 373, column: 22, scope: !9673)
!12239 = !DILocation(line: 374, column: 19, scope: !9673)
!12240 = !DILocation(line: 375, column: 20, scope: !9672)
!12241 = !DILocation(line: 375, column: 18, scope: !9672)
!12242 = !DILocation(line: 375, column: 25, scope: !12243)
!12243 = !DILexicalBlockFile(scope: !9671, file: !9616, discriminator: 1)
!12244 = !DILocation(line: 375, column: 29, scope: !12243)
!12245 = !DILocation(line: 375, column: 34, scope: !12243)
!12246 = !DILocation(line: 375, column: 38, scope: !12243)
!12247 = !DILocation(line: 375, column: 27, scope: !12243)
!12248 = !DILocation(line: 375, column: 13, scope: !12243)
!12249 = !DILocation(line: 376, column: 25, scope: !9670)
!12250 = !DILocation(line: 376, column: 26, scope: !9670)
!12251 = !DILocation(line: 376, column: 23, scope: !9670)
!12252 = !DILocation(line: 377, column: 24, scope: !9669)
!12253 = !DILocation(line: 377, column: 22, scope: !9669)
!12254 = !DILocation(line: 377, column: 29, scope: !12255)
!12255 = !DILexicalBlockFile(scope: !9668, file: !9616, discriminator: 1)
!12256 = !DILocation(line: 377, column: 33, scope: !12255)
!12257 = !DILocation(line: 377, column: 38, scope: !12255)
!12258 = !DILocation(line: 377, column: 42, scope: !12255)
!12259 = !DILocation(line: 377, column: 31, scope: !12255)
!12260 = !DILocation(line: 377, column: 17, scope: !12255)
!12261 = !DILocalVariable(name: "coefs", scope: !9667, file: !9616, line: 378, type: !1780)
!12262 = !DILocation(line: 378, column: 34, scope: !9667)
!12263 = !DILocation(line: 378, column: 55, scope: !9667)
!12264 = !DILocation(line: 378, column: 43, scope: !9667)
!12265 = !DILocation(line: 378, column: 48, scope: !9667)
!12266 = !DILocalVariable(name: "scaled", scope: !9667, file: !9616, line: 379, type: !1780)
!12267 = !DILocation(line: 379, column: 34, scope: !9667)
!12268 = !DILocation(line: 379, column: 54, scope: !9667)
!12269 = !DILocation(line: 379, column: 44, scope: !9667)
!12270 = !DILocation(line: 379, column: 47, scope: !9667)
!12271 = !DILocalVariable(name: "bits", scope: !9667, file: !9616, line: 380, type: !991)
!12272 = !DILocation(line: 380, column: 25, scope: !9667)
!12273 = !DILocalVariable(name: "cb", scope: !9667, file: !9616, line: 381, type: !991)
!12274 = !DILocation(line: 381, column: 25, scope: !9667)
!12275 = !DILocalVariable(name: "dist", scope: !9667, file: !9616, line: 382, type: !954)
!12276 = !DILocation(line: 382, column: 27, scope: !9667)
!12277 = !DILocalVariable(name: "qenergy", scope: !9667, file: !9616, line: 383, type: !954)
!12278 = !DILocation(line: 383, column: 27, scope: !9667)
!12279 = !DILocation(line: 385, column: 37, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !9667, file: !9616, line: 385, column: 25)
!12281 = !DILocation(line: 385, column: 38, scope: !12280)
!12282 = !DILocation(line: 385, column: 42, scope: !12280)
!12283 = !DILocation(line: 385, column: 41, scope: !12280)
!12284 = !DILocation(line: 385, column: 25, scope: !12280)
!12285 = !DILocation(line: 385, column: 30, scope: !12280)
!12286 = !DILocation(line: 385, column: 45, scope: !12280)
!12287 = !DILocation(line: 385, column: 60, scope: !12288)
!12288 = !DILexicalBlockFile(scope: !12280, file: !9616, discriminator: 1)
!12289 = !DILocation(line: 385, column: 61, scope: !12288)
!12290 = !DILocation(line: 385, column: 65, scope: !12288)
!12291 = !DILocation(line: 385, column: 64, scope: !12288)
!12292 = !DILocation(line: 385, column: 48, scope: !12288)
!12293 = !DILocation(line: 385, column: 53, scope: !12288)
!12294 = !DILocation(line: 385, column: 68, scope: !12288)
!12295 = !DILocation(line: 385, column: 25, scope: !12288)
!12296 = !DILocation(line: 386, column: 53, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12280, file: !9616, line: 385, column: 76)
!12298 = !DILocation(line: 386, column: 34, scope: !12297)
!12299 = !DILocation(line: 386, column: 39, scope: !12297)
!12300 = !DILocation(line: 386, column: 43, scope: !12297)
!12301 = !DILocation(line: 386, column: 31, scope: !12297)
!12302 = !DILocation(line: 387, column: 42, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12297, file: !9616, line: 387, column: 29)
!12304 = !DILocation(line: 387, column: 43, scope: !12303)
!12305 = !DILocation(line: 387, column: 47, scope: !12303)
!12306 = !DILocation(line: 387, column: 46, scope: !12303)
!12307 = !DILocation(line: 387, column: 29, scope: !12303)
!12308 = !DILocation(line: 387, column: 34, scope: !12303)
!12309 = !DILocation(line: 387, column: 29, scope: !12297)
!12310 = !DILocation(line: 389, column: 50, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12303, file: !9616, line: 387, column: 51)
!12312 = !DILocation(line: 389, column: 55, scope: !12311)
!12313 = !DILocation(line: 389, column: 58, scope: !12311)
!12314 = !DILocation(line: 389, column: 38, scope: !12311)
!12315 = !DILocation(line: 389, column: 35, scope: !12311)
!12316 = !DILocation(line: 390, column: 25, scope: !12311)
!12317 = !DILocation(line: 391, column: 25, scope: !12297)
!12318 = !DILocation(line: 393, column: 48, scope: !9667)
!12319 = !DILocation(line: 393, column: 49, scope: !9667)
!12320 = !DILocation(line: 393, column: 53, scope: !9667)
!12321 = !DILocation(line: 393, column: 52, scope: !9667)
!12322 = !DILocation(line: 393, column: 40, scope: !9667)
!12323 = !DILocation(line: 393, column: 69, scope: !9667)
!12324 = !DILocation(line: 393, column: 70, scope: !9667)
!12325 = !DILocation(line: 393, column: 74, scope: !9667)
!12326 = !DILocation(line: 393, column: 73, scope: !9667)
!12327 = !DILocation(line: 393, column: 57, scope: !9667)
!12328 = !DILocation(line: 393, column: 62, scope: !9667)
!12329 = !DILocation(line: 393, column: 26, scope: !9667)
!12330 = !DILocation(line: 393, column: 24, scope: !9667)
!12331 = !DILocation(line: 394, column: 29, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !9667, file: !9616, line: 394, column: 21)
!12333 = !DILocation(line: 394, column: 26, scope: !12332)
!12334 = !DILocation(line: 394, column: 34, scope: !12335)
!12335 = !DILexicalBlockFile(scope: !12336, file: !9616, discriminator: 1)
!12336 = distinct !DILexicalBlock(scope: !12332, file: !9616, line: 394, column: 21)
!12337 = !DILocation(line: 394, column: 58, scope: !12335)
!12338 = !DILocation(line: 394, column: 39, scope: !12335)
!12339 = !DILocation(line: 394, column: 44, scope: !12335)
!12340 = !DILocation(line: 394, column: 48, scope: !12335)
!12341 = !DILocation(line: 394, column: 37, scope: !12335)
!12342 = !DILocation(line: 394, column: 21, scope: !12335)
!12343 = !DILocalVariable(name: "b", scope: !12344, file: !9616, line: 395, type: !991)
!12344 = distinct !DILexicalBlock(scope: !12336, file: !9616, line: 394, column: 68)
!12345 = !DILocation(line: 395, column: 29, scope: !12344)
!12346 = !DILocalVariable(name: "sqenergy", scope: !12344, file: !9616, line: 396, type: !954)
!12347 = !DILocation(line: 396, column: 31, scope: !12344)
!12348 = !DILocation(line: 397, column: 59, scope: !12344)
!12349 = !DILocation(line: 397, column: 62, scope: !12344)
!12350 = !DILocation(line: 397, column: 66, scope: !12344)
!12351 = !DILocation(line: 397, column: 64, scope: !12344)
!12352 = !DILocation(line: 397, column: 70, scope: !12344)
!12353 = !DILocation(line: 397, column: 73, scope: !12344)
!12354 = !DILocation(line: 397, column: 81, scope: !12344)
!12355 = !DILocation(line: 397, column: 83, scope: !12344)
!12356 = !DILocation(line: 397, column: 79, scope: !12344)
!12357 = !DILocation(line: 398, column: 52, scope: !12344)
!12358 = !DILocation(line: 398, column: 61, scope: !12344)
!12359 = !DILocation(line: 398, column: 63, scope: !12344)
!12360 = !DILocation(line: 398, column: 59, scope: !12344)
!12361 = !DILocation(line: 399, column: 71, scope: !12344)
!12362 = !DILocation(line: 399, column: 52, scope: !12344)
!12363 = !DILocation(line: 399, column: 57, scope: !12344)
!12364 = !DILocation(line: 399, column: 61, scope: !12344)
!12365 = !DILocation(line: 400, column: 64, scope: !12344)
!12366 = !DILocation(line: 400, column: 65, scope: !12344)
!12367 = !DILocation(line: 400, column: 69, scope: !12344)
!12368 = !DILocation(line: 400, column: 68, scope: !12344)
!12369 = !DILocation(line: 400, column: 52, scope: !12344)
!12370 = !DILocation(line: 400, column: 57, scope: !12344)
!12371 = !DILocation(line: 401, column: 52, scope: !12344)
!12372 = !DILocation(line: 397, column: 33, scope: !12344)
!12373 = !DILocation(line: 397, column: 30, scope: !12344)
!12374 = !DILocation(line: 406, column: 33, scope: !12344)
!12375 = !DILocation(line: 406, column: 30, scope: !12344)
!12376 = !DILocation(line: 407, column: 36, scope: !12344)
!12377 = !DILocation(line: 407, column: 33, scope: !12344)
!12378 = !DILocation(line: 408, column: 21, scope: !12344)
!12379 = !DILocation(line: 394, column: 64, scope: !12380)
!12380 = !DILexicalBlockFile(scope: !12336, file: !9616, discriminator: 2)
!12381 = !DILocation(line: 394, column: 21, scope: !12380)
!12382 = distinct !{!12382, !12383}
!12383 = !DILocation(line: 394, column: 21, scope: !9667)
!12384 = !DILocation(line: 409, column: 37, scope: !9667)
!12385 = !DILocation(line: 409, column: 44, scope: !9667)
!12386 = !DILocation(line: 409, column: 42, scope: !9667)
!12387 = !DILocation(line: 409, column: 27, scope: !9667)
!12388 = !DILocation(line: 409, column: 28, scope: !9667)
!12389 = !DILocation(line: 409, column: 32, scope: !9667)
!12390 = !DILocation(line: 409, column: 31, scope: !9667)
!12391 = !DILocation(line: 409, column: 21, scope: !9667)
!12392 = !DILocation(line: 409, column: 35, scope: !9667)
!12393 = !DILocation(line: 410, column: 41, scope: !9667)
!12394 = !DILocation(line: 410, column: 31, scope: !9667)
!12395 = !DILocation(line: 410, column: 32, scope: !9667)
!12396 = !DILocation(line: 410, column: 36, scope: !9667)
!12397 = !DILocation(line: 410, column: 35, scope: !9667)
!12398 = !DILocation(line: 410, column: 21, scope: !9667)
!12399 = !DILocation(line: 410, column: 39, scope: !9667)
!12400 = !DILocation(line: 411, column: 25, scope: !9666)
!12401 = !DILocation(line: 411, column: 30, scope: !9666)
!12402 = !DILocation(line: 411, column: 25, scope: !9667)
!12403 = !DILocalVariable(name: "sfdiff", scope: !9665, file: !9616, line: 412, type: !991)
!12404 = !DILocation(line: 412, column: 29, scope: !9665)
!12405 = !DILocation(line: 412, column: 60, scope: !9665)
!12406 = !DILocation(line: 412, column: 61, scope: !9665)
!12407 = !DILocation(line: 412, column: 65, scope: !9665)
!12408 = !DILocation(line: 412, column: 64, scope: !9665)
!12409 = !DILocation(line: 412, column: 48, scope: !9665)
!12410 = !DILocation(line: 412, column: 53, scope: !9665)
!12411 = !DILocation(line: 412, column: 70, scope: !9665)
!12412 = !DILocation(line: 412, column: 68, scope: !9665)
!12413 = !DILocation(line: 412, column: 75, scope: !9665)
!12414 = !DILocation(line: 412, column: 38, scope: !9665)
!12415 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9664)
!12416 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9664)
!12417 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9664)
!12418 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9664)
!12419 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9664)
!12420 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9664)
!12421 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9664)
!12422 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9664)
!12423 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9664)
!12424 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9664)
!12425 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9664)
!12426 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9664)
!12427 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9664)
!12428 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9664)
!12429 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9664)
!12430 = !DILocation(line: 413, column: 57, scope: !9665)
!12431 = !DILocation(line: 413, column: 33, scope: !9665)
!12432 = !DILocation(line: 413, column: 30, scope: !9665)
!12433 = !DILocation(line: 414, column: 21, scope: !9665)
!12434 = !DILocation(line: 415, column: 30, scope: !9667)
!12435 = !DILocation(line: 415, column: 27, scope: !9667)
!12436 = !DILocation(line: 416, column: 49, scope: !9667)
!12437 = !DILocation(line: 416, column: 30, scope: !9667)
!12438 = !DILocation(line: 416, column: 35, scope: !9667)
!12439 = !DILocation(line: 416, column: 39, scope: !9667)
!12440 = !DILocation(line: 416, column: 27, scope: !9667)
!12441 = !DILocation(line: 417, column: 40, scope: !9667)
!12442 = !DILocation(line: 417, column: 41, scope: !9667)
!12443 = !DILocation(line: 417, column: 45, scope: !9667)
!12444 = !DILocation(line: 417, column: 44, scope: !9667)
!12445 = !DILocation(line: 417, column: 28, scope: !9667)
!12446 = !DILocation(line: 417, column: 33, scope: !9667)
!12447 = !DILocation(line: 417, column: 26, scope: !9667)
!12448 = !DILocation(line: 418, column: 17, scope: !9667)
!12449 = !DILocation(line: 377, column: 52, scope: !12450)
!12450 = !DILexicalBlockFile(scope: !9668, file: !9616, discriminator: 2)
!12451 = !DILocation(line: 377, column: 17, scope: !12450)
!12452 = distinct !{!12452, !12453}
!12453 = !DILocation(line: 377, column: 17, scope: !9670)
!12454 = !DILocation(line: 419, column: 13, scope: !9670)
!12455 = !DILocation(line: 375, column: 75, scope: !12456)
!12456 = !DILexicalBlockFile(scope: !9671, file: !9616, discriminator: 2)
!12457 = !DILocation(line: 375, column: 56, scope: !12456)
!12458 = !DILocation(line: 375, column: 61, scope: !12456)
!12459 = !DILocation(line: 375, column: 65, scope: !12456)
!12460 = !DILocation(line: 375, column: 53, scope: !12456)
!12461 = !DILocation(line: 375, column: 13, scope: !12456)
!12462 = distinct !{!12462, !12463}
!12463 = !DILocation(line: 375, column: 13, scope: !9673)
!12464 = !DILocation(line: 420, column: 17, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !9673, file: !9616, line: 420, column: 17)
!12466 = !DILocation(line: 420, column: 25, scope: !12465)
!12467 = !DILocation(line: 420, column: 23, scope: !12465)
!12468 = !DILocation(line: 420, column: 17, scope: !9673)
!12469 = !DILocation(line: 421, column: 26, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12465, file: !9616, line: 420, column: 38)
!12471 = !DILocation(line: 422, column: 24, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12470, file: !9616, line: 422, column: 17)
!12473 = !DILocation(line: 422, column: 22, scope: !12472)
!12474 = !DILocation(line: 422, column: 29, scope: !12475)
!12475 = !DILexicalBlockFile(scope: !12476, file: !9616, discriminator: 1)
!12476 = distinct !DILexicalBlock(scope: !12472, file: !9616, line: 422, column: 17)
!12477 = !DILocation(line: 422, column: 31, scope: !12475)
!12478 = !DILocation(line: 422, column: 17, scope: !12475)
!12479 = !DILocation(line: 423, column: 37, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !9616, line: 423, column: 25)
!12481 = distinct !DILexicalBlock(scope: !12476, file: !9616, line: 422, column: 43)
!12482 = !DILocation(line: 423, column: 25, scope: !12480)
!12483 = !DILocation(line: 423, column: 30, scope: !12480)
!12484 = !DILocation(line: 423, column: 40, scope: !12480)
!12485 = !DILocation(line: 423, column: 25, scope: !12481)
!12486 = !DILocalVariable(name: "maxsf_i", scope: !12487, file: !9616, line: 424, type: !991)
!12487 = distinct !DILexicalBlock(scope: !12480, file: !9616, line: 423, column: 54)
!12488 = !DILocation(line: 424, column: 29, scope: !12487)
!12489 = !DILocation(line: 424, column: 40, scope: !12487)
!12490 = !DILocation(line: 424, column: 46, scope: !12487)
!12491 = !DILocation(line: 424, column: 39, scope: !12487)
!12492 = !DILocation(line: 424, column: 39, scope: !12493)
!12493 = !DILexicalBlockFile(scope: !12487, file: !9616, discriminator: 1)
!12494 = !DILocation(line: 424, column: 68, scope: !12495)
!12495 = !DILexicalBlockFile(scope: !12487, file: !9616, discriminator: 2)
!12496 = !DILocation(line: 424, column: 62, scope: !12495)
!12497 = !DILocation(line: 424, column: 39, scope: !12495)
!12498 = !DILocation(line: 424, column: 39, scope: !12499)
!12499 = !DILexicalBlockFile(scope: !12487, file: !9616, discriminator: 3)
!12500 = !DILocation(line: 424, column: 29, scope: !12499)
!12501 = !DILocalVariable(name: "new_sf", scope: !12487, file: !9616, line: 425, type: !991)
!12502 = !DILocation(line: 425, column: 29, scope: !12487)
!12503 = !DILocation(line: 425, column: 40, scope: !12487)
!12504 = !DILocation(line: 425, column: 64, scope: !12487)
!12505 = !DILocation(line: 425, column: 52, scope: !12487)
!12506 = !DILocation(line: 425, column: 57, scope: !12487)
!12507 = !DILocation(line: 425, column: 69, scope: !12487)
!12508 = !DILocation(line: 425, column: 67, scope: !12487)
!12509 = !DILocation(line: 425, column: 49, scope: !12487)
!12510 = !DILocation(line: 425, column: 39, scope: !12487)
!12511 = !DILocation(line: 425, column: 91, scope: !12493)
!12512 = !DILocation(line: 425, column: 79, scope: !12493)
!12513 = !DILocation(line: 425, column: 84, scope: !12493)
!12514 = !DILocation(line: 425, column: 96, scope: !12493)
!12515 = !DILocation(line: 425, column: 94, scope: !12493)
!12516 = !DILocation(line: 425, column: 39, scope: !12493)
!12517 = !DILocation(line: 425, column: 106, scope: !12495)
!12518 = !DILocation(line: 425, column: 39, scope: !12495)
!12519 = !DILocation(line: 425, column: 39, scope: !12499)
!12520 = !DILocation(line: 425, column: 29, scope: !12499)
!12521 = !DILocation(line: 426, column: 29, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12487, file: !9616, line: 426, column: 29)
!12523 = !DILocation(line: 426, column: 51, scope: !12522)
!12524 = !DILocation(line: 426, column: 39, scope: !12522)
!12525 = !DILocation(line: 426, column: 44, scope: !12522)
!12526 = !DILocation(line: 426, column: 36, scope: !12522)
!12527 = !DILocation(line: 426, column: 29, scope: !12487)
!12528 = !DILocation(line: 427, column: 46, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12522, file: !9616, line: 426, column: 55)
!12530 = !DILocation(line: 427, column: 41, scope: !12529)
!12531 = !DILocation(line: 427, column: 29, scope: !12529)
!12532 = !DILocation(line: 427, column: 34, scope: !12529)
!12533 = !DILocation(line: 427, column: 44, scope: !12529)
!12534 = !DILocation(line: 428, column: 37, scope: !12529)
!12535 = !DILocation(line: 429, column: 25, scope: !12529)
!12536 = !DILocation(line: 430, column: 21, scope: !12487)
!12537 = !DILocation(line: 431, column: 17, scope: !12481)
!12538 = !DILocation(line: 422, column: 39, scope: !12539)
!12539 = !DILexicalBlockFile(scope: !12476, file: !9616, discriminator: 2)
!12540 = !DILocation(line: 422, column: 17, scope: !12539)
!12541 = distinct !{!12541, !12542}
!12542 = !DILocation(line: 422, column: 17, scope: !12470)
!12543 = !DILocation(line: 432, column: 13, scope: !12470)
!12544 = !DILocation(line: 432, column: 24, scope: !12545)
!12545 = !DILexicalBlockFile(scope: !12546, file: !9616, discriminator: 1)
!12546 = distinct !DILexicalBlock(scope: !12465, file: !9616, line: 432, column: 24)
!12547 = !DILocation(line: 432, column: 32, scope: !12545)
!12548 = !DILocation(line: 432, column: 30, scope: !12545)
!12549 = !DILocation(line: 433, column: 26, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12546, file: !9616, line: 432, column: 44)
!12551 = !DILocation(line: 434, column: 24, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12550, file: !9616, line: 434, column: 17)
!12553 = !DILocation(line: 434, column: 22, scope: !12552)
!12554 = !DILocation(line: 434, column: 29, scope: !12555)
!12555 = !DILexicalBlockFile(scope: !12556, file: !9616, discriminator: 1)
!12556 = distinct !DILexicalBlock(scope: !12552, file: !9616, line: 434, column: 17)
!12557 = !DILocation(line: 434, column: 31, scope: !12555)
!12558 = !DILocation(line: 434, column: 17, scope: !12555)
!12559 = !DILocation(line: 435, column: 37, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !9616, line: 435, column: 25)
!12561 = distinct !DILexicalBlock(scope: !12556, file: !9616, line: 434, column: 43)
!12562 = !DILocation(line: 435, column: 25, scope: !12560)
!12563 = !DILocation(line: 435, column: 30, scope: !12560)
!12564 = !DILocation(line: 435, column: 40, scope: !12560)
!12565 = !DILocation(line: 435, column: 25, scope: !12561)
!12566 = !DILocalVariable(name: "new_sf", scope: !12567, file: !9616, line: 436, type: !991)
!12567 = distinct !DILexicalBlock(scope: !12560, file: !9616, line: 435, column: 47)
!12568 = !DILocation(line: 436, column: 29, scope: !12567)
!12569 = !DILocation(line: 436, column: 48, scope: !12567)
!12570 = !DILocation(line: 436, column: 42, scope: !12567)
!12571 = !DILocation(line: 436, column: 52, scope: !12567)
!12572 = !DILocation(line: 436, column: 41, scope: !12567)
!12573 = !DILocation(line: 436, column: 69, scope: !12574)
!12574 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 1)
!12575 = !DILocation(line: 436, column: 63, scope: !12574)
!12576 = !DILocation(line: 436, column: 41, scope: !12574)
!12577 = !DILocation(line: 436, column: 41, scope: !12578)
!12578 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 2)
!12579 = !DILocation(line: 436, column: 41, scope: !12580)
!12580 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 3)
!12581 = !DILocation(line: 436, column: 98, scope: !12580)
!12582 = !DILocation(line: 436, column: 86, scope: !12580)
!12583 = !DILocation(line: 436, column: 91, scope: !12580)
!12584 = !DILocation(line: 436, column: 103, scope: !12580)
!12585 = !DILocation(line: 436, column: 101, scope: !12580)
!12586 = !DILocation(line: 436, column: 83, scope: !12580)
!12587 = !DILocation(line: 436, column: 39, scope: !12580)
!12588 = !DILocation(line: 436, column: 121, scope: !12589)
!12589 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 4)
!12590 = !DILocation(line: 436, column: 115, scope: !12589)
!12591 = !DILocation(line: 436, column: 125, scope: !12589)
!12592 = !DILocation(line: 436, column: 114, scope: !12589)
!12593 = !DILocation(line: 436, column: 142, scope: !12594)
!12594 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 5)
!12595 = !DILocation(line: 436, column: 136, scope: !12594)
!12596 = !DILocation(line: 436, column: 114, scope: !12594)
!12597 = !DILocation(line: 436, column: 114, scope: !12598)
!12598 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 6)
!12599 = !DILocation(line: 436, column: 114, scope: !12600)
!12600 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 7)
!12601 = !DILocation(line: 436, column: 39, scope: !12600)
!12602 = !DILocation(line: 436, column: 171, scope: !12603)
!12603 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 8)
!12604 = !DILocation(line: 436, column: 159, scope: !12603)
!12605 = !DILocation(line: 436, column: 164, scope: !12603)
!12606 = !DILocation(line: 436, column: 176, scope: !12603)
!12607 = !DILocation(line: 436, column: 174, scope: !12603)
!12608 = !DILocation(line: 436, column: 39, scope: !12603)
!12609 = !DILocation(line: 436, column: 39, scope: !12610)
!12610 = !DILexicalBlockFile(scope: !12567, file: !9616, discriminator: 9)
!12611 = !DILocation(line: 436, column: 29, scope: !12610)
!12612 = !DILocation(line: 437, column: 29, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12567, file: !9616, line: 437, column: 29)
!12614 = !DILocation(line: 437, column: 51, scope: !12613)
!12615 = !DILocation(line: 437, column: 39, scope: !12613)
!12616 = !DILocation(line: 437, column: 44, scope: !12613)
!12617 = !DILocation(line: 437, column: 36, scope: !12613)
!12618 = !DILocation(line: 437, column: 29, scope: !12567)
!12619 = !DILocation(line: 438, column: 46, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12613, file: !9616, line: 437, column: 55)
!12621 = !DILocation(line: 438, column: 41, scope: !12620)
!12622 = !DILocation(line: 438, column: 29, scope: !12620)
!12623 = !DILocation(line: 438, column: 34, scope: !12620)
!12624 = !DILocation(line: 438, column: 44, scope: !12620)
!12625 = !DILocation(line: 439, column: 37, scope: !12620)
!12626 = !DILocation(line: 440, column: 25, scope: !12620)
!12627 = !DILocation(line: 441, column: 21, scope: !12567)
!12628 = !DILocation(line: 442, column: 17, scope: !12561)
!12629 = !DILocation(line: 434, column: 39, scope: !12630)
!12630 = !DILexicalBlockFile(scope: !12556, file: !9616, discriminator: 2)
!12631 = !DILocation(line: 434, column: 17, scope: !12630)
!12632 = distinct !{!12632, !12633}
!12633 = !DILocation(line: 434, column: 17, scope: !12550)
!12634 = !DILocation(line: 443, column: 13, scope: !12550)
!12635 = !DILocation(line: 444, column: 19, scope: !9673)
!12636 = !DILocation(line: 445, column: 18, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !9673, file: !9616, line: 445, column: 17)
!12638 = !DILocation(line: 445, column: 24, scope: !12637)
!12639 = !DILocation(line: 445, column: 27, scope: !12640)
!12640 = !DILexicalBlockFile(scope: !12637, file: !9616, discriminator: 1)
!12641 = !DILocation(line: 445, column: 35, scope: !12640)
!12642 = !DILocation(line: 445, column: 33, scope: !12640)
!12643 = !DILocation(line: 445, column: 47, scope: !12640)
!12644 = !DILocation(line: 445, column: 50, scope: !12645)
!12645 = !DILexicalBlockFile(scope: !12637, file: !9616, discriminator: 2)
!12646 = !DILocation(line: 445, column: 55, scope: !12645)
!12647 = !DILocation(line: 445, column: 65, scope: !12645)
!12648 = !DILocation(line: 445, column: 71, scope: !12645)
!12649 = !DILocation(line: 445, column: 74, scope: !12650)
!12650 = !DILexicalBlockFile(scope: !12637, file: !9616, discriminator: 3)
!12651 = !DILocation(line: 445, column: 17, scope: !12650)
!12652 = !DILocation(line: 446, column: 23, scope: !12637)
!12653 = !DILocation(line: 446, column: 17, scope: !12637)
!12654 = !DILocation(line: 447, column: 9, scope: !9673)
!12655 = !DILocation(line: 447, column: 18, scope: !12656)
!12656 = !DILexicalBlockFile(scope: !9627, file: !9616, discriminator: 1)
!12657 = !DILocation(line: 447, column: 9, scope: !12656)
!12658 = !DILocation(line: 449, column: 18, scope: !9627)
!12659 = !DILocation(line: 450, column: 17, scope: !9627)
!12660 = !DILocation(line: 450, column: 25, scope: !9627)
!12661 = !DILocation(line: 450, column: 23, scope: !9627)
!12662 = !DILocation(line: 450, column: 15, scope: !9627)
!12663 = !DILocation(line: 451, column: 16, scope: !9660)
!12664 = !DILocation(line: 451, column: 14, scope: !9660)
!12665 = !DILocation(line: 451, column: 21, scope: !12666)
!12666 = !DILexicalBlockFile(scope: !9659, file: !9616, discriminator: 1)
!12667 = !DILocation(line: 451, column: 23, scope: !12666)
!12668 = !DILocation(line: 451, column: 27, scope: !12666)
!12669 = !DILocation(line: 451, column: 31, scope: !12670)
!12670 = !DILexicalBlockFile(scope: !9659, file: !9616, discriminator: 2)
!12671 = !DILocation(line: 451, column: 40, scope: !12670)
!12672 = !DILocation(line: 451, column: 43, scope: !12673)
!12673 = !DILexicalBlockFile(scope: !9659, file: !9616, discriminator: 3)
!12674 = !DILocation(line: 451, column: 40, scope: !12673)
!12675 = !DILocation(line: 451, column: 9, scope: !12676)
!12676 = !DILexicalBlockFile(scope: !9660, file: !9616, discriminator: 4)
!12677 = !DILocation(line: 452, column: 17, scope: !9657)
!12678 = !DILocation(line: 452, column: 17, scope: !9658)
!12679 = !DILocation(line: 454, column: 22, scope: !9656)
!12680 = !DILocation(line: 455, column: 23, scope: !9656)
!12681 = !DILocation(line: 456, column: 24, scope: !9655)
!12682 = !DILocation(line: 456, column: 22, scope: !9655)
!12683 = !DILocation(line: 456, column: 29, scope: !12684)
!12684 = !DILexicalBlockFile(scope: !9654, file: !9616, discriminator: 1)
!12685 = !DILocation(line: 456, column: 33, scope: !12684)
!12686 = !DILocation(line: 456, column: 38, scope: !12684)
!12687 = !DILocation(line: 456, column: 42, scope: !12684)
!12688 = !DILocation(line: 456, column: 31, scope: !12684)
!12689 = !DILocation(line: 456, column: 17, scope: !12684)
!12690 = !DILocation(line: 457, column: 29, scope: !9653)
!12691 = !DILocation(line: 457, column: 30, scope: !9653)
!12692 = !DILocation(line: 457, column: 27, scope: !9653)
!12693 = !DILocation(line: 458, column: 28, scope: !9652)
!12694 = !DILocation(line: 458, column: 26, scope: !9652)
!12695 = !DILocation(line: 458, column: 33, scope: !12696)
!12696 = !DILexicalBlockFile(scope: !9651, file: !9616, discriminator: 1)
!12697 = !DILocation(line: 458, column: 37, scope: !12696)
!12698 = !DILocation(line: 458, column: 42, scope: !12696)
!12699 = !DILocation(line: 458, column: 46, scope: !12696)
!12700 = !DILocation(line: 458, column: 35, scope: !12696)
!12701 = !DILocation(line: 458, column: 21, scope: !12696)
!12702 = !DILocalVariable(name: "coefs", scope: !9650, file: !9616, line: 459, type: !1780)
!12703 = !DILocation(line: 459, column: 38, scope: !9650)
!12704 = !DILocation(line: 459, column: 46, scope: !9650)
!12705 = !DILocation(line: 459, column: 51, scope: !9650)
!12706 = !DILocation(line: 459, column: 60, scope: !9650)
!12707 = !DILocation(line: 459, column: 58, scope: !9650)
!12708 = !DILocalVariable(name: "scaled", scope: !9650, file: !9616, line: 460, type: !1780)
!12709 = !DILocation(line: 460, column: 38, scope: !9650)
!12710 = !DILocation(line: 460, column: 47, scope: !9650)
!12711 = !DILocation(line: 460, column: 50, scope: !9650)
!12712 = !DILocation(line: 460, column: 59, scope: !9650)
!12713 = !DILocation(line: 460, column: 57, scope: !9650)
!12714 = !DILocalVariable(name: "bits", scope: !9650, file: !9616, line: 461, type: !991)
!12715 = !DILocation(line: 461, column: 29, scope: !9650)
!12716 = !DILocalVariable(name: "cb", scope: !9650, file: !9616, line: 462, type: !991)
!12717 = !DILocation(line: 462, column: 29, scope: !9650)
!12718 = !DILocalVariable(name: "dist", scope: !9650, file: !9616, line: 463, type: !954)
!12719 = !DILocation(line: 463, column: 31, scope: !9650)
!12720 = !DILocalVariable(name: "qenergy", scope: !9650, file: !9616, line: 464, type: !954)
!12721 = !DILocation(line: 464, column: 31, scope: !9650)
!12722 = !DILocation(line: 466, column: 41, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !9650, file: !9616, line: 466, column: 29)
!12724 = !DILocation(line: 466, column: 42, scope: !12723)
!12725 = !DILocation(line: 466, column: 46, scope: !12723)
!12726 = !DILocation(line: 466, column: 45, scope: !12723)
!12727 = !DILocation(line: 466, column: 29, scope: !12723)
!12728 = !DILocation(line: 466, column: 34, scope: !12723)
!12729 = !DILocation(line: 466, column: 49, scope: !12723)
!12730 = !DILocation(line: 466, column: 64, scope: !12731)
!12731 = !DILexicalBlockFile(scope: !12723, file: !9616, discriminator: 1)
!12732 = !DILocation(line: 466, column: 65, scope: !12731)
!12733 = !DILocation(line: 466, column: 69, scope: !12731)
!12734 = !DILocation(line: 466, column: 68, scope: !12731)
!12735 = !DILocation(line: 466, column: 52, scope: !12731)
!12736 = !DILocation(line: 466, column: 57, scope: !12731)
!12737 = !DILocation(line: 466, column: 72, scope: !12731)
!12738 = !DILocation(line: 466, column: 29, scope: !12731)
!12739 = !DILocation(line: 467, column: 57, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12723, file: !9616, line: 466, column: 80)
!12741 = !DILocation(line: 467, column: 38, scope: !12740)
!12742 = !DILocation(line: 467, column: 43, scope: !12740)
!12743 = !DILocation(line: 467, column: 47, scope: !12740)
!12744 = !DILocation(line: 467, column: 35, scope: !12740)
!12745 = !DILocation(line: 468, column: 46, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12740, file: !9616, line: 468, column: 33)
!12747 = !DILocation(line: 468, column: 47, scope: !12746)
!12748 = !DILocation(line: 468, column: 51, scope: !12746)
!12749 = !DILocation(line: 468, column: 50, scope: !12746)
!12750 = !DILocation(line: 468, column: 33, scope: !12746)
!12751 = !DILocation(line: 468, column: 38, scope: !12746)
!12752 = !DILocation(line: 468, column: 33, scope: !12740)
!12753 = !DILocation(line: 470, column: 54, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12746, file: !9616, line: 468, column: 55)
!12755 = !DILocation(line: 470, column: 59, scope: !12754)
!12756 = !DILocation(line: 470, column: 62, scope: !12754)
!12757 = !DILocation(line: 470, column: 42, scope: !12754)
!12758 = !DILocation(line: 470, column: 39, scope: !12754)
!12759 = !DILocation(line: 471, column: 29, scope: !12754)
!12760 = !DILocation(line: 472, column: 29, scope: !12740)
!12761 = !DILocation(line: 474, column: 52, scope: !9650)
!12762 = !DILocation(line: 474, column: 53, scope: !9650)
!12763 = !DILocation(line: 474, column: 57, scope: !9650)
!12764 = !DILocation(line: 474, column: 56, scope: !9650)
!12765 = !DILocation(line: 474, column: 44, scope: !9650)
!12766 = !DILocation(line: 474, column: 73, scope: !9650)
!12767 = !DILocation(line: 474, column: 74, scope: !9650)
!12768 = !DILocation(line: 474, column: 78, scope: !9650)
!12769 = !DILocation(line: 474, column: 77, scope: !9650)
!12770 = !DILocation(line: 474, column: 61, scope: !9650)
!12771 = !DILocation(line: 474, column: 66, scope: !9650)
!12772 = !DILocation(line: 474, column: 30, scope: !9650)
!12773 = !DILocation(line: 474, column: 28, scope: !9650)
!12774 = !DILocation(line: 475, column: 33, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !9650, file: !9616, line: 475, column: 25)
!12776 = !DILocation(line: 475, column: 30, scope: !12775)
!12777 = !DILocation(line: 475, column: 38, scope: !12778)
!12778 = !DILexicalBlockFile(scope: !12779, file: !9616, discriminator: 1)
!12779 = distinct !DILexicalBlock(scope: !12775, file: !9616, line: 475, column: 25)
!12780 = !DILocation(line: 475, column: 62, scope: !12778)
!12781 = !DILocation(line: 475, column: 43, scope: !12778)
!12782 = !DILocation(line: 475, column: 48, scope: !12778)
!12783 = !DILocation(line: 475, column: 52, scope: !12778)
!12784 = !DILocation(line: 475, column: 41, scope: !12778)
!12785 = !DILocation(line: 475, column: 25, scope: !12778)
!12786 = !DILocalVariable(name: "b", scope: !12787, file: !9616, line: 476, type: !991)
!12787 = distinct !DILexicalBlock(scope: !12779, file: !9616, line: 475, column: 72)
!12788 = !DILocation(line: 476, column: 33, scope: !12787)
!12789 = !DILocalVariable(name: "sqenergy", scope: !12787, file: !9616, line: 477, type: !954)
!12790 = !DILocation(line: 477, column: 35, scope: !12787)
!12791 = !DILocation(line: 478, column: 63, scope: !12787)
!12792 = !DILocation(line: 478, column: 66, scope: !12787)
!12793 = !DILocation(line: 478, column: 70, scope: !12787)
!12794 = !DILocation(line: 478, column: 68, scope: !12787)
!12795 = !DILocation(line: 478, column: 74, scope: !12787)
!12796 = !DILocation(line: 478, column: 77, scope: !12787)
!12797 = !DILocation(line: 478, column: 85, scope: !12787)
!12798 = !DILocation(line: 478, column: 87, scope: !12787)
!12799 = !DILocation(line: 478, column: 83, scope: !12787)
!12800 = !DILocation(line: 479, column: 53, scope: !12787)
!12801 = !DILocation(line: 479, column: 62, scope: !12787)
!12802 = !DILocation(line: 479, column: 64, scope: !12787)
!12803 = !DILocation(line: 479, column: 60, scope: !12787)
!12804 = !DILocation(line: 480, column: 72, scope: !12787)
!12805 = !DILocation(line: 480, column: 53, scope: !12787)
!12806 = !DILocation(line: 480, column: 58, scope: !12787)
!12807 = !DILocation(line: 480, column: 62, scope: !12787)
!12808 = !DILocation(line: 481, column: 65, scope: !12787)
!12809 = !DILocation(line: 481, column: 66, scope: !12787)
!12810 = !DILocation(line: 481, column: 70, scope: !12787)
!12811 = !DILocation(line: 481, column: 69, scope: !12787)
!12812 = !DILocation(line: 481, column: 53, scope: !12787)
!12813 = !DILocation(line: 481, column: 58, scope: !12787)
!12814 = !DILocation(line: 482, column: 53, scope: !12787)
!12815 = !DILocation(line: 478, column: 37, scope: !12787)
!12816 = !DILocation(line: 478, column: 34, scope: !12787)
!12817 = !DILocation(line: 487, column: 37, scope: !12787)
!12818 = !DILocation(line: 487, column: 34, scope: !12787)
!12819 = !DILocation(line: 488, column: 40, scope: !12787)
!12820 = !DILocation(line: 488, column: 37, scope: !12787)
!12821 = !DILocation(line: 489, column: 25, scope: !12787)
!12822 = !DILocation(line: 475, column: 68, scope: !12823)
!12823 = !DILexicalBlockFile(scope: !12779, file: !9616, discriminator: 2)
!12824 = !DILocation(line: 475, column: 25, scope: !12823)
!12825 = distinct !{!12825, !12826}
!12826 = !DILocation(line: 475, column: 25, scope: !9650)
!12827 = !DILocation(line: 490, column: 41, scope: !9650)
!12828 = !DILocation(line: 490, column: 48, scope: !9650)
!12829 = !DILocation(line: 490, column: 46, scope: !9650)
!12830 = !DILocation(line: 490, column: 31, scope: !9650)
!12831 = !DILocation(line: 490, column: 32, scope: !9650)
!12832 = !DILocation(line: 490, column: 36, scope: !9650)
!12833 = !DILocation(line: 490, column: 35, scope: !9650)
!12834 = !DILocation(line: 490, column: 25, scope: !9650)
!12835 = !DILocation(line: 490, column: 39, scope: !9650)
!12836 = !DILocation(line: 491, column: 45, scope: !9650)
!12837 = !DILocation(line: 491, column: 35, scope: !9650)
!12838 = !DILocation(line: 491, column: 36, scope: !9650)
!12839 = !DILocation(line: 491, column: 40, scope: !9650)
!12840 = !DILocation(line: 491, column: 39, scope: !9650)
!12841 = !DILocation(line: 491, column: 25, scope: !9650)
!12842 = !DILocation(line: 491, column: 43, scope: !9650)
!12843 = !DILocation(line: 492, column: 29, scope: !9649)
!12844 = !DILocation(line: 492, column: 34, scope: !9649)
!12845 = !DILocation(line: 492, column: 29, scope: !9650)
!12846 = !DILocalVariable(name: "sfdiff", scope: !9648, file: !9616, line: 493, type: !991)
!12847 = !DILocation(line: 493, column: 33, scope: !9648)
!12848 = !DILocation(line: 493, column: 64, scope: !9648)
!12849 = !DILocation(line: 493, column: 65, scope: !9648)
!12850 = !DILocation(line: 493, column: 69, scope: !9648)
!12851 = !DILocation(line: 493, column: 68, scope: !9648)
!12852 = !DILocation(line: 493, column: 52, scope: !9648)
!12853 = !DILocation(line: 493, column: 57, scope: !9648)
!12854 = !DILocation(line: 493, column: 74, scope: !9648)
!12855 = !DILocation(line: 493, column: 72, scope: !9648)
!12856 = !DILocation(line: 493, column: 79, scope: !9648)
!12857 = !DILocation(line: 493, column: 42, scope: !9648)
!12858 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9647)
!12859 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9647)
!12860 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9647)
!12861 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9647)
!12862 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9647)
!12863 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9647)
!12864 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9647)
!12865 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9647)
!12866 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9647)
!12867 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9647)
!12868 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9647)
!12869 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9647)
!12870 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9647)
!12871 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9647)
!12872 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9647)
!12873 = !DILocation(line: 494, column: 61, scope: !9648)
!12874 = !DILocation(line: 494, column: 37, scope: !9648)
!12875 = !DILocation(line: 494, column: 34, scope: !9648)
!12876 = !DILocation(line: 495, column: 25, scope: !9648)
!12877 = !DILocation(line: 496, column: 34, scope: !9650)
!12878 = !DILocation(line: 496, column: 31, scope: !9650)
!12879 = !DILocation(line: 497, column: 53, scope: !9650)
!12880 = !DILocation(line: 497, column: 34, scope: !9650)
!12881 = !DILocation(line: 497, column: 39, scope: !9650)
!12882 = !DILocation(line: 497, column: 43, scope: !9650)
!12883 = !DILocation(line: 497, column: 31, scope: !9650)
!12884 = !DILocation(line: 498, column: 44, scope: !9650)
!12885 = !DILocation(line: 498, column: 45, scope: !9650)
!12886 = !DILocation(line: 498, column: 49, scope: !9650)
!12887 = !DILocation(line: 498, column: 48, scope: !9650)
!12888 = !DILocation(line: 498, column: 32, scope: !9650)
!12889 = !DILocation(line: 498, column: 37, scope: !9650)
!12890 = !DILocation(line: 498, column: 30, scope: !9650)
!12891 = !DILocation(line: 499, column: 21, scope: !9650)
!12892 = !DILocation(line: 458, column: 56, scope: !12893)
!12893 = !DILexicalBlockFile(scope: !9651, file: !9616, discriminator: 2)
!12894 = !DILocation(line: 458, column: 21, scope: !12893)
!12895 = distinct !{!12895, !12896}
!12896 = !DILocation(line: 458, column: 21, scope: !9653)
!12897 = !DILocation(line: 500, column: 17, scope: !9653)
!12898 = !DILocation(line: 456, column: 79, scope: !12899)
!12899 = !DILexicalBlockFile(scope: !9654, file: !9616, discriminator: 2)
!12900 = !DILocation(line: 456, column: 60, scope: !12899)
!12901 = !DILocation(line: 456, column: 65, scope: !12899)
!12902 = !DILocation(line: 456, column: 69, scope: !12899)
!12903 = !DILocation(line: 456, column: 57, scope: !12899)
!12904 = !DILocation(line: 456, column: 17, scope: !12899)
!12905 = distinct !{!12905, !12906}
!12906 = !DILocation(line: 456, column: 17, scope: !9656)
!12907 = !DILocation(line: 501, column: 13, scope: !9656)
!12908 = !DILocation(line: 502, column: 18, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !9658, file: !9616, line: 502, column: 17)
!12910 = !DILocation(line: 502, column: 20, scope: !12909)
!12911 = !DILocation(line: 502, column: 23, scope: !12912)
!12912 = !DILexicalBlockFile(scope: !12909, file: !9616, discriminator: 1)
!12913 = !DILocation(line: 502, column: 26, scope: !12912)
!12914 = !DILocation(line: 502, column: 34, scope: !12912)
!12915 = !DILocation(line: 502, column: 38, scope: !12912)
!12916 = !DILocation(line: 502, column: 41, scope: !12917)
!12917 = !DILexicalBlockFile(scope: !12909, file: !9616, discriminator: 2)
!12918 = !DILocation(line: 502, column: 47, scope: !12917)
!12919 = !DILocation(line: 502, column: 53, scope: !12917)
!12920 = !DILocation(line: 502, column: 45, scope: !12917)
!12921 = !DILocation(line: 502, column: 56, scope: !12917)
!12922 = !DILocation(line: 502, column: 59, scope: !12923)
!12923 = !DILexicalBlockFile(scope: !12909, file: !9616, discriminator: 3)
!12924 = !DILocation(line: 502, column: 67, scope: !12923)
!12925 = !DILocation(line: 502, column: 65, scope: !12923)
!12926 = !DILocation(line: 502, column: 17, scope: !12923)
!12927 = !DILocalVariable(name: "maxoverdist", scope: !12928, file: !9616, line: 503, type: !954)
!12928 = distinct !DILexicalBlock(scope: !12909, file: !9616, line: 502, column: 79)
!12929 = !DILocation(line: 503, column: 23, scope: !12928)
!12930 = !DILocalVariable(name: "ovrfactor", scope: !12928, file: !9616, line: 504, type: !954)
!12931 = !DILocation(line: 504, column: 23, scope: !12928)
!12932 = !DILocation(line: 504, column: 40, scope: !12928)
!12933 = !DILocation(line: 504, column: 47, scope: !12928)
!12934 = !DILocation(line: 504, column: 46, scope: !12928)
!12935 = !DILocation(line: 504, column: 39, scope: !12928)
!12936 = !DILocation(line: 504, column: 51, scope: !12928)
!12937 = !DILocation(line: 504, column: 57, scope: !12928)
!12938 = !DILocation(line: 504, column: 56, scope: !12928)
!12939 = !DILocation(line: 504, column: 38, scope: !12928)
!12940 = !DILocation(line: 505, column: 37, scope: !12928)
!12941 = !DILocation(line: 505, column: 26, scope: !12928)
!12942 = !DILocation(line: 506, column: 24, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12928, file: !9616, line: 506, column: 17)
!12944 = !DILocation(line: 506, column: 22, scope: !12943)
!12945 = !DILocation(line: 506, column: 29, scope: !12946)
!12946 = !DILexicalBlockFile(scope: !12947, file: !9616, discriminator: 1)
!12947 = distinct !DILexicalBlock(scope: !12943, file: !9616, line: 506, column: 17)
!12948 = !DILocation(line: 506, column: 33, scope: !12946)
!12949 = !DILocation(line: 506, column: 38, scope: !12946)
!12950 = !DILocation(line: 506, column: 42, scope: !12946)
!12951 = !DILocation(line: 506, column: 31, scope: !12946)
!12952 = !DILocation(line: 506, column: 17, scope: !12946)
!12953 = !DILocation(line: 507, column: 36, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12955, file: !9616, line: 507, column: 21)
!12955 = distinct !DILexicalBlock(scope: !12947, file: !9616, line: 506, column: 83)
!12956 = !DILocation(line: 507, column: 28, scope: !12954)
!12957 = !DILocation(line: 507, column: 26, scope: !12954)
!12958 = !DILocation(line: 507, column: 41, scope: !12959)
!12959 = !DILexicalBlockFile(scope: !12960, file: !9616, discriminator: 1)
!12960 = distinct !DILexicalBlock(scope: !12954, file: !9616, line: 507, column: 21)
!12961 = !DILocation(line: 507, column: 45, scope: !12959)
!12962 = !DILocation(line: 507, column: 50, scope: !12959)
!12963 = !DILocation(line: 507, column: 54, scope: !12959)
!12964 = !DILocation(line: 507, column: 43, scope: !12959)
!12965 = !DILocation(line: 507, column: 21, scope: !12959)
!12966 = !DILocation(line: 508, column: 42, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12968, file: !9616, line: 508, column: 29)
!12968 = distinct !DILexicalBlock(scope: !12960, file: !9616, line: 507, column: 97)
!12969 = !DILocation(line: 508, column: 43, scope: !12967)
!12970 = !DILocation(line: 508, column: 47, scope: !12967)
!12971 = !DILocation(line: 508, column: 46, scope: !12967)
!12972 = !DILocation(line: 508, column: 30, scope: !12967)
!12973 = !DILocation(line: 508, column: 35, scope: !12967)
!12974 = !DILocation(line: 508, column: 50, scope: !12967)
!12975 = !DILocation(line: 508, column: 65, scope: !12976)
!12976 = !DILexicalBlockFile(scope: !12967, file: !9616, discriminator: 1)
!12977 = !DILocation(line: 508, column: 66, scope: !12976)
!12978 = !DILocation(line: 508, column: 70, scope: !12976)
!12979 = !DILocation(line: 508, column: 69, scope: !12976)
!12980 = !DILocation(line: 508, column: 53, scope: !12976)
!12981 = !DILocation(line: 508, column: 58, scope: !12976)
!12982 = !DILocation(line: 508, column: 73, scope: !12976)
!12983 = !DILocation(line: 508, column: 79, scope: !12976)
!12984 = !DILocation(line: 508, column: 88, scope: !12985)
!12985 = !DILexicalBlockFile(scope: !12967, file: !9616, discriminator: 2)
!12986 = !DILocation(line: 508, column: 89, scope: !12985)
!12987 = !DILocation(line: 508, column: 93, scope: !12985)
!12988 = !DILocation(line: 508, column: 92, scope: !12985)
!12989 = !DILocation(line: 508, column: 82, scope: !12985)
!12990 = !DILocation(line: 508, column: 105, scope: !12985)
!12991 = !DILocation(line: 508, column: 106, scope: !12985)
!12992 = !DILocation(line: 508, column: 110, scope: !12985)
!12993 = !DILocation(line: 508, column: 109, scope: !12985)
!12994 = !DILocation(line: 508, column: 98, scope: !12985)
!12995 = !DILocation(line: 508, column: 113, scope: !12985)
!12996 = !DILocation(line: 508, column: 112, scope: !12985)
!12997 = !DILocation(line: 508, column: 96, scope: !12985)
!12998 = !DILocation(line: 508, column: 29, scope: !12985)
!12999 = !DILocalVariable(name: "ovrdist", scope: !13000, file: !9616, line: 509, type: !954)
!13000 = distinct !DILexicalBlock(scope: !12967, file: !9616, line: 508, column: 124)
!13001 = !DILocation(line: 509, column: 35, scope: !13000)
!13002 = !DILocation(line: 509, column: 51, scope: !13000)
!13003 = !DILocation(line: 509, column: 52, scope: !13000)
!13004 = !DILocation(line: 509, column: 56, scope: !13000)
!13005 = !DILocation(line: 509, column: 55, scope: !13000)
!13006 = !DILocation(line: 509, column: 45, scope: !13000)
!13007 = !DILocation(line: 509, column: 70, scope: !13000)
!13008 = !DILocation(line: 509, column: 71, scope: !13000)
!13009 = !DILocation(line: 509, column: 75, scope: !13000)
!13010 = !DILocation(line: 509, column: 74, scope: !13000)
!13011 = !DILocation(line: 509, column: 63, scope: !13000)
!13012 = !DILocation(line: 509, column: 90, scope: !13000)
!13013 = !DILocation(line: 509, column: 91, scope: !13000)
!13014 = !DILocation(line: 509, column: 95, scope: !13000)
!13015 = !DILocation(line: 509, column: 94, scope: !13000)
!13016 = !DILocation(line: 509, column: 82, scope: !13000)
!13017 = !DILocation(line: 509, column: 79, scope: !13000)
!13018 = !DILocation(line: 509, column: 62, scope: !13000)
!13019 = !DILocation(line: 509, column: 109, scope: !13020)
!13020 = !DILexicalBlockFile(scope: !13000, file: !9616, discriminator: 1)
!13021 = !DILocation(line: 509, column: 110, scope: !13020)
!13022 = !DILocation(line: 509, column: 114, scope: !13020)
!13023 = !DILocation(line: 509, column: 113, scope: !13020)
!13024 = !DILocation(line: 509, column: 102, scope: !13020)
!13025 = !DILocation(line: 509, column: 62, scope: !13020)
!13026 = !DILocation(line: 509, column: 129, scope: !13027)
!13027 = !DILexicalBlockFile(scope: !13000, file: !9616, discriminator: 2)
!13028 = !DILocation(line: 509, column: 130, scope: !13027)
!13029 = !DILocation(line: 509, column: 134, scope: !13027)
!13030 = !DILocation(line: 509, column: 133, scope: !13027)
!13031 = !DILocation(line: 509, column: 121, scope: !13027)
!13032 = !DILocation(line: 509, column: 62, scope: !13027)
!13033 = !DILocation(line: 509, column: 62, scope: !13034)
!13034 = !DILexicalBlockFile(scope: !13000, file: !9616, discriminator: 3)
!13035 = !DILocation(line: 509, column: 59, scope: !13034)
!13036 = !DILocation(line: 509, column: 35, scope: !13034)
!13037 = !DILocation(line: 510, column: 45, scope: !13000)
!13038 = !DILocation(line: 510, column: 61, scope: !13000)
!13039 = !DILocation(line: 510, column: 58, scope: !13000)
!13040 = !DILocation(line: 510, column: 44, scope: !13000)
!13041 = !DILocation(line: 510, column: 73, scope: !13020)
!13042 = !DILocation(line: 510, column: 44, scope: !13020)
!13043 = !DILocation(line: 510, column: 89, scope: !13027)
!13044 = !DILocation(line: 510, column: 44, scope: !13027)
!13045 = !DILocation(line: 510, column: 44, scope: !13034)
!13046 = !DILocation(line: 510, column: 41, scope: !13034)
!13047 = !DILocation(line: 511, column: 37, scope: !13000)
!13048 = !DILocation(line: 512, column: 25, scope: !13000)
!13049 = !DILocation(line: 513, column: 21, scope: !12968)
!13050 = !DILocation(line: 507, column: 92, scope: !13051)
!13051 = !DILexicalBlockFile(scope: !12960, file: !9616, discriminator: 2)
!13052 = !DILocation(line: 507, column: 72, scope: !13051)
!13053 = !DILocation(line: 507, column: 77, scope: !13051)
!13054 = !DILocation(line: 507, column: 81, scope: !13051)
!13055 = !DILocation(line: 507, column: 69, scope: !13051)
!13056 = !DILocation(line: 507, column: 21, scope: !13051)
!13057 = distinct !{!13057, !13058}
!13058 = !DILocation(line: 507, column: 21, scope: !12955)
!13059 = !DILocation(line: 514, column: 17, scope: !12955)
!13060 = !DILocation(line: 506, column: 79, scope: !13061)
!13061 = !DILexicalBlockFile(scope: !12947, file: !9616, discriminator: 2)
!13062 = !DILocation(line: 506, column: 60, scope: !13061)
!13063 = !DILocation(line: 506, column: 65, scope: !13061)
!13064 = !DILocation(line: 506, column: 69, scope: !13061)
!13065 = !DILocation(line: 506, column: 57, scope: !13061)
!13066 = !DILocation(line: 506, column: 17, scope: !13061)
!13067 = distinct !{!13067, !13068}
!13068 = !DILocation(line: 506, column: 17, scope: !12928)
!13069 = !DILocation(line: 515, column: 21, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !12928, file: !9616, line: 515, column: 21)
!13071 = !DILocation(line: 515, column: 21, scope: !12928)
!13072 = !DILocalVariable(name: "minspread", scope: !13073, file: !9616, line: 519, type: !954)
!13073 = distinct !DILexicalBlock(scope: !13070, file: !9616, line: 515, column: 31)
!13074 = !DILocation(line: 519, column: 27, scope: !13073)
!13075 = !DILocation(line: 519, column: 39, scope: !13073)
!13076 = !DILocalVariable(name: "maxspread", scope: !13073, file: !9616, line: 520, type: !954)
!13077 = !DILocation(line: 520, column: 27, scope: !13073)
!13078 = !DILocation(line: 520, column: 39, scope: !13073)
!13079 = !DILocalVariable(name: "zspread", scope: !13073, file: !9616, line: 521, type: !954)
!13080 = !DILocation(line: 521, column: 27, scope: !13073)
!13081 = !DILocalVariable(name: "zeroable", scope: !13073, file: !9616, line: 522, type: !991)
!13082 = !DILocation(line: 522, column: 25, scope: !13073)
!13083 = !DILocalVariable(name: "zeroed", scope: !13073, file: !9616, line: 523, type: !991)
!13084 = !DILocation(line: 523, column: 25, scope: !13073)
!13085 = !DILocalVariable(name: "maxzeroed", scope: !13073, file: !9616, line: 524, type: !991)
!13086 = !DILocation(line: 524, column: 25, scope: !13073)
!13087 = !DILocalVariable(name: "zloop", scope: !13073, file: !9616, line: 524, type: !991)
!13088 = !DILocation(line: 524, column: 36, scope: !13073)
!13089 = !DILocation(line: 525, column: 28, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13073, file: !9616, line: 525, column: 21)
!13091 = !DILocation(line: 525, column: 26, scope: !13090)
!13092 = !DILocation(line: 525, column: 33, scope: !13093)
!13093 = !DILexicalBlockFile(scope: !13094, file: !9616, discriminator: 1)
!13094 = distinct !DILexicalBlock(scope: !13090, file: !9616, line: 525, column: 21)
!13095 = !DILocation(line: 525, column: 37, scope: !13093)
!13096 = !DILocation(line: 525, column: 42, scope: !13093)
!13097 = !DILocation(line: 525, column: 46, scope: !13093)
!13098 = !DILocation(line: 525, column: 35, scope: !13093)
!13099 = !DILocation(line: 525, column: 21, scope: !13093)
!13100 = !DILocation(line: 526, column: 40, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !9616, line: 526, column: 25)
!13102 = distinct !DILexicalBlock(scope: !13094, file: !9616, line: 525, column: 87)
!13103 = !DILocation(line: 526, column: 32, scope: !13101)
!13104 = !DILocation(line: 526, column: 30, scope: !13101)
!13105 = !DILocation(line: 526, column: 45, scope: !13106)
!13106 = !DILexicalBlockFile(scope: !13107, file: !9616, discriminator: 1)
!13107 = distinct !DILexicalBlock(scope: !13101, file: !9616, line: 526, column: 25)
!13108 = !DILocation(line: 526, column: 49, scope: !13106)
!13109 = !DILocation(line: 526, column: 54, scope: !13106)
!13110 = !DILocation(line: 526, column: 58, scope: !13106)
!13111 = !DILocation(line: 526, column: 47, scope: !13106)
!13112 = !DILocation(line: 526, column: 25, scope: !13106)
!13113 = !DILocation(line: 527, column: 33, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !9616, line: 527, column: 33)
!13115 = distinct !DILexicalBlock(scope: !13107, file: !9616, line: 526, column: 101)
!13116 = !DILocation(line: 527, column: 42, scope: !13114)
!13117 = !DILocation(line: 527, column: 39, scope: !13114)
!13118 = !DILocation(line: 527, column: 56, scope: !13114)
!13119 = !DILocation(line: 527, column: 72, scope: !13120)
!13120 = !DILexicalBlockFile(scope: !13114, file: !9616, discriminator: 1)
!13121 = !DILocation(line: 527, column: 73, scope: !13120)
!13122 = !DILocation(line: 527, column: 77, scope: !13120)
!13123 = !DILocation(line: 527, column: 76, scope: !13120)
!13124 = !DILocation(line: 527, column: 60, scope: !13120)
!13125 = !DILocation(line: 527, column: 65, scope: !13120)
!13126 = !DILocation(line: 527, column: 80, scope: !13120)
!13127 = !DILocation(line: 527, column: 96, scope: !13128)
!13128 = !DILexicalBlockFile(scope: !13114, file: !9616, discriminator: 2)
!13129 = !DILocation(line: 527, column: 97, scope: !13128)
!13130 = !DILocation(line: 527, column: 101, scope: !13128)
!13131 = !DILocation(line: 527, column: 100, scope: !13128)
!13132 = !DILocation(line: 527, column: 83, scope: !13128)
!13133 = !DILocation(line: 527, column: 88, scope: !13128)
!13134 = !DILocation(line: 527, column: 33, scope: !13128)
!13135 = !DILocation(line: 528, column: 47, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13114, file: !9616, line: 527, column: 105)
!13137 = !DILocation(line: 528, column: 74, scope: !13136)
!13138 = !DILocation(line: 528, column: 75, scope: !13136)
!13139 = !DILocation(line: 528, column: 79, scope: !13136)
!13140 = !DILocation(line: 528, column: 78, scope: !13136)
!13141 = !DILocation(line: 528, column: 61, scope: !13136)
!13142 = !DILocation(line: 528, column: 58, scope: !13136)
!13143 = !DILocation(line: 528, column: 46, scope: !13136)
!13144 = !DILocation(line: 528, column: 99, scope: !13145)
!13145 = !DILexicalBlockFile(scope: !13136, file: !9616, discriminator: 1)
!13146 = !DILocation(line: 528, column: 100, scope: !13145)
!13147 = !DILocation(line: 528, column: 104, scope: !13145)
!13148 = !DILocation(line: 528, column: 103, scope: !13145)
!13149 = !DILocation(line: 528, column: 86, scope: !13145)
!13150 = !DILocation(line: 528, column: 46, scope: !13145)
!13151 = !DILocation(line: 528, column: 111, scope: !13152)
!13152 = !DILexicalBlockFile(scope: !13136, file: !9616, discriminator: 2)
!13153 = !DILocation(line: 528, column: 46, scope: !13152)
!13154 = !DILocation(line: 528, column: 46, scope: !13155)
!13155 = !DILexicalBlockFile(scope: !13136, file: !9616, discriminator: 3)
!13156 = !DILocation(line: 528, column: 43, scope: !13155)
!13157 = !DILocation(line: 529, column: 47, scope: !13136)
!13158 = !DILocation(line: 529, column: 74, scope: !13136)
!13159 = !DILocation(line: 529, column: 75, scope: !13136)
!13160 = !DILocation(line: 529, column: 79, scope: !13136)
!13161 = !DILocation(line: 529, column: 78, scope: !13136)
!13162 = !DILocation(line: 529, column: 61, scope: !13136)
!13163 = !DILocation(line: 529, column: 58, scope: !13136)
!13164 = !DILocation(line: 529, column: 46, scope: !13136)
!13165 = !DILocation(line: 529, column: 86, scope: !13145)
!13166 = !DILocation(line: 529, column: 46, scope: !13145)
!13167 = !DILocation(line: 529, column: 113, scope: !13152)
!13168 = !DILocation(line: 529, column: 114, scope: !13152)
!13169 = !DILocation(line: 529, column: 118, scope: !13152)
!13170 = !DILocation(line: 529, column: 117, scope: !13152)
!13171 = !DILocation(line: 529, column: 100, scope: !13152)
!13172 = !DILocation(line: 529, column: 46, scope: !13152)
!13173 = !DILocation(line: 529, column: 46, scope: !13155)
!13174 = !DILocation(line: 529, column: 43, scope: !13155)
!13175 = !DILocation(line: 530, column: 41, scope: !13136)
!13176 = !DILocation(line: 531, column: 29, scope: !13136)
!13177 = !DILocation(line: 532, column: 25, scope: !13115)
!13178 = !DILocation(line: 526, column: 96, scope: !13179)
!13179 = !DILexicalBlockFile(scope: !13107, file: !9616, discriminator: 2)
!13180 = !DILocation(line: 526, column: 76, scope: !13179)
!13181 = !DILocation(line: 526, column: 81, scope: !13179)
!13182 = !DILocation(line: 526, column: 85, scope: !13179)
!13183 = !DILocation(line: 526, column: 73, scope: !13179)
!13184 = !DILocation(line: 526, column: 25, scope: !13179)
!13185 = distinct !{!13185, !13186}
!13186 = !DILocation(line: 526, column: 25, scope: !13102)
!13187 = !DILocation(line: 533, column: 21, scope: !13102)
!13188 = !DILocation(line: 525, column: 83, scope: !13189)
!13189 = !DILexicalBlockFile(scope: !13094, file: !9616, discriminator: 2)
!13190 = !DILocation(line: 525, column: 64, scope: !13189)
!13191 = !DILocation(line: 525, column: 69, scope: !13189)
!13192 = !DILocation(line: 525, column: 73, scope: !13189)
!13193 = !DILocation(line: 525, column: 61, scope: !13189)
!13194 = !DILocation(line: 525, column: 21, scope: !13189)
!13195 = distinct !{!13195, !13196}
!13196 = !DILocation(line: 525, column: 21, scope: !13073)
!13197 = !DILocation(line: 534, column: 32, scope: !13073)
!13198 = !DILocation(line: 534, column: 42, scope: !13073)
!13199 = !DILocation(line: 534, column: 41, scope: !13073)
!13200 = !DILocation(line: 534, column: 53, scope: !13073)
!13201 = !DILocation(line: 534, column: 65, scope: !13073)
!13202 = !DILocation(line: 534, column: 63, scope: !13073)
!13203 = !DILocation(line: 534, column: 29, scope: !13073)
!13204 = !DILocation(line: 540, column: 35, scope: !13073)
!13205 = !DILocation(line: 540, column: 52, scope: !13073)
!13206 = !DILocation(line: 540, column: 62, scope: !13073)
!13207 = !DILocation(line: 540, column: 59, scope: !13073)
!13208 = !DILocation(line: 540, column: 34, scope: !13073)
!13209 = !DILocation(line: 540, column: 74, scope: !13210)
!13210 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 1)
!13211 = !DILocation(line: 540, column: 34, scope: !13210)
!13212 = !DILocation(line: 540, column: 86, scope: !13213)
!13213 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 2)
!13214 = !DILocation(line: 540, column: 103, scope: !13213)
!13215 = !DILocation(line: 540, column: 34, scope: !13213)
!13216 = !DILocation(line: 540, column: 34, scope: !13217)
!13217 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 3)
!13218 = !DILocation(line: 540, column: 117, scope: !13217)
!13219 = !DILocation(line: 540, column: 131, scope: !13217)
!13220 = !DILocation(line: 540, column: 129, scope: !13217)
!13221 = !DILocation(line: 540, column: 116, scope: !13217)
!13222 = !DILocation(line: 540, column: 140, scope: !13217)
!13223 = !DILocation(line: 540, column: 138, scope: !13217)
!13224 = !DILocation(line: 540, column: 160, scope: !13217)
!13225 = !DILocation(line: 540, column: 168, scope: !13217)
!13226 = !DILocation(line: 540, column: 166, scope: !13217)
!13227 = !DILocation(line: 540, column: 159, scope: !13217)
!13228 = !DILocation(line: 540, column: 182, scope: !13217)
!13229 = !DILocation(line: 540, column: 180, scope: !13217)
!13230 = !DILocation(line: 540, column: 157, scope: !13217)
!13231 = !DILocation(line: 540, column: 203, scope: !13217)
!13232 = !DILocation(line: 540, column: 217, scope: !13217)
!13233 = !DILocation(line: 540, column: 215, scope: !13217)
!13234 = !DILocation(line: 540, column: 228, scope: !13217)
!13235 = !DILocation(line: 540, column: 202, scope: !13217)
!13236 = !DILocation(line: 540, column: 200, scope: !13217)
!13237 = !DILocation(line: 540, column: 112, scope: !13217)
!13238 = !DILocation(line: 540, column: 32, scope: !13217)
!13239 = !DILocation(line: 540, column: 239, scope: !13240)
!13240 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 4)
!13241 = !DILocation(line: 540, column: 253, scope: !13240)
!13242 = !DILocation(line: 540, column: 251, scope: !13240)
!13243 = !DILocation(line: 540, column: 238, scope: !13240)
!13244 = !DILocation(line: 540, column: 262, scope: !13240)
!13245 = !DILocation(line: 540, column: 260, scope: !13240)
!13246 = !DILocation(line: 540, column: 282, scope: !13240)
!13247 = !DILocation(line: 540, column: 290, scope: !13240)
!13248 = !DILocation(line: 540, column: 288, scope: !13240)
!13249 = !DILocation(line: 540, column: 281, scope: !13240)
!13250 = !DILocation(line: 540, column: 304, scope: !13240)
!13251 = !DILocation(line: 540, column: 302, scope: !13240)
!13252 = !DILocation(line: 540, column: 279, scope: !13240)
!13253 = !DILocation(line: 540, column: 325, scope: !13240)
!13254 = !DILocation(line: 540, column: 339, scope: !13240)
!13255 = !DILocation(line: 540, column: 337, scope: !13240)
!13256 = !DILocation(line: 540, column: 350, scope: !13240)
!13257 = !DILocation(line: 540, column: 324, scope: !13240)
!13258 = !DILocation(line: 540, column: 322, scope: !13240)
!13259 = !DILocation(line: 540, column: 32, scope: !13240)
!13260 = !DILocation(line: 540, column: 361, scope: !13261)
!13261 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 5)
!13262 = !DILocation(line: 540, column: 378, scope: !13261)
!13263 = !DILocation(line: 540, column: 388, scope: !13261)
!13264 = !DILocation(line: 540, column: 385, scope: !13261)
!13265 = !DILocation(line: 540, column: 360, scope: !13261)
!13266 = !DILocation(line: 540, column: 400, scope: !13267)
!13267 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 6)
!13268 = !DILocation(line: 540, column: 360, scope: !13267)
!13269 = !DILocation(line: 540, column: 412, scope: !13270)
!13270 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 7)
!13271 = !DILocation(line: 540, column: 429, scope: !13270)
!13272 = !DILocation(line: 540, column: 360, scope: !13270)
!13273 = !DILocation(line: 540, column: 360, scope: !13274)
!13274 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 8)
!13275 = !DILocation(line: 540, column: 32, scope: !13274)
!13276 = !DILocation(line: 540, column: 32, scope: !13277)
!13277 = !DILexicalBlockFile(scope: !13073, file: !9616, discriminator: 9)
!13278 = !DILocation(line: 540, column: 29, scope: !13277)
!13279 = !DILocation(line: 542, column: 35, scope: !13073)
!13280 = !DILocation(line: 542, column: 57, scope: !13073)
!13281 = !DILocation(line: 542, column: 68, scope: !13073)
!13282 = !DILocation(line: 542, column: 66, scope: !13073)
!13283 = !DILocation(line: 542, column: 74, scope: !13073)
!13284 = !DILocation(line: 542, column: 72, scope: !13073)
!13285 = !DILocation(line: 542, column: 81, scope: !13073)
!13286 = !DILocation(line: 542, column: 93, scope: !13073)
!13287 = !DILocation(line: 542, column: 91, scope: !13073)
!13288 = !DILocation(line: 542, column: 86, scope: !13073)
!13289 = !DILocation(line: 542, column: 53, scope: !13073)
!13290 = !DILocation(line: 542, column: 49, scope: !13073)
!13291 = !DILocation(line: 542, column: 49, scope: !13210)
!13292 = !DILocation(line: 542, column: 112, scope: !13213)
!13293 = !DILocation(line: 542, column: 123, scope: !13213)
!13294 = !DILocation(line: 542, column: 121, scope: !13213)
!13295 = !DILocation(line: 542, column: 129, scope: !13213)
!13296 = !DILocation(line: 542, column: 127, scope: !13213)
!13297 = !DILocation(line: 542, column: 136, scope: !13213)
!13298 = !DILocation(line: 542, column: 148, scope: !13213)
!13299 = !DILocation(line: 542, column: 146, scope: !13213)
!13300 = !DILocation(line: 542, column: 141, scope: !13213)
!13301 = !DILocation(line: 542, column: 49, scope: !13213)
!13302 = !DILocation(line: 542, column: 49, scope: !13217)
!13303 = !DILocation(line: 542, column: 45, scope: !13217)
!13304 = !DILocation(line: 542, column: 34, scope: !13217)
!13305 = !DILocation(line: 542, column: 171, scope: !13240)
!13306 = !DILocation(line: 542, column: 182, scope: !13240)
!13307 = !DILocation(line: 542, column: 180, scope: !13240)
!13308 = !DILocation(line: 542, column: 188, scope: !13240)
!13309 = !DILocation(line: 542, column: 186, scope: !13240)
!13310 = !DILocation(line: 542, column: 195, scope: !13240)
!13311 = !DILocation(line: 542, column: 207, scope: !13240)
!13312 = !DILocation(line: 542, column: 205, scope: !13240)
!13313 = !DILocation(line: 542, column: 200, scope: !13240)
!13314 = !DILocation(line: 542, column: 167, scope: !13240)
!13315 = !DILocation(line: 542, column: 163, scope: !13240)
!13316 = !DILocation(line: 542, column: 163, scope: !13261)
!13317 = !DILocation(line: 542, column: 226, scope: !13267)
!13318 = !DILocation(line: 542, column: 237, scope: !13267)
!13319 = !DILocation(line: 542, column: 235, scope: !13267)
!13320 = !DILocation(line: 542, column: 243, scope: !13267)
!13321 = !DILocation(line: 542, column: 241, scope: !13267)
!13322 = !DILocation(line: 542, column: 250, scope: !13267)
!13323 = !DILocation(line: 542, column: 262, scope: !13267)
!13324 = !DILocation(line: 542, column: 260, scope: !13267)
!13325 = !DILocation(line: 542, column: 255, scope: !13267)
!13326 = !DILocation(line: 542, column: 163, scope: !13267)
!13327 = !DILocation(line: 542, column: 163, scope: !13270)
!13328 = !DILocation(line: 542, column: 34, scope: !13270)
!13329 = !DILocation(line: 542, column: 276, scope: !13274)
!13330 = !DILocation(line: 542, column: 34, scope: !13274)
!13331 = !DILocation(line: 542, column: 34, scope: !13277)
!13332 = !DILocation(line: 542, column: 31, scope: !13277)
!13333 = !DILocation(line: 543, column: 32, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13073, file: !9616, line: 543, column: 21)
!13335 = !DILocation(line: 543, column: 26, scope: !13334)
!13336 = !DILocation(line: 543, column: 37, scope: !13337)
!13337 = !DILexicalBlockFile(scope: !13338, file: !9616, discriminator: 1)
!13338 = distinct !DILexicalBlock(scope: !13334, file: !9616, line: 543, column: 21)
!13339 = !DILocation(line: 543, column: 43, scope: !13337)
!13340 = !DILocation(line: 543, column: 21, scope: !13337)
!13341 = !DILocalVariable(name: "loopovrfactor", scope: !13342, file: !9616, line: 550, type: !954)
!13342 = distinct !DILexicalBlock(scope: !13338, file: !9616, line: 543, column: 57)
!13343 = !DILocation(line: 550, column: 31, scope: !13342)
!13344 = !DILocation(line: 550, column: 48, scope: !13342)
!13345 = !DILocation(line: 550, column: 47, scope: !13342)
!13346 = !DILocation(line: 550, column: 47, scope: !13347)
!13347 = !DILexicalBlockFile(scope: !13342, file: !9616, discriminator: 1)
!13348 = !DILocation(line: 550, column: 64, scope: !13349)
!13349 = !DILexicalBlockFile(scope: !13342, file: !9616, discriminator: 2)
!13350 = !DILocation(line: 550, column: 47, scope: !13349)
!13351 = !DILocation(line: 550, column: 47, scope: !13352)
!13352 = !DILexicalBlockFile(scope: !13342, file: !9616, discriminator: 3)
!13353 = !DILocation(line: 550, column: 31, scope: !13352)
!13354 = !DILocalVariable(name: "loopminsf", scope: !13342, file: !9616, line: 551, type: !991)
!13355 = !DILocation(line: 551, column: 29, scope: !13342)
!13356 = !DILocation(line: 551, column: 42, scope: !13342)
!13357 = !DILocation(line: 551, column: 41, scope: !13342)
!13358 = !DILocalVariable(name: "mcb", scope: !13342, file: !9616, line: 552, type: !991)
!13359 = !DILocation(line: 552, column: 29, scope: !13342)
!13360 = !DILocation(line: 553, column: 34, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13342, file: !9616, line: 553, column: 25)
!13362 = !DILocation(line: 553, column: 39, scope: !13361)
!13363 = !DILocation(line: 553, column: 43, scope: !13361)
!13364 = !DILocation(line: 553, column: 50, scope: !13361)
!13365 = !DILocation(line: 553, column: 32, scope: !13361)
!13366 = !DILocation(line: 553, column: 30, scope: !13361)
!13367 = !DILocation(line: 553, column: 54, scope: !13368)
!13368 = !DILexicalBlockFile(scope: !13369, file: !9616, discriminator: 1)
!13369 = distinct !DILexicalBlock(scope: !13361, file: !9616, line: 553, column: 25)
!13370 = !DILocation(line: 553, column: 56, scope: !13368)
!13371 = !DILocation(line: 553, column: 60, scope: !13368)
!13372 = !DILocation(line: 553, column: 63, scope: !13373)
!13373 = !DILexicalBlockFile(scope: !13369, file: !9616, discriminator: 2)
!13374 = !DILocation(line: 553, column: 72, scope: !13373)
!13375 = !DILocation(line: 553, column: 70, scope: !13373)
!13376 = !DILocation(line: 553, column: 25, scope: !13377)
!13377 = !DILexicalBlockFile(scope: !13361, file: !9616, discriminator: 3)
!13378 = !DILocation(line: 554, column: 53, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !9616, line: 554, column: 33)
!13380 = distinct !DILexicalBlock(scope: !13369, file: !9616, line: 553, column: 88)
!13381 = !DILocation(line: 554, column: 33, scope: !13379)
!13382 = !DILocation(line: 554, column: 38, scope: !13379)
!13383 = !DILocation(line: 554, column: 42, scope: !13379)
!13384 = !DILocation(line: 554, column: 58, scope: !13379)
!13385 = !DILocation(line: 554, column: 56, scope: !13379)
!13386 = !DILocation(line: 554, column: 33, scope: !13380)
!13387 = !DILocation(line: 555, column: 33, scope: !13379)
!13388 = !DILocation(line: 556, column: 36, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13380, file: !9616, line: 556, column: 29)
!13390 = !DILocation(line: 556, column: 34, scope: !13389)
!13391 = !DILocation(line: 556, column: 41, scope: !13392)
!13392 = !DILexicalBlockFile(scope: !13393, file: !9616, discriminator: 1)
!13393 = distinct !DILexicalBlock(scope: !13389, file: !9616, line: 556, column: 29)
!13394 = !DILocation(line: 556, column: 45, scope: !13392)
!13395 = !DILocation(line: 556, column: 50, scope: !13392)
!13396 = !DILocation(line: 556, column: 54, scope: !13392)
!13397 = !DILocation(line: 556, column: 43, scope: !13392)
!13398 = !DILocation(line: 556, column: 29, scope: !13392)
!13399 = !DILocation(line: 557, column: 50, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !9616, line: 557, column: 37)
!13401 = distinct !DILexicalBlock(scope: !13393, file: !9616, line: 556, column: 95)
!13402 = !DILocation(line: 557, column: 51, scope: !13400)
!13403 = !DILocation(line: 557, column: 55, scope: !13400)
!13404 = !DILocation(line: 557, column: 54, scope: !13400)
!13405 = !DILocation(line: 557, column: 38, scope: !13400)
!13406 = !DILocation(line: 557, column: 43, scope: !13400)
!13407 = !DILocation(line: 557, column: 58, scope: !13400)
!13408 = !DILocation(line: 557, column: 74, scope: !13409)
!13409 = !DILexicalBlockFile(scope: !13400, file: !9616, discriminator: 1)
!13410 = !DILocation(line: 557, column: 75, scope: !13409)
!13411 = !DILocation(line: 557, column: 79, scope: !13409)
!13412 = !DILocation(line: 557, column: 78, scope: !13409)
!13413 = !DILocation(line: 557, column: 61, scope: !13409)
!13414 = !DILocation(line: 557, column: 66, scope: !13409)
!13415 = !DILocation(line: 557, column: 82, scope: !13409)
!13416 = !DILocation(line: 557, column: 98, scope: !13417)
!13417 = !DILexicalBlockFile(scope: !13400, file: !9616, discriminator: 2)
!13418 = !DILocation(line: 557, column: 99, scope: !13417)
!13419 = !DILocation(line: 557, column: 103, scope: !13417)
!13420 = !DILocation(line: 557, column: 102, scope: !13417)
!13421 = !DILocation(line: 557, column: 85, scope: !13417)
!13422 = !DILocation(line: 557, column: 109, scope: !13417)
!13423 = !DILocation(line: 557, column: 106, scope: !13417)
!13424 = !DILocation(line: 558, column: 37, scope: !13400)
!13425 = !DILocation(line: 558, column: 52, scope: !13409)
!13426 = !DILocation(line: 558, column: 53, scope: !13409)
!13427 = !DILocation(line: 558, column: 57, scope: !13409)
!13428 = !DILocation(line: 558, column: 56, scope: !13409)
!13429 = !DILocation(line: 558, column: 40, scope: !13409)
!13430 = !DILocation(line: 558, column: 45, scope: !13409)
!13431 = !DILocation(line: 558, column: 62, scope: !13409)
!13432 = !DILocation(line: 558, column: 60, scope: !13409)
!13433 = !DILocation(line: 559, column: 37, scope: !13400)
!13434 = !DILocation(line: 559, column: 47, scope: !13409)
!13435 = !DILocation(line: 559, column: 48, scope: !13409)
!13436 = !DILocation(line: 559, column: 52, scope: !13409)
!13437 = !DILocation(line: 559, column: 51, scope: !13409)
!13438 = !DILocation(line: 559, column: 41, scope: !13409)
!13439 = !DILocation(line: 559, column: 57, scope: !13409)
!13440 = !DILocation(line: 559, column: 78, scope: !13409)
!13441 = !DILocation(line: 559, column: 79, scope: !13409)
!13442 = !DILocation(line: 559, column: 83, scope: !13409)
!13443 = !DILocation(line: 559, column: 82, scope: !13409)
!13444 = !DILocation(line: 559, column: 71, scope: !13409)
!13445 = !DILocation(line: 559, column: 70, scope: !13409)
!13446 = !DILocation(line: 559, column: 55, scope: !13409)
!13447 = !DILocation(line: 559, column: 86, scope: !13409)
!13448 = !DILocation(line: 559, column: 119, scope: !13417)
!13449 = !DILocation(line: 559, column: 120, scope: !13417)
!13450 = !DILocation(line: 559, column: 124, scope: !13417)
!13451 = !DILocation(line: 559, column: 123, scope: !13417)
!13452 = !DILocation(line: 559, column: 111, scope: !13417)
!13453 = !DILocation(line: 559, column: 140, scope: !13417)
!13454 = !DILocation(line: 559, column: 141, scope: !13417)
!13455 = !DILocation(line: 559, column: 145, scope: !13417)
!13456 = !DILocation(line: 559, column: 144, scope: !13417)
!13457 = !DILocation(line: 559, column: 128, scope: !13417)
!13458 = !DILocation(line: 559, column: 133, scope: !13417)
!13459 = !DILocation(line: 559, column: 97, scope: !13417)
!13460 = !DILocation(line: 559, column: 95, scope: !13417)
!13461 = !DILocation(line: 560, column: 41, scope: !13400)
!13462 = !DILocation(line: 560, column: 45, scope: !13409)
!13463 = !DILocation(line: 560, column: 49, scope: !13409)
!13464 = !DILocation(line: 560, column: 54, scope: !13409)
!13465 = !DILocation(line: 560, column: 63, scope: !13417)
!13466 = !DILocation(line: 560, column: 64, scope: !13417)
!13467 = !DILocation(line: 560, column: 68, scope: !13417)
!13468 = !DILocation(line: 560, column: 67, scope: !13417)
!13469 = !DILocation(line: 560, column: 57, scope: !13417)
!13470 = !DILocation(line: 560, column: 82, scope: !13417)
!13471 = !DILocation(line: 560, column: 83, scope: !13417)
!13472 = !DILocation(line: 560, column: 87, scope: !13417)
!13473 = !DILocation(line: 560, column: 86, scope: !13417)
!13474 = !DILocation(line: 560, column: 75, scope: !13417)
!13475 = !DILocation(line: 560, column: 102, scope: !13417)
!13476 = !DILocation(line: 560, column: 103, scope: !13417)
!13477 = !DILocation(line: 560, column: 107, scope: !13417)
!13478 = !DILocation(line: 560, column: 106, scope: !13417)
!13479 = !DILocation(line: 560, column: 94, scope: !13417)
!13480 = !DILocation(line: 560, column: 91, scope: !13417)
!13481 = !DILocation(line: 560, column: 74, scope: !13417)
!13482 = !DILocation(line: 560, column: 122, scope: !13483)
!13483 = !DILexicalBlockFile(scope: !13400, file: !9616, discriminator: 3)
!13484 = !DILocation(line: 560, column: 123, scope: !13483)
!13485 = !DILocation(line: 560, column: 127, scope: !13483)
!13486 = !DILocation(line: 560, column: 126, scope: !13483)
!13487 = !DILocation(line: 560, column: 114, scope: !13483)
!13488 = !DILocation(line: 560, column: 74, scope: !13483)
!13489 = !DILocation(line: 560, column: 141, scope: !13490)
!13490 = !DILexicalBlockFile(scope: !13400, file: !9616, discriminator: 4)
!13491 = !DILocation(line: 560, column: 142, scope: !13490)
!13492 = !DILocation(line: 560, column: 146, scope: !13490)
!13493 = !DILocation(line: 560, column: 145, scope: !13490)
!13494 = !DILocation(line: 560, column: 134, scope: !13490)
!13495 = !DILocation(line: 560, column: 74, scope: !13490)
!13496 = !DILocation(line: 560, column: 74, scope: !13497)
!13497 = !DILexicalBlockFile(scope: !13400, file: !9616, discriminator: 5)
!13498 = !DILocation(line: 560, column: 71, scope: !13497)
!13499 = !DILocation(line: 557, column: 37, scope: !13500)
!13500 = !DILexicalBlockFile(scope: !13401, file: !9616, discriminator: 3)
!13501 = !DILocation(line: 561, column: 49, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13400, file: !9616, line: 560, column: 155)
!13503 = !DILocation(line: 561, column: 50, scope: !13502)
!13504 = !DILocation(line: 561, column: 54, scope: !13502)
!13505 = !DILocation(line: 561, column: 53, scope: !13502)
!13506 = !DILocation(line: 561, column: 37, scope: !13502)
!13507 = !DILocation(line: 561, column: 42, scope: !13502)
!13508 = !DILocation(line: 561, column: 57, scope: !13502)
!13509 = !DILocation(line: 562, column: 52, scope: !13502)
!13510 = !DILocation(line: 562, column: 53, scope: !13502)
!13511 = !DILocation(line: 562, column: 57, scope: !13502)
!13512 = !DILocation(line: 562, column: 56, scope: !13502)
!13513 = !DILocation(line: 562, column: 37, scope: !13502)
!13514 = !DILocation(line: 562, column: 42, scope: !13502)
!13515 = !DILocation(line: 562, column: 60, scope: !13502)
!13516 = !DILocation(line: 563, column: 43, scope: !13502)
!13517 = !DILocation(line: 564, column: 33, scope: !13502)
!13518 = !DILocation(line: 565, column: 29, scope: !13401)
!13519 = !DILocation(line: 556, column: 91, scope: !13520)
!13520 = !DILexicalBlockFile(scope: !13393, file: !9616, discriminator: 2)
!13521 = !DILocation(line: 556, column: 72, scope: !13520)
!13522 = !DILocation(line: 556, column: 77, scope: !13520)
!13523 = !DILocation(line: 556, column: 81, scope: !13520)
!13524 = !DILocation(line: 556, column: 69, scope: !13520)
!13525 = !DILocation(line: 556, column: 29, scope: !13520)
!13526 = distinct !{!13526, !13527}
!13527 = !DILocation(line: 556, column: 29, scope: !13380)
!13528 = !DILocation(line: 566, column: 25, scope: !13380)
!13529 = !DILocation(line: 553, column: 84, scope: !13530)
!13530 = !DILexicalBlockFile(scope: !13369, file: !9616, discriminator: 4)
!13531 = !DILocation(line: 553, column: 25, scope: !13530)
!13532 = distinct !{!13532, !13533}
!13533 = !DILocation(line: 553, column: 25, scope: !13342)
!13534 = !DILocation(line: 567, column: 21, scope: !13342)
!13535 = !DILocation(line: 543, column: 53, scope: !13536)
!13536 = !DILexicalBlockFile(scope: !13338, file: !9616, discriminator: 2)
!13537 = !DILocation(line: 543, column: 21, scope: !13536)
!13538 = distinct !{!13538, !13539}
!13539 = !DILocation(line: 543, column: 21, scope: !13073)
!13540 = !DILocation(line: 568, column: 25, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13073, file: !9616, line: 568, column: 25)
!13542 = !DILocation(line: 568, column: 25, scope: !13073)
!13543 = !DILocation(line: 569, column: 42, scope: !13541)
!13544 = !DILocation(line: 569, column: 34, scope: !13541)
!13545 = !DILocation(line: 569, column: 25, scope: !13541)
!13546 = !DILocation(line: 570, column: 17, scope: !13073)
!13547 = !DILocation(line: 571, column: 30, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13070, file: !9616, line: 570, column: 24)
!13549 = !DILocation(line: 573, column: 13, scope: !12928)
!13550 = !DILocation(line: 574, column: 9, scope: !9658)
!13551 = !DILocation(line: 451, column: 54, scope: !13552)
!13552 = !DILexicalBlockFile(scope: !9659, file: !9616, discriminator: 5)
!13553 = !DILocation(line: 451, column: 9, scope: !13552)
!13554 = distinct !{!13554, !13555}
!13555 = !DILocation(line: 451, column: 9, scope: !9627)
!13556 = !DILocation(line: 576, column: 19, scope: !9627)
!13557 = !DILocation(line: 577, column: 19, scope: !9627)
!13558 = !DILocation(line: 578, column: 16, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !9627, file: !9616, line: 578, column: 9)
!13560 = !DILocation(line: 578, column: 14, scope: !13559)
!13561 = !DILocation(line: 578, column: 21, scope: !13562)
!13562 = !DILexicalBlockFile(scope: !13563, file: !9616, discriminator: 1)
!13563 = distinct !DILexicalBlock(scope: !13559, file: !9616, line: 578, column: 9)
!13564 = !DILocation(line: 578, column: 25, scope: !13562)
!13565 = !DILocation(line: 578, column: 30, scope: !13562)
!13566 = !DILocation(line: 578, column: 34, scope: !13562)
!13567 = !DILocation(line: 578, column: 23, scope: !13562)
!13568 = !DILocation(line: 578, column: 9, scope: !13562)
!13569 = !DILocation(line: 579, column: 20, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !9616, line: 579, column: 13)
!13571 = distinct !DILexicalBlock(scope: !13563, file: !9616, line: 578, column: 75)
!13572 = !DILocation(line: 579, column: 18, scope: !13570)
!13573 = !DILocation(line: 579, column: 25, scope: !13574)
!13574 = !DILexicalBlockFile(scope: !13575, file: !9616, discriminator: 1)
!13575 = distinct !DILexicalBlock(scope: !13570, file: !9616, line: 579, column: 13)
!13576 = !DILocation(line: 579, column: 29, scope: !13574)
!13577 = !DILocation(line: 579, column: 34, scope: !13574)
!13578 = !DILocation(line: 579, column: 38, scope: !13574)
!13579 = !DILocation(line: 579, column: 27, scope: !13574)
!13580 = !DILocation(line: 579, column: 13, scope: !13574)
!13581 = !DILocation(line: 580, column: 34, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !9616, line: 580, column: 21)
!13583 = distinct !DILexicalBlock(scope: !13575, file: !9616, line: 579, column: 52)
!13584 = !DILocation(line: 580, column: 35, scope: !13582)
!13585 = !DILocation(line: 580, column: 39, scope: !13582)
!13586 = !DILocation(line: 580, column: 38, scope: !13582)
!13587 = !DILocation(line: 580, column: 22, scope: !13582)
!13588 = !DILocation(line: 580, column: 27, scope: !13582)
!13589 = !DILocation(line: 580, column: 21, scope: !13583)
!13590 = !DILocation(line: 581, column: 35, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13582, file: !9616, line: 580, column: 43)
!13592 = !DILocation(line: 581, column: 61, scope: !13591)
!13593 = !DILocation(line: 581, column: 62, scope: !13591)
!13594 = !DILocation(line: 581, column: 66, scope: !13591)
!13595 = !DILocation(line: 581, column: 65, scope: !13591)
!13596 = !DILocation(line: 581, column: 49, scope: !13591)
!13597 = !DILocation(line: 581, column: 54, scope: !13591)
!13598 = !DILocation(line: 581, column: 46, scope: !13591)
!13599 = !DILocation(line: 581, column: 34, scope: !13591)
!13600 = !DILocation(line: 581, column: 85, scope: !13601)
!13601 = !DILexicalBlockFile(scope: !13591, file: !9616, discriminator: 1)
!13602 = !DILocation(line: 581, column: 86, scope: !13601)
!13603 = !DILocation(line: 581, column: 90, scope: !13601)
!13604 = !DILocation(line: 581, column: 89, scope: !13601)
!13605 = !DILocation(line: 581, column: 73, scope: !13601)
!13606 = !DILocation(line: 581, column: 78, scope: !13601)
!13607 = !DILocation(line: 581, column: 34, scope: !13601)
!13608 = !DILocation(line: 581, column: 97, scope: !13609)
!13609 = !DILexicalBlockFile(scope: !13591, file: !9616, discriminator: 2)
!13610 = !DILocation(line: 581, column: 34, scope: !13609)
!13611 = !DILocation(line: 581, column: 34, scope: !13612)
!13612 = !DILexicalBlockFile(scope: !13591, file: !9616, discriminator: 3)
!13613 = !DILocation(line: 581, column: 31, scope: !13612)
!13614 = !DILocation(line: 582, column: 35, scope: !13591)
!13615 = !DILocation(line: 582, column: 61, scope: !13591)
!13616 = !DILocation(line: 582, column: 62, scope: !13591)
!13617 = !DILocation(line: 582, column: 66, scope: !13591)
!13618 = !DILocation(line: 582, column: 65, scope: !13591)
!13619 = !DILocation(line: 582, column: 49, scope: !13591)
!13620 = !DILocation(line: 582, column: 54, scope: !13591)
!13621 = !DILocation(line: 582, column: 46, scope: !13591)
!13622 = !DILocation(line: 582, column: 34, scope: !13591)
!13623 = !DILocation(line: 582, column: 73, scope: !13601)
!13624 = !DILocation(line: 582, column: 34, scope: !13601)
!13625 = !DILocation(line: 582, column: 99, scope: !13609)
!13626 = !DILocation(line: 582, column: 100, scope: !13609)
!13627 = !DILocation(line: 582, column: 104, scope: !13609)
!13628 = !DILocation(line: 582, column: 103, scope: !13609)
!13629 = !DILocation(line: 582, column: 87, scope: !13609)
!13630 = !DILocation(line: 582, column: 92, scope: !13609)
!13631 = !DILocation(line: 582, column: 34, scope: !13609)
!13632 = !DILocation(line: 582, column: 34, scope: !13612)
!13633 = !DILocation(line: 582, column: 31, scope: !13612)
!13634 = !DILocation(line: 583, column: 17, scope: !13591)
!13635 = !DILocation(line: 584, column: 13, scope: !13583)
!13636 = !DILocation(line: 579, column: 48, scope: !13637)
!13637 = !DILexicalBlockFile(scope: !13575, file: !9616, discriminator: 2)
!13638 = !DILocation(line: 579, column: 13, scope: !13637)
!13639 = distinct !{!13639, !13640}
!13640 = !DILocation(line: 579, column: 13, scope: !13571)
!13641 = !DILocation(line: 585, column: 9, scope: !13571)
!13642 = !DILocation(line: 578, column: 71, scope: !13643)
!13643 = !DILexicalBlockFile(scope: !13563, file: !9616, discriminator: 2)
!13644 = !DILocation(line: 578, column: 52, scope: !13643)
!13645 = !DILocation(line: 578, column: 57, scope: !13643)
!13646 = !DILocation(line: 578, column: 61, scope: !13643)
!13647 = !DILocation(line: 578, column: 49, scope: !13643)
!13648 = !DILocation(line: 578, column: 9, scope: !13643)
!13649 = distinct !{!13649, !13650}
!13650 = !DILocation(line: 578, column: 9, scope: !9627)
!13651 = !DILocation(line: 587, column: 44, scope: !9627)
!13652 = !DILocation(line: 587, column: 34, scope: !9627)
!13653 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9631)
!13654 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9631)
!13655 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9631)
!13656 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9631)
!13657 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9631)
!13658 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9631)
!13659 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9631)
!13660 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9631)
!13661 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9631)
!13662 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9631)
!13663 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9631)
!13664 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9631)
!13665 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9631)
!13666 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9631)
!13667 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9631)
!13668 = !DILocation(line: 587, column: 32, scope: !9627)
!13669 = !DILocation(line: 587, column: 19, scope: !9627)
!13670 = !DILocation(line: 588, column: 14, scope: !9627)
!13671 = !DILocation(line: 589, column: 16, scope: !9626)
!13672 = !DILocation(line: 589, column: 14, scope: !9626)
!13673 = !DILocation(line: 589, column: 21, scope: !13674)
!13674 = !DILexicalBlockFile(scope: !9625, file: !9616, discriminator: 1)
!13675 = !DILocation(line: 589, column: 25, scope: !13674)
!13676 = !DILocation(line: 589, column: 30, scope: !13674)
!13677 = !DILocation(line: 589, column: 34, scope: !13674)
!13678 = !DILocation(line: 589, column: 23, scope: !13674)
!13679 = !DILocation(line: 589, column: 9, scope: !13674)
!13680 = !DILocalVariable(name: "depth", scope: !9624, file: !9616, line: 591, type: !991)
!13681 = !DILocation(line: 591, column: 17, scope: !9624)
!13682 = !DILocation(line: 591, column: 26, scope: !9624)
!13683 = !DILocation(line: 591, column: 32, scope: !9624)
!13684 = !DILocation(line: 591, column: 38, scope: !9624)
!13685 = !DILocation(line: 591, column: 30, scope: !9624)
!13686 = !DILocation(line: 591, column: 25, scope: !9624)
!13687 = !DILocation(line: 591, column: 46, scope: !13688)
!13688 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 1)
!13689 = !DILocation(line: 591, column: 52, scope: !13688)
!13690 = !DILocation(line: 591, column: 58, scope: !13688)
!13691 = !DILocation(line: 591, column: 60, scope: !13688)
!13692 = !DILocation(line: 591, column: 50, scope: !13688)
!13693 = !DILocation(line: 591, column: 45, scope: !13688)
!13694 = !DILocation(line: 591, column: 25, scope: !13688)
!13695 = !DILocation(line: 591, column: 25, scope: !13696)
!13696 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 2)
!13697 = !DILocation(line: 591, column: 25, scope: !13698)
!13698 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 3)
!13699 = !DILocation(line: 591, column: 17, scope: !13698)
!13700 = !DILocalVariable(name: "edepth", scope: !9624, file: !9616, line: 592, type: !991)
!13701 = !DILocation(line: 592, column: 17, scope: !9624)
!13702 = !DILocation(line: 592, column: 26, scope: !9624)
!13703 = !DILocation(line: 592, column: 31, scope: !9624)
!13704 = !DILocalVariable(name: "uplmax", scope: !9624, file: !9616, line: 593, type: !954)
!13705 = !DILocation(line: 593, column: 19, scope: !9624)
!13706 = !DILocation(line: 593, column: 28, scope: !9624)
!13707 = !DILocation(line: 593, column: 35, scope: !9624)
!13708 = !DILocation(line: 593, column: 41, scope: !9624)
!13709 = !DILocation(line: 593, column: 32, scope: !9624)
!13710 = !DILocation(line: 593, column: 49, scope: !9624)
!13711 = !DILocation(line: 594, column: 24, scope: !9624)
!13712 = !DILocation(line: 594, column: 32, scope: !9624)
!13713 = !DILocation(line: 594, column: 30, scope: !9624)
!13714 = !DILocation(line: 594, column: 23, scope: !9624)
!13715 = !DILocation(line: 594, column: 55, scope: !13688)
!13716 = !DILocation(line: 594, column: 78, scope: !13688)
!13717 = !DILocation(line: 594, column: 75, scope: !13688)
!13718 = !DILocation(line: 594, column: 71, scope: !13688)
!13719 = !DILocation(line: 594, column: 71, scope: !13696)
!13720 = !DILocation(line: 594, column: 97, scope: !13698)
!13721 = !DILocation(line: 594, column: 71, scope: !13698)
!13722 = !DILocation(line: 594, column: 71, scope: !13723)
!13723 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 4)
!13724 = !DILocation(line: 594, column: 63, scope: !13723)
!13725 = !DILocation(line: 594, column: 61, scope: !13723)
!13726 = !DILocation(line: 594, column: 52, scope: !13723)
!13727 = !DILocation(line: 594, column: 45, scope: !13723)
!13728 = !DILocation(line: 594, column: 112, scope: !13729)
!13729 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 5)
!13730 = !DILocation(line: 594, column: 135, scope: !13729)
!13731 = !DILocation(line: 594, column: 132, scope: !13729)
!13732 = !DILocation(line: 594, column: 128, scope: !13729)
!13733 = !DILocation(line: 594, column: 128, scope: !13734)
!13734 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 6)
!13735 = !DILocation(line: 594, column: 154, scope: !13736)
!13736 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 7)
!13737 = !DILocation(line: 594, column: 128, scope: !13736)
!13738 = !DILocation(line: 594, column: 128, scope: !13739)
!13739 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 8)
!13740 = !DILocation(line: 594, column: 120, scope: !13739)
!13741 = !DILocation(line: 594, column: 118, scope: !13739)
!13742 = !DILocation(line: 594, column: 45, scope: !13739)
!13743 = !DILocation(line: 594, column: 45, scope: !13744)
!13744 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 9)
!13745 = !DILocation(line: 594, column: 45, scope: !13746)
!13746 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 10)
!13747 = !DILocation(line: 594, column: 23, scope: !13746)
!13748 = !DILocation(line: 594, column: 23, scope: !13749)
!13749 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 11)
!13750 = !DILocation(line: 594, column: 23, scope: !13751)
!13751 = !DILexicalBlockFile(scope: !9624, file: !9616, discriminator: 12)
!13752 = !DILocation(line: 594, column: 20, scope: !13751)
!13753 = !DILocation(line: 595, column: 21, scope: !9624)
!13754 = !DILocation(line: 595, column: 23, scope: !9624)
!13755 = !DILocation(line: 595, column: 19, scope: !9624)
!13756 = !DILocation(line: 596, column: 20, scope: !9623)
!13757 = !DILocation(line: 596, column: 18, scope: !9623)
!13758 = !DILocation(line: 596, column: 25, scope: !13759)
!13759 = !DILexicalBlockFile(scope: !9622, file: !9616, discriminator: 1)
!13760 = !DILocation(line: 596, column: 29, scope: !13759)
!13761 = !DILocation(line: 596, column: 34, scope: !13759)
!13762 = !DILocation(line: 596, column: 38, scope: !13759)
!13763 = !DILocation(line: 596, column: 27, scope: !13759)
!13764 = !DILocation(line: 596, column: 13, scope: !13759)
!13765 = !DILocalVariable(name: "prevsc", scope: !9621, file: !9616, line: 597, type: !991)
!13766 = !DILocation(line: 597, column: 21, scope: !9621)
!13767 = !DILocation(line: 597, column: 42, scope: !9621)
!13768 = !DILocation(line: 597, column: 43, scope: !9621)
!13769 = !DILocation(line: 597, column: 47, scope: !9621)
!13770 = !DILocation(line: 597, column: 46, scope: !9621)
!13771 = !DILocation(line: 597, column: 30, scope: !9621)
!13772 = !DILocation(line: 597, column: 35, scope: !9621)
!13773 = !DILocation(line: 598, column: 21, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !9621, file: !9616, line: 598, column: 21)
!13775 = !DILocation(line: 598, column: 26, scope: !13774)
!13776 = !DILocation(line: 598, column: 30, scope: !13774)
!13777 = !DILocation(line: 598, column: 46, scope: !13778)
!13778 = !DILexicalBlockFile(scope: !13774, file: !9616, discriminator: 1)
!13779 = !DILocation(line: 598, column: 47, scope: !13778)
!13780 = !DILocation(line: 598, column: 51, scope: !13778)
!13781 = !DILocation(line: 598, column: 50, scope: !13778)
!13782 = !DILocation(line: 598, column: 34, scope: !13778)
!13783 = !DILocation(line: 598, column: 39, scope: !13778)
!13784 = !DILocation(line: 598, column: 21, scope: !13778)
!13785 = !DILocation(line: 599, column: 28, scope: !13774)
!13786 = !DILocation(line: 599, column: 33, scope: !13774)
!13787 = !DILocation(line: 599, column: 26, scope: !13774)
!13788 = !DILocation(line: 599, column: 21, scope: !13774)
!13789 = !DILocation(line: 600, column: 34, scope: !9620)
!13790 = !DILocation(line: 600, column: 35, scope: !9620)
!13791 = !DILocation(line: 600, column: 39, scope: !9620)
!13792 = !DILocation(line: 600, column: 38, scope: !9620)
!13793 = !DILocation(line: 600, column: 22, scope: !9620)
!13794 = !DILocation(line: 600, column: 27, scope: !9620)
!13795 = !DILocation(line: 600, column: 21, scope: !9621)
!13796 = !DILocalVariable(name: "coefs", scope: !9619, file: !9616, line: 601, type: !1780)
!13797 = !DILocation(line: 601, column: 34, scope: !9619)
!13798 = !DILocation(line: 601, column: 42, scope: !9619)
!13799 = !DILocation(line: 601, column: 47, scope: !9619)
!13800 = !DILocation(line: 601, column: 56, scope: !9619)
!13801 = !DILocation(line: 601, column: 54, scope: !9619)
!13802 = !DILocalVariable(name: "scaled", scope: !9619, file: !9616, line: 602, type: !1780)
!13803 = !DILocation(line: 602, column: 34, scope: !9619)
!13804 = !DILocation(line: 602, column: 43, scope: !9619)
!13805 = !DILocation(line: 602, column: 46, scope: !9619)
!13806 = !DILocation(line: 602, column: 55, scope: !9619)
!13807 = !DILocation(line: 602, column: 53, scope: !9619)
!13808 = !DILocalVariable(name: "cmb", scope: !9619, file: !9616, line: 603, type: !991)
!13809 = !DILocation(line: 603, column: 25, scope: !9619)
!13810 = !DILocation(line: 603, column: 53, scope: !9619)
!13811 = !DILocation(line: 603, column: 54, scope: !9619)
!13812 = !DILocation(line: 603, column: 58, scope: !9619)
!13813 = !DILocation(line: 603, column: 57, scope: !9619)
!13814 = !DILocation(line: 603, column: 45, scope: !9619)
!13815 = !DILocation(line: 603, column: 74, scope: !9619)
!13816 = !DILocation(line: 603, column: 75, scope: !9619)
!13817 = !DILocation(line: 603, column: 79, scope: !9619)
!13818 = !DILocation(line: 603, column: 78, scope: !9619)
!13819 = !DILocation(line: 603, column: 62, scope: !9619)
!13820 = !DILocation(line: 603, column: 67, scope: !9619)
!13821 = !DILocation(line: 603, column: 31, scope: !9619)
!13822 = !DILocalVariable(name: "mindeltasf", scope: !9619, file: !9616, line: 604, type: !991)
!13823 = !DILocation(line: 604, column: 25, scope: !9619)
!13824 = !DILocation(line: 604, column: 46, scope: !9619)
!13825 = !DILocation(line: 604, column: 51, scope: !9619)
!13826 = !DILocation(line: 604, column: 43, scope: !9619)
!13827 = !DILocation(line: 604, column: 39, scope: !9619)
!13828 = !DILocation(line: 604, column: 39, scope: !13829)
!13829 = !DILexicalBlockFile(scope: !9619, file: !9616, discriminator: 1)
!13830 = !DILocation(line: 604, column: 66, scope: !13831)
!13831 = !DILexicalBlockFile(scope: !9619, file: !9616, discriminator: 2)
!13832 = !DILocation(line: 604, column: 71, scope: !13831)
!13833 = !DILocation(line: 604, column: 39, scope: !13831)
!13834 = !DILocation(line: 604, column: 39, scope: !13835)
!13835 = !DILexicalBlockFile(scope: !9619, file: !9616, discriminator: 3)
!13836 = !DILocation(line: 604, column: 25, scope: !13835)
!13837 = !DILocalVariable(name: "maxdeltasf", scope: !9619, file: !9616, line: 605, type: !991)
!13838 = !DILocation(line: 605, column: 25, scope: !9619)
!13839 = !DILocation(line: 605, column: 53, scope: !9619)
!13840 = !DILocation(line: 605, column: 58, scope: !9619)
!13841 = !DILocation(line: 605, column: 50, scope: !9619)
!13842 = !DILocation(line: 605, column: 39, scope: !9619)
!13843 = !DILocation(line: 605, column: 67, scope: !13829)
!13844 = !DILocation(line: 605, column: 72, scope: !13829)
!13845 = !DILocation(line: 605, column: 39, scope: !13829)
!13846 = !DILocation(line: 605, column: 39, scope: !13831)
!13847 = !DILocation(line: 605, column: 39, scope: !13835)
!13848 = !DILocation(line: 605, column: 25, scope: !13835)
!13849 = !DILocation(line: 606, column: 27, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !9619, file: !9616, line: 606, column: 25)
!13851 = !DILocation(line: 606, column: 31, scope: !13850)
!13852 = !DILocation(line: 606, column: 40, scope: !13853)
!13853 = !DILexicalBlockFile(scope: !13850, file: !9616, discriminator: 1)
!13854 = !DILocation(line: 606, column: 41, scope: !13853)
!13855 = !DILocation(line: 606, column: 45, scope: !13853)
!13856 = !DILocation(line: 606, column: 44, scope: !13853)
!13857 = !DILocation(line: 606, column: 34, scope: !13853)
!13858 = !DILocation(line: 606, column: 57, scope: !13853)
!13859 = !DILocation(line: 606, column: 58, scope: !13853)
!13860 = !DILocation(line: 606, column: 62, scope: !13853)
!13861 = !DILocation(line: 606, column: 61, scope: !13853)
!13862 = !DILocation(line: 606, column: 50, scope: !13853)
!13863 = !DILocation(line: 606, column: 48, scope: !13853)
!13864 = !DILocation(line: 606, column: 66, scope: !13853)
!13865 = !DILocation(line: 606, column: 81, scope: !13866)
!13866 = !DILexicalBlockFile(scope: !13850, file: !9616, discriminator: 2)
!13867 = !DILocation(line: 606, column: 82, scope: !13866)
!13868 = !DILocation(line: 606, column: 86, scope: !13866)
!13869 = !DILocation(line: 606, column: 85, scope: !13866)
!13870 = !DILocation(line: 606, column: 69, scope: !13866)
!13871 = !DILocation(line: 606, column: 74, scope: !13866)
!13872 = !DILocation(line: 606, column: 93, scope: !13866)
!13873 = !DILocation(line: 606, column: 114, scope: !13866)
!13874 = !DILocation(line: 606, column: 115, scope: !13866)
!13875 = !DILocation(line: 606, column: 119, scope: !13866)
!13876 = !DILocation(line: 606, column: 118, scope: !13866)
!13877 = !DILocation(line: 606, column: 108, scope: !13866)
!13878 = !DILocation(line: 606, column: 105, scope: !13866)
!13879 = !DILocation(line: 606, column: 92, scope: !13866)
!13880 = !DILocation(line: 606, column: 126, scope: !13881)
!13881 = !DILexicalBlockFile(scope: !13850, file: !9616, discriminator: 3)
!13882 = !DILocation(line: 606, column: 92, scope: !13881)
!13883 = !DILocation(line: 606, column: 147, scope: !13884)
!13884 = !DILexicalBlockFile(scope: !13850, file: !9616, discriminator: 4)
!13885 = !DILocation(line: 606, column: 148, scope: !13884)
!13886 = !DILocation(line: 606, column: 152, scope: !13884)
!13887 = !DILocation(line: 606, column: 151, scope: !13884)
!13888 = !DILocation(line: 606, column: 141, scope: !13884)
!13889 = !DILocation(line: 606, column: 92, scope: !13884)
!13890 = !DILocation(line: 606, column: 92, scope: !13891)
!13891 = !DILexicalBlockFile(scope: !13850, file: !9616, discriminator: 5)
!13892 = !DILocation(line: 606, column: 89, scope: !13891)
!13893 = !DILocation(line: 606, column: 25, scope: !13891)
!13894 = !DILocation(line: 613, column: 32, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13896, file: !9616, line: 613, column: 25)
!13896 = distinct !DILexicalBlock(scope: !13850, file: !9616, line: 606, column: 158)
!13897 = !DILocation(line: 613, column: 30, scope: !13895)
!13898 = !DILocation(line: 613, column: 37, scope: !13899)
!13899 = !DILexicalBlockFile(scope: !13900, file: !9616, discriminator: 1)
!13900 = distinct !DILexicalBlock(scope: !13895, file: !9616, line: 613, column: 25)
!13901 = !DILocation(line: 613, column: 41, scope: !13899)
!13902 = !DILocation(line: 613, column: 39, scope: !13899)
!13903 = !DILocation(line: 613, column: 48, scope: !13899)
!13904 = !DILocation(line: 613, column: 63, scope: !13905)
!13905 = !DILexicalBlockFile(scope: !13900, file: !9616, discriminator: 2)
!13906 = !DILocation(line: 613, column: 64, scope: !13905)
!13907 = !DILocation(line: 613, column: 68, scope: !13905)
!13908 = !DILocation(line: 613, column: 67, scope: !13905)
!13909 = !DILocation(line: 613, column: 51, scope: !13905)
!13910 = !DILocation(line: 613, column: 56, scope: !13905)
!13911 = !DILocation(line: 613, column: 73, scope: !13905)
!13912 = !DILocation(line: 613, column: 71, scope: !13905)
!13913 = !DILocation(line: 613, column: 25, scope: !13914)
!13914 = !DILexicalBlockFile(scope: !13895, file: !9616, discriminator: 3)
!13915 = !DILocalVariable(name: "cb", scope: !13916, file: !9616, line: 614, type: !991)
!13916 = distinct !DILexicalBlock(scope: !13900, file: !9616, line: 613, column: 90)
!13917 = !DILocation(line: 614, column: 33, scope: !13916)
!13918 = !DILocalVariable(name: "bits", scope: !13916, file: !9616, line: 614, type: !991)
!13919 = !DILocation(line: 614, column: 37, scope: !13916)
!13920 = !DILocalVariable(name: "dist", scope: !13916, file: !9616, line: 615, type: !954)
!13921 = !DILocation(line: 615, column: 35, scope: !13916)
!13922 = !DILocalVariable(name: "qenergy", scope: !13916, file: !9616, line: 615, type: !954)
!13923 = !DILocation(line: 615, column: 41, scope: !13916)
!13924 = !DILocalVariable(name: "mb", scope: !13916, file: !9616, line: 616, type: !991)
!13925 = !DILocation(line: 616, column: 33, scope: !13916)
!13926 = !DILocation(line: 616, column: 60, scope: !13916)
!13927 = !DILocation(line: 616, column: 61, scope: !13916)
!13928 = !DILocation(line: 616, column: 65, scope: !13916)
!13929 = !DILocation(line: 616, column: 64, scope: !13916)
!13930 = !DILocation(line: 616, column: 52, scope: !13916)
!13931 = !DILocation(line: 616, column: 81, scope: !13916)
!13932 = !DILocation(line: 616, column: 82, scope: !13916)
!13933 = !DILocation(line: 616, column: 86, scope: !13916)
!13934 = !DILocation(line: 616, column: 85, scope: !13916)
!13935 = !DILocation(line: 616, column: 69, scope: !13916)
!13936 = !DILocation(line: 616, column: 74, scope: !13916)
!13937 = !DILocation(line: 616, column: 88, scope: !13916)
!13938 = !DILocation(line: 616, column: 38, scope: !13916)
!13939 = !DILocation(line: 617, column: 56, scope: !13916)
!13940 = !DILocation(line: 617, column: 57, scope: !13916)
!13941 = !DILocation(line: 617, column: 61, scope: !13916)
!13942 = !DILocation(line: 617, column: 60, scope: !13916)
!13943 = !DILocation(line: 617, column: 48, scope: !13916)
!13944 = !DILocation(line: 617, column: 77, scope: !13916)
!13945 = !DILocation(line: 617, column: 78, scope: !13916)
!13946 = !DILocation(line: 617, column: 82, scope: !13916)
!13947 = !DILocation(line: 617, column: 81, scope: !13916)
!13948 = !DILocation(line: 617, column: 65, scope: !13916)
!13949 = !DILocation(line: 617, column: 70, scope: !13916)
!13950 = !DILocation(line: 617, column: 34, scope: !13916)
!13951 = !DILocation(line: 617, column: 32, scope: !13916)
!13952 = !DILocation(line: 618, column: 44, scope: !13916)
!13953 = !DILocation(line: 618, column: 34, scope: !13916)
!13954 = !DILocation(line: 619, column: 34, scope: !13916)
!13955 = !DILocation(line: 620, column: 34, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13916, file: !9616, line: 620, column: 33)
!13957 = !DILocation(line: 620, column: 33, scope: !13916)
!13958 = !DILocation(line: 621, column: 63, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13956, file: !9616, line: 620, column: 38)
!13960 = !DILocation(line: 621, column: 64, scope: !13959)
!13961 = !DILocation(line: 621, column: 68, scope: !13959)
!13962 = !DILocation(line: 621, column: 67, scope: !13959)
!13963 = !DILocation(line: 621, column: 51, scope: !13959)
!13964 = !DILocation(line: 621, column: 56, scope: !13959)
!13965 = !DILocation(line: 621, column: 70, scope: !13959)
!13966 = !DILocation(line: 621, column: 83, scope: !13959)
!13967 = !DILocation(line: 621, column: 84, scope: !13959)
!13968 = !DILocation(line: 621, column: 88, scope: !13959)
!13969 = !DILocation(line: 621, column: 87, scope: !13959)
!13970 = !DILocation(line: 621, column: 77, scope: !13959)
!13971 = !DILocation(line: 621, column: 74, scope: !13959)
!13972 = !DILocation(line: 621, column: 50, scope: !13959)
!13973 = !DILocation(line: 621, column: 101, scope: !13974)
!13974 = !DILexicalBlockFile(scope: !13959, file: !9616, discriminator: 1)
!13975 = !DILocation(line: 621, column: 102, scope: !13974)
!13976 = !DILocation(line: 621, column: 106, scope: !13974)
!13977 = !DILocation(line: 621, column: 105, scope: !13974)
!13978 = !DILocation(line: 621, column: 95, scope: !13974)
!13979 = !DILocation(line: 621, column: 50, scope: !13974)
!13980 = !DILocation(line: 621, column: 125, scope: !13981)
!13981 = !DILexicalBlockFile(scope: !13959, file: !9616, discriminator: 2)
!13982 = !DILocation(line: 621, column: 126, scope: !13981)
!13983 = !DILocation(line: 621, column: 130, scope: !13981)
!13984 = !DILocation(line: 621, column: 129, scope: !13981)
!13985 = !DILocation(line: 621, column: 113, scope: !13981)
!13986 = !DILocation(line: 621, column: 118, scope: !13981)
!13987 = !DILocation(line: 621, column: 132, scope: !13981)
!13988 = !DILocation(line: 621, column: 50, scope: !13981)
!13989 = !DILocation(line: 621, column: 50, scope: !13990)
!13990 = !DILexicalBlockFile(scope: !13959, file: !9616, discriminator: 3)
!13991 = !DILocation(line: 621, column: 39, scope: !13990)
!13992 = !DILocation(line: 621, column: 40, scope: !13990)
!13993 = !DILocation(line: 621, column: 44, scope: !13990)
!13994 = !DILocation(line: 621, column: 43, scope: !13990)
!13995 = !DILocation(line: 621, column: 33, scope: !13990)
!13996 = !DILocation(line: 621, column: 47, scope: !13990)
!13997 = !DILocation(line: 622, column: 29, scope: !13959)
!13998 = !DILocation(line: 622, column: 40, scope: !13999)
!13999 = !DILexicalBlockFile(scope: !14000, file: !9616, discriminator: 1)
!14000 = distinct !DILexicalBlock(scope: !13956, file: !9616, line: 622, column: 40)
!14001 = !DILocation(line: 622, column: 45, scope: !13999)
!14002 = !DILocation(line: 622, column: 42, scope: !13999)
!14003 = !DILocation(line: 622, column: 51, scope: !13999)
!14004 = !DILocation(line: 622, column: 60, scope: !14005)
!14005 = !DILexicalBlockFile(scope: !14000, file: !9616, discriminator: 2)
!14006 = !DILocation(line: 622, column: 61, scope: !14005)
!14007 = !DILocation(line: 622, column: 65, scope: !14005)
!14008 = !DILocation(line: 622, column: 64, scope: !14005)
!14009 = !DILocation(line: 622, column: 54, scope: !14005)
!14010 = !DILocation(line: 622, column: 78, scope: !14005)
!14011 = !DILocation(line: 622, column: 79, scope: !14005)
!14012 = !DILocation(line: 622, column: 83, scope: !14005)
!14013 = !DILocation(line: 622, column: 82, scope: !14005)
!14014 = !DILocation(line: 622, column: 70, scope: !14005)
!14015 = !DILocation(line: 622, column: 68, scope: !14005)
!14016 = !DILocation(line: 622, column: 40, scope: !14005)
!14017 = !DILocation(line: 623, column: 33, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14000, file: !9616, line: 622, column: 87)
!14019 = !DILocation(line: 629, column: 34, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13916, file: !9616, line: 629, column: 33)
!14021 = !DILocation(line: 629, column: 36, scope: !14020)
!14022 = !DILocation(line: 629, column: 39, scope: !14023)
!14023 = !DILexicalBlockFile(scope: !14020, file: !9616, discriminator: 1)
!14024 = !DILocation(line: 629, column: 44, scope: !14023)
!14025 = !DILocation(line: 629, column: 48, scope: !14023)
!14026 = !DILocation(line: 629, column: 60, scope: !14023)
!14027 = !DILocation(line: 629, column: 64, scope: !14023)
!14028 = !DILocation(line: 629, column: 73, scope: !14029)
!14029 = !DILexicalBlockFile(scope: !14020, file: !9616, discriminator: 2)
!14030 = !DILocation(line: 629, column: 74, scope: !14029)
!14031 = !DILocation(line: 629, column: 78, scope: !14029)
!14032 = !DILocation(line: 629, column: 77, scope: !14029)
!14033 = !DILocation(line: 629, column: 67, scope: !14029)
!14034 = !DILocation(line: 629, column: 92, scope: !14029)
!14035 = !DILocation(line: 629, column: 93, scope: !14029)
!14036 = !DILocation(line: 629, column: 97, scope: !14029)
!14037 = !DILocation(line: 629, column: 96, scope: !14029)
!14038 = !DILocation(line: 629, column: 84, scope: !14029)
!14039 = !DILocation(line: 629, column: 81, scope: !14029)
!14040 = !DILocation(line: 629, column: 33, scope: !14029)
!14041 = !DILocation(line: 630, column: 63, scope: !14020)
!14042 = !DILocation(line: 630, column: 64, scope: !14020)
!14043 = !DILocation(line: 630, column: 68, scope: !14020)
!14044 = !DILocation(line: 630, column: 67, scope: !14020)
!14045 = !DILocation(line: 630, column: 51, scope: !14020)
!14046 = !DILocation(line: 630, column: 56, scope: !14020)
!14047 = !DILocation(line: 630, column: 81, scope: !14020)
!14048 = !DILocation(line: 630, column: 82, scope: !14020)
!14049 = !DILocation(line: 630, column: 86, scope: !14020)
!14050 = !DILocation(line: 630, column: 85, scope: !14020)
!14051 = !DILocation(line: 630, column: 75, scope: !14020)
!14052 = !DILocation(line: 630, column: 72, scope: !14020)
!14053 = !DILocation(line: 630, column: 50, scope: !14020)
!14054 = !DILocation(line: 630, column: 99, scope: !14023)
!14055 = !DILocation(line: 630, column: 100, scope: !14023)
!14056 = !DILocation(line: 630, column: 104, scope: !14023)
!14057 = !DILocation(line: 630, column: 103, scope: !14023)
!14058 = !DILocation(line: 630, column: 93, scope: !14023)
!14059 = !DILocation(line: 630, column: 50, scope: !14023)
!14060 = !DILocation(line: 630, column: 123, scope: !14029)
!14061 = !DILocation(line: 630, column: 124, scope: !14029)
!14062 = !DILocation(line: 630, column: 128, scope: !14029)
!14063 = !DILocation(line: 630, column: 127, scope: !14029)
!14064 = !DILocation(line: 630, column: 111, scope: !14029)
!14065 = !DILocation(line: 630, column: 116, scope: !14029)
!14066 = !DILocation(line: 630, column: 50, scope: !14029)
!14067 = !DILocation(line: 630, column: 50, scope: !14068)
!14068 = !DILexicalBlockFile(scope: !14020, file: !9616, discriminator: 3)
!14069 = !DILocation(line: 630, column: 39, scope: !14068)
!14070 = !DILocation(line: 630, column: 40, scope: !14068)
!14071 = !DILocation(line: 630, column: 44, scope: !14068)
!14072 = !DILocation(line: 630, column: 43, scope: !14068)
!14073 = !DILocation(line: 630, column: 33, scope: !14068)
!14074 = !DILocation(line: 630, column: 47, scope: !14068)
!14075 = !DILocation(line: 631, column: 37, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !13916, file: !9616, line: 631, column: 29)
!14077 = !DILocation(line: 631, column: 34, scope: !14076)
!14078 = !DILocation(line: 631, column: 42, scope: !14079)
!14079 = !DILexicalBlockFile(scope: !14080, file: !9616, discriminator: 1)
!14080 = distinct !DILexicalBlock(scope: !14076, file: !9616, line: 631, column: 29)
!14081 = !DILocation(line: 631, column: 66, scope: !14079)
!14082 = !DILocation(line: 631, column: 47, scope: !14079)
!14083 = !DILocation(line: 631, column: 52, scope: !14079)
!14084 = !DILocation(line: 631, column: 56, scope: !14079)
!14085 = !DILocation(line: 631, column: 45, scope: !14079)
!14086 = !DILocation(line: 631, column: 29, scope: !14079)
!14087 = !DILocalVariable(name: "b", scope: !14088, file: !9616, line: 632, type: !991)
!14088 = distinct !DILexicalBlock(scope: !14080, file: !9616, line: 631, column: 76)
!14089 = !DILocation(line: 632, column: 37, scope: !14088)
!14090 = !DILocalVariable(name: "sqenergy", scope: !14088, file: !9616, line: 633, type: !954)
!14091 = !DILocation(line: 633, column: 39, scope: !14088)
!14092 = !DILocation(line: 634, column: 67, scope: !14088)
!14093 = !DILocation(line: 634, column: 70, scope: !14088)
!14094 = !DILocation(line: 634, column: 74, scope: !14088)
!14095 = !DILocation(line: 634, column: 72, scope: !14088)
!14096 = !DILocation(line: 634, column: 78, scope: !14088)
!14097 = !DILocation(line: 634, column: 81, scope: !14088)
!14098 = !DILocation(line: 634, column: 89, scope: !14088)
!14099 = !DILocation(line: 634, column: 91, scope: !14088)
!14100 = !DILocation(line: 634, column: 87, scope: !14088)
!14101 = !DILocation(line: 635, column: 57, scope: !14088)
!14102 = !DILocation(line: 635, column: 66, scope: !14088)
!14103 = !DILocation(line: 635, column: 68, scope: !14088)
!14104 = !DILocation(line: 635, column: 64, scope: !14088)
!14105 = !DILocation(line: 636, column: 76, scope: !14088)
!14106 = !DILocation(line: 636, column: 57, scope: !14088)
!14107 = !DILocation(line: 636, column: 62, scope: !14088)
!14108 = !DILocation(line: 636, column: 66, scope: !14088)
!14109 = !DILocation(line: 637, column: 69, scope: !14088)
!14110 = !DILocation(line: 637, column: 70, scope: !14088)
!14111 = !DILocation(line: 637, column: 74, scope: !14088)
!14112 = !DILocation(line: 637, column: 73, scope: !14088)
!14113 = !DILocation(line: 637, column: 57, scope: !14088)
!14114 = !DILocation(line: 637, column: 62, scope: !14088)
!14115 = !DILocation(line: 637, column: 76, scope: !14088)
!14116 = !DILocation(line: 638, column: 57, scope: !14088)
!14117 = !DILocation(line: 634, column: 41, scope: !14088)
!14118 = !DILocation(line: 634, column: 38, scope: !14088)
!14119 = !DILocation(line: 643, column: 41, scope: !14088)
!14120 = !DILocation(line: 643, column: 38, scope: !14088)
!14121 = !DILocation(line: 644, column: 44, scope: !14088)
!14122 = !DILocation(line: 644, column: 41, scope: !14088)
!14123 = !DILocation(line: 645, column: 29, scope: !14088)
!14124 = !DILocation(line: 631, column: 72, scope: !14125)
!14125 = !DILexicalBlockFile(scope: !14080, file: !9616, discriminator: 2)
!14126 = !DILocation(line: 631, column: 29, scope: !14125)
!14127 = distinct !{!14127, !14128}
!14128 = !DILocation(line: 631, column: 29, scope: !13916)
!14129 = !DILocation(line: 646, column: 41, scope: !13916)
!14130 = !DILocation(line: 646, column: 42, scope: !13916)
!14131 = !DILocation(line: 646, column: 46, scope: !13916)
!14132 = !DILocation(line: 646, column: 45, scope: !13916)
!14133 = !DILocation(line: 646, column: 29, scope: !13916)
!14134 = !DILocation(line: 646, column: 34, scope: !13916)
!14135 = !DILocation(line: 646, column: 48, scope: !13916)
!14136 = !DILocation(line: 647, column: 45, scope: !13916)
!14137 = !DILocation(line: 647, column: 52, scope: !13916)
!14138 = !DILocation(line: 647, column: 50, scope: !13916)
!14139 = !DILocation(line: 647, column: 35, scope: !13916)
!14140 = !DILocation(line: 647, column: 36, scope: !13916)
!14141 = !DILocation(line: 647, column: 40, scope: !13916)
!14142 = !DILocation(line: 647, column: 39, scope: !13916)
!14143 = !DILocation(line: 647, column: 29, scope: !13916)
!14144 = !DILocation(line: 647, column: 43, scope: !13916)
!14145 = !DILocation(line: 648, column: 49, scope: !13916)
!14146 = !DILocation(line: 648, column: 39, scope: !13916)
!14147 = !DILocation(line: 648, column: 40, scope: !13916)
!14148 = !DILocation(line: 648, column: 44, scope: !13916)
!14149 = !DILocation(line: 648, column: 43, scope: !13916)
!14150 = !DILocation(line: 648, column: 29, scope: !13916)
!14151 = !DILocation(line: 648, column: 47, scope: !13916)
!14152 = !DILocation(line: 649, column: 33, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !13916, file: !9616, line: 649, column: 33)
!14154 = !DILocation(line: 649, column: 36, scope: !14153)
!14155 = !DILocation(line: 649, column: 52, scope: !14156)
!14156 = !DILexicalBlockFile(scope: !14153, file: !9616, discriminator: 1)
!14157 = !DILocation(line: 649, column: 53, scope: !14156)
!14158 = !DILocation(line: 649, column: 57, scope: !14156)
!14159 = !DILocation(line: 649, column: 56, scope: !14156)
!14160 = !DILocation(line: 649, column: 40, scope: !14156)
!14161 = !DILocation(line: 649, column: 45, scope: !14156)
!14162 = !DILocation(line: 649, column: 62, scope: !14156)
!14163 = !DILocation(line: 649, column: 60, scope: !14156)
!14164 = !DILocation(line: 649, column: 73, scope: !14156)
!14165 = !DILocation(line: 650, column: 44, scope: !14153)
!14166 = !DILocation(line: 650, column: 45, scope: !14153)
!14167 = !DILocation(line: 650, column: 49, scope: !14153)
!14168 = !DILocation(line: 650, column: 48, scope: !14153)
!14169 = !DILocation(line: 650, column: 38, scope: !14153)
!14170 = !DILocation(line: 650, column: 56, scope: !14153)
!14171 = !DILocation(line: 650, column: 70, scope: !14153)
!14172 = !DILocation(line: 650, column: 71, scope: !14153)
!14173 = !DILocation(line: 650, column: 75, scope: !14153)
!14174 = !DILocation(line: 650, column: 74, scope: !14153)
!14175 = !DILocation(line: 650, column: 63, scope: !14153)
!14176 = !DILocation(line: 650, column: 62, scope: !14153)
!14177 = !DILocation(line: 650, column: 90, scope: !14153)
!14178 = !DILocation(line: 650, column: 91, scope: !14153)
!14179 = !DILocation(line: 650, column: 95, scope: !14153)
!14180 = !DILocation(line: 650, column: 94, scope: !14153)
!14181 = !DILocation(line: 650, column: 82, scope: !14153)
!14182 = !DILocation(line: 650, column: 79, scope: !14153)
!14183 = !DILocation(line: 650, column: 55, scope: !14153)
!14184 = !DILocation(line: 650, column: 110, scope: !14156)
!14185 = !DILocation(line: 650, column: 111, scope: !14156)
!14186 = !DILocation(line: 650, column: 115, scope: !14156)
!14187 = !DILocation(line: 650, column: 114, scope: !14156)
!14188 = !DILocation(line: 650, column: 102, scope: !14156)
!14189 = !DILocation(line: 650, column: 55, scope: !14156)
!14190 = !DILocation(line: 650, column: 122, scope: !14191)
!14191 = !DILexicalBlockFile(scope: !14153, file: !9616, discriminator: 2)
!14192 = !DILocation(line: 650, column: 136, scope: !14191)
!14193 = !DILocation(line: 650, column: 137, scope: !14191)
!14194 = !DILocation(line: 650, column: 141, scope: !14191)
!14195 = !DILocation(line: 650, column: 140, scope: !14191)
!14196 = !DILocation(line: 650, column: 129, scope: !14191)
!14197 = !DILocation(line: 650, column: 128, scope: !14191)
!14198 = !DILocation(line: 650, column: 55, scope: !14191)
!14199 = !DILocation(line: 650, column: 55, scope: !14200)
!14200 = !DILexicalBlockFile(scope: !14153, file: !9616, discriminator: 3)
!14201 = !DILocation(line: 650, column: 52, scope: !14200)
!14202 = !DILocation(line: 651, column: 37, scope: !14153)
!14203 = !DILocation(line: 651, column: 57, scope: !14156)
!14204 = !DILocation(line: 651, column: 58, scope: !14156)
!14205 = !DILocation(line: 651, column: 62, scope: !14156)
!14206 = !DILocation(line: 651, column: 61, scope: !14156)
!14207 = !DILocation(line: 651, column: 47, scope: !14156)
!14208 = !DILocation(line: 651, column: 74, scope: !14156)
!14209 = !DILocation(line: 651, column: 75, scope: !14156)
!14210 = !DILocation(line: 651, column: 79, scope: !14156)
!14211 = !DILocation(line: 651, column: 78, scope: !14156)
!14212 = !DILocation(line: 651, column: 65, scope: !14156)
!14213 = !DILocation(line: 651, column: 64, scope: !14156)
!14214 = !DILocation(line: 651, column: 41, scope: !14156)
!14215 = !DILocation(line: 651, column: 93, scope: !14156)
!14216 = !DILocation(line: 651, column: 94, scope: !14156)
!14217 = !DILocation(line: 651, column: 98, scope: !14156)
!14218 = !DILocation(line: 651, column: 97, scope: !14156)
!14219 = !DILocation(line: 651, column: 85, scope: !14156)
!14220 = !DILocation(line: 651, column: 83, scope: !14156)
!14221 = !DILocation(line: 649, column: 33, scope: !14222)
!14222 = !DILexicalBlockFile(scope: !13916, file: !9616, discriminator: 2)
!14223 = !DILocation(line: 653, column: 33, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14153, file: !9616, line: 652, column: 38)
!14225 = !DILocation(line: 655, column: 25, scope: !13916)
!14226 = !DILocation(line: 613, column: 85, scope: !14227)
!14227 = !DILexicalBlockFile(scope: !13900, file: !9616, discriminator: 4)
!14228 = !DILocation(line: 613, column: 25, scope: !14227)
!14229 = distinct !{!14229, !14230}
!14230 = !DILocation(line: 613, column: 25, scope: !13896)
!14231 = !DILocation(line: 656, column: 21, scope: !13896)
!14232 = !DILocation(line: 656, column: 32, scope: !14233)
!14233 = !DILexicalBlockFile(scope: !14234, file: !9616, discriminator: 1)
!14234 = distinct !DILexicalBlock(scope: !13850, file: !9616, line: 656, column: 32)
!14235 = !DILocation(line: 656, column: 40, scope: !14233)
!14236 = !DILocation(line: 656, column: 38, scope: !14233)
!14237 = !DILocation(line: 656, column: 51, scope: !14233)
!14238 = !DILocation(line: 656, column: 66, scope: !14239)
!14239 = !DILexicalBlockFile(scope: !14234, file: !9616, discriminator: 2)
!14240 = !DILocation(line: 656, column: 67, scope: !14239)
!14241 = !DILocation(line: 656, column: 71, scope: !14239)
!14242 = !DILocation(line: 656, column: 70, scope: !14239)
!14243 = !DILocation(line: 656, column: 54, scope: !14239)
!14244 = !DILocation(line: 656, column: 59, scope: !14239)
!14245 = !DILocation(line: 656, column: 78, scope: !14239)
!14246 = !DILocation(line: 656, column: 99, scope: !14239)
!14247 = !DILocation(line: 656, column: 100, scope: !14239)
!14248 = !DILocation(line: 656, column: 104, scope: !14239)
!14249 = !DILocation(line: 656, column: 103, scope: !14239)
!14250 = !DILocation(line: 656, column: 93, scope: !14239)
!14251 = !DILocation(line: 656, column: 90, scope: !14239)
!14252 = !DILocation(line: 656, column: 77, scope: !14239)
!14253 = !DILocation(line: 656, column: 117, scope: !14254)
!14254 = !DILexicalBlockFile(scope: !14234, file: !9616, discriminator: 3)
!14255 = !DILocation(line: 656, column: 118, scope: !14254)
!14256 = !DILocation(line: 656, column: 122, scope: !14254)
!14257 = !DILocation(line: 656, column: 121, scope: !14254)
!14258 = !DILocation(line: 656, column: 111, scope: !14254)
!14259 = !DILocation(line: 656, column: 77, scope: !14254)
!14260 = !DILocation(line: 656, column: 129, scope: !14261)
!14261 = !DILexicalBlockFile(scope: !14234, file: !9616, discriminator: 4)
!14262 = !DILocation(line: 656, column: 77, scope: !14261)
!14263 = !DILocation(line: 656, column: 77, scope: !14264)
!14264 = !DILexicalBlockFile(scope: !14234, file: !9616, discriminator: 5)
!14265 = !DILocation(line: 656, column: 74, scope: !14264)
!14266 = !DILocation(line: 657, column: 29, scope: !14234)
!14267 = !DILocation(line: 657, column: 39, scope: !14233)
!14268 = !DILocation(line: 657, column: 40, scope: !14233)
!14269 = !DILocation(line: 657, column: 44, scope: !14233)
!14270 = !DILocation(line: 657, column: 43, scope: !14233)
!14271 = !DILocation(line: 657, column: 33, scope: !14233)
!14272 = !DILocation(line: 657, column: 59, scope: !14233)
!14273 = !DILocation(line: 657, column: 60, scope: !14233)
!14274 = !DILocation(line: 657, column: 64, scope: !14233)
!14275 = !DILocation(line: 657, column: 63, scope: !14233)
!14276 = !DILocation(line: 657, column: 51, scope: !14233)
!14277 = !DILocation(line: 657, column: 78, scope: !14233)
!14278 = !DILocation(line: 657, column: 79, scope: !14233)
!14279 = !DILocation(line: 657, column: 83, scope: !14233)
!14280 = !DILocation(line: 657, column: 82, scope: !14233)
!14281 = !DILocation(line: 657, column: 71, scope: !14233)
!14282 = !DILocation(line: 657, column: 68, scope: !14233)
!14283 = !DILocation(line: 657, column: 50, scope: !14233)
!14284 = !DILocation(line: 657, column: 97, scope: !14239)
!14285 = !DILocation(line: 657, column: 98, scope: !14239)
!14286 = !DILocation(line: 657, column: 102, scope: !14239)
!14287 = !DILocation(line: 657, column: 101, scope: !14239)
!14288 = !DILocation(line: 657, column: 90, scope: !14239)
!14289 = !DILocation(line: 657, column: 50, scope: !14239)
!14290 = !DILocation(line: 657, column: 117, scope: !14254)
!14291 = !DILocation(line: 657, column: 118, scope: !14254)
!14292 = !DILocation(line: 657, column: 122, scope: !14254)
!14293 = !DILocation(line: 657, column: 121, scope: !14254)
!14294 = !DILocation(line: 657, column: 109, scope: !14254)
!14295 = !DILocation(line: 657, column: 50, scope: !14254)
!14296 = !DILocation(line: 657, column: 50, scope: !14261)
!14297 = !DILocation(line: 657, column: 47, scope: !14261)
!14298 = !DILocation(line: 658, column: 29, scope: !14234)
!14299 = !DILocation(line: 658, column: 49, scope: !14233)
!14300 = !DILocation(line: 658, column: 50, scope: !14233)
!14301 = !DILocation(line: 658, column: 54, scope: !14233)
!14302 = !DILocation(line: 658, column: 53, scope: !14233)
!14303 = !DILocation(line: 658, column: 39, scope: !14233)
!14304 = !DILocation(line: 658, column: 66, scope: !14233)
!14305 = !DILocation(line: 658, column: 67, scope: !14233)
!14306 = !DILocation(line: 658, column: 71, scope: !14233)
!14307 = !DILocation(line: 658, column: 70, scope: !14233)
!14308 = !DILocation(line: 658, column: 57, scope: !14233)
!14309 = !DILocation(line: 658, column: 56, scope: !14233)
!14310 = !DILocation(line: 658, column: 33, scope: !14233)
!14311 = !DILocation(line: 658, column: 85, scope: !14233)
!14312 = !DILocation(line: 658, column: 86, scope: !14233)
!14313 = !DILocation(line: 658, column: 90, scope: !14233)
!14314 = !DILocation(line: 658, column: 89, scope: !14233)
!14315 = !DILocation(line: 658, column: 77, scope: !14233)
!14316 = !DILocation(line: 658, column: 75, scope: !14233)
!14317 = !DILocation(line: 656, column: 32, scope: !14318)
!14318 = !DILexicalBlockFile(scope: !13850, file: !9616, discriminator: 6)
!14319 = !DILocation(line: 661, column: 32, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14321, file: !9616, line: 661, column: 25)
!14321 = distinct !DILexicalBlock(scope: !14234, file: !9616, line: 659, column: 27)
!14322 = !DILocation(line: 661, column: 30, scope: !14320)
!14323 = !DILocation(line: 661, column: 37, scope: !14324)
!14324 = !DILexicalBlockFile(scope: !14325, file: !9616, discriminator: 1)
!14325 = distinct !DILexicalBlock(scope: !14320, file: !9616, line: 661, column: 25)
!14326 = !DILocation(line: 661, column: 41, scope: !14324)
!14327 = !DILocation(line: 661, column: 39, scope: !14324)
!14328 = !DILocation(line: 661, column: 47, scope: !14324)
!14329 = !DILocation(line: 661, column: 62, scope: !14330)
!14330 = !DILexicalBlockFile(scope: !14325, file: !9616, discriminator: 2)
!14331 = !DILocation(line: 661, column: 63, scope: !14330)
!14332 = !DILocation(line: 661, column: 67, scope: !14330)
!14333 = !DILocation(line: 661, column: 66, scope: !14330)
!14334 = !DILocation(line: 661, column: 50, scope: !14330)
!14335 = !DILocation(line: 661, column: 55, scope: !14330)
!14336 = !DILocation(line: 661, column: 72, scope: !14330)
!14337 = !DILocation(line: 661, column: 70, scope: !14330)
!14338 = !DILocation(line: 661, column: 25, scope: !14339)
!14339 = !DILexicalBlockFile(scope: !14320, file: !9616, discriminator: 3)
!14340 = !DILocalVariable(name: "cb", scope: !14341, file: !9616, line: 662, type: !991)
!14341 = distinct !DILexicalBlock(scope: !14325, file: !9616, line: 661, column: 89)
!14342 = !DILocation(line: 662, column: 33, scope: !14341)
!14343 = !DILocalVariable(name: "bits", scope: !14341, file: !9616, line: 662, type: !991)
!14344 = !DILocation(line: 662, column: 37, scope: !14341)
!14345 = !DILocalVariable(name: "dist", scope: !14341, file: !9616, line: 663, type: !954)
!14346 = !DILocation(line: 663, column: 35, scope: !14341)
!14347 = !DILocalVariable(name: "qenergy", scope: !14341, file: !9616, line: 663, type: !954)
!14348 = !DILocation(line: 663, column: 41, scope: !14341)
!14349 = !DILocation(line: 664, column: 56, scope: !14341)
!14350 = !DILocation(line: 664, column: 57, scope: !14341)
!14351 = !DILocation(line: 664, column: 61, scope: !14341)
!14352 = !DILocation(line: 664, column: 60, scope: !14341)
!14353 = !DILocation(line: 664, column: 48, scope: !14341)
!14354 = !DILocation(line: 664, column: 77, scope: !14341)
!14355 = !DILocation(line: 664, column: 78, scope: !14341)
!14356 = !DILocation(line: 664, column: 82, scope: !14341)
!14357 = !DILocation(line: 664, column: 81, scope: !14341)
!14358 = !DILocation(line: 664, column: 65, scope: !14341)
!14359 = !DILocation(line: 664, column: 70, scope: !14341)
!14360 = !DILocation(line: 664, column: 84, scope: !14341)
!14361 = !DILocation(line: 664, column: 34, scope: !14341)
!14362 = !DILocation(line: 664, column: 32, scope: !14341)
!14363 = !DILocation(line: 665, column: 33, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14341, file: !9616, line: 665, column: 33)
!14365 = !DILocation(line: 665, column: 36, scope: !14364)
!14366 = !DILocation(line: 665, column: 33, scope: !14341)
!14367 = !DILocation(line: 666, column: 48, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14364, file: !9616, line: 665, column: 41)
!14369 = !DILocation(line: 666, column: 38, scope: !14368)
!14370 = !DILocation(line: 667, column: 38, scope: !14368)
!14371 = !DILocation(line: 668, column: 41, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14368, file: !9616, line: 668, column: 33)
!14373 = !DILocation(line: 668, column: 38, scope: !14372)
!14374 = !DILocation(line: 668, column: 46, scope: !14375)
!14375 = !DILexicalBlockFile(scope: !14376, file: !9616, discriminator: 1)
!14376 = distinct !DILexicalBlock(scope: !14372, file: !9616, line: 668, column: 33)
!14377 = !DILocation(line: 668, column: 70, scope: !14375)
!14378 = !DILocation(line: 668, column: 51, scope: !14375)
!14379 = !DILocation(line: 668, column: 56, scope: !14375)
!14380 = !DILocation(line: 668, column: 60, scope: !14375)
!14381 = !DILocation(line: 668, column: 49, scope: !14375)
!14382 = !DILocation(line: 668, column: 33, scope: !14375)
!14383 = !DILocalVariable(name: "b", scope: !14384, file: !9616, line: 669, type: !991)
!14384 = distinct !DILexicalBlock(scope: !14376, file: !9616, line: 668, column: 80)
!14385 = !DILocation(line: 669, column: 41, scope: !14384)
!14386 = !DILocalVariable(name: "sqenergy", scope: !14384, file: !9616, line: 670, type: !954)
!14387 = !DILocation(line: 670, column: 43, scope: !14384)
!14388 = !DILocation(line: 671, column: 71, scope: !14384)
!14389 = !DILocation(line: 671, column: 74, scope: !14384)
!14390 = !DILocation(line: 671, column: 78, scope: !14384)
!14391 = !DILocation(line: 671, column: 76, scope: !14384)
!14392 = !DILocation(line: 671, column: 82, scope: !14384)
!14393 = !DILocation(line: 671, column: 85, scope: !14384)
!14394 = !DILocation(line: 671, column: 93, scope: !14384)
!14395 = !DILocation(line: 671, column: 95, scope: !14384)
!14396 = !DILocation(line: 671, column: 91, scope: !14384)
!14397 = !DILocation(line: 672, column: 61, scope: !14384)
!14398 = !DILocation(line: 672, column: 70, scope: !14384)
!14399 = !DILocation(line: 672, column: 72, scope: !14384)
!14400 = !DILocation(line: 672, column: 68, scope: !14384)
!14401 = !DILocation(line: 673, column: 80, scope: !14384)
!14402 = !DILocation(line: 673, column: 61, scope: !14384)
!14403 = !DILocation(line: 673, column: 66, scope: !14384)
!14404 = !DILocation(line: 673, column: 70, scope: !14384)
!14405 = !DILocation(line: 674, column: 73, scope: !14384)
!14406 = !DILocation(line: 674, column: 74, scope: !14384)
!14407 = !DILocation(line: 674, column: 78, scope: !14384)
!14408 = !DILocation(line: 674, column: 77, scope: !14384)
!14409 = !DILocation(line: 674, column: 61, scope: !14384)
!14410 = !DILocation(line: 674, column: 66, scope: !14384)
!14411 = !DILocation(line: 674, column: 80, scope: !14384)
!14412 = !DILocation(line: 675, column: 61, scope: !14384)
!14413 = !DILocation(line: 671, column: 45, scope: !14384)
!14414 = !DILocation(line: 671, column: 42, scope: !14384)
!14415 = !DILocation(line: 680, column: 45, scope: !14384)
!14416 = !DILocation(line: 680, column: 42, scope: !14384)
!14417 = !DILocation(line: 681, column: 48, scope: !14384)
!14418 = !DILocation(line: 681, column: 45, scope: !14384)
!14419 = !DILocation(line: 682, column: 33, scope: !14384)
!14420 = !DILocation(line: 668, column: 76, scope: !14421)
!14421 = !DILexicalBlockFile(scope: !14376, file: !9616, discriminator: 2)
!14422 = !DILocation(line: 668, column: 33, scope: !14421)
!14423 = distinct !{!14423, !14424}
!14424 = !DILocation(line: 668, column: 33, scope: !14368)
!14425 = !DILocation(line: 683, column: 41, scope: !14368)
!14426 = !DILocation(line: 683, column: 38, scope: !14368)
!14427 = !DILocation(line: 684, column: 37, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14368, file: !9616, line: 684, column: 37)
!14429 = !DILocation(line: 684, column: 54, scope: !14428)
!14430 = !DILocation(line: 684, column: 55, scope: !14428)
!14431 = !DILocation(line: 684, column: 59, scope: !14428)
!14432 = !DILocation(line: 684, column: 58, scope: !14428)
!14433 = !DILocation(line: 684, column: 46, scope: !14428)
!14434 = !DILocation(line: 684, column: 73, scope: !14428)
!14435 = !DILocation(line: 684, column: 74, scope: !14428)
!14436 = !DILocation(line: 684, column: 78, scope: !14428)
!14437 = !DILocation(line: 684, column: 77, scope: !14428)
!14438 = !DILocation(line: 684, column: 66, scope: !14428)
!14439 = !DILocation(line: 684, column: 63, scope: !14428)
!14440 = !DILocation(line: 684, column: 45, scope: !14428)
!14441 = !DILocation(line: 684, column: 92, scope: !14442)
!14442 = !DILexicalBlockFile(scope: !14428, file: !9616, discriminator: 1)
!14443 = !DILocation(line: 684, column: 93, scope: !14442)
!14444 = !DILocation(line: 684, column: 97, scope: !14442)
!14445 = !DILocation(line: 684, column: 96, scope: !14442)
!14446 = !DILocation(line: 684, column: 85, scope: !14442)
!14447 = !DILocation(line: 684, column: 45, scope: !14442)
!14448 = !DILocation(line: 684, column: 112, scope: !14449)
!14449 = !DILexicalBlockFile(scope: !14428, file: !9616, discriminator: 2)
!14450 = !DILocation(line: 684, column: 113, scope: !14449)
!14451 = !DILocation(line: 684, column: 117, scope: !14449)
!14452 = !DILocation(line: 684, column: 116, scope: !14449)
!14453 = !DILocation(line: 684, column: 104, scope: !14449)
!14454 = !DILocation(line: 684, column: 45, scope: !14449)
!14455 = !DILocation(line: 684, column: 45, scope: !14456)
!14456 = !DILexicalBlockFile(scope: !14428, file: !9616, discriminator: 3)
!14457 = !DILocation(line: 684, column: 42, scope: !14456)
!14458 = !DILocation(line: 684, column: 37, scope: !14456)
!14459 = !DILocation(line: 685, column: 49, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14428, file: !9616, line: 684, column: 123)
!14461 = !DILocation(line: 685, column: 50, scope: !14460)
!14462 = !DILocation(line: 685, column: 54, scope: !14460)
!14463 = !DILocation(line: 685, column: 53, scope: !14460)
!14464 = !DILocation(line: 685, column: 37, scope: !14460)
!14465 = !DILocation(line: 685, column: 42, scope: !14460)
!14466 = !DILocation(line: 685, column: 56, scope: !14460)
!14467 = !DILocation(line: 686, column: 53, scope: !14460)
!14468 = !DILocation(line: 686, column: 43, scope: !14460)
!14469 = !DILocation(line: 686, column: 44, scope: !14460)
!14470 = !DILocation(line: 686, column: 48, scope: !14460)
!14471 = !DILocation(line: 686, column: 47, scope: !14460)
!14472 = !DILocation(line: 686, column: 37, scope: !14460)
!14473 = !DILocation(line: 686, column: 51, scope: !14460)
!14474 = !DILocation(line: 687, column: 57, scope: !14460)
!14475 = !DILocation(line: 687, column: 47, scope: !14460)
!14476 = !DILocation(line: 687, column: 48, scope: !14460)
!14477 = !DILocation(line: 687, column: 52, scope: !14460)
!14478 = !DILocation(line: 687, column: 51, scope: !14460)
!14479 = !DILocation(line: 687, column: 37, scope: !14460)
!14480 = !DILocation(line: 687, column: 55, scope: !14460)
!14481 = !DILocation(line: 688, column: 33, scope: !14460)
!14482 = !DILocation(line: 689, column: 37, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14428, file: !9616, line: 688, column: 40)
!14484 = !DILocation(line: 691, column: 29, scope: !14368)
!14485 = !DILocation(line: 692, column: 63, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14364, file: !9616, line: 691, column: 36)
!14487 = !DILocation(line: 692, column: 64, scope: !14486)
!14488 = !DILocation(line: 692, column: 68, scope: !14486)
!14489 = !DILocation(line: 692, column: 67, scope: !14486)
!14490 = !DILocation(line: 692, column: 51, scope: !14486)
!14491 = !DILocation(line: 692, column: 56, scope: !14486)
!14492 = !DILocation(line: 692, column: 81, scope: !14486)
!14493 = !DILocation(line: 692, column: 82, scope: !14486)
!14494 = !DILocation(line: 692, column: 86, scope: !14486)
!14495 = !DILocation(line: 692, column: 85, scope: !14486)
!14496 = !DILocation(line: 692, column: 75, scope: !14486)
!14497 = !DILocation(line: 692, column: 72, scope: !14486)
!14498 = !DILocation(line: 692, column: 50, scope: !14486)
!14499 = !DILocation(line: 692, column: 99, scope: !14500)
!14500 = !DILexicalBlockFile(scope: !14486, file: !9616, discriminator: 1)
!14501 = !DILocation(line: 692, column: 100, scope: !14500)
!14502 = !DILocation(line: 692, column: 104, scope: !14500)
!14503 = !DILocation(line: 692, column: 103, scope: !14500)
!14504 = !DILocation(line: 692, column: 93, scope: !14500)
!14505 = !DILocation(line: 692, column: 50, scope: !14500)
!14506 = !DILocation(line: 692, column: 123, scope: !14507)
!14507 = !DILexicalBlockFile(scope: !14486, file: !9616, discriminator: 2)
!14508 = !DILocation(line: 692, column: 124, scope: !14507)
!14509 = !DILocation(line: 692, column: 128, scope: !14507)
!14510 = !DILocation(line: 692, column: 127, scope: !14507)
!14511 = !DILocation(line: 692, column: 111, scope: !14507)
!14512 = !DILocation(line: 692, column: 116, scope: !14507)
!14513 = !DILocation(line: 692, column: 50, scope: !14507)
!14514 = !DILocation(line: 692, column: 50, scope: !14515)
!14515 = !DILexicalBlockFile(scope: !14486, file: !9616, discriminator: 3)
!14516 = !DILocation(line: 692, column: 39, scope: !14515)
!14517 = !DILocation(line: 692, column: 40, scope: !14515)
!14518 = !DILocation(line: 692, column: 44, scope: !14515)
!14519 = !DILocation(line: 692, column: 43, scope: !14515)
!14520 = !DILocation(line: 692, column: 33, scope: !14515)
!14521 = !DILocation(line: 692, column: 47, scope: !14515)
!14522 = !DILocation(line: 693, column: 33, scope: !14486)
!14523 = !DILocation(line: 695, column: 25, scope: !14341)
!14524 = !DILocation(line: 661, column: 84, scope: !14525)
!14525 = !DILexicalBlockFile(scope: !14325, file: !9616, discriminator: 4)
!14526 = !DILocation(line: 661, column: 25, scope: !14525)
!14527 = distinct !{!14527, !14528}
!14528 = !DILocation(line: 661, column: 25, scope: !14321)
!14529 = !DILocation(line: 696, column: 21, scope: !14321)
!14530 = !DILocation(line: 697, column: 72, scope: !9619)
!14531 = !DILocation(line: 697, column: 73, scope: !9619)
!14532 = !DILocation(line: 697, column: 77, scope: !9619)
!14533 = !DILocation(line: 697, column: 76, scope: !9619)
!14534 = !DILocation(line: 697, column: 60, scope: !9619)
!14535 = !DILocation(line: 697, column: 65, scope: !9619)
!14536 = !DILocation(line: 697, column: 81, scope: !9619)
!14537 = !DILocation(line: 697, column: 93, scope: !9619)
!14538 = !DILocation(line: 697, column: 50, scope: !9619)
!14539 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9618)
!14540 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9618)
!14541 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9618)
!14542 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9618)
!14543 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9618)
!14544 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9618)
!14545 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9618)
!14546 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9618)
!14547 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9618)
!14548 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9618)
!14549 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9618)
!14550 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9618)
!14551 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9618)
!14552 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9618)
!14553 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9618)
!14554 = !DILocation(line: 697, column: 40, scope: !9619)
!14555 = !DILocation(line: 697, column: 41, scope: !9619)
!14556 = !DILocation(line: 697, column: 45, scope: !9619)
!14557 = !DILocation(line: 697, column: 44, scope: !9619)
!14558 = !DILocation(line: 697, column: 28, scope: !9619)
!14559 = !DILocation(line: 697, column: 33, scope: !9619)
!14560 = !DILocation(line: 697, column: 48, scope: !9619)
!14561 = !DILocation(line: 697, column: 26, scope: !9619)
!14562 = !DILocation(line: 698, column: 37, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !9619, file: !9616, line: 698, column: 25)
!14564 = !DILocation(line: 698, column: 38, scope: !14563)
!14565 = !DILocation(line: 698, column: 42, scope: !14563)
!14566 = !DILocation(line: 698, column: 41, scope: !14563)
!14567 = !DILocation(line: 698, column: 25, scope: !14563)
!14568 = !DILocation(line: 698, column: 30, scope: !14563)
!14569 = !DILocation(line: 698, column: 48, scope: !14563)
!14570 = !DILocation(line: 698, column: 45, scope: !14563)
!14571 = !DILocation(line: 698, column: 25, scope: !9619)
!14572 = !DILocation(line: 699, column: 31, scope: !14563)
!14573 = !DILocation(line: 699, column: 25, scope: !14563)
!14574 = !DILocation(line: 700, column: 36, scope: !9619)
!14575 = !DILocation(line: 700, column: 63, scope: !9619)
!14576 = !DILocation(line: 700, column: 64, scope: !9619)
!14577 = !DILocation(line: 700, column: 68, scope: !9619)
!14578 = !DILocation(line: 700, column: 67, scope: !9619)
!14579 = !DILocation(line: 700, column: 51, scope: !9619)
!14580 = !DILocation(line: 700, column: 56, scope: !9619)
!14581 = !DILocation(line: 700, column: 48, scope: !9619)
!14582 = !DILocation(line: 700, column: 35, scope: !9619)
!14583 = !DILocation(line: 700, column: 87, scope: !13829)
!14584 = !DILocation(line: 700, column: 88, scope: !13829)
!14585 = !DILocation(line: 700, column: 92, scope: !13829)
!14586 = !DILocation(line: 700, column: 91, scope: !13829)
!14587 = !DILocation(line: 700, column: 75, scope: !13829)
!14588 = !DILocation(line: 700, column: 80, scope: !13829)
!14589 = !DILocation(line: 700, column: 35, scope: !13829)
!14590 = !DILocation(line: 700, column: 99, scope: !13831)
!14591 = !DILocation(line: 700, column: 35, scope: !13831)
!14592 = !DILocation(line: 700, column: 35, scope: !13835)
!14593 = !DILocation(line: 700, column: 32, scope: !13835)
!14594 = !DILocation(line: 701, column: 68, scope: !9619)
!14595 = !DILocation(line: 701, column: 69, scope: !9619)
!14596 = !DILocation(line: 701, column: 73, scope: !9619)
!14597 = !DILocation(line: 701, column: 72, scope: !9619)
!14598 = !DILocation(line: 701, column: 60, scope: !9619)
!14599 = !DILocation(line: 701, column: 89, scope: !9619)
!14600 = !DILocation(line: 701, column: 90, scope: !9619)
!14601 = !DILocation(line: 701, column: 94, scope: !9619)
!14602 = !DILocation(line: 701, column: 93, scope: !9619)
!14603 = !DILocation(line: 701, column: 77, scope: !9619)
!14604 = !DILocation(line: 701, column: 82, scope: !9619)
!14605 = !DILocation(line: 701, column: 46, scope: !9619)
!14606 = !DILocation(line: 701, column: 36, scope: !9619)
!14607 = !DILocation(line: 701, column: 37, scope: !9619)
!14608 = !DILocation(line: 701, column: 41, scope: !9619)
!14609 = !DILocation(line: 701, column: 40, scope: !9619)
!14610 = !DILocation(line: 701, column: 21, scope: !9619)
!14611 = !DILocation(line: 701, column: 26, scope: !9619)
!14612 = !DILocation(line: 701, column: 44, scope: !9619)
!14613 = !DILocation(line: 702, column: 17, scope: !9619)
!14614 = !DILocation(line: 703, column: 45, scope: !9621)
!14615 = !DILocation(line: 703, column: 26, scope: !9621)
!14616 = !DILocation(line: 703, column: 31, scope: !9621)
!14617 = !DILocation(line: 703, column: 35, scope: !9621)
!14618 = !DILocation(line: 703, column: 23, scope: !9621)
!14619 = !DILocation(line: 704, column: 13, scope: !9621)
!14620 = !DILocation(line: 596, column: 48, scope: !14621)
!14621 = !DILexicalBlockFile(scope: !9622, file: !9616, discriminator: 2)
!14622 = !DILocation(line: 596, column: 13, scope: !14621)
!14623 = distinct !{!14623, !14624}
!14624 = !DILocation(line: 596, column: 13, scope: !9624)
!14625 = !DILocation(line: 705, column: 9, scope: !9624)
!14626 = !DILocation(line: 589, column: 71, scope: !14627)
!14627 = !DILexicalBlockFile(scope: !9625, file: !9616, discriminator: 2)
!14628 = !DILocation(line: 589, column: 52, scope: !14627)
!14629 = !DILocation(line: 589, column: 57, scope: !14627)
!14630 = !DILocation(line: 589, column: 61, scope: !14627)
!14631 = !DILocation(line: 589, column: 49, scope: !14627)
!14632 = !DILocation(line: 589, column: 9, scope: !14627)
!14633 = distinct !{!14633, !14634}
!14634 = !DILocation(line: 589, column: 9, scope: !9627)
!14635 = !DILocation(line: 708, column: 14, scope: !9627)
!14636 = !DILocation(line: 709, column: 16, scope: !9643)
!14637 = !DILocation(line: 709, column: 14, scope: !9643)
!14638 = !DILocation(line: 709, column: 21, scope: !14639)
!14639 = !DILexicalBlockFile(scope: !9642, file: !9616, discriminator: 1)
!14640 = !DILocation(line: 709, column: 25, scope: !14639)
!14641 = !DILocation(line: 709, column: 30, scope: !14639)
!14642 = !DILocation(line: 709, column: 34, scope: !14639)
!14643 = !DILocation(line: 709, column: 23, scope: !14639)
!14644 = !DILocation(line: 709, column: 9, scope: !14639)
!14645 = !DILocation(line: 710, column: 20, scope: !9640)
!14646 = !DILocation(line: 710, column: 18, scope: !9640)
!14647 = !DILocation(line: 710, column: 25, scope: !14648)
!14648 = !DILexicalBlockFile(scope: !9639, file: !9616, discriminator: 1)
!14649 = !DILocation(line: 710, column: 29, scope: !14648)
!14650 = !DILocation(line: 710, column: 34, scope: !14648)
!14651 = !DILocation(line: 710, column: 38, scope: !14648)
!14652 = !DILocation(line: 710, column: 27, scope: !14648)
!14653 = !DILocation(line: 710, column: 13, scope: !14648)
!14654 = !DILocation(line: 711, column: 34, scope: !9637)
!14655 = !DILocation(line: 711, column: 35, scope: !9637)
!14656 = !DILocation(line: 711, column: 39, scope: !9637)
!14657 = !DILocation(line: 711, column: 38, scope: !9637)
!14658 = !DILocation(line: 711, column: 22, scope: !9637)
!14659 = !DILocation(line: 711, column: 27, scope: !9637)
!14660 = !DILocation(line: 711, column: 21, scope: !9638)
!14661 = !DILocalVariable(name: "prevsf", scope: !9636, file: !9616, line: 712, type: !991)
!14662 = !DILocation(line: 712, column: 25, scope: !9636)
!14663 = !DILocation(line: 712, column: 46, scope: !9636)
!14664 = !DILocation(line: 712, column: 47, scope: !9636)
!14665 = !DILocation(line: 712, column: 51, scope: !9636)
!14666 = !DILocation(line: 712, column: 50, scope: !9636)
!14667 = !DILocation(line: 712, column: 34, scope: !9636)
!14668 = !DILocation(line: 712, column: 39, scope: !9636)
!14669 = !DILocation(line: 713, column: 25, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !9636, file: !9616, line: 713, column: 25)
!14671 = !DILocation(line: 713, column: 30, scope: !14670)
!14672 = !DILocation(line: 713, column: 25, scope: !9636)
!14673 = !DILocation(line: 714, column: 32, scope: !14670)
!14674 = !DILocation(line: 714, column: 30, scope: !14670)
!14675 = !DILocation(line: 714, column: 25, scope: !14670)
!14676 = !DILocation(line: 715, column: 65, scope: !9636)
!14677 = !DILocation(line: 715, column: 66, scope: !9636)
!14678 = !DILocation(line: 715, column: 70, scope: !9636)
!14679 = !DILocation(line: 715, column: 69, scope: !9636)
!14680 = !DILocation(line: 715, column: 53, scope: !9636)
!14681 = !DILocation(line: 715, column: 58, scope: !9636)
!14682 = !DILocation(line: 715, column: 74, scope: !9636)
!14683 = !DILocation(line: 715, column: 79, scope: !9636)
!14684 = !DILocation(line: 715, column: 85, scope: !9636)
!14685 = !DILocation(line: 715, column: 90, scope: !9636)
!14686 = !DILocation(line: 715, column: 43, scope: !9636)
!14687 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !9635)
!14688 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !9635)
!14689 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !9635)
!14690 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !9635)
!14691 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !9635)
!14692 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !9635)
!14693 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !9635)
!14694 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !9635)
!14695 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !9635)
!14696 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !9635)
!14697 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !9635)
!14698 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !9635)
!14699 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !9635)
!14700 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !9635)
!14701 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !9635)
!14702 = !DILocation(line: 715, column: 33, scope: !9636)
!14703 = !DILocation(line: 715, column: 34, scope: !9636)
!14704 = !DILocation(line: 715, column: 38, scope: !9636)
!14705 = !DILocation(line: 715, column: 37, scope: !9636)
!14706 = !DILocation(line: 715, column: 21, scope: !9636)
!14707 = !DILocation(line: 715, column: 26, scope: !9636)
!14708 = !DILocation(line: 715, column: 41, scope: !9636)
!14709 = !DILocation(line: 716, column: 68, scope: !9636)
!14710 = !DILocation(line: 716, column: 69, scope: !9636)
!14711 = !DILocation(line: 716, column: 73, scope: !9636)
!14712 = !DILocation(line: 716, column: 72, scope: !9636)
!14713 = !DILocation(line: 716, column: 60, scope: !9636)
!14714 = !DILocation(line: 716, column: 89, scope: !9636)
!14715 = !DILocation(line: 716, column: 90, scope: !9636)
!14716 = !DILocation(line: 716, column: 94, scope: !9636)
!14717 = !DILocation(line: 716, column: 93, scope: !9636)
!14718 = !DILocation(line: 716, column: 77, scope: !9636)
!14719 = !DILocation(line: 716, column: 82, scope: !9636)
!14720 = !DILocation(line: 716, column: 46, scope: !9636)
!14721 = !DILocation(line: 716, column: 36, scope: !9636)
!14722 = !DILocation(line: 716, column: 37, scope: !9636)
!14723 = !DILocation(line: 716, column: 41, scope: !9636)
!14724 = !DILocation(line: 716, column: 40, scope: !9636)
!14725 = !DILocation(line: 716, column: 21, scope: !9636)
!14726 = !DILocation(line: 716, column: 26, scope: !9636)
!14727 = !DILocation(line: 716, column: 44, scope: !9636)
!14728 = !DILocation(line: 717, column: 40, scope: !9636)
!14729 = !DILocation(line: 717, column: 41, scope: !9636)
!14730 = !DILocation(line: 717, column: 45, scope: !9636)
!14731 = !DILocation(line: 717, column: 44, scope: !9636)
!14732 = !DILocation(line: 717, column: 28, scope: !9636)
!14733 = !DILocation(line: 717, column: 33, scope: !9636)
!14734 = !DILocation(line: 717, column: 26, scope: !9636)
!14735 = !DILocation(line: 718, column: 26, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !9636, file: !9616, line: 718, column: 25)
!14737 = !DILocation(line: 718, column: 32, scope: !14736)
!14738 = !DILocation(line: 718, column: 35, scope: !14739)
!14739 = !DILexicalBlockFile(scope: !14736, file: !9616, discriminator: 1)
!14740 = !DILocation(line: 718, column: 57, scope: !14739)
!14741 = !DILocation(line: 718, column: 58, scope: !14739)
!14742 = !DILocation(line: 718, column: 62, scope: !14739)
!14743 = !DILocation(line: 718, column: 61, scope: !14739)
!14744 = !DILocation(line: 718, column: 45, scope: !14739)
!14745 = !DILocation(line: 718, column: 50, scope: !14739)
!14746 = !DILocation(line: 718, column: 42, scope: !14739)
!14747 = !DILocation(line: 718, column: 25, scope: !14739)
!14748 = !DILocation(line: 719, column: 31, scope: !14736)
!14749 = !DILocation(line: 719, column: 25, scope: !14736)
!14750 = !DILocation(line: 720, column: 17, scope: !9636)
!14751 = !DILocation(line: 721, column: 13, scope: !9638)
!14752 = !DILocation(line: 710, column: 48, scope: !14753)
!14753 = !DILexicalBlockFile(scope: !9639, file: !9616, discriminator: 2)
!14754 = !DILocation(line: 710, column: 13, scope: !14753)
!14755 = distinct !{!14755, !14756}
!14756 = !DILocation(line: 710, column: 13, scope: !9641)
!14757 = !DILocation(line: 722, column: 9, scope: !9641)
!14758 = !DILocation(line: 709, column: 71, scope: !14759)
!14759 = !DILexicalBlockFile(scope: !9642, file: !9616, discriminator: 2)
!14760 = !DILocation(line: 709, column: 52, scope: !14759)
!14761 = !DILocation(line: 709, column: 57, scope: !14759)
!14762 = !DILocation(line: 709, column: 61, scope: !14759)
!14763 = !DILocation(line: 709, column: 49, scope: !14759)
!14764 = !DILocation(line: 709, column: 9, scope: !14759)
!14765 = distinct !{!14765, !14766}
!14766 = !DILocation(line: 709, column: 9, scope: !9627)
!14767 = !DILocation(line: 724, column: 12, scope: !9627)
!14768 = !DILocation(line: 725, column: 5, scope: !9627)
!14769 = !DILocation(line: 725, column: 14, scope: !9728)
!14770 = !DILocation(line: 725, column: 20, scope: !9728)
!14771 = !DILocation(line: 725, column: 23, scope: !9769)
!14772 = !DILocation(line: 725, column: 29, scope: !9769)
!14773 = !DILocation(line: 725, column: 27, scope: !9769)
!14774 = !DILocation(line: 725, column: 5, scope: !14775)
!14775 = !DILexicalBlockFile(scope: !9627, file: !9616, discriminator: 3)
!14776 = !DILocation(line: 728, column: 26, scope: !9615)
!14777 = !DILocation(line: 728, column: 31, scope: !9615)
!14778 = !DILocation(line: 728, column: 5, scope: !9615)
!14779 = !DILocation(line: 730, column: 10, scope: !9615)
!14780 = !DILocation(line: 731, column: 12, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !9615, file: !9616, line: 731, column: 5)
!14782 = !DILocation(line: 731, column: 10, scope: !14781)
!14783 = !DILocation(line: 731, column: 17, scope: !14784)
!14784 = !DILexicalBlockFile(scope: !14785, file: !9616, discriminator: 1)
!14785 = distinct !DILexicalBlock(scope: !14781, file: !9616, line: 731, column: 5)
!14786 = !DILocation(line: 731, column: 21, scope: !14784)
!14787 = !DILocation(line: 731, column: 26, scope: !14784)
!14788 = !DILocation(line: 731, column: 30, scope: !14784)
!14789 = !DILocation(line: 731, column: 19, scope: !14784)
!14790 = !DILocation(line: 731, column: 5, scope: !14784)
!14791 = !DILocation(line: 733, column: 16, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !9616, line: 733, column: 9)
!14793 = distinct !DILexicalBlock(scope: !14785, file: !9616, line: 731, column: 71)
!14794 = !DILocation(line: 733, column: 14, scope: !14792)
!14795 = !DILocation(line: 733, column: 21, scope: !14796)
!14796 = !DILexicalBlockFile(scope: !14797, file: !9616, discriminator: 1)
!14797 = distinct !DILexicalBlock(scope: !14792, file: !9616, line: 733, column: 9)
!14798 = !DILocation(line: 733, column: 25, scope: !14796)
!14799 = !DILocation(line: 733, column: 30, scope: !14796)
!14800 = !DILocation(line: 733, column: 34, scope: !14796)
!14801 = !DILocation(line: 733, column: 23, scope: !14796)
!14802 = !DILocation(line: 733, column: 9, scope: !14796)
!14803 = !DILocation(line: 734, column: 30, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !9616, line: 734, column: 17)
!14805 = distinct !DILexicalBlock(scope: !14797, file: !9616, line: 733, column: 48)
!14806 = !DILocation(line: 734, column: 31, scope: !14804)
!14807 = !DILocation(line: 734, column: 35, scope: !14804)
!14808 = !DILocation(line: 734, column: 34, scope: !14804)
!14809 = !DILocation(line: 734, column: 18, scope: !14804)
!14810 = !DILocation(line: 734, column: 23, scope: !14804)
!14811 = !DILocation(line: 734, column: 17, scope: !14805)
!14812 = !DILocation(line: 735, column: 64, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14804, file: !9616, line: 734, column: 39)
!14814 = !DILocation(line: 735, column: 65, scope: !14813)
!14815 = !DILocation(line: 735, column: 69, scope: !14813)
!14816 = !DILocation(line: 735, column: 68, scope: !14813)
!14817 = !DILocation(line: 735, column: 56, scope: !14813)
!14818 = !DILocation(line: 735, column: 85, scope: !14813)
!14819 = !DILocation(line: 735, column: 86, scope: !14813)
!14820 = !DILocation(line: 735, column: 90, scope: !14813)
!14821 = !DILocation(line: 735, column: 89, scope: !14813)
!14822 = !DILocation(line: 735, column: 73, scope: !14813)
!14823 = !DILocation(line: 735, column: 78, scope: !14813)
!14824 = !DILocation(line: 735, column: 42, scope: !14813)
!14825 = !DILocation(line: 735, column: 32, scope: !14813)
!14826 = !DILocation(line: 735, column: 33, scope: !14813)
!14827 = !DILocation(line: 735, column: 37, scope: !14813)
!14828 = !DILocation(line: 735, column: 36, scope: !14813)
!14829 = !DILocation(line: 735, column: 17, scope: !14813)
!14830 = !DILocation(line: 735, column: 22, scope: !14813)
!14831 = !DILocation(line: 735, column: 40, scope: !14813)
!14832 = !DILocation(line: 736, column: 36, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14813, file: !9616, line: 736, column: 21)
!14834 = !DILocation(line: 736, column: 37, scope: !14833)
!14835 = !DILocation(line: 736, column: 41, scope: !14833)
!14836 = !DILocation(line: 736, column: 40, scope: !14833)
!14837 = !DILocation(line: 736, column: 21, scope: !14833)
!14838 = !DILocation(line: 736, column: 26, scope: !14833)
!14839 = !DILocation(line: 736, column: 44, scope: !14833)
!14840 = !DILocation(line: 736, column: 21, scope: !14813)
!14841 = !DILocation(line: 737, column: 53, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14843, file: !9616, line: 737, column: 25)
!14843 = distinct !DILexicalBlock(scope: !14833, file: !9616, line: 736, column: 50)
!14844 = !DILocation(line: 737, column: 58, scope: !14842)
!14845 = !DILocation(line: 737, column: 68, scope: !14842)
!14846 = !DILocation(line: 737, column: 74, scope: !14842)
!14847 = !DILocation(line: 737, column: 75, scope: !14842)
!14848 = !DILocation(line: 737, column: 79, scope: !14842)
!14849 = !DILocation(line: 737, column: 78, scope: !14842)
!14850 = !DILocation(line: 737, column: 26, scope: !14842)
!14851 = !DILocation(line: 737, column: 25, scope: !14843)
!14852 = !DILocation(line: 739, column: 40, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14842, file: !9616, line: 737, column: 83)
!14854 = !DILocation(line: 739, column: 41, scope: !14853)
!14855 = !DILocation(line: 739, column: 45, scope: !14853)
!14856 = !DILocation(line: 739, column: 44, scope: !14853)
!14857 = !DILocation(line: 739, column: 25, scope: !14853)
!14858 = !DILocation(line: 739, column: 30, scope: !14853)
!14859 = !DILocation(line: 739, column: 48, scope: !14853)
!14860 = !DILocation(line: 740, column: 21, scope: !14853)
!14861 = !DILocation(line: 741, column: 37, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14842, file: !9616, line: 740, column: 28)
!14863 = !DILocation(line: 741, column: 38, scope: !14862)
!14864 = !DILocation(line: 741, column: 42, scope: !14862)
!14865 = !DILocation(line: 741, column: 41, scope: !14862)
!14866 = !DILocation(line: 741, column: 25, scope: !14862)
!14867 = !DILocation(line: 741, column: 30, scope: !14862)
!14868 = !DILocation(line: 741, column: 45, scope: !14862)
!14869 = !DILocation(line: 742, column: 40, scope: !14862)
!14870 = !DILocation(line: 742, column: 41, scope: !14862)
!14871 = !DILocation(line: 742, column: 45, scope: !14862)
!14872 = !DILocation(line: 742, column: 44, scope: !14862)
!14873 = !DILocation(line: 742, column: 25, scope: !14862)
!14874 = !DILocation(line: 742, column: 30, scope: !14862)
!14875 = !DILocation(line: 742, column: 48, scope: !14862)
!14876 = !DILocation(line: 744, column: 17, scope: !14843)
!14877 = !DILocation(line: 745, column: 13, scope: !14813)
!14878 = !DILocation(line: 746, column: 32, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14804, file: !9616, line: 745, column: 20)
!14880 = !DILocation(line: 746, column: 33, scope: !14879)
!14881 = !DILocation(line: 746, column: 37, scope: !14879)
!14882 = !DILocation(line: 746, column: 36, scope: !14879)
!14883 = !DILocation(line: 746, column: 17, scope: !14879)
!14884 = !DILocation(line: 746, column: 22, scope: !14879)
!14885 = !DILocation(line: 746, column: 40, scope: !14879)
!14886 = !DILocation(line: 749, column: 30, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14805, file: !9616, line: 749, column: 17)
!14888 = !DILocation(line: 749, column: 31, scope: !14887)
!14889 = !DILocation(line: 749, column: 35, scope: !14887)
!14890 = !DILocation(line: 749, column: 34, scope: !14887)
!14891 = !DILocation(line: 749, column: 18, scope: !14887)
!14892 = !DILocation(line: 749, column: 23, scope: !14887)
!14893 = !DILocation(line: 749, column: 17, scope: !14805)
!14894 = !DILocation(line: 750, column: 21, scope: !14895)
!14895 = distinct !DILexicalBlock(scope: !14896, file: !9616, line: 750, column: 21)
!14896 = distinct !DILexicalBlock(scope: !14887, file: !9616, line: 749, column: 39)
!14897 = !DILocation(line: 750, column: 26, scope: !14895)
!14898 = !DILocation(line: 750, column: 21, scope: !14896)
!14899 = !DILocalVariable(name: "sfdiff", scope: !14900, file: !9616, line: 751, type: !991)
!14900 = distinct !DILexicalBlock(scope: !14895, file: !9616, line: 750, column: 33)
!14901 = !DILocation(line: 751, column: 49, scope: !14900)
!14902 = !DILocation(line: 751, column: 70, scope: !14900)
!14903 = !DILocation(line: 751, column: 71, scope: !14900)
!14904 = !DILocation(line: 751, column: 75, scope: !14900)
!14905 = !DILocation(line: 751, column: 74, scope: !14900)
!14906 = !DILocation(line: 751, column: 58, scope: !14900)
!14907 = !DILocation(line: 751, column: 63, scope: !14900)
!14908 = !DILocation(line: 751, column: 80, scope: !14900)
!14909 = !DILocation(line: 751, column: 78, scope: !14900)
!14910 = !DILocation(line: 751, column: 85, scope: !14900)
!14911 = !DILocation(line: 753, column: 17, scope: !14900)
!14912 = !DILocation(line: 753, column: 28, scope: !14913)
!14913 = !DILexicalBlockFile(scope: !14914, file: !9616, discriminator: 1)
!14914 = distinct !DILexicalBlock(scope: !14895, file: !9616, line: 753, column: 28)
!14915 = !DILocation(line: 753, column: 33, scope: !14913)
!14916 = !DILocation(line: 755, column: 50, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !14914, file: !9616, line: 753, column: 44)
!14918 = !DILocation(line: 755, column: 51, scope: !14917)
!14919 = !DILocation(line: 755, column: 55, scope: !14917)
!14920 = !DILocation(line: 755, column: 54, scope: !14917)
!14921 = !DILocation(line: 755, column: 38, scope: !14917)
!14922 = !DILocation(line: 755, column: 43, scope: !14917)
!14923 = !DILocation(line: 755, column: 21, scope: !14917)
!14924 = !DILocation(line: 755, column: 26, scope: !14917)
!14925 = !DILocation(line: 755, column: 36, scope: !14917)
!14926 = !DILocation(line: 756, column: 17, scope: !14917)
!14927 = !DILocation(line: 757, column: 36, scope: !14896)
!14928 = !DILocation(line: 757, column: 37, scope: !14896)
!14929 = !DILocation(line: 757, column: 41, scope: !14896)
!14930 = !DILocation(line: 757, column: 40, scope: !14896)
!14931 = !DILocation(line: 757, column: 24, scope: !14896)
!14932 = !DILocation(line: 757, column: 29, scope: !14896)
!14933 = !DILocation(line: 757, column: 22, scope: !14896)
!14934 = !DILocation(line: 758, column: 13, scope: !14896)
!14935 = !DILocation(line: 759, column: 9, scope: !14805)
!14936 = !DILocation(line: 733, column: 44, scope: !14937)
!14937 = !DILexicalBlockFile(scope: !14797, file: !9616, discriminator: 2)
!14938 = !DILocation(line: 733, column: 9, scope: !14937)
!14939 = distinct !{!14939, !14940}
!14940 = !DILocation(line: 733, column: 9, scope: !14793)
!14941 = !DILocation(line: 760, column: 5, scope: !14793)
!14942 = !DILocation(line: 731, column: 67, scope: !14943)
!14943 = !DILexicalBlockFile(scope: !14785, file: !9616, discriminator: 2)
!14944 = !DILocation(line: 731, column: 48, scope: !14943)
!14945 = !DILocation(line: 731, column: 53, scope: !14943)
!14946 = !DILocation(line: 731, column: 57, scope: !14943)
!14947 = !DILocation(line: 731, column: 45, scope: !14943)
!14948 = !DILocation(line: 731, column: 5, scope: !14943)
!14949 = distinct !{!14949, !14950}
!14950 = !DILocation(line: 731, column: 5, scope: !9615)
!14951 = !DILocation(line: 761, column: 1, scope: !9615)
!14952 = distinct !DISubprogram(name: "codebook_trellis_rate", scope: !14953, file: !14953, line: 59, type: !3826, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!14953 = !DIFile(filename: "./libavcodec/aaccoder_trellis.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!14954 = !DILocalVariable(name: "s", arg: 1, scope: !14952, file: !14953, line: 59, type: !2764)
!14955 = !DILocation(line: 59, column: 50, scope: !14952)
!14956 = !DILocalVariable(name: "sce", arg: 2, scope: !14952, file: !14953, line: 59, type: !2458)
!14957 = !DILocation(line: 59, column: 75, scope: !14952)
!14958 = !DILocalVariable(name: "win", arg: 3, scope: !14952, file: !14953, line: 60, type: !991)
!14959 = !DILocation(line: 60, column: 39, scope: !14952)
!14960 = !DILocalVariable(name: "group_len", arg: 4, scope: !14952, file: !14953, line: 60, type: !991)
!14961 = !DILocation(line: 60, column: 48, scope: !14952)
!14962 = !DILocalVariable(name: "lambda", arg: 5, scope: !14952, file: !14953, line: 60, type: !1781)
!14963 = !DILocation(line: 60, column: 71, scope: !14952)
!14964 = !DILocalVariable(name: "path", scope: !14952, file: !14953, line: 62, type: !14965)
!14965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14966, size: 172800, align: 32, elements: !3846)
!14966 = !DIDerivedType(tag: DW_TAG_typedef, name: "TrellisBandCodingPath", file: !14953, line: 56, baseType: !14967)
!14967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TrellisBandCodingPath", file: !14953, line: 52, size: 96, align: 32, elements: !14968)
!14968 = !{!14969, !14970, !14971}
!14969 = !DIDerivedType(tag: DW_TAG_member, name: "prev_idx", scope: !14967, file: !14953, line: 53, baseType: !991, size: 32, align: 32)
!14970 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !14967, file: !14953, line: 54, baseType: !954, size: 32, align: 32, offset: 32)
!14971 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !14967, file: !14953, line: 55, baseType: !991, size: 32, align: 32, offset: 64)
!14972 = !DILocation(line: 62, column: 27, scope: !14952)
!14973 = !DILocalVariable(name: "w", scope: !14952, file: !14953, line: 63, type: !991)
!14974 = !DILocation(line: 63, column: 9, scope: !14952)
!14975 = !DILocalVariable(name: "swb", scope: !14952, file: !14953, line: 63, type: !991)
!14976 = !DILocation(line: 63, column: 12, scope: !14952)
!14977 = !DILocalVariable(name: "cb", scope: !14952, file: !14953, line: 63, type: !991)
!14978 = !DILocation(line: 63, column: 17, scope: !14952)
!14979 = !DILocalVariable(name: "start", scope: !14952, file: !14953, line: 63, type: !991)
!14980 = !DILocation(line: 63, column: 21, scope: !14952)
!14981 = !DILocalVariable(name: "size", scope: !14952, file: !14953, line: 63, type: !991)
!14982 = !DILocation(line: 63, column: 28, scope: !14952)
!14983 = !DILocalVariable(name: "i", scope: !14952, file: !14953, line: 64, type: !991)
!14984 = !DILocation(line: 64, column: 9, scope: !14952)
!14985 = !DILocalVariable(name: "j", scope: !14952, file: !14953, line: 64, type: !991)
!14986 = !DILocation(line: 64, column: 12, scope: !14952)
!14987 = !DILocalVariable(name: "max_sfb", scope: !14952, file: !14953, line: 65, type: !1043)
!14988 = !DILocation(line: 65, column: 15, scope: !14952)
!14989 = !DILocation(line: 65, column: 25, scope: !14952)
!14990 = !DILocation(line: 65, column: 30, scope: !14952)
!14991 = !DILocation(line: 65, column: 34, scope: !14952)
!14992 = !DILocalVariable(name: "run_bits", scope: !14952, file: !14953, line: 66, type: !1043)
!14993 = !DILocation(line: 66, column: 15, scope: !14952)
!14994 = !DILocation(line: 66, column: 26, scope: !14952)
!14995 = !DILocation(line: 66, column: 31, scope: !14952)
!14996 = !DILocation(line: 66, column: 35, scope: !14952)
!14997 = !DILocation(line: 66, column: 47, scope: !14952)
!14998 = !DILocalVariable(name: "run_esc", scope: !14952, file: !14953, line: 67, type: !1043)
!14999 = !DILocation(line: 67, column: 15, scope: !14952)
!15000 = !DILocation(line: 67, column: 31, scope: !14952)
!15001 = !DILocation(line: 67, column: 28, scope: !14952)
!15002 = !DILocation(line: 67, column: 41, scope: !14952)
!15003 = !DILocalVariable(name: "idx", scope: !14952, file: !14953, line: 68, type: !991)
!15004 = !DILocation(line: 68, column: 9, scope: !14952)
!15005 = !DILocalVariable(name: "ppos", scope: !14952, file: !14953, line: 68, type: !991)
!15006 = !DILocation(line: 68, column: 14, scope: !14952)
!15007 = !DILocalVariable(name: "count", scope: !14952, file: !14953, line: 68, type: !991)
!15008 = !DILocation(line: 68, column: 20, scope: !14952)
!15009 = !DILocalVariable(name: "stackrun", scope: !14952, file: !14953, line: 69, type: !1986)
!15010 = !DILocation(line: 69, column: 9, scope: !14952)
!15011 = !DILocalVariable(name: "stackcb", scope: !14952, file: !14953, line: 69, type: !1986)
!15012 = !DILocation(line: 69, column: 24, scope: !14952)
!15013 = !DILocalVariable(name: "stack_len", scope: !14952, file: !14953, line: 69, type: !991)
!15014 = !DILocation(line: 69, column: 38, scope: !14952)
!15015 = !DILocalVariable(name: "next_minbits", scope: !14952, file: !14953, line: 70, type: !954)
!15016 = !DILocation(line: 70, column: 11, scope: !14952)
!15017 = !DILocalVariable(name: "next_mincb", scope: !14952, file: !14953, line: 71, type: !991)
!15018 = !DILocation(line: 71, column: 9, scope: !14952)
!15019 = !DILocation(line: 73, column: 5, scope: !14952)
!15020 = !DILocation(line: 73, column: 8, scope: !14952)
!15021 = !DILocation(line: 73, column: 18, scope: !14952)
!15022 = !DILocation(line: 73, column: 21, scope: !14952)
!15023 = !DILocation(line: 73, column: 29, scope: !14952)
!15024 = !DILocation(line: 73, column: 34, scope: !14952)
!15025 = !DILocation(line: 74, column: 13, scope: !14952)
!15026 = !DILocation(line: 74, column: 16, scope: !14952)
!15027 = !DILocation(line: 74, column: 11, scope: !14952)
!15028 = !DILocation(line: 75, column: 13, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !14952, file: !14953, line: 75, column: 5)
!15030 = !DILocation(line: 75, column: 10, scope: !15029)
!15031 = !DILocation(line: 75, column: 18, scope: !15032)
!15032 = !DILexicalBlockFile(scope: !15033, file: !14953, discriminator: 1)
!15033 = distinct !DILexicalBlock(scope: !15029, file: !14953, line: 75, column: 5)
!15034 = !DILocation(line: 75, column: 21, scope: !15032)
!15035 = !DILocation(line: 75, column: 5, scope: !15032)
!15036 = !DILocation(line: 76, column: 28, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15033, file: !14953, line: 75, column: 33)
!15038 = !DILocation(line: 76, column: 36, scope: !15037)
!15039 = !DILocation(line: 76, column: 17, scope: !15037)
!15040 = !DILocation(line: 76, column: 9, scope: !15037)
!15041 = !DILocation(line: 76, column: 21, scope: !15037)
!15042 = !DILocation(line: 76, column: 26, scope: !15037)
!15043 = !DILocation(line: 77, column: 17, scope: !15037)
!15044 = !DILocation(line: 77, column: 9, scope: !15037)
!15045 = !DILocation(line: 77, column: 21, scope: !15037)
!15046 = !DILocation(line: 77, column: 30, scope: !15037)
!15047 = !DILocation(line: 78, column: 17, scope: !15037)
!15048 = !DILocation(line: 78, column: 9, scope: !15037)
!15049 = !DILocation(line: 78, column: 21, scope: !15037)
!15050 = !DILocation(line: 78, column: 25, scope: !15037)
!15051 = !DILocation(line: 79, column: 5, scope: !15037)
!15052 = !DILocation(line: 75, column: 29, scope: !15053)
!15053 = !DILexicalBlockFile(scope: !15033, file: !14953, discriminator: 2)
!15054 = !DILocation(line: 75, column: 5, scope: !15053)
!15055 = distinct !{!15055, !15056}
!15056 = !DILocation(line: 75, column: 5, scope: !14952)
!15057 = !DILocation(line: 80, column: 14, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !14952, file: !14953, line: 80, column: 5)
!15059 = !DILocation(line: 80, column: 10, scope: !15058)
!15060 = !DILocation(line: 80, column: 19, scope: !15061)
!15061 = !DILexicalBlockFile(scope: !15062, file: !14953, discriminator: 1)
!15062 = distinct !DILexicalBlock(scope: !15058, file: !14953, line: 80, column: 5)
!15063 = !DILocation(line: 80, column: 25, scope: !15061)
!15064 = !DILocation(line: 80, column: 23, scope: !15061)
!15065 = !DILocation(line: 80, column: 5, scope: !15061)
!15066 = !DILocation(line: 81, column: 35, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15062, file: !14953, line: 80, column: 41)
!15068 = !DILocation(line: 81, column: 16, scope: !15067)
!15069 = !DILocation(line: 81, column: 21, scope: !15067)
!15070 = !DILocation(line: 81, column: 25, scope: !15067)
!15071 = !DILocation(line: 81, column: 14, scope: !15067)
!15072 = !DILocation(line: 82, column: 25, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15067, file: !14953, line: 82, column: 13)
!15074 = !DILocation(line: 82, column: 28, scope: !15073)
!15075 = !DILocation(line: 82, column: 34, scope: !15073)
!15076 = !DILocation(line: 82, column: 32, scope: !15073)
!15077 = !DILocation(line: 82, column: 13, scope: !15073)
!15078 = !DILocation(line: 82, column: 18, scope: !15073)
!15079 = !DILocation(line: 82, column: 13, scope: !15067)
!15080 = !DILocalVariable(name: "cost_stay_here", scope: !15081, file: !14953, line: 83, type: !954)
!15081 = distinct !DILexicalBlock(scope: !15073, file: !14953, line: 82, column: 40)
!15082 = !DILocation(line: 83, column: 19, scope: !15081)
!15083 = !DILocation(line: 83, column: 41, scope: !15081)
!15084 = !DILocation(line: 83, column: 36, scope: !15081)
!15085 = !DILocation(line: 83, column: 49, scope: !15081)
!15086 = !DILocalVariable(name: "cost_get_here", scope: !15081, file: !14953, line: 84, type: !954)
!15087 = !DILocation(line: 84, column: 19, scope: !15081)
!15088 = !DILocation(line: 84, column: 35, scope: !15081)
!15089 = !DILocation(line: 84, column: 50, scope: !15081)
!15090 = !DILocation(line: 84, column: 48, scope: !15081)
!15091 = !DILocation(line: 84, column: 59, scope: !15081)
!15092 = !DILocation(line: 85, column: 65, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15081, file: !14953, line: 85, column: 18)
!15094 = !DILocation(line: 85, column: 60, scope: !15093)
!15095 = !DILocation(line: 85, column: 73, scope: !15093)
!15096 = !DILocation(line: 85, column: 18, scope: !15093)
!15097 = !DILocation(line: 85, column: 33, scope: !15093)
!15098 = !DILocation(line: 85, column: 38, scope: !15093)
!15099 = !DILocation(line: 85, column: 42, scope: !15093)
!15100 = !DILocation(line: 85, column: 54, scope: !15093)
!15101 = !DILocation(line: 86, column: 67, scope: !15093)
!15102 = !DILocation(line: 86, column: 62, scope: !15093)
!15103 = !DILocation(line: 86, column: 75, scope: !15093)
!15104 = !DILocation(line: 86, column: 78, scope: !15093)
!15105 = !DILocation(line: 86, column: 20, scope: !15093)
!15106 = !DILocation(line: 86, column: 35, scope: !15093)
!15107 = !DILocation(line: 86, column: 40, scope: !15093)
!15108 = !DILocation(line: 86, column: 44, scope: !15093)
!15109 = !DILocation(line: 86, column: 56, scope: !15093)
!15110 = !DILocation(line: 86, column: 17, scope: !15093)
!15111 = !DILocation(line: 85, column: 18, scope: !15081)
!15112 = !DILocation(line: 87, column: 35, scope: !15093)
!15113 = !DILocation(line: 87, column: 32, scope: !15093)
!15114 = !DILocation(line: 87, column: 17, scope: !15093)
!15115 = !DILocation(line: 88, column: 17, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15081, file: !14953, line: 88, column: 17)
!15117 = !DILocation(line: 88, column: 33, scope: !15116)
!15118 = !DILocation(line: 88, column: 31, scope: !15116)
!15119 = !DILocation(line: 88, column: 17, scope: !15081)
!15120 = !DILocation(line: 89, column: 43, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15116, file: !14953, line: 88, column: 49)
!15122 = !DILocation(line: 89, column: 22, scope: !15121)
!15123 = !DILocation(line: 89, column: 25, scope: !15121)
!15124 = !DILocation(line: 89, column: 17, scope: !15121)
!15125 = !DILocation(line: 89, column: 32, scope: !15121)
!15126 = !DILocation(line: 89, column: 41, scope: !15121)
!15127 = !DILocation(line: 90, column: 39, scope: !15121)
!15128 = !DILocation(line: 90, column: 22, scope: !15121)
!15129 = !DILocation(line: 90, column: 25, scope: !15121)
!15130 = !DILocation(line: 90, column: 17, scope: !15121)
!15131 = !DILocation(line: 90, column: 32, scope: !15121)
!15132 = !DILocation(line: 90, column: 37, scope: !15121)
!15133 = !DILocation(line: 91, column: 22, scope: !15121)
!15134 = !DILocation(line: 91, column: 25, scope: !15121)
!15135 = !DILocation(line: 91, column: 17, scope: !15121)
!15136 = !DILocation(line: 91, column: 32, scope: !15121)
!15137 = !DILocation(line: 91, column: 36, scope: !15121)
!15138 = !DILocation(line: 92, column: 13, scope: !15121)
!15139 = !DILocation(line: 93, column: 22, scope: !15140)
!15140 = distinct !DILexicalBlock(scope: !15116, file: !14953, line: 92, column: 20)
!15141 = !DILocation(line: 93, column: 25, scope: !15140)
!15142 = !DILocation(line: 93, column: 17, scope: !15140)
!15143 = !DILocation(line: 93, column: 32, scope: !15140)
!15144 = !DILocation(line: 93, column: 41, scope: !15140)
!15145 = !DILocation(line: 94, column: 39, scope: !15140)
!15146 = !DILocation(line: 94, column: 22, scope: !15140)
!15147 = !DILocation(line: 94, column: 25, scope: !15140)
!15148 = !DILocation(line: 94, column: 17, scope: !15140)
!15149 = !DILocation(line: 94, column: 32, scope: !15140)
!15150 = !DILocation(line: 94, column: 37, scope: !15140)
!15151 = !DILocation(line: 95, column: 43, scope: !15140)
!15152 = !DILocation(line: 95, column: 38, scope: !15140)
!15153 = !DILocation(line: 95, column: 51, scope: !15140)
!15154 = !DILocation(line: 95, column: 55, scope: !15140)
!15155 = !DILocation(line: 95, column: 22, scope: !15140)
!15156 = !DILocation(line: 95, column: 25, scope: !15140)
!15157 = !DILocation(line: 95, column: 17, scope: !15140)
!15158 = !DILocation(line: 95, column: 32, scope: !15140)
!15159 = !DILocation(line: 95, column: 36, scope: !15140)
!15160 = !DILocation(line: 97, column: 33, scope: !15081)
!15161 = !DILocation(line: 97, column: 36, scope: !15081)
!15162 = !DILocation(line: 97, column: 28, scope: !15081)
!15163 = !DILocation(line: 97, column: 43, scope: !15081)
!15164 = !DILocation(line: 97, column: 26, scope: !15081)
!15165 = !DILocation(line: 98, column: 24, scope: !15081)
!15166 = !DILocation(line: 99, column: 21, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15081, file: !14953, line: 99, column: 13)
!15168 = !DILocation(line: 99, column: 18, scope: !15167)
!15169 = !DILocation(line: 99, column: 26, scope: !15170)
!15170 = !DILexicalBlockFile(scope: !15171, file: !14953, discriminator: 1)
!15171 = distinct !DILexicalBlock(scope: !15167, file: !14953, line: 99, column: 13)
!15172 = !DILocation(line: 99, column: 29, scope: !15170)
!15173 = !DILocation(line: 99, column: 13, scope: !15170)
!15174 = !DILocation(line: 100, column: 29, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15171, file: !14953, line: 99, column: 41)
!15176 = !DILocation(line: 100, column: 17, scope: !15175)
!15177 = !DILocation(line: 100, column: 22, scope: !15175)
!15178 = !DILocation(line: 100, column: 25, scope: !15175)
!15179 = !DILocation(line: 100, column: 33, scope: !15175)
!15180 = !DILocation(line: 100, column: 38, scope: !15175)
!15181 = !DILocation(line: 101, column: 29, scope: !15175)
!15182 = !DILocation(line: 101, column: 17, scope: !15175)
!15183 = !DILocation(line: 101, column: 22, scope: !15175)
!15184 = !DILocation(line: 101, column: 25, scope: !15175)
!15185 = !DILocation(line: 101, column: 33, scope: !15175)
!15186 = !DILocation(line: 101, column: 42, scope: !15175)
!15187 = !DILocation(line: 102, column: 29, scope: !15175)
!15188 = !DILocation(line: 102, column: 17, scope: !15175)
!15189 = !DILocation(line: 102, column: 22, scope: !15175)
!15190 = !DILocation(line: 102, column: 25, scope: !15175)
!15191 = !DILocation(line: 102, column: 33, scope: !15175)
!15192 = !DILocation(line: 102, column: 37, scope: !15175)
!15193 = !DILocation(line: 103, column: 13, scope: !15175)
!15194 = !DILocation(line: 99, column: 37, scope: !15195)
!15195 = !DILexicalBlockFile(scope: !15171, file: !14953, discriminator: 2)
!15196 = !DILocation(line: 99, column: 13, scope: !15195)
!15197 = distinct !{!15197, !15198}
!15198 = !DILocation(line: 99, column: 13, scope: !15081)
!15199 = !DILocation(line: 104, column: 9, scope: !15081)
!15200 = !DILocalVariable(name: "minbits", scope: !15201, file: !14953, line: 105, type: !954)
!15201 = distinct !DILexicalBlock(scope: !15073, file: !14953, line: 104, column: 16)
!15202 = !DILocation(line: 105, column: 19, scope: !15201)
!15203 = !DILocation(line: 105, column: 29, scope: !15201)
!15204 = !DILocalVariable(name: "mincb", scope: !15201, file: !14953, line: 106, type: !991)
!15205 = !DILocation(line: 106, column: 17, scope: !15201)
!15206 = !DILocation(line: 106, column: 25, scope: !15201)
!15207 = !DILocalVariable(name: "startcb", scope: !15201, file: !14953, line: 107, type: !991)
!15208 = !DILocation(line: 107, column: 17, scope: !15201)
!15209 = !DILocation(line: 107, column: 42, scope: !15201)
!15210 = !DILocation(line: 107, column: 45, scope: !15201)
!15211 = !DILocation(line: 107, column: 49, scope: !15201)
!15212 = !DILocation(line: 107, column: 48, scope: !15201)
!15213 = !DILocation(line: 107, column: 27, scope: !15201)
!15214 = !DILocation(line: 107, column: 32, scope: !15201)
!15215 = !DILocation(line: 108, column: 37, scope: !15201)
!15216 = !DILocation(line: 108, column: 23, scope: !15201)
!15217 = !DILocation(line: 108, column: 21, scope: !15201)
!15218 = !DILocation(line: 109, column: 26, scope: !15201)
!15219 = !DILocation(line: 110, column: 24, scope: !15201)
!15220 = !DILocation(line: 111, column: 21, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15201, file: !14953, line: 111, column: 13)
!15222 = !DILocation(line: 111, column: 18, scope: !15221)
!15223 = !DILocation(line: 111, column: 26, scope: !15224)
!15224 = !DILexicalBlockFile(scope: !15225, file: !14953, discriminator: 1)
!15225 = distinct !DILexicalBlock(scope: !15221, file: !14953, line: 111, column: 13)
!15226 = !DILocation(line: 111, column: 31, scope: !15224)
!15227 = !DILocation(line: 111, column: 29, scope: !15224)
!15228 = !DILocation(line: 111, column: 13, scope: !15224)
!15229 = !DILocation(line: 112, column: 29, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15225, file: !14953, line: 111, column: 46)
!15231 = !DILocation(line: 112, column: 17, scope: !15230)
!15232 = !DILocation(line: 112, column: 22, scope: !15230)
!15233 = !DILocation(line: 112, column: 25, scope: !15230)
!15234 = !DILocation(line: 112, column: 33, scope: !15230)
!15235 = !DILocation(line: 112, column: 38, scope: !15230)
!15236 = !DILocation(line: 113, column: 29, scope: !15230)
!15237 = !DILocation(line: 113, column: 17, scope: !15230)
!15238 = !DILocation(line: 113, column: 22, scope: !15230)
!15239 = !DILocation(line: 113, column: 25, scope: !15230)
!15240 = !DILocation(line: 113, column: 33, scope: !15230)
!15241 = !DILocation(line: 113, column: 42, scope: !15230)
!15242 = !DILocation(line: 114, column: 29, scope: !15230)
!15243 = !DILocation(line: 114, column: 17, scope: !15230)
!15244 = !DILocation(line: 114, column: 22, scope: !15230)
!15245 = !DILocation(line: 114, column: 25, scope: !15230)
!15246 = !DILocation(line: 114, column: 33, scope: !15230)
!15247 = !DILocation(line: 114, column: 37, scope: !15230)
!15248 = !DILocation(line: 115, column: 13, scope: !15230)
!15249 = !DILocation(line: 111, column: 42, scope: !15250)
!15250 = !DILexicalBlockFile(scope: !15225, file: !14953, discriminator: 2)
!15251 = !DILocation(line: 111, column: 13, scope: !15250)
!15252 = distinct !{!15252, !15253}
!15253 = !DILocation(line: 111, column: 13, scope: !15201)
!15254 = !DILocation(line: 116, column: 23, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15201, file: !14953, line: 116, column: 13)
!15256 = !DILocation(line: 116, column: 21, scope: !15255)
!15257 = !DILocation(line: 116, column: 18, scope: !15255)
!15258 = !DILocation(line: 116, column: 32, scope: !15259)
!15259 = !DILexicalBlockFile(scope: !15260, file: !14953, discriminator: 1)
!15260 = distinct !DILexicalBlock(scope: !15255, file: !14953, line: 116, column: 13)
!15261 = !DILocation(line: 116, column: 35, scope: !15259)
!15262 = !DILocation(line: 116, column: 13, scope: !15259)
!15263 = !DILocalVariable(name: "cost_stay_here", scope: !15264, file: !14953, line: 117, type: !954)
!15264 = distinct !DILexicalBlock(scope: !15260, file: !14953, line: 116, column: 47)
!15265 = !DILocation(line: 117, column: 23, scope: !15264)
!15266 = !DILocalVariable(name: "cost_get_here", scope: !15264, file: !14953, line: 117, type: !954)
!15267 = !DILocation(line: 117, column: 39, scope: !15264)
!15268 = !DILocalVariable(name: "bits", scope: !15264, file: !14953, line: 118, type: !954)
!15269 = !DILocation(line: 118, column: 23, scope: !15264)
!15270 = !DILocation(line: 119, column: 21, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15264, file: !14953, line: 119, column: 21)
!15272 = !DILocation(line: 119, column: 24, scope: !15271)
!15273 = !DILocation(line: 119, column: 30, scope: !15271)
!15274 = !DILocation(line: 119, column: 48, scope: !15275)
!15275 = !DILexicalBlockFile(scope: !15271, file: !14953, discriminator: 1)
!15276 = !DILocation(line: 119, column: 51, scope: !15275)
!15277 = !DILocation(line: 119, column: 55, scope: !15275)
!15278 = !DILocation(line: 119, column: 54, scope: !15275)
!15279 = !DILocation(line: 119, column: 33, scope: !15275)
!15280 = !DILocation(line: 119, column: 38, scope: !15275)
!15281 = !DILocation(line: 119, column: 78, scope: !15275)
!15282 = !DILocation(line: 119, column: 63, scope: !15275)
!15283 = !DILocation(line: 119, column: 60, scope: !15275)
!15284 = !DILocation(line: 119, column: 21, scope: !15275)
!15285 = !DILocation(line: 120, column: 33, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15271, file: !14953, line: 119, column: 83)
!15287 = !DILocation(line: 120, column: 21, scope: !15286)
!15288 = !DILocation(line: 120, column: 26, scope: !15286)
!15289 = !DILocation(line: 120, column: 29, scope: !15286)
!15290 = !DILocation(line: 120, column: 37, scope: !15286)
!15291 = !DILocation(line: 120, column: 42, scope: !15286)
!15292 = !DILocation(line: 121, column: 33, scope: !15286)
!15293 = !DILocation(line: 121, column: 21, scope: !15286)
!15294 = !DILocation(line: 121, column: 26, scope: !15286)
!15295 = !DILocation(line: 121, column: 29, scope: !15286)
!15296 = !DILocation(line: 121, column: 37, scope: !15286)
!15297 = !DILocation(line: 121, column: 46, scope: !15286)
!15298 = !DILocation(line: 122, column: 33, scope: !15286)
!15299 = !DILocation(line: 122, column: 21, scope: !15286)
!15300 = !DILocation(line: 122, column: 26, scope: !15286)
!15301 = !DILocation(line: 122, column: 29, scope: !15286)
!15302 = !DILocation(line: 122, column: 37, scope: !15286)
!15303 = !DILocation(line: 122, column: 41, scope: !15286)
!15304 = !DILocation(line: 123, column: 21, scope: !15286)
!15305 = !DILocation(line: 125, column: 24, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15264, file: !14953, line: 125, column: 17)
!15307 = !DILocation(line: 125, column: 22, scope: !15306)
!15308 = !DILocation(line: 125, column: 29, scope: !15309)
!15309 = !DILexicalBlockFile(scope: !15310, file: !14953, discriminator: 1)
!15310 = distinct !DILexicalBlock(scope: !15306, file: !14953, line: 125, column: 17)
!15311 = !DILocation(line: 125, column: 33, scope: !15309)
!15312 = !DILocation(line: 125, column: 31, scope: !15309)
!15313 = !DILocation(line: 125, column: 17, scope: !15309)
!15314 = !DILocation(line: 126, column: 53, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15310, file: !14953, line: 125, column: 49)
!15316 = !DILocation(line: 126, column: 69, scope: !15315)
!15317 = !DILocation(line: 126, column: 77, scope: !15315)
!15318 = !DILocation(line: 126, column: 78, scope: !15315)
!15319 = !DILocation(line: 126, column: 75, scope: !15315)
!15320 = !DILocation(line: 126, column: 57, scope: !15315)
!15321 = !DILocation(line: 126, column: 62, scope: !15315)
!15322 = !DILocation(line: 127, column: 59, scope: !15315)
!15323 = !DILocation(line: 127, column: 67, scope: !15315)
!15324 = !DILocation(line: 127, column: 68, scope: !15315)
!15325 = !DILocation(line: 127, column: 65, scope: !15315)
!15326 = !DILocation(line: 127, column: 49, scope: !15315)
!15327 = !DILocation(line: 127, column: 52, scope: !15315)
!15328 = !DILocation(line: 127, column: 75, scope: !15315)
!15329 = !DILocation(line: 128, column: 60, scope: !15315)
!15330 = !DILocation(line: 128, column: 63, scope: !15315)
!15331 = !DILocation(line: 128, column: 67, scope: !15315)
!15332 = !DILocation(line: 128, column: 66, scope: !15315)
!15333 = !DILocation(line: 128, column: 48, scope: !15315)
!15334 = !DILocation(line: 128, column: 53, scope: !15315)
!15335 = !DILocation(line: 129, column: 63, scope: !15315)
!15336 = !DILocation(line: 129, column: 48, scope: !15315)
!15337 = !DILocation(line: 126, column: 29, scope: !15315)
!15338 = !DILocation(line: 126, column: 26, scope: !15315)
!15339 = !DILocation(line: 131, column: 17, scope: !15315)
!15340 = !DILocation(line: 125, column: 45, scope: !15341)
!15341 = !DILexicalBlockFile(scope: !15310, file: !14953, discriminator: 2)
!15342 = !DILocation(line: 125, column: 17, scope: !15341)
!15343 = distinct !{!15343, !15344}
!15344 = !DILocation(line: 125, column: 17, scope: !15264)
!15345 = !DILocation(line: 132, column: 44, scope: !15264)
!15346 = !DILocation(line: 132, column: 34, scope: !15264)
!15347 = !DILocation(line: 132, column: 39, scope: !15264)
!15348 = !DILocation(line: 132, column: 48, scope: !15264)
!15349 = !DILocation(line: 132, column: 55, scope: !15264)
!15350 = !DILocation(line: 132, column: 53, scope: !15264)
!15351 = !DILocation(line: 132, column: 32, scope: !15264)
!15352 = !DILocation(line: 133, column: 33, scope: !15264)
!15353 = !DILocation(line: 133, column: 43, scope: !15264)
!15354 = !DILocation(line: 133, column: 41, scope: !15264)
!15355 = !DILocation(line: 133, column: 50, scope: !15264)
!15356 = !DILocation(line: 133, column: 48, scope: !15264)
!15357 = !DILocation(line: 133, column: 59, scope: !15264)
!15358 = !DILocation(line: 133, column: 31, scope: !15264)
!15359 = !DILocation(line: 134, column: 74, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15264, file: !14953, line: 134, column: 22)
!15361 = !DILocation(line: 134, column: 64, scope: !15360)
!15362 = !DILocation(line: 134, column: 69, scope: !15360)
!15363 = !DILocation(line: 134, column: 78, scope: !15360)
!15364 = !DILocation(line: 134, column: 22, scope: !15360)
!15365 = !DILocation(line: 134, column: 37, scope: !15360)
!15366 = !DILocation(line: 134, column: 42, scope: !15360)
!15367 = !DILocation(line: 134, column: 46, scope: !15360)
!15368 = !DILocation(line: 134, column: 58, scope: !15360)
!15369 = !DILocation(line: 135, column: 76, scope: !15360)
!15370 = !DILocation(line: 135, column: 66, scope: !15360)
!15371 = !DILocation(line: 135, column: 71, scope: !15360)
!15372 = !DILocation(line: 135, column: 80, scope: !15360)
!15373 = !DILocation(line: 135, column: 83, scope: !15360)
!15374 = !DILocation(line: 135, column: 24, scope: !15360)
!15375 = !DILocation(line: 135, column: 39, scope: !15360)
!15376 = !DILocation(line: 135, column: 44, scope: !15360)
!15377 = !DILocation(line: 135, column: 48, scope: !15360)
!15378 = !DILocation(line: 135, column: 60, scope: !15360)
!15379 = !DILocation(line: 135, column: 21, scope: !15360)
!15380 = !DILocation(line: 134, column: 22, scope: !15264)
!15381 = !DILocation(line: 136, column: 39, scope: !15360)
!15382 = !DILocation(line: 136, column: 36, scope: !15360)
!15383 = !DILocation(line: 136, column: 21, scope: !15360)
!15384 = !DILocation(line: 137, column: 21, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15264, file: !14953, line: 137, column: 21)
!15386 = !DILocation(line: 137, column: 37, scope: !15385)
!15387 = !DILocation(line: 137, column: 35, scope: !15385)
!15388 = !DILocation(line: 137, column: 21, scope: !15264)
!15389 = !DILocation(line: 138, column: 48, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15385, file: !14953, line: 137, column: 53)
!15391 = !DILocation(line: 138, column: 33, scope: !15390)
!15392 = !DILocation(line: 138, column: 21, scope: !15390)
!15393 = !DILocation(line: 138, column: 26, scope: !15390)
!15394 = !DILocation(line: 138, column: 29, scope: !15390)
!15395 = !DILocation(line: 138, column: 37, scope: !15390)
!15396 = !DILocation(line: 138, column: 46, scope: !15390)
!15397 = !DILocation(line: 139, column: 44, scope: !15390)
!15398 = !DILocation(line: 139, column: 33, scope: !15390)
!15399 = !DILocation(line: 139, column: 21, scope: !15390)
!15400 = !DILocation(line: 139, column: 26, scope: !15390)
!15401 = !DILocation(line: 139, column: 29, scope: !15390)
!15402 = !DILocation(line: 139, column: 37, scope: !15390)
!15403 = !DILocation(line: 139, column: 42, scope: !15390)
!15404 = !DILocation(line: 140, column: 33, scope: !15390)
!15405 = !DILocation(line: 140, column: 21, scope: !15390)
!15406 = !DILocation(line: 140, column: 26, scope: !15390)
!15407 = !DILocation(line: 140, column: 29, scope: !15390)
!15408 = !DILocation(line: 140, column: 37, scope: !15390)
!15409 = !DILocation(line: 140, column: 41, scope: !15390)
!15410 = !DILocation(line: 141, column: 17, scope: !15390)
!15411 = !DILocation(line: 142, column: 48, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15385, file: !14953, line: 141, column: 24)
!15413 = !DILocation(line: 142, column: 33, scope: !15412)
!15414 = !DILocation(line: 142, column: 21, scope: !15412)
!15415 = !DILocation(line: 142, column: 26, scope: !15412)
!15416 = !DILocation(line: 142, column: 29, scope: !15412)
!15417 = !DILocation(line: 142, column: 37, scope: !15412)
!15418 = !DILocation(line: 142, column: 46, scope: !15412)
!15419 = !DILocation(line: 143, column: 44, scope: !15412)
!15420 = !DILocation(line: 143, column: 33, scope: !15412)
!15421 = !DILocation(line: 143, column: 21, scope: !15412)
!15422 = !DILocation(line: 143, column: 26, scope: !15412)
!15423 = !DILocation(line: 143, column: 29, scope: !15412)
!15424 = !DILocation(line: 143, column: 37, scope: !15412)
!15425 = !DILocation(line: 143, column: 42, scope: !15412)
!15426 = !DILocation(line: 144, column: 53, scope: !15412)
!15427 = !DILocation(line: 144, column: 43, scope: !15412)
!15428 = !DILocation(line: 144, column: 48, scope: !15412)
!15429 = !DILocation(line: 144, column: 57, scope: !15412)
!15430 = !DILocation(line: 144, column: 61, scope: !15412)
!15431 = !DILocation(line: 144, column: 33, scope: !15412)
!15432 = !DILocation(line: 144, column: 21, scope: !15412)
!15433 = !DILocation(line: 144, column: 26, scope: !15412)
!15434 = !DILocation(line: 144, column: 29, scope: !15412)
!15435 = !DILocation(line: 144, column: 37, scope: !15412)
!15436 = !DILocation(line: 144, column: 41, scope: !15412)
!15437 = !DILocation(line: 146, column: 33, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15264, file: !14953, line: 146, column: 21)
!15439 = !DILocation(line: 146, column: 21, scope: !15438)
!15440 = !DILocation(line: 146, column: 26, scope: !15438)
!15441 = !DILocation(line: 146, column: 29, scope: !15438)
!15442 = !DILocation(line: 146, column: 37, scope: !15438)
!15443 = !DILocation(line: 146, column: 44, scope: !15438)
!15444 = !DILocation(line: 146, column: 42, scope: !15438)
!15445 = !DILocation(line: 146, column: 21, scope: !15264)
!15446 = !DILocation(line: 147, column: 48, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15438, file: !14953, line: 146, column: 58)
!15448 = !DILocation(line: 147, column: 36, scope: !15447)
!15449 = !DILocation(line: 147, column: 41, scope: !15447)
!15450 = !DILocation(line: 147, column: 44, scope: !15447)
!15451 = !DILocation(line: 147, column: 52, scope: !15447)
!15452 = !DILocation(line: 147, column: 34, scope: !15447)
!15453 = !DILocation(line: 148, column: 34, scope: !15447)
!15454 = !DILocation(line: 148, column: 32, scope: !15447)
!15455 = !DILocation(line: 149, column: 17, scope: !15447)
!15456 = !DILocation(line: 150, column: 13, scope: !15264)
!15457 = !DILocation(line: 116, column: 43, scope: !15458)
!15458 = !DILexicalBlockFile(scope: !15260, file: !14953, discriminator: 2)
!15459 = !DILocation(line: 116, column: 13, scope: !15458)
!15460 = distinct !{!15460, !15461}
!15461 = !DILocation(line: 116, column: 13, scope: !15201)
!15462 = !DILocation(line: 152, column: 37, scope: !15067)
!15463 = !DILocation(line: 152, column: 18, scope: !15067)
!15464 = !DILocation(line: 152, column: 23, scope: !15067)
!15465 = !DILocation(line: 152, column: 27, scope: !15067)
!15466 = !DILocation(line: 152, column: 15, scope: !15067)
!15467 = !DILocation(line: 153, column: 5, scope: !15067)
!15468 = !DILocation(line: 80, column: 37, scope: !15469)
!15469 = !DILexicalBlockFile(scope: !15062, file: !14953, discriminator: 2)
!15470 = !DILocation(line: 80, column: 5, scope: !15469)
!15471 = distinct !{!15471, !15472}
!15472 = !DILocation(line: 80, column: 5, scope: !14952)
!15473 = !DILocation(line: 156, column: 15, scope: !14952)
!15474 = !DILocation(line: 157, column: 9, scope: !14952)
!15475 = !DILocation(line: 158, column: 13, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !14952, file: !14953, line: 158, column: 5)
!15477 = !DILocation(line: 158, column: 10, scope: !15476)
!15478 = !DILocation(line: 158, column: 18, scope: !15479)
!15479 = !DILexicalBlockFile(scope: !15480, file: !14953, discriminator: 1)
!15480 = distinct !DILexicalBlock(scope: !15476, file: !14953, line: 158, column: 5)
!15481 = !DILocation(line: 158, column: 21, scope: !15479)
!15482 = !DILocation(line: 158, column: 5, scope: !15479)
!15483 = !DILocation(line: 159, column: 27, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15480, file: !14953, line: 159, column: 13)
!15485 = !DILocation(line: 159, column: 13, scope: !15484)
!15486 = !DILocation(line: 159, column: 18, scope: !15484)
!15487 = !DILocation(line: 159, column: 31, scope: !15484)
!15488 = !DILocation(line: 159, column: 52, scope: !15484)
!15489 = !DILocation(line: 159, column: 38, scope: !15484)
!15490 = !DILocation(line: 159, column: 43, scope: !15484)
!15491 = !DILocation(line: 159, column: 57, scope: !15484)
!15492 = !DILocation(line: 159, column: 36, scope: !15484)
!15493 = !DILocation(line: 159, column: 13, scope: !15480)
!15494 = !DILocation(line: 160, column: 19, scope: !15484)
!15495 = !DILocation(line: 160, column: 17, scope: !15484)
!15496 = !DILocation(line: 160, column: 13, scope: !15484)
!15497 = !DILocation(line: 159, column: 57, scope: !15498)
!15498 = !DILexicalBlockFile(scope: !15484, file: !14953, discriminator: 1)
!15499 = !DILocation(line: 158, column: 29, scope: !15500)
!15500 = !DILexicalBlockFile(scope: !15480, file: !14953, discriminator: 2)
!15501 = !DILocation(line: 158, column: 5, scope: !15500)
!15502 = distinct !{!15502, !15503}
!15503 = !DILocation(line: 158, column: 5, scope: !14952)
!15504 = !DILocation(line: 161, column: 12, scope: !14952)
!15505 = !DILocation(line: 161, column: 10, scope: !14952)
!15506 = !DILocation(line: 162, column: 5, scope: !14952)
!15507 = !DILocation(line: 162, column: 12, scope: !15508)
!15508 = !DILexicalBlockFile(scope: !14952, file: !14953, discriminator: 1)
!15509 = !DILocation(line: 162, column: 17, scope: !15508)
!15510 = !DILocation(line: 162, column: 5, scope: !15508)
!15511 = !DILocation(line: 164, column: 14, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !14952, file: !14953, line: 162, column: 22)
!15513 = !DILocation(line: 164, column: 12, scope: !15512)
!15514 = !DILocation(line: 165, column: 42, scope: !15512)
!15515 = !DILocation(line: 165, column: 31, scope: !15512)
!15516 = !DILocation(line: 165, column: 36, scope: !15512)
!15517 = !DILocation(line: 165, column: 46, scope: !15512)
!15518 = !DILocation(line: 165, column: 18, scope: !15512)
!15519 = !DILocation(line: 165, column: 9, scope: !15512)
!15520 = !DILocation(line: 165, column: 29, scope: !15512)
!15521 = !DILocation(line: 166, column: 31, scope: !15512)
!15522 = !DILocation(line: 166, column: 18, scope: !15512)
!15523 = !DILocation(line: 166, column: 9, scope: !15512)
!15524 = !DILocation(line: 166, column: 29, scope: !15512)
!15525 = !DILocation(line: 167, column: 47, scope: !15512)
!15526 = !DILocation(line: 167, column: 15, scope: !15512)
!15527 = !DILocation(line: 167, column: 20, scope: !15512)
!15528 = !DILocation(line: 167, column: 36, scope: !15512)
!15529 = !DILocation(line: 167, column: 25, scope: !15512)
!15530 = !DILocation(line: 167, column: 30, scope: !15512)
!15531 = !DILocation(line: 167, column: 40, scope: !15512)
!15532 = !DILocation(line: 167, column: 24, scope: !15512)
!15533 = !DILocation(line: 167, column: 43, scope: !15512)
!15534 = !DILocation(line: 167, column: 51, scope: !15512)
!15535 = !DILocation(line: 167, column: 13, scope: !15512)
!15536 = !DILocation(line: 168, column: 28, scope: !15512)
!15537 = !DILocation(line: 168, column: 17, scope: !15512)
!15538 = !DILocation(line: 168, column: 22, scope: !15512)
!15539 = !DILocation(line: 168, column: 32, scope: !15512)
!15540 = !DILocation(line: 168, column: 14, scope: !15512)
!15541 = !DILocation(line: 169, column: 18, scope: !15512)
!15542 = !DILocation(line: 162, column: 5, scope: !15543)
!15543 = !DILexicalBlockFile(scope: !14952, file: !14953, discriminator: 2)
!15544 = distinct !{!15544, !15506}
!15545 = !DILocation(line: 172, column: 11, scope: !14952)
!15546 = !DILocation(line: 173, column: 14, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !14952, file: !14953, line: 173, column: 5)
!15548 = !DILocation(line: 173, column: 24, scope: !15547)
!15549 = !DILocation(line: 173, column: 12, scope: !15547)
!15550 = !DILocation(line: 173, column: 10, scope: !15547)
!15551 = !DILocation(line: 173, column: 29, scope: !15552)
!15552 = !DILexicalBlockFile(scope: !15553, file: !14953, discriminator: 1)
!15553 = distinct !DILexicalBlock(scope: !15547, file: !14953, line: 173, column: 5)
!15554 = !DILocation(line: 173, column: 31, scope: !15552)
!15555 = !DILocation(line: 173, column: 5, scope: !15552)
!15556 = !DILocation(line: 174, column: 37, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15553, file: !14953, line: 173, column: 42)
!15558 = !DILocation(line: 174, column: 29, scope: !15557)
!15559 = !DILocation(line: 174, column: 14, scope: !15557)
!15560 = !DILocation(line: 174, column: 12, scope: !15557)
!15561 = !DILocation(line: 175, column: 19, scope: !15557)
!15562 = !DILocation(line: 175, column: 22, scope: !15557)
!15563 = !DILocation(line: 175, column: 29, scope: !15557)
!15564 = !DILocation(line: 175, column: 9, scope: !15557)
!15565 = !DILocation(line: 176, column: 26, scope: !15557)
!15566 = !DILocation(line: 176, column: 17, scope: !15557)
!15567 = !DILocation(line: 176, column: 15, scope: !15557)
!15568 = !DILocation(line: 177, column: 16, scope: !15557)
!15569 = !DILocation(line: 177, column: 21, scope: !15557)
!15570 = !DILocation(line: 177, column: 30, scope: !15557)
!15571 = !DILocation(line: 177, column: 33, scope: !15557)
!15572 = !DILocation(line: 177, column: 28, scope: !15557)
!15573 = !DILocation(line: 177, column: 39, scope: !15557)
!15574 = !DILocation(line: 177, column: 37, scope: !15557)
!15575 = !DILocation(line: 177, column: 47, scope: !15557)
!15576 = !DILocation(line: 177, column: 46, scope: !15557)
!15577 = !DILocation(line: 177, column: 9, scope: !15557)
!15578 = !DILocation(line: 177, column: 51, scope: !15557)
!15579 = !DILocation(line: 179, column: 16, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15557, file: !14953, line: 179, column: 9)
!15581 = !DILocation(line: 179, column: 14, scope: !15580)
!15582 = !DILocation(line: 179, column: 21, scope: !15583)
!15583 = !DILexicalBlockFile(scope: !15584, file: !14953, discriminator: 1)
!15584 = distinct !DILexicalBlock(scope: !15580, file: !14953, line: 179, column: 9)
!15585 = !DILocation(line: 179, column: 25, scope: !15583)
!15586 = !DILocation(line: 179, column: 23, scope: !15583)
!15587 = !DILocation(line: 179, column: 9, scope: !15583)
!15588 = !DILocation(line: 180, column: 46, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15584, file: !14953, line: 179, column: 37)
!15590 = !DILocation(line: 180, column: 28, scope: !15589)
!15591 = !DILocation(line: 180, column: 31, scope: !15589)
!15592 = !DILocation(line: 180, column: 37, scope: !15589)
!15593 = !DILocation(line: 180, column: 35, scope: !15589)
!15594 = !DILocation(line: 180, column: 13, scope: !15589)
!15595 = !DILocation(line: 180, column: 18, scope: !15589)
!15596 = !DILocation(line: 180, column: 44, scope: !15589)
!15597 = !DILocation(line: 181, column: 18, scope: !15589)
!15598 = !DILocation(line: 182, column: 9, scope: !15589)
!15599 = !DILocation(line: 179, column: 33, scope: !15600)
!15600 = !DILexicalBlockFile(scope: !15584, file: !14953, discriminator: 2)
!15601 = !DILocation(line: 179, column: 9, scope: !15600)
!15602 = distinct !{!15602, !15603}
!15603 = !DILocation(line: 179, column: 9, scope: !15557)
!15604 = !DILocation(line: 183, column: 9, scope: !15557)
!15605 = !DILocation(line: 183, column: 16, scope: !15606)
!15606 = !DILexicalBlockFile(scope: !15557, file: !14953, discriminator: 1)
!15607 = !DILocation(line: 183, column: 25, scope: !15606)
!15608 = !DILocation(line: 183, column: 22, scope: !15606)
!15609 = !DILocation(line: 183, column: 9, scope: !15606)
!15610 = !DILocation(line: 184, column: 23, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15557, file: !14953, line: 183, column: 34)
!15612 = !DILocation(line: 184, column: 26, scope: !15611)
!15613 = !DILocation(line: 184, column: 30, scope: !15611)
!15614 = !DILocation(line: 184, column: 40, scope: !15611)
!15615 = !DILocation(line: 184, column: 13, scope: !15611)
!15616 = !DILocation(line: 185, column: 22, scope: !15611)
!15617 = !DILocation(line: 185, column: 19, scope: !15611)
!15618 = !DILocation(line: 183, column: 9, scope: !15619)
!15619 = !DILexicalBlockFile(scope: !15557, file: !14953, discriminator: 2)
!15620 = distinct !{!15620, !15604}
!15621 = !DILocation(line: 187, column: 19, scope: !15557)
!15622 = !DILocation(line: 187, column: 22, scope: !15557)
!15623 = !DILocation(line: 187, column: 26, scope: !15557)
!15624 = !DILocation(line: 187, column: 36, scope: !15557)
!15625 = !DILocation(line: 187, column: 9, scope: !15557)
!15626 = !DILocation(line: 188, column: 5, scope: !15557)
!15627 = !DILocation(line: 173, column: 38, scope: !15628)
!15628 = !DILexicalBlockFile(scope: !15553, file: !14953, discriminator: 2)
!15629 = !DILocation(line: 173, column: 5, scope: !15628)
!15630 = distinct !{!15630, !15631}
!15631 = !DILocation(line: 173, column: 5, scope: !14952)
!15632 = !DILocation(line: 189, column: 1, scope: !14952)
!15633 = distinct !DISubprogram(name: "search_for_quantizers_fast", scope: !957, file: !957, line: 395, type: !2762, isLocal: true, isDefinition: true, scopeLine: 398, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!15634 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 532, column: 39, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15637, file: !957, line: 524, column: 52)
!15637 = distinct !DILexicalBlock(scope: !15638, file: !957, line: 524, column: 13)
!15638 = distinct !DILexicalBlock(scope: !15639, file: !957, line: 524, column: 13)
!15639 = distinct !DILexicalBlock(scope: !15640, file: !957, line: 523, column: 75)
!15640 = distinct !DILexicalBlock(scope: !15641, file: !957, line: 523, column: 9)
!15641 = distinct !DILexicalBlock(scope: !15642, file: !957, line: 523, column: 9)
!15642 = distinct !DILexicalBlock(scope: !15633, file: !957, line: 463, column: 8)
!15643 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !15635)
!15644 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !15635)
!15645 = !DILocation(line: 127, column: 87, scope: !2768, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 521, column: 21, scope: !15642)
!15647 = !DILocation(line: 127, column: 94, scope: !2768, inlinedAt: !15646)
!15648 = !DILocation(line: 127, column: 104, scope: !2768, inlinedAt: !15646)
!15649 = !DILocalVariable(name: "avctx", arg: 1, scope: !15633, file: !957, line: 395, type: !968)
!15650 = !DILocation(line: 395, column: 56, scope: !15633)
!15651 = !DILocalVariable(name: "s", arg: 2, scope: !15633, file: !957, line: 395, type: !2764)
!15652 = !DILocation(line: 395, column: 78, scope: !15633)
!15653 = !DILocalVariable(name: "sce", arg: 3, scope: !15633, file: !957, line: 396, type: !2458)
!15654 = !DILocation(line: 396, column: 62, scope: !15633)
!15655 = !DILocalVariable(name: "lambda", arg: 4, scope: !15633, file: !957, line: 397, type: !1781)
!15656 = !DILocation(line: 397, column: 52, scope: !15633)
!15657 = !DILocalVariable(name: "start", scope: !15633, file: !957, line: 399, type: !991)
!15658 = !DILocation(line: 399, column: 9, scope: !15633)
!15659 = !DILocalVariable(name: "i", scope: !15633, file: !957, line: 399, type: !991)
!15660 = !DILocation(line: 399, column: 20, scope: !15633)
!15661 = !DILocalVariable(name: "w", scope: !15633, file: !957, line: 399, type: !991)
!15662 = !DILocation(line: 399, column: 23, scope: !15633)
!15663 = !DILocalVariable(name: "w2", scope: !15633, file: !957, line: 399, type: !991)
!15664 = !DILocation(line: 399, column: 26, scope: !15633)
!15665 = !DILocalVariable(name: "g", scope: !15633, file: !957, line: 399, type: !991)
!15666 = !DILocation(line: 399, column: 30, scope: !15633)
!15667 = !DILocalVariable(name: "destbits", scope: !15633, file: !957, line: 400, type: !991)
!15668 = !DILocation(line: 400, column: 9, scope: !15633)
!15669 = !DILocation(line: 400, column: 20, scope: !15633)
!15670 = !DILocation(line: 400, column: 27, scope: !15633)
!15671 = !DILocation(line: 400, column: 36, scope: !15633)
!15672 = !DILocation(line: 400, column: 47, scope: !15633)
!15673 = !DILocation(line: 400, column: 54, scope: !15633)
!15674 = !DILocation(line: 400, column: 45, scope: !15633)
!15675 = !DILocation(line: 400, column: 68, scope: !15633)
!15676 = !DILocation(line: 400, column: 75, scope: !15633)
!15677 = !DILocation(line: 400, column: 66, scope: !15633)
!15678 = !DILocation(line: 400, column: 87, scope: !15633)
!15679 = !DILocation(line: 400, column: 94, scope: !15633)
!15680 = !DILocation(line: 400, column: 86, scope: !15633)
!15681 = !DILocation(line: 400, column: 84, scope: !15633)
!15682 = !DILocalVariable(name: "dists", scope: !15633, file: !957, line: 401, type: !1996)
!15683 = !DILocation(line: 401, column: 11, scope: !15633)
!15684 = !DILocalVariable(name: "uplims", scope: !15633, file: !957, line: 401, type: !1996)
!15685 = !DILocation(line: 401, column: 31, scope: !15633)
!15686 = !DILocation(line: 401, column: 31, scope: !15687)
!15687 = !DILexicalBlockFile(scope: !15633, file: !957, discriminator: 1)
!15688 = !DILocalVariable(name: "maxvals", scope: !15633, file: !957, line: 402, type: !1996)
!15689 = !DILocation(line: 402, column: 11, scope: !15633)
!15690 = !DILocalVariable(name: "fflag", scope: !15633, file: !957, line: 403, type: !991)
!15691 = !DILocation(line: 403, column: 9, scope: !15633)
!15692 = !DILocalVariable(name: "minscaler", scope: !15633, file: !957, line: 403, type: !991)
!15693 = !DILocation(line: 403, column: 16, scope: !15633)
!15694 = !DILocalVariable(name: "its", scope: !15633, file: !957, line: 404, type: !991)
!15695 = !DILocation(line: 404, column: 9, scope: !15633)
!15696 = !DILocalVariable(name: "allz", scope: !15633, file: !957, line: 405, type: !991)
!15697 = !DILocation(line: 405, column: 9, scope: !15633)
!15698 = !DILocalVariable(name: "minthr", scope: !15633, file: !957, line: 406, type: !954)
!15699 = !DILocation(line: 406, column: 11, scope: !15633)
!15700 = !DILocation(line: 410, column: 18, scope: !15633)
!15701 = !DILocation(line: 410, column: 28, scope: !15633)
!15702 = !DILocation(line: 410, column: 17, scope: !15633)
!15703 = !DILocation(line: 410, column: 17, scope: !15687)
!15704 = !DILocation(line: 410, column: 49, scope: !15705)
!15705 = !DILexicalBlockFile(scope: !15633, file: !957, discriminator: 2)
!15706 = !DILocation(line: 410, column: 17, scope: !15705)
!15707 = !DILocation(line: 410, column: 17, scope: !15708)
!15708 = !DILexicalBlockFile(scope: !15633, file: !957, discriminator: 3)
!15709 = !DILocation(line: 410, column: 14, scope: !15708)
!15710 = !DILocation(line: 413, column: 12, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15633, file: !957, line: 413, column: 5)
!15712 = !DILocation(line: 413, column: 10, scope: !15711)
!15713 = !DILocation(line: 413, column: 17, scope: !15714)
!15714 = !DILexicalBlockFile(scope: !15715, file: !957, discriminator: 1)
!15715 = distinct !DILexicalBlock(scope: !15711, file: !957, line: 413, column: 5)
!15716 = !DILocation(line: 413, column: 21, scope: !15714)
!15717 = !DILocation(line: 413, column: 26, scope: !15714)
!15718 = !DILocation(line: 413, column: 30, scope: !15714)
!15719 = !DILocation(line: 413, column: 19, scope: !15714)
!15720 = !DILocation(line: 413, column: 5, scope: !15714)
!15721 = !DILocation(line: 414, column: 15, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15715, file: !957, line: 413, column: 71)
!15723 = !DILocation(line: 415, column: 16, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15722, file: !957, line: 415, column: 9)
!15725 = !DILocation(line: 415, column: 14, scope: !15724)
!15726 = !DILocation(line: 415, column: 21, scope: !15727)
!15727 = !DILexicalBlockFile(scope: !15728, file: !957, discriminator: 1)
!15728 = distinct !DILexicalBlock(scope: !15724, file: !957, line: 415, column: 9)
!15729 = !DILocation(line: 415, column: 25, scope: !15727)
!15730 = !DILocation(line: 415, column: 30, scope: !15727)
!15731 = !DILocation(line: 415, column: 34, scope: !15727)
!15732 = !DILocation(line: 415, column: 23, scope: !15727)
!15733 = !DILocation(line: 415, column: 9, scope: !15727)
!15734 = !DILocalVariable(name: "nz", scope: !15735, file: !957, line: 416, type: !991)
!15735 = distinct !DILexicalBlock(scope: !15728, file: !957, line: 415, column: 48)
!15736 = !DILocation(line: 416, column: 17, scope: !15735)
!15737 = !DILocalVariable(name: "uplim", scope: !15735, file: !957, line: 417, type: !954)
!15738 = !DILocation(line: 417, column: 19, scope: !15735)
!15739 = !DILocalVariable(name: "energy", scope: !15735, file: !957, line: 417, type: !954)
!15740 = !DILocation(line: 417, column: 33, scope: !15735)
!15741 = !DILocation(line: 418, column: 21, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15735, file: !957, line: 418, column: 13)
!15743 = !DILocation(line: 418, column: 18, scope: !15742)
!15744 = !DILocation(line: 418, column: 26, scope: !15745)
!15745 = !DILexicalBlockFile(scope: !15746, file: !957, discriminator: 1)
!15746 = distinct !DILexicalBlock(scope: !15742, file: !957, line: 418, column: 13)
!15747 = !DILocation(line: 418, column: 50, scope: !15745)
!15748 = !DILocation(line: 418, column: 31, scope: !15745)
!15749 = !DILocation(line: 418, column: 36, scope: !15745)
!15750 = !DILocation(line: 418, column: 40, scope: !15745)
!15751 = !DILocation(line: 418, column: 29, scope: !15745)
!15752 = !DILocation(line: 418, column: 13, scope: !15745)
!15753 = !DILocalVariable(name: "band", scope: !15754, file: !957, line: 419, type: !3232)
!15754 = distinct !DILexicalBlock(scope: !15746, file: !957, line: 418, column: 60)
!15755 = !DILocation(line: 419, column: 28, scope: !15754)
!15756 = !DILocation(line: 419, column: 73, scope: !15754)
!15757 = !DILocation(line: 419, column: 75, scope: !15754)
!15758 = !DILocation(line: 419, column: 74, scope: !15754)
!15759 = !DILocation(line: 419, column: 78, scope: !15754)
!15760 = !DILocation(line: 419, column: 82, scope: !15754)
!15761 = !DILocation(line: 419, column: 81, scope: !15754)
!15762 = !DILocation(line: 419, column: 36, scope: !15754)
!15763 = !DILocation(line: 419, column: 46, scope: !15754)
!15764 = !DILocation(line: 419, column: 49, scope: !15754)
!15765 = !DILocation(line: 419, column: 39, scope: !15754)
!15766 = !DILocation(line: 419, column: 43, scope: !15754)
!15767 = !DILocation(line: 419, column: 62, scope: !15754)
!15768 = !DILocation(line: 420, column: 26, scope: !15754)
!15769 = !DILocation(line: 420, column: 32, scope: !15754)
!15770 = !DILocation(line: 420, column: 23, scope: !15754)
!15771 = !DILocation(line: 421, column: 27, scope: !15754)
!15772 = !DILocation(line: 421, column: 33, scope: !15754)
!15773 = !DILocation(line: 421, column: 24, scope: !15754)
!15774 = !DILocation(line: 422, column: 21, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15754, file: !957, line: 422, column: 21)
!15776 = !DILocation(line: 422, column: 27, scope: !15775)
!15777 = !DILocation(line: 422, column: 37, scope: !15775)
!15778 = !DILocation(line: 422, column: 43, scope: !15775)
!15779 = !DILocation(line: 422, column: 34, scope: !15775)
!15780 = !DILocation(line: 422, column: 53, scope: !15775)
!15781 = !DILocation(line: 422, column: 56, scope: !15782)
!15782 = !DILexicalBlockFile(scope: !15775, file: !957, discriminator: 1)
!15783 = !DILocation(line: 422, column: 62, scope: !15782)
!15784 = !DILocation(line: 422, column: 72, scope: !15782)
!15785 = !DILocation(line: 422, column: 21, scope: !15782)
!15786 = !DILocation(line: 423, column: 34, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15775, file: !957, line: 422, column: 81)
!15788 = !DILocation(line: 423, column: 36, scope: !15787)
!15789 = !DILocation(line: 423, column: 35, scope: !15787)
!15790 = !DILocation(line: 423, column: 39, scope: !15787)
!15791 = !DILocation(line: 423, column: 43, scope: !15787)
!15792 = !DILocation(line: 423, column: 42, scope: !15787)
!15793 = !DILocation(line: 423, column: 21, scope: !15787)
!15794 = !DILocation(line: 423, column: 26, scope: !15787)
!15795 = !DILocation(line: 423, column: 46, scope: !15787)
!15796 = !DILocation(line: 424, column: 21, scope: !15787)
!15797 = !DILocation(line: 426, column: 20, scope: !15754)
!15798 = !DILocation(line: 427, column: 13, scope: !15754)
!15799 = !DILocation(line: 418, column: 56, scope: !15800)
!15800 = !DILexicalBlockFile(scope: !15746, file: !957, discriminator: 2)
!15801 = !DILocation(line: 418, column: 13, scope: !15800)
!15802 = distinct !{!15802, !15803}
!15803 = !DILocation(line: 418, column: 13, scope: !15735)
!15804 = !DILocation(line: 428, column: 30, scope: !15735)
!15805 = !DILocation(line: 428, column: 36, scope: !15735)
!15806 = !DILocation(line: 428, column: 20, scope: !15735)
!15807 = !DILocation(line: 428, column: 21, scope: !15735)
!15808 = !DILocation(line: 428, column: 25, scope: !15735)
!15809 = !DILocation(line: 428, column: 24, scope: !15735)
!15810 = !DILocation(line: 428, column: 13, scope: !15735)
!15811 = !DILocation(line: 428, column: 28, scope: !15735)
!15812 = !DILocation(line: 429, column: 28, scope: !15735)
!15813 = !DILocation(line: 429, column: 29, scope: !15735)
!15814 = !DILocation(line: 429, column: 33, scope: !15735)
!15815 = !DILocation(line: 429, column: 32, scope: !15735)
!15816 = !DILocation(line: 429, column: 13, scope: !15735)
!15817 = !DILocation(line: 429, column: 18, scope: !15735)
!15818 = !DILocation(line: 429, column: 36, scope: !15735)
!15819 = !DILocation(line: 430, column: 36, scope: !15735)
!15820 = !DILocation(line: 430, column: 35, scope: !15735)
!15821 = !DILocation(line: 430, column: 25, scope: !15735)
!15822 = !DILocation(line: 430, column: 26, scope: !15735)
!15823 = !DILocation(line: 430, column: 30, scope: !15735)
!15824 = !DILocation(line: 430, column: 29, scope: !15735)
!15825 = !DILocation(line: 430, column: 13, scope: !15735)
!15826 = !DILocation(line: 430, column: 18, scope: !15735)
!15827 = !DILocation(line: 430, column: 33, scope: !15735)
!15828 = !DILocation(line: 431, column: 17, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15735, file: !957, line: 431, column: 17)
!15830 = !DILocation(line: 431, column: 17, scope: !15735)
!15831 = !DILocation(line: 432, column: 28, scope: !15829)
!15832 = !DILocation(line: 432, column: 39, scope: !15829)
!15833 = !DILocation(line: 432, column: 36, scope: !15829)
!15834 = !DILocation(line: 432, column: 27, scope: !15829)
!15835 = !DILocation(line: 432, column: 49, scope: !15836)
!15836 = !DILexicalBlockFile(scope: !15829, file: !957, discriminator: 1)
!15837 = !DILocation(line: 432, column: 27, scope: !15836)
!15838 = !DILocation(line: 432, column: 59, scope: !15839)
!15839 = !DILexicalBlockFile(scope: !15829, file: !957, discriminator: 2)
!15840 = !DILocation(line: 432, column: 27, scope: !15839)
!15841 = !DILocation(line: 432, column: 27, scope: !15842)
!15842 = !DILexicalBlockFile(scope: !15829, file: !957, discriminator: 3)
!15843 = !DILocation(line: 432, column: 24, scope: !15842)
!15844 = !DILocation(line: 432, column: 17, scope: !15842)
!15845 = !DILocation(line: 433, column: 21, scope: !15735)
!15846 = !DILocation(line: 433, column: 18, scope: !15735)
!15847 = !DILocation(line: 434, column: 41, scope: !15735)
!15848 = !DILocation(line: 434, column: 22, scope: !15735)
!15849 = !DILocation(line: 434, column: 27, scope: !15735)
!15850 = !DILocation(line: 434, column: 31, scope: !15735)
!15851 = !DILocation(line: 434, column: 19, scope: !15735)
!15852 = !DILocation(line: 435, column: 9, scope: !15735)
!15853 = !DILocation(line: 415, column: 44, scope: !15854)
!15854 = !DILexicalBlockFile(scope: !15728, file: !957, discriminator: 2)
!15855 = !DILocation(line: 415, column: 9, scope: !15854)
!15856 = distinct !{!15856, !15857}
!15857 = !DILocation(line: 415, column: 9, scope: !15722)
!15858 = !DILocation(line: 436, column: 5, scope: !15722)
!15859 = !DILocation(line: 413, column: 67, scope: !15860)
!15860 = !DILexicalBlockFile(scope: !15715, file: !957, discriminator: 2)
!15861 = !DILocation(line: 413, column: 48, scope: !15860)
!15862 = !DILocation(line: 413, column: 53, scope: !15860)
!15863 = !DILocation(line: 413, column: 57, scope: !15860)
!15864 = !DILocation(line: 413, column: 45, scope: !15860)
!15865 = !DILocation(line: 413, column: 5, scope: !15860)
!15866 = distinct !{!15866, !15867}
!15867 = !DILocation(line: 413, column: 5, scope: !15633)
!15868 = !DILocation(line: 437, column: 12, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15633, file: !957, line: 437, column: 5)
!15870 = !DILocation(line: 437, column: 10, scope: !15869)
!15871 = !DILocation(line: 437, column: 17, scope: !15872)
!15872 = !DILexicalBlockFile(scope: !15873, file: !957, discriminator: 1)
!15873 = distinct !DILexicalBlock(scope: !15869, file: !957, line: 437, column: 5)
!15874 = !DILocation(line: 437, column: 21, scope: !15872)
!15875 = !DILocation(line: 437, column: 26, scope: !15872)
!15876 = !DILocation(line: 437, column: 30, scope: !15872)
!15877 = !DILocation(line: 437, column: 19, scope: !15872)
!15878 = !DILocation(line: 437, column: 5, scope: !15872)
!15879 = !DILocation(line: 438, column: 16, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !957, line: 438, column: 9)
!15881 = distinct !DILexicalBlock(scope: !15873, file: !957, line: 437, column: 71)
!15882 = !DILocation(line: 438, column: 14, scope: !15880)
!15883 = !DILocation(line: 438, column: 21, scope: !15884)
!15884 = !DILexicalBlockFile(scope: !15885, file: !957, discriminator: 1)
!15885 = distinct !DILexicalBlock(scope: !15880, file: !957, line: 438, column: 9)
!15886 = !DILocation(line: 438, column: 25, scope: !15884)
!15887 = !DILocation(line: 438, column: 30, scope: !15884)
!15888 = !DILocation(line: 438, column: 34, scope: !15884)
!15889 = !DILocation(line: 438, column: 23, scope: !15884)
!15890 = !DILocation(line: 438, column: 9, scope: !15884)
!15891 = !DILocation(line: 439, column: 29, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15893, file: !957, line: 439, column: 17)
!15893 = distinct !DILexicalBlock(scope: !15885, file: !957, line: 438, column: 48)
!15894 = !DILocation(line: 439, column: 30, scope: !15892)
!15895 = !DILocation(line: 439, column: 34, scope: !15892)
!15896 = !DILocation(line: 439, column: 33, scope: !15892)
!15897 = !DILocation(line: 439, column: 17, scope: !15892)
!15898 = !DILocation(line: 439, column: 22, scope: !15892)
!15899 = !DILocation(line: 439, column: 17, scope: !15893)
!15900 = !DILocation(line: 440, column: 29, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15892, file: !957, line: 439, column: 38)
!15902 = !DILocation(line: 440, column: 30, scope: !15901)
!15903 = !DILocation(line: 440, column: 34, scope: !15901)
!15904 = !DILocation(line: 440, column: 33, scope: !15901)
!15905 = !DILocation(line: 440, column: 17, scope: !15901)
!15906 = !DILocation(line: 440, column: 22, scope: !15901)
!15907 = !DILocation(line: 440, column: 37, scope: !15901)
!15908 = !DILocation(line: 441, column: 17, scope: !15901)
!15909 = !DILocation(line: 443, column: 56, scope: !15893)
!15910 = !DILocation(line: 443, column: 57, scope: !15893)
!15911 = !DILocation(line: 443, column: 61, scope: !15893)
!15912 = !DILocation(line: 443, column: 60, scope: !15893)
!15913 = !DILocation(line: 443, column: 49, scope: !15893)
!15914 = !DILocation(line: 443, column: 64, scope: !15893)
!15915 = !DILocation(line: 443, column: 63, scope: !15893)
!15916 = !DILocation(line: 443, column: 43, scope: !15893)
!15917 = !DILocation(line: 443, column: 71, scope: !15893)
!15918 = !DILocation(line: 443, column: 75, scope: !15893)
!15919 = !DILocation(line: 443, column: 42, scope: !15893)
!15920 = !DILocation(line: 443, column: 42, scope: !15921)
!15921 = !DILexicalBlockFile(scope: !15893, file: !957, discriminator: 1)
!15922 = !DILocation(line: 443, column: 105, scope: !15923)
!15923 = !DILexicalBlockFile(scope: !15893, file: !957, discriminator: 2)
!15924 = !DILocation(line: 443, column: 106, scope: !15923)
!15925 = !DILocation(line: 443, column: 110, scope: !15923)
!15926 = !DILocation(line: 443, column: 109, scope: !15923)
!15927 = !DILocation(line: 443, column: 98, scope: !15923)
!15928 = !DILocation(line: 443, column: 113, scope: !15923)
!15929 = !DILocation(line: 443, column: 112, scope: !15923)
!15930 = !DILocation(line: 443, column: 92, scope: !15923)
!15931 = !DILocation(line: 443, column: 120, scope: !15923)
!15932 = !DILocation(line: 443, column: 42, scope: !15923)
!15933 = !DILocation(line: 443, column: 42, scope: !15934)
!15934 = !DILexicalBlockFile(scope: !15893, file: !957, discriminator: 3)
!15935 = !DILocation(line: 443, column: 39, scope: !15934)
!15936 = !DILocation(line: 443, column: 35, scope: !15934)
!15937 = !DILocation(line: 443, column: 25, scope: !15934)
!15938 = !DILocation(line: 443, column: 26, scope: !15934)
!15939 = !DILocation(line: 443, column: 30, scope: !15934)
!15940 = !DILocation(line: 443, column: 29, scope: !15934)
!15941 = !DILocation(line: 443, column: 13, scope: !15934)
!15942 = !DILocation(line: 443, column: 18, scope: !15934)
!15943 = !DILocation(line: 443, column: 33, scope: !15934)
!15944 = !DILocation(line: 444, column: 9, scope: !15893)
!15945 = !DILocation(line: 438, column: 44, scope: !15946)
!15946 = !DILexicalBlockFile(scope: !15885, file: !957, discriminator: 2)
!15947 = !DILocation(line: 438, column: 9, scope: !15946)
!15948 = distinct !{!15948, !15949}
!15949 = !DILocation(line: 438, column: 9, scope: !15881)
!15950 = !DILocation(line: 445, column: 5, scope: !15881)
!15951 = !DILocation(line: 437, column: 67, scope: !15952)
!15952 = !DILexicalBlockFile(scope: !15873, file: !957, discriminator: 2)
!15953 = !DILocation(line: 437, column: 48, scope: !15952)
!15954 = !DILocation(line: 437, column: 53, scope: !15952)
!15955 = !DILocation(line: 437, column: 57, scope: !15952)
!15956 = !DILocation(line: 437, column: 45, scope: !15952)
!15957 = !DILocation(line: 437, column: 5, scope: !15952)
!15958 = distinct !{!15958, !15959}
!15959 = !DILocation(line: 437, column: 5, scope: !15633)
!15960 = !DILocation(line: 447, column: 10, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15633, file: !957, line: 447, column: 9)
!15962 = !DILocation(line: 447, column: 9, scope: !15633)
!15963 = !DILocation(line: 448, column: 9, scope: !15961)
!15964 = !DILocation(line: 449, column: 5, scope: !15633)
!15965 = !DILocation(line: 449, column: 8, scope: !15633)
!15966 = !DILocation(line: 449, column: 18, scope: !15633)
!15967 = !DILocation(line: 449, column: 21, scope: !15633)
!15968 = !DILocation(line: 449, column: 29, scope: !15633)
!15969 = !DILocation(line: 449, column: 34, scope: !15633)
!15970 = !DILocation(line: 450, column: 38, scope: !15633)
!15971 = !DILocation(line: 450, column: 5, scope: !15633)
!15972 = !DILocation(line: 452, column: 12, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15633, file: !957, line: 452, column: 5)
!15974 = !DILocation(line: 452, column: 10, scope: !15973)
!15975 = !DILocation(line: 452, column: 17, scope: !15976)
!15976 = !DILexicalBlockFile(scope: !15977, file: !957, discriminator: 1)
!15977 = distinct !DILexicalBlock(scope: !15973, file: !957, line: 452, column: 5)
!15978 = !DILocation(line: 452, column: 21, scope: !15976)
!15979 = !DILocation(line: 452, column: 26, scope: !15976)
!15980 = !DILocation(line: 452, column: 30, scope: !15976)
!15981 = !DILocation(line: 452, column: 19, scope: !15976)
!15982 = !DILocation(line: 452, column: 5, scope: !15976)
!15983 = !DILocation(line: 453, column: 17, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15977, file: !957, line: 452, column: 71)
!15985 = !DILocation(line: 453, column: 18, scope: !15984)
!15986 = !DILocation(line: 453, column: 15, scope: !15984)
!15987 = !DILocation(line: 454, column: 16, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15984, file: !957, line: 454, column: 9)
!15989 = !DILocation(line: 454, column: 14, scope: !15988)
!15990 = !DILocation(line: 454, column: 21, scope: !15991)
!15991 = !DILexicalBlockFile(scope: !15992, file: !957, discriminator: 1)
!15992 = distinct !DILexicalBlock(scope: !15988, file: !957, line: 454, column: 9)
!15993 = !DILocation(line: 454, column: 25, scope: !15991)
!15994 = !DILocation(line: 454, column: 30, scope: !15991)
!15995 = !DILocation(line: 454, column: 34, scope: !15991)
!15996 = !DILocation(line: 454, column: 23, scope: !15991)
!15997 = !DILocation(line: 454, column: 9, scope: !15991)
!15998 = !DILocalVariable(name: "scaled", scope: !15999, file: !957, line: 455, type: !1780)
!15999 = distinct !DILexicalBlock(scope: !15992, file: !957, line: 454, column: 48)
!16000 = !DILocation(line: 455, column: 26, scope: !15999)
!16001 = !DILocation(line: 455, column: 35, scope: !15999)
!16002 = !DILocation(line: 455, column: 38, scope: !15999)
!16003 = !DILocation(line: 455, column: 47, scope: !15999)
!16004 = !DILocation(line: 455, column: 45, scope: !15999)
!16005 = !DILocation(line: 456, column: 63, scope: !15999)
!16006 = !DILocation(line: 456, column: 44, scope: !15999)
!16007 = !DILocation(line: 456, column: 49, scope: !15999)
!16008 = !DILocation(line: 456, column: 53, scope: !15999)
!16009 = !DILocation(line: 456, column: 86, scope: !15999)
!16010 = !DILocation(line: 456, column: 67, scope: !15999)
!16011 = !DILocation(line: 456, column: 72, scope: !15999)
!16012 = !DILocation(line: 456, column: 76, scope: !15999)
!16013 = !DILocation(line: 456, column: 90, scope: !15999)
!16014 = !DILocation(line: 456, column: 31, scope: !15999)
!16015 = !DILocation(line: 456, column: 21, scope: !15999)
!16016 = !DILocation(line: 456, column: 22, scope: !15999)
!16017 = !DILocation(line: 456, column: 26, scope: !15999)
!16018 = !DILocation(line: 456, column: 25, scope: !15999)
!16019 = !DILocation(line: 456, column: 13, scope: !15999)
!16020 = !DILocation(line: 456, column: 29, scope: !15999)
!16021 = !DILocation(line: 457, column: 41, scope: !15999)
!16022 = !DILocation(line: 457, column: 22, scope: !15999)
!16023 = !DILocation(line: 457, column: 27, scope: !15999)
!16024 = !DILocation(line: 457, column: 31, scope: !15999)
!16025 = !DILocation(line: 457, column: 19, scope: !15999)
!16026 = !DILocation(line: 458, column: 9, scope: !15999)
!16027 = !DILocation(line: 454, column: 44, scope: !16028)
!16028 = !DILexicalBlockFile(scope: !15992, file: !957, discriminator: 2)
!16029 = !DILocation(line: 454, column: 9, scope: !16028)
!16030 = distinct !{!16030, !16031}
!16031 = !DILocation(line: 454, column: 9, scope: !15984)
!16032 = !DILocation(line: 459, column: 5, scope: !15984)
!16033 = !DILocation(line: 452, column: 67, scope: !16034)
!16034 = !DILexicalBlockFile(scope: !15977, file: !957, discriminator: 2)
!16035 = !DILocation(line: 452, column: 48, scope: !16034)
!16036 = !DILocation(line: 452, column: 53, scope: !16034)
!16037 = !DILocation(line: 452, column: 57, scope: !16034)
!16038 = !DILocation(line: 452, column: 45, scope: !16034)
!16039 = !DILocation(line: 452, column: 5, scope: !16034)
!16040 = distinct !{!16040, !16041}
!16041 = !DILocation(line: 452, column: 5, scope: !15633)
!16042 = !DILocation(line: 463, column: 5, scope: !15633)
!16043 = distinct !{!16043, !16042}
!16044 = !DILocalVariable(name: "tbits", scope: !15642, file: !957, line: 464, type: !991)
!16045 = !DILocation(line: 464, column: 13, scope: !15642)
!16046 = !DILocalVariable(name: "qstep", scope: !15642, file: !957, line: 464, type: !991)
!16047 = !DILocation(line: 464, column: 20, scope: !15642)
!16048 = !DILocation(line: 465, column: 21, scope: !15642)
!16049 = !DILocation(line: 465, column: 26, scope: !15642)
!16050 = !DILocation(line: 465, column: 19, scope: !15642)
!16051 = !DILocation(line: 467, column: 17, scope: !15642)
!16052 = !DILocation(line: 467, column: 15, scope: !15642)
!16053 = !DILocation(line: 468, column: 9, scope: !15642)
!16054 = distinct !{!16054, !16053}
!16055 = !DILocalVariable(name: "prev", scope: !16056, file: !957, line: 469, type: !991)
!16056 = distinct !DILexicalBlock(scope: !15642, file: !957, line: 468, column: 12)
!16057 = !DILocation(line: 469, column: 17, scope: !16056)
!16058 = !DILocation(line: 470, column: 19, scope: !16056)
!16059 = !DILocation(line: 471, column: 20, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16056, file: !957, line: 471, column: 13)
!16061 = !DILocation(line: 471, column: 18, scope: !16060)
!16062 = !DILocation(line: 471, column: 25, scope: !16063)
!16063 = !DILexicalBlockFile(scope: !16064, file: !957, discriminator: 1)
!16064 = distinct !DILexicalBlock(scope: !16060, file: !957, line: 471, column: 13)
!16065 = !DILocation(line: 471, column: 29, scope: !16063)
!16066 = !DILocation(line: 471, column: 34, scope: !16063)
!16067 = !DILocation(line: 471, column: 38, scope: !16063)
!16068 = !DILocation(line: 471, column: 27, scope: !16063)
!16069 = !DILocation(line: 471, column: 13, scope: !16063)
!16070 = !DILocation(line: 472, column: 25, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16064, file: !957, line: 471, column: 79)
!16072 = !DILocation(line: 472, column: 26, scope: !16071)
!16073 = !DILocation(line: 472, column: 23, scope: !16071)
!16074 = !DILocation(line: 473, column: 24, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16071, file: !957, line: 473, column: 17)
!16076 = !DILocation(line: 473, column: 22, scope: !16075)
!16077 = !DILocation(line: 473, column: 29, scope: !16078)
!16078 = !DILexicalBlockFile(scope: !16079, file: !957, discriminator: 1)
!16079 = distinct !DILexicalBlock(scope: !16075, file: !957, line: 473, column: 17)
!16080 = !DILocation(line: 473, column: 33, scope: !16078)
!16081 = !DILocation(line: 473, column: 38, scope: !16078)
!16082 = !DILocation(line: 473, column: 42, scope: !16078)
!16083 = !DILocation(line: 473, column: 31, scope: !16078)
!16084 = !DILocation(line: 473, column: 17, scope: !16078)
!16085 = !DILocalVariable(name: "coefs", scope: !16086, file: !957, line: 474, type: !1780)
!16086 = distinct !DILexicalBlock(scope: !16079, file: !957, line: 473, column: 56)
!16087 = !DILocation(line: 474, column: 34, scope: !16086)
!16088 = !DILocation(line: 474, column: 42, scope: !16086)
!16089 = !DILocation(line: 474, column: 47, scope: !16086)
!16090 = !DILocation(line: 474, column: 56, scope: !16086)
!16091 = !DILocation(line: 474, column: 54, scope: !16086)
!16092 = !DILocalVariable(name: "scaled", scope: !16086, file: !957, line: 475, type: !1780)
!16093 = !DILocation(line: 475, column: 34, scope: !16086)
!16094 = !DILocation(line: 475, column: 43, scope: !16086)
!16095 = !DILocation(line: 475, column: 46, scope: !16086)
!16096 = !DILocation(line: 475, column: 55, scope: !16086)
!16097 = !DILocation(line: 475, column: 53, scope: !16086)
!16098 = !DILocalVariable(name: "bits", scope: !16086, file: !957, line: 476, type: !991)
!16099 = !DILocation(line: 476, column: 25, scope: !16086)
!16100 = !DILocalVariable(name: "cb", scope: !16086, file: !957, line: 477, type: !991)
!16101 = !DILocation(line: 477, column: 25, scope: !16086)
!16102 = !DILocalVariable(name: "dist", scope: !16086, file: !957, line: 478, type: !954)
!16103 = !DILocation(line: 478, column: 27, scope: !16086)
!16104 = !DILocation(line: 480, column: 37, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16086, file: !957, line: 480, column: 25)
!16106 = !DILocation(line: 480, column: 38, scope: !16105)
!16107 = !DILocation(line: 480, column: 42, scope: !16105)
!16108 = !DILocation(line: 480, column: 41, scope: !16105)
!16109 = !DILocation(line: 480, column: 25, scope: !16105)
!16110 = !DILocation(line: 480, column: 30, scope: !16105)
!16111 = !DILocation(line: 480, column: 45, scope: !16105)
!16112 = !DILocation(line: 480, column: 60, scope: !16113)
!16113 = !DILexicalBlockFile(scope: !16105, file: !957, discriminator: 1)
!16114 = !DILocation(line: 480, column: 61, scope: !16113)
!16115 = !DILocation(line: 480, column: 65, scope: !16113)
!16116 = !DILocation(line: 480, column: 64, scope: !16113)
!16117 = !DILocation(line: 480, column: 48, scope: !16113)
!16118 = !DILocation(line: 480, column: 53, scope: !16113)
!16119 = !DILocation(line: 480, column: 68, scope: !16113)
!16120 = !DILocation(line: 480, column: 25, scope: !16113)
!16121 = !DILocation(line: 481, column: 53, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16105, file: !957, line: 480, column: 76)
!16123 = !DILocation(line: 481, column: 34, scope: !16122)
!16124 = !DILocation(line: 481, column: 39, scope: !16122)
!16125 = !DILocation(line: 481, column: 43, scope: !16122)
!16126 = !DILocation(line: 481, column: 31, scope: !16122)
!16127 = !DILocation(line: 482, column: 25, scope: !16122)
!16128 = !DILocation(line: 484, column: 35, scope: !16086)
!16129 = !DILocation(line: 484, column: 61, scope: !16086)
!16130 = !DILocation(line: 484, column: 62, scope: !16086)
!16131 = !DILocation(line: 484, column: 66, scope: !16086)
!16132 = !DILocation(line: 484, column: 65, scope: !16086)
!16133 = !DILocation(line: 484, column: 49, scope: !16086)
!16134 = !DILocation(line: 484, column: 54, scope: !16086)
!16135 = !DILocation(line: 484, column: 46, scope: !16086)
!16136 = !DILocation(line: 484, column: 34, scope: !16086)
!16137 = !DILocation(line: 484, column: 85, scope: !16138)
!16138 = !DILexicalBlockFile(scope: !16086, file: !957, discriminator: 1)
!16139 = !DILocation(line: 484, column: 86, scope: !16138)
!16140 = !DILocation(line: 484, column: 90, scope: !16138)
!16141 = !DILocation(line: 484, column: 89, scope: !16138)
!16142 = !DILocation(line: 484, column: 73, scope: !16138)
!16143 = !DILocation(line: 484, column: 78, scope: !16138)
!16144 = !DILocation(line: 484, column: 34, scope: !16138)
!16145 = !DILocation(line: 484, column: 97, scope: !16146)
!16146 = !DILexicalBlockFile(scope: !16086, file: !957, discriminator: 2)
!16147 = !DILocation(line: 484, column: 34, scope: !16146)
!16148 = !DILocation(line: 484, column: 34, scope: !16149)
!16149 = !DILexicalBlockFile(scope: !16086, file: !957, discriminator: 3)
!16150 = !DILocation(line: 484, column: 31, scope: !16149)
!16151 = !DILocation(line: 485, column: 48, scope: !16086)
!16152 = !DILocation(line: 485, column: 49, scope: !16086)
!16153 = !DILocation(line: 485, column: 53, scope: !16086)
!16154 = !DILocation(line: 485, column: 52, scope: !16086)
!16155 = !DILocation(line: 485, column: 40, scope: !16086)
!16156 = !DILocation(line: 485, column: 69, scope: !16086)
!16157 = !DILocation(line: 485, column: 70, scope: !16086)
!16158 = !DILocation(line: 485, column: 74, scope: !16086)
!16159 = !DILocation(line: 485, column: 73, scope: !16086)
!16160 = !DILocation(line: 485, column: 57, scope: !16086)
!16161 = !DILocation(line: 485, column: 62, scope: !16086)
!16162 = !DILocation(line: 485, column: 26, scope: !16086)
!16163 = !DILocation(line: 485, column: 24, scope: !16086)
!16164 = !DILocation(line: 486, column: 29, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16086, file: !957, line: 486, column: 21)
!16166 = !DILocation(line: 486, column: 26, scope: !16165)
!16167 = !DILocation(line: 486, column: 34, scope: !16168)
!16168 = !DILexicalBlockFile(scope: !16169, file: !957, discriminator: 1)
!16169 = distinct !DILexicalBlock(scope: !16165, file: !957, line: 486, column: 21)
!16170 = !DILocation(line: 486, column: 58, scope: !16168)
!16171 = !DILocation(line: 486, column: 39, scope: !16168)
!16172 = !DILocation(line: 486, column: 44, scope: !16168)
!16173 = !DILocation(line: 486, column: 48, scope: !16168)
!16174 = !DILocation(line: 486, column: 37, scope: !16168)
!16175 = !DILocation(line: 486, column: 21, scope: !16168)
!16176 = !DILocalVariable(name: "b", scope: !16177, file: !957, line: 487, type: !991)
!16177 = distinct !DILexicalBlock(scope: !16169, file: !957, line: 486, column: 68)
!16178 = !DILocation(line: 487, column: 29, scope: !16177)
!16179 = !DILocation(line: 488, column: 59, scope: !16177)
!16180 = !DILocation(line: 488, column: 62, scope: !16177)
!16181 = !DILocation(line: 488, column: 66, scope: !16177)
!16182 = !DILocation(line: 488, column: 64, scope: !16177)
!16183 = !DILocation(line: 488, column: 70, scope: !16177)
!16184 = !DILocation(line: 489, column: 59, scope: !16177)
!16185 = !DILocation(line: 489, column: 67, scope: !16177)
!16186 = !DILocation(line: 489, column: 69, scope: !16177)
!16187 = !DILocation(line: 489, column: 65, scope: !16177)
!16188 = !DILocation(line: 490, column: 59, scope: !16177)
!16189 = !DILocation(line: 490, column: 68, scope: !16177)
!16190 = !DILocation(line: 490, column: 70, scope: !16177)
!16191 = !DILocation(line: 490, column: 66, scope: !16177)
!16192 = !DILocation(line: 491, column: 78, scope: !16177)
!16193 = !DILocation(line: 491, column: 59, scope: !16177)
!16194 = !DILocation(line: 491, column: 64, scope: !16177)
!16195 = !DILocation(line: 491, column: 68, scope: !16177)
!16196 = !DILocation(line: 492, column: 71, scope: !16177)
!16197 = !DILocation(line: 492, column: 72, scope: !16177)
!16198 = !DILocation(line: 492, column: 76, scope: !16177)
!16199 = !DILocation(line: 492, column: 75, scope: !16177)
!16200 = !DILocation(line: 492, column: 59, scope: !16177)
!16201 = !DILocation(line: 492, column: 64, scope: !16177)
!16202 = !DILocation(line: 493, column: 59, scope: !16177)
!16203 = !DILocation(line: 488, column: 33, scope: !16177)
!16204 = !DILocation(line: 488, column: 30, scope: !16177)
!16205 = !DILocation(line: 495, column: 33, scope: !16177)
!16206 = !DILocation(line: 495, column: 30, scope: !16177)
!16207 = !DILocation(line: 496, column: 21, scope: !16177)
!16208 = !DILocation(line: 486, column: 64, scope: !16209)
!16209 = !DILexicalBlockFile(scope: !16169, file: !957, discriminator: 2)
!16210 = !DILocation(line: 486, column: 21, scope: !16209)
!16211 = distinct !{!16211, !16212}
!16212 = !DILocation(line: 486, column: 21, scope: !16086)
!16213 = !DILocation(line: 497, column: 37, scope: !16086)
!16214 = !DILocation(line: 497, column: 44, scope: !16086)
!16215 = !DILocation(line: 497, column: 42, scope: !16086)
!16216 = !DILocation(line: 497, column: 27, scope: !16086)
!16217 = !DILocation(line: 497, column: 28, scope: !16086)
!16218 = !DILocation(line: 497, column: 32, scope: !16086)
!16219 = !DILocation(line: 497, column: 31, scope: !16086)
!16220 = !DILocation(line: 497, column: 21, scope: !16086)
!16221 = !DILocation(line: 497, column: 35, scope: !16086)
!16222 = !DILocation(line: 498, column: 25, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16086, file: !957, line: 498, column: 25)
!16224 = !DILocation(line: 498, column: 30, scope: !16223)
!16225 = !DILocation(line: 498, column: 25, scope: !16086)
!16226 = !DILocation(line: 499, column: 69, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16223, file: !957, line: 498, column: 37)
!16228 = !DILocation(line: 499, column: 70, scope: !16227)
!16229 = !DILocation(line: 499, column: 74, scope: !16227)
!16230 = !DILocation(line: 499, column: 73, scope: !16227)
!16231 = !DILocation(line: 499, column: 57, scope: !16227)
!16232 = !DILocation(line: 499, column: 62, scope: !16227)
!16233 = !DILocation(line: 499, column: 79, scope: !16227)
!16234 = !DILocation(line: 499, column: 77, scope: !16227)
!16235 = !DILocation(line: 499, column: 84, scope: !16227)
!16236 = !DILocation(line: 499, column: 33, scope: !16227)
!16237 = !DILocation(line: 499, column: 30, scope: !16227)
!16238 = !DILocation(line: 500, column: 21, scope: !16227)
!16239 = !DILocation(line: 501, column: 30, scope: !16086)
!16240 = !DILocation(line: 501, column: 27, scope: !16086)
!16241 = !DILocation(line: 502, column: 49, scope: !16086)
!16242 = !DILocation(line: 502, column: 30, scope: !16086)
!16243 = !DILocation(line: 502, column: 35, scope: !16086)
!16244 = !DILocation(line: 502, column: 39, scope: !16086)
!16245 = !DILocation(line: 502, column: 27, scope: !16086)
!16246 = !DILocation(line: 503, column: 40, scope: !16086)
!16247 = !DILocation(line: 503, column: 41, scope: !16086)
!16248 = !DILocation(line: 503, column: 45, scope: !16086)
!16249 = !DILocation(line: 503, column: 44, scope: !16086)
!16250 = !DILocation(line: 503, column: 28, scope: !16086)
!16251 = !DILocation(line: 503, column: 33, scope: !16086)
!16252 = !DILocation(line: 503, column: 26, scope: !16086)
!16253 = !DILocation(line: 504, column: 17, scope: !16086)
!16254 = !DILocation(line: 473, column: 52, scope: !16255)
!16255 = !DILexicalBlockFile(scope: !16079, file: !957, discriminator: 2)
!16256 = !DILocation(line: 473, column: 17, scope: !16255)
!16257 = distinct !{!16257, !16258}
!16258 = !DILocation(line: 473, column: 17, scope: !16071)
!16259 = !DILocation(line: 505, column: 13, scope: !16071)
!16260 = !DILocation(line: 471, column: 75, scope: !16261)
!16261 = !DILexicalBlockFile(scope: !16064, file: !957, discriminator: 2)
!16262 = !DILocation(line: 471, column: 56, scope: !16261)
!16263 = !DILocation(line: 471, column: 61, scope: !16261)
!16264 = !DILocation(line: 471, column: 65, scope: !16261)
!16265 = !DILocation(line: 471, column: 53, scope: !16261)
!16266 = !DILocation(line: 471, column: 13, scope: !16261)
!16267 = distinct !{!16267, !16268}
!16268 = !DILocation(line: 471, column: 13, scope: !16056)
!16269 = !DILocation(line: 506, column: 17, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16056, file: !957, line: 506, column: 17)
!16271 = !DILocation(line: 506, column: 25, scope: !16270)
!16272 = !DILocation(line: 506, column: 23, scope: !16270)
!16273 = !DILocation(line: 506, column: 17, scope: !16056)
!16274 = !DILocation(line: 507, column: 24, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16276, file: !957, line: 507, column: 17)
!16276 = distinct !DILexicalBlock(scope: !16270, file: !957, line: 506, column: 35)
!16277 = !DILocation(line: 507, column: 22, scope: !16275)
!16278 = !DILocation(line: 507, column: 29, scope: !16279)
!16279 = !DILexicalBlockFile(scope: !16280, file: !957, discriminator: 1)
!16280 = distinct !DILexicalBlock(scope: !16275, file: !957, line: 507, column: 17)
!16281 = !DILocation(line: 507, column: 31, scope: !16279)
!16282 = !DILocation(line: 507, column: 17, scope: !16279)
!16283 = !DILocation(line: 508, column: 37, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16280, file: !957, line: 508, column: 25)
!16285 = !DILocation(line: 508, column: 25, scope: !16284)
!16286 = !DILocation(line: 508, column: 30, scope: !16284)
!16287 = !DILocation(line: 508, column: 48, scope: !16284)
!16288 = !DILocation(line: 508, column: 46, scope: !16284)
!16289 = !DILocation(line: 508, column: 40, scope: !16284)
!16290 = !DILocation(line: 508, column: 25, scope: !16280)
!16291 = !DILocation(line: 509, column: 43, scope: !16284)
!16292 = !DILocation(line: 509, column: 37, scope: !16284)
!16293 = !DILocation(line: 509, column: 25, scope: !16284)
!16294 = !DILocation(line: 509, column: 30, scope: !16284)
!16295 = !DILocation(line: 509, column: 40, scope: !16284)
!16296 = !DILocation(line: 508, column: 48, scope: !16297)
!16297 = !DILexicalBlockFile(scope: !16284, file: !957, discriminator: 1)
!16298 = !DILocation(line: 507, column: 39, scope: !16299)
!16299 = !DILexicalBlockFile(scope: !16280, file: !957, discriminator: 2)
!16300 = !DILocation(line: 507, column: 17, scope: !16299)
!16301 = distinct !{!16301, !16302}
!16302 = !DILocation(line: 507, column: 17, scope: !16276)
!16303 = !DILocation(line: 510, column: 13, scope: !16276)
!16304 = !DILocation(line: 511, column: 24, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16306, file: !957, line: 511, column: 17)
!16306 = distinct !DILexicalBlock(scope: !16270, file: !957, line: 510, column: 20)
!16307 = !DILocation(line: 511, column: 22, scope: !16305)
!16308 = !DILocation(line: 511, column: 29, scope: !16309)
!16309 = !DILexicalBlockFile(scope: !16310, file: !957, discriminator: 1)
!16310 = distinct !DILexicalBlock(scope: !16305, file: !957, line: 511, column: 17)
!16311 = !DILocation(line: 511, column: 31, scope: !16309)
!16312 = !DILocation(line: 511, column: 17, scope: !16309)
!16313 = !DILocation(line: 512, column: 37, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16310, file: !957, line: 512, column: 25)
!16315 = !DILocation(line: 512, column: 25, scope: !16314)
!16316 = !DILocation(line: 512, column: 30, scope: !16314)
!16317 = !DILocation(line: 512, column: 47, scope: !16314)
!16318 = !DILocation(line: 512, column: 45, scope: !16314)
!16319 = !DILocation(line: 512, column: 40, scope: !16314)
!16320 = !DILocation(line: 512, column: 25, scope: !16310)
!16321 = !DILocation(line: 513, column: 43, scope: !16314)
!16322 = !DILocation(line: 513, column: 37, scope: !16314)
!16323 = !DILocation(line: 513, column: 25, scope: !16314)
!16324 = !DILocation(line: 513, column: 30, scope: !16314)
!16325 = !DILocation(line: 513, column: 40, scope: !16314)
!16326 = !DILocation(line: 512, column: 47, scope: !16327)
!16327 = !DILexicalBlockFile(scope: !16314, file: !957, discriminator: 1)
!16328 = !DILocation(line: 511, column: 39, scope: !16329)
!16329 = !DILexicalBlockFile(scope: !16310, file: !957, discriminator: 2)
!16330 = !DILocation(line: 511, column: 17, scope: !16329)
!16331 = distinct !{!16331, !16332}
!16332 = !DILocation(line: 511, column: 17, scope: !16306)
!16333 = !DILocation(line: 515, column: 19, scope: !16056)
!16334 = !DILocation(line: 516, column: 18, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16056, file: !957, line: 516, column: 17)
!16336 = !DILocation(line: 516, column: 24, scope: !16335)
!16337 = !DILocation(line: 516, column: 27, scope: !16338)
!16338 = !DILexicalBlockFile(scope: !16335, file: !957, discriminator: 1)
!16339 = !DILocation(line: 516, column: 35, scope: !16338)
!16340 = !DILocation(line: 516, column: 43, scope: !16338)
!16341 = !DILocation(line: 516, column: 33, scope: !16338)
!16342 = !DILocation(line: 516, column: 49, scope: !16338)
!16343 = !DILocation(line: 516, column: 52, scope: !16344)
!16344 = !DILexicalBlockFile(scope: !16335, file: !957, discriminator: 2)
!16345 = !DILocation(line: 516, column: 57, scope: !16344)
!16346 = !DILocation(line: 516, column: 67, scope: !16344)
!16347 = !DILocation(line: 516, column: 17, scope: !16344)
!16348 = !DILocation(line: 517, column: 23, scope: !16335)
!16349 = !DILocation(line: 517, column: 17, scope: !16335)
!16350 = !DILocation(line: 518, column: 9, scope: !16056)
!16351 = !DILocation(line: 518, column: 18, scope: !16352)
!16352 = !DILexicalBlockFile(scope: !15642, file: !957, discriminator: 1)
!16353 = !DILocation(line: 518, column: 9, scope: !16352)
!16354 = !DILocation(line: 520, column: 15, scope: !15642)
!16355 = !DILocation(line: 521, column: 31, scope: !15642)
!16356 = !DILocation(line: 521, column: 21, scope: !15642)
!16357 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !15646)
!16358 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !15646)
!16359 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !15646)
!16360 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !15646)
!16361 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !15646)
!16362 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !15646)
!16363 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !15646)
!16364 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !15646)
!16365 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !15646)
!16366 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !15646)
!16367 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !15646)
!16368 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !15646)
!16369 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !15646)
!16370 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !15646)
!16371 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !15646)
!16372 = !DILocation(line: 521, column: 19, scope: !15642)
!16373 = !DILocation(line: 523, column: 16, scope: !15641)
!16374 = !DILocation(line: 523, column: 14, scope: !15641)
!16375 = !DILocation(line: 523, column: 21, scope: !16376)
!16376 = !DILexicalBlockFile(scope: !15640, file: !957, discriminator: 1)
!16377 = !DILocation(line: 523, column: 25, scope: !16376)
!16378 = !DILocation(line: 523, column: 30, scope: !16376)
!16379 = !DILocation(line: 523, column: 34, scope: !16376)
!16380 = !DILocation(line: 523, column: 23, scope: !16376)
!16381 = !DILocation(line: 523, column: 9, scope: !16376)
!16382 = !DILocation(line: 524, column: 20, scope: !15638)
!16383 = !DILocation(line: 524, column: 18, scope: !15638)
!16384 = !DILocation(line: 524, column: 25, scope: !16385)
!16385 = !DILexicalBlockFile(scope: !15637, file: !957, discriminator: 1)
!16386 = !DILocation(line: 524, column: 29, scope: !16385)
!16387 = !DILocation(line: 524, column: 34, scope: !16385)
!16388 = !DILocation(line: 524, column: 38, scope: !16385)
!16389 = !DILocation(line: 524, column: 27, scope: !16385)
!16390 = !DILocation(line: 524, column: 13, scope: !16385)
!16391 = !DILocalVariable(name: "prevsc", scope: !15636, file: !957, line: 525, type: !991)
!16392 = !DILocation(line: 525, column: 21, scope: !15636)
!16393 = !DILocation(line: 525, column: 42, scope: !15636)
!16394 = !DILocation(line: 525, column: 43, scope: !15636)
!16395 = !DILocation(line: 525, column: 47, scope: !15636)
!16396 = !DILocation(line: 525, column: 46, scope: !15636)
!16397 = !DILocation(line: 525, column: 30, scope: !15636)
!16398 = !DILocation(line: 525, column: 35, scope: !15636)
!16399 = !DILocation(line: 526, column: 27, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !15636, file: !957, line: 526, column: 21)
!16401 = !DILocation(line: 526, column: 28, scope: !16400)
!16402 = !DILocation(line: 526, column: 32, scope: !16400)
!16403 = !DILocation(line: 526, column: 31, scope: !16400)
!16404 = !DILocation(line: 526, column: 21, scope: !16400)
!16405 = !DILocation(line: 526, column: 44, scope: !16400)
!16406 = !DILocation(line: 526, column: 45, scope: !16400)
!16407 = !DILocation(line: 526, column: 49, scope: !16400)
!16408 = !DILocation(line: 526, column: 48, scope: !16400)
!16409 = !DILocation(line: 526, column: 37, scope: !16400)
!16410 = !DILocation(line: 526, column: 35, scope: !16400)
!16411 = !DILocation(line: 526, column: 52, scope: !16400)
!16412 = !DILocation(line: 526, column: 67, scope: !16413)
!16413 = !DILexicalBlockFile(scope: !16400, file: !957, discriminator: 1)
!16414 = !DILocation(line: 526, column: 68, scope: !16413)
!16415 = !DILocation(line: 526, column: 72, scope: !16413)
!16416 = !DILocation(line: 526, column: 71, scope: !16413)
!16417 = !DILocation(line: 526, column: 55, scope: !16413)
!16418 = !DILocation(line: 526, column: 60, scope: !16413)
!16419 = !DILocation(line: 526, column: 75, scope: !16413)
!16420 = !DILocation(line: 526, column: 21, scope: !16413)
!16421 = !DILocation(line: 527, column: 47, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !957, line: 527, column: 25)
!16423 = distinct !DILexicalBlock(scope: !16400, file: !957, line: 526, column: 81)
!16424 = !DILocation(line: 527, column: 48, scope: !16422)
!16425 = !DILocation(line: 527, column: 52, scope: !16422)
!16426 = !DILocation(line: 527, column: 51, scope: !16422)
!16427 = !DILocation(line: 527, column: 39, scope: !16422)
!16428 = !DILocation(line: 527, column: 68, scope: !16422)
!16429 = !DILocation(line: 527, column: 69, scope: !16422)
!16430 = !DILocation(line: 527, column: 73, scope: !16422)
!16431 = !DILocation(line: 527, column: 72, scope: !16422)
!16432 = !DILocation(line: 527, column: 56, scope: !16422)
!16433 = !DILocation(line: 527, column: 61, scope: !16422)
!16434 = !DILocation(line: 527, column: 75, scope: !16422)
!16435 = !DILocation(line: 527, column: 25, scope: !16422)
!16436 = !DILocation(line: 527, column: 25, scope: !16423)
!16437 = !DILocation(line: 528, column: 37, scope: !16422)
!16438 = !DILocation(line: 528, column: 38, scope: !16422)
!16439 = !DILocation(line: 528, column: 42, scope: !16422)
!16440 = !DILocation(line: 528, column: 41, scope: !16422)
!16441 = !DILocation(line: 528, column: 25, scope: !16422)
!16442 = !DILocation(line: 528, column: 30, scope: !16422)
!16443 = !DILocation(line: 528, column: 44, scope: !16422)
!16444 = !DILocation(line: 530, column: 37, scope: !16422)
!16445 = !DILocation(line: 530, column: 38, scope: !16422)
!16446 = !DILocation(line: 530, column: 42, scope: !16422)
!16447 = !DILocation(line: 530, column: 41, scope: !16422)
!16448 = !DILocation(line: 530, column: 25, scope: !16422)
!16449 = !DILocation(line: 530, column: 30, scope: !16422)
!16450 = !DILocation(line: 530, column: 44, scope: !16422)
!16451 = !DILocation(line: 531, column: 17, scope: !16423)
!16452 = !DILocation(line: 532, column: 61, scope: !15636)
!16453 = !DILocation(line: 532, column: 62, scope: !15636)
!16454 = !DILocation(line: 532, column: 66, scope: !15636)
!16455 = !DILocation(line: 532, column: 65, scope: !15636)
!16456 = !DILocation(line: 532, column: 49, scope: !15636)
!16457 = !DILocation(line: 532, column: 54, scope: !15636)
!16458 = !DILocation(line: 532, column: 70, scope: !15636)
!16459 = !DILocation(line: 532, column: 81, scope: !15636)
!16460 = !DILocation(line: 532, column: 91, scope: !15636)
!16461 = !DILocation(line: 532, column: 39, scope: !15636)
!16462 = !DILocation(line: 132, column: 9, scope: !2954, inlinedAt: !15635)
!16463 = !DILocation(line: 132, column: 13, scope: !2954, inlinedAt: !15635)
!16464 = !DILocation(line: 132, column: 11, scope: !2954, inlinedAt: !15635)
!16465 = !DILocation(line: 132, column: 9, scope: !2768, inlinedAt: !15635)
!16466 = !DILocation(line: 132, column: 26, scope: !2959, inlinedAt: !15635)
!16467 = !DILocation(line: 132, column: 19, scope: !2959, inlinedAt: !15635)
!16468 = !DILocation(line: 133, column: 14, scope: !2962, inlinedAt: !15635)
!16469 = !DILocation(line: 133, column: 18, scope: !2962, inlinedAt: !15635)
!16470 = !DILocation(line: 133, column: 16, scope: !2962, inlinedAt: !15635)
!16471 = !DILocation(line: 133, column: 14, scope: !2954, inlinedAt: !15635)
!16472 = !DILocation(line: 133, column: 31, scope: !2967, inlinedAt: !15635)
!16473 = !DILocation(line: 133, column: 24, scope: !2967, inlinedAt: !15635)
!16474 = !DILocation(line: 134, column: 17, scope: !2962, inlinedAt: !15635)
!16475 = !DILocation(line: 134, column: 10, scope: !2962, inlinedAt: !15635)
!16476 = !DILocation(line: 135, column: 1, scope: !2768, inlinedAt: !15635)
!16477 = !DILocation(line: 532, column: 29, scope: !15636)
!16478 = !DILocation(line: 532, column: 30, scope: !15636)
!16479 = !DILocation(line: 532, column: 34, scope: !15636)
!16480 = !DILocation(line: 532, column: 33, scope: !15636)
!16481 = !DILocation(line: 532, column: 17, scope: !15636)
!16482 = !DILocation(line: 532, column: 22, scope: !15636)
!16483 = !DILocation(line: 532, column: 37, scope: !15636)
!16484 = !DILocation(line: 533, column: 53, scope: !15636)
!16485 = !DILocation(line: 533, column: 54, scope: !15636)
!16486 = !DILocation(line: 533, column: 58, scope: !15636)
!16487 = !DILocation(line: 533, column: 57, scope: !15636)
!16488 = !DILocation(line: 533, column: 41, scope: !15636)
!16489 = !DILocation(line: 533, column: 46, scope: !15636)
!16490 = !DILocation(line: 533, column: 62, scope: !15636)
!16491 = !DILocation(line: 533, column: 40, scope: !15636)
!16492 = !DILocation(line: 533, column: 40, scope: !16493)
!16493 = !DILexicalBlockFile(scope: !15636, file: !957, discriminator: 1)
!16494 = !DILocation(line: 533, column: 93, scope: !16495)
!16495 = !DILexicalBlockFile(scope: !15636, file: !957, discriminator: 2)
!16496 = !DILocation(line: 533, column: 94, scope: !16495)
!16497 = !DILocation(line: 533, column: 98, scope: !16495)
!16498 = !DILocation(line: 533, column: 97, scope: !16495)
!16499 = !DILocation(line: 533, column: 81, scope: !16495)
!16500 = !DILocation(line: 533, column: 86, scope: !16495)
!16501 = !DILocation(line: 533, column: 40, scope: !16495)
!16502 = !DILocation(line: 533, column: 40, scope: !16503)
!16503 = !DILexicalBlockFile(scope: !15636, file: !957, discriminator: 3)
!16504 = !DILocation(line: 533, column: 29, scope: !16503)
!16505 = !DILocation(line: 533, column: 30, scope: !16503)
!16506 = !DILocation(line: 533, column: 34, scope: !16503)
!16507 = !DILocation(line: 533, column: 33, scope: !16503)
!16508 = !DILocation(line: 533, column: 17, scope: !16503)
!16509 = !DILocation(line: 533, column: 22, scope: !16503)
!16510 = !DILocation(line: 533, column: 37, scope: !16503)
!16511 = !DILocation(line: 534, column: 33, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !15636, file: !957, line: 534, column: 21)
!16513 = !DILocation(line: 534, column: 34, scope: !16512)
!16514 = !DILocation(line: 534, column: 38, scope: !16512)
!16515 = !DILocation(line: 534, column: 37, scope: !16512)
!16516 = !DILocation(line: 534, column: 21, scope: !16512)
!16517 = !DILocation(line: 534, column: 26, scope: !16512)
!16518 = !DILocation(line: 534, column: 44, scope: !16512)
!16519 = !DILocation(line: 534, column: 41, scope: !16512)
!16520 = !DILocation(line: 534, column: 21, scope: !15636)
!16521 = !DILocation(line: 535, column: 27, scope: !16512)
!16522 = !DILocation(line: 535, column: 21, scope: !16512)
!16523 = !DILocation(line: 536, column: 64, scope: !15636)
!16524 = !DILocation(line: 536, column: 65, scope: !15636)
!16525 = !DILocation(line: 536, column: 69, scope: !15636)
!16526 = !DILocation(line: 536, column: 68, scope: !15636)
!16527 = !DILocation(line: 536, column: 56, scope: !15636)
!16528 = !DILocation(line: 536, column: 85, scope: !15636)
!16529 = !DILocation(line: 536, column: 86, scope: !15636)
!16530 = !DILocation(line: 536, column: 90, scope: !15636)
!16531 = !DILocation(line: 536, column: 89, scope: !15636)
!16532 = !DILocation(line: 536, column: 73, scope: !15636)
!16533 = !DILocation(line: 536, column: 78, scope: !15636)
!16534 = !DILocation(line: 536, column: 42, scope: !15636)
!16535 = !DILocation(line: 536, column: 32, scope: !15636)
!16536 = !DILocation(line: 536, column: 33, scope: !15636)
!16537 = !DILocation(line: 536, column: 37, scope: !15636)
!16538 = !DILocation(line: 536, column: 36, scope: !15636)
!16539 = !DILocation(line: 536, column: 17, scope: !15636)
!16540 = !DILocation(line: 536, column: 22, scope: !15636)
!16541 = !DILocation(line: 536, column: 40, scope: !15636)
!16542 = !DILocation(line: 537, column: 13, scope: !15636)
!16543 = !DILocation(line: 524, column: 48, scope: !16544)
!16544 = !DILexicalBlockFile(scope: !15637, file: !957, discriminator: 2)
!16545 = !DILocation(line: 524, column: 13, scope: !16544)
!16546 = distinct !{!16546, !16547}
!16547 = !DILocation(line: 524, column: 13, scope: !15639)
!16548 = !DILocation(line: 538, column: 9, scope: !15639)
!16549 = !DILocation(line: 523, column: 71, scope: !16550)
!16550 = !DILexicalBlockFile(scope: !15640, file: !957, discriminator: 2)
!16551 = !DILocation(line: 523, column: 52, scope: !16550)
!16552 = !DILocation(line: 523, column: 57, scope: !16550)
!16553 = !DILocation(line: 523, column: 61, scope: !16550)
!16554 = !DILocation(line: 523, column: 49, scope: !16550)
!16555 = !DILocation(line: 523, column: 9, scope: !16550)
!16556 = distinct !{!16556, !16557}
!16557 = !DILocation(line: 523, column: 9, scope: !15642)
!16558 = !DILocation(line: 539, column: 12, scope: !15642)
!16559 = !DILocation(line: 540, column: 5, scope: !15642)
!16560 = !DILocation(line: 540, column: 14, scope: !15687)
!16561 = !DILocation(line: 540, column: 20, scope: !15687)
!16562 = !DILocation(line: 540, column: 23, scope: !15705)
!16563 = !DILocation(line: 540, column: 27, scope: !15705)
!16564 = !DILocation(line: 540, column: 5, scope: !16565)
!16565 = !DILexicalBlockFile(scope: !15642, file: !957, discriminator: 3)
!16566 = !DILocation(line: 541, column: 1, scope: !15633)
!16567 = distinct !DISubprogram(name: "coef2minsf", scope: !4818, file: !4818, line: 157, type: !16568, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16568 = !DISubroutineType(types: !16569)
!16569 = !{!1053, !954}
!16570 = !DILocation(line: 159, column: 97, scope: !2812, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 159, column: 12, scope: !16572)
!16572 = !DILexicalBlockFile(scope: !16567, file: !4818, discriminator: 1)
!16573 = !DILocalVariable(name: "coef", arg: 1, scope: !16567, file: !4818, line: 157, type: !954)
!16574 = !DILocation(line: 157, column: 40, scope: !16567)
!16575 = !DILocation(line: 159, column: 34, scope: !16567)
!16576 = !DILocation(line: 159, column: 28, scope: !16567)
!16577 = !DILocation(line: 159, column: 39, scope: !16567)
!16578 = !DILocation(line: 159, column: 42, scope: !16567)
!16579 = !DILocation(line: 159, column: 47, scope: !16567)
!16580 = !DILocation(line: 159, column: 53, scope: !16567)
!16581 = !DILocation(line: 159, column: 12, scope: !16572)
!16582 = !DILocation(line: 161, column: 9, scope: !3018, inlinedAt: !16571)
!16583 = !DILocation(line: 161, column: 10, scope: !3018, inlinedAt: !16571)
!16584 = !DILocation(line: 161, column: 9, scope: !2812, inlinedAt: !16571)
!16585 = !DILocation(line: 161, column: 29, scope: !3022, inlinedAt: !16571)
!16586 = !DILocation(line: 161, column: 28, scope: !3022, inlinedAt: !16571)
!16587 = !DILocation(line: 161, column: 31, scope: !3022, inlinedAt: !16571)
!16588 = !DILocation(line: 161, column: 27, scope: !3022, inlinedAt: !16571)
!16589 = !DILocation(line: 161, column: 20, scope: !3022, inlinedAt: !16571)
!16590 = !DILocation(line: 162, column: 17, scope: !3018, inlinedAt: !16571)
!16591 = !DILocation(line: 162, column: 10, scope: !3018, inlinedAt: !16571)
!16592 = !DILocation(line: 163, column: 1, scope: !2812, inlinedAt: !16571)
!16593 = !DILocation(line: 159, column: 5, scope: !16567)
!16594 = distinct !DISubprogram(name: "coef2maxsf", scope: !4818, file: !4818, line: 163, type: !16568, isLocal: true, isDefinition: true, scopeLine: 164, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16595 = !DILocation(line: 159, column: 97, scope: !2812, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 165, column: 12, scope: !16597)
!16597 = !DILexicalBlockFile(scope: !16594, file: !4818, discriminator: 1)
!16598 = !DILocalVariable(name: "coef", arg: 1, scope: !16594, file: !4818, line: 163, type: !954)
!16599 = !DILocation(line: 163, column: 40, scope: !16594)
!16600 = !DILocation(line: 165, column: 34, scope: !16594)
!16601 = !DILocation(line: 165, column: 28, scope: !16594)
!16602 = !DILocation(line: 165, column: 39, scope: !16594)
!16603 = !DILocation(line: 165, column: 42, scope: !16594)
!16604 = !DILocation(line: 165, column: 46, scope: !16594)
!16605 = !DILocation(line: 165, column: 52, scope: !16594)
!16606 = !DILocation(line: 165, column: 12, scope: !16597)
!16607 = !DILocation(line: 161, column: 9, scope: !3018, inlinedAt: !16596)
!16608 = !DILocation(line: 161, column: 10, scope: !3018, inlinedAt: !16596)
!16609 = !DILocation(line: 161, column: 9, scope: !2812, inlinedAt: !16596)
!16610 = !DILocation(line: 161, column: 29, scope: !3022, inlinedAt: !16596)
!16611 = !DILocation(line: 161, column: 28, scope: !3022, inlinedAt: !16596)
!16612 = !DILocation(line: 161, column: 31, scope: !3022, inlinedAt: !16596)
!16613 = !DILocation(line: 161, column: 27, scope: !3022, inlinedAt: !16596)
!16614 = !DILocation(line: 161, column: 20, scope: !3022, inlinedAt: !16596)
!16615 = !DILocation(line: 162, column: 17, scope: !3018, inlinedAt: !16596)
!16616 = !DILocation(line: 162, column: 10, scope: !3018, inlinedAt: !16596)
!16617 = !DILocation(line: 163, column: 1, scope: !2812, inlinedAt: !16596)
!16618 = !DILocation(line: 165, column: 5, scope: !16594)
!16619 = distinct !DISubprogram(name: "find_max_val", scope: !4818, file: !4818, line: 80, type: !16620, isLocal: true, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16620 = !DISubroutineType(types: !16621)
!16621 = !{!954, !991, !991, !1780}
!16622 = !DILocalVariable(name: "group_len", arg: 1, scope: !16619, file: !4818, line: 80, type: !991)
!16623 = !DILocation(line: 80, column: 38, scope: !16619)
!16624 = !DILocalVariable(name: "swb_size", arg: 2, scope: !16619, file: !4818, line: 80, type: !991)
!16625 = !DILocation(line: 80, column: 53, scope: !16619)
!16626 = !DILocalVariable(name: "scaled", arg: 3, scope: !16619, file: !4818, line: 80, type: !1780)
!16627 = !DILocation(line: 80, column: 76, scope: !16619)
!16628 = !DILocalVariable(name: "maxval", scope: !16619, file: !4818, line: 82, type: !954)
!16629 = !DILocation(line: 82, column: 11, scope: !16619)
!16630 = !DILocalVariable(name: "w2", scope: !16619, file: !4818, line: 83, type: !991)
!16631 = !DILocation(line: 83, column: 9, scope: !16619)
!16632 = !DILocalVariable(name: "i", scope: !16619, file: !4818, line: 83, type: !991)
!16633 = !DILocation(line: 83, column: 13, scope: !16619)
!16634 = !DILocation(line: 84, column: 13, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16619, file: !4818, line: 84, column: 5)
!16636 = !DILocation(line: 84, column: 10, scope: !16635)
!16637 = !DILocation(line: 84, column: 18, scope: !16638)
!16638 = !DILexicalBlockFile(scope: !16639, file: !4818, discriminator: 1)
!16639 = distinct !DILexicalBlock(scope: !16635, file: !4818, line: 84, column: 5)
!16640 = !DILocation(line: 84, column: 23, scope: !16638)
!16641 = !DILocation(line: 84, column: 21, scope: !16638)
!16642 = !DILocation(line: 84, column: 5, scope: !16638)
!16643 = !DILocation(line: 85, column: 16, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16645, file: !4818, line: 85, column: 9)
!16645 = distinct !DILexicalBlock(scope: !16639, file: !4818, line: 84, column: 40)
!16646 = !DILocation(line: 85, column: 14, scope: !16644)
!16647 = !DILocation(line: 85, column: 21, scope: !16648)
!16648 = !DILexicalBlockFile(scope: !16649, file: !4818, discriminator: 1)
!16649 = distinct !DILexicalBlock(scope: !16644, file: !4818, line: 85, column: 9)
!16650 = !DILocation(line: 85, column: 25, scope: !16648)
!16651 = !DILocation(line: 85, column: 23, scope: !16648)
!16652 = !DILocation(line: 85, column: 9, scope: !16648)
!16653 = !DILocation(line: 86, column: 24, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16649, file: !4818, line: 85, column: 40)
!16655 = !DILocation(line: 86, column: 42, scope: !16654)
!16656 = !DILocation(line: 86, column: 44, scope: !16654)
!16657 = !DILocation(line: 86, column: 49, scope: !16654)
!16658 = !DILocation(line: 86, column: 48, scope: !16654)
!16659 = !DILocation(line: 86, column: 35, scope: !16654)
!16660 = !DILocation(line: 86, column: 32, scope: !16654)
!16661 = !DILocation(line: 86, column: 23, scope: !16654)
!16662 = !DILocation(line: 86, column: 56, scope: !16663)
!16663 = !DILexicalBlockFile(scope: !16654, file: !4818, discriminator: 1)
!16664 = !DILocation(line: 86, column: 23, scope: !16663)
!16665 = !DILocation(line: 86, column: 74, scope: !16666)
!16666 = !DILexicalBlockFile(scope: !16654, file: !4818, discriminator: 2)
!16667 = !DILocation(line: 86, column: 76, scope: !16666)
!16668 = !DILocation(line: 86, column: 81, scope: !16666)
!16669 = !DILocation(line: 86, column: 80, scope: !16666)
!16670 = !DILocation(line: 86, column: 67, scope: !16666)
!16671 = !DILocation(line: 86, column: 23, scope: !16666)
!16672 = !DILocation(line: 86, column: 23, scope: !16673)
!16673 = !DILexicalBlockFile(scope: !16654, file: !4818, discriminator: 3)
!16674 = !DILocation(line: 86, column: 20, scope: !16673)
!16675 = !DILocation(line: 87, column: 9, scope: !16654)
!16676 = !DILocation(line: 85, column: 36, scope: !16677)
!16677 = !DILexicalBlockFile(scope: !16649, file: !4818, discriminator: 2)
!16678 = !DILocation(line: 85, column: 9, scope: !16677)
!16679 = distinct !{!16679, !16680}
!16680 = !DILocation(line: 85, column: 9, scope: !16645)
!16681 = !DILocation(line: 88, column: 5, scope: !16645)
!16682 = !DILocation(line: 84, column: 36, scope: !16683)
!16683 = !DILexicalBlockFile(scope: !16639, file: !4818, discriminator: 2)
!16684 = !DILocation(line: 84, column: 5, scope: !16683)
!16685 = distinct !{!16685, !16686}
!16686 = !DILocation(line: 84, column: 5, scope: !16619)
!16687 = !DILocation(line: 89, column: 12, scope: !16619)
!16688 = !DILocation(line: 89, column: 5, scope: !16619)
!16689 = distinct !DISubprogram(name: "find_min_book", scope: !4818, file: !4818, line: 92, type: !16690, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16690 = !DISubroutineType(types: !16691)
!16691 = !{!991, !954, !991}
!16692 = !DILocalVariable(name: "maxval", arg: 1, scope: !16689, file: !4818, line: 92, type: !954)
!16693 = !DILocation(line: 92, column: 39, scope: !16689)
!16694 = !DILocalVariable(name: "sf", arg: 2, scope: !16689, file: !4818, line: 92, type: !991)
!16695 = !DILocation(line: 92, column: 51, scope: !16689)
!16696 = !DILocalVariable(name: "Q34", scope: !16689, file: !4818, line: 94, type: !954)
!16697 = !DILocation(line: 94, column: 11, scope: !16689)
!16698 = !DILocation(line: 94, column: 42, scope: !16689)
!16699 = !DILocation(line: 94, column: 40, scope: !16689)
!16700 = !DILocation(line: 94, column: 45, scope: !16689)
!16701 = !DILocation(line: 94, column: 51, scope: !16689)
!16702 = !DILocation(line: 94, column: 17, scope: !16689)
!16703 = !DILocalVariable(name: "qmaxval", scope: !16689, file: !4818, line: 95, type: !991)
!16704 = !DILocation(line: 95, column: 9, scope: !16689)
!16705 = !DILocalVariable(name: "cb", scope: !16689, file: !4818, line: 95, type: !991)
!16706 = !DILocation(line: 95, column: 18, scope: !16689)
!16707 = !DILocation(line: 96, column: 15, scope: !16689)
!16708 = !DILocation(line: 96, column: 24, scope: !16689)
!16709 = !DILocation(line: 96, column: 22, scope: !16689)
!16710 = !DILocation(line: 96, column: 28, scope: !16689)
!16711 = !DILocation(line: 96, column: 13, scope: !16689)
!16712 = !DILocation(line: 97, column: 9, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16689, file: !4818, line: 97, column: 9)
!16714 = !DILocation(line: 97, column: 17, scope: !16713)
!16715 = !DILocation(line: 97, column: 9, scope: !16689)
!16716 = !DILocation(line: 98, column: 12, scope: !16713)
!16717 = !DILocation(line: 98, column: 9, scope: !16713)
!16718 = !DILocation(line: 100, column: 28, scope: !16713)
!16719 = !DILocation(line: 100, column: 14, scope: !16713)
!16720 = !DILocation(line: 100, column: 12, scope: !16713)
!16721 = !DILocation(line: 101, column: 12, scope: !16689)
!16722 = !DILocation(line: 101, column: 5, scope: !16689)
!16723 = distinct !DISubprogram(name: "quantize_band_cost", scope: !2734, file: !2734, line: 250, type: !16724, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16724 = !DISubroutineType(types: !16725)
!16725 = !{!954, !1695, !1780, !1780, !991, !991, !991, !1781, !1781, !1264, !1779, !991}
!16726 = !DILocalVariable(name: "s", arg: 1, scope: !16723, file: !2734, line: 250, type: !1695)
!16727 = !DILocation(line: 250, column: 62, scope: !16723)
!16728 = !DILocalVariable(name: "in", arg: 2, scope: !16723, file: !2734, line: 250, type: !1780)
!16729 = !DILocation(line: 250, column: 78, scope: !16723)
!16730 = !DILocalVariable(name: "scaled", arg: 3, scope: !16723, file: !2734, line: 251, type: !1780)
!16731 = !DILocation(line: 251, column: 46, scope: !16723)
!16732 = !DILocalVariable(name: "size", arg: 4, scope: !16723, file: !2734, line: 251, type: !991)
!16733 = !DILocation(line: 251, column: 58, scope: !16723)
!16734 = !DILocalVariable(name: "scale_idx", arg: 5, scope: !16723, file: !2734, line: 251, type: !991)
!16735 = !DILocation(line: 251, column: 68, scope: !16723)
!16736 = !DILocalVariable(name: "cb", arg: 6, scope: !16723, file: !2734, line: 252, type: !991)
!16737 = !DILocation(line: 252, column: 37, scope: !16723)
!16738 = !DILocalVariable(name: "lambda", arg: 7, scope: !16723, file: !2734, line: 252, type: !1781)
!16739 = !DILocation(line: 252, column: 53, scope: !16723)
!16740 = !DILocalVariable(name: "uplim", arg: 8, scope: !16723, file: !2734, line: 252, type: !1781)
!16741 = !DILocation(line: 252, column: 73, scope: !16723)
!16742 = !DILocalVariable(name: "bits", arg: 9, scope: !16723, file: !2734, line: 253, type: !1264)
!16743 = !DILocation(line: 253, column: 38, scope: !16723)
!16744 = !DILocalVariable(name: "energy", arg: 10, scope: !16723, file: !2734, line: 253, type: !1779)
!16745 = !DILocation(line: 253, column: 51, scope: !16723)
!16746 = !DILocalVariable(name: "rtz", arg: 11, scope: !16723, file: !2734, line: 253, type: !991)
!16747 = !DILocation(line: 253, column: 63, scope: !16723)
!16748 = !DILocation(line: 255, column: 96, scope: !16723)
!16749 = !DILocation(line: 255, column: 12, scope: !16723)
!16750 = !DILocation(line: 255, column: 14, scope: !16723)
!16751 = !DILocation(line: 255, column: 13, scope: !16723)
!16752 = !DILocation(line: 255, column: 101, scope: !16723)
!16753 = !DILocation(line: 255, column: 21, scope: !16723)
!16754 = !DILocation(line: 255, column: 27, scope: !16723)
!16755 = !DILocation(line: 255, column: 38, scope: !16723)
!16756 = !DILocation(line: 255, column: 42, scope: !16723)
!16757 = !DILocation(line: 255, column: 50, scope: !16723)
!16758 = !DILocation(line: 255, column: 57, scope: !16723)
!16759 = !DILocation(line: 255, column: 63, scope: !16723)
!16760 = !DILocation(line: 255, column: 5, scope: !16723)
!16761 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_ZERO", scope: !2734, file: !2734, line: 185, type: !2738, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16762 = !DILocalVariable(name: "a", arg: 1, scope: !16763, file: !2769, line: 229, type: !991)
!16763 = distinct !DISubprogram(name: "av_clip_uintp2_c", scope: !2769, file: !2769, line: 229, type: !16764, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16764 = !DISubroutineType(types: !16765)
!16765 = !{!952, !991, !991}
!16766 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !16784)
!16768 = !DILexicalBlockFile(scope: !16769, file: !2734, discriminator: 2)
!16769 = distinct !DILexicalBlock(scope: !16770, file: !2734, line: 143, column: 77)
!16770 = distinct !DILexicalBlock(scope: !16771, file: !2734, line: 143, column: 25)
!16771 = distinct !DILexicalBlock(scope: !16772, file: !2734, line: 142, column: 41)
!16772 = distinct !DILexicalBlock(scope: !16773, file: !2734, line: 142, column: 17)
!16773 = distinct !DILexicalBlock(scope: !16774, file: !2734, line: 142, column: 17)
!16774 = distinct !DILexicalBlock(scope: !16775, file: !2734, line: 141, column: 25)
!16775 = distinct !DILexicalBlock(scope: !16776, file: !2734, line: 141, column: 17)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !2734, line: 135, column: 17)
!16777 = distinct !DILexicalBlock(scope: !16778, file: !2734, line: 135, column: 13)
!16778 = distinct !DILexicalBlock(scope: !16779, file: !2734, line: 86, column: 37)
!16779 = distinct !DILexicalBlock(scope: !16780, file: !2734, line: 86, column: 5)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !2734, line: 86, column: 5)
!16781 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_template", scope: !2734, file: !2734, line: 41, type: !16782, isLocal: true, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!16782 = !DISubroutineType(types: !16783)
!16783 = !{!954, !1695, !2691, !1780, !1779, !1780, !991, !991, !991, !1781, !1781, !1264, !1779, !991, !991, !991, !991, !991, !991, !1781}
!16784 = distinct !DILocation(line: 185, column: 253, scope: !16761)
!16785 = !DILocalVariable(name: "p", arg: 2, scope: !16763, file: !2769, line: 229, type: !991)
!16786 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !16767)
!16787 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !16784)
!16789 = !DILexicalBlockFile(scope: !16790, file: !2734, discriminator: 1)
!16790 = distinct !DILexicalBlock(scope: !16791, file: !2734, line: 106, column: 28)
!16791 = distinct !DILexicalBlock(scope: !16792, file: !2734, line: 103, column: 25)
!16792 = distinct !DILexicalBlock(scope: !16793, file: !2734, line: 102, column: 48)
!16793 = distinct !DILexicalBlock(scope: !16794, file: !2734, line: 102, column: 21)
!16794 = distinct !DILexicalBlock(scope: !16795, file: !2734, line: 99, column: 39)
!16795 = distinct !DILexicalBlock(scope: !16796, file: !2734, line: 99, column: 13)
!16796 = distinct !DILexicalBlock(scope: !16797, file: !2734, line: 99, column: 13)
!16797 = distinct !DILexicalBlock(scope: !16798, file: !2734, line: 98, column: 26)
!16798 = distinct !DILexicalBlock(scope: !16778, file: !2734, line: 98, column: 13)
!16799 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !16788)
!16800 = !DILocalVariable(name: "s", arg: 1, scope: !16781, file: !2734, line: 42, type: !1695)
!16801 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !16784)
!16802 = !DILocalVariable(name: "pb", arg: 2, scope: !16781, file: !2734, line: 43, type: !2691)
!16803 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !16784)
!16804 = !DILocalVariable(name: "in", arg: 3, scope: !16781, file: !2734, line: 43, type: !1780)
!16805 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !16784)
!16806 = !DILocalVariable(name: "out", arg: 4, scope: !16781, file: !2734, line: 43, type: !1779)
!16807 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !16784)
!16808 = !DILocalVariable(name: "scaled", arg: 5, scope: !16781, file: !2734, line: 44, type: !1780)
!16809 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !16784)
!16810 = !DILocalVariable(name: "size", arg: 6, scope: !16781, file: !2734, line: 44, type: !991)
!16811 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !16784)
!16812 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !16781, file: !2734, line: 44, type: !991)
!16813 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !16784)
!16814 = !DILocalVariable(name: "cb", arg: 8, scope: !16781, file: !2734, line: 45, type: !991)
!16815 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !16784)
!16816 = !DILocalVariable(name: "lambda", arg: 9, scope: !16781, file: !2734, line: 45, type: !1781)
!16817 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !16784)
!16818 = !DILocalVariable(name: "uplim", arg: 10, scope: !16781, file: !2734, line: 45, type: !1781)
!16819 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !16784)
!16820 = !DILocalVariable(name: "bits", arg: 11, scope: !16781, file: !2734, line: 46, type: !1264)
!16821 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !16784)
!16822 = !DILocalVariable(name: "energy", arg: 12, scope: !16781, file: !2734, line: 46, type: !1779)
!16823 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !16784)
!16824 = !DILocalVariable(name: "BT_ZERO", arg: 13, scope: !16781, file: !2734, line: 46, type: !991)
!16825 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !16784)
!16826 = !DILocalVariable(name: "BT_UNSIGNED", arg: 14, scope: !16781, file: !2734, line: 46, type: !991)
!16827 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !16784)
!16828 = !DILocalVariable(name: "BT_PAIR", arg: 15, scope: !16781, file: !2734, line: 47, type: !991)
!16829 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !16784)
!16830 = !DILocalVariable(name: "BT_ESC", arg: 16, scope: !16781, file: !2734, line: 47, type: !991)
!16831 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !16784)
!16832 = !DILocalVariable(name: "BT_NOISE", arg: 17, scope: !16781, file: !2734, line: 47, type: !991)
!16833 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !16784)
!16834 = !DILocalVariable(name: "BT_STEREO", arg: 18, scope: !16781, file: !2734, line: 47, type: !991)
!16835 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !16784)
!16836 = !DILocalVariable(name: "ROUNDING", arg: 19, scope: !16781, file: !2734, line: 48, type: !1781)
!16837 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !16784)
!16838 = !DILocalVariable(name: "q_idx", scope: !16781, file: !2734, line: 50, type: !1043)
!16839 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !16784)
!16840 = !DILocalVariable(name: "Q", scope: !16781, file: !2734, line: 51, type: !1781)
!16841 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !16784)
!16842 = !DILocalVariable(name: "Q34", scope: !16781, file: !2734, line: 52, type: !1781)
!16843 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !16784)
!16844 = !DILocalVariable(name: "IQ", scope: !16781, file: !2734, line: 53, type: !1781)
!16845 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !16784)
!16846 = !DILocalVariable(name: "CLIPPED_ESCAPE", scope: !16781, file: !2734, line: 54, type: !1781)
!16847 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !16784)
!16848 = !DILocalVariable(name: "i", scope: !16781, file: !2734, line: 55, type: !991)
!16849 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !16784)
!16850 = !DILocalVariable(name: "j", scope: !16781, file: !2734, line: 55, type: !991)
!16851 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !16784)
!16852 = !DILocalVariable(name: "cost", scope: !16781, file: !2734, line: 56, type: !954)
!16853 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !16784)
!16854 = !DILocalVariable(name: "qenergy", scope: !16781, file: !2734, line: 57, type: !954)
!16855 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !16784)
!16856 = !DILocalVariable(name: "dim", scope: !16781, file: !2734, line: 58, type: !1043)
!16857 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !16784)
!16858 = !DILocalVariable(name: "resbits", scope: !16781, file: !2734, line: 59, type: !991)
!16859 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !16784)
!16860 = !DILocalVariable(name: "off", scope: !16781, file: !2734, line: 60, type: !991)
!16861 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !16784)
!16862 = !DILocalVariable(name: "vec", scope: !16778, file: !2734, line: 87, type: !1780)
!16863 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !16784)
!16864 = !DILocalVariable(name: "quants", scope: !16778, file: !2734, line: 88, type: !1264)
!16865 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !16784)
!16866 = !DILocalVariable(name: "curidx", scope: !16778, file: !2734, line: 89, type: !991)
!16867 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !16784)
!16868 = !DILocalVariable(name: "curbits", scope: !16778, file: !2734, line: 90, type: !991)
!16869 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !16784)
!16870 = !DILocalVariable(name: "quantized", scope: !16778, file: !2734, line: 91, type: !954)
!16871 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !16784)
!16872 = !DILocalVariable(name: "rd", scope: !16778, file: !2734, line: 91, type: !954)
!16873 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !16784)
!16874 = !DILocalVariable(name: "t", scope: !16794, file: !2734, line: 100, type: !954)
!16875 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !16784)
!16876 = !DILocalVariable(name: "di", scope: !16794, file: !2734, line: 101, type: !954)
!16877 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !16784)
!16878 = !DILocalVariable(name: "c", scope: !16790, file: !2734, line: 107, type: !991)
!16879 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !16784)
!16880 = !DILocalVariable(name: "coef", scope: !16769, file: !2734, line: 144, type: !991)
!16881 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !16784)
!16882 = !DILocalVariable(name: "len", scope: !16769, file: !2734, line: 145, type: !991)
!16883 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !16784)
!16884 = !DILocalVariable(name: "s", arg: 1, scope: !16761, file: !2734, line: 185, type: !1695)
!16885 = !DILocation(line: 185, column: 72, scope: !16761)
!16886 = !DILocalVariable(name: "pb", arg: 2, scope: !16761, file: !2734, line: 185, type: !2691)
!16887 = !DILocation(line: 185, column: 90, scope: !16761)
!16888 = !DILocalVariable(name: "in", arg: 3, scope: !16761, file: !2734, line: 185, type: !1780)
!16889 = !DILocation(line: 185, column: 107, scope: !16761)
!16890 = !DILocalVariable(name: "quant", arg: 4, scope: !16761, file: !2734, line: 185, type: !1779)
!16891 = !DILocation(line: 185, column: 118, scope: !16761)
!16892 = !DILocalVariable(name: "scaled", arg: 5, scope: !16761, file: !2734, line: 185, type: !1780)
!16893 = !DILocation(line: 185, column: 138, scope: !16761)
!16894 = !DILocalVariable(name: "size", arg: 6, scope: !16761, file: !2734, line: 185, type: !991)
!16895 = !DILocation(line: 185, column: 150, scope: !16761)
!16896 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !16761, file: !2734, line: 185, type: !991)
!16897 = !DILocation(line: 185, column: 160, scope: !16761)
!16898 = !DILocalVariable(name: "cb", arg: 8, scope: !16761, file: !2734, line: 185, type: !991)
!16899 = !DILocation(line: 185, column: 175, scope: !16761)
!16900 = !DILocalVariable(name: "lambda", arg: 9, scope: !16761, file: !2734, line: 185, type: !1781)
!16901 = !DILocation(line: 185, column: 191, scope: !16761)
!16902 = !DILocalVariable(name: "uplim", arg: 10, scope: !16761, file: !2734, line: 185, type: !1781)
!16903 = !DILocation(line: 185, column: 211, scope: !16761)
!16904 = !DILocalVariable(name: "bits", arg: 11, scope: !16761, file: !2734, line: 185, type: !1264)
!16905 = !DILocation(line: 185, column: 223, scope: !16761)
!16906 = !DILocalVariable(name: "energy", arg: 12, scope: !16761, file: !2734, line: 185, type: !1779)
!16907 = !DILocation(line: 185, column: 236, scope: !16761)
!16908 = !DILocation(line: 185, column: 293, scope: !16761)
!16909 = !DILocation(line: 185, column: 296, scope: !16761)
!16910 = !DILocation(line: 185, column: 300, scope: !16761)
!16911 = !DILocation(line: 185, column: 304, scope: !16761)
!16912 = !DILocation(line: 185, column: 311, scope: !16761)
!16913 = !DILocation(line: 185, column: 319, scope: !16761)
!16914 = !DILocation(line: 185, column: 325, scope: !16761)
!16915 = !DILocation(line: 185, column: 349, scope: !16761)
!16916 = !DILocation(line: 185, column: 353, scope: !16761)
!16917 = !DILocation(line: 185, column: 361, scope: !16761)
!16918 = !DILocation(line: 185, column: 368, scope: !16761)
!16919 = !DILocation(line: 185, column: 374, scope: !16761)
!16920 = !DILocation(line: 185, column: 253, scope: !16761)
!16921 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !16784)
!16922 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !16784)
!16923 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !16784)
!16924 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !16784)
!16925 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !16784)
!16926 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !16784)
!16927 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !16784)
!16928 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !16784)
!16929 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !16784)
!16930 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !16784)
!16931 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !16784)
!16932 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !16784)
!16933 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !16784)
!16934 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !16784)
!16935 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !16784)
!16936 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !16784)
!16937 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !16784)
!16938 = distinct !DILexicalBlock(scope: !16781, file: !2734, line: 62, column: 9)
!16939 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !16784)
!16940 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !16784)
!16941 = !DILexicalBlockFile(scope: !16938, file: !2734, discriminator: 1)
!16942 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !16784)
!16943 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !16784)
!16944 = !DILexicalBlockFile(scope: !16938, file: !2734, discriminator: 2)
!16945 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !16784)
!16946 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !16784)
!16947 = distinct !DILexicalBlock(scope: !16948, file: !2734, line: 63, column: 9)
!16948 = distinct !DILexicalBlock(scope: !16938, file: !2734, line: 62, column: 43)
!16949 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !16784)
!16950 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !16784)
!16951 = !DILexicalBlockFile(scope: !16952, file: !2734, discriminator: 1)
!16952 = distinct !DILexicalBlock(scope: !16947, file: !2734, line: 63, column: 9)
!16953 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !16784)
!16954 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !16784)
!16955 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !16784)
!16956 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !16784)
!16957 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !16784)
!16958 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !16784)
!16959 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !16784)
!16960 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !16784)
!16961 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !16784)
!16962 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !16784)
!16963 = !DILexicalBlockFile(scope: !16952, file: !2734, discriminator: 2)
!16964 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !16784)
!16965 = distinct !{!16965, !16966}
!16966 = !DILocation(line: 63, column: 9, scope: !16948)
!16967 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !16784)
!16968 = distinct !DILexicalBlock(scope: !16948, file: !2734, line: 65, column: 13)
!16969 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !16784)
!16970 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !16784)
!16971 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !16784)
!16972 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !16784)
!16973 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !16784)
!16974 = distinct !DILexicalBlock(scope: !16948, file: !2734, line: 67, column: 13)
!16975 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !16784)
!16976 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !16784)
!16977 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !16784)
!16978 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !16784)
!16979 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !16784)
!16980 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !16784)
!16981 = distinct !DILexicalBlock(scope: !16948, file: !2734, line: 69, column: 13)
!16982 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !16784)
!16983 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !16784)
!16984 = distinct !DILexicalBlock(scope: !16985, file: !2734, line: 70, column: 13)
!16985 = distinct !DILexicalBlock(scope: !16981, file: !2734, line: 69, column: 18)
!16986 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !16784)
!16987 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !16784)
!16988 = !DILexicalBlockFile(scope: !16989, file: !2734, discriminator: 1)
!16989 = distinct !DILexicalBlock(scope: !16984, file: !2734, line: 70, column: 13)
!16990 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !16784)
!16991 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !16784)
!16992 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !16784)
!16993 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !16784)
!16994 = distinct !DILexicalBlock(scope: !16989, file: !2734, line: 71, column: 17)
!16995 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !16784)
!16996 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !16784)
!16997 = !DILexicalBlockFile(scope: !16998, file: !2734, discriminator: 1)
!16998 = distinct !DILexicalBlock(scope: !16994, file: !2734, line: 71, column: 17)
!16999 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !16784)
!17000 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !16784)
!17001 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !16784)
!17002 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !16784)
!17003 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !16784)
!17004 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !16784)
!17005 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !16784)
!17006 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !16784)
!17007 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !16784)
!17008 = !DILexicalBlockFile(scope: !16998, file: !2734, discriminator: 2)
!17009 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !16784)
!17010 = distinct !{!17010, !17011}
!17011 = !DILocation(line: 71, column: 17, scope: !16989)
!17012 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !16784)
!17013 = !DILexicalBlockFile(scope: !16989, file: !2734, discriminator: 2)
!17014 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !16784)
!17015 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !16784)
!17016 = distinct !{!17016, !17017}
!17017 = !DILocation(line: 70, column: 13, scope: !16985)
!17018 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !16784)
!17019 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !16784)
!17020 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !16784)
!17021 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !16784)
!17022 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !16784)
!17023 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !16784)
!17024 = distinct !DILexicalBlock(scope: !16781, file: !2734, line: 76, column: 9)
!17025 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !16784)
!17026 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !16784)
!17027 = distinct !DILexicalBlock(scope: !17024, file: !2734, line: 76, column: 18)
!17028 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !16784)
!17029 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !16784)
!17030 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !16784)
!17031 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !16784)
!17032 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !16784)
!17033 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !16784)
!17034 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !16784)
!17035 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !16784)
!17036 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !16784)
!17037 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !16784)
!17038 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !16784)
!17039 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !16784)
!17040 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !16784)
!17041 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !16784)
!17042 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !16784)
!17043 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !16784)
!17044 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !16784)
!17045 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !16784)
!17046 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !16784)
!17047 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !16784)
!17048 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !16784)
!17049 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !16784)
!17050 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !16784)
!17051 = distinct !DILexicalBlock(scope: !16781, file: !2734, line: 81, column: 9)
!17052 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !16784)
!17053 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !16784)
!17054 = distinct !DILexicalBlock(scope: !17051, file: !2734, line: 81, column: 22)
!17055 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !16784)
!17056 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !16784)
!17057 = distinct !DILexicalBlock(scope: !17051, file: !2734, line: 83, column: 12)
!17058 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !16784)
!17059 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !16784)
!17060 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !16784)
!17061 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !16784)
!17062 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !16784)
!17063 = !DILexicalBlockFile(scope: !16779, file: !2734, discriminator: 1)
!17064 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !16784)
!17065 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !16784)
!17066 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !16784)
!17067 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !16784)
!17068 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !16784)
!17069 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !16784)
!17070 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !16784)
!17071 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !16784)
!17072 = distinct !DILexicalBlock(scope: !16778, file: !2734, line: 92, column: 9)
!17073 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !16784)
!17074 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !16784)
!17075 = !DILexicalBlockFile(scope: !17076, file: !2734, discriminator: 1)
!17076 = distinct !DILexicalBlock(scope: !17072, file: !2734, line: 92, column: 9)
!17077 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !16784)
!17078 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !16784)
!17079 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !16784)
!17080 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !16784)
!17081 = distinct !DILexicalBlock(scope: !17076, file: !2734, line: 92, column: 35)
!17082 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !16784)
!17083 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !16784)
!17084 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !16784)
!17085 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !16784)
!17086 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !16784)
!17087 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !16784)
!17088 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !16784)
!17089 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !16784)
!17090 = !DILexicalBlockFile(scope: !17076, file: !2734, discriminator: 2)
!17091 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !16784)
!17092 = distinct !{!17092, !17093}
!17093 = !DILocation(line: 92, column: 9, scope: !16778)
!17094 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !16784)
!17095 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !16784)
!17096 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !16784)
!17097 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !16784)
!17098 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !16784)
!17099 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !16784)
!17100 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !16784)
!17101 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !16784)
!17102 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !16784)
!17103 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !16784)
!17104 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !16784)
!17105 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !16784)
!17106 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !16784)
!17107 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !16784)
!17108 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !16784)
!17109 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !16784)
!17110 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !16784)
!17111 = !DILexicalBlockFile(scope: !16795, file: !2734, discriminator: 1)
!17112 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !16784)
!17113 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !16784)
!17114 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !16784)
!17115 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !16784)
!17116 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !16784)
!17117 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !16784)
!17118 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !16784)
!17119 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !16784)
!17120 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !16784)
!17121 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !16784)
!17122 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !16784)
!17123 = !DILexicalBlockFile(scope: !16793, file: !2734, discriminator: 1)
!17124 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !16784)
!17125 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !16784)
!17126 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !16784)
!17127 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !16784)
!17128 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !16784)
!17129 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !16784)
!17130 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !16784)
!17131 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !16784)
!17132 = distinct !DILexicalBlock(scope: !16791, file: !2734, line: 103, column: 46)
!17133 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !16784)
!17134 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !16784)
!17135 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !16784)
!17136 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !16784)
!17137 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !16784)
!17138 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !16784)
!17139 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !16784)
!17140 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !16784)
!17141 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !16788)
!17142 = distinct !DILexicalBlock(scope: !16763, file: !2769, line: 231, column: 9)
!17143 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !16788)
!17144 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !16788)
!17145 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !16788)
!17146 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !16788)
!17147 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !16788)
!17148 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !16788)
!17149 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !16788)
!17150 = !DILexicalBlockFile(scope: !17142, file: !2769, discriminator: 1)
!17151 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !16788)
!17152 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !16788)
!17153 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !16788)
!17154 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !16788)
!17155 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !16788)
!17156 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !16788)
!17157 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !16788)
!17158 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !16788)
!17159 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !16788)
!17160 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !16788)
!17161 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !16784)
!17162 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !16784)
!17163 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !16784)
!17164 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !16784)
!17165 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !16784)
!17166 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !16784)
!17167 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !16784)
!17168 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !16784)
!17169 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !16784)
!17170 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !16784)
!17171 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !16784)
!17172 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !16784)
!17173 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !16784)
!17174 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !16784)
!17175 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !16784)
!17176 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !16784)
!17177 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !16784)
!17178 = distinct !DILexicalBlock(scope: !16793, file: !2734, line: 111, column: 24)
!17179 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !16784)
!17180 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !16784)
!17181 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !16784)
!17182 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !16784)
!17183 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !16784)
!17184 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !16784)
!17185 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !16784)
!17186 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !16784)
!17187 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !16784)
!17188 = distinct !DILexicalBlock(scope: !16794, file: !2734, line: 115, column: 21)
!17189 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !16784)
!17190 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !16784)
!17191 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !16784)
!17192 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !16784)
!17193 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !16784)
!17194 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !16784)
!17195 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !16784)
!17196 = !DILexicalBlockFile(scope: !17188, file: !2734, discriminator: 1)
!17197 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !16784)
!17198 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !16784)
!17199 = !DILexicalBlockFile(scope: !17188, file: !2734, discriminator: 2)
!17200 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !16784)
!17201 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !16784)
!17202 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !16784)
!17203 = !DILexicalBlockFile(scope: !17188, file: !2734, discriminator: 3)
!17204 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !16784)
!17205 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !16784)
!17206 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !16784)
!17207 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !16784)
!17208 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !16784)
!17209 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !16784)
!17210 = distinct !DILexicalBlock(scope: !16794, file: !2734, line: 117, column: 21)
!17211 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !16784)
!17212 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !16784)
!17213 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !16784)
!17214 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !16784)
!17215 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !16784)
!17216 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !16784)
!17217 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !16784)
!17218 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !16784)
!17219 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !16784)
!17220 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !16784)
!17221 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !16784)
!17222 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !16784)
!17223 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !16784)
!17224 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !16784)
!17225 = !DILexicalBlockFile(scope: !16795, file: !2734, discriminator: 2)
!17226 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !16784)
!17227 = distinct !{!17227, !17228}
!17228 = !DILocation(line: 99, column: 13, scope: !16797)
!17229 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !16784)
!17230 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !16784)
!17231 = distinct !DILexicalBlock(scope: !17232, file: !2734, line: 123, column: 13)
!17232 = distinct !DILexicalBlock(scope: !16798, file: !2734, line: 122, column: 16)
!17233 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !16784)
!17234 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !16784)
!17235 = !DILexicalBlockFile(scope: !17236, file: !2734, discriminator: 1)
!17236 = distinct !DILexicalBlock(scope: !17231, file: !2734, line: 123, column: 13)
!17237 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !16784)
!17238 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !16784)
!17239 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !16784)
!17240 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !16784)
!17241 = distinct !DILexicalBlock(scope: !17236, file: !2734, line: 123, column: 39)
!17242 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !16784)
!17243 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !16784)
!17244 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !16784)
!17245 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !16784)
!17246 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !16784)
!17247 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !16784)
!17248 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !16784)
!17249 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !16784)
!17250 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !16784)
!17251 = distinct !DILexicalBlock(scope: !17241, file: !2734, line: 126, column: 21)
!17252 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !16784)
!17253 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !16784)
!17254 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !16784)
!17255 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !16784)
!17256 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !16784)
!17257 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !16784)
!17258 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !16784)
!17259 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !16784)
!17260 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !16784)
!17261 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !16784)
!17262 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !16784)
!17263 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !16784)
!17264 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !16784)
!17265 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !16784)
!17266 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !16784)
!17267 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !16784)
!17268 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !16784)
!17269 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !16784)
!17270 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !16784)
!17271 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !16784)
!17272 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !16784)
!17273 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !16784)
!17274 = !DILexicalBlockFile(scope: !17236, file: !2734, discriminator: 2)
!17275 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !16784)
!17276 = distinct !{!17276, !17277}
!17277 = !DILocation(line: 123, column: 13, scope: !17232)
!17278 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !16784)
!17279 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !16784)
!17280 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !16784)
!17281 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !16784)
!17282 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !16784)
!17283 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !16784)
!17284 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !16784)
!17285 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !16784)
!17286 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !16784)
!17287 = distinct !DILexicalBlock(scope: !16778, file: !2734, line: 133, column: 13)
!17288 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !16784)
!17289 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !16784)
!17290 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !16784)
!17291 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !16784)
!17292 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !16784)
!17293 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !16784)
!17294 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !16784)
!17295 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !16784)
!17296 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !16784)
!17297 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !16784)
!17298 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !16784)
!17299 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !16784)
!17300 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !16784)
!17301 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !16784)
!17302 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !16784)
!17303 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !16784)
!17304 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !16784)
!17305 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !16784)
!17306 = distinct !DILexicalBlock(scope: !16776, file: !2734, line: 137, column: 17)
!17307 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !16784)
!17308 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !16784)
!17309 = distinct !DILexicalBlock(scope: !17306, file: !2734, line: 138, column: 17)
!17310 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !16784)
!17311 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !16784)
!17312 = !DILexicalBlockFile(scope: !17313, file: !2734, discriminator: 1)
!17313 = distinct !DILexicalBlock(scope: !17309, file: !2734, line: 138, column: 17)
!17314 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !16784)
!17315 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !16784)
!17316 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !16784)
!17317 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !16784)
!17318 = distinct !DILexicalBlock(scope: !17313, file: !2734, line: 139, column: 25)
!17319 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !16784)
!17320 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !16784)
!17321 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !16784)
!17322 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !16784)
!17323 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !16784)
!17324 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !16784)
!17325 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !16784)
!17326 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !16784)
!17327 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !16784)
!17328 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !16784)
!17329 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !16784)
!17330 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !16784)
!17331 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !16784)
!17332 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !16784)
!17333 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !16784)
!17334 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !16784)
!17335 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !16784)
!17336 = !DILexicalBlockFile(scope: !17313, file: !2734, discriminator: 2)
!17337 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !16784)
!17338 = distinct !{!17338, !17339}
!17339 = !DILocation(line: 138, column: 17, scope: !17306)
!17340 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !16784)
!17341 = !DILexicalBlockFile(scope: !17309, file: !2734, discriminator: 1)
!17342 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !16784)
!17343 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !16784)
!17344 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !16784)
!17345 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !16784)
!17346 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !16784)
!17347 = !DILexicalBlockFile(scope: !16772, file: !2734, discriminator: 1)
!17348 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !16784)
!17349 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !16784)
!17350 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !16784)
!17351 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !16784)
!17352 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !16784)
!17353 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !16784)
!17354 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !16784)
!17355 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !16784)
!17356 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !16784)
!17357 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !16784)
!17358 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !16784)
!17359 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !16784)
!17360 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !16784)
!17361 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !16784)
!17362 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !16784)
!17363 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !16784)
!17364 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !16784)
!17365 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !16784)
!17366 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !16784)
!17367 = !DILexicalBlockFile(scope: !16769, file: !2734, discriminator: 1)
!17368 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !16784)
!17369 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !16767)
!17370 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !16767)
!17371 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !16767)
!17372 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !16767)
!17373 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !16767)
!17374 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !16767)
!17375 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !16767)
!17376 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !16767)
!17377 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !16767)
!17378 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !16767)
!17379 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !16767)
!17380 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !16767)
!17381 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !16767)
!17382 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !16767)
!17383 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !16767)
!17384 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !16767)
!17385 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !16767)
!17386 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !16767)
!17387 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !16784)
!17388 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !16784)
!17389 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !16784)
!17390 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !16784)
!17391 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !16784)
!17392 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !16784)
!17393 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !16784)
!17394 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !16784)
!17395 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !16784)
!17396 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !16784)
!17397 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !16784)
!17398 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !16784)
!17399 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !16784)
!17400 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !16784)
!17401 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !16784)
!17402 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !16784)
!17403 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !16784)
!17404 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !16784)
!17405 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !16784)
!17406 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !16784)
!17407 = !DILexicalBlockFile(scope: !16772, file: !2734, discriminator: 2)
!17408 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !16784)
!17409 = distinct !{!17409, !17410}
!17410 = !DILocation(line: 142, column: 17, scope: !16774)
!17411 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !16784)
!17412 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !16784)
!17413 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !16784)
!17414 = !DILexicalBlockFile(scope: !16779, file: !2734, discriminator: 2)
!17415 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !16784)
!17416 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !16784)
!17417 = distinct !{!17417, !17418}
!17418 = !DILocation(line: 86, column: 5, scope: !16781)
!17419 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !16784)
!17420 = distinct !DILexicalBlock(scope: !16781, file: !2734, line: 155, column: 9)
!17421 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !16784)
!17422 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !16784)
!17423 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !16784)
!17424 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !16784)
!17425 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !16784)
!17426 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !16784)
!17427 = distinct !DILexicalBlock(scope: !16781, file: !2734, line: 157, column: 9)
!17428 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !16784)
!17429 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !16784)
!17430 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !16784)
!17431 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !16784)
!17432 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !16784)
!17433 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !16784)
!17434 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !16784)
!17435 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !16784)
!17436 = !DILocation(line: 185, column: 246, scope: !16761)
!17437 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_SQUAD", scope: !2734, file: !2734, line: 186, type: !2738, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!17438 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !17439)
!17439 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !17440)
!17440 = distinct !DILocation(line: 186, column: 254, scope: !17437)
!17441 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !17439)
!17442 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !17443)
!17443 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !17440)
!17444 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !17443)
!17445 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !17440)
!17446 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !17440)
!17447 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !17440)
!17448 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !17440)
!17449 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !17440)
!17450 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !17440)
!17451 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !17440)
!17452 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !17440)
!17453 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !17440)
!17454 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !17440)
!17455 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !17440)
!17456 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !17440)
!17457 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !17440)
!17458 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !17440)
!17459 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !17440)
!17460 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !17440)
!17461 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !17440)
!17462 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !17440)
!17463 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !17440)
!17464 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !17440)
!17465 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !17440)
!17466 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !17440)
!17467 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !17440)
!17468 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !17440)
!17469 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !17440)
!17470 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !17440)
!17471 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !17440)
!17472 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !17440)
!17473 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !17440)
!17474 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !17440)
!17475 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !17440)
!17476 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !17440)
!17477 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !17440)
!17478 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !17440)
!17479 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !17440)
!17480 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !17440)
!17481 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !17440)
!17482 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !17440)
!17483 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !17440)
!17484 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !17440)
!17485 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !17440)
!17486 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !17440)
!17487 = !DILocalVariable(name: "s", arg: 1, scope: !17437, file: !2734, line: 186, type: !1695)
!17488 = !DILocation(line: 186, column: 73, scope: !17437)
!17489 = !DILocalVariable(name: "pb", arg: 2, scope: !17437, file: !2734, line: 186, type: !2691)
!17490 = !DILocation(line: 186, column: 91, scope: !17437)
!17491 = !DILocalVariable(name: "in", arg: 3, scope: !17437, file: !2734, line: 186, type: !1780)
!17492 = !DILocation(line: 186, column: 108, scope: !17437)
!17493 = !DILocalVariable(name: "quant", arg: 4, scope: !17437, file: !2734, line: 186, type: !1779)
!17494 = !DILocation(line: 186, column: 119, scope: !17437)
!17495 = !DILocalVariable(name: "scaled", arg: 5, scope: !17437, file: !2734, line: 186, type: !1780)
!17496 = !DILocation(line: 186, column: 139, scope: !17437)
!17497 = !DILocalVariable(name: "size", arg: 6, scope: !17437, file: !2734, line: 186, type: !991)
!17498 = !DILocation(line: 186, column: 151, scope: !17437)
!17499 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !17437, file: !2734, line: 186, type: !991)
!17500 = !DILocation(line: 186, column: 161, scope: !17437)
!17501 = !DILocalVariable(name: "cb", arg: 8, scope: !17437, file: !2734, line: 186, type: !991)
!17502 = !DILocation(line: 186, column: 176, scope: !17437)
!17503 = !DILocalVariable(name: "lambda", arg: 9, scope: !17437, file: !2734, line: 186, type: !1781)
!17504 = !DILocation(line: 186, column: 192, scope: !17437)
!17505 = !DILocalVariable(name: "uplim", arg: 10, scope: !17437, file: !2734, line: 186, type: !1781)
!17506 = !DILocation(line: 186, column: 212, scope: !17437)
!17507 = !DILocalVariable(name: "bits", arg: 11, scope: !17437, file: !2734, line: 186, type: !1264)
!17508 = !DILocation(line: 186, column: 224, scope: !17437)
!17509 = !DILocalVariable(name: "energy", arg: 12, scope: !17437, file: !2734, line: 186, type: !1779)
!17510 = !DILocation(line: 186, column: 237, scope: !17437)
!17511 = !DILocation(line: 186, column: 294, scope: !17437)
!17512 = !DILocation(line: 186, column: 297, scope: !17437)
!17513 = !DILocation(line: 186, column: 301, scope: !17437)
!17514 = !DILocation(line: 186, column: 305, scope: !17437)
!17515 = !DILocation(line: 186, column: 312, scope: !17437)
!17516 = !DILocation(line: 186, column: 320, scope: !17437)
!17517 = !DILocation(line: 186, column: 326, scope: !17437)
!17518 = !DILocation(line: 186, column: 350, scope: !17437)
!17519 = !DILocation(line: 186, column: 354, scope: !17437)
!17520 = !DILocation(line: 186, column: 362, scope: !17437)
!17521 = !DILocation(line: 186, column: 369, scope: !17437)
!17522 = !DILocation(line: 186, column: 375, scope: !17437)
!17523 = !DILocation(line: 186, column: 254, scope: !17437)
!17524 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !17440)
!17525 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !17440)
!17526 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !17440)
!17527 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !17440)
!17528 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !17440)
!17529 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !17440)
!17530 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !17440)
!17531 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !17440)
!17532 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !17440)
!17533 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !17440)
!17534 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !17440)
!17535 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !17440)
!17536 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !17440)
!17537 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !17440)
!17538 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !17440)
!17539 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !17440)
!17540 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !17440)
!17541 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !17440)
!17542 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !17440)
!17543 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !17440)
!17544 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !17440)
!17545 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !17440)
!17546 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !17440)
!17547 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !17440)
!17548 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !17440)
!17549 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !17440)
!17550 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !17440)
!17551 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !17440)
!17552 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !17440)
!17553 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !17440)
!17554 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !17440)
!17555 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !17440)
!17556 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !17440)
!17557 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !17440)
!17558 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !17440)
!17559 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !17440)
!17560 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !17440)
!17561 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !17440)
!17562 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !17440)
!17563 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !17440)
!17564 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !17440)
!17565 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !17440)
!17566 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !17440)
!17567 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !17440)
!17568 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !17440)
!17569 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !17440)
!17570 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !17440)
!17571 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !17440)
!17572 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !17440)
!17573 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !17440)
!17574 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !17440)
!17575 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !17440)
!17576 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !17440)
!17577 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !17440)
!17578 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !17440)
!17579 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !17440)
!17580 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !17440)
!17581 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !17440)
!17582 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !17440)
!17583 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !17440)
!17584 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !17440)
!17585 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !17440)
!17586 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !17440)
!17587 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !17440)
!17588 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !17440)
!17589 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !17440)
!17590 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !17440)
!17591 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !17440)
!17592 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !17440)
!17593 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !17440)
!17594 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !17440)
!17595 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !17440)
!17596 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !17440)
!17597 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !17440)
!17598 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !17440)
!17599 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !17440)
!17600 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !17440)
!17601 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !17440)
!17602 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !17440)
!17603 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !17440)
!17604 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !17440)
!17605 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !17440)
!17606 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !17440)
!17607 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !17440)
!17608 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !17440)
!17609 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !17440)
!17610 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !17440)
!17611 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !17440)
!17612 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !17440)
!17613 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !17440)
!17614 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !17440)
!17615 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !17440)
!17616 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !17440)
!17617 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !17440)
!17618 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !17440)
!17619 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !17440)
!17620 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !17440)
!17621 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !17440)
!17622 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !17440)
!17623 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !17440)
!17624 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !17440)
!17625 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !17440)
!17626 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !17440)
!17627 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !17440)
!17628 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !17440)
!17629 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !17440)
!17630 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !17440)
!17631 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !17440)
!17632 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !17440)
!17633 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !17440)
!17634 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !17440)
!17635 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !17440)
!17636 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !17440)
!17637 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !17440)
!17638 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !17440)
!17639 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !17440)
!17640 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !17440)
!17641 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !17440)
!17642 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !17440)
!17643 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !17440)
!17644 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !17440)
!17645 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !17440)
!17646 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !17440)
!17647 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !17440)
!17648 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !17440)
!17649 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !17440)
!17650 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !17440)
!17651 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !17440)
!17652 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !17440)
!17653 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !17440)
!17654 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !17440)
!17655 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !17440)
!17656 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !17440)
!17657 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !17440)
!17658 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !17440)
!17659 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !17440)
!17660 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !17440)
!17661 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !17440)
!17662 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !17440)
!17663 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !17440)
!17664 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !17440)
!17665 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !17440)
!17666 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !17440)
!17667 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !17440)
!17668 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !17440)
!17669 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !17440)
!17670 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !17440)
!17671 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !17440)
!17672 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !17440)
!17673 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !17440)
!17674 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !17440)
!17675 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !17440)
!17676 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !17440)
!17677 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !17440)
!17678 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !17440)
!17679 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !17440)
!17680 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !17440)
!17681 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !17440)
!17682 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !17440)
!17683 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !17440)
!17684 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !17440)
!17685 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !17440)
!17686 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !17440)
!17687 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !17440)
!17688 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !17440)
!17689 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !17440)
!17690 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !17440)
!17691 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !17440)
!17692 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !17440)
!17693 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !17440)
!17694 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !17440)
!17695 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !17440)
!17696 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !17440)
!17697 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !17440)
!17698 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !17440)
!17699 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !17440)
!17700 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !17440)
!17701 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !17440)
!17702 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !17443)
!17703 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !17443)
!17704 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !17443)
!17705 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !17443)
!17706 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !17443)
!17707 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !17443)
!17708 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !17443)
!17709 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !17443)
!17710 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !17443)
!17711 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !17443)
!17712 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !17443)
!17713 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !17443)
!17714 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !17443)
!17715 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !17443)
!17716 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !17443)
!17717 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !17443)
!17718 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !17443)
!17719 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !17443)
!17720 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !17440)
!17721 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !17440)
!17722 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !17440)
!17723 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !17440)
!17724 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !17440)
!17725 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !17440)
!17726 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !17440)
!17727 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !17440)
!17728 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !17440)
!17729 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !17440)
!17730 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !17440)
!17731 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !17440)
!17732 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !17440)
!17733 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !17440)
!17734 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !17440)
!17735 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !17440)
!17736 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !17440)
!17737 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !17440)
!17738 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !17440)
!17739 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !17440)
!17740 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !17440)
!17741 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !17440)
!17742 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !17440)
!17743 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !17440)
!17744 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !17440)
!17745 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !17440)
!17746 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !17440)
!17747 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !17440)
!17748 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !17440)
!17749 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !17440)
!17750 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !17440)
!17751 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !17440)
!17752 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !17440)
!17753 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !17440)
!17754 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !17440)
!17755 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !17440)
!17756 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !17440)
!17757 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !17440)
!17758 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !17440)
!17759 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !17440)
!17760 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !17440)
!17761 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !17440)
!17762 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !17440)
!17763 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !17440)
!17764 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !17440)
!17765 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !17440)
!17766 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !17440)
!17767 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !17440)
!17768 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !17440)
!17769 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !17440)
!17770 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !17440)
!17771 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !17440)
!17772 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !17440)
!17773 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !17440)
!17774 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !17440)
!17775 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !17440)
!17776 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !17440)
!17777 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !17440)
!17778 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !17440)
!17779 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !17440)
!17780 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !17440)
!17781 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !17440)
!17782 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !17440)
!17783 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !17440)
!17784 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !17440)
!17785 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !17440)
!17786 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !17440)
!17787 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !17440)
!17788 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !17440)
!17789 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !17440)
!17790 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !17440)
!17791 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !17440)
!17792 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !17440)
!17793 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !17440)
!17794 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !17440)
!17795 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !17440)
!17796 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !17440)
!17797 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !17440)
!17798 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !17440)
!17799 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !17440)
!17800 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !17440)
!17801 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !17440)
!17802 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !17440)
!17803 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !17440)
!17804 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !17440)
!17805 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !17440)
!17806 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !17440)
!17807 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !17440)
!17808 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !17440)
!17809 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !17440)
!17810 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !17440)
!17811 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !17440)
!17812 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !17440)
!17813 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !17440)
!17814 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !17440)
!17815 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !17440)
!17816 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !17440)
!17817 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !17440)
!17818 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !17440)
!17819 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !17440)
!17820 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !17440)
!17821 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !17440)
!17822 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !17440)
!17823 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !17440)
!17824 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !17440)
!17825 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !17440)
!17826 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !17440)
!17827 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !17440)
!17828 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !17440)
!17829 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !17440)
!17830 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !17440)
!17831 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !17440)
!17832 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !17440)
!17833 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !17440)
!17834 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !17440)
!17835 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !17440)
!17836 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !17440)
!17837 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !17440)
!17838 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !17440)
!17839 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !17440)
!17840 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !17440)
!17841 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !17440)
!17842 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !17440)
!17843 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !17440)
!17844 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !17440)
!17845 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !17440)
!17846 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !17440)
!17847 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !17440)
!17848 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !17440)
!17849 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !17440)
!17850 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !17440)
!17851 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !17440)
!17852 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !17440)
!17853 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !17440)
!17854 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !17440)
!17855 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !17440)
!17856 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !17440)
!17857 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !17440)
!17858 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !17440)
!17859 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !17440)
!17860 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !17440)
!17861 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !17440)
!17862 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !17440)
!17863 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !17440)
!17864 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !17440)
!17865 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !17440)
!17866 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !17440)
!17867 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !17440)
!17868 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !17440)
!17869 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !17440)
!17870 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !17440)
!17871 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !17440)
!17872 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !17440)
!17873 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !17440)
!17874 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !17440)
!17875 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !17440)
!17876 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !17440)
!17877 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !17440)
!17878 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !17440)
!17879 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !17440)
!17880 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !17440)
!17881 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !17440)
!17882 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !17440)
!17883 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !17440)
!17884 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !17440)
!17885 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !17440)
!17886 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !17440)
!17887 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !17440)
!17888 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !17440)
!17889 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !17440)
!17890 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !17440)
!17891 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !17440)
!17892 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !17440)
!17893 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !17440)
!17894 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !17440)
!17895 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !17440)
!17896 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !17440)
!17897 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !17440)
!17898 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !17439)
!17899 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !17439)
!17900 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !17439)
!17901 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !17439)
!17902 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !17439)
!17903 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !17439)
!17904 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !17439)
!17905 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !17439)
!17906 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !17439)
!17907 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !17439)
!17908 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !17439)
!17909 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !17439)
!17910 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !17439)
!17911 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !17439)
!17912 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !17439)
!17913 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !17439)
!17914 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !17439)
!17915 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !17439)
!17916 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !17440)
!17917 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !17440)
!17918 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !17440)
!17919 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !17440)
!17920 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !17440)
!17921 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !17440)
!17922 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !17440)
!17923 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !17440)
!17924 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !17440)
!17925 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !17440)
!17926 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !17440)
!17927 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !17440)
!17928 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !17440)
!17929 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !17440)
!17930 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !17440)
!17931 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !17440)
!17932 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !17440)
!17933 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !17440)
!17934 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !17440)
!17935 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !17440)
!17936 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !17440)
!17937 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !17440)
!17938 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !17440)
!17939 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !17440)
!17940 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !17440)
!17941 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !17440)
!17942 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !17440)
!17943 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !17440)
!17944 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !17440)
!17945 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !17440)
!17946 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !17440)
!17947 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !17440)
!17948 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !17440)
!17949 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !17440)
!17950 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !17440)
!17951 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !17440)
!17952 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !17440)
!17953 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !17440)
!17954 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !17440)
!17955 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !17440)
!17956 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !17440)
!17957 = !DILocation(line: 186, column: 247, scope: !17437)
!17958 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_UQUAD", scope: !2734, file: !2734, line: 187, type: !2738, isLocal: true, isDefinition: true, scopeLine: 187, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!17959 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !17960)
!17960 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !17961)
!17961 = distinct !DILocation(line: 187, column: 254, scope: !17958)
!17962 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !17960)
!17963 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !17964)
!17964 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !17961)
!17965 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !17964)
!17966 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !17961)
!17967 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !17961)
!17968 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !17961)
!17969 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !17961)
!17970 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !17961)
!17971 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !17961)
!17972 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !17961)
!17973 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !17961)
!17974 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !17961)
!17975 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !17961)
!17976 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !17961)
!17977 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !17961)
!17978 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !17961)
!17979 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !17961)
!17980 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !17961)
!17981 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !17961)
!17982 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !17961)
!17983 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !17961)
!17984 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !17961)
!17985 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !17961)
!17986 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !17961)
!17987 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !17961)
!17988 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !17961)
!17989 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !17961)
!17990 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !17961)
!17991 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !17961)
!17992 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !17961)
!17993 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !17961)
!17994 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !17961)
!17995 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !17961)
!17996 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !17961)
!17997 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !17961)
!17998 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !17961)
!17999 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !17961)
!18000 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !17961)
!18001 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !17961)
!18002 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !17961)
!18003 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !17961)
!18004 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !17961)
!18005 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !17961)
!18006 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !17961)
!18007 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !17961)
!18008 = !DILocalVariable(name: "s", arg: 1, scope: !17958, file: !2734, line: 187, type: !1695)
!18009 = !DILocation(line: 187, column: 73, scope: !17958)
!18010 = !DILocalVariable(name: "pb", arg: 2, scope: !17958, file: !2734, line: 187, type: !2691)
!18011 = !DILocation(line: 187, column: 91, scope: !17958)
!18012 = !DILocalVariable(name: "in", arg: 3, scope: !17958, file: !2734, line: 187, type: !1780)
!18013 = !DILocation(line: 187, column: 108, scope: !17958)
!18014 = !DILocalVariable(name: "quant", arg: 4, scope: !17958, file: !2734, line: 187, type: !1779)
!18015 = !DILocation(line: 187, column: 119, scope: !17958)
!18016 = !DILocalVariable(name: "scaled", arg: 5, scope: !17958, file: !2734, line: 187, type: !1780)
!18017 = !DILocation(line: 187, column: 139, scope: !17958)
!18018 = !DILocalVariable(name: "size", arg: 6, scope: !17958, file: !2734, line: 187, type: !991)
!18019 = !DILocation(line: 187, column: 151, scope: !17958)
!18020 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !17958, file: !2734, line: 187, type: !991)
!18021 = !DILocation(line: 187, column: 161, scope: !17958)
!18022 = !DILocalVariable(name: "cb", arg: 8, scope: !17958, file: !2734, line: 187, type: !991)
!18023 = !DILocation(line: 187, column: 176, scope: !17958)
!18024 = !DILocalVariable(name: "lambda", arg: 9, scope: !17958, file: !2734, line: 187, type: !1781)
!18025 = !DILocation(line: 187, column: 192, scope: !17958)
!18026 = !DILocalVariable(name: "uplim", arg: 10, scope: !17958, file: !2734, line: 187, type: !1781)
!18027 = !DILocation(line: 187, column: 212, scope: !17958)
!18028 = !DILocalVariable(name: "bits", arg: 11, scope: !17958, file: !2734, line: 187, type: !1264)
!18029 = !DILocation(line: 187, column: 224, scope: !17958)
!18030 = !DILocalVariable(name: "energy", arg: 12, scope: !17958, file: !2734, line: 187, type: !1779)
!18031 = !DILocation(line: 187, column: 237, scope: !17958)
!18032 = !DILocation(line: 187, column: 294, scope: !17958)
!18033 = !DILocation(line: 187, column: 297, scope: !17958)
!18034 = !DILocation(line: 187, column: 301, scope: !17958)
!18035 = !DILocation(line: 187, column: 305, scope: !17958)
!18036 = !DILocation(line: 187, column: 312, scope: !17958)
!18037 = !DILocation(line: 187, column: 320, scope: !17958)
!18038 = !DILocation(line: 187, column: 326, scope: !17958)
!18039 = !DILocation(line: 187, column: 350, scope: !17958)
!18040 = !DILocation(line: 187, column: 354, scope: !17958)
!18041 = !DILocation(line: 187, column: 362, scope: !17958)
!18042 = !DILocation(line: 187, column: 369, scope: !17958)
!18043 = !DILocation(line: 187, column: 375, scope: !17958)
!18044 = !DILocation(line: 187, column: 254, scope: !17958)
!18045 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !17961)
!18046 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !17961)
!18047 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !17961)
!18048 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !17961)
!18049 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !17961)
!18050 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !17961)
!18051 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !17961)
!18052 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !17961)
!18053 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !17961)
!18054 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !17961)
!18055 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !17961)
!18056 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !17961)
!18057 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !17961)
!18058 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !17961)
!18059 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !17961)
!18060 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !17961)
!18061 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !17961)
!18062 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !17961)
!18063 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !17961)
!18064 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !17961)
!18065 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !17961)
!18066 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !17961)
!18067 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !17961)
!18068 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !17961)
!18069 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !17961)
!18070 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !17961)
!18071 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !17961)
!18072 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !17961)
!18073 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !17961)
!18074 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !17961)
!18075 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !17961)
!18076 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !17961)
!18077 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !17961)
!18078 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !17961)
!18079 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !17961)
!18080 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !17961)
!18081 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !17961)
!18082 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !17961)
!18083 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !17961)
!18084 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !17961)
!18085 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !17961)
!18086 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !17961)
!18087 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !17961)
!18088 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !17961)
!18089 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !17961)
!18090 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !17961)
!18091 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !17961)
!18092 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !17961)
!18093 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !17961)
!18094 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !17961)
!18095 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !17961)
!18096 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !17961)
!18097 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !17961)
!18098 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !17961)
!18099 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !17961)
!18100 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !17961)
!18101 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !17961)
!18102 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !17961)
!18103 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !17961)
!18104 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !17961)
!18105 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !17961)
!18106 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !17961)
!18107 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !17961)
!18108 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !17961)
!18109 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !17961)
!18110 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !17961)
!18111 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !17961)
!18112 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !17961)
!18113 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !17961)
!18114 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !17961)
!18115 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !17961)
!18116 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !17961)
!18117 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !17961)
!18118 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !17961)
!18119 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !17961)
!18120 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !17961)
!18121 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !17961)
!18122 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !17961)
!18123 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !17961)
!18124 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !17961)
!18125 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !17961)
!18126 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !17961)
!18127 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !17961)
!18128 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !17961)
!18129 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !17961)
!18130 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !17961)
!18131 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !17961)
!18132 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !17961)
!18133 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !17961)
!18134 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !17961)
!18135 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !17961)
!18136 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !17961)
!18137 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !17961)
!18138 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !17961)
!18139 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !17961)
!18140 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !17961)
!18141 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !17961)
!18142 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !17961)
!18143 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !17961)
!18144 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !17961)
!18145 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !17961)
!18146 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !17961)
!18147 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !17961)
!18148 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !17961)
!18149 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !17961)
!18150 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !17961)
!18151 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !17961)
!18152 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !17961)
!18153 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !17961)
!18154 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !17961)
!18155 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !17961)
!18156 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !17961)
!18157 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !17961)
!18158 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !17961)
!18159 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !17961)
!18160 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !17961)
!18161 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !17961)
!18162 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !17961)
!18163 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !17961)
!18164 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !17961)
!18165 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !17961)
!18166 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !17961)
!18167 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !17961)
!18168 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !17961)
!18169 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !17961)
!18170 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !17961)
!18171 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !17961)
!18172 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !17961)
!18173 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !17961)
!18174 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !17961)
!18175 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !17961)
!18176 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !17961)
!18177 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !17961)
!18178 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !17961)
!18179 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !17961)
!18180 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !17961)
!18181 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !17961)
!18182 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !17961)
!18183 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !17961)
!18184 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !17961)
!18185 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !17961)
!18186 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !17961)
!18187 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !17961)
!18188 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !17961)
!18189 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !17961)
!18190 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !17961)
!18191 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !17961)
!18192 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !17961)
!18193 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !17961)
!18194 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !17961)
!18195 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !17961)
!18196 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !17961)
!18197 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !17961)
!18198 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !17961)
!18199 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !17961)
!18200 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !17961)
!18201 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !17961)
!18202 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !17961)
!18203 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !17961)
!18204 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !17961)
!18205 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !17961)
!18206 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !17961)
!18207 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !17961)
!18208 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !17961)
!18209 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !17961)
!18210 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !17961)
!18211 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !17961)
!18212 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !17961)
!18213 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !17961)
!18214 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !17961)
!18215 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !17961)
!18216 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !17961)
!18217 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !17961)
!18218 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !17961)
!18219 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !17961)
!18220 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !17961)
!18221 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !17961)
!18222 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !17961)
!18223 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !17964)
!18224 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !17964)
!18225 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !17964)
!18226 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !17964)
!18227 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !17964)
!18228 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !17964)
!18229 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !17964)
!18230 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !17964)
!18231 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !17964)
!18232 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !17964)
!18233 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !17964)
!18234 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !17964)
!18235 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !17964)
!18236 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !17964)
!18237 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !17964)
!18238 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !17964)
!18239 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !17964)
!18240 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !17964)
!18241 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !17961)
!18242 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !17961)
!18243 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !17961)
!18244 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !17961)
!18245 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !17961)
!18246 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !17961)
!18247 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !17961)
!18248 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !17961)
!18249 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !17961)
!18250 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !17961)
!18251 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !17961)
!18252 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !17961)
!18253 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !17961)
!18254 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !17961)
!18255 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !17961)
!18256 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !17961)
!18257 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !17961)
!18258 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !17961)
!18259 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !17961)
!18260 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !17961)
!18261 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !17961)
!18262 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !17961)
!18263 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !17961)
!18264 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !17961)
!18265 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !17961)
!18266 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !17961)
!18267 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !17961)
!18268 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !17961)
!18269 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !17961)
!18270 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !17961)
!18271 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !17961)
!18272 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !17961)
!18273 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !17961)
!18274 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !17961)
!18275 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !17961)
!18276 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !17961)
!18277 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !17961)
!18278 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !17961)
!18279 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !17961)
!18280 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !17961)
!18281 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !17961)
!18282 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !17961)
!18283 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !17961)
!18284 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !17961)
!18285 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !17961)
!18286 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !17961)
!18287 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !17961)
!18288 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !17961)
!18289 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !17961)
!18290 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !17961)
!18291 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !17961)
!18292 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !17961)
!18293 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !17961)
!18294 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !17961)
!18295 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !17961)
!18296 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !17961)
!18297 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !17961)
!18298 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !17961)
!18299 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !17961)
!18300 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !17961)
!18301 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !17961)
!18302 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !17961)
!18303 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !17961)
!18304 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !17961)
!18305 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !17961)
!18306 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !17961)
!18307 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !17961)
!18308 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !17961)
!18309 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !17961)
!18310 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !17961)
!18311 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !17961)
!18312 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !17961)
!18313 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !17961)
!18314 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !17961)
!18315 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !17961)
!18316 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !17961)
!18317 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !17961)
!18318 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !17961)
!18319 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !17961)
!18320 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !17961)
!18321 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !17961)
!18322 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !17961)
!18323 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !17961)
!18324 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !17961)
!18325 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !17961)
!18326 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !17961)
!18327 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !17961)
!18328 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !17961)
!18329 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !17961)
!18330 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !17961)
!18331 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !17961)
!18332 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !17961)
!18333 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !17961)
!18334 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !17961)
!18335 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !17961)
!18336 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !17961)
!18337 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !17961)
!18338 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !17961)
!18339 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !17961)
!18340 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !17961)
!18341 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !17961)
!18342 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !17961)
!18343 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !17961)
!18344 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !17961)
!18345 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !17961)
!18346 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !17961)
!18347 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !17961)
!18348 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !17961)
!18349 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !17961)
!18350 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !17961)
!18351 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !17961)
!18352 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !17961)
!18353 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !17961)
!18354 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !17961)
!18355 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !17961)
!18356 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !17961)
!18357 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !17961)
!18358 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !17961)
!18359 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !17961)
!18360 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !17961)
!18361 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !17961)
!18362 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !17961)
!18363 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !17961)
!18364 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !17961)
!18365 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !17961)
!18366 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !17961)
!18367 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !17961)
!18368 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !17961)
!18369 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !17961)
!18370 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !17961)
!18371 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !17961)
!18372 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !17961)
!18373 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !17961)
!18374 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !17961)
!18375 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !17961)
!18376 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !17961)
!18377 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !17961)
!18378 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !17961)
!18379 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !17961)
!18380 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !17961)
!18381 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !17961)
!18382 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !17961)
!18383 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !17961)
!18384 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !17961)
!18385 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !17961)
!18386 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !17961)
!18387 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !17961)
!18388 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !17961)
!18389 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !17961)
!18390 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !17961)
!18391 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !17961)
!18392 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !17961)
!18393 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !17961)
!18394 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !17961)
!18395 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !17961)
!18396 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !17961)
!18397 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !17961)
!18398 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !17961)
!18399 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !17961)
!18400 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !17961)
!18401 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !17961)
!18402 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !17961)
!18403 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !17961)
!18404 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !17961)
!18405 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !17961)
!18406 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !17961)
!18407 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !17961)
!18408 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !17961)
!18409 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !17961)
!18410 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !17961)
!18411 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !17961)
!18412 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !17961)
!18413 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !17961)
!18414 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !17961)
!18415 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !17961)
!18416 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !17961)
!18417 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !17961)
!18418 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !17961)
!18419 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !17960)
!18420 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !17960)
!18421 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !17960)
!18422 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !17960)
!18423 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !17960)
!18424 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !17960)
!18425 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !17960)
!18426 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !17960)
!18427 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !17960)
!18428 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !17960)
!18429 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !17960)
!18430 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !17960)
!18431 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !17960)
!18432 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !17960)
!18433 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !17960)
!18434 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !17960)
!18435 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !17960)
!18436 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !17960)
!18437 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !17961)
!18438 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !17961)
!18439 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !17961)
!18440 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !17961)
!18441 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !17961)
!18442 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !17961)
!18443 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !17961)
!18444 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !17961)
!18445 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !17961)
!18446 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !17961)
!18447 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !17961)
!18448 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !17961)
!18449 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !17961)
!18450 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !17961)
!18451 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !17961)
!18452 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !17961)
!18453 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !17961)
!18454 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !17961)
!18455 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !17961)
!18456 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !17961)
!18457 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !17961)
!18458 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !17961)
!18459 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !17961)
!18460 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !17961)
!18461 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !17961)
!18462 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !17961)
!18463 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !17961)
!18464 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !17961)
!18465 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !17961)
!18466 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !17961)
!18467 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !17961)
!18468 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !17961)
!18469 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !17961)
!18470 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !17961)
!18471 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !17961)
!18472 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !17961)
!18473 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !17961)
!18474 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !17961)
!18475 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !17961)
!18476 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !17961)
!18477 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !17961)
!18478 = !DILocation(line: 187, column: 247, scope: !17958)
!18479 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_SPAIR", scope: !2734, file: !2734, line: 188, type: !2738, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!18480 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !18481)
!18481 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !18482)
!18482 = distinct !DILocation(line: 188, column: 254, scope: !18479)
!18483 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !18481)
!18484 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !18485)
!18485 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !18482)
!18486 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !18485)
!18487 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !18482)
!18488 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !18482)
!18489 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !18482)
!18490 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !18482)
!18491 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !18482)
!18492 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !18482)
!18493 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !18482)
!18494 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !18482)
!18495 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !18482)
!18496 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !18482)
!18497 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !18482)
!18498 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !18482)
!18499 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !18482)
!18500 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !18482)
!18501 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !18482)
!18502 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !18482)
!18503 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !18482)
!18504 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !18482)
!18505 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !18482)
!18506 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !18482)
!18507 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !18482)
!18508 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !18482)
!18509 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !18482)
!18510 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !18482)
!18511 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !18482)
!18512 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !18482)
!18513 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !18482)
!18514 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !18482)
!18515 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !18482)
!18516 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !18482)
!18517 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !18482)
!18518 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !18482)
!18519 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !18482)
!18520 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !18482)
!18521 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !18482)
!18522 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !18482)
!18523 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !18482)
!18524 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !18482)
!18525 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !18482)
!18526 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !18482)
!18527 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !18482)
!18528 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !18482)
!18529 = !DILocalVariable(name: "s", arg: 1, scope: !18479, file: !2734, line: 188, type: !1695)
!18530 = !DILocation(line: 188, column: 73, scope: !18479)
!18531 = !DILocalVariable(name: "pb", arg: 2, scope: !18479, file: !2734, line: 188, type: !2691)
!18532 = !DILocation(line: 188, column: 91, scope: !18479)
!18533 = !DILocalVariable(name: "in", arg: 3, scope: !18479, file: !2734, line: 188, type: !1780)
!18534 = !DILocation(line: 188, column: 108, scope: !18479)
!18535 = !DILocalVariable(name: "quant", arg: 4, scope: !18479, file: !2734, line: 188, type: !1779)
!18536 = !DILocation(line: 188, column: 119, scope: !18479)
!18537 = !DILocalVariable(name: "scaled", arg: 5, scope: !18479, file: !2734, line: 188, type: !1780)
!18538 = !DILocation(line: 188, column: 139, scope: !18479)
!18539 = !DILocalVariable(name: "size", arg: 6, scope: !18479, file: !2734, line: 188, type: !991)
!18540 = !DILocation(line: 188, column: 151, scope: !18479)
!18541 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !18479, file: !2734, line: 188, type: !991)
!18542 = !DILocation(line: 188, column: 161, scope: !18479)
!18543 = !DILocalVariable(name: "cb", arg: 8, scope: !18479, file: !2734, line: 188, type: !991)
!18544 = !DILocation(line: 188, column: 176, scope: !18479)
!18545 = !DILocalVariable(name: "lambda", arg: 9, scope: !18479, file: !2734, line: 188, type: !1781)
!18546 = !DILocation(line: 188, column: 192, scope: !18479)
!18547 = !DILocalVariable(name: "uplim", arg: 10, scope: !18479, file: !2734, line: 188, type: !1781)
!18548 = !DILocation(line: 188, column: 212, scope: !18479)
!18549 = !DILocalVariable(name: "bits", arg: 11, scope: !18479, file: !2734, line: 188, type: !1264)
!18550 = !DILocation(line: 188, column: 224, scope: !18479)
!18551 = !DILocalVariable(name: "energy", arg: 12, scope: !18479, file: !2734, line: 188, type: !1779)
!18552 = !DILocation(line: 188, column: 237, scope: !18479)
!18553 = !DILocation(line: 188, column: 294, scope: !18479)
!18554 = !DILocation(line: 188, column: 297, scope: !18479)
!18555 = !DILocation(line: 188, column: 301, scope: !18479)
!18556 = !DILocation(line: 188, column: 305, scope: !18479)
!18557 = !DILocation(line: 188, column: 312, scope: !18479)
!18558 = !DILocation(line: 188, column: 320, scope: !18479)
!18559 = !DILocation(line: 188, column: 326, scope: !18479)
!18560 = !DILocation(line: 188, column: 350, scope: !18479)
!18561 = !DILocation(line: 188, column: 354, scope: !18479)
!18562 = !DILocation(line: 188, column: 362, scope: !18479)
!18563 = !DILocation(line: 188, column: 369, scope: !18479)
!18564 = !DILocation(line: 188, column: 375, scope: !18479)
!18565 = !DILocation(line: 188, column: 254, scope: !18479)
!18566 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !18482)
!18567 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !18482)
!18568 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !18482)
!18569 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !18482)
!18570 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !18482)
!18571 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !18482)
!18572 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !18482)
!18573 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !18482)
!18574 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !18482)
!18575 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !18482)
!18576 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !18482)
!18577 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !18482)
!18578 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !18482)
!18579 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !18482)
!18580 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !18482)
!18581 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !18482)
!18582 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !18482)
!18583 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !18482)
!18584 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !18482)
!18585 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !18482)
!18586 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !18482)
!18587 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !18482)
!18588 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !18482)
!18589 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !18482)
!18590 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !18482)
!18591 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !18482)
!18592 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !18482)
!18593 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !18482)
!18594 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !18482)
!18595 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !18482)
!18596 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !18482)
!18597 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !18482)
!18598 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !18482)
!18599 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !18482)
!18600 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !18482)
!18601 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !18482)
!18602 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !18482)
!18603 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !18482)
!18604 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !18482)
!18605 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !18482)
!18606 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !18482)
!18607 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !18482)
!18608 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !18482)
!18609 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !18482)
!18610 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !18482)
!18611 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !18482)
!18612 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !18482)
!18613 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !18482)
!18614 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !18482)
!18615 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !18482)
!18616 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !18482)
!18617 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !18482)
!18618 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !18482)
!18619 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !18482)
!18620 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !18482)
!18621 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !18482)
!18622 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !18482)
!18623 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !18482)
!18624 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !18482)
!18625 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !18482)
!18626 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !18482)
!18627 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !18482)
!18628 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !18482)
!18629 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !18482)
!18630 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !18482)
!18631 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !18482)
!18632 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !18482)
!18633 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !18482)
!18634 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !18482)
!18635 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !18482)
!18636 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !18482)
!18637 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !18482)
!18638 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !18482)
!18639 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !18482)
!18640 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !18482)
!18641 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !18482)
!18642 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !18482)
!18643 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !18482)
!18644 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !18482)
!18645 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !18482)
!18646 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !18482)
!18647 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !18482)
!18648 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !18482)
!18649 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !18482)
!18650 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !18482)
!18651 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !18482)
!18652 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !18482)
!18653 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !18482)
!18654 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !18482)
!18655 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !18482)
!18656 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !18482)
!18657 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !18482)
!18658 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !18482)
!18659 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !18482)
!18660 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !18482)
!18661 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !18482)
!18662 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !18482)
!18663 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !18482)
!18664 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !18482)
!18665 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !18482)
!18666 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !18482)
!18667 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !18482)
!18668 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !18482)
!18669 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !18482)
!18670 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !18482)
!18671 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !18482)
!18672 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !18482)
!18673 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !18482)
!18674 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !18482)
!18675 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !18482)
!18676 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !18482)
!18677 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !18482)
!18678 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !18482)
!18679 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !18482)
!18680 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !18482)
!18681 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !18482)
!18682 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !18482)
!18683 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !18482)
!18684 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !18482)
!18685 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !18482)
!18686 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !18482)
!18687 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !18482)
!18688 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !18482)
!18689 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !18482)
!18690 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !18482)
!18691 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !18482)
!18692 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !18482)
!18693 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !18482)
!18694 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !18482)
!18695 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !18482)
!18696 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !18482)
!18697 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !18482)
!18698 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !18482)
!18699 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !18482)
!18700 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !18482)
!18701 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !18482)
!18702 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !18482)
!18703 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !18482)
!18704 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !18482)
!18705 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !18482)
!18706 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !18482)
!18707 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !18482)
!18708 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !18482)
!18709 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !18482)
!18710 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !18482)
!18711 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !18482)
!18712 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !18482)
!18713 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !18482)
!18714 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !18482)
!18715 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !18482)
!18716 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !18482)
!18717 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !18482)
!18718 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !18482)
!18719 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !18482)
!18720 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !18482)
!18721 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !18482)
!18722 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !18482)
!18723 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !18482)
!18724 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !18482)
!18725 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !18482)
!18726 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !18482)
!18727 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !18482)
!18728 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !18482)
!18729 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !18482)
!18730 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !18482)
!18731 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !18482)
!18732 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !18482)
!18733 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !18482)
!18734 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !18482)
!18735 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !18482)
!18736 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !18482)
!18737 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !18482)
!18738 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !18482)
!18739 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !18482)
!18740 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !18482)
!18741 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !18482)
!18742 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !18482)
!18743 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !18482)
!18744 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !18485)
!18745 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !18485)
!18746 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !18485)
!18747 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !18485)
!18748 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !18485)
!18749 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !18485)
!18750 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !18485)
!18751 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !18485)
!18752 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !18485)
!18753 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !18485)
!18754 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !18485)
!18755 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !18485)
!18756 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !18485)
!18757 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !18485)
!18758 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !18485)
!18759 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !18485)
!18760 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !18485)
!18761 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !18485)
!18762 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !18482)
!18763 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !18482)
!18764 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !18482)
!18765 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !18482)
!18766 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !18482)
!18767 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !18482)
!18768 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !18482)
!18769 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !18482)
!18770 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !18482)
!18771 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !18482)
!18772 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !18482)
!18773 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !18482)
!18774 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !18482)
!18775 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !18482)
!18776 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !18482)
!18777 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !18482)
!18778 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !18482)
!18779 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !18482)
!18780 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !18482)
!18781 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !18482)
!18782 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !18482)
!18783 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !18482)
!18784 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !18482)
!18785 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !18482)
!18786 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !18482)
!18787 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !18482)
!18788 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !18482)
!18789 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !18482)
!18790 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !18482)
!18791 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !18482)
!18792 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !18482)
!18793 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !18482)
!18794 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !18482)
!18795 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !18482)
!18796 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !18482)
!18797 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !18482)
!18798 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !18482)
!18799 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !18482)
!18800 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !18482)
!18801 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !18482)
!18802 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !18482)
!18803 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !18482)
!18804 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !18482)
!18805 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !18482)
!18806 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !18482)
!18807 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !18482)
!18808 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !18482)
!18809 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !18482)
!18810 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !18482)
!18811 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !18482)
!18812 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !18482)
!18813 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !18482)
!18814 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !18482)
!18815 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !18482)
!18816 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !18482)
!18817 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !18482)
!18818 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !18482)
!18819 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !18482)
!18820 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !18482)
!18821 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !18482)
!18822 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !18482)
!18823 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !18482)
!18824 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !18482)
!18825 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !18482)
!18826 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !18482)
!18827 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !18482)
!18828 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !18482)
!18829 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !18482)
!18830 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !18482)
!18831 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !18482)
!18832 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !18482)
!18833 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !18482)
!18834 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !18482)
!18835 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !18482)
!18836 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !18482)
!18837 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !18482)
!18838 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !18482)
!18839 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !18482)
!18840 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !18482)
!18841 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !18482)
!18842 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !18482)
!18843 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !18482)
!18844 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !18482)
!18845 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !18482)
!18846 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !18482)
!18847 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !18482)
!18848 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !18482)
!18849 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !18482)
!18850 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !18482)
!18851 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !18482)
!18852 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !18482)
!18853 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !18482)
!18854 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !18482)
!18855 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !18482)
!18856 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !18482)
!18857 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !18482)
!18858 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !18482)
!18859 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !18482)
!18860 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !18482)
!18861 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !18482)
!18862 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !18482)
!18863 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !18482)
!18864 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !18482)
!18865 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !18482)
!18866 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !18482)
!18867 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !18482)
!18868 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !18482)
!18869 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !18482)
!18870 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !18482)
!18871 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !18482)
!18872 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !18482)
!18873 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !18482)
!18874 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !18482)
!18875 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !18482)
!18876 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !18482)
!18877 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !18482)
!18878 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !18482)
!18879 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !18482)
!18880 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !18482)
!18881 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !18482)
!18882 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !18482)
!18883 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !18482)
!18884 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !18482)
!18885 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !18482)
!18886 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !18482)
!18887 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !18482)
!18888 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !18482)
!18889 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !18482)
!18890 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !18482)
!18891 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !18482)
!18892 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !18482)
!18893 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !18482)
!18894 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !18482)
!18895 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !18482)
!18896 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !18482)
!18897 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !18482)
!18898 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !18482)
!18899 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !18482)
!18900 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !18482)
!18901 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !18482)
!18902 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !18482)
!18903 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !18482)
!18904 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !18482)
!18905 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !18482)
!18906 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !18482)
!18907 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !18482)
!18908 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !18482)
!18909 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !18482)
!18910 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !18482)
!18911 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !18482)
!18912 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !18482)
!18913 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !18482)
!18914 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !18482)
!18915 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !18482)
!18916 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !18482)
!18917 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !18482)
!18918 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !18482)
!18919 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !18482)
!18920 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !18482)
!18921 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !18482)
!18922 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !18482)
!18923 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !18482)
!18924 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !18482)
!18925 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !18482)
!18926 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !18482)
!18927 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !18482)
!18928 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !18482)
!18929 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !18482)
!18930 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !18482)
!18931 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !18482)
!18932 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !18482)
!18933 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !18482)
!18934 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !18482)
!18935 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !18482)
!18936 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !18482)
!18937 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !18482)
!18938 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !18482)
!18939 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !18482)
!18940 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !18481)
!18941 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !18481)
!18942 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !18481)
!18943 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !18481)
!18944 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !18481)
!18945 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !18481)
!18946 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !18481)
!18947 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !18481)
!18948 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !18481)
!18949 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !18481)
!18950 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !18481)
!18951 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !18481)
!18952 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !18481)
!18953 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !18481)
!18954 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !18481)
!18955 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !18481)
!18956 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !18481)
!18957 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !18481)
!18958 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !18482)
!18959 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !18482)
!18960 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !18482)
!18961 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !18482)
!18962 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !18482)
!18963 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !18482)
!18964 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !18482)
!18965 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !18482)
!18966 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !18482)
!18967 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !18482)
!18968 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !18482)
!18969 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !18482)
!18970 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !18482)
!18971 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !18482)
!18972 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !18482)
!18973 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !18482)
!18974 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !18482)
!18975 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !18482)
!18976 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !18482)
!18977 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !18482)
!18978 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !18482)
!18979 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !18482)
!18980 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !18482)
!18981 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !18482)
!18982 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !18482)
!18983 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !18482)
!18984 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !18482)
!18985 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !18482)
!18986 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !18482)
!18987 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !18482)
!18988 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !18482)
!18989 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !18482)
!18990 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !18482)
!18991 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !18482)
!18992 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !18482)
!18993 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !18482)
!18994 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !18482)
!18995 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !18482)
!18996 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !18482)
!18997 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !18482)
!18998 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !18482)
!18999 = !DILocation(line: 188, column: 247, scope: !18479)
!19000 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_UPAIR", scope: !2734, file: !2734, line: 189, type: !2738, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!19001 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !19002)
!19002 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !19003)
!19003 = distinct !DILocation(line: 189, column: 254, scope: !19000)
!19004 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !19002)
!19005 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !19006)
!19006 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !19003)
!19007 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !19006)
!19008 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !19003)
!19009 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !19003)
!19010 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !19003)
!19011 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !19003)
!19012 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !19003)
!19013 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !19003)
!19014 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !19003)
!19015 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !19003)
!19016 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !19003)
!19017 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !19003)
!19018 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !19003)
!19019 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !19003)
!19020 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !19003)
!19021 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !19003)
!19022 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !19003)
!19023 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !19003)
!19024 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !19003)
!19025 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !19003)
!19026 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !19003)
!19027 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !19003)
!19028 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !19003)
!19029 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !19003)
!19030 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !19003)
!19031 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !19003)
!19032 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !19003)
!19033 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !19003)
!19034 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !19003)
!19035 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !19003)
!19036 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !19003)
!19037 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !19003)
!19038 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !19003)
!19039 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !19003)
!19040 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !19003)
!19041 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !19003)
!19042 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !19003)
!19043 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !19003)
!19044 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !19003)
!19045 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !19003)
!19046 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !19003)
!19047 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !19003)
!19048 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !19003)
!19049 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !19003)
!19050 = !DILocalVariable(name: "s", arg: 1, scope: !19000, file: !2734, line: 189, type: !1695)
!19051 = !DILocation(line: 189, column: 73, scope: !19000)
!19052 = !DILocalVariable(name: "pb", arg: 2, scope: !19000, file: !2734, line: 189, type: !2691)
!19053 = !DILocation(line: 189, column: 91, scope: !19000)
!19054 = !DILocalVariable(name: "in", arg: 3, scope: !19000, file: !2734, line: 189, type: !1780)
!19055 = !DILocation(line: 189, column: 108, scope: !19000)
!19056 = !DILocalVariable(name: "quant", arg: 4, scope: !19000, file: !2734, line: 189, type: !1779)
!19057 = !DILocation(line: 189, column: 119, scope: !19000)
!19058 = !DILocalVariable(name: "scaled", arg: 5, scope: !19000, file: !2734, line: 189, type: !1780)
!19059 = !DILocation(line: 189, column: 139, scope: !19000)
!19060 = !DILocalVariable(name: "size", arg: 6, scope: !19000, file: !2734, line: 189, type: !991)
!19061 = !DILocation(line: 189, column: 151, scope: !19000)
!19062 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !19000, file: !2734, line: 189, type: !991)
!19063 = !DILocation(line: 189, column: 161, scope: !19000)
!19064 = !DILocalVariable(name: "cb", arg: 8, scope: !19000, file: !2734, line: 189, type: !991)
!19065 = !DILocation(line: 189, column: 176, scope: !19000)
!19066 = !DILocalVariable(name: "lambda", arg: 9, scope: !19000, file: !2734, line: 189, type: !1781)
!19067 = !DILocation(line: 189, column: 192, scope: !19000)
!19068 = !DILocalVariable(name: "uplim", arg: 10, scope: !19000, file: !2734, line: 189, type: !1781)
!19069 = !DILocation(line: 189, column: 212, scope: !19000)
!19070 = !DILocalVariable(name: "bits", arg: 11, scope: !19000, file: !2734, line: 189, type: !1264)
!19071 = !DILocation(line: 189, column: 224, scope: !19000)
!19072 = !DILocalVariable(name: "energy", arg: 12, scope: !19000, file: !2734, line: 189, type: !1779)
!19073 = !DILocation(line: 189, column: 237, scope: !19000)
!19074 = !DILocation(line: 189, column: 294, scope: !19000)
!19075 = !DILocation(line: 189, column: 297, scope: !19000)
!19076 = !DILocation(line: 189, column: 301, scope: !19000)
!19077 = !DILocation(line: 189, column: 305, scope: !19000)
!19078 = !DILocation(line: 189, column: 312, scope: !19000)
!19079 = !DILocation(line: 189, column: 320, scope: !19000)
!19080 = !DILocation(line: 189, column: 326, scope: !19000)
!19081 = !DILocation(line: 189, column: 350, scope: !19000)
!19082 = !DILocation(line: 189, column: 354, scope: !19000)
!19083 = !DILocation(line: 189, column: 362, scope: !19000)
!19084 = !DILocation(line: 189, column: 369, scope: !19000)
!19085 = !DILocation(line: 189, column: 375, scope: !19000)
!19086 = !DILocation(line: 189, column: 254, scope: !19000)
!19087 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !19003)
!19088 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !19003)
!19089 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !19003)
!19090 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !19003)
!19091 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !19003)
!19092 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !19003)
!19093 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !19003)
!19094 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !19003)
!19095 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !19003)
!19096 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !19003)
!19097 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !19003)
!19098 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !19003)
!19099 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !19003)
!19100 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !19003)
!19101 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !19003)
!19102 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !19003)
!19103 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !19003)
!19104 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !19003)
!19105 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !19003)
!19106 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !19003)
!19107 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !19003)
!19108 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !19003)
!19109 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !19003)
!19110 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !19003)
!19111 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !19003)
!19112 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !19003)
!19113 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !19003)
!19114 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !19003)
!19115 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !19003)
!19116 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !19003)
!19117 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !19003)
!19118 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !19003)
!19119 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !19003)
!19120 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !19003)
!19121 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !19003)
!19122 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !19003)
!19123 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !19003)
!19124 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !19003)
!19125 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !19003)
!19126 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !19003)
!19127 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !19003)
!19128 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !19003)
!19129 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !19003)
!19130 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !19003)
!19131 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !19003)
!19132 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !19003)
!19133 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !19003)
!19134 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !19003)
!19135 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !19003)
!19136 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !19003)
!19137 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !19003)
!19138 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !19003)
!19139 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !19003)
!19140 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !19003)
!19141 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !19003)
!19142 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !19003)
!19143 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !19003)
!19144 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !19003)
!19145 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !19003)
!19146 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !19003)
!19147 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !19003)
!19148 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !19003)
!19149 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !19003)
!19150 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !19003)
!19151 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !19003)
!19152 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !19003)
!19153 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !19003)
!19154 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !19003)
!19155 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !19003)
!19156 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !19003)
!19157 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !19003)
!19158 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !19003)
!19159 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !19003)
!19160 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !19003)
!19161 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !19003)
!19162 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !19003)
!19163 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !19003)
!19164 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !19003)
!19165 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !19003)
!19166 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !19003)
!19167 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !19003)
!19168 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !19003)
!19169 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !19003)
!19170 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !19003)
!19171 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !19003)
!19172 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !19003)
!19173 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !19003)
!19174 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !19003)
!19175 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !19003)
!19176 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !19003)
!19177 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !19003)
!19178 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !19003)
!19179 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !19003)
!19180 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !19003)
!19181 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !19003)
!19182 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !19003)
!19183 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !19003)
!19184 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !19003)
!19185 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !19003)
!19186 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !19003)
!19187 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !19003)
!19188 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !19003)
!19189 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !19003)
!19190 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !19003)
!19191 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !19003)
!19192 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !19003)
!19193 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !19003)
!19194 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !19003)
!19195 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !19003)
!19196 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !19003)
!19197 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !19003)
!19198 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !19003)
!19199 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !19003)
!19200 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !19003)
!19201 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !19003)
!19202 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !19003)
!19203 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !19003)
!19204 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !19003)
!19205 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !19003)
!19206 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !19003)
!19207 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !19003)
!19208 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !19003)
!19209 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !19003)
!19210 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !19003)
!19211 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !19003)
!19212 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !19003)
!19213 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !19003)
!19214 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !19003)
!19215 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !19003)
!19216 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !19003)
!19217 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !19003)
!19218 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !19003)
!19219 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !19003)
!19220 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !19003)
!19221 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !19003)
!19222 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !19003)
!19223 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !19003)
!19224 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !19003)
!19225 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !19003)
!19226 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !19003)
!19227 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !19003)
!19228 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !19003)
!19229 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !19003)
!19230 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !19003)
!19231 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !19003)
!19232 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !19003)
!19233 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !19003)
!19234 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !19003)
!19235 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !19003)
!19236 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !19003)
!19237 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !19003)
!19238 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !19003)
!19239 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !19003)
!19240 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !19003)
!19241 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !19003)
!19242 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !19003)
!19243 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !19003)
!19244 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !19003)
!19245 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !19003)
!19246 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !19003)
!19247 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !19003)
!19248 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !19003)
!19249 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !19003)
!19250 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !19003)
!19251 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !19003)
!19252 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !19003)
!19253 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !19003)
!19254 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !19003)
!19255 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !19003)
!19256 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !19003)
!19257 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !19003)
!19258 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !19003)
!19259 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !19003)
!19260 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !19003)
!19261 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !19003)
!19262 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !19003)
!19263 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !19003)
!19264 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !19003)
!19265 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !19006)
!19266 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !19006)
!19267 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !19006)
!19268 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !19006)
!19269 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !19006)
!19270 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !19006)
!19271 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !19006)
!19272 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !19006)
!19273 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !19006)
!19274 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !19006)
!19275 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !19006)
!19276 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !19006)
!19277 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !19006)
!19278 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !19006)
!19279 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !19006)
!19280 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !19006)
!19281 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !19006)
!19282 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !19006)
!19283 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !19003)
!19284 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !19003)
!19285 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !19003)
!19286 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !19003)
!19287 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !19003)
!19288 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !19003)
!19289 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !19003)
!19290 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !19003)
!19291 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !19003)
!19292 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !19003)
!19293 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !19003)
!19294 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !19003)
!19295 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !19003)
!19296 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !19003)
!19297 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !19003)
!19298 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !19003)
!19299 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !19003)
!19300 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !19003)
!19301 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !19003)
!19302 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !19003)
!19303 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !19003)
!19304 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !19003)
!19305 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !19003)
!19306 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !19003)
!19307 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !19003)
!19308 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !19003)
!19309 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !19003)
!19310 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !19003)
!19311 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !19003)
!19312 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !19003)
!19313 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !19003)
!19314 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !19003)
!19315 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !19003)
!19316 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !19003)
!19317 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !19003)
!19318 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !19003)
!19319 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !19003)
!19320 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !19003)
!19321 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !19003)
!19322 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !19003)
!19323 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !19003)
!19324 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !19003)
!19325 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !19003)
!19326 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !19003)
!19327 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !19003)
!19328 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !19003)
!19329 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !19003)
!19330 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !19003)
!19331 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !19003)
!19332 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !19003)
!19333 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !19003)
!19334 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !19003)
!19335 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !19003)
!19336 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !19003)
!19337 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !19003)
!19338 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !19003)
!19339 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !19003)
!19340 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !19003)
!19341 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !19003)
!19342 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !19003)
!19343 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !19003)
!19344 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !19003)
!19345 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !19003)
!19346 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !19003)
!19347 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !19003)
!19348 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !19003)
!19349 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !19003)
!19350 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !19003)
!19351 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !19003)
!19352 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !19003)
!19353 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !19003)
!19354 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !19003)
!19355 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !19003)
!19356 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !19003)
!19357 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !19003)
!19358 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !19003)
!19359 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !19003)
!19360 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !19003)
!19361 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !19003)
!19362 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !19003)
!19363 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !19003)
!19364 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !19003)
!19365 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !19003)
!19366 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !19003)
!19367 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !19003)
!19368 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !19003)
!19369 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !19003)
!19370 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !19003)
!19371 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !19003)
!19372 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !19003)
!19373 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !19003)
!19374 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !19003)
!19375 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !19003)
!19376 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !19003)
!19377 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !19003)
!19378 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !19003)
!19379 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !19003)
!19380 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !19003)
!19381 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !19003)
!19382 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !19003)
!19383 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !19003)
!19384 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !19003)
!19385 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !19003)
!19386 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !19003)
!19387 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !19003)
!19388 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !19003)
!19389 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !19003)
!19390 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !19003)
!19391 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !19003)
!19392 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !19003)
!19393 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !19003)
!19394 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !19003)
!19395 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !19003)
!19396 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !19003)
!19397 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !19003)
!19398 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !19003)
!19399 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !19003)
!19400 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !19003)
!19401 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !19003)
!19402 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !19003)
!19403 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !19003)
!19404 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !19003)
!19405 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !19003)
!19406 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !19003)
!19407 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !19003)
!19408 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !19003)
!19409 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !19003)
!19410 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !19003)
!19411 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !19003)
!19412 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !19003)
!19413 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !19003)
!19414 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !19003)
!19415 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !19003)
!19416 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !19003)
!19417 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !19003)
!19418 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !19003)
!19419 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !19003)
!19420 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !19003)
!19421 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !19003)
!19422 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !19003)
!19423 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !19003)
!19424 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !19003)
!19425 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !19003)
!19426 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !19003)
!19427 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !19003)
!19428 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !19003)
!19429 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !19003)
!19430 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !19003)
!19431 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !19003)
!19432 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !19003)
!19433 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !19003)
!19434 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !19003)
!19435 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !19003)
!19436 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !19003)
!19437 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !19003)
!19438 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !19003)
!19439 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !19003)
!19440 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !19003)
!19441 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !19003)
!19442 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !19003)
!19443 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !19003)
!19444 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !19003)
!19445 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !19003)
!19446 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !19003)
!19447 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !19003)
!19448 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !19003)
!19449 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !19003)
!19450 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !19003)
!19451 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !19003)
!19452 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !19003)
!19453 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !19003)
!19454 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !19003)
!19455 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !19003)
!19456 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !19003)
!19457 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !19003)
!19458 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !19003)
!19459 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !19003)
!19460 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !19003)
!19461 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !19002)
!19462 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !19002)
!19463 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !19002)
!19464 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !19002)
!19465 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !19002)
!19466 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !19002)
!19467 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !19002)
!19468 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !19002)
!19469 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !19002)
!19470 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !19002)
!19471 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !19002)
!19472 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !19002)
!19473 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !19002)
!19474 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !19002)
!19475 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !19002)
!19476 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !19002)
!19477 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !19002)
!19478 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !19002)
!19479 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !19003)
!19480 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !19003)
!19481 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !19003)
!19482 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !19003)
!19483 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !19003)
!19484 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !19003)
!19485 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !19003)
!19486 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !19003)
!19487 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !19003)
!19488 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !19003)
!19489 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !19003)
!19490 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !19003)
!19491 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !19003)
!19492 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !19003)
!19493 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !19003)
!19494 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !19003)
!19495 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !19003)
!19496 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !19003)
!19497 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !19003)
!19498 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !19003)
!19499 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !19003)
!19500 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !19003)
!19501 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !19003)
!19502 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !19003)
!19503 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !19003)
!19504 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !19003)
!19505 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !19003)
!19506 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !19003)
!19507 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !19003)
!19508 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !19003)
!19509 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !19003)
!19510 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !19003)
!19511 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !19003)
!19512 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !19003)
!19513 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !19003)
!19514 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !19003)
!19515 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !19003)
!19516 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !19003)
!19517 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !19003)
!19518 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !19003)
!19519 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !19003)
!19520 = !DILocation(line: 189, column: 247, scope: !19000)
!19521 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_ESC_RTZ", scope: !2734, file: !2734, line: 191, type: !2738, isLocal: true, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!19522 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !19523)
!19523 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !19524)
!19524 = distinct !DILocation(line: 191, column: 256, scope: !19521)
!19525 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !19523)
!19526 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !19527)
!19527 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !19524)
!19528 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !19527)
!19529 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !19524)
!19530 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !19524)
!19531 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !19524)
!19532 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !19524)
!19533 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !19524)
!19534 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !19524)
!19535 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !19524)
!19536 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !19524)
!19537 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !19524)
!19538 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !19524)
!19539 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !19524)
!19540 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !19524)
!19541 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !19524)
!19542 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !19524)
!19543 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !19524)
!19544 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !19524)
!19545 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !19524)
!19546 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !19524)
!19547 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !19524)
!19548 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !19524)
!19549 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !19524)
!19550 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !19524)
!19551 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !19524)
!19552 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !19524)
!19553 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !19524)
!19554 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !19524)
!19555 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !19524)
!19556 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !19524)
!19557 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !19524)
!19558 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !19524)
!19559 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !19524)
!19560 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !19524)
!19561 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !19524)
!19562 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !19524)
!19563 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !19524)
!19564 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !19524)
!19565 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !19524)
!19566 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !19524)
!19567 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !19524)
!19568 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !19524)
!19569 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !19524)
!19570 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !19524)
!19571 = !DILocalVariable(name: "s", arg: 1, scope: !19521, file: !2734, line: 191, type: !1695)
!19572 = !DILocation(line: 191, column: 75, scope: !19521)
!19573 = !DILocalVariable(name: "pb", arg: 2, scope: !19521, file: !2734, line: 191, type: !2691)
!19574 = !DILocation(line: 191, column: 93, scope: !19521)
!19575 = !DILocalVariable(name: "in", arg: 3, scope: !19521, file: !2734, line: 191, type: !1780)
!19576 = !DILocation(line: 191, column: 110, scope: !19521)
!19577 = !DILocalVariable(name: "quant", arg: 4, scope: !19521, file: !2734, line: 191, type: !1779)
!19578 = !DILocation(line: 191, column: 121, scope: !19521)
!19579 = !DILocalVariable(name: "scaled", arg: 5, scope: !19521, file: !2734, line: 191, type: !1780)
!19580 = !DILocation(line: 191, column: 141, scope: !19521)
!19581 = !DILocalVariable(name: "size", arg: 6, scope: !19521, file: !2734, line: 191, type: !991)
!19582 = !DILocation(line: 191, column: 153, scope: !19521)
!19583 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !19521, file: !2734, line: 191, type: !991)
!19584 = !DILocation(line: 191, column: 163, scope: !19521)
!19585 = !DILocalVariable(name: "cb", arg: 8, scope: !19521, file: !2734, line: 191, type: !991)
!19586 = !DILocation(line: 191, column: 178, scope: !19521)
!19587 = !DILocalVariable(name: "lambda", arg: 9, scope: !19521, file: !2734, line: 191, type: !1781)
!19588 = !DILocation(line: 191, column: 194, scope: !19521)
!19589 = !DILocalVariable(name: "uplim", arg: 10, scope: !19521, file: !2734, line: 191, type: !1781)
!19590 = !DILocation(line: 191, column: 214, scope: !19521)
!19591 = !DILocalVariable(name: "bits", arg: 11, scope: !19521, file: !2734, line: 191, type: !1264)
!19592 = !DILocation(line: 191, column: 226, scope: !19521)
!19593 = !DILocalVariable(name: "energy", arg: 12, scope: !19521, file: !2734, line: 191, type: !1779)
!19594 = !DILocation(line: 191, column: 239, scope: !19521)
!19595 = !DILocation(line: 191, column: 296, scope: !19521)
!19596 = !DILocation(line: 191, column: 299, scope: !19521)
!19597 = !DILocation(line: 191, column: 303, scope: !19521)
!19598 = !DILocation(line: 191, column: 307, scope: !19521)
!19599 = !DILocation(line: 191, column: 314, scope: !19521)
!19600 = !DILocation(line: 191, column: 322, scope: !19521)
!19601 = !DILocation(line: 191, column: 328, scope: !19521)
!19602 = !DILocation(line: 191, column: 356, scope: !19521)
!19603 = !DILocation(line: 191, column: 364, scope: !19521)
!19604 = !DILocation(line: 191, column: 371, scope: !19521)
!19605 = !DILocation(line: 191, column: 377, scope: !19521)
!19606 = !DILocation(line: 191, column: 256, scope: !19521)
!19607 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !19524)
!19608 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !19524)
!19609 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !19524)
!19610 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !19524)
!19611 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !19524)
!19612 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !19524)
!19613 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !19524)
!19614 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !19524)
!19615 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !19524)
!19616 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !19524)
!19617 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !19524)
!19618 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !19524)
!19619 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !19524)
!19620 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !19524)
!19621 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !19524)
!19622 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !19524)
!19623 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !19524)
!19624 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !19524)
!19625 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !19524)
!19626 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !19524)
!19627 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !19524)
!19628 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !19524)
!19629 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !19524)
!19630 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !19524)
!19631 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !19524)
!19632 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !19524)
!19633 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !19524)
!19634 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !19524)
!19635 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !19524)
!19636 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !19524)
!19637 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !19524)
!19638 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !19524)
!19639 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !19524)
!19640 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !19524)
!19641 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !19524)
!19642 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !19524)
!19643 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !19524)
!19644 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !19524)
!19645 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !19524)
!19646 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !19524)
!19647 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !19524)
!19648 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !19524)
!19649 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !19524)
!19650 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !19524)
!19651 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !19524)
!19652 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !19524)
!19653 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !19524)
!19654 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !19524)
!19655 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !19524)
!19656 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !19524)
!19657 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !19524)
!19658 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !19524)
!19659 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !19524)
!19660 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !19524)
!19661 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !19524)
!19662 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !19524)
!19663 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !19524)
!19664 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !19524)
!19665 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !19524)
!19666 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !19524)
!19667 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !19524)
!19668 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !19524)
!19669 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !19524)
!19670 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !19524)
!19671 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !19524)
!19672 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !19524)
!19673 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !19524)
!19674 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !19524)
!19675 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !19524)
!19676 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !19524)
!19677 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !19524)
!19678 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !19524)
!19679 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !19524)
!19680 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !19524)
!19681 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !19524)
!19682 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !19524)
!19683 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !19524)
!19684 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !19524)
!19685 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !19524)
!19686 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !19524)
!19687 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !19524)
!19688 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !19524)
!19689 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !19524)
!19690 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !19524)
!19691 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !19524)
!19692 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !19524)
!19693 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !19524)
!19694 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !19524)
!19695 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !19524)
!19696 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !19524)
!19697 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !19524)
!19698 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !19524)
!19699 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !19524)
!19700 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !19524)
!19701 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !19524)
!19702 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !19524)
!19703 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !19524)
!19704 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !19524)
!19705 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !19524)
!19706 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !19524)
!19707 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !19524)
!19708 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !19524)
!19709 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !19524)
!19710 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !19524)
!19711 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !19524)
!19712 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !19524)
!19713 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !19524)
!19714 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !19524)
!19715 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !19524)
!19716 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !19524)
!19717 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !19524)
!19718 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !19524)
!19719 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !19524)
!19720 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !19524)
!19721 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !19524)
!19722 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !19524)
!19723 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !19524)
!19724 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !19524)
!19725 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !19524)
!19726 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !19524)
!19727 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !19524)
!19728 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !19524)
!19729 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !19524)
!19730 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !19524)
!19731 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !19524)
!19732 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !19524)
!19733 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !19524)
!19734 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !19524)
!19735 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !19524)
!19736 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !19524)
!19737 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !19524)
!19738 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !19524)
!19739 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !19524)
!19740 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !19524)
!19741 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !19524)
!19742 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !19524)
!19743 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !19524)
!19744 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !19524)
!19745 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !19524)
!19746 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !19524)
!19747 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !19524)
!19748 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !19524)
!19749 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !19524)
!19750 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !19524)
!19751 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !19524)
!19752 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !19524)
!19753 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !19524)
!19754 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !19524)
!19755 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !19524)
!19756 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !19524)
!19757 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !19524)
!19758 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !19524)
!19759 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !19524)
!19760 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !19524)
!19761 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !19524)
!19762 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !19524)
!19763 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !19524)
!19764 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !19524)
!19765 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !19524)
!19766 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !19524)
!19767 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !19524)
!19768 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !19524)
!19769 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !19524)
!19770 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !19524)
!19771 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !19524)
!19772 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !19524)
!19773 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !19524)
!19774 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !19524)
!19775 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !19524)
!19776 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !19524)
!19777 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !19524)
!19778 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !19524)
!19779 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !19524)
!19780 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !19524)
!19781 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !19524)
!19782 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !19524)
!19783 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !19524)
!19784 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !19524)
!19785 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !19527)
!19786 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !19527)
!19787 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !19527)
!19788 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !19527)
!19789 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !19527)
!19790 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !19527)
!19791 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !19527)
!19792 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !19527)
!19793 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !19527)
!19794 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !19527)
!19795 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !19527)
!19796 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !19527)
!19797 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !19527)
!19798 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !19527)
!19799 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !19527)
!19800 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !19527)
!19801 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !19527)
!19802 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !19527)
!19803 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !19524)
!19804 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !19524)
!19805 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !19524)
!19806 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !19524)
!19807 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !19524)
!19808 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !19524)
!19809 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !19524)
!19810 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !19524)
!19811 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !19524)
!19812 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !19524)
!19813 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !19524)
!19814 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !19524)
!19815 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !19524)
!19816 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !19524)
!19817 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !19524)
!19818 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !19524)
!19819 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !19524)
!19820 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !19524)
!19821 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !19524)
!19822 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !19524)
!19823 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !19524)
!19824 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !19524)
!19825 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !19524)
!19826 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !19524)
!19827 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !19524)
!19828 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !19524)
!19829 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !19524)
!19830 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !19524)
!19831 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !19524)
!19832 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !19524)
!19833 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !19524)
!19834 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !19524)
!19835 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !19524)
!19836 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !19524)
!19837 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !19524)
!19838 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !19524)
!19839 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !19524)
!19840 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !19524)
!19841 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !19524)
!19842 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !19524)
!19843 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !19524)
!19844 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !19524)
!19845 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !19524)
!19846 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !19524)
!19847 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !19524)
!19848 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !19524)
!19849 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !19524)
!19850 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !19524)
!19851 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !19524)
!19852 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !19524)
!19853 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !19524)
!19854 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !19524)
!19855 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !19524)
!19856 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !19524)
!19857 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !19524)
!19858 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !19524)
!19859 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !19524)
!19860 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !19524)
!19861 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !19524)
!19862 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !19524)
!19863 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !19524)
!19864 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !19524)
!19865 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !19524)
!19866 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !19524)
!19867 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !19524)
!19868 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !19524)
!19869 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !19524)
!19870 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !19524)
!19871 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !19524)
!19872 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !19524)
!19873 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !19524)
!19874 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !19524)
!19875 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !19524)
!19876 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !19524)
!19877 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !19524)
!19878 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !19524)
!19879 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !19524)
!19880 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !19524)
!19881 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !19524)
!19882 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !19524)
!19883 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !19524)
!19884 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !19524)
!19885 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !19524)
!19886 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !19524)
!19887 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !19524)
!19888 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !19524)
!19889 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !19524)
!19890 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !19524)
!19891 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !19524)
!19892 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !19524)
!19893 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !19524)
!19894 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !19524)
!19895 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !19524)
!19896 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !19524)
!19897 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !19524)
!19898 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !19524)
!19899 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !19524)
!19900 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !19524)
!19901 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !19524)
!19902 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !19524)
!19903 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !19524)
!19904 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !19524)
!19905 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !19524)
!19906 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !19524)
!19907 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !19524)
!19908 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !19524)
!19909 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !19524)
!19910 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !19524)
!19911 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !19524)
!19912 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !19524)
!19913 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !19524)
!19914 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !19524)
!19915 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !19524)
!19916 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !19524)
!19917 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !19524)
!19918 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !19524)
!19919 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !19524)
!19920 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !19524)
!19921 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !19524)
!19922 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !19524)
!19923 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !19524)
!19924 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !19524)
!19925 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !19524)
!19926 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !19524)
!19927 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !19524)
!19928 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !19524)
!19929 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !19524)
!19930 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !19524)
!19931 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !19524)
!19932 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !19524)
!19933 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !19524)
!19934 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !19524)
!19935 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !19524)
!19936 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !19524)
!19937 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !19524)
!19938 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !19524)
!19939 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !19524)
!19940 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !19524)
!19941 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !19524)
!19942 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !19524)
!19943 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !19524)
!19944 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !19524)
!19945 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !19524)
!19946 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !19524)
!19947 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !19524)
!19948 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !19524)
!19949 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !19524)
!19950 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !19524)
!19951 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !19524)
!19952 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !19524)
!19953 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !19524)
!19954 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !19524)
!19955 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !19524)
!19956 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !19524)
!19957 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !19524)
!19958 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !19524)
!19959 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !19524)
!19960 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !19524)
!19961 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !19524)
!19962 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !19524)
!19963 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !19524)
!19964 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !19524)
!19965 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !19524)
!19966 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !19524)
!19967 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !19524)
!19968 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !19524)
!19969 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !19524)
!19970 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !19524)
!19971 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !19524)
!19972 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !19524)
!19973 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !19524)
!19974 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !19524)
!19975 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !19524)
!19976 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !19524)
!19977 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !19524)
!19978 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !19524)
!19979 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !19524)
!19980 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !19524)
!19981 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !19523)
!19982 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !19523)
!19983 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !19523)
!19984 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !19523)
!19985 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !19523)
!19986 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !19523)
!19987 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !19523)
!19988 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !19523)
!19989 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !19523)
!19990 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !19523)
!19991 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !19523)
!19992 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !19523)
!19993 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !19523)
!19994 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !19523)
!19995 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !19523)
!19996 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !19523)
!19997 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !19523)
!19998 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !19523)
!19999 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !19524)
!20000 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !19524)
!20001 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !19524)
!20002 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !19524)
!20003 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !19524)
!20004 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !19524)
!20005 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !19524)
!20006 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !19524)
!20007 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !19524)
!20008 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !19524)
!20009 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !19524)
!20010 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !19524)
!20011 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !19524)
!20012 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !19524)
!20013 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !19524)
!20014 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !19524)
!20015 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !19524)
!20016 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !19524)
!20017 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !19524)
!20018 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !19524)
!20019 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !19524)
!20020 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !19524)
!20021 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !19524)
!20022 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !19524)
!20023 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !19524)
!20024 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !19524)
!20025 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !19524)
!20026 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !19524)
!20027 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !19524)
!20028 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !19524)
!20029 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !19524)
!20030 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !19524)
!20031 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !19524)
!20032 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !19524)
!20033 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !19524)
!20034 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !19524)
!20035 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !19524)
!20036 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !19524)
!20037 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !19524)
!20038 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !19524)
!20039 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !19524)
!20040 = !DILocation(line: 191, column: 249, scope: !19521)
!20041 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_NONE", scope: !2734, file: !2734, line: 162, type: !2738, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!20042 = !DILocalVariable(name: "s", arg: 1, scope: !20041, file: !2734, line: 162, type: !1695)
!20043 = !DILocation(line: 162, column: 78, scope: !20041)
!20044 = !DILocalVariable(name: "pb", arg: 2, scope: !20041, file: !2734, line: 162, type: !2691)
!20045 = !DILocation(line: 162, column: 96, scope: !20041)
!20046 = !DILocalVariable(name: "in", arg: 3, scope: !20041, file: !2734, line: 163, type: !1780)
!20047 = !DILocation(line: 163, column: 62, scope: !20041)
!20048 = !DILocalVariable(name: "quant", arg: 4, scope: !20041, file: !2734, line: 163, type: !1779)
!20049 = !DILocation(line: 163, column: 73, scope: !20041)
!20050 = !DILocalVariable(name: "scaled", arg: 5, scope: !20041, file: !2734, line: 163, type: !1780)
!20051 = !DILocation(line: 163, column: 93, scope: !20041)
!20052 = !DILocalVariable(name: "size", arg: 6, scope: !20041, file: !2734, line: 164, type: !991)
!20053 = !DILocation(line: 164, column: 53, scope: !20041)
!20054 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !20041, file: !2734, line: 164, type: !991)
!20055 = !DILocation(line: 164, column: 63, scope: !20041)
!20056 = !DILocalVariable(name: "cb", arg: 8, scope: !20041, file: !2734, line: 164, type: !991)
!20057 = !DILocation(line: 164, column: 78, scope: !20041)
!20058 = !DILocalVariable(name: "lambda", arg: 9, scope: !20041, file: !2734, line: 165, type: !1781)
!20059 = !DILocation(line: 165, column: 61, scope: !20041)
!20060 = !DILocalVariable(name: "uplim", arg: 10, scope: !20041, file: !2734, line: 165, type: !1781)
!20061 = !DILocation(line: 165, column: 81, scope: !20041)
!20062 = !DILocalVariable(name: "bits", arg: 11, scope: !20041, file: !2734, line: 166, type: !1264)
!20063 = !DILocation(line: 166, column: 54, scope: !20041)
!20064 = !DILocalVariable(name: "energy", arg: 12, scope: !20041, file: !2734, line: 166, type: !1779)
!20065 = !DILocation(line: 166, column: 67, scope: !20041)
!20066 = !DILocation(line: 167, column: 5, scope: !20041)
!20067 = distinct !{!20067, !20066}
!20068 = !DILocation(line: 167, column: 22, scope: !20069)
!20069 = !DILexicalBlockFile(scope: !20070, file: !2734, discriminator: 1)
!20070 = distinct !DILexicalBlock(scope: !20071, file: !2734, line: 167, column: 20)
!20071 = distinct !DILexicalBlock(scope: !20072, file: !2734, line: 167, column: 14)
!20072 = distinct !DILexicalBlock(scope: !20041, file: !2734, line: 167, column: 8)
!20073 = !DILocation(line: 167, column: 90, scope: !20074)
!20074 = !DILexicalBlockFile(scope: !20069, file: !2734, discriminator: 2)
!20075 = !DILocation(line: 167, column: 90, scope: !20069)
!20076 = !DILocation(line: 168, column: 5, scope: !20041)
!20077 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_NOISE", scope: !2734, file: !2734, line: 192, type: !2738, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!20078 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !20079)
!20079 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !20080)
!20080 = distinct !DILocation(line: 192, column: 254, scope: !20077)
!20081 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !20079)
!20082 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !20083)
!20083 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !20080)
!20084 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !20083)
!20085 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !20080)
!20086 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !20080)
!20087 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !20080)
!20088 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !20080)
!20089 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !20080)
!20090 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !20080)
!20091 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !20080)
!20092 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !20080)
!20093 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !20080)
!20094 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !20080)
!20095 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !20080)
!20096 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !20080)
!20097 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !20080)
!20098 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !20080)
!20099 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !20080)
!20100 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !20080)
!20101 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !20080)
!20102 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !20080)
!20103 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !20080)
!20104 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !20080)
!20105 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !20080)
!20106 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !20080)
!20107 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !20080)
!20108 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !20080)
!20109 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !20080)
!20110 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !20080)
!20111 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !20080)
!20112 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !20080)
!20113 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !20080)
!20114 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !20080)
!20115 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !20080)
!20116 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !20080)
!20117 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !20080)
!20118 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !20080)
!20119 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !20080)
!20120 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !20080)
!20121 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !20080)
!20122 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !20080)
!20123 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !20080)
!20124 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !20080)
!20125 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !20080)
!20126 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !20080)
!20127 = !DILocalVariable(name: "s", arg: 1, scope: !20077, file: !2734, line: 192, type: !1695)
!20128 = !DILocation(line: 192, column: 73, scope: !20077)
!20129 = !DILocalVariable(name: "pb", arg: 2, scope: !20077, file: !2734, line: 192, type: !2691)
!20130 = !DILocation(line: 192, column: 91, scope: !20077)
!20131 = !DILocalVariable(name: "in", arg: 3, scope: !20077, file: !2734, line: 192, type: !1780)
!20132 = !DILocation(line: 192, column: 108, scope: !20077)
!20133 = !DILocalVariable(name: "quant", arg: 4, scope: !20077, file: !2734, line: 192, type: !1779)
!20134 = !DILocation(line: 192, column: 119, scope: !20077)
!20135 = !DILocalVariable(name: "scaled", arg: 5, scope: !20077, file: !2734, line: 192, type: !1780)
!20136 = !DILocation(line: 192, column: 139, scope: !20077)
!20137 = !DILocalVariable(name: "size", arg: 6, scope: !20077, file: !2734, line: 192, type: !991)
!20138 = !DILocation(line: 192, column: 151, scope: !20077)
!20139 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !20077, file: !2734, line: 192, type: !991)
!20140 = !DILocation(line: 192, column: 161, scope: !20077)
!20141 = !DILocalVariable(name: "cb", arg: 8, scope: !20077, file: !2734, line: 192, type: !991)
!20142 = !DILocation(line: 192, column: 176, scope: !20077)
!20143 = !DILocalVariable(name: "lambda", arg: 9, scope: !20077, file: !2734, line: 192, type: !1781)
!20144 = !DILocation(line: 192, column: 192, scope: !20077)
!20145 = !DILocalVariable(name: "uplim", arg: 10, scope: !20077, file: !2734, line: 192, type: !1781)
!20146 = !DILocation(line: 192, column: 212, scope: !20077)
!20147 = !DILocalVariable(name: "bits", arg: 11, scope: !20077, file: !2734, line: 192, type: !1264)
!20148 = !DILocation(line: 192, column: 224, scope: !20077)
!20149 = !DILocalVariable(name: "energy", arg: 12, scope: !20077, file: !2734, line: 192, type: !1779)
!20150 = !DILocation(line: 192, column: 237, scope: !20077)
!20151 = !DILocation(line: 192, column: 294, scope: !20077)
!20152 = !DILocation(line: 192, column: 297, scope: !20077)
!20153 = !DILocation(line: 192, column: 301, scope: !20077)
!20154 = !DILocation(line: 192, column: 305, scope: !20077)
!20155 = !DILocation(line: 192, column: 312, scope: !20077)
!20156 = !DILocation(line: 192, column: 320, scope: !20077)
!20157 = !DILocation(line: 192, column: 326, scope: !20077)
!20158 = !DILocation(line: 192, column: 350, scope: !20077)
!20159 = !DILocation(line: 192, column: 354, scope: !20077)
!20160 = !DILocation(line: 192, column: 362, scope: !20077)
!20161 = !DILocation(line: 192, column: 369, scope: !20077)
!20162 = !DILocation(line: 192, column: 375, scope: !20077)
!20163 = !DILocation(line: 192, column: 254, scope: !20077)
!20164 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !20080)
!20165 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !20080)
!20166 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !20080)
!20167 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !20080)
!20168 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !20080)
!20169 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !20080)
!20170 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !20080)
!20171 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !20080)
!20172 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !20080)
!20173 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !20080)
!20174 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !20080)
!20175 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !20080)
!20176 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !20080)
!20177 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !20080)
!20178 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !20080)
!20179 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !20080)
!20180 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !20080)
!20181 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !20080)
!20182 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !20080)
!20183 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !20080)
!20184 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !20080)
!20185 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !20080)
!20186 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !20080)
!20187 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !20080)
!20188 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !20080)
!20189 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !20080)
!20190 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !20080)
!20191 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !20080)
!20192 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !20080)
!20193 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !20080)
!20194 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !20080)
!20195 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !20080)
!20196 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !20080)
!20197 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !20080)
!20198 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !20080)
!20199 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !20080)
!20200 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !20080)
!20201 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !20080)
!20202 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !20080)
!20203 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !20080)
!20204 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !20080)
!20205 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !20080)
!20206 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !20080)
!20207 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !20080)
!20208 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !20080)
!20209 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !20080)
!20210 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !20080)
!20211 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !20080)
!20212 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !20080)
!20213 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !20080)
!20214 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !20080)
!20215 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !20080)
!20216 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !20080)
!20217 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !20080)
!20218 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !20080)
!20219 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !20080)
!20220 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !20080)
!20221 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !20080)
!20222 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !20080)
!20223 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !20080)
!20224 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !20080)
!20225 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !20080)
!20226 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !20080)
!20227 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !20080)
!20228 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !20080)
!20229 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !20080)
!20230 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !20080)
!20231 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !20080)
!20232 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !20080)
!20233 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !20080)
!20234 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !20080)
!20235 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !20080)
!20236 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !20080)
!20237 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !20080)
!20238 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !20080)
!20239 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !20080)
!20240 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !20080)
!20241 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !20080)
!20242 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !20080)
!20243 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !20080)
!20244 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !20080)
!20245 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !20080)
!20246 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !20080)
!20247 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !20080)
!20248 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !20080)
!20249 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !20080)
!20250 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !20080)
!20251 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !20080)
!20252 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !20080)
!20253 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !20080)
!20254 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !20080)
!20255 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !20080)
!20256 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !20080)
!20257 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !20080)
!20258 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !20080)
!20259 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !20080)
!20260 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !20080)
!20261 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !20080)
!20262 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !20080)
!20263 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !20080)
!20264 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !20080)
!20265 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !20080)
!20266 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !20080)
!20267 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !20080)
!20268 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !20080)
!20269 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !20080)
!20270 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !20080)
!20271 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !20080)
!20272 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !20080)
!20273 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !20080)
!20274 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !20080)
!20275 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !20080)
!20276 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !20080)
!20277 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !20080)
!20278 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !20080)
!20279 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !20080)
!20280 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !20080)
!20281 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !20080)
!20282 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !20080)
!20283 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !20080)
!20284 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !20080)
!20285 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !20080)
!20286 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !20080)
!20287 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !20080)
!20288 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !20080)
!20289 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !20080)
!20290 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !20080)
!20291 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !20080)
!20292 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !20080)
!20293 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !20080)
!20294 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !20080)
!20295 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !20080)
!20296 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !20080)
!20297 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !20080)
!20298 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !20080)
!20299 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !20080)
!20300 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !20080)
!20301 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !20080)
!20302 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !20080)
!20303 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !20080)
!20304 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !20080)
!20305 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !20080)
!20306 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !20080)
!20307 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !20080)
!20308 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !20080)
!20309 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !20080)
!20310 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !20080)
!20311 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !20080)
!20312 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !20080)
!20313 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !20080)
!20314 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !20080)
!20315 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !20080)
!20316 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !20080)
!20317 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !20080)
!20318 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !20080)
!20319 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !20080)
!20320 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !20080)
!20321 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !20080)
!20322 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !20080)
!20323 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !20080)
!20324 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !20080)
!20325 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !20080)
!20326 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !20080)
!20327 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !20080)
!20328 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !20080)
!20329 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !20080)
!20330 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !20080)
!20331 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !20080)
!20332 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !20080)
!20333 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !20080)
!20334 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !20080)
!20335 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !20080)
!20336 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !20080)
!20337 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !20080)
!20338 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !20080)
!20339 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !20080)
!20340 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !20080)
!20341 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !20080)
!20342 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !20083)
!20343 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !20083)
!20344 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !20083)
!20345 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !20083)
!20346 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !20083)
!20347 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !20083)
!20348 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !20083)
!20349 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !20083)
!20350 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !20083)
!20351 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !20083)
!20352 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !20083)
!20353 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !20083)
!20354 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !20083)
!20355 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !20083)
!20356 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !20083)
!20357 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !20083)
!20358 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !20083)
!20359 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !20083)
!20360 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !20080)
!20361 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !20080)
!20362 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !20080)
!20363 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !20080)
!20364 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !20080)
!20365 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !20080)
!20366 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !20080)
!20367 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !20080)
!20368 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !20080)
!20369 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !20080)
!20370 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !20080)
!20371 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !20080)
!20372 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !20080)
!20373 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !20080)
!20374 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !20080)
!20375 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !20080)
!20376 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !20080)
!20377 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !20080)
!20378 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !20080)
!20379 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !20080)
!20380 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !20080)
!20381 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !20080)
!20382 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !20080)
!20383 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !20080)
!20384 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !20080)
!20385 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !20080)
!20386 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !20080)
!20387 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !20080)
!20388 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !20080)
!20389 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !20080)
!20390 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !20080)
!20391 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !20080)
!20392 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !20080)
!20393 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !20080)
!20394 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !20080)
!20395 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !20080)
!20396 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !20080)
!20397 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !20080)
!20398 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !20080)
!20399 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !20080)
!20400 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !20080)
!20401 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !20080)
!20402 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !20080)
!20403 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !20080)
!20404 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !20080)
!20405 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !20080)
!20406 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !20080)
!20407 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !20080)
!20408 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !20080)
!20409 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !20080)
!20410 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !20080)
!20411 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !20080)
!20412 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !20080)
!20413 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !20080)
!20414 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !20080)
!20415 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !20080)
!20416 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !20080)
!20417 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !20080)
!20418 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !20080)
!20419 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !20080)
!20420 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !20080)
!20421 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !20080)
!20422 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !20080)
!20423 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !20080)
!20424 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !20080)
!20425 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !20080)
!20426 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !20080)
!20427 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !20080)
!20428 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !20080)
!20429 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !20080)
!20430 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !20080)
!20431 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !20080)
!20432 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !20080)
!20433 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !20080)
!20434 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !20080)
!20435 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !20080)
!20436 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !20080)
!20437 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !20080)
!20438 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !20080)
!20439 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !20080)
!20440 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !20080)
!20441 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !20080)
!20442 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !20080)
!20443 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !20080)
!20444 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !20080)
!20445 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !20080)
!20446 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !20080)
!20447 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !20080)
!20448 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !20080)
!20449 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !20080)
!20450 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !20080)
!20451 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !20080)
!20452 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !20080)
!20453 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !20080)
!20454 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !20080)
!20455 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !20080)
!20456 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !20080)
!20457 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !20080)
!20458 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !20080)
!20459 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !20080)
!20460 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !20080)
!20461 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !20080)
!20462 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !20080)
!20463 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !20080)
!20464 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !20080)
!20465 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !20080)
!20466 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !20080)
!20467 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !20080)
!20468 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !20080)
!20469 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !20080)
!20470 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !20080)
!20471 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !20080)
!20472 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !20080)
!20473 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !20080)
!20474 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !20080)
!20475 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !20080)
!20476 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !20080)
!20477 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !20080)
!20478 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !20080)
!20479 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !20080)
!20480 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !20080)
!20481 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !20080)
!20482 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !20080)
!20483 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !20080)
!20484 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !20080)
!20485 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !20080)
!20486 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !20080)
!20487 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !20080)
!20488 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !20080)
!20489 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !20080)
!20490 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !20080)
!20491 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !20080)
!20492 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !20080)
!20493 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !20080)
!20494 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !20080)
!20495 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !20080)
!20496 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !20080)
!20497 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !20080)
!20498 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !20080)
!20499 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !20080)
!20500 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !20080)
!20501 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !20080)
!20502 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !20080)
!20503 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !20080)
!20504 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !20080)
!20505 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !20080)
!20506 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !20080)
!20507 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !20080)
!20508 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !20080)
!20509 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !20080)
!20510 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !20080)
!20511 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !20080)
!20512 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !20080)
!20513 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !20080)
!20514 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !20080)
!20515 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !20080)
!20516 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !20080)
!20517 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !20080)
!20518 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !20080)
!20519 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !20080)
!20520 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !20080)
!20521 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !20080)
!20522 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !20080)
!20523 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !20080)
!20524 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !20080)
!20525 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !20080)
!20526 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !20080)
!20527 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !20080)
!20528 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !20080)
!20529 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !20080)
!20530 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !20080)
!20531 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !20080)
!20532 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !20080)
!20533 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !20080)
!20534 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !20080)
!20535 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !20080)
!20536 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !20080)
!20537 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !20080)
!20538 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !20079)
!20539 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !20079)
!20540 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !20079)
!20541 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !20079)
!20542 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !20079)
!20543 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !20079)
!20544 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !20079)
!20545 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !20079)
!20546 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !20079)
!20547 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !20079)
!20548 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !20079)
!20549 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !20079)
!20550 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !20079)
!20551 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !20079)
!20552 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !20079)
!20553 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !20079)
!20554 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !20079)
!20555 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !20079)
!20556 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !20080)
!20557 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !20080)
!20558 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !20080)
!20559 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !20080)
!20560 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !20080)
!20561 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !20080)
!20562 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !20080)
!20563 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !20080)
!20564 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !20080)
!20565 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !20080)
!20566 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !20080)
!20567 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !20080)
!20568 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !20080)
!20569 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !20080)
!20570 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !20080)
!20571 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !20080)
!20572 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !20080)
!20573 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !20080)
!20574 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !20080)
!20575 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !20080)
!20576 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !20080)
!20577 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !20080)
!20578 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !20080)
!20579 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !20080)
!20580 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !20080)
!20581 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !20080)
!20582 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !20080)
!20583 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !20080)
!20584 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !20080)
!20585 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !20080)
!20586 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !20080)
!20587 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !20080)
!20588 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !20080)
!20589 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !20080)
!20590 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !20080)
!20591 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !20080)
!20592 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !20080)
!20593 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !20080)
!20594 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !20080)
!20595 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !20080)
!20596 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !20080)
!20597 = !DILocation(line: 192, column: 247, scope: !20077)
!20598 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_STEREO", scope: !2734, file: !2734, line: 193, type: !2738, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!20599 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !20600)
!20600 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !20601)
!20601 = distinct !DILocation(line: 193, column: 255, scope: !20598)
!20602 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !20600)
!20603 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !20604)
!20604 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !20601)
!20605 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !20604)
!20606 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !20601)
!20607 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !20601)
!20608 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !20601)
!20609 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !20601)
!20610 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !20601)
!20611 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !20601)
!20612 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !20601)
!20613 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !20601)
!20614 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !20601)
!20615 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !20601)
!20616 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !20601)
!20617 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !20601)
!20618 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !20601)
!20619 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !20601)
!20620 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !20601)
!20621 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !20601)
!20622 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !20601)
!20623 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !20601)
!20624 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !20601)
!20625 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !20601)
!20626 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !20601)
!20627 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !20601)
!20628 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !20601)
!20629 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !20601)
!20630 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !20601)
!20631 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !20601)
!20632 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !20601)
!20633 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !20601)
!20634 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !20601)
!20635 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !20601)
!20636 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !20601)
!20637 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !20601)
!20638 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !20601)
!20639 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !20601)
!20640 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !20601)
!20641 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !20601)
!20642 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !20601)
!20643 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !20601)
!20644 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !20601)
!20645 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !20601)
!20646 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !20601)
!20647 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !20601)
!20648 = !DILocalVariable(name: "s", arg: 1, scope: !20598, file: !2734, line: 193, type: !1695)
!20649 = !DILocation(line: 193, column: 74, scope: !20598)
!20650 = !DILocalVariable(name: "pb", arg: 2, scope: !20598, file: !2734, line: 193, type: !2691)
!20651 = !DILocation(line: 193, column: 92, scope: !20598)
!20652 = !DILocalVariable(name: "in", arg: 3, scope: !20598, file: !2734, line: 193, type: !1780)
!20653 = !DILocation(line: 193, column: 109, scope: !20598)
!20654 = !DILocalVariable(name: "quant", arg: 4, scope: !20598, file: !2734, line: 193, type: !1779)
!20655 = !DILocation(line: 193, column: 120, scope: !20598)
!20656 = !DILocalVariable(name: "scaled", arg: 5, scope: !20598, file: !2734, line: 193, type: !1780)
!20657 = !DILocation(line: 193, column: 140, scope: !20598)
!20658 = !DILocalVariable(name: "size", arg: 6, scope: !20598, file: !2734, line: 193, type: !991)
!20659 = !DILocation(line: 193, column: 152, scope: !20598)
!20660 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !20598, file: !2734, line: 193, type: !991)
!20661 = !DILocation(line: 193, column: 162, scope: !20598)
!20662 = !DILocalVariable(name: "cb", arg: 8, scope: !20598, file: !2734, line: 193, type: !991)
!20663 = !DILocation(line: 193, column: 177, scope: !20598)
!20664 = !DILocalVariable(name: "lambda", arg: 9, scope: !20598, file: !2734, line: 193, type: !1781)
!20665 = !DILocation(line: 193, column: 193, scope: !20598)
!20666 = !DILocalVariable(name: "uplim", arg: 10, scope: !20598, file: !2734, line: 193, type: !1781)
!20667 = !DILocation(line: 193, column: 213, scope: !20598)
!20668 = !DILocalVariable(name: "bits", arg: 11, scope: !20598, file: !2734, line: 193, type: !1264)
!20669 = !DILocation(line: 193, column: 225, scope: !20598)
!20670 = !DILocalVariable(name: "energy", arg: 12, scope: !20598, file: !2734, line: 193, type: !1779)
!20671 = !DILocation(line: 193, column: 238, scope: !20598)
!20672 = !DILocation(line: 193, column: 295, scope: !20598)
!20673 = !DILocation(line: 193, column: 298, scope: !20598)
!20674 = !DILocation(line: 193, column: 302, scope: !20598)
!20675 = !DILocation(line: 193, column: 306, scope: !20598)
!20676 = !DILocation(line: 193, column: 313, scope: !20598)
!20677 = !DILocation(line: 193, column: 321, scope: !20598)
!20678 = !DILocation(line: 193, column: 327, scope: !20598)
!20679 = !DILocation(line: 193, column: 351, scope: !20598)
!20680 = !DILocation(line: 193, column: 355, scope: !20598)
!20681 = !DILocation(line: 193, column: 363, scope: !20598)
!20682 = !DILocation(line: 193, column: 370, scope: !20598)
!20683 = !DILocation(line: 193, column: 376, scope: !20598)
!20684 = !DILocation(line: 193, column: 255, scope: !20598)
!20685 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !20601)
!20686 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !20601)
!20687 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !20601)
!20688 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !20601)
!20689 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !20601)
!20690 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !20601)
!20691 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !20601)
!20692 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !20601)
!20693 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !20601)
!20694 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !20601)
!20695 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !20601)
!20696 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !20601)
!20697 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !20601)
!20698 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !20601)
!20699 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !20601)
!20700 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !20601)
!20701 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !20601)
!20702 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !20601)
!20703 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !20601)
!20704 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !20601)
!20705 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !20601)
!20706 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !20601)
!20707 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !20601)
!20708 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !20601)
!20709 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !20601)
!20710 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !20601)
!20711 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !20601)
!20712 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !20601)
!20713 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !20601)
!20714 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !20601)
!20715 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !20601)
!20716 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !20601)
!20717 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !20601)
!20718 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !20601)
!20719 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !20601)
!20720 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !20601)
!20721 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !20601)
!20722 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !20601)
!20723 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !20601)
!20724 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !20601)
!20725 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !20601)
!20726 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !20601)
!20727 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !20601)
!20728 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !20601)
!20729 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !20601)
!20730 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !20601)
!20731 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !20601)
!20732 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !20601)
!20733 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !20601)
!20734 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !20601)
!20735 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !20601)
!20736 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !20601)
!20737 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !20601)
!20738 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !20601)
!20739 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !20601)
!20740 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !20601)
!20741 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !20601)
!20742 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !20601)
!20743 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !20601)
!20744 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !20601)
!20745 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !20601)
!20746 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !20601)
!20747 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !20601)
!20748 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !20601)
!20749 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !20601)
!20750 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !20601)
!20751 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !20601)
!20752 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !20601)
!20753 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !20601)
!20754 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !20601)
!20755 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !20601)
!20756 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !20601)
!20757 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !20601)
!20758 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !20601)
!20759 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !20601)
!20760 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !20601)
!20761 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !20601)
!20762 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !20601)
!20763 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !20601)
!20764 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !20601)
!20765 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !20601)
!20766 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !20601)
!20767 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !20601)
!20768 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !20601)
!20769 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !20601)
!20770 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !20601)
!20771 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !20601)
!20772 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !20601)
!20773 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !20601)
!20774 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !20601)
!20775 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !20601)
!20776 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !20601)
!20777 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !20601)
!20778 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !20601)
!20779 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !20601)
!20780 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !20601)
!20781 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !20601)
!20782 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !20601)
!20783 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !20601)
!20784 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !20601)
!20785 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !20601)
!20786 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !20601)
!20787 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !20601)
!20788 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !20601)
!20789 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !20601)
!20790 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !20601)
!20791 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !20601)
!20792 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !20601)
!20793 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !20601)
!20794 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !20601)
!20795 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !20601)
!20796 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !20601)
!20797 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !20601)
!20798 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !20601)
!20799 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !20601)
!20800 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !20601)
!20801 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !20601)
!20802 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !20601)
!20803 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !20601)
!20804 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !20601)
!20805 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !20601)
!20806 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !20601)
!20807 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !20601)
!20808 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !20601)
!20809 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !20601)
!20810 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !20601)
!20811 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !20601)
!20812 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !20601)
!20813 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !20601)
!20814 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !20601)
!20815 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !20601)
!20816 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !20601)
!20817 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !20601)
!20818 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !20601)
!20819 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !20601)
!20820 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !20601)
!20821 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !20601)
!20822 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !20601)
!20823 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !20601)
!20824 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !20601)
!20825 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !20601)
!20826 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !20601)
!20827 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !20601)
!20828 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !20601)
!20829 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !20601)
!20830 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !20601)
!20831 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !20601)
!20832 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !20601)
!20833 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !20601)
!20834 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !20601)
!20835 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !20601)
!20836 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !20601)
!20837 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !20601)
!20838 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !20601)
!20839 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !20601)
!20840 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !20601)
!20841 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !20601)
!20842 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !20601)
!20843 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !20601)
!20844 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !20601)
!20845 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !20601)
!20846 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !20601)
!20847 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !20601)
!20848 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !20601)
!20849 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !20601)
!20850 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !20601)
!20851 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !20601)
!20852 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !20601)
!20853 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !20601)
!20854 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !20601)
!20855 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !20601)
!20856 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !20601)
!20857 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !20601)
!20858 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !20601)
!20859 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !20601)
!20860 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !20601)
!20861 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !20601)
!20862 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !20601)
!20863 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !20604)
!20864 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !20604)
!20865 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !20604)
!20866 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !20604)
!20867 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !20604)
!20868 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !20604)
!20869 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !20604)
!20870 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !20604)
!20871 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !20604)
!20872 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !20604)
!20873 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !20604)
!20874 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !20604)
!20875 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !20604)
!20876 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !20604)
!20877 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !20604)
!20878 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !20604)
!20879 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !20604)
!20880 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !20604)
!20881 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !20601)
!20882 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !20601)
!20883 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !20601)
!20884 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !20601)
!20885 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !20601)
!20886 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !20601)
!20887 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !20601)
!20888 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !20601)
!20889 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !20601)
!20890 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !20601)
!20891 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !20601)
!20892 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !20601)
!20893 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !20601)
!20894 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !20601)
!20895 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !20601)
!20896 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !20601)
!20897 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !20601)
!20898 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !20601)
!20899 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !20601)
!20900 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !20601)
!20901 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !20601)
!20902 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !20601)
!20903 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !20601)
!20904 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !20601)
!20905 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !20601)
!20906 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !20601)
!20907 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !20601)
!20908 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !20601)
!20909 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !20601)
!20910 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !20601)
!20911 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !20601)
!20912 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !20601)
!20913 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !20601)
!20914 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !20601)
!20915 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !20601)
!20916 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !20601)
!20917 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !20601)
!20918 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !20601)
!20919 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !20601)
!20920 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !20601)
!20921 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !20601)
!20922 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !20601)
!20923 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !20601)
!20924 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !20601)
!20925 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !20601)
!20926 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !20601)
!20927 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !20601)
!20928 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !20601)
!20929 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !20601)
!20930 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !20601)
!20931 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !20601)
!20932 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !20601)
!20933 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !20601)
!20934 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !20601)
!20935 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !20601)
!20936 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !20601)
!20937 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !20601)
!20938 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !20601)
!20939 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !20601)
!20940 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !20601)
!20941 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !20601)
!20942 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !20601)
!20943 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !20601)
!20944 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !20601)
!20945 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !20601)
!20946 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !20601)
!20947 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !20601)
!20948 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !20601)
!20949 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !20601)
!20950 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !20601)
!20951 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !20601)
!20952 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !20601)
!20953 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !20601)
!20954 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !20601)
!20955 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !20601)
!20956 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !20601)
!20957 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !20601)
!20958 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !20601)
!20959 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !20601)
!20960 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !20601)
!20961 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !20601)
!20962 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !20601)
!20963 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !20601)
!20964 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !20601)
!20965 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !20601)
!20966 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !20601)
!20967 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !20601)
!20968 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !20601)
!20969 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !20601)
!20970 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !20601)
!20971 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !20601)
!20972 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !20601)
!20973 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !20601)
!20974 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !20601)
!20975 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !20601)
!20976 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !20601)
!20977 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !20601)
!20978 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !20601)
!20979 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !20601)
!20980 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !20601)
!20981 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !20601)
!20982 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !20601)
!20983 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !20601)
!20984 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !20601)
!20985 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !20601)
!20986 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !20601)
!20987 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !20601)
!20988 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !20601)
!20989 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !20601)
!20990 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !20601)
!20991 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !20601)
!20992 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !20601)
!20993 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !20601)
!20994 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !20601)
!20995 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !20601)
!20996 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !20601)
!20997 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !20601)
!20998 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !20601)
!20999 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !20601)
!21000 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !20601)
!21001 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !20601)
!21002 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !20601)
!21003 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !20601)
!21004 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !20601)
!21005 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !20601)
!21006 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !20601)
!21007 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !20601)
!21008 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !20601)
!21009 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !20601)
!21010 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !20601)
!21011 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !20601)
!21012 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !20601)
!21013 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !20601)
!21014 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !20601)
!21015 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !20601)
!21016 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !20601)
!21017 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !20601)
!21018 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !20601)
!21019 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !20601)
!21020 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !20601)
!21021 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !20601)
!21022 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !20601)
!21023 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !20601)
!21024 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !20601)
!21025 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !20601)
!21026 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !20601)
!21027 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !20601)
!21028 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !20601)
!21029 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !20601)
!21030 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !20601)
!21031 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !20601)
!21032 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !20601)
!21033 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !20601)
!21034 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !20601)
!21035 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !20601)
!21036 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !20601)
!21037 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !20601)
!21038 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !20601)
!21039 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !20601)
!21040 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !20601)
!21041 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !20601)
!21042 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !20601)
!21043 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !20601)
!21044 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !20601)
!21045 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !20601)
!21046 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !20601)
!21047 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !20601)
!21048 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !20601)
!21049 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !20601)
!21050 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !20601)
!21051 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !20601)
!21052 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !20601)
!21053 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !20601)
!21054 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !20601)
!21055 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !20601)
!21056 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !20601)
!21057 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !20601)
!21058 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !20601)
!21059 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !20600)
!21060 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !20600)
!21061 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !20600)
!21062 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !20600)
!21063 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !20600)
!21064 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !20600)
!21065 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !20600)
!21066 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !20600)
!21067 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !20600)
!21068 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !20600)
!21069 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !20600)
!21070 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !20600)
!21071 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !20600)
!21072 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !20600)
!21073 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !20600)
!21074 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !20600)
!21075 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !20600)
!21076 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !20600)
!21077 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !20601)
!21078 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !20601)
!21079 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !20601)
!21080 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !20601)
!21081 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !20601)
!21082 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !20601)
!21083 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !20601)
!21084 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !20601)
!21085 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !20601)
!21086 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !20601)
!21087 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !20601)
!21088 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !20601)
!21089 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !20601)
!21090 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !20601)
!21091 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !20601)
!21092 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !20601)
!21093 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !20601)
!21094 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !20601)
!21095 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !20601)
!21096 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !20601)
!21097 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !20601)
!21098 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !20601)
!21099 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !20601)
!21100 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !20601)
!21101 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !20601)
!21102 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !20601)
!21103 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !20601)
!21104 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !20601)
!21105 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !20601)
!21106 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !20601)
!21107 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !20601)
!21108 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !20601)
!21109 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !20601)
!21110 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !20601)
!21111 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !20601)
!21112 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !20601)
!21113 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !20601)
!21114 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !20601)
!21115 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !20601)
!21116 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !20601)
!21117 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !20601)
!21118 = !DILocation(line: 193, column: 248, scope: !20598)
!21119 = distinct !DISubprogram(name: "quant", scope: !4818, file: !4818, line: 59, type: !21120, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21120 = !DISubroutineType(types: !21121)
!21121 = !{!991, !954, !1781, !1781}
!21122 = !DILocalVariable(name: "coef", arg: 1, scope: !21119, file: !4818, line: 59, type: !954)
!21123 = !DILocation(line: 59, column: 31, scope: !21119)
!21124 = !DILocalVariable(name: "Q", arg: 2, scope: !21119, file: !4818, line: 59, type: !1781)
!21125 = !DILocation(line: 59, column: 49, scope: !21119)
!21126 = !DILocalVariable(name: "rounding", arg: 3, scope: !21119, file: !4818, line: 59, type: !1781)
!21127 = !DILocation(line: 59, column: 64, scope: !21119)
!21128 = !DILocalVariable(name: "a", scope: !21119, file: !4818, line: 61, type: !954)
!21129 = !DILocation(line: 61, column: 11, scope: !21119)
!21130 = !DILocation(line: 61, column: 15, scope: !21119)
!21131 = !DILocation(line: 61, column: 22, scope: !21119)
!21132 = !DILocation(line: 61, column: 20, scope: !21119)
!21133 = !DILocation(line: 62, column: 18, scope: !21119)
!21134 = !DILocation(line: 62, column: 28, scope: !21119)
!21135 = !DILocation(line: 62, column: 22, scope: !21119)
!21136 = !DILocation(line: 62, column: 20, scope: !21119)
!21137 = !DILocation(line: 62, column: 12, scope: !21138)
!21138 = !DILexicalBlockFile(scope: !21119, file: !4818, discriminator: 1)
!21139 = !DILocation(line: 62, column: 34, scope: !21119)
!21140 = !DILocation(line: 62, column: 32, scope: !21119)
!21141 = !DILocation(line: 62, column: 12, scope: !21119)
!21142 = !DILocation(line: 62, column: 5, scope: !21119)
!21143 = distinct !DISubprogram(name: "put_bits", scope: !1714, file: !1714, line: 164, type: !21144, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21144 = !DISubroutineType(types: !21145)
!21145 = !{null, !2691, !991, !952}
!21146 = !DILocalVariable(name: "x", arg: 1, scope: !21147, file: !21148, line: 66, type: !950)
!21147 = distinct !DISubprogram(name: "av_bswap32", scope: !21148, file: !21148, line: 66, type: !21149, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21148 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!21149 = !DISubroutineType(types: !21150)
!21150 = !{!950, !950}
!21151 = !DILocation(line: 66, column: 98, scope: !21147, inlinedAt: !21152)
!21152 = distinct !DILocation(line: 197, column: 60, scope: !21153)
!21153 = distinct !DILexicalBlock(scope: !21154, file: !1714, line: 196, column: 42)
!21154 = distinct !DILexicalBlock(scope: !21155, file: !1714, line: 196, column: 13)
!21155 = distinct !DILexicalBlock(scope: !21156, file: !1714, line: 193, column: 12)
!21156 = distinct !DILexicalBlock(scope: !21143, file: !1714, line: 190, column: 9)
!21157 = !DILocalVariable(name: "s", arg: 1, scope: !21143, file: !1714, line: 164, type: !2691)
!21158 = !DILocation(line: 164, column: 44, scope: !21143)
!21159 = !DILocalVariable(name: "n", arg: 2, scope: !21143, file: !1714, line: 164, type: !991)
!21160 = !DILocation(line: 164, column: 51, scope: !21143)
!21161 = !DILocalVariable(name: "value", arg: 3, scope: !21143, file: !1714, line: 164, type: !952)
!21162 = !DILocation(line: 164, column: 67, scope: !21143)
!21163 = !DILocalVariable(name: "bit_buf", scope: !21143, file: !1714, line: 166, type: !952)
!21164 = !DILocation(line: 166, column: 18, scope: !21143)
!21165 = !DILocalVariable(name: "bit_left", scope: !21143, file: !1714, line: 167, type: !991)
!21166 = !DILocation(line: 167, column: 9, scope: !21143)
!21167 = !DILocation(line: 171, column: 15, scope: !21143)
!21168 = !DILocation(line: 171, column: 18, scope: !21143)
!21169 = !DILocation(line: 171, column: 13, scope: !21143)
!21170 = !DILocation(line: 172, column: 16, scope: !21143)
!21171 = !DILocation(line: 172, column: 19, scope: !21143)
!21172 = !DILocation(line: 172, column: 14, scope: !21143)
!21173 = !DILocation(line: 190, column: 9, scope: !21156)
!21174 = !DILocation(line: 190, column: 13, scope: !21156)
!21175 = !DILocation(line: 190, column: 11, scope: !21156)
!21176 = !DILocation(line: 190, column: 9, scope: !21143)
!21177 = !DILocation(line: 191, column: 20, scope: !21178)
!21178 = distinct !DILexicalBlock(scope: !21156, file: !1714, line: 190, column: 23)
!21179 = !DILocation(line: 191, column: 31, scope: !21178)
!21180 = !DILocation(line: 191, column: 28, scope: !21178)
!21181 = !DILocation(line: 191, column: 36, scope: !21178)
!21182 = !DILocation(line: 191, column: 34, scope: !21178)
!21183 = !DILocation(line: 191, column: 17, scope: !21178)
!21184 = !DILocation(line: 192, column: 21, scope: !21178)
!21185 = !DILocation(line: 192, column: 18, scope: !21178)
!21186 = !DILocation(line: 193, column: 5, scope: !21178)
!21187 = !DILocation(line: 194, column: 21, scope: !21155)
!21188 = !DILocation(line: 194, column: 17, scope: !21155)
!21189 = !DILocation(line: 195, column: 20, scope: !21155)
!21190 = !DILocation(line: 195, column: 30, scope: !21155)
!21191 = !DILocation(line: 195, column: 34, scope: !21155)
!21192 = !DILocation(line: 195, column: 32, scope: !21155)
!21193 = !DILocation(line: 195, column: 26, scope: !21155)
!21194 = !DILocation(line: 195, column: 17, scope: !21155)
!21195 = !DILocation(line: 196, column: 17, scope: !21154)
!21196 = !DILocation(line: 196, column: 20, scope: !21154)
!21197 = !DILocation(line: 196, column: 30, scope: !21154)
!21198 = !DILocation(line: 196, column: 33, scope: !21154)
!21199 = !DILocation(line: 196, column: 28, scope: !21154)
!21200 = !DILocation(line: 196, column: 15, scope: !21154)
!21201 = !DILocation(line: 196, column: 13, scope: !21155)
!21202 = !DILocation(line: 197, column: 71, scope: !21153)
!21203 = !DILocation(line: 197, column: 60, scope: !21153)
!21204 = !DILocation(line: 68, column: 16, scope: !21147, inlinedAt: !21152)
!21205 = !DILocation(line: 68, column: 19, scope: !21147, inlinedAt: !21152)
!21206 = !DILocation(line: 68, column: 24, scope: !21147, inlinedAt: !21152)
!21207 = !DILocation(line: 68, column: 38, scope: !21147, inlinedAt: !21152)
!21208 = !DILocation(line: 68, column: 41, scope: !21147, inlinedAt: !21152)
!21209 = !DILocation(line: 68, column: 46, scope: !21147, inlinedAt: !21152)
!21210 = !DILocation(line: 68, column: 34, scope: !21147, inlinedAt: !21152)
!21211 = !DILocation(line: 68, column: 57, scope: !21147, inlinedAt: !21152)
!21212 = !DILocation(line: 68, column: 69, scope: !21147, inlinedAt: !21152)
!21213 = !DILocation(line: 68, column: 72, scope: !21147, inlinedAt: !21152)
!21214 = !DILocation(line: 68, column: 79, scope: !21147, inlinedAt: !21152)
!21215 = !DILocation(line: 68, column: 84, scope: !21147, inlinedAt: !21152)
!21216 = !DILocation(line: 68, column: 99, scope: !21147, inlinedAt: !21152)
!21217 = !DILocation(line: 68, column: 102, scope: !21147, inlinedAt: !21152)
!21218 = !DILocation(line: 68, column: 109, scope: !21147, inlinedAt: !21152)
!21219 = !DILocation(line: 68, column: 114, scope: !21147, inlinedAt: !21152)
!21220 = !DILocation(line: 68, column: 94, scope: !21147, inlinedAt: !21152)
!21221 = !DILocation(line: 68, column: 63, scope: !21147, inlinedAt: !21152)
!21222 = !DILocation(line: 197, column: 40, scope: !21153)
!21223 = !DILocation(line: 197, column: 43, scope: !21153)
!21224 = !DILocation(line: 197, column: 54, scope: !21153)
!21225 = !DILocation(line: 197, column: 57, scope: !21153)
!21226 = !DILocation(line: 198, column: 13, scope: !21153)
!21227 = !DILocation(line: 198, column: 16, scope: !21153)
!21228 = !DILocation(line: 198, column: 24, scope: !21153)
!21229 = !DILocation(line: 199, column: 9, scope: !21153)
!21230 = !DILocation(line: 200, column: 13, scope: !21231)
!21231 = distinct !DILexicalBlock(scope: !21154, file: !1714, line: 199, column: 16)
!21232 = !DILocation(line: 203, column: 26, scope: !21155)
!21233 = !DILocation(line: 203, column: 24, scope: !21155)
!21234 = !DILocation(line: 203, column: 18, scope: !21155)
!21235 = !DILocation(line: 204, column: 19, scope: !21155)
!21236 = !DILocation(line: 204, column: 17, scope: !21155)
!21237 = !DILocation(line: 208, column: 18, scope: !21143)
!21238 = !DILocation(line: 208, column: 5, scope: !21143)
!21239 = !DILocation(line: 208, column: 8, scope: !21143)
!21240 = !DILocation(line: 208, column: 16, scope: !21143)
!21241 = !DILocation(line: 209, column: 19, scope: !21143)
!21242 = !DILocation(line: 209, column: 5, scope: !21143)
!21243 = !DILocation(line: 209, column: 8, scope: !21143)
!21244 = !DILocation(line: 209, column: 17, scope: !21143)
!21245 = !DILocation(line: 210, column: 1, scope: !21143)
!21246 = distinct !DISubprogram(name: "put_sbits", scope: !1714, file: !1714, line: 240, type: !21247, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21247 = !DISubroutineType(types: !21248)
!21248 = !{null, !2691, !991, !1852}
!21249 = !DILocalVariable(name: "a", arg: 1, scope: !21250, file: !2769, line: 241, type: !952)
!21250 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !2769, file: !2769, line: 241, type: !21251, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21251 = !DISubroutineType(types: !21252)
!21252 = !{!952, !952, !952}
!21253 = !DILocation(line: 241, column: 103, scope: !21250, inlinedAt: !21254)
!21254 = distinct !DILocation(line: 244, column: 21, scope: !21246)
!21255 = !DILocalVariable(name: "p", arg: 2, scope: !21250, file: !2769, line: 241, type: !952)
!21256 = !DILocation(line: 241, column: 115, scope: !21250, inlinedAt: !21254)
!21257 = !DILocalVariable(name: "pb", arg: 1, scope: !21246, file: !1714, line: 240, type: !2691)
!21258 = !DILocation(line: 240, column: 45, scope: !21246)
!21259 = !DILocalVariable(name: "n", arg: 2, scope: !21246, file: !1714, line: 240, type: !991)
!21260 = !DILocation(line: 240, column: 53, scope: !21246)
!21261 = !DILocalVariable(name: "value", arg: 3, scope: !21246, file: !1714, line: 240, type: !1852)
!21262 = !DILocation(line: 240, column: 64, scope: !21246)
!21263 = !DILocation(line: 244, column: 14, scope: !21246)
!21264 = !DILocation(line: 244, column: 18, scope: !21246)
!21265 = !DILocation(line: 244, column: 37, scope: !21246)
!21266 = !DILocation(line: 244, column: 44, scope: !21246)
!21267 = !DILocation(line: 244, column: 21, scope: !21246)
!21268 = !DILocation(line: 243, column: 12, scope: !21250, inlinedAt: !21254)
!21269 = !DILocation(line: 243, column: 23, scope: !21250, inlinedAt: !21254)
!21270 = !DILocation(line: 243, column: 20, scope: !21250, inlinedAt: !21254)
!21271 = !DILocation(line: 243, column: 26, scope: !21250, inlinedAt: !21254)
!21272 = !DILocation(line: 243, column: 14, scope: !21250, inlinedAt: !21254)
!21273 = !DILocation(line: 244, column: 5, scope: !21274)
!21274 = !DILexicalBlockFile(scope: !21246, file: !1714, discriminator: 1)
!21275 = !DILocation(line: 245, column: 1, scope: !21246)
!21276 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_ESC", scope: !2734, file: !2734, line: 190, type: !2738, isLocal: true, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21277 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !21278)
!21278 = distinct !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !21279)
!21279 = distinct !DILocation(line: 190, column: 252, scope: !21276)
!21280 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !21278)
!21281 = !DILocation(line: 229, column: 99, scope: !16763, inlinedAt: !21282)
!21282 = distinct !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !21279)
!21283 = !DILocation(line: 229, column: 106, scope: !16763, inlinedAt: !21282)
!21284 = !DILocation(line: 42, column: 55, scope: !16781, inlinedAt: !21279)
!21285 = !DILocation(line: 43, column: 48, scope: !16781, inlinedAt: !21279)
!21286 = !DILocation(line: 43, column: 65, scope: !16781, inlinedAt: !21279)
!21287 = !DILocation(line: 43, column: 76, scope: !16781, inlinedAt: !21279)
!21288 = !DILocation(line: 44, column: 46, scope: !16781, inlinedAt: !21279)
!21289 = !DILocation(line: 44, column: 58, scope: !16781, inlinedAt: !21279)
!21290 = !DILocation(line: 44, column: 68, scope: !16781, inlinedAt: !21279)
!21291 = !DILocation(line: 45, column: 37, scope: !16781, inlinedAt: !21279)
!21292 = !DILocation(line: 45, column: 53, scope: !16781, inlinedAt: !21279)
!21293 = !DILocation(line: 45, column: 73, scope: !16781, inlinedAt: !21279)
!21294 = !DILocation(line: 46, column: 38, scope: !16781, inlinedAt: !21279)
!21295 = !DILocation(line: 46, column: 51, scope: !16781, inlinedAt: !21279)
!21296 = !DILocation(line: 46, column: 63, scope: !16781, inlinedAt: !21279)
!21297 = !DILocation(line: 46, column: 76, scope: !16781, inlinedAt: !21279)
!21298 = !DILocation(line: 47, column: 37, scope: !16781, inlinedAt: !21279)
!21299 = !DILocation(line: 47, column: 50, scope: !16781, inlinedAt: !21279)
!21300 = !DILocation(line: 47, column: 62, scope: !16781, inlinedAt: !21279)
!21301 = !DILocation(line: 47, column: 76, scope: !16781, inlinedAt: !21279)
!21302 = !DILocation(line: 48, column: 45, scope: !16781, inlinedAt: !21279)
!21303 = !DILocation(line: 50, column: 15, scope: !16781, inlinedAt: !21279)
!21304 = !DILocation(line: 51, column: 17, scope: !16781, inlinedAt: !21279)
!21305 = !DILocation(line: 52, column: 17, scope: !16781, inlinedAt: !21279)
!21306 = !DILocation(line: 53, column: 17, scope: !16781, inlinedAt: !21279)
!21307 = !DILocation(line: 54, column: 17, scope: !16781, inlinedAt: !21279)
!21308 = !DILocation(line: 55, column: 9, scope: !16781, inlinedAt: !21279)
!21309 = !DILocation(line: 55, column: 12, scope: !16781, inlinedAt: !21279)
!21310 = !DILocation(line: 56, column: 11, scope: !16781, inlinedAt: !21279)
!21311 = !DILocation(line: 57, column: 11, scope: !16781, inlinedAt: !21279)
!21312 = !DILocation(line: 58, column: 15, scope: !16781, inlinedAt: !21279)
!21313 = !DILocation(line: 59, column: 9, scope: !16781, inlinedAt: !21279)
!21314 = !DILocation(line: 60, column: 9, scope: !16781, inlinedAt: !21279)
!21315 = !DILocation(line: 87, column: 22, scope: !16778, inlinedAt: !21279)
!21316 = !DILocation(line: 88, column: 14, scope: !16778, inlinedAt: !21279)
!21317 = !DILocation(line: 89, column: 13, scope: !16778, inlinedAt: !21279)
!21318 = !DILocation(line: 90, column: 13, scope: !16778, inlinedAt: !21279)
!21319 = !DILocation(line: 91, column: 15, scope: !16778, inlinedAt: !21279)
!21320 = !DILocation(line: 91, column: 26, scope: !16778, inlinedAt: !21279)
!21321 = !DILocation(line: 100, column: 23, scope: !16794, inlinedAt: !21279)
!21322 = !DILocation(line: 101, column: 23, scope: !16794, inlinedAt: !21279)
!21323 = !DILocation(line: 107, column: 29, scope: !16790, inlinedAt: !21279)
!21324 = !DILocation(line: 144, column: 29, scope: !16769, inlinedAt: !21279)
!21325 = !DILocation(line: 145, column: 29, scope: !16769, inlinedAt: !21279)
!21326 = !DILocalVariable(name: "s", arg: 1, scope: !21276, file: !2734, line: 190, type: !1695)
!21327 = !DILocation(line: 190, column: 71, scope: !21276)
!21328 = !DILocalVariable(name: "pb", arg: 2, scope: !21276, file: !2734, line: 190, type: !2691)
!21329 = !DILocation(line: 190, column: 89, scope: !21276)
!21330 = !DILocalVariable(name: "in", arg: 3, scope: !21276, file: !2734, line: 190, type: !1780)
!21331 = !DILocation(line: 190, column: 106, scope: !21276)
!21332 = !DILocalVariable(name: "quant", arg: 4, scope: !21276, file: !2734, line: 190, type: !1779)
!21333 = !DILocation(line: 190, column: 117, scope: !21276)
!21334 = !DILocalVariable(name: "scaled", arg: 5, scope: !21276, file: !2734, line: 190, type: !1780)
!21335 = !DILocation(line: 190, column: 137, scope: !21276)
!21336 = !DILocalVariable(name: "size", arg: 6, scope: !21276, file: !2734, line: 190, type: !991)
!21337 = !DILocation(line: 190, column: 149, scope: !21276)
!21338 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !21276, file: !2734, line: 190, type: !991)
!21339 = !DILocation(line: 190, column: 159, scope: !21276)
!21340 = !DILocalVariable(name: "cb", arg: 8, scope: !21276, file: !2734, line: 190, type: !991)
!21341 = !DILocation(line: 190, column: 174, scope: !21276)
!21342 = !DILocalVariable(name: "lambda", arg: 9, scope: !21276, file: !2734, line: 190, type: !1781)
!21343 = !DILocation(line: 190, column: 190, scope: !21276)
!21344 = !DILocalVariable(name: "uplim", arg: 10, scope: !21276, file: !2734, line: 190, type: !1781)
!21345 = !DILocation(line: 190, column: 210, scope: !21276)
!21346 = !DILocalVariable(name: "bits", arg: 11, scope: !21276, file: !2734, line: 190, type: !1264)
!21347 = !DILocation(line: 190, column: 222, scope: !21276)
!21348 = !DILocalVariable(name: "energy", arg: 12, scope: !21276, file: !2734, line: 190, type: !1779)
!21349 = !DILocation(line: 190, column: 235, scope: !21276)
!21350 = !DILocation(line: 190, column: 292, scope: !21276)
!21351 = !DILocation(line: 190, column: 295, scope: !21276)
!21352 = !DILocation(line: 190, column: 299, scope: !21276)
!21353 = !DILocation(line: 190, column: 303, scope: !21276)
!21354 = !DILocation(line: 190, column: 310, scope: !21276)
!21355 = !DILocation(line: 190, column: 318, scope: !21276)
!21356 = !DILocation(line: 190, column: 324, scope: !21276)
!21357 = !DILocation(line: 190, column: 352, scope: !21276)
!21358 = !DILocation(line: 190, column: 360, scope: !21276)
!21359 = !DILocation(line: 190, column: 367, scope: !21276)
!21360 = !DILocation(line: 190, column: 373, scope: !21276)
!21361 = !DILocation(line: 190, column: 252, scope: !21276)
!21362 = !DILocation(line: 50, column: 29, scope: !16781, inlinedAt: !21279)
!21363 = !DILocation(line: 50, column: 27, scope: !16781, inlinedAt: !21279)
!21364 = !DILocation(line: 50, column: 39, scope: !16781, inlinedAt: !21279)
!21365 = !DILocation(line: 50, column: 45, scope: !16781, inlinedAt: !21279)
!21366 = !DILocation(line: 51, column: 40, scope: !16781, inlinedAt: !21279)
!21367 = !DILocation(line: 51, column: 21, scope: !16781, inlinedAt: !21279)
!21368 = !DILocation(line: 52, column: 42, scope: !16781, inlinedAt: !21279)
!21369 = !DILocation(line: 52, column: 23, scope: !16781, inlinedAt: !21279)
!21370 = !DILocation(line: 53, column: 47, scope: !16781, inlinedAt: !21279)
!21371 = !DILocation(line: 53, column: 45, scope: !16781, inlinedAt: !21279)
!21372 = !DILocation(line: 53, column: 57, scope: !16781, inlinedAt: !21279)
!21373 = !DILocation(line: 53, column: 63, scope: !16781, inlinedAt: !21279)
!21374 = !DILocation(line: 53, column: 22, scope: !16781, inlinedAt: !21279)
!21375 = !DILocation(line: 54, column: 44, scope: !16781, inlinedAt: !21279)
!21376 = !DILocation(line: 54, column: 43, scope: !16781, inlinedAt: !21279)
!21377 = !DILocation(line: 58, column: 21, scope: !16781, inlinedAt: !21279)
!21378 = !DILocation(line: 62, column: 9, scope: !16938, inlinedAt: !21279)
!21379 = !DILocation(line: 62, column: 17, scope: !16938, inlinedAt: !21279)
!21380 = !DILocation(line: 62, column: 20, scope: !16941, inlinedAt: !21279)
!21381 = !DILocation(line: 62, column: 29, scope: !16941, inlinedAt: !21279)
!21382 = !DILocation(line: 62, column: 32, scope: !16944, inlinedAt: !21279)
!21383 = !DILocation(line: 62, column: 9, scope: !16944, inlinedAt: !21279)
!21384 = !DILocation(line: 63, column: 16, scope: !16947, inlinedAt: !21279)
!21385 = !DILocation(line: 63, column: 14, scope: !16947, inlinedAt: !21279)
!21386 = !DILocation(line: 63, column: 21, scope: !16951, inlinedAt: !21279)
!21387 = !DILocation(line: 63, column: 25, scope: !16951, inlinedAt: !21279)
!21388 = !DILocation(line: 63, column: 23, scope: !16951, inlinedAt: !21279)
!21389 = !DILocation(line: 63, column: 9, scope: !16951, inlinedAt: !21279)
!21390 = !DILocation(line: 64, column: 24, scope: !16952, inlinedAt: !21279)
!21391 = !DILocation(line: 64, column: 21, scope: !16952, inlinedAt: !21279)
!21392 = !DILocation(line: 64, column: 30, scope: !16952, inlinedAt: !21279)
!21393 = !DILocation(line: 64, column: 27, scope: !16952, inlinedAt: !21279)
!21394 = !DILocation(line: 64, column: 26, scope: !16952, inlinedAt: !21279)
!21395 = !DILocation(line: 64, column: 18, scope: !16952, inlinedAt: !21279)
!21396 = !DILocation(line: 63, column: 32, scope: !16963, inlinedAt: !21279)
!21397 = !DILocation(line: 63, column: 9, scope: !16963, inlinedAt: !21279)
!21398 = !DILocation(line: 65, column: 13, scope: !16968, inlinedAt: !21279)
!21399 = !DILocation(line: 65, column: 13, scope: !16948, inlinedAt: !21279)
!21400 = !DILocation(line: 66, column: 14, scope: !16968, inlinedAt: !21279)
!21401 = !DILocation(line: 66, column: 19, scope: !16968, inlinedAt: !21279)
!21402 = !DILocation(line: 66, column: 13, scope: !16968, inlinedAt: !21279)
!21403 = !DILocation(line: 67, column: 13, scope: !16974, inlinedAt: !21279)
!21404 = !DILocation(line: 67, column: 13, scope: !16948, inlinedAt: !21279)
!21405 = !DILocation(line: 68, column: 23, scope: !16974, inlinedAt: !21279)
!21406 = !DILocation(line: 68, column: 14, scope: !16974, inlinedAt: !21279)
!21407 = !DILocation(line: 68, column: 21, scope: !16974, inlinedAt: !21279)
!21408 = !DILocation(line: 68, column: 13, scope: !16974, inlinedAt: !21279)
!21409 = !DILocation(line: 69, column: 13, scope: !16981, inlinedAt: !21279)
!21410 = !DILocation(line: 69, column: 13, scope: !16948, inlinedAt: !21279)
!21411 = !DILocation(line: 70, column: 20, scope: !16984, inlinedAt: !21279)
!21412 = !DILocation(line: 70, column: 18, scope: !16984, inlinedAt: !21279)
!21413 = !DILocation(line: 70, column: 25, scope: !16988, inlinedAt: !21279)
!21414 = !DILocation(line: 70, column: 29, scope: !16988, inlinedAt: !21279)
!21415 = !DILocation(line: 70, column: 27, scope: !16988, inlinedAt: !21279)
!21416 = !DILocation(line: 70, column: 13, scope: !16988, inlinedAt: !21279)
!21417 = !DILocation(line: 71, column: 24, scope: !16994, inlinedAt: !21279)
!21418 = !DILocation(line: 71, column: 22, scope: !16994, inlinedAt: !21279)
!21419 = !DILocation(line: 71, column: 29, scope: !16997, inlinedAt: !21279)
!21420 = !DILocation(line: 71, column: 33, scope: !16997, inlinedAt: !21279)
!21421 = !DILocation(line: 71, column: 31, scope: !16997, inlinedAt: !21279)
!21422 = !DILocation(line: 71, column: 17, scope: !16997, inlinedAt: !21279)
!21423 = !DILocation(line: 72, column: 25, scope: !16998, inlinedAt: !21279)
!21424 = !DILocation(line: 72, column: 27, scope: !16998, inlinedAt: !21279)
!21425 = !DILocation(line: 72, column: 26, scope: !16998, inlinedAt: !21279)
!21426 = !DILocation(line: 72, column: 21, scope: !16998, inlinedAt: !21279)
!21427 = !DILocation(line: 72, column: 30, scope: !16998, inlinedAt: !21279)
!21428 = !DILocation(line: 71, column: 39, scope: !17008, inlinedAt: !21279)
!21429 = !DILocation(line: 71, column: 17, scope: !17008, inlinedAt: !21279)
!21430 = !DILocation(line: 70, column: 40, scope: !17013, inlinedAt: !21279)
!21431 = !DILocation(line: 70, column: 37, scope: !17013, inlinedAt: !21279)
!21432 = !DILocation(line: 70, column: 13, scope: !17013, inlinedAt: !21279)
!21433 = !DILocation(line: 73, column: 9, scope: !16985, inlinedAt: !21279)
!21434 = !DILocation(line: 74, column: 16, scope: !16948, inlinedAt: !21279)
!21435 = !DILocation(line: 74, column: 23, scope: !16948, inlinedAt: !21279)
!21436 = !DILocation(line: 74, column: 21, scope: !16948, inlinedAt: !21279)
!21437 = !DILocation(line: 74, column: 9, scope: !16948, inlinedAt: !21279)
!21438 = !DILocation(line: 76, column: 10, scope: !17024, inlinedAt: !21279)
!21439 = !DILocation(line: 76, column: 9, scope: !16781, inlinedAt: !21279)
!21440 = !DILocation(line: 77, column: 9, scope: !17027, inlinedAt: !21279)
!21441 = !DILocation(line: 77, column: 12, scope: !17027, inlinedAt: !21279)
!21442 = !DILocation(line: 77, column: 22, scope: !17027, inlinedAt: !21279)
!21443 = !DILocation(line: 77, column: 25, scope: !17027, inlinedAt: !21279)
!21444 = !DILocation(line: 77, column: 33, scope: !17027, inlinedAt: !21279)
!21445 = !DILocation(line: 77, column: 37, scope: !17027, inlinedAt: !21279)
!21446 = !DILocation(line: 78, column: 18, scope: !17027, inlinedAt: !21279)
!21447 = !DILocation(line: 78, column: 21, scope: !17027, inlinedAt: !21279)
!21448 = !DILocation(line: 78, column: 16, scope: !17027, inlinedAt: !21279)
!21449 = !DILocation(line: 79, column: 5, scope: !17027, inlinedAt: !21279)
!21450 = !DILocation(line: 80, column: 5, scope: !16781, inlinedAt: !21279)
!21451 = !DILocation(line: 80, column: 8, scope: !16781, inlinedAt: !21279)
!21452 = !DILocation(line: 80, column: 20, scope: !16781, inlinedAt: !21279)
!21453 = !DILocation(line: 80, column: 23, scope: !16781, inlinedAt: !21279)
!21454 = !DILocation(line: 80, column: 31, scope: !16781, inlinedAt: !21279)
!21455 = !DILocation(line: 80, column: 35, scope: !16781, inlinedAt: !21279)
!21456 = !DILocation(line: 80, column: 43, scope: !16781, inlinedAt: !21279)
!21457 = !DILocation(line: 80, column: 50, scope: !16781, inlinedAt: !21279)
!21458 = !DILocation(line: 80, column: 49, scope: !16781, inlinedAt: !21279)
!21459 = !DILocation(line: 80, column: 77, scope: !16781, inlinedAt: !21279)
!21460 = !DILocation(line: 80, column: 63, scope: !16781, inlinedAt: !21279)
!21461 = !DILocation(line: 80, column: 82, scope: !16781, inlinedAt: !21279)
!21462 = !DILocation(line: 80, column: 87, scope: !16781, inlinedAt: !21279)
!21463 = !DILocation(line: 81, column: 9, scope: !17051, inlinedAt: !21279)
!21464 = !DILocation(line: 81, column: 9, scope: !16781, inlinedAt: !21279)
!21465 = !DILocation(line: 82, column: 13, scope: !17054, inlinedAt: !21279)
!21466 = !DILocation(line: 83, column: 5, scope: !17054, inlinedAt: !21279)
!21467 = !DILocation(line: 84, column: 29, scope: !17057, inlinedAt: !21279)
!21468 = !DILocation(line: 84, column: 15, scope: !17057, inlinedAt: !21279)
!21469 = !DILocation(line: 84, column: 13, scope: !17057, inlinedAt: !21279)
!21470 = !DILocation(line: 86, column: 12, scope: !16780, inlinedAt: !21279)
!21471 = !DILocation(line: 86, column: 10, scope: !16780, inlinedAt: !21279)
!21472 = !DILocation(line: 86, column: 17, scope: !17063, inlinedAt: !21279)
!21473 = !DILocation(line: 86, column: 21, scope: !17063, inlinedAt: !21279)
!21474 = !DILocation(line: 86, column: 19, scope: !17063, inlinedAt: !21279)
!21475 = !DILocation(line: 86, column: 5, scope: !17063, inlinedAt: !21279)
!21476 = !DILocation(line: 88, column: 23, scope: !16778, inlinedAt: !21279)
!21477 = !DILocation(line: 88, column: 26, scope: !16778, inlinedAt: !21279)
!21478 = !DILocation(line: 88, column: 35, scope: !16778, inlinedAt: !21279)
!21479 = !DILocation(line: 88, column: 33, scope: !16778, inlinedAt: !21279)
!21480 = !DILocation(line: 92, column: 16, scope: !17072, inlinedAt: !21279)
!21481 = !DILocation(line: 92, column: 14, scope: !17072, inlinedAt: !21279)
!21482 = !DILocation(line: 92, column: 21, scope: !17075, inlinedAt: !21279)
!21483 = !DILocation(line: 92, column: 25, scope: !17075, inlinedAt: !21279)
!21484 = !DILocation(line: 92, column: 23, scope: !17075, inlinedAt: !21279)
!21485 = !DILocation(line: 92, column: 9, scope: !17075, inlinedAt: !21279)
!21486 = !DILocation(line: 93, column: 36, scope: !17081, inlinedAt: !21279)
!21487 = !DILocation(line: 93, column: 23, scope: !17081, inlinedAt: !21279)
!21488 = !DILocation(line: 93, column: 20, scope: !17081, inlinedAt: !21279)
!21489 = !DILocation(line: 94, column: 30, scope: !17081, inlinedAt: !21279)
!21490 = !DILocation(line: 94, column: 23, scope: !17081, inlinedAt: !21279)
!21491 = !DILocation(line: 94, column: 35, scope: !17081, inlinedAt: !21279)
!21492 = !DILocation(line: 94, column: 33, scope: !17081, inlinedAt: !21279)
!21493 = !DILocation(line: 94, column: 20, scope: !17081, inlinedAt: !21279)
!21494 = !DILocation(line: 92, column: 31, scope: !17090, inlinedAt: !21279)
!21495 = !DILocation(line: 92, column: 9, scope: !17090, inlinedAt: !21279)
!21496 = !DILocation(line: 96, column: 46, scope: !16778, inlinedAt: !21279)
!21497 = !DILocation(line: 96, column: 19, scope: !16778, inlinedAt: !21279)
!21498 = !DILocation(line: 96, column: 40, scope: !16778, inlinedAt: !21279)
!21499 = !DILocation(line: 96, column: 42, scope: !16778, inlinedAt: !21279)
!21500 = !DILocation(line: 96, column: 17, scope: !16778, inlinedAt: !21279)
!21501 = !DILocation(line: 97, column: 46, scope: !16778, inlinedAt: !21279)
!21502 = !DILocation(line: 97, column: 53, scope: !16778, inlinedAt: !21279)
!21503 = !DILocation(line: 97, column: 52, scope: !16778, inlinedAt: !21279)
!21504 = !DILocation(line: 97, column: 16, scope: !16778, inlinedAt: !21279)
!21505 = !DILocation(line: 97, column: 40, scope: !16778, inlinedAt: !21279)
!21506 = !DILocation(line: 97, column: 42, scope: !16778, inlinedAt: !21279)
!21507 = !DILocation(line: 97, column: 13, scope: !16778, inlinedAt: !21279)
!21508 = !DILocation(line: 98, column: 13, scope: !16798, inlinedAt: !21279)
!21509 = !DILocation(line: 98, column: 13, scope: !16778, inlinedAt: !21279)
!21510 = !DILocation(line: 99, column: 20, scope: !16796, inlinedAt: !21279)
!21511 = !DILocation(line: 99, column: 18, scope: !16796, inlinedAt: !21279)
!21512 = !DILocation(line: 99, column: 25, scope: !17111, inlinedAt: !21279)
!21513 = !DILocation(line: 99, column: 29, scope: !17111, inlinedAt: !21279)
!21514 = !DILocation(line: 99, column: 27, scope: !17111, inlinedAt: !21279)
!21515 = !DILocation(line: 99, column: 13, scope: !17111, inlinedAt: !21279)
!21516 = !DILocation(line: 100, column: 36, scope: !16794, inlinedAt: !21279)
!21517 = !DILocation(line: 100, column: 38, scope: !16794, inlinedAt: !21279)
!21518 = !DILocation(line: 100, column: 37, scope: !16794, inlinedAt: !21279)
!21519 = !DILocation(line: 100, column: 33, scope: !16794, inlinedAt: !21279)
!21520 = !DILocation(line: 100, column: 27, scope: !16794, inlinedAt: !21279)
!21521 = !DILocation(line: 102, column: 21, scope: !16793, inlinedAt: !21279)
!21522 = !DILocation(line: 102, column: 28, scope: !16793, inlinedAt: !21279)
!21523 = !DILocation(line: 102, column: 35, scope: !17123, inlinedAt: !21279)
!21524 = !DILocation(line: 102, column: 31, scope: !17123, inlinedAt: !21279)
!21525 = !DILocation(line: 102, column: 38, scope: !17123, inlinedAt: !21279)
!21526 = !DILocation(line: 102, column: 21, scope: !17123, inlinedAt: !21279)
!21527 = !DILocation(line: 103, column: 25, scope: !16791, inlinedAt: !21279)
!21528 = !DILocation(line: 103, column: 30, scope: !16791, inlinedAt: !21279)
!21529 = !DILocation(line: 103, column: 27, scope: !16791, inlinedAt: !21279)
!21530 = !DILocation(line: 103, column: 25, scope: !16792, inlinedAt: !21279)
!21531 = !DILocation(line: 104, column: 37, scope: !17132, inlinedAt: !21279)
!21532 = !DILocation(line: 104, column: 35, scope: !17132, inlinedAt: !21279)
!21533 = !DILocation(line: 105, column: 33, scope: !17132, inlinedAt: !21279)
!21534 = !DILocation(line: 106, column: 21, scope: !17132, inlinedAt: !21279)
!21535 = !DILocation(line: 107, column: 56, scope: !16790, inlinedAt: !21279)
!21536 = !DILocation(line: 107, column: 59, scope: !16790, inlinedAt: !21279)
!21537 = !DILocation(line: 107, column: 62, scope: !16790, inlinedAt: !21279)
!21538 = !DILocation(line: 107, column: 50, scope: !16790, inlinedAt: !21279)
!21539 = !DILocation(line: 107, column: 33, scope: !16789, inlinedAt: !21279)
!21540 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !21282)
!21541 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !21282)
!21542 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !21282)
!21543 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !21282)
!21544 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !21282)
!21545 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !21282)
!21546 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !21282)
!21547 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !21282)
!21548 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !21282)
!21549 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !21282)
!21550 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !21282)
!21551 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !21282)
!21552 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !21282)
!21553 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !21282)
!21554 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !21282)
!21555 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !21282)
!21556 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !21282)
!21557 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !21282)
!21558 = !DILocation(line: 108, column: 37, scope: !16790, inlinedAt: !21279)
!21559 = !DILocation(line: 108, column: 45, scope: !16790, inlinedAt: !21279)
!21560 = !DILocation(line: 108, column: 39, scope: !16790, inlinedAt: !21279)
!21561 = !DILocation(line: 108, column: 38, scope: !16790, inlinedAt: !21279)
!21562 = !DILocation(line: 108, column: 48, scope: !16790, inlinedAt: !21279)
!21563 = !DILocation(line: 108, column: 47, scope: !16790, inlinedAt: !21279)
!21564 = !DILocation(line: 108, column: 35, scope: !16790, inlinedAt: !21279)
!21565 = !DILocation(line: 109, column: 57, scope: !16790, inlinedAt: !21279)
!21566 = !DILocation(line: 109, column: 59, scope: !16790, inlinedAt: !21279)
!21567 = !DILocation(line: 109, column: 42, scope: !16790, inlinedAt: !21279)
!21568 = !DILocation(line: 109, column: 40, scope: !16790, inlinedAt: !21279)
!21569 = !DILocation(line: 109, column: 63, scope: !16790, inlinedAt: !21279)
!21570 = !DILocation(line: 109, column: 66, scope: !16790, inlinedAt: !21279)
!21571 = !DILocation(line: 109, column: 70, scope: !16790, inlinedAt: !21279)
!21572 = !DILocation(line: 109, column: 33, scope: !16790, inlinedAt: !21279)
!21573 = !DILocation(line: 111, column: 17, scope: !16792, inlinedAt: !21279)
!21574 = !DILocation(line: 112, column: 37, scope: !17178, inlinedAt: !21279)
!21575 = !DILocation(line: 112, column: 33, scope: !17178, inlinedAt: !21279)
!21576 = !DILocation(line: 112, column: 40, scope: !17178, inlinedAt: !21279)
!21577 = !DILocation(line: 112, column: 39, scope: !17178, inlinedAt: !21279)
!21578 = !DILocation(line: 112, column: 31, scope: !17178, inlinedAt: !21279)
!21579 = !DILocation(line: 114, column: 22, scope: !16794, inlinedAt: !21279)
!21580 = !DILocation(line: 114, column: 26, scope: !16794, inlinedAt: !21279)
!21581 = !DILocation(line: 114, column: 24, scope: !16794, inlinedAt: !21279)
!21582 = !DILocation(line: 114, column: 20, scope: !16794, inlinedAt: !21279)
!21583 = !DILocation(line: 115, column: 21, scope: !17188, inlinedAt: !21279)
!21584 = !DILocation(line: 115, column: 21, scope: !16794, inlinedAt: !21279)
!21585 = !DILocation(line: 116, column: 35, scope: !17188, inlinedAt: !21279)
!21586 = !DILocation(line: 116, column: 37, scope: !17188, inlinedAt: !21279)
!21587 = !DILocation(line: 116, column: 36, scope: !17188, inlinedAt: !21279)
!21588 = !DILocation(line: 116, column: 32, scope: !17188, inlinedAt: !21279)
!21589 = !DILocation(line: 116, column: 40, scope: !17188, inlinedAt: !21279)
!21590 = !DILocation(line: 116, column: 47, scope: !17196, inlinedAt: !21279)
!21591 = !DILocation(line: 116, column: 32, scope: !17196, inlinedAt: !21279)
!21592 = !DILocation(line: 116, column: 60, scope: !17199, inlinedAt: !21279)
!21593 = !DILocation(line: 116, column: 59, scope: !17199, inlinedAt: !21279)
!21594 = !DILocation(line: 116, column: 32, scope: !17199, inlinedAt: !21279)
!21595 = !DILocation(line: 116, column: 32, scope: !17203, inlinedAt: !21279)
!21596 = !DILocation(line: 116, column: 25, scope: !17203, inlinedAt: !21279)
!21597 = !DILocation(line: 116, column: 27, scope: !17203, inlinedAt: !21279)
!21598 = !DILocation(line: 116, column: 26, scope: !17203, inlinedAt: !21279)
!21599 = !DILocation(line: 116, column: 21, scope: !17203, inlinedAt: !21279)
!21600 = !DILocation(line: 116, column: 30, scope: !17203, inlinedAt: !21279)
!21601 = !DILocation(line: 117, column: 25, scope: !17210, inlinedAt: !21279)
!21602 = !DILocation(line: 117, column: 21, scope: !17210, inlinedAt: !21279)
!21603 = !DILocation(line: 117, column: 28, scope: !17210, inlinedAt: !21279)
!21604 = !DILocation(line: 117, column: 21, scope: !16794, inlinedAt: !21279)
!21605 = !DILocation(line: 118, column: 28, scope: !17210, inlinedAt: !21279)
!21606 = !DILocation(line: 118, column: 21, scope: !17210, inlinedAt: !21279)
!21607 = !DILocation(line: 119, column: 28, scope: !16794, inlinedAt: !21279)
!21608 = !DILocation(line: 119, column: 38, scope: !16794, inlinedAt: !21279)
!21609 = !DILocation(line: 119, column: 37, scope: !16794, inlinedAt: !21279)
!21610 = !DILocation(line: 119, column: 25, scope: !16794, inlinedAt: !21279)
!21611 = !DILocation(line: 120, column: 23, scope: !16794, inlinedAt: !21279)
!21612 = !DILocation(line: 120, column: 26, scope: !16794, inlinedAt: !21279)
!21613 = !DILocation(line: 120, column: 25, scope: !16794, inlinedAt: !21279)
!21614 = !DILocation(line: 120, column: 20, scope: !16794, inlinedAt: !21279)
!21615 = !DILocation(line: 99, column: 35, scope: !17225, inlinedAt: !21279)
!21616 = !DILocation(line: 99, column: 13, scope: !17225, inlinedAt: !21279)
!21617 = !DILocation(line: 122, column: 9, scope: !16797, inlinedAt: !21279)
!21618 = !DILocation(line: 123, column: 20, scope: !17231, inlinedAt: !21279)
!21619 = !DILocation(line: 123, column: 18, scope: !17231, inlinedAt: !21279)
!21620 = !DILocation(line: 123, column: 25, scope: !17235, inlinedAt: !21279)
!21621 = !DILocation(line: 123, column: 29, scope: !17235, inlinedAt: !21279)
!21622 = !DILocation(line: 123, column: 27, scope: !17235, inlinedAt: !21279)
!21623 = !DILocation(line: 123, column: 13, scope: !17235, inlinedAt: !21279)
!21624 = !DILocation(line: 124, column: 33, scope: !17241, inlinedAt: !21279)
!21625 = !DILocation(line: 124, column: 29, scope: !17241, inlinedAt: !21279)
!21626 = !DILocation(line: 124, column: 36, scope: !17241, inlinedAt: !21279)
!21627 = !DILocation(line: 124, column: 35, scope: !17241, inlinedAt: !21279)
!21628 = !DILocation(line: 124, column: 27, scope: !17241, inlinedAt: !21279)
!21629 = !DILocation(line: 125, column: 28, scope: !17241, inlinedAt: !21279)
!21630 = !DILocation(line: 125, column: 38, scope: !17241, inlinedAt: !21279)
!21631 = !DILocation(line: 125, column: 37, scope: !17241, inlinedAt: !21279)
!21632 = !DILocation(line: 125, column: 25, scope: !17241, inlinedAt: !21279)
!21633 = !DILocation(line: 126, column: 21, scope: !17251, inlinedAt: !21279)
!21634 = !DILocation(line: 126, column: 21, scope: !17241, inlinedAt: !21279)
!21635 = !DILocation(line: 127, column: 32, scope: !17251, inlinedAt: !21279)
!21636 = !DILocation(line: 127, column: 25, scope: !17251, inlinedAt: !21279)
!21637 = !DILocation(line: 127, column: 27, scope: !17251, inlinedAt: !21279)
!21638 = !DILocation(line: 127, column: 26, scope: !17251, inlinedAt: !21279)
!21639 = !DILocation(line: 127, column: 21, scope: !17251, inlinedAt: !21279)
!21640 = !DILocation(line: 127, column: 30, scope: !17251, inlinedAt: !21279)
!21641 = !DILocation(line: 128, column: 27, scope: !17241, inlinedAt: !21279)
!21642 = !DILocation(line: 128, column: 29, scope: !17241, inlinedAt: !21279)
!21643 = !DILocation(line: 128, column: 28, scope: !17241, inlinedAt: !21279)
!21644 = !DILocation(line: 128, column: 24, scope: !17241, inlinedAt: !21279)
!21645 = !DILocation(line: 128, column: 34, scope: !17241, inlinedAt: !21279)
!21646 = !DILocation(line: 128, column: 32, scope: !17241, inlinedAt: !21279)
!21647 = !DILocation(line: 128, column: 49, scope: !17241, inlinedAt: !21279)
!21648 = !DILocation(line: 128, column: 51, scope: !17241, inlinedAt: !21279)
!21649 = !DILocation(line: 128, column: 50, scope: !17241, inlinedAt: !21279)
!21650 = !DILocation(line: 128, column: 46, scope: !17241, inlinedAt: !21279)
!21651 = !DILocation(line: 128, column: 56, scope: !17241, inlinedAt: !21279)
!21652 = !DILocation(line: 128, column: 54, scope: !17241, inlinedAt: !21279)
!21653 = !DILocation(line: 128, column: 44, scope: !17241, inlinedAt: !21279)
!21654 = !DILocation(line: 128, column: 20, scope: !17241, inlinedAt: !21279)
!21655 = !DILocation(line: 123, column: 35, scope: !17274, inlinedAt: !21279)
!21656 = !DILocation(line: 123, column: 13, scope: !17274, inlinedAt: !21279)
!21657 = !DILocation(line: 131, column: 17, scope: !16778, inlinedAt: !21279)
!21658 = !DILocation(line: 131, column: 22, scope: !16778, inlinedAt: !21279)
!21659 = !DILocation(line: 131, column: 20, scope: !16778, inlinedAt: !21279)
!21660 = !DILocation(line: 131, column: 31, scope: !16778, inlinedAt: !21279)
!21661 = !DILocation(line: 131, column: 29, scope: !16778, inlinedAt: !21279)
!21662 = !DILocation(line: 131, column: 14, scope: !16778, inlinedAt: !21279)
!21663 = !DILocation(line: 132, column: 20, scope: !16778, inlinedAt: !21279)
!21664 = !DILocation(line: 132, column: 17, scope: !16778, inlinedAt: !21279)
!21665 = !DILocation(line: 133, column: 13, scope: !17287, inlinedAt: !21279)
!21666 = !DILocation(line: 133, column: 21, scope: !17287, inlinedAt: !21279)
!21667 = !DILocation(line: 133, column: 18, scope: !17287, inlinedAt: !21279)
!21668 = !DILocation(line: 133, column: 13, scope: !16778, inlinedAt: !21279)
!21669 = !DILocation(line: 134, column: 20, scope: !17287, inlinedAt: !21279)
!21670 = !DILocation(line: 134, column: 13, scope: !17287, inlinedAt: !21279)
!21671 = !DILocation(line: 135, column: 13, scope: !16777, inlinedAt: !21279)
!21672 = !DILocation(line: 135, column: 13, scope: !16778, inlinedAt: !21279)
!21673 = !DILocation(line: 136, column: 22, scope: !16776, inlinedAt: !21279)
!21674 = !DILocation(line: 136, column: 53, scope: !16776, inlinedAt: !21279)
!21675 = !DILocation(line: 136, column: 26, scope: !16776, inlinedAt: !21279)
!21676 = !DILocation(line: 136, column: 47, scope: !16776, inlinedAt: !21279)
!21677 = !DILocation(line: 136, column: 49, scope: !16776, inlinedAt: !21279)
!21678 = !DILocation(line: 136, column: 90, scope: !16776, inlinedAt: !21279)
!21679 = !DILocation(line: 136, column: 62, scope: !16776, inlinedAt: !21279)
!21680 = !DILocation(line: 136, column: 84, scope: !16776, inlinedAt: !21279)
!21681 = !DILocation(line: 136, column: 86, scope: !16776, inlinedAt: !21279)
!21682 = !DILocation(line: 136, column: 13, scope: !16776, inlinedAt: !21279)
!21683 = !DILocation(line: 137, column: 17, scope: !17306, inlinedAt: !21279)
!21684 = !DILocation(line: 137, column: 17, scope: !16776, inlinedAt: !21279)
!21685 = !DILocation(line: 138, column: 24, scope: !17309, inlinedAt: !21279)
!21686 = !DILocation(line: 138, column: 22, scope: !17309, inlinedAt: !21279)
!21687 = !DILocation(line: 138, column: 29, scope: !17312, inlinedAt: !21279)
!21688 = !DILocation(line: 138, column: 33, scope: !17312, inlinedAt: !21279)
!21689 = !DILocation(line: 138, column: 31, scope: !17312, inlinedAt: !21279)
!21690 = !DILocation(line: 138, column: 17, scope: !17312, inlinedAt: !21279)
!21691 = !DILocation(line: 139, column: 55, scope: !17318, inlinedAt: !21279)
!21692 = !DILocation(line: 139, column: 62, scope: !17318, inlinedAt: !21279)
!21693 = !DILocation(line: 139, column: 61, scope: !17318, inlinedAt: !21279)
!21694 = !DILocation(line: 139, column: 66, scope: !17318, inlinedAt: !21279)
!21695 = !DILocation(line: 139, column: 65, scope: !17318, inlinedAt: !21279)
!21696 = !DILocation(line: 139, column: 25, scope: !17318, inlinedAt: !21279)
!21697 = !DILocation(line: 139, column: 49, scope: !17318, inlinedAt: !21279)
!21698 = !DILocation(line: 139, column: 51, scope: !17318, inlinedAt: !21279)
!21699 = !DILocation(line: 139, column: 69, scope: !17318, inlinedAt: !21279)
!21700 = !DILocation(line: 139, column: 25, scope: !17313, inlinedAt: !21279)
!21701 = !DILocation(line: 140, column: 34, scope: !17318, inlinedAt: !21279)
!21702 = !DILocation(line: 140, column: 44, scope: !17318, inlinedAt: !21279)
!21703 = !DILocation(line: 140, column: 46, scope: !17318, inlinedAt: !21279)
!21704 = !DILocation(line: 140, column: 45, scope: !17318, inlinedAt: !21279)
!21705 = !DILocation(line: 140, column: 41, scope: !17318, inlinedAt: !21279)
!21706 = !DILocation(line: 140, column: 49, scope: !17318, inlinedAt: !21279)
!21707 = !DILocation(line: 140, column: 25, scope: !17318, inlinedAt: !21279)
!21708 = !DILocation(line: 138, column: 39, scope: !17336, inlinedAt: !21279)
!21709 = !DILocation(line: 138, column: 17, scope: !17336, inlinedAt: !21279)
!21710 = !DILocation(line: 140, column: 55, scope: !17341, inlinedAt: !21279)
!21711 = !DILocation(line: 141, column: 17, scope: !16775, inlinedAt: !21279)
!21712 = !DILocation(line: 141, column: 17, scope: !16776, inlinedAt: !21279)
!21713 = !DILocation(line: 142, column: 24, scope: !16773, inlinedAt: !21279)
!21714 = !DILocation(line: 142, column: 22, scope: !16773, inlinedAt: !21279)
!21715 = !DILocation(line: 142, column: 29, scope: !17347, inlinedAt: !21279)
!21716 = !DILocation(line: 142, column: 31, scope: !17347, inlinedAt: !21279)
!21717 = !DILocation(line: 142, column: 17, scope: !17347, inlinedAt: !21279)
!21718 = !DILocation(line: 143, column: 55, scope: !16770, inlinedAt: !21279)
!21719 = !DILocation(line: 143, column: 61, scope: !16770, inlinedAt: !21279)
!21720 = !DILocation(line: 143, column: 64, scope: !16770, inlinedAt: !21279)
!21721 = !DILocation(line: 143, column: 63, scope: !16770, inlinedAt: !21279)
!21722 = !DILocation(line: 143, column: 25, scope: !16770, inlinedAt: !21279)
!21723 = !DILocation(line: 143, column: 49, scope: !16770, inlinedAt: !21279)
!21724 = !DILocation(line: 143, column: 51, scope: !16770, inlinedAt: !21279)
!21725 = !DILocation(line: 143, column: 67, scope: !16770, inlinedAt: !21279)
!21726 = !DILocation(line: 143, column: 25, scope: !16771, inlinedAt: !21279)
!21727 = !DILocation(line: 144, column: 68, scope: !16769, inlinedAt: !21279)
!21728 = !DILocation(line: 144, column: 70, scope: !16769, inlinedAt: !21279)
!21729 = !DILocation(line: 144, column: 69, scope: !16769, inlinedAt: !21279)
!21730 = !DILocation(line: 144, column: 65, scope: !16769, inlinedAt: !21279)
!21731 = !DILocation(line: 144, column: 59, scope: !16769, inlinedAt: !21279)
!21732 = !DILocation(line: 144, column: 75, scope: !16769, inlinedAt: !21279)
!21733 = !DILocation(line: 144, column: 78, scope: !16769, inlinedAt: !21279)
!21734 = !DILocation(line: 144, column: 53, scope: !17367, inlinedAt: !21279)
!21735 = !DILocation(line: 144, column: 36, scope: !16768, inlinedAt: !21279)
!21736 = !DILocation(line: 231, column: 9, scope: !17142, inlinedAt: !21278)
!21737 = !DILocation(line: 231, column: 19, scope: !17142, inlinedAt: !21278)
!21738 = !DILocation(line: 231, column: 17, scope: !17142, inlinedAt: !21278)
!21739 = !DILocation(line: 231, column: 22, scope: !17142, inlinedAt: !21278)
!21740 = !DILocation(line: 231, column: 13, scope: !17142, inlinedAt: !21278)
!21741 = !DILocation(line: 231, column: 11, scope: !17142, inlinedAt: !21278)
!21742 = !DILocation(line: 231, column: 9, scope: !16763, inlinedAt: !21278)
!21743 = !DILocation(line: 231, column: 37, scope: !17150, inlinedAt: !21278)
!21744 = !DILocation(line: 231, column: 36, scope: !17150, inlinedAt: !21278)
!21745 = !DILocation(line: 231, column: 40, scope: !17150, inlinedAt: !21278)
!21746 = !DILocation(line: 231, column: 53, scope: !17150, inlinedAt: !21278)
!21747 = !DILocation(line: 231, column: 51, scope: !17150, inlinedAt: !21278)
!21748 = !DILocation(line: 231, column: 56, scope: !17150, inlinedAt: !21278)
!21749 = !DILocation(line: 231, column: 46, scope: !17150, inlinedAt: !21278)
!21750 = !DILocation(line: 231, column: 28, scope: !17150, inlinedAt: !21278)
!21751 = !DILocation(line: 232, column: 17, scope: !17142, inlinedAt: !21278)
!21752 = !DILocation(line: 232, column: 10, scope: !17142, inlinedAt: !21278)
!21753 = !DILocation(line: 233, column: 1, scope: !16763, inlinedAt: !21278)
!21754 = !DILocation(line: 145, column: 56, scope: !16769, inlinedAt: !21279)
!21755 = !DILocation(line: 145, column: 61, scope: !16769, inlinedAt: !21279)
!21756 = !DILocation(line: 145, column: 41, scope: !16769, inlinedAt: !21279)
!21757 = !DILocation(line: 145, column: 39, scope: !16769, inlinedAt: !21279)
!21758 = !DILocation(line: 147, column: 34, scope: !16769, inlinedAt: !21279)
!21759 = !DILocation(line: 147, column: 38, scope: !16769, inlinedAt: !21279)
!21760 = !DILocation(line: 147, column: 42, scope: !16769, inlinedAt: !21279)
!21761 = !DILocation(line: 147, column: 46, scope: !16769, inlinedAt: !21279)
!21762 = !DILocation(line: 147, column: 58, scope: !16769, inlinedAt: !21279)
!21763 = !DILocation(line: 147, column: 62, scope: !16769, inlinedAt: !21279)
!21764 = !DILocation(line: 147, column: 66, scope: !16769, inlinedAt: !21279)
!21765 = !DILocation(line: 147, column: 54, scope: !16769, inlinedAt: !21279)
!21766 = !DILocation(line: 147, column: 72, scope: !16769, inlinedAt: !21279)
!21767 = !DILocation(line: 147, column: 25, scope: !16769, inlinedAt: !21279)
!21768 = !DILocation(line: 148, column: 35, scope: !16769, inlinedAt: !21279)
!21769 = !DILocation(line: 148, column: 39, scope: !16769, inlinedAt: !21279)
!21770 = !DILocation(line: 148, column: 44, scope: !16769, inlinedAt: !21279)
!21771 = !DILocation(line: 148, column: 25, scope: !16769, inlinedAt: !21279)
!21772 = !DILocation(line: 149, column: 21, scope: !16769, inlinedAt: !21279)
!21773 = !DILocation(line: 142, column: 37, scope: !17407, inlinedAt: !21279)
!21774 = !DILocation(line: 142, column: 17, scope: !17407, inlinedAt: !21279)
!21775 = !DILocation(line: 151, column: 13, scope: !16774, inlinedAt: !21279)
!21776 = !DILocation(line: 152, column: 9, scope: !16776, inlinedAt: !21279)
!21777 = !DILocation(line: 86, column: 32, scope: !17414, inlinedAt: !21279)
!21778 = !DILocation(line: 86, column: 29, scope: !17414, inlinedAt: !21279)
!21779 = !DILocation(line: 86, column: 5, scope: !17414, inlinedAt: !21279)
!21780 = !DILocation(line: 155, column: 9, scope: !17420, inlinedAt: !21279)
!21781 = !DILocation(line: 155, column: 9, scope: !16781, inlinedAt: !21279)
!21782 = !DILocation(line: 156, column: 17, scope: !17420, inlinedAt: !21279)
!21783 = !DILocation(line: 156, column: 10, scope: !17420, inlinedAt: !21279)
!21784 = !DILocation(line: 156, column: 15, scope: !17420, inlinedAt: !21279)
!21785 = !DILocation(line: 156, column: 9, scope: !17420, inlinedAt: !21279)
!21786 = !DILocation(line: 157, column: 9, scope: !17427, inlinedAt: !21279)
!21787 = !DILocation(line: 157, column: 9, scope: !16781, inlinedAt: !21279)
!21788 = !DILocation(line: 158, column: 19, scope: !17427, inlinedAt: !21279)
!21789 = !DILocation(line: 158, column: 10, scope: !17427, inlinedAt: !21279)
!21790 = !DILocation(line: 158, column: 17, scope: !17427, inlinedAt: !21279)
!21791 = !DILocation(line: 158, column: 9, scope: !17427, inlinedAt: !21279)
!21792 = !DILocation(line: 159, column: 12, scope: !16781, inlinedAt: !21279)
!21793 = !DILocation(line: 159, column: 5, scope: !16781, inlinedAt: !21279)
!21794 = !DILocation(line: 160, column: 1, scope: !16781, inlinedAt: !21279)
!21795 = !DILocation(line: 190, column: 245, scope: !21276)
!21796 = distinct !DISubprogram(name: "ff_init_nextband_map", scope: !4818, file: !4818, line: 199, type: !21797, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21797 = !DISubroutineType(types: !21798)
!21798 = !{null, !21799, !1098}
!21799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21800, size: 64, align: 64)
!21800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1906)
!21801 = !DILocalVariable(name: "sce", arg: 1, scope: !21796, file: !4818, line: 199, type: !21799)
!21802 = !DILocation(line: 199, column: 69, scope: !21796)
!21803 = !DILocalVariable(name: "nextband", arg: 2, scope: !21796, file: !4818, line: 199, type: !1098)
!21804 = !DILocation(line: 199, column: 83, scope: !21796)
!21805 = !DILocalVariable(name: "prevband", scope: !21796, file: !4818, line: 201, type: !1054)
!21806 = !DILocation(line: 201, column: 19, scope: !21796)
!21807 = !DILocalVariable(name: "w", scope: !21796, file: !4818, line: 202, type: !991)
!21808 = !DILocation(line: 202, column: 9, scope: !21796)
!21809 = !DILocalVariable(name: "g", scope: !21796, file: !4818, line: 202, type: !991)
!21810 = !DILocation(line: 202, column: 12, scope: !21796)
!21811 = !DILocation(line: 204, column: 12, scope: !21812)
!21812 = distinct !DILexicalBlock(scope: !21796, file: !4818, line: 204, column: 5)
!21813 = !DILocation(line: 204, column: 10, scope: !21812)
!21814 = !DILocation(line: 204, column: 17, scope: !21815)
!21815 = !DILexicalBlockFile(scope: !21816, file: !4818, discriminator: 1)
!21816 = distinct !DILexicalBlock(scope: !21812, file: !4818, line: 204, column: 5)
!21817 = !DILocation(line: 204, column: 19, scope: !21815)
!21818 = !DILocation(line: 204, column: 5, scope: !21815)
!21819 = !DILocation(line: 205, column: 23, scope: !21816)
!21820 = !DILocation(line: 205, column: 18, scope: !21816)
!21821 = !DILocation(line: 205, column: 9, scope: !21816)
!21822 = !DILocation(line: 205, column: 21, scope: !21816)
!21823 = !DILocation(line: 204, column: 27, scope: !21824)
!21824 = !DILexicalBlockFile(scope: !21816, file: !4818, discriminator: 2)
!21825 = !DILocation(line: 204, column: 5, scope: !21824)
!21826 = distinct !{!21826, !21827}
!21827 = !DILocation(line: 204, column: 5, scope: !21796)
!21828 = !DILocation(line: 208, column: 12, scope: !21829)
!21829 = distinct !DILexicalBlock(scope: !21796, file: !4818, line: 208, column: 5)
!21830 = !DILocation(line: 208, column: 10, scope: !21829)
!21831 = !DILocation(line: 208, column: 17, scope: !21832)
!21832 = !DILexicalBlockFile(scope: !21833, file: !4818, discriminator: 1)
!21833 = distinct !DILexicalBlock(scope: !21829, file: !4818, line: 208, column: 5)
!21834 = !DILocation(line: 208, column: 21, scope: !21832)
!21835 = !DILocation(line: 208, column: 26, scope: !21832)
!21836 = !DILocation(line: 208, column: 30, scope: !21832)
!21837 = !DILocation(line: 208, column: 19, scope: !21832)
!21838 = !DILocation(line: 208, column: 5, scope: !21832)
!21839 = !DILocation(line: 209, column: 16, scope: !21840)
!21840 = distinct !DILexicalBlock(scope: !21841, file: !4818, line: 209, column: 9)
!21841 = distinct !DILexicalBlock(scope: !21833, file: !4818, line: 208, column: 71)
!21842 = !DILocation(line: 209, column: 14, scope: !21840)
!21843 = !DILocation(line: 209, column: 21, scope: !21844)
!21844 = !DILexicalBlockFile(scope: !21845, file: !4818, discriminator: 1)
!21845 = distinct !DILexicalBlock(scope: !21840, file: !4818, line: 209, column: 9)
!21846 = !DILocation(line: 209, column: 25, scope: !21844)
!21847 = !DILocation(line: 209, column: 30, scope: !21844)
!21848 = !DILocation(line: 209, column: 34, scope: !21844)
!21849 = !DILocation(line: 209, column: 23, scope: !21844)
!21850 = !DILocation(line: 209, column: 9, scope: !21844)
!21851 = !DILocation(line: 210, column: 30, scope: !21852)
!21852 = distinct !DILexicalBlock(scope: !21853, file: !4818, line: 210, column: 17)
!21853 = distinct !DILexicalBlock(scope: !21845, file: !4818, line: 209, column: 48)
!21854 = !DILocation(line: 210, column: 31, scope: !21852)
!21855 = !DILocation(line: 210, column: 35, scope: !21852)
!21856 = !DILocation(line: 210, column: 34, scope: !21852)
!21857 = !DILocation(line: 210, column: 18, scope: !21852)
!21858 = !DILocation(line: 210, column: 23, scope: !21852)
!21859 = !DILocation(line: 210, column: 38, scope: !21852)
!21860 = !DILocation(line: 210, column: 56, scope: !21861)
!21861 = !DILexicalBlockFile(scope: !21852, file: !4818, discriminator: 1)
!21862 = !DILocation(line: 210, column: 57, scope: !21861)
!21863 = !DILocation(line: 210, column: 61, scope: !21861)
!21864 = !DILocation(line: 210, column: 60, scope: !21861)
!21865 = !DILocation(line: 210, column: 41, scope: !21861)
!21866 = !DILocation(line: 210, column: 46, scope: !21861)
!21867 = !DILocation(line: 210, column: 64, scope: !21861)
!21868 = !DILocation(line: 210, column: 17, scope: !21861)
!21869 = !DILocation(line: 211, column: 49, scope: !21852)
!21870 = !DILocation(line: 211, column: 50, scope: !21852)
!21871 = !DILocation(line: 211, column: 54, scope: !21852)
!21872 = !DILocation(line: 211, column: 53, scope: !21852)
!21873 = !DILocation(line: 211, column: 37, scope: !21852)
!21874 = !DILocation(line: 211, column: 28, scope: !21852)
!21875 = !DILocation(line: 211, column: 47, scope: !21852)
!21876 = !DILocation(line: 211, column: 26, scope: !21852)
!21877 = !DILocation(line: 211, column: 17, scope: !21852)
!21878 = !DILocation(line: 212, column: 9, scope: !21853)
!21879 = !DILocation(line: 209, column: 44, scope: !21880)
!21880 = !DILexicalBlockFile(scope: !21845, file: !4818, discriminator: 2)
!21881 = !DILocation(line: 209, column: 9, scope: !21880)
!21882 = distinct !{!21882, !21883}
!21883 = !DILocation(line: 209, column: 9, scope: !21841)
!21884 = !DILocation(line: 213, column: 5, scope: !21841)
!21885 = !DILocation(line: 208, column: 67, scope: !21886)
!21886 = !DILexicalBlockFile(scope: !21833, file: !4818, discriminator: 2)
!21887 = !DILocation(line: 208, column: 48, scope: !21886)
!21888 = !DILocation(line: 208, column: 53, scope: !21886)
!21889 = !DILocation(line: 208, column: 57, scope: !21886)
!21890 = !DILocation(line: 208, column: 45, scope: !21886)
!21891 = !DILocation(line: 208, column: 5, scope: !21886)
!21892 = distinct !{!21892, !21893}
!21893 = !DILocation(line: 208, column: 5, scope: !21796)
!21894 = !DILocation(line: 214, column: 26, scope: !21796)
!21895 = !DILocation(line: 214, column: 14, scope: !21796)
!21896 = !DILocation(line: 214, column: 5, scope: !21796)
!21897 = !DILocation(line: 214, column: 24, scope: !21796)
!21898 = !DILocation(line: 215, column: 1, scope: !21796)
!21899 = distinct !DISubprogram(name: "ff_sfdelta_can_remove_band", scope: !4818, file: !4818, line: 232, type: !21900, isLocal: true, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21900 = !DISubroutineType(types: !21901)
!21901 = !{!991, !21799, !1086, !991, !991}
!21902 = !DILocalVariable(name: "sce", arg: 1, scope: !21899, file: !4818, line: 232, type: !21799)
!21903 = !DILocation(line: 232, column: 74, scope: !21899)
!21904 = !DILocalVariable(name: "nextband", arg: 2, scope: !21899, file: !4818, line: 233, type: !1086)
!21905 = !DILocation(line: 233, column: 20, scope: !21899)
!21906 = !DILocalVariable(name: "prev_sf", arg: 3, scope: !21899, file: !4818, line: 233, type: !991)
!21907 = !DILocation(line: 233, column: 34, scope: !21899)
!21908 = !DILocalVariable(name: "band", arg: 4, scope: !21899, file: !4818, line: 233, type: !991)
!21909 = !DILocation(line: 233, column: 47, scope: !21899)
!21910 = !DILocation(line: 235, column: 12, scope: !21899)
!21911 = !DILocation(line: 235, column: 20, scope: !21899)
!21912 = !DILocation(line: 236, column: 9, scope: !21899)
!21913 = !DILocation(line: 236, column: 33, scope: !21914)
!21914 = !DILexicalBlockFile(scope: !21899, file: !4818, discriminator: 1)
!21915 = !DILocation(line: 236, column: 24, scope: !21914)
!21916 = !DILocation(line: 236, column: 12, scope: !21914)
!21917 = !DILocation(line: 236, column: 17, scope: !21914)
!21918 = !DILocation(line: 236, column: 44, scope: !21914)
!21919 = !DILocation(line: 236, column: 52, scope: !21914)
!21920 = !DILocation(line: 236, column: 40, scope: !21914)
!21921 = !DILocation(line: 237, column: 9, scope: !21899)
!21922 = !DILocation(line: 237, column: 33, scope: !21914)
!21923 = !DILocation(line: 237, column: 24, scope: !21914)
!21924 = !DILocation(line: 237, column: 12, scope: !21914)
!21925 = !DILocation(line: 237, column: 17, scope: !21914)
!21926 = !DILocation(line: 237, column: 44, scope: !21914)
!21927 = !DILocation(line: 237, column: 52, scope: !21914)
!21928 = !DILocation(line: 237, column: 40, scope: !21914)
!21929 = !DILocation(line: 237, column: 9, scope: !21930)
!21930 = !DILexicalBlockFile(scope: !21899, file: !4818, discriminator: 2)
!21931 = !DILocation(line: 235, column: 5, scope: !21914)
!21932 = distinct !DISubprogram(name: "ff_sfdelta_can_replace", scope: !4818, file: !4818, line: 246, type: !21933, isLocal: true, isDefinition: true, scopeLine: 248, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21933 = !DISubroutineType(types: !21934)
!21934 = !{!991, !21799, !1086, !991, !991, !991}
!21935 = !DILocalVariable(name: "sce", arg: 1, scope: !21932, file: !4818, line: 246, type: !21799)
!21936 = !DILocation(line: 246, column: 70, scope: !21932)
!21937 = !DILocalVariable(name: "nextband", arg: 2, scope: !21932, file: !4818, line: 247, type: !1086)
!21938 = !DILocation(line: 247, column: 20, scope: !21932)
!21939 = !DILocalVariable(name: "prev_sf", arg: 3, scope: !21932, file: !4818, line: 247, type: !991)
!21940 = !DILocation(line: 247, column: 34, scope: !21932)
!21941 = !DILocalVariable(name: "new_sf", arg: 4, scope: !21932, file: !4818, line: 247, type: !991)
!21942 = !DILocation(line: 247, column: 47, scope: !21932)
!21943 = !DILocalVariable(name: "band", arg: 5, scope: !21932, file: !4818, line: 247, type: !991)
!21944 = !DILocation(line: 247, column: 59, scope: !21932)
!21945 = !DILocation(line: 249, column: 12, scope: !21932)
!21946 = !DILocation(line: 249, column: 23, scope: !21932)
!21947 = !DILocation(line: 249, column: 31, scope: !21932)
!21948 = !DILocation(line: 249, column: 19, scope: !21932)
!21949 = !DILocation(line: 250, column: 9, scope: !21932)
!21950 = !DILocation(line: 250, column: 12, scope: !21951)
!21951 = !DILexicalBlockFile(scope: !21932, file: !4818, discriminator: 1)
!21952 = !DILocation(line: 250, column: 23, scope: !21951)
!21953 = !DILocation(line: 250, column: 31, scope: !21951)
!21954 = !DILocation(line: 250, column: 19, scope: !21951)
!21955 = !DILocation(line: 251, column: 9, scope: !21932)
!21956 = !DILocation(line: 251, column: 33, scope: !21951)
!21957 = !DILocation(line: 251, column: 24, scope: !21951)
!21958 = !DILocation(line: 251, column: 12, scope: !21951)
!21959 = !DILocation(line: 251, column: 17, scope: !21951)
!21960 = !DILocation(line: 251, column: 44, scope: !21951)
!21961 = !DILocation(line: 251, column: 51, scope: !21951)
!21962 = !DILocation(line: 251, column: 40, scope: !21951)
!21963 = !DILocation(line: 252, column: 9, scope: !21932)
!21964 = !DILocation(line: 252, column: 33, scope: !21951)
!21965 = !DILocation(line: 252, column: 24, scope: !21951)
!21966 = !DILocation(line: 252, column: 12, scope: !21951)
!21967 = !DILocation(line: 252, column: 17, scope: !21951)
!21968 = !DILocation(line: 252, column: 44, scope: !21951)
!21969 = !DILocation(line: 252, column: 51, scope: !21951)
!21970 = !DILocation(line: 252, column: 40, scope: !21951)
!21971 = !DILocation(line: 252, column: 9, scope: !21972)
!21972 = !DILexicalBlockFile(scope: !21932, file: !4818, discriminator: 2)
!21973 = !DILocation(line: 249, column: 5, scope: !21951)
!21974 = distinct !DISubprogram(name: "ff_sqrf", scope: !21975, file: !21975, line: 228, type: !8638, isLocal: true, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21975 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!21976 = !DILocalVariable(name: "a", arg: 1, scope: !21974, file: !21975, line: 228, type: !954)
!21977 = !DILocation(line: 228, column: 58, scope: !21974)
!21978 = !DILocation(line: 230, column: 12, scope: !21974)
!21979 = !DILocation(line: 230, column: 14, scope: !21974)
!21980 = !DILocation(line: 230, column: 13, scope: !21974)
!21981 = !DILocation(line: 230, column: 5, scope: !21974)
!21982 = distinct !DISubprogram(name: "find_form_factor", scope: !4818, file: !4818, line: 104, type: !21983, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21983 = !DISubroutineType(types: !21984)
!21984 = !{!954, !991, !991, !954, !1780, !954}
!21985 = !DILocalVariable(name: "x", arg: 1, scope: !21986, file: !21987, line: 62, type: !954)
!21986 = distinct !DISubprogram(name: "ff_fast_powf", scope: !21987, file: !21987, line: 62, type: !21988, isLocal: true, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!21987 = !DIFile(filename: "./libavutil/ffmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!21988 = !DISubroutineType(types: !21989)
!21989 = !{!954, !954, !954}
!21990 = !DILocation(line: 62, column: 71, scope: !21986, inlinedAt: !21991)
!21991 = distinct !DILocation(line: 129, column: 28, scope: !21992)
!21992 = distinct !DILexicalBlock(scope: !21993, file: !4818, line: 126, column: 21)
!21993 = distinct !DILexicalBlock(scope: !21994, file: !4818, line: 125, column: 20)
!21994 = distinct !DILexicalBlock(scope: !21995, file: !4818, line: 123, column: 17)
!21995 = distinct !DILexicalBlock(scope: !21996, file: !4818, line: 114, column: 40)
!21996 = distinct !DILexicalBlock(scope: !21997, file: !4818, line: 114, column: 9)
!21997 = distinct !DILexicalBlock(scope: !21998, file: !4818, line: 114, column: 9)
!21998 = distinct !DILexicalBlock(scope: !21999, file: !4818, line: 111, column: 40)
!21999 = distinct !DILexicalBlock(scope: !22000, file: !4818, line: 111, column: 5)
!22000 = distinct !DILexicalBlock(scope: !21982, file: !4818, line: 111, column: 5)
!22001 = !DILocalVariable(name: "y", arg: 2, scope: !21986, file: !21987, line: 62, type: !954)
!22002 = !DILocation(line: 62, column: 80, scope: !21986, inlinedAt: !21991)
!22003 = !DILocalVariable(name: "group_len", arg: 1, scope: !21982, file: !4818, line: 104, type: !991)
!22004 = !DILocation(line: 104, column: 42, scope: !21982)
!22005 = !DILocalVariable(name: "swb_size", arg: 2, scope: !21982, file: !4818, line: 104, type: !991)
!22006 = !DILocation(line: 104, column: 57, scope: !21982)
!22007 = !DILocalVariable(name: "thresh", arg: 3, scope: !21982, file: !4818, line: 104, type: !954)
!22008 = !DILocation(line: 104, column: 73, scope: !21982)
!22009 = !DILocalVariable(name: "scaled", arg: 4, scope: !21982, file: !4818, line: 105, type: !1780)
!22010 = !DILocation(line: 105, column: 51, scope: !21982)
!22011 = !DILocalVariable(name: "nzslope", arg: 5, scope: !21982, file: !4818, line: 105, type: !954)
!22012 = !DILocation(line: 105, column: 65, scope: !21982)
!22013 = !DILocalVariable(name: "iswb_size", scope: !21982, file: !4818, line: 106, type: !1781)
!22014 = !DILocation(line: 106, column: 17, scope: !21982)
!22015 = !DILocation(line: 106, column: 36, scope: !21982)
!22016 = !DILocation(line: 106, column: 34, scope: !21982)
!22017 = !DILocalVariable(name: "iswb_sizem1", scope: !21982, file: !4818, line: 107, type: !1781)
!22018 = !DILocation(line: 107, column: 17, scope: !21982)
!22019 = !DILocation(line: 107, column: 39, scope: !21982)
!22020 = !DILocation(line: 107, column: 48, scope: !21982)
!22021 = !DILocation(line: 107, column: 38, scope: !21982)
!22022 = !DILocation(line: 107, column: 36, scope: !21982)
!22023 = !DILocalVariable(name: "ethresh", scope: !21982, file: !4818, line: 108, type: !1781)
!22024 = !DILocation(line: 108, column: 17, scope: !21982)
!22025 = !DILocation(line: 108, column: 27, scope: !21982)
!22026 = !DILocalVariable(name: "form", scope: !21982, file: !4818, line: 109, type: !954)
!22027 = !DILocation(line: 109, column: 11, scope: !21982)
!22028 = !DILocalVariable(name: "weight", scope: !21982, file: !4818, line: 109, type: !954)
!22029 = !DILocation(line: 109, column: 24, scope: !21982)
!22030 = !DILocalVariable(name: "w2", scope: !21982, file: !4818, line: 110, type: !991)
!22031 = !DILocation(line: 110, column: 9, scope: !21982)
!22032 = !DILocalVariable(name: "i", scope: !21982, file: !4818, line: 110, type: !991)
!22033 = !DILocation(line: 110, column: 13, scope: !21982)
!22034 = !DILocation(line: 111, column: 13, scope: !22000)
!22035 = !DILocation(line: 111, column: 10, scope: !22000)
!22036 = !DILocation(line: 111, column: 18, scope: !22037)
!22037 = !DILexicalBlockFile(scope: !21999, file: !4818, discriminator: 1)
!22038 = !DILocation(line: 111, column: 23, scope: !22037)
!22039 = !DILocation(line: 111, column: 21, scope: !22037)
!22040 = !DILocation(line: 111, column: 5, scope: !22037)
!22041 = !DILocalVariable(name: "e", scope: !21998, file: !4818, line: 112, type: !954)
!22042 = !DILocation(line: 112, column: 15, scope: !21998)
!22043 = !DILocalVariable(name: "e2", scope: !21998, file: !4818, line: 112, type: !954)
!22044 = !DILocation(line: 112, column: 25, scope: !21998)
!22045 = !DILocalVariable(name: "var", scope: !21998, file: !4818, line: 112, type: !954)
!22046 = !DILocation(line: 112, column: 36, scope: !21998)
!22047 = !DILocalVariable(name: "maxval", scope: !21998, file: !4818, line: 112, type: !954)
!22048 = !DILocation(line: 112, column: 48, scope: !21998)
!22049 = !DILocalVariable(name: "nzl", scope: !21998, file: !4818, line: 113, type: !954)
!22050 = !DILocation(line: 113, column: 15, scope: !21998)
!22051 = !DILocation(line: 114, column: 16, scope: !21997)
!22052 = !DILocation(line: 114, column: 14, scope: !21997)
!22053 = !DILocation(line: 114, column: 21, scope: !22054)
!22054 = !DILexicalBlockFile(scope: !21996, file: !4818, discriminator: 1)
!22055 = !DILocation(line: 114, column: 25, scope: !22054)
!22056 = !DILocation(line: 114, column: 23, scope: !22054)
!22057 = !DILocation(line: 114, column: 9, scope: !22054)
!22058 = !DILocalVariable(name: "s", scope: !21995, file: !4818, line: 115, type: !954)
!22059 = !DILocation(line: 115, column: 19, scope: !21995)
!22060 = !DILocation(line: 115, column: 36, scope: !21995)
!22061 = !DILocation(line: 115, column: 38, scope: !21995)
!22062 = !DILocation(line: 115, column: 43, scope: !21995)
!22063 = !DILocation(line: 115, column: 42, scope: !21995)
!22064 = !DILocation(line: 115, column: 29, scope: !21995)
!22065 = !DILocation(line: 115, column: 23, scope: !21995)
!22066 = !DILocation(line: 116, column: 24, scope: !21995)
!22067 = !DILocation(line: 116, column: 35, scope: !21995)
!22068 = !DILocation(line: 116, column: 32, scope: !21995)
!22069 = !DILocation(line: 116, column: 23, scope: !21995)
!22070 = !DILocation(line: 116, column: 41, scope: !22071)
!22071 = !DILexicalBlockFile(scope: !21995, file: !4818, discriminator: 1)
!22072 = !DILocation(line: 116, column: 23, scope: !22071)
!22073 = !DILocation(line: 116, column: 52, scope: !22074)
!22074 = !DILexicalBlockFile(scope: !21995, file: !4818, discriminator: 2)
!22075 = !DILocation(line: 116, column: 23, scope: !22074)
!22076 = !DILocation(line: 116, column: 23, scope: !22077)
!22077 = !DILexicalBlockFile(scope: !21995, file: !4818, discriminator: 3)
!22078 = !DILocation(line: 116, column: 20, scope: !22077)
!22079 = !DILocation(line: 117, column: 18, scope: !21995)
!22080 = !DILocation(line: 117, column: 15, scope: !21995)
!22081 = !DILocation(line: 118, column: 24, scope: !21995)
!22082 = !DILocation(line: 118, column: 21, scope: !21995)
!22083 = !DILocation(line: 118, column: 16, scope: !21995)
!22084 = !DILocation(line: 123, column: 17, scope: !21994)
!22085 = !DILocation(line: 123, column: 22, scope: !21994)
!22086 = !DILocation(line: 123, column: 19, scope: !21994)
!22087 = !DILocation(line: 123, column: 17, scope: !21995)
!22088 = !DILocation(line: 124, column: 21, scope: !22089)
!22089 = distinct !DILexicalBlock(scope: !21994, file: !4818, line: 123, column: 31)
!22090 = !DILocation(line: 125, column: 13, scope: !22089)
!22091 = !DILocation(line: 126, column: 21, scope: !21992)
!22092 = !DILocation(line: 126, column: 29, scope: !21992)
!22093 = !DILocation(line: 126, column: 21, scope: !21993)
!22094 = !DILocation(line: 127, column: 29, scope: !21992)
!22095 = !DILocation(line: 127, column: 33, scope: !21992)
!22096 = !DILocation(line: 127, column: 31, scope: !21992)
!22097 = !DILocation(line: 127, column: 45, scope: !21992)
!22098 = !DILocation(line: 127, column: 49, scope: !21992)
!22099 = !DILocation(line: 127, column: 47, scope: !21992)
!22100 = !DILocation(line: 127, column: 42, scope: !21992)
!22101 = !DILocation(line: 127, column: 25, scope: !21992)
!22102 = !DILocation(line: 127, column: 21, scope: !21992)
!22103 = !DILocation(line: 129, column: 41, scope: !21992)
!22104 = !DILocation(line: 129, column: 45, scope: !21992)
!22105 = !DILocation(line: 129, column: 43, scope: !21992)
!22106 = !DILocation(line: 129, column: 54, scope: !21992)
!22107 = !DILocation(line: 129, column: 28, scope: !21992)
!22108 = !DILocation(line: 64, column: 22, scope: !21986, inlinedAt: !21991)
!22109 = !DILocation(line: 64, column: 17, scope: !21986, inlinedAt: !21991)
!22110 = !DILocation(line: 64, column: 27, scope: !21986, inlinedAt: !21991)
!22111 = !DILocation(line: 64, column: 25, scope: !21986, inlinedAt: !21991)
!22112 = !DILocation(line: 64, column: 12, scope: !22113, inlinedAt: !21991)
!22113 = !DILexicalBlockFile(scope: !21986, file: !21987, discriminator: 1)
!22114 = !DILocation(line: 129, column: 25, scope: !21992)
!22115 = !DILocation(line: 131, column: 9, scope: !21995)
!22116 = !DILocation(line: 114, column: 36, scope: !22117)
!22117 = !DILexicalBlockFile(scope: !21996, file: !4818, discriminator: 2)
!22118 = !DILocation(line: 114, column: 9, scope: !22117)
!22119 = distinct !{!22119, !22120}
!22120 = !DILocation(line: 114, column: 9, scope: !21998)
!22121 = !DILocation(line: 132, column: 13, scope: !22122)
!22122 = distinct !DILexicalBlock(scope: !21998, file: !4818, line: 132, column: 13)
!22123 = !DILocation(line: 132, column: 18, scope: !22122)
!22124 = !DILocation(line: 132, column: 16, scope: !22122)
!22125 = !DILocation(line: 132, column: 13, scope: !21998)
!22126 = !DILocalVariable(name: "frm", scope: !22127, file: !4818, line: 133, type: !954)
!22127 = distinct !DILexicalBlock(scope: !22122, file: !4818, line: 132, column: 26)
!22128 = !DILocation(line: 133, column: 19, scope: !22127)
!22129 = !DILocation(line: 134, column: 18, scope: !22127)
!22130 = !DILocation(line: 134, column: 15, scope: !22127)
!22131 = !DILocation(line: 137, column: 20, scope: !22132)
!22132 = distinct !DILexicalBlock(scope: !22127, file: !4818, line: 137, column: 13)
!22133 = !DILocation(line: 137, column: 18, scope: !22132)
!22134 = !DILocation(line: 137, column: 25, scope: !22135)
!22135 = !DILexicalBlockFile(scope: !22136, file: !4818, discriminator: 1)
!22136 = distinct !DILexicalBlock(scope: !22132, file: !4818, line: 137, column: 13)
!22137 = !DILocation(line: 137, column: 29, scope: !22135)
!22138 = !DILocation(line: 137, column: 27, scope: !22135)
!22139 = !DILocation(line: 137, column: 13, scope: !22135)
!22140 = !DILocalVariable(name: "d", scope: !22141, file: !4818, line: 138, type: !954)
!22141 = distinct !DILexicalBlock(scope: !22136, file: !4818, line: 137, column: 44)
!22142 = !DILocation(line: 138, column: 23, scope: !22141)
!22143 = !DILocation(line: 138, column: 40, scope: !22141)
!22144 = !DILocation(line: 138, column: 42, scope: !22141)
!22145 = !DILocation(line: 138, column: 47, scope: !22141)
!22146 = !DILocation(line: 138, column: 46, scope: !22141)
!22147 = !DILocation(line: 138, column: 33, scope: !22141)
!22148 = !DILocation(line: 138, column: 27, scope: !22141)
!22149 = !DILocation(line: 138, column: 53, scope: !22141)
!22150 = !DILocation(line: 138, column: 51, scope: !22141)
!22151 = !DILocation(line: 139, column: 24, scope: !22141)
!22152 = !DILocation(line: 139, column: 26, scope: !22141)
!22153 = !DILocation(line: 139, column: 25, scope: !22141)
!22154 = !DILocation(line: 139, column: 21, scope: !22141)
!22155 = !DILocation(line: 140, column: 13, scope: !22141)
!22156 = !DILocation(line: 137, column: 40, scope: !22157)
!22157 = !DILexicalBlockFile(scope: !22136, file: !4818, discriminator: 2)
!22158 = !DILocation(line: 137, column: 13, scope: !22157)
!22159 = distinct !{!22159, !22160}
!22160 = !DILocation(line: 137, column: 13, scope: !22127)
!22161 = !DILocation(line: 141, column: 25, scope: !22127)
!22162 = !DILocation(line: 141, column: 31, scope: !22127)
!22163 = !DILocation(line: 141, column: 29, scope: !22127)
!22164 = !DILocation(line: 141, column: 19, scope: !22127)
!22165 = !DILocation(line: 141, column: 17, scope: !22127)
!22166 = !DILocation(line: 143, column: 19, scope: !22127)
!22167 = !DILocation(line: 143, column: 16, scope: !22127)
!22168 = !DILocation(line: 144, column: 19, scope: !22127)
!22169 = !DILocation(line: 144, column: 25, scope: !22127)
!22170 = !DILocation(line: 144, column: 29, scope: !22127)
!22171 = !DILocation(line: 144, column: 28, scope: !22127)
!22172 = !DILocation(line: 144, column: 26, scope: !22127)
!22173 = !DILocation(line: 144, column: 37, scope: !22127)
!22174 = !DILocation(line: 144, column: 34, scope: !22127)
!22175 = !DILocation(line: 144, column: 24, scope: !22127)
!22176 = !DILocation(line: 144, column: 48, scope: !22177)
!22177 = !DILexicalBlockFile(scope: !22127, file: !4818, discriminator: 1)
!22178 = !DILocation(line: 144, column: 24, scope: !22177)
!22179 = !DILocation(line: 144, column: 59, scope: !22180)
!22180 = !DILexicalBlockFile(scope: !22127, file: !4818, discriminator: 2)
!22181 = !DILocation(line: 144, column: 63, scope: !22180)
!22182 = !DILocation(line: 144, column: 62, scope: !22180)
!22183 = !DILocation(line: 144, column: 60, scope: !22180)
!22184 = !DILocation(line: 144, column: 24, scope: !22180)
!22185 = !DILocation(line: 144, column: 24, scope: !22186)
!22186 = !DILexicalBlockFile(scope: !22127, file: !4818, discriminator: 3)
!22187 = !DILocation(line: 144, column: 21, scope: !22186)
!22188 = !DILocation(line: 144, column: 17, scope: !22186)
!22189 = !DILocation(line: 145, column: 21, scope: !22127)
!22190 = !DILocation(line: 145, column: 32, scope: !22127)
!22191 = !DILocation(line: 145, column: 26, scope: !22127)
!22192 = !DILocation(line: 145, column: 24, scope: !22127)
!22193 = !DILocation(line: 145, column: 50, scope: !22127)
!22194 = !DILocation(line: 145, column: 47, scope: !22127)
!22195 = !DILocation(line: 145, column: 40, scope: !22127)
!22196 = !DILocation(line: 145, column: 40, scope: !22177)
!22197 = !DILocation(line: 145, column: 67, scope: !22180)
!22198 = !DILocation(line: 145, column: 40, scope: !22180)
!22199 = !DILocation(line: 145, column: 40, scope: !22186)
!22200 = !DILocation(line: 145, column: 37, scope: !22186)
!22201 = !DILocation(line: 145, column: 18, scope: !22186)
!22202 = !DILocation(line: 146, column: 23, scope: !22127)
!22203 = !DILocation(line: 146, column: 20, scope: !22127)
!22204 = !DILocation(line: 147, column: 9, scope: !22127)
!22205 = !DILocation(line: 148, column: 5, scope: !21998)
!22206 = !DILocation(line: 111, column: 36, scope: !22207)
!22207 = !DILexicalBlockFile(scope: !21999, file: !4818, discriminator: 2)
!22208 = !DILocation(line: 111, column: 5, scope: !22207)
!22209 = distinct !{!22209, !22210}
!22210 = !DILocation(line: 111, column: 5, scope: !21982)
!22211 = !DILocation(line: 149, column: 9, scope: !22212)
!22212 = distinct !DILexicalBlock(scope: !21982, file: !4818, line: 149, column: 9)
!22213 = !DILocation(line: 149, column: 16, scope: !22212)
!22214 = !DILocation(line: 149, column: 9, scope: !21982)
!22215 = !DILocation(line: 150, column: 16, scope: !22216)
!22216 = distinct !DILexicalBlock(scope: !22212, file: !4818, line: 149, column: 21)
!22217 = !DILocation(line: 150, column: 23, scope: !22216)
!22218 = !DILocation(line: 150, column: 21, scope: !22216)
!22219 = !DILocation(line: 150, column: 9, scope: !22216)
!22220 = !DILocation(line: 152, column: 9, scope: !22221)
!22221 = distinct !DILexicalBlock(scope: !22212, file: !4818, line: 151, column: 12)
!22222 = !DILocation(line: 154, column: 1, scope: !21982)
!22223 = distinct !DISubprogram(name: "ff_pns_bits", scope: !9616, file: !9616, line: 59, type: !22224, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!22224 = !DISubroutineType(types: !22225)
!22225 = !{!991, !2458, !991, !991}
!22226 = !DILocalVariable(name: "sce", arg: 1, scope: !22223, file: !9616, line: 59, type: !2458)
!22227 = !DILocation(line: 59, column: 53, scope: !22223)
!22228 = !DILocalVariable(name: "w", arg: 2, scope: !22223, file: !9616, line: 59, type: !991)
!22229 = !DILocation(line: 59, column: 62, scope: !22223)
!22230 = !DILocalVariable(name: "g", arg: 3, scope: !22223, file: !9616, line: 59, type: !991)
!22231 = !DILocation(line: 59, column: 69, scope: !22223)
!22232 = !DILocation(line: 61, column: 14, scope: !22223)
!22233 = !DILocation(line: 61, column: 16, scope: !22223)
!22234 = !DILocation(line: 61, column: 32, scope: !22235)
!22235 = !DILexicalBlockFile(scope: !22223, file: !9616, discriminator: 1)
!22236 = !DILocation(line: 61, column: 33, scope: !22235)
!22237 = !DILocation(line: 61, column: 37, scope: !22235)
!22238 = !DILocation(line: 61, column: 36, scope: !22235)
!22239 = !DILocation(line: 61, column: 38, scope: !22235)
!22240 = !DILocation(line: 61, column: 20, scope: !22235)
!22241 = !DILocation(line: 61, column: 25, scope: !22235)
!22242 = !DILocation(line: 61, column: 42, scope: !22235)
!22243 = !DILocation(line: 61, column: 59, scope: !22244)
!22244 = !DILexicalBlockFile(scope: !22223, file: !9616, discriminator: 2)
!22245 = !DILocation(line: 61, column: 60, scope: !22244)
!22246 = !DILocation(line: 61, column: 64, scope: !22244)
!22247 = !DILocation(line: 61, column: 63, scope: !22244)
!22248 = !DILocation(line: 61, column: 65, scope: !22244)
!22249 = !DILocation(line: 61, column: 46, scope: !22244)
!22250 = !DILocation(line: 61, column: 51, scope: !22244)
!22251 = !DILocation(line: 61, column: 45, scope: !22244)
!22252 = !DILocation(line: 61, column: 42, scope: !22244)
!22253 = !DILocation(line: 61, column: 12, scope: !22254)
!22254 = !DILexicalBlockFile(scope: !22223, file: !9616, discriminator: 3)
!22255 = !DILocation(line: 61, column: 5, scope: !22254)
!22256 = distinct !DISubprogram(name: "quantize_band_cost_cached", scope: !22257, file: !22257, line: 31, type: !22258, isLocal: true, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!22257 = !DIFile(filename: "libavcodec/aacenc_quantization_misc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!22258 = !DISubroutineType(types: !22259)
!22259 = !{!954, !1695, !991, !991, !1780, !1780, !991, !991, !991, !1781, !1781, !1264, !1779, !991}
!22260 = !DILocalVariable(name: "s", arg: 1, scope: !22256, file: !22257, line: 31, type: !1695)
!22261 = !DILocation(line: 31, column: 69, scope: !22256)
!22262 = !DILocalVariable(name: "w", arg: 2, scope: !22256, file: !22257, line: 31, type: !991)
!22263 = !DILocation(line: 31, column: 76, scope: !22256)
!22264 = !DILocalVariable(name: "g", arg: 3, scope: !22256, file: !22257, line: 31, type: !991)
!22265 = !DILocation(line: 31, column: 83, scope: !22256)
!22266 = !DILocalVariable(name: "in", arg: 4, scope: !22256, file: !22257, line: 31, type: !1780)
!22267 = !DILocation(line: 31, column: 99, scope: !22256)
!22268 = !DILocalVariable(name: "scaled", arg: 5, scope: !22256, file: !22257, line: 32, type: !1780)
!22269 = !DILocation(line: 32, column: 46, scope: !22256)
!22270 = !DILocalVariable(name: "size", arg: 6, scope: !22256, file: !22257, line: 32, type: !991)
!22271 = !DILocation(line: 32, column: 58, scope: !22256)
!22272 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !22256, file: !22257, line: 32, type: !991)
!22273 = !DILocation(line: 32, column: 68, scope: !22256)
!22274 = !DILocalVariable(name: "cb", arg: 8, scope: !22256, file: !22257, line: 33, type: !991)
!22275 = !DILocation(line: 33, column: 37, scope: !22256)
!22276 = !DILocalVariable(name: "lambda", arg: 9, scope: !22256, file: !22257, line: 33, type: !1781)
!22277 = !DILocation(line: 33, column: 53, scope: !22256)
!22278 = !DILocalVariable(name: "uplim", arg: 10, scope: !22256, file: !22257, line: 33, type: !1781)
!22279 = !DILocation(line: 33, column: 73, scope: !22256)
!22280 = !DILocalVariable(name: "bits", arg: 11, scope: !22256, file: !22257, line: 34, type: !1264)
!22281 = !DILocation(line: 34, column: 38, scope: !22256)
!22282 = !DILocalVariable(name: "energy", arg: 12, scope: !22256, file: !22257, line: 34, type: !1779)
!22283 = !DILocation(line: 34, column: 51, scope: !22256)
!22284 = !DILocalVariable(name: "rtz", arg: 13, scope: !22256, file: !22257, line: 34, type: !991)
!22285 = !DILocation(line: 34, column: 63, scope: !22256)
!22286 = !DILocalVariable(name: "entry", scope: !22256, file: !22257, line: 36, type: !22287)
!22287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64, align: 64)
!22288 = !DILocation(line: 36, column: 36, scope: !22256)
!22289 = !DILocation(line: 38, column: 53, scope: !22256)
!22290 = !DILocation(line: 38, column: 54, scope: !22256)
!22291 = !DILocation(line: 38, column: 58, scope: !22256)
!22292 = !DILocation(line: 38, column: 57, scope: !22256)
!22293 = !DILocation(line: 38, column: 14, scope: !22256)
!22294 = !DILocation(line: 38, column: 42, scope: !22256)
!22295 = !DILocation(line: 38, column: 17, scope: !22256)
!22296 = !DILocation(line: 38, column: 11, scope: !22256)
!22297 = !DILocation(line: 39, column: 9, scope: !22298)
!22298 = distinct !DILexicalBlock(scope: !22256, file: !22257, line: 39, column: 9)
!22299 = !DILocation(line: 39, column: 16, scope: !22298)
!22300 = !DILocation(line: 39, column: 30, scope: !22298)
!22301 = !DILocation(line: 39, column: 33, scope: !22298)
!22302 = !DILocation(line: 39, column: 27, scope: !22298)
!22303 = !DILocation(line: 39, column: 69, scope: !22298)
!22304 = !DILocation(line: 39, column: 72, scope: !22305)
!22305 = !DILexicalBlockFile(scope: !22298, file: !22257, discriminator: 1)
!22306 = !DILocation(line: 39, column: 79, scope: !22305)
!22307 = !DILocation(line: 39, column: 85, scope: !22305)
!22308 = !DILocation(line: 39, column: 82, scope: !22305)
!22309 = !DILocation(line: 39, column: 88, scope: !22305)
!22310 = !DILocation(line: 39, column: 91, scope: !22311)
!22311 = !DILexicalBlockFile(scope: !22298, file: !22257, discriminator: 2)
!22312 = !DILocation(line: 39, column: 98, scope: !22311)
!22313 = !DILocation(line: 39, column: 105, scope: !22311)
!22314 = !DILocation(line: 39, column: 102, scope: !22311)
!22315 = !DILocation(line: 39, column: 9, scope: !22311)
!22316 = !DILocation(line: 40, column: 40, scope: !22317)
!22317 = distinct !DILexicalBlock(scope: !22298, file: !22257, line: 39, column: 110)
!22318 = !DILocation(line: 40, column: 43, scope: !22317)
!22319 = !DILocation(line: 40, column: 47, scope: !22317)
!22320 = !DILocation(line: 40, column: 55, scope: !22317)
!22321 = !DILocation(line: 40, column: 61, scope: !22317)
!22322 = !DILocation(line: 41, column: 40, scope: !22317)
!22323 = !DILocation(line: 41, column: 44, scope: !22317)
!22324 = !DILocation(line: 41, column: 52, scope: !22317)
!22325 = !DILocation(line: 41, column: 60, scope: !22317)
!22326 = !DILocation(line: 41, column: 67, scope: !22317)
!22327 = !DILocation(line: 41, column: 74, scope: !22317)
!22328 = !DILocation(line: 41, column: 81, scope: !22317)
!22329 = !DILocation(line: 41, column: 89, scope: !22317)
!22330 = !DILocation(line: 40, column: 21, scope: !22317)
!22331 = !DILocation(line: 40, column: 9, scope: !22317)
!22332 = !DILocation(line: 40, column: 16, scope: !22317)
!22333 = !DILocation(line: 40, column: 19, scope: !22317)
!22334 = !DILocation(line: 42, column: 21, scope: !22317)
!22335 = !DILocation(line: 42, column: 9, scope: !22317)
!22336 = !DILocation(line: 42, column: 16, scope: !22317)
!22337 = !DILocation(line: 42, column: 19, scope: !22317)
!22338 = !DILocation(line: 43, column: 22, scope: !22317)
!22339 = !DILocation(line: 43, column: 9, scope: !22317)
!22340 = !DILocation(line: 43, column: 16, scope: !22317)
!22341 = !DILocation(line: 43, column: 20, scope: !22317)
!22342 = !DILocation(line: 44, column: 29, scope: !22317)
!22343 = !DILocation(line: 44, column: 32, scope: !22317)
!22344 = !DILocation(line: 44, column: 9, scope: !22317)
!22345 = !DILocation(line: 44, column: 16, scope: !22317)
!22346 = !DILocation(line: 44, column: 27, scope: !22317)
!22347 = !DILocation(line: 45, column: 5, scope: !22317)
!22348 = !DILocation(line: 46, column: 9, scope: !22349)
!22349 = distinct !DILexicalBlock(scope: !22256, file: !22257, line: 46, column: 9)
!22350 = !DILocation(line: 46, column: 9, scope: !22256)
!22351 = !DILocation(line: 47, column: 17, scope: !22349)
!22352 = !DILocation(line: 47, column: 24, scope: !22349)
!22353 = !DILocation(line: 47, column: 10, scope: !22349)
!22354 = !DILocation(line: 47, column: 15, scope: !22349)
!22355 = !DILocation(line: 47, column: 9, scope: !22349)
!22356 = !DILocation(line: 48, column: 9, scope: !22357)
!22357 = distinct !DILexicalBlock(scope: !22256, file: !22257, line: 48, column: 9)
!22358 = !DILocation(line: 48, column: 9, scope: !22256)
!22359 = !DILocation(line: 49, column: 19, scope: !22357)
!22360 = !DILocation(line: 49, column: 26, scope: !22357)
!22361 = !DILocation(line: 49, column: 10, scope: !22357)
!22362 = !DILocation(line: 49, column: 17, scope: !22357)
!22363 = !DILocation(line: 49, column: 9, scope: !22357)
!22364 = !DILocation(line: 50, column: 12, scope: !22256)
!22365 = !DILocation(line: 50, column: 19, scope: !22256)
!22366 = !DILocation(line: 50, column: 5, scope: !22256)
!22367 = distinct !DISubprogram(name: "quantize_band_cost_bits", scope: !2734, file: !2734, line: 259, type: !22368, isLocal: true, isDefinition: true, scopeLine: 263, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2766)
!22368 = !DISubroutineType(types: !22369)
!22369 = !{!991, !1695, !1780, !1780, !991, !991, !991, !1781, !1781, !1264, !1779, !991}
!22370 = !DILocalVariable(name: "s", arg: 1, scope: !22367, file: !2734, line: 259, type: !1695)
!22371 = !DILocation(line: 259, column: 65, scope: !22367)
!22372 = !DILocalVariable(name: "in", arg: 2, scope: !22367, file: !2734, line: 259, type: !1780)
!22373 = !DILocation(line: 259, column: 81, scope: !22367)
!22374 = !DILocalVariable(name: "scaled", arg: 3, scope: !22367, file: !2734, line: 260, type: !1780)
!22375 = !DILocation(line: 260, column: 46, scope: !22367)
!22376 = !DILocalVariable(name: "size", arg: 4, scope: !22367, file: !2734, line: 260, type: !991)
!22377 = !DILocation(line: 260, column: 58, scope: !22367)
!22378 = !DILocalVariable(name: "scale_idx", arg: 5, scope: !22367, file: !2734, line: 260, type: !991)
!22379 = !DILocation(line: 260, column: 68, scope: !22367)
!22380 = !DILocalVariable(name: "cb", arg: 6, scope: !22367, file: !2734, line: 261, type: !991)
!22381 = !DILocation(line: 261, column: 37, scope: !22367)
!22382 = !DILocalVariable(name: "lambda", arg: 7, scope: !22367, file: !2734, line: 261, type: !1781)
!22383 = !DILocation(line: 261, column: 53, scope: !22367)
!22384 = !DILocalVariable(name: "uplim", arg: 8, scope: !22367, file: !2734, line: 261, type: !1781)
!22385 = !DILocation(line: 261, column: 73, scope: !22367)
!22386 = !DILocalVariable(name: "bits", arg: 9, scope: !22367, file: !2734, line: 262, type: !1264)
!22387 = !DILocation(line: 262, column: 38, scope: !22367)
!22388 = !DILocalVariable(name: "energy", arg: 10, scope: !22367, file: !2734, line: 262, type: !1779)
!22389 = !DILocation(line: 262, column: 51, scope: !22367)
!22390 = !DILocalVariable(name: "rtz", arg: 11, scope: !22367, file: !2734, line: 262, type: !991)
!22391 = !DILocation(line: 262, column: 63, scope: !22367)
!22392 = !DILocalVariable(name: "auxbits", scope: !22367, file: !2734, line: 264, type: !991)
!22393 = !DILocation(line: 264, column: 9, scope: !22367)
!22394 = !DILocation(line: 265, column: 89, scope: !22367)
!22395 = !DILocation(line: 265, column: 5, scope: !22367)
!22396 = !DILocation(line: 265, column: 7, scope: !22367)
!22397 = !DILocation(line: 265, column: 6, scope: !22367)
!22398 = !DILocation(line: 265, column: 94, scope: !22367)
!22399 = !DILocation(line: 265, column: 14, scope: !22367)
!22400 = !DILocation(line: 265, column: 20, scope: !22367)
!22401 = !DILocation(line: 265, column: 31, scope: !22367)
!22402 = !DILocation(line: 265, column: 41, scope: !22367)
!22403 = !DILocation(line: 265, column: 58, scope: !22367)
!22404 = !DILocation(line: 267, column: 9, scope: !22405)
!22405 = distinct !DILexicalBlock(scope: !22367, file: !2734, line: 267, column: 9)
!22406 = !DILocation(line: 267, column: 9, scope: !22367)
!22407 = !DILocation(line: 268, column: 17, scope: !22408)
!22408 = distinct !DILexicalBlock(scope: !22405, file: !2734, line: 267, column: 15)
!22409 = !DILocation(line: 268, column: 10, scope: !22408)
!22410 = !DILocation(line: 268, column: 15, scope: !22408)
!22411 = !DILocation(line: 269, column: 5, scope: !22408)
!22412 = !DILocation(line: 270, column: 12, scope: !22367)
!22413 = !DILocation(line: 270, column: 5, scope: !22367)
