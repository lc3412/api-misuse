; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a/[inter]libswresample--options.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a/[inter]libswresample--options.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.SwrContext = type { %struct.AVClass*, i32, i8*, i32, i32, i32, i64, i64, i32, i32, i32, float, float, float, float, float, i32, i32*, i32, i32, i32, i32, i32, i64, i64, i32, i32, %struct.DitherContext, i32, i32, i32, i32, double, i32, double, double, i32, float, float, float, float, float, i64, i32, i32, i32, %struct.AudioData, %struct.AudioData, %struct.AudioData, %struct.AudioData, %struct.AudioData, %struct.AudioData, %struct.AudioData, %struct.AudioData, i32, i32, i32, i32, i64, i64, i32, double, %struct.AudioConvert*, %struct.AudioConvert*, %struct.AudioConvert*, %struct.ResampleContext*, %struct.Resampler*, [64 x [64 x double]], [64 x [64 x float]], i8*, i8*, i8*, i8*, [64 x [64 x i32]], [64 x [65 x i8]], void (i8*, i8*, i8*, i64, i64)*, void (i8*, i8*, i8*, i64, i64)*, void (i8*, i8*, i8*, i8*, i64, i64, i64)*, void (i8*, i8*, i8*, i8*, i64, i64, i64)*, void (i8**, i8**, i8*, i64)* }
%struct.DitherContext = type { i32, i32, float, float, i32, float, float, i32, [20 x float], [64 x [40 x float]], %struct.AudioData, %struct.AudioData, i32 }
%struct.AudioData = type { [64 x i8*], i8*, i32, i32, i32, i32, i32 }
%struct.AudioConvert = type opaque
%struct.ResampleContext = type opaque
%struct.Resampler = type { %struct.ResampleContext* (%struct.ResampleContext*, i32, i32, i32, i32, i32, double, i32, i32, double, double, i32, i32)*, void (%struct.ResampleContext**)*, i32 (%struct.ResampleContext*, %struct.AudioData*, i32, %struct.AudioData*, i32, i32*)*, i32 (%struct.SwrContext*)*, i32 (%struct.ResampleContext*, i32, i32)*, i64 (%struct.SwrContext*, i64)*, i32 (%struct.ResampleContext*, %struct.AudioData*, %struct.AudioData*, i32, i32*, i32*)*, i64 (%struct.SwrContext*, i32)* }

@av_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @context_to_name, %struct.AVOption* getelementptr inbounds ([71 x %struct.AVOption], [71 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption }>* @options to [71 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 8, i32 16, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 10, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str = private unnamed_addr constant [12 x i8] c"SWResampler\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"SWR\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"ich\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"set input channel count\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"in_channel_count\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"och\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"set output channel count\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"out_channel_count\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"uch\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"set used channel count\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"used_channel_count\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"isr\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"set input sample rate\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"in_sample_rate\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"osr\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"set output sample rate\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"out_sample_rate\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"isf\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"set input sample format\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"in_sample_fmt\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"osf\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"set output sample format\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"out_sample_fmt\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"tsf\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"set internal sample format\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"internal_sample_fmt\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"icl\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"set input channel layout\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"channel_layout\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"in_channel_layout\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"ocl\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"set output channel layout\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"out_channel_layout\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"clev\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"set center mix level\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"center_mix_level\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"slev\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"set surround mix level\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"surround_mix_level\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"set surround mix Level\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"lfe_mix_level\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"set LFE mix level\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"rmvol\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"set rematrix volume\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"rematrix_volume\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"rematrix_maxval\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"set rematrix maxval\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"set flags\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"swr_flags\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"res\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"force resampling\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"dither_scale\00", align 1
@.str.53 = private unnamed_addr constant [17 x i8] c"set dither scale\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"dither_method\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"set dither method\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"rectangular\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"select rectangular dither\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"triangular\00", align 1
@.str.59 = private unnamed_addr constant [25 x i8] c"select triangular dither\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"triangular_hp\00", align 1
@.str.61 = private unnamed_addr constant [40 x i8] c"select triangular dither with high pass\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"lipshitz\00", align 1
@.str.63 = private unnamed_addr constant [37 x i8] c"select Lipshitz noise shaping dither\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"shibata\00", align 1
@.str.65 = private unnamed_addr constant [36 x i8] c"select Shibata noise shaping dither\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"low_shibata\00", align 1
@.str.67 = private unnamed_addr constant [40 x i8] c"select low Shibata noise shaping dither\00", align 1
@.str.68 = private unnamed_addr constant [13 x i8] c"high_shibata\00", align 1
@.str.69 = private unnamed_addr constant [41 x i8] c"select high Shibata noise shaping dither\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"f_weighted\00", align 1
@.str.71 = private unnamed_addr constant [39 x i8] c"select f-weighted noise shaping dither\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"modified_e_weighted\00", align 1
@.str.73 = private unnamed_addr constant [48 x i8] c"select modified-e-weighted noise shaping dither\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"improved_e_weighted\00", align 1
@.str.75 = private unnamed_addr constant [48 x i8] c"select improved-e-weighted noise shaping dither\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"filter_size\00", align 1
@.str.77 = private unnamed_addr constant [31 x i8] c"set swr resampling filter size\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c"phase_shift\00", align 1
@.str.79 = private unnamed_addr constant [31 x i8] c"set swr resampling phase shift\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"linear_interp\00", align 1
@.str.81 = private unnamed_addr constant [28 x i8] c"enable linear interpolation\00", align 1
@.str.82 = private unnamed_addr constant [15 x i8] c"exact_rational\00", align 1
@.str.83 = private unnamed_addr constant [22 x i8] c"enable exact rational\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"cutoff\00", align 1
@.str.85 = private unnamed_addr constant [27 x i8] c"set cutoff frequency ratio\00", align 1
@.str.86 = private unnamed_addr constant [16 x i8] c"resample_cutoff\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"resampler\00", align 1
@.str.88 = private unnamed_addr constant [22 x i8] c"set resampling Engine\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"swr\00", align 1
@.str.90 = private unnamed_addr constant [20 x i8] c"select SW Resampler\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"soxr\00", align 1
@.str.92 = private unnamed_addr constant [21 x i8] c"select SoX Resampler\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"precision\00", align 1
@.str.94 = private unnamed_addr constant [40 x i8] c"set soxr resampling precision (in bits)\00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"cheby\00", align 1
@.str.96 = private unnamed_addr constant [81 x i8] c"enable soxr Chebyshev passband & higher-precision irrational ratio approximation\00", align 1
@.str.97 = private unnamed_addr constant [9 x i8] c"min_comp\00", align 1
@.str.98 = private unnamed_addr constant [134 x i8] c"set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied\00", align 1
@.str.99 = private unnamed_addr constant [14 x i8] c"min_hard_comp\00", align 1
@.str.100 = private unnamed_addr constant [108 x i8] c"set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.\00", align 1
@.str.101 = private unnamed_addr constant [14 x i8] c"comp_duration\00", align 1
@.str.102 = private unnamed_addr constant [97 x i8] c"set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.\00", align 1
@.str.103 = private unnamed_addr constant [14 x i8] c"max_soft_comp\00", align 1
@.str.104 = private unnamed_addr constant [88 x i8] c"set maximum factor by which data is stretched/squeezed to make it match the timestamps.\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.106 = private unnamed_addr constant [137 x i8] c"simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"first_pts\00", align 1
@.str.108 = private unnamed_addr constant [56 x i8] c"Assume the first pts should be this value (in samples).\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"matrix_encoding\00", align 1
@.str.110 = private unnamed_addr constant [29 x i8] c"set matrixed stereo encoding\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.112 = private unnamed_addr constant [12 x i8] c"select none\00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"dolby\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"select Dolby\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"dplii\00", align 1
@.str.116 = private unnamed_addr constant [26 x i8] c"select Dolby Pro Logic II\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c"filter_type\00", align 1
@.str.118 = private unnamed_addr constant [23 x i8] c"select swr filter type\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"cubic\00", align 1
@.str.120 = private unnamed_addr constant [13 x i8] c"select cubic\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"blackman_nuttall\00", align 1
@.str.122 = private unnamed_addr constant [38 x i8] c"select Blackman Nuttall windowed sinc\00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"kaiser\00", align 1
@.str.124 = private unnamed_addr constant [28 x i8] c"select Kaiser windowed sinc\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"kaiser_beta\00", align 1
@.str.126 = private unnamed_addr constant [27 x i8] c"set swr Kaiser window beta\00", align 1
@.str.127 = private unnamed_addr constant [19 x i8] c"output_sample_bits\00", align 1
@.str.128 = private unnamed_addr constant [37 x i8] c"set swr number of output sample bits\00", align 1
@options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 112, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 112, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 116, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 116, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0), i32 120, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0), i32 120, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i32 56, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i32 56, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0), i32 60, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0), i32 60, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0), i32 24, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0), i32 24, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i32 0, i32 0), i32 32, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i32 0, i32 0), i32 32, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i32 0, i32 0), i32 144, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i32 0, i32 0), i32 144, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0), i32 128, i32 17, %union.anon zeroinitializer, double 0xC3E0000000000000, double 0x43E0000000000000, i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0), i32 128, i32 17, %union.anon zeroinitializer, double 0xC3E0000000000000, double 0x43E0000000000000, i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0), i32 136, i32 17, %union.anon zeroinitializer, double 0xC3E0000000000000, double 0x43E0000000000000, i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0), i32 136, i32 17, %union.anon zeroinitializer, double 0xC3E0000000000000, double 0x43E0000000000000, i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0), i32 72, i32 4, { double } { double 0x3FE6A09E667F3BCD }, double -3.200000e+01, double 3.200000e+01, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0), i32 72, i32 4, { double } { double 0x3FE6A09E667F3BCD }, double -3.200000e+01, double 3.200000e+01, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i32 0, i32 0), i32 68, i32 4, { double } { double 0x3FE6A09E667F3BCD }, double -3.200000e+01, double 3.200000e+01, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i32 0, i32 0), i32 68, i32 4, { double } { double 0x3FE6A09E667F3BCD }, double -3.200000e+01, double 3.200000e+01, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i32 76, i32 4, { double } zeroinitializer, double -3.200000e+01, double 3.200000e+01, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i32 0, i32 0), i32 80, i32 4, { double } { double 1.000000e+00 }, double -1.000000e+03, double 1.000000e+03, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i32 0, i32 0), i32 80, i32 4, { double } { double 1.000000e+00 }, double -1.000000e+03, double 1.000000e+03, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0), i32 84, i32 4, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+03, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 64, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 64, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.53, i32 0, i32 0), i32 160, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i32 0, i32 0), i32 148, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 7.100000e+01, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.61, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.63, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.65, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 69 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.67, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 70 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.69, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 71 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.71, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 66 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.73, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 67 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.75, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 68 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.77, i32 0, i32 0), i32 11600, i32 1, %union.anon { i64 32 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.79, i32 0, i32 0), i32 11604, i32 1, %union.anon { i64 10 }, double 0.000000e+00, double 2.400000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.81, i32 0, i32 0), i32 11608, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i32 0, i32 0), i32 11612, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i32 0, i32 0), i32 11616, i32 3, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i32 0, i32 0), i32 11616, i32 3, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.88, i32 0, i32 0), i32 108, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.90, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i32 0, i32 0), i32 11640, i32 3, { double } { double 2.000000e+01 }, double 1.500000e+01, double 3.300000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.96, i32 0, i32 0), i32 11648, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.98, i32 0, i32 0), i32 11652, i32 4, { double } { double 0x47EFFFFFE0000000 }, double 0.000000e+00, double 0x47EFFFFFE0000000, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.100, i32 0, i32 0), i32 11656, i32 4, { double } { double 1.000000e-01 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.102, i32 0, i32 0), i32 11660, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.104, i32 0, i32 0), i32 11664, i32 4, { double } zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.106, i32 0, i32 0), i32 11668, i32 4, { double } zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.108, i32 0, i32 0), i32 11672, i32 2, %union.anon { i64 -9223372036854775808 }, double 0xC3E0000000000000, double 0x43E0000000000000, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.110, i32 0, i32 0), i32 88, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.000000e+00, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.116, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.118, i32 0, i32 0), i32 11624, i32 1, %union.anon { i64 2 }, double 0.000000e+00, double 2.000000e+00, i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.120, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.122, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.124, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.126, i32 0, i32 0), i32 11632, i32 3, { double } { double 9.000000e+00 }, double 2.000000e+00, double 1.600000e+01, i32 8, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.128, i32 0, i32 0), i32 11592, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 6.400000e+01, i32 8, i8* null }, %struct.AVOption zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define %struct.AVClass* @swr_get_class() #0 !dbg !166 {
entry:
  ret %struct.AVClass* @av_class, !dbg !171
}

; Function Attrs: cold nounwind optsize uwtable
define %struct.SwrContext* @swr_alloc() #1 !dbg !172 {
entry:
  %s = alloca %struct.SwrContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.SwrContext** %s, metadata !379, metadata !382), !dbg !383
  %call = call noalias i8* @av_mallocz(i64 85904), !dbg !384
  %0 = bitcast i8* %call to %struct.SwrContext*, !dbg !384
  store %struct.SwrContext* %0, %struct.SwrContext** %s, align 8, !dbg !383
  %1 = load %struct.SwrContext*, %struct.SwrContext** %s, align 8, !dbg !385
  %tobool = icmp ne %struct.SwrContext* %1, null, !dbg !385
  br i1 %tobool, label %if.then, label %if.end, !dbg !387

if.then:                                          ; preds = %entry
  %2 = load %struct.SwrContext*, %struct.SwrContext** %s, align 8, !dbg !388
  %av_class = getelementptr inbounds %struct.SwrContext, %struct.SwrContext* %2, i32 0, i32 0, !dbg !390
  store %struct.AVClass* @av_class, %struct.AVClass** %av_class, align 8, !dbg !391
  %3 = load %struct.SwrContext*, %struct.SwrContext** %s, align 8, !dbg !392
  %4 = bitcast %struct.SwrContext* %3 to i8*, !dbg !392
  call void @av_opt_set_defaults(i8* %4), !dbg !393
  br label %if.end, !dbg !394

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.SwrContext*, %struct.SwrContext** %s, align 8, !dbg !395
  ret %struct.SwrContext* %5, !dbg !396
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare noalias i8* @av_mallocz(i64) #3

declare void @av_opt_set_defaults(i8*) #3

; Function Attrs: nounwind uwtable
define internal i8* @context_to_name(i8* %ptr) #0 !dbg !397 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !398, metadata !382), !dbg !399
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), !dbg !400
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!163, !164}
!llvm.ident = !{!165}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !69)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a/[inter]libswresample--options.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!2 = !{!3, !25, !46, !63}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !47, line: 58, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!49 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!50 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!51 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!52 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!53 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!54 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!55 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!56 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!57 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!58 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!59 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!60 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!61 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!62 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SwrFilterType", file: !64, line: 166, size: 32, align: 32, elements: !65)
!64 = !DIFile(filename: "libswresample/swresample.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!65 = !{!66, !67, !68}
!66 = !DIEnumerator(name: "SWR_FILTER_TYPE_CUBIC", value: 0)
!67 = !DIEnumerator(name: "SWR_FILTER_TYPE_BLACKMAN_NUTTALL", value: 1)
!68 = !DIEnumerator(name: "SWR_FILTER_TYPE_KAISER", value: 2)
!69 = !{!70, !157}
!70 = distinct !DIGlobalVariable(name: "av_class", scope: !0, file: !71, line: 134, type: !72, isLocal: true, isDefinition: true, variable: %struct.AVClass* @av_class)
!71 = !DIFile(filename: "libswresample/options.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!72 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !73)
!73 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !74)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !75)
!75 = !{!76, !80, !85, !116, !117, !118, !119, !123, !129, !131, !135}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !74, file: !26, line: 72, baseType: !77, size: 64, align: 64)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64)
!78 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!79 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !74, file: !26, line: 78, baseType: !81, size: 64, align: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!82 = !DISubroutineType(types: !83)
!83 = !{!77, !84}
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !74, file: !26, line: 85, baseType: !86, size: 64, align: 64, offset: 128)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64, align: 64)
!87 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !89)
!89 = !{!90, !91, !92, !94, !95, !112, !113, !114, !115}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !88, file: !4, line: 247, baseType: !77, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !88, file: !4, line: 253, baseType: !77, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !88, file: !4, line: 259, baseType: !93, size: 32, align: 32, offset: 128)
!93 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !88, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !88, file: !4, line: 271, baseType: !96, size: 64, align: 64, offset: 192)
!96 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !88, file: !4, line: 265, size: 64, align: 64, elements: !97)
!97 = !{!98, !102, !104, !105}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !96, file: !4, line: 266, baseType: !99, size: 64, align: 64)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !100, line: 40, baseType: !101)
!100 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!101 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !96, file: !4, line: 267, baseType: !103, size: 64, align: 64)
!103 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !96, file: !4, line: 268, baseType: !77, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !96, file: !4, line: 270, baseType: !106, size: 64, align: 32)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !107, line: 61, baseType: !108)
!107 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !107, line: 58, size: 64, align: 32, elements: !109)
!109 = !{!110, !111}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !108, file: !107, line: 59, baseType: !93, size: 32, align: 32)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !108, file: !107, line: 60, baseType: !93, size: 32, align: 32, offset: 32)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !88, file: !4, line: 272, baseType: !103, size: 64, align: 64, offset: 256)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !88, file: !4, line: 273, baseType: !103, size: 64, align: 64, offset: 320)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !88, file: !4, line: 275, baseType: !93, size: 32, align: 32, offset: 384)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !88, file: !4, line: 300, baseType: !77, size: 64, align: 64, offset: 448)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !74, file: !26, line: 93, baseType: !93, size: 32, align: 32, offset: 192)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !74, file: !26, line: 99, baseType: !93, size: 32, align: 32, offset: 224)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !74, file: !26, line: 108, baseType: !93, size: 32, align: 32, offset: 256)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !74, file: !26, line: 113, baseType: !120, size: 64, align: 64, offset: 320)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64, align: 64)
!121 = !DISubroutineType(types: !122)
!122 = !{!84, !84, !84}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !74, file: !26, line: 123, baseType: !124, size: 64, align: 64, offset: 384)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64, align: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{!127, !127}
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64, align: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !74)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !74, file: !26, line: 130, baseType: !130, size: 32, align: 32, offset: 448)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !74, file: !26, line: 136, baseType: !132, size: 64, align: 64, offset: 512)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DISubroutineType(types: !134)
!134 = !{!130, !84}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !74, file: !26, line: 142, baseType: !136, size: 64, align: 64, offset: 576)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64, align: 64)
!137 = !DISubroutineType(types: !138)
!138 = !{!93, !139, !84, !77, !93}
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64, align: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64, align: 64)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !142)
!142 = !{!143, !155, !156}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !141, file: !4, line: 360, baseType: !144, size: 64, align: 64)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64, align: 64)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !147)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !148)
!148 = !{!149, !150, !151, !152, !153, !154}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !147, file: !4, line: 307, baseType: !77, size: 64, align: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !147, file: !4, line: 313, baseType: !103, size: 64, align: 64, offset: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !147, file: !4, line: 313, baseType: !103, size: 64, align: 64, offset: 128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !147, file: !4, line: 318, baseType: !103, size: 64, align: 64, offset: 192)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !147, file: !4, line: 318, baseType: !103, size: 64, align: 64, offset: 256)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !147, file: !4, line: 323, baseType: !93, size: 32, align: 32, offset: 320)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !141, file: !4, line: 364, baseType: !93, size: 32, align: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !141, file: !4, line: 368, baseType: !93, size: 32, align: 32, offset: 96)
!157 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !71, line: 37, type: !158, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption }>* @options)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 36352, align: 64, elements: !161)
!159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !88)
!161 = !{!162}
!162 = !DISubrange(count: 71)
!163 = !{i32 2, !"Dwarf Version", i32 4}
!164 = !{i32 2, !"Debug Info Version", i32 3}
!165 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!166 = distinct !DISubprogram(name: "swr_get_class", scope: !71, file: !71, line: 144, type: !167, isLocal: false, isDefinition: true, scopeLine: 145, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !170)
!167 = !DISubroutineType(types: !168)
!168 = !{!169}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64)
!170 = !{}
!171 = !DILocation(line: 146, column: 5, scope: !166)
!172 = distinct !DISubprogram(name: "swr_alloc", scope: !71, file: !71, line: 149, type: !173, isLocal: false, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !170)
!173 = !DISubroutineType(types: !174)
!174 = !{!175}
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64, align: 64)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SwrContext", file: !177, line: 95, size: 687232, align: 64, elements: !178)
!177 = !DIFile(filename: "libswresample/swresample_internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libswresample--libswresample.a")
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !192, !193, !194, !195, !196, !197, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !284, !285, !286, !289, !339, !342, !344, !345, !346, !347, !348, !351, !355, !363, !364, !369, !370}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !176, file: !177, line: 96, baseType: !169, size: 64, align: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !176, file: !177, line: 97, baseType: !93, size: 32, align: 32, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "log_ctx", scope: !176, file: !177, line: 98, baseType: !84, size: 64, align: 64, offset: 128)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "in_sample_fmt", scope: !176, file: !177, line: 99, baseType: !46, size: 32, align: 32, offset: 192)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "int_sample_fmt", scope: !176, file: !177, line: 100, baseType: !46, size: 32, align: 32, offset: 224)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "out_sample_fmt", scope: !176, file: !177, line: 101, baseType: !46, size: 32, align: 32, offset: 256)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_ch_layout", scope: !176, file: !177, line: 102, baseType: !99, size: 64, align: 64, offset: 320)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_ch_layout", scope: !176, file: !177, line: 103, baseType: !99, size: 64, align: 64, offset: 384)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "in_sample_rate", scope: !176, file: !177, line: 104, baseType: !93, size: 32, align: 32, offset: 448)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_sample_rate", scope: !176, file: !177, line: 105, baseType: !93, size: 32, align: 32, offset: 480)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !176, file: !177, line: 106, baseType: !93, size: 32, align: 32, offset: 512)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "slev", scope: !176, file: !177, line: 107, baseType: !191, size: 32, align: 32, offset: 544)
!191 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "clev", scope: !176, file: !177, line: 108, baseType: !191, size: 32, align: 32, offset: 576)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_mix_level", scope: !176, file: !177, line: 109, baseType: !191, size: 32, align: 32, offset: 608)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "rematrix_volume", scope: !176, file: !177, line: 110, baseType: !191, size: 32, align: 32, offset: 640)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "rematrix_maxval", scope: !176, file: !177, line: 111, baseType: !191, size: 32, align: 32, offset: 672)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_encoding", scope: !176, file: !177, line: 112, baseType: !93, size: 32, align: 32, offset: 704)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "channel_map", scope: !176, file: !177, line: 113, baseType: !198, size: 64, align: 64, offset: 768)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64, align: 64)
!199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "used_ch_count", scope: !176, file: !177, line: 114, baseType: !93, size: 32, align: 32, offset: 832)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !176, file: !177, line: 115, baseType: !93, size: 32, align: 32, offset: 864)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "user_in_ch_count", scope: !176, file: !177, line: 117, baseType: !93, size: 32, align: 32, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "user_out_ch_count", scope: !176, file: !177, line: 118, baseType: !93, size: 32, align: 32, offset: 928)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "user_used_ch_count", scope: !176, file: !177, line: 119, baseType: !93, size: 32, align: 32, offset: 960)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "user_in_ch_layout", scope: !176, file: !177, line: 120, baseType: !99, size: 64, align: 64, offset: 1024)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "user_out_ch_layout", scope: !176, file: !177, line: 121, baseType: !99, size: 64, align: 64, offset: 1088)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "user_int_sample_fmt", scope: !176, file: !177, line: 122, baseType: !46, size: 32, align: 32, offset: 1152)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "user_dither_method", scope: !176, file: !177, line: 123, baseType: !93, size: 32, align: 32, offset: 1184)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !176, file: !177, line: 125, baseType: !210, size: 91584, align: 64, offset: 1216)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DitherContext", file: !177, line: 55, size: 91584, align: 64, elements: !211)
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220, !224, !229, !245, !246}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !210, file: !177, line: 56, baseType: !93, size: 32, align: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "noise_pos", scope: !210, file: !177, line: 57, baseType: !93, size: 32, align: 32, offset: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !210, file: !177, line: 58, baseType: !191, size: 32, align: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "noise_scale", scope: !210, file: !177, line: 59, baseType: !191, size: 32, align: 32, offset: 96)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ns_taps", scope: !210, file: !177, line: 60, baseType: !93, size: 32, align: 32, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "ns_scale", scope: !210, file: !177, line: 61, baseType: !191, size: 32, align: 32, offset: 160)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ns_scale_1", scope: !210, file: !177, line: 62, baseType: !191, size: 32, align: 32, offset: 192)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ns_pos", scope: !210, file: !177, line: 63, baseType: !93, size: 32, align: 32, offset: 224)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "ns_coeffs", scope: !210, file: !177, line: 64, baseType: !221, size: 640, align: 32, offset: 256)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 640, align: 32, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 20)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "ns_errors", scope: !210, file: !177, line: 65, baseType: !225, size: 81920, align: 32, offset: 896)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 81920, align: 32, elements: !226)
!226 = !{!227, !228}
!227 = !DISubrange(count: 64)
!228 = !DISubrange(count: 40)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "noise", scope: !210, file: !177, line: 66, baseType: !230, size: 4352, align: 64, offset: 82816)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioData", file: !177, line: 53, baseType: !231)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !177, line: 45, size: 4352, align: 64, elements: !232)
!232 = !{!233, !239, !240, !241, !242, !243, !244}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !231, file: !177, line: 46, baseType: !234, size: 4096, align: 64)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 4096, align: 64, elements: !238)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !100, line: 48, baseType: !237)
!237 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!238 = !{!227}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !231, file: !177, line: 47, baseType: !235, size: 64, align: 64, offset: 4096)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ch_count", scope: !231, file: !177, line: 48, baseType: !93, size: 32, align: 32, offset: 4160)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !231, file: !177, line: 49, baseType: !93, size: 32, align: 32, offset: 4192)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !231, file: !177, line: 50, baseType: !93, size: 32, align: 32, offset: 4224)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "planar", scope: !231, file: !177, line: 51, baseType: !93, size: 32, align: 32, offset: 4256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !231, file: !177, line: 52, baseType: !46, size: 32, align: 32, offset: 4288)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !210, file: !177, line: 67, baseType: !230, size: 4352, align: 64, offset: 87168)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "output_sample_bits", scope: !210, file: !177, line: 68, baseType: !93, size: 32, align: 32, offset: 91520)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "filter_size", scope: !176, file: !177, line: 127, baseType: !93, size: 32, align: 32, offset: 92800)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "phase_shift", scope: !176, file: !177, line: 128, baseType: !93, size: 32, align: 32, offset: 92832)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "linear_interp", scope: !176, file: !177, line: 129, baseType: !93, size: 32, align: 32, offset: 92864)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "exact_rational", scope: !176, file: !177, line: 130, baseType: !93, size: 32, align: 32, offset: 92896)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !176, file: !177, line: 131, baseType: !103, size: 64, align: 64, offset: 92928)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "filter_type", scope: !176, file: !177, line: 132, baseType: !93, size: 32, align: 32, offset: 92992)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "kaiser_beta", scope: !176, file: !177, line: 133, baseType: !103, size: 64, align: 64, offset: 93056)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !176, file: !177, line: 134, baseType: !103, size: 64, align: 64, offset: 93120)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "cheby", scope: !176, file: !177, line: 135, baseType: !93, size: 32, align: 32, offset: 93184)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "min_compensation", scope: !176, file: !177, line: 137, baseType: !191, size: 32, align: 32, offset: 93216)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "min_hard_compensation", scope: !176, file: !177, line: 138, baseType: !191, size: 32, align: 32, offset: 93248)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "soft_compensation_duration", scope: !176, file: !177, line: 139, baseType: !191, size: 32, align: 32, offset: 93280)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "max_soft_compensation", scope: !176, file: !177, line: 140, baseType: !191, size: 32, align: 32, offset: 93312)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "async", scope: !176, file: !177, line: 141, baseType: !191, size: 32, align: 32, offset: 93344)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "firstpts_in_samples", scope: !176, file: !177, line: 142, baseType: !99, size: 64, align: 64, offset: 93376)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "resample_first", scope: !176, file: !177, line: 144, baseType: !93, size: 32, align: 32, offset: 93440)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "rematrix", scope: !176, file: !177, line: 145, baseType: !93, size: 32, align: 32, offset: 93472)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "rematrix_custom", scope: !176, file: !177, line: 146, baseType: !93, size: 32, align: 32, offset: 93504)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !176, file: !177, line: 148, baseType: !230, size: 4352, align: 64, offset: 93568)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "postin", scope: !176, file: !177, line: 149, baseType: !230, size: 4352, align: 64, offset: 97920)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "midbuf", scope: !176, file: !177, line: 150, baseType: !230, size: 4352, align: 64, offset: 102272)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "preout", scope: !176, file: !177, line: 151, baseType: !230, size: 4352, align: 64, offset: 106624)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !176, file: !177, line: 152, baseType: !230, size: 4352, align: 64, offset: 110976)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buffer", scope: !176, file: !177, line: 153, baseType: !230, size: 4352, align: 64, offset: 115328)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "silence", scope: !176, file: !177, line: 154, baseType: !230, size: 4352, align: 64, offset: 119680)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "drop_temp", scope: !176, file: !177, line: 155, baseType: !230, size: 4352, align: 64, offset: 124032)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "in_buffer_index", scope: !176, file: !177, line: 156, baseType: !93, size: 32, align: 32, offset: 128384)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "in_buffer_count", scope: !176, file: !177, line: 157, baseType: !93, size: 32, align: 32, offset: 128416)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "resample_in_constraint", scope: !176, file: !177, line: 158, baseType: !93, size: 32, align: 32, offset: 128448)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "flushed", scope: !176, file: !177, line: 159, baseType: !93, size: 32, align: 32, offset: 128480)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "outpts", scope: !176, file: !177, line: 160, baseType: !99, size: 64, align: 64, offset: 128512)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "firstpts", scope: !176, file: !177, line: 161, baseType: !99, size: 64, align: 64, offset: 128576)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "drop_output", scope: !176, file: !177, line: 162, baseType: !93, size: 32, align: 32, offset: 128640)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_samples_fixup", scope: !176, file: !177, line: 163, baseType: !103, size: 64, align: 64, offset: 128704)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "in_convert", scope: !176, file: !177, line: 165, baseType: !282, size: 64, align: 64, offset: 128768)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "AudioConvert", file: !177, line: 165, flags: DIFlagFwdDecl)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "out_convert", scope: !176, file: !177, line: 166, baseType: !282, size: 64, align: 64, offset: 128832)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "full_convert", scope: !176, file: !177, line: 167, baseType: !282, size: 64, align: 64, offset: 128896)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "resample", scope: !176, file: !177, line: 168, baseType: !287, size: 64, align: 64, offset: 128960)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DICompositeType(tag: DW_TAG_structure_type, name: "ResampleContext", file: !177, line: 71, flags: DIFlagFwdDecl)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "resampler", scope: !176, file: !177, line: 169, baseType: !290, size: 64, align: 64, offset: 129024)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Resampler", file: !177, line: 81, size: 512, align: 64, elements: !293)
!293 = !{!294, !299, !305, !312, !317, !322, !327, !334}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !292, file: !177, line: 82, baseType: !295, size: 64, align: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "resample_init_func", file: !177, line: 71, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64, align: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!287, !287, !93, !93, !93, !93, !93, !103, !46, !63, !103, !103, !93, !93}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !292, file: !177, line: 83, baseType: !300, size: 64, align: 64, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "resample_free_func", file: !177, line: 73, baseType: !301)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64, align: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{null, !304}
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_resample", scope: !292, file: !177, line: 84, baseType: !306, size: 64, align: 64, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiple_resample_func", file: !177, line: 74, baseType: !307)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64, align: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{!93, !287, !310, !93, !310, !93, !311}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !292, file: !177, line: 85, baseType: !313, size: 64, align: 64, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "resample_flush_func", file: !177, line: 75, baseType: !314)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64, align: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{!93, !175}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "set_compensation", scope: !292, file: !177, line: 86, baseType: !318, size: 64, align: 64, offset: 256)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "set_compensation_func", file: !177, line: 76, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!93, !287, !93, !93}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "get_delay", scope: !292, file: !177, line: 87, baseType: !323, size: 64, align: 64, offset: 320)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "get_delay_func", file: !177, line: 77, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!99, !175, !99}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "invert_initial_buffer", scope: !292, file: !177, line: 88, baseType: !328, size: 64, align: 64, offset: 384)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "invert_initial_buffer_func", file: !177, line: 78, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64, align: 64)
!330 = !DISubroutineType(types: !331)
!331 = !{!93, !287, !310, !332, !93, !311, !311}
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64)
!333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "get_out_samples", scope: !292, file: !177, line: 89, baseType: !335, size: 64, align: 64, offset: 448)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "get_out_samples_func", file: !177, line: 79, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64, align: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!99, !175, !93}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !176, file: !177, line: 171, baseType: !340, size: 262144, align: 64, offset: 129088)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 262144, align: 64, elements: !341)
!341 = !{!227, !227}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_flt", scope: !176, file: !177, line: 172, baseType: !343, size: 131072, align: 32, offset: 391232)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 131072, align: 32, elements: !341)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "native_matrix", scope: !176, file: !177, line: 173, baseType: !235, size: 64, align: 64, offset: 522304)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "native_one", scope: !176, file: !177, line: 174, baseType: !235, size: 64, align: 64, offset: 522368)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "native_simd_one", scope: !176, file: !177, line: 175, baseType: !235, size: 64, align: 64, offset: 522432)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "native_simd_matrix", scope: !176, file: !177, line: 176, baseType: !235, size: 64, align: 64, offset: 522496)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "matrix32", scope: !176, file: !177, line: 177, baseType: !349, size: 131072, align: 32, offset: 522560)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 131072, align: 32, elements: !341)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !100, line: 38, baseType: !93)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_ch", scope: !176, file: !177, line: 178, baseType: !352, size: 33280, align: 8, offset: 653632)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 33280, align: 8, elements: !353)
!353 = !{!227, !354}
!354 = !DISubrange(count: 65)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "mix_1_1_f", scope: !176, file: !177, line: 179, baseType: !356, size: 64, align: 64, offset: 686912)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64, align: 64)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "mix_1_1_func_type", file: !177, line: 40, baseType: !358)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !84, !360, !84, !362, !362}
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64, align: 64)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "integer", file: !177, line: 35, baseType: !99)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "mix_1_1_simd", scope: !176, file: !177, line: 180, baseType: !356, size: 64, align: 64, offset: 686976)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mix_2_1_f", scope: !176, file: !177, line: 182, baseType: !365, size: 64, align: 64, offset: 687040)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64, align: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "mix_2_1_func_type", file: !177, line: 41, baseType: !367)
!367 = !DISubroutineType(types: !368)
!368 = !{null, !84, !360, !360, !84, !362, !362, !362}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "mix_2_1_simd", scope: !176, file: !177, line: 183, baseType: !365, size: 64, align: 64, offset: 687104)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "mix_any_f", scope: !176, file: !177, line: 185, baseType: !371, size: 64, align: 64, offset: 687168)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "mix_any_func_type", file: !177, line: 43, baseType: !373)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !375, !376, !84, !362}
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64, align: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!379 = !DILocalVariable(name: "s", scope: !172, file: !71, line: 150, type: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64, align: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "SwrContext", file: !64, line: 182, baseType: !176)
!382 = !DIExpression()
!383 = !DILocation(line: 150, column: 17, scope: !172)
!384 = !DILocation(line: 150, column: 20, scope: !172)
!385 = !DILocation(line: 151, column: 8, scope: !386)
!386 = distinct !DILexicalBlock(scope: !172, file: !71, line: 151, column: 8)
!387 = !DILocation(line: 151, column: 8, scope: !172)
!388 = !DILocation(line: 152, column: 9, scope: !389)
!389 = distinct !DILexicalBlock(scope: !386, file: !71, line: 151, column: 10)
!390 = !DILocation(line: 152, column: 12, scope: !389)
!391 = !DILocation(line: 152, column: 20, scope: !389)
!392 = !DILocation(line: 153, column: 29, scope: !389)
!393 = !DILocation(line: 153, column: 9, scope: !389)
!394 = !DILocation(line: 154, column: 5, scope: !389)
!395 = !DILocation(line: 155, column: 12, scope: !172)
!396 = !DILocation(line: 155, column: 5, scope: !172)
!397 = distinct !DISubprogram(name: "context_to_name", scope: !71, file: !71, line: 130, type: !82, isLocal: true, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !170)
!398 = !DILocalVariable(name: "ptr", arg: 1, scope: !397, file: !71, line: 130, type: !84)
!399 = !DILocation(line: 130, column: 42, scope: !397)
!400 = !DILocation(line: 131, column: 5, scope: !397)
