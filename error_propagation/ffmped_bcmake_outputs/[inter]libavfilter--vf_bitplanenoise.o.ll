; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--vf_bitplanenoise.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--vf_bitplanenoise.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFilterPad = type { i8*, i32, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)*, %struct.AVFrame* (%struct.AVFilterLink*, i32)*, i32 (%struct.AVFilterLink*, %struct.AVFrame*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterInternal = type { i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)* }
%struct.AVFilterCommand = type { double, i8*, i8*, i32, %struct.AVFilterCommand* }
%struct.AVFilterFormats = type { i32, i32*, i32, %struct.AVFilterFormats*** }
%struct.AVFilterChannelLayouts = type { i64*, i32, i8, i8, i32, %struct.AVFilterChannelLayouts*** }
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type { i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, %struct.FFFrameQueueGlobal }
%struct.FFFrameQueueGlobal = type { i8 }
%struct.BPNContext = type { %struct.AVClass*, i32, i32, i32, [4 x i32], [4 x i32], i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [14 x i8] c"bitplanenoise\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"Measure bit plane noise.\00", align 1
@inputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* @filter_frame, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @config_input, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@bitplanenoise_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @bitplanenoise_options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_vf_bitplanenoise = global %struct.AVFilter { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @inputs, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @outputs, i32 0, i32 0), %struct.AVClass* @bitplanenoise_class, i32 65536, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* @query_formats, i32 56, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"lavfi.bitplanenoise.%d.%d\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@bitplanenoise_options = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i32 0, i32 0), i32 8, i32 1, %union.anon { i64 1 }, double 1.000000e+00, double 1.600000e+01, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i32 0, i32 0), i32 12, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.5 = private unnamed_addr constant [9 x i8] c"bitplane\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"set bit plane to use for measuring noise\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"show noisy pixels\00", align 1
@query_formats.pixfmts = internal constant [40 x i32] [i32 5, i32 4, i32 0, i32 7, i32 31, i32 13, i32 14, i32 12, i32 140, i32 32, i32 68, i32 72, i32 62, i32 70, i32 66, i32 64, i32 154, i32 133, i32 129, i32 125, i32 156, i32 135, i32 131, i32 127, i32 51, i32 49, i32 47, i32 73, i32 75, i32 77, i32 137, i32 139, i32 79, i32 8, i32 176, i32 171, i32 169, i32 184, i32 30, i32 -1], align 16

; Function Attrs: nounwind uwtable
define internal i32 @query_formats(%struct.AVFilterContext* %ctx) #0 !dbg !798 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %formats = alloca %struct.AVFilterFormats*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !807, metadata !808), !dbg !809
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %formats, metadata !810, metadata !808), !dbg !811
  %call = call %struct.AVFilterFormats* @ff_make_format_list(i32* getelementptr inbounds ([40 x i32], [40 x i32]* @query_formats.pixfmts, i32 0, i32 0)), !dbg !812
  store %struct.AVFilterFormats* %call, %struct.AVFilterFormats** %formats, align 8, !dbg !811
  %0 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !813
  %tobool = icmp ne %struct.AVFilterFormats* %0, null, !dbg !813
  br i1 %tobool, label %if.end, label %if.then, !dbg !815

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !816
  br label %return, !dbg !816

if.end:                                           ; preds = %entry
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !817
  %2 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !818
  %call1 = call i32 @ff_set_common_formats(%struct.AVFilterContext* %1, %struct.AVFilterFormats* %2), !dbg !819
  store i32 %call1, i32* %retval, align 4, !dbg !820
  br label %return, !dbg !820

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !821
  ret i32 %3, !dbg !821
}

; Function Attrs: nounwind uwtable
define internal i32 @filter_frame(%struct.AVFilterLink* %inlink, %struct.AVFrame* %in) #0 !dbg !822 {
entry:
  %retval = alloca i32, align 4
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %in.addr = alloca %struct.AVFrame*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.BPNContext*, align 8
  %mask = alloca i32, align 4
  %factor = alloca i32, align 4
  %stats = alloca [4 x float], align 16
  %metabuf = alloca [128 x i8], align 16
  %plane = alloca i32, align 4
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %bit = alloca i32, align 4
  %out = alloca %struct.AVFrame*, align 8
  %linesize = alloca i32, align 4
  %dlinesize = alloca i32, align 4
  %val = alloca i8*, align 8
  %dst18 = alloca i8*, align 8
  %linesize347 = alloca i32, align 4
  %dlinesize351 = alloca i32, align 4
  %val356 = alloca i16*, align 8
  %dst360 = alloca i16*, align 8
  %key = alloca [32 x i8], align 16
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !823, metadata !808), !dbg !824
  store %struct.AVFrame* %in, %struct.AVFrame** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %in.addr, metadata !825, metadata !808), !dbg !826
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !827, metadata !808), !dbg !828
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !829
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 2, !dbg !830
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !830
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !828
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !831, metadata !808), !dbg !832
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !833
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 7, !dbg !834
  %3 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !834
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %3, i64 0, !dbg !833
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !833
  store %struct.AVFilterLink* %4, %struct.AVFilterLink** %outlink, align 8, !dbg !832
  call void @llvm.dbg.declare(metadata %struct.BPNContext** %s, metadata !835, metadata !808), !dbg !850
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !851
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 9, !dbg !852
  %6 = load i8*, i8** %priv, align 8, !dbg !852
  %7 = bitcast i8* %6 to %struct.BPNContext*, !dbg !851
  store %struct.BPNContext* %7, %struct.BPNContext** %s, align 8, !dbg !850
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !853, metadata !808), !dbg !855
  %8 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !856
  %bitplane = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %8, i32 0, i32 1, !dbg !857
  %9 = load i32, i32* %bitplane, align 8, !dbg !857
  %sub = sub nsw i32 %9, 1, !dbg !858
  %shl = shl i32 1, %sub, !dbg !859
  store i32 %shl, i32* %mask, align 4, !dbg !855
  call void @llvm.dbg.declare(metadata i32* %factor, metadata !860, metadata !808), !dbg !861
  %10 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !862
  %depth = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %10, i32 0, i32 6, !dbg !863
  %11 = load i32, i32* %depth, align 4, !dbg !863
  %shl1 = shl i32 1, %11, !dbg !864
  %sub2 = sub nsw i32 %shl1, 1, !dbg !865
  store i32 %sub2, i32* %factor, align 4, !dbg !861
  call void @llvm.dbg.declare(metadata [4 x float]* %stats, metadata !866, metadata !808), !dbg !869
  %12 = bitcast [4 x float]* %stats to i8*, !dbg !869
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 16, i32 16, i1 false), !dbg !869
  call void @llvm.dbg.declare(metadata [128 x i8]* %metabuf, metadata !870, metadata !808), !dbg !874
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !875, metadata !808), !dbg !876
  call void @llvm.dbg.declare(metadata i32* %y, metadata !877, metadata !808), !dbg !878
  call void @llvm.dbg.declare(metadata i32* %x, metadata !879, metadata !808), !dbg !880
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !881, metadata !808), !dbg !882
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !883, metadata !808), !dbg !884
  %13 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !885
  %filter = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %13, i32 0, i32 2, !dbg !886
  %14 = load i32, i32* %filter, align 4, !dbg !886
  %tobool = icmp ne i32 %14, 0, !dbg !885
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !885

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !887

cond.false:                                       ; preds = %entry
  %15 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !889
  br label %cond.end, !dbg !891

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.AVFrame* [ null, %cond.true ], [ %15, %cond.false ], !dbg !892
  store %struct.AVFrame* %cond, %struct.AVFrame** %out, align 8, !dbg !894
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !895
  %tobool3 = icmp ne %struct.AVFrame* %16, null, !dbg !895
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !897

if.then:                                          ; preds = %cond.end
  %17 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !898
  %18 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !900
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %18, i32 0, i32 5, !dbg !901
  %19 = load i32, i32* %w, align 4, !dbg !901
  %20 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !902
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %20, i32 0, i32 6, !dbg !903
  %21 = load i32, i32* %h, align 8, !dbg !903
  %call = call %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink* %17, i32 %19, i32 %21), !dbg !904
  store %struct.AVFrame* %call, %struct.AVFrame** %out, align 8, !dbg !905
  %22 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !906
  %tobool4 = icmp ne %struct.AVFrame* %22, null, !dbg !906
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !908

if.then5:                                         ; preds = %if.then
  call void @av_frame_free(%struct.AVFrame** %in.addr), !dbg !909
  store i32 -12, i32* %retval, align 4, !dbg !911
  br label %return, !dbg !911

if.end:                                           ; preds = %if.then
  %23 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !912
  %24 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !913
  %call6 = call i32 @av_frame_copy_props(%struct.AVFrame* %23, %struct.AVFrame* %24), !dbg !914
  br label %if.end7, !dbg !915

if.end7:                                          ; preds = %if.end, %cond.end
  %25 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !916
  %depth8 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %25, i32 0, i32 6, !dbg !918
  %26 = load i32, i32* %depth8, align 4, !dbg !918
  %cmp = icmp sle i32 %26, 8, !dbg !919
  br i1 %cmp, label %if.then9, label %if.else, !dbg !920

if.then9:                                         ; preds = %if.end7
  store i32 0, i32* %plane, align 4, !dbg !921
  br label %for.cond, !dbg !924

for.cond:                                         ; preds = %for.inc339, %if.then9
  %27 = load i32, i32* %plane, align 4, !dbg !925
  %28 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !928
  %nb_planes = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %28, i32 0, i32 3, !dbg !929
  %29 = load i32, i32* %nb_planes, align 8, !dbg !929
  %cmp10 = icmp slt i32 %27, %29, !dbg !930
  br i1 %cmp10, label %for.body, label %for.end341, !dbg !931

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %linesize, metadata !932, metadata !808), !dbg !934
  %30 = load i32, i32* %plane, align 4, !dbg !935
  %idxprom = sext i32 %30 to i64, !dbg !936
  %31 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !936
  %linesize11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 1, !dbg !937
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize11, i64 0, i64 %idxprom, !dbg !936
  %32 = load i32, i32* %arrayidx12, align 4, !dbg !936
  store i32 %32, i32* %linesize, align 4, !dbg !934
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !938, metadata !808), !dbg !939
  %33 = load i32, i32* %plane, align 4, !dbg !940
  %idxprom13 = sext i32 %33 to i64, !dbg !941
  %34 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !941
  %linesize14 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 1, !dbg !942
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize14, i64 0, i64 %idxprom13, !dbg !941
  %35 = load i32, i32* %arrayidx15, align 4, !dbg !941
  store i32 %35, i32* %dlinesize, align 4, !dbg !939
  call void @llvm.dbg.declare(metadata i8** %val, metadata !943, metadata !808), !dbg !944
  %36 = load i32, i32* %plane, align 4, !dbg !945
  %idxprom16 = sext i32 %36 to i64, !dbg !946
  %37 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !946
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 0, !dbg !947
  %arrayidx17 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom16, !dbg !946
  %38 = load i8*, i8** %arrayidx17, align 8, !dbg !946
  store i8* %38, i8** %val, align 8, !dbg !944
  call void @llvm.dbg.declare(metadata i8** %dst18, metadata !948, metadata !808), !dbg !949
  %39 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !950
  %filter19 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %39, i32 0, i32 2, !dbg !951
  %40 = load i32, i32* %filter19, align 4, !dbg !951
  %tobool20 = icmp ne i32 %40, 0, !dbg !950
  br i1 %tobool20, label %cond.true21, label %cond.false25, !dbg !950

cond.true21:                                      ; preds = %for.body
  %41 = load i32, i32* %plane, align 4, !dbg !952
  %idxprom22 = sext i32 %41 to i64, !dbg !954
  %42 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !954
  %data23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 0, !dbg !955
  %arrayidx24 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data23, i64 0, i64 %idxprom22, !dbg !954
  %43 = load i8*, i8** %arrayidx24, align 8, !dbg !954
  br label %cond.end26, !dbg !956

cond.false25:                                     ; preds = %for.body
  br label %cond.end26, !dbg !957

cond.end26:                                       ; preds = %cond.false25, %cond.true21
  %cond27 = phi i8* [ %43, %cond.true21 ], [ null, %cond.false25 ], !dbg !959
  store i8* %cond27, i8** %dst18, align 8, !dbg !961
  store i32 0, i32* %y, align 4, !dbg !962
  br label %for.cond28, !dbg !964

for.cond28:                                       ; preds = %for.inc182, %cond.end26
  %44 = load i32, i32* %y, align 4, !dbg !965
  %45 = load i32, i32* %plane, align 4, !dbg !968
  %idxprom29 = sext i32 %45 to i64, !dbg !969
  %46 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !969
  %planeheight = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %46, i32 0, i32 4, !dbg !970
  %arrayidx30 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight, i64 0, i64 %idxprom29, !dbg !969
  %47 = load i32, i32* %arrayidx30, align 4, !dbg !969
  %sub31 = sub nsw i32 %47, 1, !dbg !971
  %cmp32 = icmp slt i32 %44, %sub31, !dbg !972
  br i1 %cmp32, label %for.body33, label %for.end184, !dbg !973

for.body33:                                       ; preds = %for.cond28
  %48 = load i8*, i8** %val, align 8, !dbg !974
  %arrayidx34 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !974
  %49 = load i8, i8* %arrayidx34, align 1, !dbg !974
  %conv = zext i8 %49 to i32, !dbg !974
  %50 = load i32, i32* %mask, align 4, !dbg !977
  %and = and i32 %conv, %50, !dbg !978
  %51 = load i8*, i8** %val, align 8, !dbg !979
  %arrayidx35 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !979
  %52 = load i8, i8* %arrayidx35, align 1, !dbg !979
  %conv36 = zext i8 %52 to i32, !dbg !979
  %53 = load i32, i32* %mask, align 4, !dbg !980
  %and37 = and i32 %conv36, %53, !dbg !981
  %cmp38 = icmp eq i32 %and, %and37, !dbg !982
  %conv39 = zext i1 %cmp38 to i32, !dbg !982
  %54 = load i8*, i8** %val, align 8, !dbg !983
  %arrayidx40 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !983
  %55 = load i8, i8* %arrayidx40, align 1, !dbg !983
  %conv41 = zext i8 %55 to i32, !dbg !983
  %56 = load i32, i32* %mask, align 4, !dbg !984
  %and42 = and i32 %conv41, %56, !dbg !985
  %57 = load i32, i32* %linesize, align 4, !dbg !986
  %add = add nsw i32 1, %57, !dbg !987
  %add43 = add nsw i32 0, %add, !dbg !988
  %idxprom44 = sext i32 %add43 to i64, !dbg !989
  %58 = load i8*, i8** %val, align 8, !dbg !989
  %arrayidx45 = getelementptr inbounds i8, i8* %58, i64 %idxprom44, !dbg !989
  %59 = load i8, i8* %arrayidx45, align 1, !dbg !989
  %conv46 = zext i8 %59 to i32, !dbg !989
  %60 = load i32, i32* %mask, align 4, !dbg !990
  %and47 = and i32 %conv46, %60, !dbg !991
  %cmp48 = icmp eq i32 %and42, %and47, !dbg !992
  %conv49 = zext i1 %cmp48 to i32, !dbg !992
  %add50 = add nsw i32 %conv39, %conv49, !dbg !993
  %61 = load i8*, i8** %val, align 8, !dbg !994
  %arrayidx51 = getelementptr inbounds i8, i8* %61, i64 0, !dbg !994
  %62 = load i8, i8* %arrayidx51, align 1, !dbg !994
  %conv52 = zext i8 %62 to i32, !dbg !994
  %63 = load i32, i32* %mask, align 4, !dbg !995
  %and53 = and i32 %conv52, %63, !dbg !996
  %64 = load i32, i32* %linesize, align 4, !dbg !997
  %add54 = add nsw i32 0, %64, !dbg !998
  %idxprom55 = sext i32 %add54 to i64, !dbg !999
  %65 = load i8*, i8** %val, align 8, !dbg !999
  %arrayidx56 = getelementptr inbounds i8, i8* %65, i64 %idxprom55, !dbg !999
  %66 = load i8, i8* %arrayidx56, align 1, !dbg !999
  %conv57 = zext i8 %66 to i32, !dbg !999
  %67 = load i32, i32* %mask, align 4, !dbg !1000
  %and58 = and i32 %conv57, %67, !dbg !1001
  %cmp59 = icmp eq i32 %and53, %and58, !dbg !1002
  %conv60 = zext i1 %cmp59 to i32, !dbg !1002
  %add61 = add nsw i32 %add50, %conv60, !dbg !1003
  %cmp62 = icmp sgt i32 %add61, 1, !dbg !1004
  %conv63 = zext i1 %cmp62 to i32, !dbg !1004
  store i32 %conv63, i32* %bit, align 4, !dbg !1005
  %68 = load i8*, i8** %dst18, align 8, !dbg !1006
  %tobool64 = icmp ne i8* %68, null, !dbg !1006
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !1008

if.then65:                                        ; preds = %for.body33
  %69 = load i32, i32* %factor, align 4, !dbg !1009
  %70 = load i32, i32* %bit, align 4, !dbg !1011
  %mul = mul nsw i32 %69, %70, !dbg !1012
  %conv66 = trunc i32 %mul to i8, !dbg !1009
  %71 = load i8*, i8** %dst18, align 8, !dbg !1013
  %arrayidx67 = getelementptr inbounds i8, i8* %71, i64 0, !dbg !1013
  store i8 %conv66, i8* %arrayidx67, align 1, !dbg !1014
  br label %if.end68, !dbg !1013

if.end68:                                         ; preds = %if.then65, %for.body33
  %72 = load i32, i32* %bit, align 4, !dbg !1015
  %conv69 = sitofp i32 %72 to float, !dbg !1015
  %73 = load i32, i32* %plane, align 4, !dbg !1017
  %idxprom70 = sext i32 %73 to i64, !dbg !1018
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom70, !dbg !1018
  %74 = load float, float* %arrayidx71, align 4, !dbg !1019
  %add72 = fadd float %74, %conv69, !dbg !1019
  store float %add72, float* %arrayidx71, align 4, !dbg !1019
  store i32 1, i32* %x, align 4, !dbg !1020
  br label %for.cond73, !dbg !1022

for.cond73:                                       ; preds = %for.inc, %if.end68
  %75 = load i32, i32* %x, align 4, !dbg !1023
  %76 = load i32, i32* %plane, align 4, !dbg !1026
  %idxprom74 = sext i32 %76 to i64, !dbg !1027
  %77 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1027
  %planewidth = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %77, i32 0, i32 5, !dbg !1028
  %arrayidx75 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth, i64 0, i64 %idxprom74, !dbg !1027
  %78 = load i32, i32* %arrayidx75, align 4, !dbg !1027
  %sub76 = sub nsw i32 %78, 1, !dbg !1029
  %cmp77 = icmp slt i32 %75, %sub76, !dbg !1030
  br i1 %cmp77, label %for.body79, label %for.end, !dbg !1031

for.body79:                                       ; preds = %for.cond73
  %79 = load i32, i32* %x, align 4, !dbg !1032
  %idxprom80 = sext i32 %79 to i64, !dbg !1035
  %80 = load i8*, i8** %val, align 8, !dbg !1035
  %arrayidx81 = getelementptr inbounds i8, i8* %80, i64 %idxprom80, !dbg !1035
  %81 = load i8, i8* %arrayidx81, align 1, !dbg !1035
  %conv82 = zext i8 %81 to i32, !dbg !1035
  %82 = load i32, i32* %mask, align 4, !dbg !1036
  %and83 = and i32 %conv82, %82, !dbg !1037
  %83 = load i32, i32* %x, align 4, !dbg !1038
  %add84 = add nsw i32 %83, -1, !dbg !1039
  %idxprom85 = sext i32 %add84 to i64, !dbg !1040
  %84 = load i8*, i8** %val, align 8, !dbg !1040
  %arrayidx86 = getelementptr inbounds i8, i8* %84, i64 %idxprom85, !dbg !1040
  %85 = load i8, i8* %arrayidx86, align 1, !dbg !1040
  %conv87 = zext i8 %85 to i32, !dbg !1040
  %86 = load i32, i32* %mask, align 4, !dbg !1041
  %and88 = and i32 %conv87, %86, !dbg !1042
  %cmp89 = icmp eq i32 %and83, %and88, !dbg !1043
  %conv90 = zext i1 %cmp89 to i32, !dbg !1043
  %87 = load i32, i32* %x, align 4, !dbg !1044
  %idxprom91 = sext i32 %87 to i64, !dbg !1045
  %88 = load i8*, i8** %val, align 8, !dbg !1045
  %arrayidx92 = getelementptr inbounds i8, i8* %88, i64 %idxprom91, !dbg !1045
  %89 = load i8, i8* %arrayidx92, align 1, !dbg !1045
  %conv93 = zext i8 %89 to i32, !dbg !1045
  %90 = load i32, i32* %mask, align 4, !dbg !1046
  %and94 = and i32 %conv93, %90, !dbg !1047
  %91 = load i32, i32* %x, align 4, !dbg !1048
  %add95 = add nsw i32 %91, 1, !dbg !1049
  %idxprom96 = sext i32 %add95 to i64, !dbg !1050
  %92 = load i8*, i8** %val, align 8, !dbg !1050
  %arrayidx97 = getelementptr inbounds i8, i8* %92, i64 %idxprom96, !dbg !1050
  %93 = load i8, i8* %arrayidx97, align 1, !dbg !1050
  %conv98 = zext i8 %93 to i32, !dbg !1050
  %94 = load i32, i32* %mask, align 4, !dbg !1051
  %and99 = and i32 %conv98, %94, !dbg !1052
  %cmp100 = icmp eq i32 %and94, %and99, !dbg !1053
  %conv101 = zext i1 %cmp100 to i32, !dbg !1053
  %add102 = add nsw i32 %conv90, %conv101, !dbg !1054
  %95 = load i32, i32* %x, align 4, !dbg !1055
  %idxprom103 = sext i32 %95 to i64, !dbg !1056
  %96 = load i8*, i8** %val, align 8, !dbg !1056
  %arrayidx104 = getelementptr inbounds i8, i8* %96, i64 %idxprom103, !dbg !1056
  %97 = load i8, i8* %arrayidx104, align 1, !dbg !1056
  %conv105 = zext i8 %97 to i32, !dbg !1056
  %98 = load i32, i32* %mask, align 4, !dbg !1057
  %and106 = and i32 %conv105, %98, !dbg !1058
  %99 = load i32, i32* %x, align 4, !dbg !1059
  %100 = load i32, i32* %linesize, align 4, !dbg !1060
  %add107 = add nsw i32 %99, %100, !dbg !1061
  %idxprom108 = sext i32 %add107 to i64, !dbg !1062
  %101 = load i8*, i8** %val, align 8, !dbg !1062
  %arrayidx109 = getelementptr inbounds i8, i8* %101, i64 %idxprom108, !dbg !1062
  %102 = load i8, i8* %arrayidx109, align 1, !dbg !1062
  %conv110 = zext i8 %102 to i32, !dbg !1062
  %103 = load i32, i32* %mask, align 4, !dbg !1063
  %and111 = and i32 %conv110, %103, !dbg !1064
  %cmp112 = icmp eq i32 %and106, %and111, !dbg !1065
  %conv113 = zext i1 %cmp112 to i32, !dbg !1065
  %add114 = add nsw i32 %add102, %conv113, !dbg !1066
  %cmp115 = icmp sgt i32 %add114, 1, !dbg !1067
  %conv116 = zext i1 %cmp115 to i32, !dbg !1067
  store i32 %conv116, i32* %bit, align 4, !dbg !1068
  %104 = load i8*, i8** %dst18, align 8, !dbg !1069
  %tobool117 = icmp ne i8* %104, null, !dbg !1069
  br i1 %tobool117, label %if.then118, label %if.end123, !dbg !1071

if.then118:                                       ; preds = %for.body79
  %105 = load i32, i32* %factor, align 4, !dbg !1072
  %106 = load i32, i32* %bit, align 4, !dbg !1074
  %mul119 = mul nsw i32 %105, %106, !dbg !1075
  %conv120 = trunc i32 %mul119 to i8, !dbg !1072
  %107 = load i32, i32* %x, align 4, !dbg !1076
  %idxprom121 = sext i32 %107 to i64, !dbg !1077
  %108 = load i8*, i8** %dst18, align 8, !dbg !1077
  %arrayidx122 = getelementptr inbounds i8, i8* %108, i64 %idxprom121, !dbg !1077
  store i8 %conv120, i8* %arrayidx122, align 1, !dbg !1078
  br label %if.end123, !dbg !1077

if.end123:                                        ; preds = %if.then118, %for.body79
  %109 = load i32, i32* %bit, align 4, !dbg !1079
  %conv124 = sitofp i32 %109 to float, !dbg !1079
  %110 = load i32, i32* %plane, align 4, !dbg !1081
  %idxprom125 = sext i32 %110 to i64, !dbg !1082
  %arrayidx126 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom125, !dbg !1082
  %111 = load float, float* %arrayidx126, align 4, !dbg !1083
  %add127 = fadd float %111, %conv124, !dbg !1083
  store float %add127, float* %arrayidx126, align 4, !dbg !1083
  br label %for.inc, !dbg !1084

for.inc:                                          ; preds = %if.end123
  %112 = load i32, i32* %x, align 4, !dbg !1085
  %inc = add nsw i32 %112, 1, !dbg !1085
  store i32 %inc, i32* %x, align 4, !dbg !1085
  br label %for.cond73, !dbg !1087, !llvm.loop !1088

for.end:                                          ; preds = %for.cond73
  %113 = load i32, i32* %x, align 4, !dbg !1090
  %idxprom128 = sext i32 %113 to i64, !dbg !1092
  %114 = load i8*, i8** %val, align 8, !dbg !1092
  %arrayidx129 = getelementptr inbounds i8, i8* %114, i64 %idxprom128, !dbg !1092
  %115 = load i8, i8* %arrayidx129, align 1, !dbg !1092
  %conv130 = zext i8 %115 to i32, !dbg !1092
  %116 = load i32, i32* %mask, align 4, !dbg !1093
  %and131 = and i32 %conv130, %116, !dbg !1094
  %117 = load i32, i32* %x, align 4, !dbg !1095
  %add132 = add nsw i32 %117, -1, !dbg !1096
  %idxprom133 = sext i32 %add132 to i64, !dbg !1097
  %118 = load i8*, i8** %val, align 8, !dbg !1097
  %arrayidx134 = getelementptr inbounds i8, i8* %118, i64 %idxprom133, !dbg !1097
  %119 = load i8, i8* %arrayidx134, align 1, !dbg !1097
  %conv135 = zext i8 %119 to i32, !dbg !1097
  %120 = load i32, i32* %mask, align 4, !dbg !1098
  %and136 = and i32 %conv135, %120, !dbg !1099
  %cmp137 = icmp eq i32 %and131, %and136, !dbg !1100
  %conv138 = zext i1 %cmp137 to i32, !dbg !1100
  %121 = load i32, i32* %x, align 4, !dbg !1101
  %idxprom139 = sext i32 %121 to i64, !dbg !1102
  %122 = load i8*, i8** %val, align 8, !dbg !1102
  %arrayidx140 = getelementptr inbounds i8, i8* %122, i64 %idxprom139, !dbg !1102
  %123 = load i8, i8* %arrayidx140, align 1, !dbg !1102
  %conv141 = zext i8 %123 to i32, !dbg !1102
  %124 = load i32, i32* %mask, align 4, !dbg !1103
  %and142 = and i32 %conv141, %124, !dbg !1104
  %125 = load i32, i32* %x, align 4, !dbg !1105
  %126 = load i32, i32* %linesize, align 4, !dbg !1106
  %add143 = add nsw i32 -1, %126, !dbg !1107
  %add144 = add nsw i32 %125, %add143, !dbg !1108
  %idxprom145 = sext i32 %add144 to i64, !dbg !1109
  %127 = load i8*, i8** %val, align 8, !dbg !1109
  %arrayidx146 = getelementptr inbounds i8, i8* %127, i64 %idxprom145, !dbg !1109
  %128 = load i8, i8* %arrayidx146, align 1, !dbg !1109
  %conv147 = zext i8 %128 to i32, !dbg !1109
  %129 = load i32, i32* %mask, align 4, !dbg !1110
  %and148 = and i32 %conv147, %129, !dbg !1111
  %cmp149 = icmp eq i32 %and142, %and148, !dbg !1112
  %conv150 = zext i1 %cmp149 to i32, !dbg !1112
  %add151 = add nsw i32 %conv138, %conv150, !dbg !1113
  %130 = load i32, i32* %x, align 4, !dbg !1114
  %idxprom152 = sext i32 %130 to i64, !dbg !1115
  %131 = load i8*, i8** %val, align 8, !dbg !1115
  %arrayidx153 = getelementptr inbounds i8, i8* %131, i64 %idxprom152, !dbg !1115
  %132 = load i8, i8* %arrayidx153, align 1, !dbg !1115
  %conv154 = zext i8 %132 to i32, !dbg !1115
  %133 = load i32, i32* %mask, align 4, !dbg !1116
  %and155 = and i32 %conv154, %133, !dbg !1117
  %134 = load i32, i32* %x, align 4, !dbg !1118
  %135 = load i32, i32* %linesize, align 4, !dbg !1119
  %add156 = add nsw i32 %134, %135, !dbg !1120
  %idxprom157 = sext i32 %add156 to i64, !dbg !1121
  %136 = load i8*, i8** %val, align 8, !dbg !1121
  %arrayidx158 = getelementptr inbounds i8, i8* %136, i64 %idxprom157, !dbg !1121
  %137 = load i8, i8* %arrayidx158, align 1, !dbg !1121
  %conv159 = zext i8 %137 to i32, !dbg !1121
  %138 = load i32, i32* %mask, align 4, !dbg !1122
  %and160 = and i32 %conv159, %138, !dbg !1123
  %cmp161 = icmp eq i32 %and155, %and160, !dbg !1124
  %conv162 = zext i1 %cmp161 to i32, !dbg !1124
  %add163 = add nsw i32 %add151, %conv162, !dbg !1125
  %cmp164 = icmp sgt i32 %add163, 1, !dbg !1126
  %conv165 = zext i1 %cmp164 to i32, !dbg !1126
  store i32 %conv165, i32* %bit, align 4, !dbg !1127
  %139 = load i8*, i8** %dst18, align 8, !dbg !1128
  %tobool166 = icmp ne i8* %139, null, !dbg !1128
  br i1 %tobool166, label %if.then167, label %if.end172, !dbg !1130

if.then167:                                       ; preds = %for.end
  %140 = load i32, i32* %factor, align 4, !dbg !1131
  %141 = load i32, i32* %bit, align 4, !dbg !1133
  %mul168 = mul nsw i32 %140, %141, !dbg !1134
  %conv169 = trunc i32 %mul168 to i8, !dbg !1131
  %142 = load i32, i32* %x, align 4, !dbg !1135
  %idxprom170 = sext i32 %142 to i64, !dbg !1136
  %143 = load i8*, i8** %dst18, align 8, !dbg !1136
  %arrayidx171 = getelementptr inbounds i8, i8* %143, i64 %idxprom170, !dbg !1136
  store i8 %conv169, i8* %arrayidx171, align 1, !dbg !1137
  br label %if.end172, !dbg !1136

if.end172:                                        ; preds = %if.then167, %for.end
  %144 = load i32, i32* %bit, align 4, !dbg !1138
  %conv173 = sitofp i32 %144 to float, !dbg !1138
  %145 = load i32, i32* %plane, align 4, !dbg !1140
  %idxprom174 = sext i32 %145 to i64, !dbg !1141
  %arrayidx175 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom174, !dbg !1141
  %146 = load float, float* %arrayidx175, align 4, !dbg !1142
  %add176 = fadd float %146, %conv173, !dbg !1142
  store float %add176, float* %arrayidx175, align 4, !dbg !1142
  %147 = load i32, i32* %linesize, align 4, !dbg !1143
  %148 = load i8*, i8** %val, align 8, !dbg !1144
  %idx.ext = sext i32 %147 to i64, !dbg !1144
  %add.ptr = getelementptr inbounds i8, i8* %148, i64 %idx.ext, !dbg !1144
  store i8* %add.ptr, i8** %val, align 8, !dbg !1144
  %149 = load i8*, i8** %dst18, align 8, !dbg !1145
  %tobool177 = icmp ne i8* %149, null, !dbg !1145
  br i1 %tobool177, label %if.then178, label %if.end181, !dbg !1147

if.then178:                                       ; preds = %if.end172
  %150 = load i32, i32* %dlinesize, align 4, !dbg !1148
  %151 = load i8*, i8** %dst18, align 8, !dbg !1149
  %idx.ext179 = sext i32 %150 to i64, !dbg !1149
  %add.ptr180 = getelementptr inbounds i8, i8* %151, i64 %idx.ext179, !dbg !1149
  store i8* %add.ptr180, i8** %dst18, align 8, !dbg !1149
  br label %if.end181, !dbg !1150

if.end181:                                        ; preds = %if.then178, %if.end172
  br label %for.inc182, !dbg !1151

for.inc182:                                       ; preds = %if.end181
  %152 = load i32, i32* %y, align 4, !dbg !1152
  %inc183 = add nsw i32 %152, 1, !dbg !1152
  store i32 %inc183, i32* %y, align 4, !dbg !1152
  br label %for.cond28, !dbg !1154, !llvm.loop !1155

for.end184:                                       ; preds = %for.cond28
  %153 = load i8*, i8** %val, align 8, !dbg !1157
  %arrayidx185 = getelementptr inbounds i8, i8* %153, i64 0, !dbg !1157
  %154 = load i8, i8* %arrayidx185, align 1, !dbg !1157
  %conv186 = zext i8 %154 to i32, !dbg !1157
  %155 = load i32, i32* %mask, align 4, !dbg !1159
  %and187 = and i32 %conv186, %155, !dbg !1160
  %156 = load i8*, i8** %val, align 8, !dbg !1161
  %arrayidx188 = getelementptr inbounds i8, i8* %156, i64 1, !dbg !1161
  %157 = load i8, i8* %arrayidx188, align 1, !dbg !1161
  %conv189 = zext i8 %157 to i32, !dbg !1161
  %158 = load i32, i32* %mask, align 4, !dbg !1162
  %and190 = and i32 %conv189, %158, !dbg !1163
  %cmp191 = icmp eq i32 %and187, %and190, !dbg !1164
  %conv192 = zext i1 %cmp191 to i32, !dbg !1164
  %159 = load i8*, i8** %val, align 8, !dbg !1165
  %arrayidx193 = getelementptr inbounds i8, i8* %159, i64 0, !dbg !1165
  %160 = load i8, i8* %arrayidx193, align 1, !dbg !1165
  %conv194 = zext i8 %160 to i32, !dbg !1165
  %161 = load i32, i32* %mask, align 4, !dbg !1166
  %and195 = and i32 %conv194, %161, !dbg !1167
  %162 = load i32, i32* %linesize, align 4, !dbg !1168
  %sub196 = sub nsw i32 1, %162, !dbg !1169
  %add197 = add nsw i32 0, %sub196, !dbg !1170
  %idxprom198 = sext i32 %add197 to i64, !dbg !1171
  %163 = load i8*, i8** %val, align 8, !dbg !1171
  %arrayidx199 = getelementptr inbounds i8, i8* %163, i64 %idxprom198, !dbg !1171
  %164 = load i8, i8* %arrayidx199, align 1, !dbg !1171
  %conv200 = zext i8 %164 to i32, !dbg !1171
  %165 = load i32, i32* %mask, align 4, !dbg !1172
  %and201 = and i32 %conv200, %165, !dbg !1173
  %cmp202 = icmp eq i32 %and195, %and201, !dbg !1174
  %conv203 = zext i1 %cmp202 to i32, !dbg !1174
  %add204 = add nsw i32 %conv192, %conv203, !dbg !1175
  %166 = load i8*, i8** %val, align 8, !dbg !1176
  %arrayidx205 = getelementptr inbounds i8, i8* %166, i64 0, !dbg !1176
  %167 = load i8, i8* %arrayidx205, align 1, !dbg !1176
  %conv206 = zext i8 %167 to i32, !dbg !1176
  %168 = load i32, i32* %mask, align 4, !dbg !1177
  %and207 = and i32 %conv206, %168, !dbg !1178
  %169 = load i32, i32* %linesize, align 4, !dbg !1179
  %sub208 = sub nsw i32 0, %169, !dbg !1180
  %add209 = add nsw i32 0, %sub208, !dbg !1181
  %idxprom210 = sext i32 %add209 to i64, !dbg !1182
  %170 = load i8*, i8** %val, align 8, !dbg !1182
  %arrayidx211 = getelementptr inbounds i8, i8* %170, i64 %idxprom210, !dbg !1182
  %171 = load i8, i8* %arrayidx211, align 1, !dbg !1182
  %conv212 = zext i8 %171 to i32, !dbg !1182
  %172 = load i32, i32* %mask, align 4, !dbg !1183
  %and213 = and i32 %conv212, %172, !dbg !1184
  %cmp214 = icmp eq i32 %and207, %and213, !dbg !1185
  %conv215 = zext i1 %cmp214 to i32, !dbg !1185
  %add216 = add nsw i32 %add204, %conv215, !dbg !1186
  %cmp217 = icmp sgt i32 %add216, 1, !dbg !1187
  %conv218 = zext i1 %cmp217 to i32, !dbg !1187
  store i32 %conv218, i32* %bit, align 4, !dbg !1188
  %173 = load i8*, i8** %dst18, align 8, !dbg !1189
  %tobool219 = icmp ne i8* %173, null, !dbg !1189
  br i1 %tobool219, label %if.then220, label %if.end224, !dbg !1191

if.then220:                                       ; preds = %for.end184
  %174 = load i32, i32* %factor, align 4, !dbg !1192
  %175 = load i32, i32* %bit, align 4, !dbg !1194
  %mul221 = mul nsw i32 %174, %175, !dbg !1195
  %conv222 = trunc i32 %mul221 to i8, !dbg !1192
  %176 = load i8*, i8** %dst18, align 8, !dbg !1196
  %arrayidx223 = getelementptr inbounds i8, i8* %176, i64 0, !dbg !1196
  store i8 %conv222, i8* %arrayidx223, align 1, !dbg !1197
  br label %if.end224, !dbg !1196

if.end224:                                        ; preds = %if.then220, %for.end184
  %177 = load i32, i32* %bit, align 4, !dbg !1198
  %conv225 = sitofp i32 %177 to float, !dbg !1198
  %178 = load i32, i32* %plane, align 4, !dbg !1200
  %idxprom226 = sext i32 %178 to i64, !dbg !1201
  %arrayidx227 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom226, !dbg !1201
  %179 = load float, float* %arrayidx227, align 4, !dbg !1202
  %add228 = fadd float %179, %conv225, !dbg !1202
  store float %add228, float* %arrayidx227, align 4, !dbg !1202
  store i32 1, i32* %x, align 4, !dbg !1203
  br label %for.cond229, !dbg !1205

for.cond229:                                      ; preds = %for.inc286, %if.end224
  %180 = load i32, i32* %x, align 4, !dbg !1206
  %181 = load i32, i32* %plane, align 4, !dbg !1209
  %idxprom230 = sext i32 %181 to i64, !dbg !1210
  %182 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1210
  %planewidth231 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %182, i32 0, i32 5, !dbg !1211
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth231, i64 0, i64 %idxprom230, !dbg !1210
  %183 = load i32, i32* %arrayidx232, align 4, !dbg !1210
  %sub233 = sub nsw i32 %183, 1, !dbg !1212
  %cmp234 = icmp slt i32 %180, %sub233, !dbg !1213
  br i1 %cmp234, label %for.body236, label %for.end288, !dbg !1214

for.body236:                                      ; preds = %for.cond229
  %184 = load i32, i32* %x, align 4, !dbg !1215
  %idxprom237 = sext i32 %184 to i64, !dbg !1218
  %185 = load i8*, i8** %val, align 8, !dbg !1218
  %arrayidx238 = getelementptr inbounds i8, i8* %185, i64 %idxprom237, !dbg !1218
  %186 = load i8, i8* %arrayidx238, align 1, !dbg !1218
  %conv239 = zext i8 %186 to i32, !dbg !1218
  %187 = load i32, i32* %mask, align 4, !dbg !1219
  %and240 = and i32 %conv239, %187, !dbg !1220
  %188 = load i32, i32* %x, align 4, !dbg !1221
  %add241 = add nsw i32 %188, -1, !dbg !1222
  %idxprom242 = sext i32 %add241 to i64, !dbg !1223
  %189 = load i8*, i8** %val, align 8, !dbg !1223
  %arrayidx243 = getelementptr inbounds i8, i8* %189, i64 %idxprom242, !dbg !1223
  %190 = load i8, i8* %arrayidx243, align 1, !dbg !1223
  %conv244 = zext i8 %190 to i32, !dbg !1223
  %191 = load i32, i32* %mask, align 4, !dbg !1224
  %and245 = and i32 %conv244, %191, !dbg !1225
  %cmp246 = icmp eq i32 %and240, %and245, !dbg !1226
  %conv247 = zext i1 %cmp246 to i32, !dbg !1226
  %192 = load i32, i32* %x, align 4, !dbg !1227
  %idxprom248 = sext i32 %192 to i64, !dbg !1228
  %193 = load i8*, i8** %val, align 8, !dbg !1228
  %arrayidx249 = getelementptr inbounds i8, i8* %193, i64 %idxprom248, !dbg !1228
  %194 = load i8, i8* %arrayidx249, align 1, !dbg !1228
  %conv250 = zext i8 %194 to i32, !dbg !1228
  %195 = load i32, i32* %mask, align 4, !dbg !1229
  %and251 = and i32 %conv250, %195, !dbg !1230
  %196 = load i32, i32* %x, align 4, !dbg !1231
  %add252 = add nsw i32 %196, 1, !dbg !1232
  %idxprom253 = sext i32 %add252 to i64, !dbg !1233
  %197 = load i8*, i8** %val, align 8, !dbg !1233
  %arrayidx254 = getelementptr inbounds i8, i8* %197, i64 %idxprom253, !dbg !1233
  %198 = load i8, i8* %arrayidx254, align 1, !dbg !1233
  %conv255 = zext i8 %198 to i32, !dbg !1233
  %199 = load i32, i32* %mask, align 4, !dbg !1234
  %and256 = and i32 %conv255, %199, !dbg !1235
  %cmp257 = icmp eq i32 %and251, %and256, !dbg !1236
  %conv258 = zext i1 %cmp257 to i32, !dbg !1236
  %add259 = add nsw i32 %conv247, %conv258, !dbg !1237
  %200 = load i32, i32* %x, align 4, !dbg !1238
  %idxprom260 = sext i32 %200 to i64, !dbg !1239
  %201 = load i8*, i8** %val, align 8, !dbg !1239
  %arrayidx261 = getelementptr inbounds i8, i8* %201, i64 %idxprom260, !dbg !1239
  %202 = load i8, i8* %arrayidx261, align 1, !dbg !1239
  %conv262 = zext i8 %202 to i32, !dbg !1239
  %203 = load i32, i32* %mask, align 4, !dbg !1240
  %and263 = and i32 %conv262, %203, !dbg !1241
  %204 = load i32, i32* %x, align 4, !dbg !1242
  %205 = load i32, i32* %linesize, align 4, !dbg !1243
  %sub264 = sub nsw i32 0, %205, !dbg !1244
  %add265 = add nsw i32 %204, %sub264, !dbg !1245
  %idxprom266 = sext i32 %add265 to i64, !dbg !1246
  %206 = load i8*, i8** %val, align 8, !dbg !1246
  %arrayidx267 = getelementptr inbounds i8, i8* %206, i64 %idxprom266, !dbg !1246
  %207 = load i8, i8* %arrayidx267, align 1, !dbg !1246
  %conv268 = zext i8 %207 to i32, !dbg !1246
  %208 = load i32, i32* %mask, align 4, !dbg !1247
  %and269 = and i32 %conv268, %208, !dbg !1248
  %cmp270 = icmp eq i32 %and263, %and269, !dbg !1249
  %conv271 = zext i1 %cmp270 to i32, !dbg !1249
  %add272 = add nsw i32 %add259, %conv271, !dbg !1250
  %cmp273 = icmp sgt i32 %add272, 1, !dbg !1251
  %conv274 = zext i1 %cmp273 to i32, !dbg !1251
  store i32 %conv274, i32* %bit, align 4, !dbg !1252
  %209 = load i8*, i8** %dst18, align 8, !dbg !1253
  %tobool275 = icmp ne i8* %209, null, !dbg !1253
  br i1 %tobool275, label %if.then276, label %if.end281, !dbg !1255

if.then276:                                       ; preds = %for.body236
  %210 = load i32, i32* %factor, align 4, !dbg !1256
  %211 = load i32, i32* %bit, align 4, !dbg !1258
  %mul277 = mul nsw i32 %210, %211, !dbg !1259
  %conv278 = trunc i32 %mul277 to i8, !dbg !1256
  %212 = load i32, i32* %x, align 4, !dbg !1260
  %idxprom279 = sext i32 %212 to i64, !dbg !1261
  %213 = load i8*, i8** %dst18, align 8, !dbg !1261
  %arrayidx280 = getelementptr inbounds i8, i8* %213, i64 %idxprom279, !dbg !1261
  store i8 %conv278, i8* %arrayidx280, align 1, !dbg !1262
  br label %if.end281, !dbg !1261

if.end281:                                        ; preds = %if.then276, %for.body236
  %214 = load i32, i32* %bit, align 4, !dbg !1263
  %conv282 = sitofp i32 %214 to float, !dbg !1263
  %215 = load i32, i32* %plane, align 4, !dbg !1265
  %idxprom283 = sext i32 %215 to i64, !dbg !1266
  %arrayidx284 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom283, !dbg !1266
  %216 = load float, float* %arrayidx284, align 4, !dbg !1267
  %add285 = fadd float %216, %conv282, !dbg !1267
  store float %add285, float* %arrayidx284, align 4, !dbg !1267
  br label %for.inc286, !dbg !1268

for.inc286:                                       ; preds = %if.end281
  %217 = load i32, i32* %x, align 4, !dbg !1269
  %inc287 = add nsw i32 %217, 1, !dbg !1269
  store i32 %inc287, i32* %x, align 4, !dbg !1269
  br label %for.cond229, !dbg !1271, !llvm.loop !1272

for.end288:                                       ; preds = %for.cond229
  %218 = load i32, i32* %x, align 4, !dbg !1274
  %idxprom289 = sext i32 %218 to i64, !dbg !1276
  %219 = load i8*, i8** %val, align 8, !dbg !1276
  %arrayidx290 = getelementptr inbounds i8, i8* %219, i64 %idxprom289, !dbg !1276
  %220 = load i8, i8* %arrayidx290, align 1, !dbg !1276
  %conv291 = zext i8 %220 to i32, !dbg !1276
  %221 = load i32, i32* %mask, align 4, !dbg !1277
  %and292 = and i32 %conv291, %221, !dbg !1278
  %222 = load i32, i32* %x, align 4, !dbg !1279
  %add293 = add nsw i32 %222, -1, !dbg !1280
  %idxprom294 = sext i32 %add293 to i64, !dbg !1281
  %223 = load i8*, i8** %val, align 8, !dbg !1281
  %arrayidx295 = getelementptr inbounds i8, i8* %223, i64 %idxprom294, !dbg !1281
  %224 = load i8, i8* %arrayidx295, align 1, !dbg !1281
  %conv296 = zext i8 %224 to i32, !dbg !1281
  %225 = load i32, i32* %mask, align 4, !dbg !1282
  %and297 = and i32 %conv296, %225, !dbg !1283
  %cmp298 = icmp eq i32 %and292, %and297, !dbg !1284
  %conv299 = zext i1 %cmp298 to i32, !dbg !1284
  %226 = load i32, i32* %x, align 4, !dbg !1285
  %idxprom300 = sext i32 %226 to i64, !dbg !1286
  %227 = load i8*, i8** %val, align 8, !dbg !1286
  %arrayidx301 = getelementptr inbounds i8, i8* %227, i64 %idxprom300, !dbg !1286
  %228 = load i8, i8* %arrayidx301, align 1, !dbg !1286
  %conv302 = zext i8 %228 to i32, !dbg !1286
  %229 = load i32, i32* %mask, align 4, !dbg !1287
  %and303 = and i32 %conv302, %229, !dbg !1288
  %230 = load i32, i32* %x, align 4, !dbg !1289
  %231 = load i32, i32* %linesize, align 4, !dbg !1290
  %sub304 = sub nsw i32 -1, %231, !dbg !1291
  %add305 = add nsw i32 %230, %sub304, !dbg !1292
  %idxprom306 = sext i32 %add305 to i64, !dbg !1293
  %232 = load i8*, i8** %val, align 8, !dbg !1293
  %arrayidx307 = getelementptr inbounds i8, i8* %232, i64 %idxprom306, !dbg !1293
  %233 = load i8, i8* %arrayidx307, align 1, !dbg !1293
  %conv308 = zext i8 %233 to i32, !dbg !1293
  %234 = load i32, i32* %mask, align 4, !dbg !1294
  %and309 = and i32 %conv308, %234, !dbg !1295
  %cmp310 = icmp eq i32 %and303, %and309, !dbg !1296
  %conv311 = zext i1 %cmp310 to i32, !dbg !1296
  %add312 = add nsw i32 %conv299, %conv311, !dbg !1297
  %235 = load i32, i32* %x, align 4, !dbg !1298
  %idxprom313 = sext i32 %235 to i64, !dbg !1299
  %236 = load i8*, i8** %val, align 8, !dbg !1299
  %arrayidx314 = getelementptr inbounds i8, i8* %236, i64 %idxprom313, !dbg !1299
  %237 = load i8, i8* %arrayidx314, align 1, !dbg !1299
  %conv315 = zext i8 %237 to i32, !dbg !1299
  %238 = load i32, i32* %mask, align 4, !dbg !1300
  %and316 = and i32 %conv315, %238, !dbg !1301
  %239 = load i32, i32* %x, align 4, !dbg !1302
  %240 = load i32, i32* %linesize, align 4, !dbg !1303
  %sub317 = sub nsw i32 0, %240, !dbg !1304
  %add318 = add nsw i32 %239, %sub317, !dbg !1305
  %idxprom319 = sext i32 %add318 to i64, !dbg !1306
  %241 = load i8*, i8** %val, align 8, !dbg !1306
  %arrayidx320 = getelementptr inbounds i8, i8* %241, i64 %idxprom319, !dbg !1306
  %242 = load i8, i8* %arrayidx320, align 1, !dbg !1306
  %conv321 = zext i8 %242 to i32, !dbg !1306
  %243 = load i32, i32* %mask, align 4, !dbg !1307
  %and322 = and i32 %conv321, %243, !dbg !1308
  %cmp323 = icmp eq i32 %and316, %and322, !dbg !1309
  %conv324 = zext i1 %cmp323 to i32, !dbg !1309
  %add325 = add nsw i32 %add312, %conv324, !dbg !1310
  %cmp326 = icmp sgt i32 %add325, 1, !dbg !1311
  %conv327 = zext i1 %cmp326 to i32, !dbg !1311
  store i32 %conv327, i32* %bit, align 4, !dbg !1312
  %244 = load i8*, i8** %dst18, align 8, !dbg !1313
  %tobool328 = icmp ne i8* %244, null, !dbg !1313
  br i1 %tobool328, label %if.then329, label %if.end334, !dbg !1315

if.then329:                                       ; preds = %for.end288
  %245 = load i32, i32* %factor, align 4, !dbg !1316
  %246 = load i32, i32* %bit, align 4, !dbg !1318
  %mul330 = mul nsw i32 %245, %246, !dbg !1319
  %conv331 = trunc i32 %mul330 to i8, !dbg !1316
  %247 = load i32, i32* %x, align 4, !dbg !1320
  %idxprom332 = sext i32 %247 to i64, !dbg !1321
  %248 = load i8*, i8** %dst18, align 8, !dbg !1321
  %arrayidx333 = getelementptr inbounds i8, i8* %248, i64 %idxprom332, !dbg !1321
  store i8 %conv331, i8* %arrayidx333, align 1, !dbg !1322
  br label %if.end334, !dbg !1321

if.end334:                                        ; preds = %if.then329, %for.end288
  %249 = load i32, i32* %bit, align 4, !dbg !1323
  %conv335 = sitofp i32 %249 to float, !dbg !1323
  %250 = load i32, i32* %plane, align 4, !dbg !1325
  %idxprom336 = sext i32 %250 to i64, !dbg !1326
  %arrayidx337 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom336, !dbg !1326
  %251 = load float, float* %arrayidx337, align 4, !dbg !1327
  %add338 = fadd float %251, %conv335, !dbg !1327
  store float %add338, float* %arrayidx337, align 4, !dbg !1327
  br label %for.inc339, !dbg !1328

for.inc339:                                       ; preds = %if.end334
  %252 = load i32, i32* %plane, align 4, !dbg !1329
  %inc340 = add nsw i32 %252, 1, !dbg !1329
  store i32 %inc340, i32* %plane, align 4, !dbg !1329
  br label %for.cond, !dbg !1331, !llvm.loop !1332

for.end341:                                       ; preds = %for.cond
  br label %if.end699, !dbg !1334

if.else:                                          ; preds = %if.end7
  store i32 0, i32* %plane, align 4, !dbg !1335
  br label %for.cond342, !dbg !1338

for.cond342:                                      ; preds = %for.inc696, %if.else
  %253 = load i32, i32* %plane, align 4, !dbg !1339
  %254 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1342
  %nb_planes343 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %254, i32 0, i32 3, !dbg !1343
  %255 = load i32, i32* %nb_planes343, align 8, !dbg !1343
  %cmp344 = icmp slt i32 %253, %255, !dbg !1344
  br i1 %cmp344, label %for.body346, label %for.end698, !dbg !1345

for.body346:                                      ; preds = %for.cond342
  call void @llvm.dbg.declare(metadata i32* %linesize347, metadata !1346, metadata !808), !dbg !1348
  %256 = load i32, i32* %plane, align 4, !dbg !1349
  %idxprom348 = sext i32 %256 to i64, !dbg !1350
  %257 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1350
  %linesize349 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %257, i32 0, i32 1, !dbg !1351
  %arrayidx350 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize349, i64 0, i64 %idxprom348, !dbg !1350
  %258 = load i32, i32* %arrayidx350, align 4, !dbg !1350
  %div = sdiv i32 %258, 2, !dbg !1352
  store i32 %div, i32* %linesize347, align 4, !dbg !1348
  call void @llvm.dbg.declare(metadata i32* %dlinesize351, metadata !1353, metadata !808), !dbg !1354
  %259 = load i32, i32* %plane, align 4, !dbg !1355
  %idxprom352 = sext i32 %259 to i64, !dbg !1356
  %260 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1356
  %linesize353 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %260, i32 0, i32 1, !dbg !1357
  %arrayidx354 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize353, i64 0, i64 %idxprom352, !dbg !1356
  %261 = load i32, i32* %arrayidx354, align 4, !dbg !1356
  %div355 = sdiv i32 %261, 2, !dbg !1358
  store i32 %div355, i32* %dlinesize351, align 4, !dbg !1354
  call void @llvm.dbg.declare(metadata i16** %val356, metadata !1359, metadata !808), !dbg !1360
  %262 = load i32, i32* %plane, align 4, !dbg !1361
  %idxprom357 = sext i32 %262 to i64, !dbg !1362
  %263 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1362
  %data358 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %263, i32 0, i32 0, !dbg !1363
  %arrayidx359 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data358, i64 0, i64 %idxprom357, !dbg !1362
  %264 = load i8*, i8** %arrayidx359, align 8, !dbg !1362
  %265 = bitcast i8* %264 to i16*, !dbg !1364
  store i16* %265, i16** %val356, align 8, !dbg !1360
  call void @llvm.dbg.declare(metadata i16** %dst360, metadata !1365, metadata !808), !dbg !1366
  %266 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1367
  %filter361 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %266, i32 0, i32 2, !dbg !1368
  %267 = load i32, i32* %filter361, align 4, !dbg !1368
  %tobool362 = icmp ne i32 %267, 0, !dbg !1367
  br i1 %tobool362, label %cond.true363, label %cond.false367, !dbg !1367

cond.true363:                                     ; preds = %for.body346
  %268 = load i32, i32* %plane, align 4, !dbg !1369
  %idxprom364 = sext i32 %268 to i64, !dbg !1371
  %269 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1371
  %data365 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %269, i32 0, i32 0, !dbg !1372
  %arrayidx366 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data365, i64 0, i64 %idxprom364, !dbg !1371
  %270 = load i8*, i8** %arrayidx366, align 8, !dbg !1371
  %271 = bitcast i8* %270 to i16*, !dbg !1373
  br label %cond.end368, !dbg !1374

cond.false367:                                    ; preds = %for.body346
  br label %cond.end368, !dbg !1375

cond.end368:                                      ; preds = %cond.false367, %cond.true363
  %cond369 = phi i16* [ %271, %cond.true363 ], [ null, %cond.false367 ], !dbg !1377
  store i16* %cond369, i16** %dst360, align 8, !dbg !1379
  %272 = load i32, i32* %plane, align 4, !dbg !1380
  %idxprom370 = sext i32 %272 to i64, !dbg !1381
  %273 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1381
  %data371 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %273, i32 0, i32 0, !dbg !1382
  %arrayidx372 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data371, i64 0, i64 %idxprom370, !dbg !1381
  %274 = load i8*, i8** %arrayidx372, align 8, !dbg !1381
  %275 = bitcast i8* %274 to i16*, !dbg !1383
  store i16* %275, i16** %val356, align 8, !dbg !1384
  store i32 0, i32* %y, align 4, !dbg !1385
  br label %for.cond373, !dbg !1387

for.cond373:                                      ; preds = %for.inc539, %cond.end368
  %276 = load i32, i32* %y, align 4, !dbg !1388
  %277 = load i32, i32* %plane, align 4, !dbg !1391
  %idxprom374 = sext i32 %277 to i64, !dbg !1392
  %278 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1392
  %planeheight375 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %278, i32 0, i32 4, !dbg !1393
  %arrayidx376 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight375, i64 0, i64 %idxprom374, !dbg !1392
  %279 = load i32, i32* %arrayidx376, align 4, !dbg !1392
  %sub377 = sub nsw i32 %279, 1, !dbg !1394
  %cmp378 = icmp slt i32 %276, %sub377, !dbg !1395
  br i1 %cmp378, label %for.body380, label %for.end541, !dbg !1396

for.body380:                                      ; preds = %for.cond373
  %280 = load i16*, i16** %val356, align 8, !dbg !1397
  %arrayidx381 = getelementptr inbounds i16, i16* %280, i64 0, !dbg !1397
  %281 = load i16, i16* %arrayidx381, align 2, !dbg !1397
  %conv382 = zext i16 %281 to i32, !dbg !1397
  %282 = load i32, i32* %mask, align 4, !dbg !1400
  %and383 = and i32 %conv382, %282, !dbg !1401
  %283 = load i16*, i16** %val356, align 8, !dbg !1402
  %arrayidx384 = getelementptr inbounds i16, i16* %283, i64 1, !dbg !1402
  %284 = load i16, i16* %arrayidx384, align 2, !dbg !1402
  %conv385 = zext i16 %284 to i32, !dbg !1402
  %285 = load i32, i32* %mask, align 4, !dbg !1403
  %and386 = and i32 %conv385, %285, !dbg !1404
  %cmp387 = icmp eq i32 %and383, %and386, !dbg !1405
  %conv388 = zext i1 %cmp387 to i32, !dbg !1405
  %286 = load i16*, i16** %val356, align 8, !dbg !1406
  %arrayidx389 = getelementptr inbounds i16, i16* %286, i64 0, !dbg !1406
  %287 = load i16, i16* %arrayidx389, align 2, !dbg !1406
  %conv390 = zext i16 %287 to i32, !dbg !1406
  %288 = load i32, i32* %mask, align 4, !dbg !1407
  %and391 = and i32 %conv390, %288, !dbg !1408
  %289 = load i32, i32* %linesize347, align 4, !dbg !1409
  %add392 = add nsw i32 1, %289, !dbg !1410
  %add393 = add nsw i32 0, %add392, !dbg !1411
  %idxprom394 = sext i32 %add393 to i64, !dbg !1412
  %290 = load i16*, i16** %val356, align 8, !dbg !1412
  %arrayidx395 = getelementptr inbounds i16, i16* %290, i64 %idxprom394, !dbg !1412
  %291 = load i16, i16* %arrayidx395, align 2, !dbg !1412
  %conv396 = zext i16 %291 to i32, !dbg !1412
  %292 = load i32, i32* %mask, align 4, !dbg !1413
  %and397 = and i32 %conv396, %292, !dbg !1414
  %cmp398 = icmp eq i32 %and391, %and397, !dbg !1415
  %conv399 = zext i1 %cmp398 to i32, !dbg !1415
  %add400 = add nsw i32 %conv388, %conv399, !dbg !1416
  %293 = load i16*, i16** %val356, align 8, !dbg !1417
  %arrayidx401 = getelementptr inbounds i16, i16* %293, i64 0, !dbg !1417
  %294 = load i16, i16* %arrayidx401, align 2, !dbg !1417
  %conv402 = zext i16 %294 to i32, !dbg !1417
  %295 = load i32, i32* %mask, align 4, !dbg !1418
  %and403 = and i32 %conv402, %295, !dbg !1419
  %296 = load i32, i32* %linesize347, align 4, !dbg !1420
  %add404 = add nsw i32 0, %296, !dbg !1421
  %idxprom405 = sext i32 %add404 to i64, !dbg !1422
  %297 = load i16*, i16** %val356, align 8, !dbg !1422
  %arrayidx406 = getelementptr inbounds i16, i16* %297, i64 %idxprom405, !dbg !1422
  %298 = load i16, i16* %arrayidx406, align 2, !dbg !1422
  %conv407 = zext i16 %298 to i32, !dbg !1422
  %299 = load i32, i32* %mask, align 4, !dbg !1423
  %and408 = and i32 %conv407, %299, !dbg !1424
  %cmp409 = icmp eq i32 %and403, %and408, !dbg !1425
  %conv410 = zext i1 %cmp409 to i32, !dbg !1425
  %add411 = add nsw i32 %add400, %conv410, !dbg !1426
  %cmp412 = icmp sgt i32 %add411, 1, !dbg !1427
  %conv413 = zext i1 %cmp412 to i32, !dbg !1427
  store i32 %conv413, i32* %bit, align 4, !dbg !1428
  %300 = load i16*, i16** %dst360, align 8, !dbg !1429
  %tobool414 = icmp ne i16* %300, null, !dbg !1429
  br i1 %tobool414, label %if.then415, label %if.end419, !dbg !1431

if.then415:                                       ; preds = %for.body380
  %301 = load i32, i32* %factor, align 4, !dbg !1432
  %302 = load i32, i32* %bit, align 4, !dbg !1434
  %mul416 = mul nsw i32 %301, %302, !dbg !1435
  %conv417 = trunc i32 %mul416 to i16, !dbg !1432
  %303 = load i16*, i16** %dst360, align 8, !dbg !1436
  %arrayidx418 = getelementptr inbounds i16, i16* %303, i64 0, !dbg !1436
  store i16 %conv417, i16* %arrayidx418, align 2, !dbg !1437
  br label %if.end419, !dbg !1436

if.end419:                                        ; preds = %if.then415, %for.body380
  %304 = load i32, i32* %bit, align 4, !dbg !1438
  %conv420 = sitofp i32 %304 to float, !dbg !1438
  %305 = load i32, i32* %plane, align 4, !dbg !1440
  %idxprom421 = sext i32 %305 to i64, !dbg !1441
  %arrayidx422 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom421, !dbg !1441
  %306 = load float, float* %arrayidx422, align 4, !dbg !1442
  %add423 = fadd float %306, %conv420, !dbg !1442
  store float %add423, float* %arrayidx422, align 4, !dbg !1442
  store i32 1, i32* %x, align 4, !dbg !1443
  br label %for.cond424, !dbg !1445

for.cond424:                                      ; preds = %for.inc480, %if.end419
  %307 = load i32, i32* %x, align 4, !dbg !1446
  %308 = load i32, i32* %plane, align 4, !dbg !1449
  %idxprom425 = sext i32 %308 to i64, !dbg !1450
  %309 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1450
  %planewidth426 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %309, i32 0, i32 5, !dbg !1451
  %arrayidx427 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth426, i64 0, i64 %idxprom425, !dbg !1450
  %310 = load i32, i32* %arrayidx427, align 4, !dbg !1450
  %sub428 = sub nsw i32 %310, 1, !dbg !1452
  %cmp429 = icmp slt i32 %307, %sub428, !dbg !1453
  br i1 %cmp429, label %for.body431, label %for.end482, !dbg !1454

for.body431:                                      ; preds = %for.cond424
  %311 = load i32, i32* %x, align 4, !dbg !1455
  %idxprom432 = sext i32 %311 to i64, !dbg !1458
  %312 = load i16*, i16** %val356, align 8, !dbg !1458
  %arrayidx433 = getelementptr inbounds i16, i16* %312, i64 %idxprom432, !dbg !1458
  %313 = load i16, i16* %arrayidx433, align 2, !dbg !1458
  %conv434 = zext i16 %313 to i32, !dbg !1458
  %314 = load i32, i32* %mask, align 4, !dbg !1459
  %and435 = and i32 %conv434, %314, !dbg !1460
  %315 = load i32, i32* %x, align 4, !dbg !1461
  %add436 = add nsw i32 %315, -1, !dbg !1462
  %idxprom437 = sext i32 %add436 to i64, !dbg !1463
  %316 = load i16*, i16** %val356, align 8, !dbg !1463
  %arrayidx438 = getelementptr inbounds i16, i16* %316, i64 %idxprom437, !dbg !1463
  %317 = load i16, i16* %arrayidx438, align 2, !dbg !1463
  %conv439 = zext i16 %317 to i32, !dbg !1463
  %318 = load i32, i32* %mask, align 4, !dbg !1464
  %and440 = and i32 %conv439, %318, !dbg !1465
  %cmp441 = icmp eq i32 %and435, %and440, !dbg !1466
  %conv442 = zext i1 %cmp441 to i32, !dbg !1466
  %319 = load i32, i32* %x, align 4, !dbg !1467
  %idxprom443 = sext i32 %319 to i64, !dbg !1468
  %320 = load i16*, i16** %val356, align 8, !dbg !1468
  %arrayidx444 = getelementptr inbounds i16, i16* %320, i64 %idxprom443, !dbg !1468
  %321 = load i16, i16* %arrayidx444, align 2, !dbg !1468
  %conv445 = zext i16 %321 to i32, !dbg !1468
  %322 = load i32, i32* %mask, align 4, !dbg !1469
  %and446 = and i32 %conv445, %322, !dbg !1470
  %323 = load i32, i32* %x, align 4, !dbg !1471
  %add447 = add nsw i32 %323, 1, !dbg !1472
  %idxprom448 = sext i32 %add447 to i64, !dbg !1473
  %324 = load i16*, i16** %val356, align 8, !dbg !1473
  %arrayidx449 = getelementptr inbounds i16, i16* %324, i64 %idxprom448, !dbg !1473
  %325 = load i16, i16* %arrayidx449, align 2, !dbg !1473
  %conv450 = zext i16 %325 to i32, !dbg !1473
  %326 = load i32, i32* %mask, align 4, !dbg !1474
  %and451 = and i32 %conv450, %326, !dbg !1475
  %cmp452 = icmp eq i32 %and446, %and451, !dbg !1476
  %conv453 = zext i1 %cmp452 to i32, !dbg !1476
  %add454 = add nsw i32 %conv442, %conv453, !dbg !1477
  %327 = load i32, i32* %x, align 4, !dbg !1478
  %idxprom455 = sext i32 %327 to i64, !dbg !1479
  %328 = load i16*, i16** %val356, align 8, !dbg !1479
  %arrayidx456 = getelementptr inbounds i16, i16* %328, i64 %idxprom455, !dbg !1479
  %329 = load i16, i16* %arrayidx456, align 2, !dbg !1479
  %conv457 = zext i16 %329 to i32, !dbg !1479
  %330 = load i32, i32* %mask, align 4, !dbg !1480
  %and458 = and i32 %conv457, %330, !dbg !1481
  %331 = load i32, i32* %x, align 4, !dbg !1482
  %332 = load i32, i32* %linesize347, align 4, !dbg !1483
  %add459 = add nsw i32 %331, %332, !dbg !1484
  %idxprom460 = sext i32 %add459 to i64, !dbg !1485
  %333 = load i16*, i16** %val356, align 8, !dbg !1485
  %arrayidx461 = getelementptr inbounds i16, i16* %333, i64 %idxprom460, !dbg !1485
  %334 = load i16, i16* %arrayidx461, align 2, !dbg !1485
  %conv462 = zext i16 %334 to i32, !dbg !1485
  %335 = load i32, i32* %mask, align 4, !dbg !1486
  %and463 = and i32 %conv462, %335, !dbg !1487
  %cmp464 = icmp eq i32 %and458, %and463, !dbg !1488
  %conv465 = zext i1 %cmp464 to i32, !dbg !1488
  %add466 = add nsw i32 %add454, %conv465, !dbg !1489
  %cmp467 = icmp sgt i32 %add466, 1, !dbg !1490
  %conv468 = zext i1 %cmp467 to i32, !dbg !1490
  store i32 %conv468, i32* %bit, align 4, !dbg !1491
  %336 = load i16*, i16** %dst360, align 8, !dbg !1492
  %tobool469 = icmp ne i16* %336, null, !dbg !1492
  br i1 %tobool469, label %if.then470, label %if.end475, !dbg !1494

if.then470:                                       ; preds = %for.body431
  %337 = load i32, i32* %factor, align 4, !dbg !1495
  %338 = load i32, i32* %bit, align 4, !dbg !1497
  %mul471 = mul nsw i32 %337, %338, !dbg !1498
  %conv472 = trunc i32 %mul471 to i16, !dbg !1495
  %339 = load i32, i32* %x, align 4, !dbg !1499
  %idxprom473 = sext i32 %339 to i64, !dbg !1500
  %340 = load i16*, i16** %dst360, align 8, !dbg !1500
  %arrayidx474 = getelementptr inbounds i16, i16* %340, i64 %idxprom473, !dbg !1500
  store i16 %conv472, i16* %arrayidx474, align 2, !dbg !1501
  br label %if.end475, !dbg !1500

if.end475:                                        ; preds = %if.then470, %for.body431
  %341 = load i32, i32* %bit, align 4, !dbg !1502
  %conv476 = sitofp i32 %341 to float, !dbg !1502
  %342 = load i32, i32* %plane, align 4, !dbg !1504
  %idxprom477 = sext i32 %342 to i64, !dbg !1505
  %arrayidx478 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom477, !dbg !1505
  %343 = load float, float* %arrayidx478, align 4, !dbg !1506
  %add479 = fadd float %343, %conv476, !dbg !1506
  store float %add479, float* %arrayidx478, align 4, !dbg !1506
  br label %for.inc480, !dbg !1507

for.inc480:                                       ; preds = %if.end475
  %344 = load i32, i32* %x, align 4, !dbg !1508
  %inc481 = add nsw i32 %344, 1, !dbg !1508
  store i32 %inc481, i32* %x, align 4, !dbg !1508
  br label %for.cond424, !dbg !1510, !llvm.loop !1511

for.end482:                                       ; preds = %for.cond424
  %345 = load i32, i32* %x, align 4, !dbg !1513
  %idxprom483 = sext i32 %345 to i64, !dbg !1515
  %346 = load i16*, i16** %val356, align 8, !dbg !1515
  %arrayidx484 = getelementptr inbounds i16, i16* %346, i64 %idxprom483, !dbg !1515
  %347 = load i16, i16* %arrayidx484, align 2, !dbg !1515
  %conv485 = zext i16 %347 to i32, !dbg !1515
  %348 = load i32, i32* %mask, align 4, !dbg !1516
  %and486 = and i32 %conv485, %348, !dbg !1517
  %349 = load i32, i32* %x, align 4, !dbg !1518
  %add487 = add nsw i32 %349, -1, !dbg !1519
  %idxprom488 = sext i32 %add487 to i64, !dbg !1520
  %350 = load i16*, i16** %val356, align 8, !dbg !1520
  %arrayidx489 = getelementptr inbounds i16, i16* %350, i64 %idxprom488, !dbg !1520
  %351 = load i16, i16* %arrayidx489, align 2, !dbg !1520
  %conv490 = zext i16 %351 to i32, !dbg !1520
  %352 = load i32, i32* %mask, align 4, !dbg !1521
  %and491 = and i32 %conv490, %352, !dbg !1522
  %cmp492 = icmp eq i32 %and486, %and491, !dbg !1523
  %conv493 = zext i1 %cmp492 to i32, !dbg !1523
  %353 = load i32, i32* %x, align 4, !dbg !1524
  %idxprom494 = sext i32 %353 to i64, !dbg !1525
  %354 = load i16*, i16** %val356, align 8, !dbg !1525
  %arrayidx495 = getelementptr inbounds i16, i16* %354, i64 %idxprom494, !dbg !1525
  %355 = load i16, i16* %arrayidx495, align 2, !dbg !1525
  %conv496 = zext i16 %355 to i32, !dbg !1525
  %356 = load i32, i32* %mask, align 4, !dbg !1526
  %and497 = and i32 %conv496, %356, !dbg !1527
  %357 = load i32, i32* %x, align 4, !dbg !1528
  %358 = load i32, i32* %linesize347, align 4, !dbg !1529
  %add498 = add nsw i32 -1, %358, !dbg !1530
  %add499 = add nsw i32 %357, %add498, !dbg !1531
  %idxprom500 = sext i32 %add499 to i64, !dbg !1532
  %359 = load i16*, i16** %val356, align 8, !dbg !1532
  %arrayidx501 = getelementptr inbounds i16, i16* %359, i64 %idxprom500, !dbg !1532
  %360 = load i16, i16* %arrayidx501, align 2, !dbg !1532
  %conv502 = zext i16 %360 to i32, !dbg !1532
  %361 = load i32, i32* %mask, align 4, !dbg !1533
  %and503 = and i32 %conv502, %361, !dbg !1534
  %cmp504 = icmp eq i32 %and497, %and503, !dbg !1535
  %conv505 = zext i1 %cmp504 to i32, !dbg !1535
  %add506 = add nsw i32 %conv493, %conv505, !dbg !1536
  %362 = load i32, i32* %x, align 4, !dbg !1537
  %idxprom507 = sext i32 %362 to i64, !dbg !1538
  %363 = load i16*, i16** %val356, align 8, !dbg !1538
  %arrayidx508 = getelementptr inbounds i16, i16* %363, i64 %idxprom507, !dbg !1538
  %364 = load i16, i16* %arrayidx508, align 2, !dbg !1538
  %conv509 = zext i16 %364 to i32, !dbg !1538
  %365 = load i32, i32* %mask, align 4, !dbg !1539
  %and510 = and i32 %conv509, %365, !dbg !1540
  %366 = load i32, i32* %x, align 4, !dbg !1541
  %367 = load i32, i32* %linesize347, align 4, !dbg !1542
  %add511 = add nsw i32 %366, %367, !dbg !1543
  %idxprom512 = sext i32 %add511 to i64, !dbg !1544
  %368 = load i16*, i16** %val356, align 8, !dbg !1544
  %arrayidx513 = getelementptr inbounds i16, i16* %368, i64 %idxprom512, !dbg !1544
  %369 = load i16, i16* %arrayidx513, align 2, !dbg !1544
  %conv514 = zext i16 %369 to i32, !dbg !1544
  %370 = load i32, i32* %mask, align 4, !dbg !1545
  %and515 = and i32 %conv514, %370, !dbg !1546
  %cmp516 = icmp eq i32 %and510, %and515, !dbg !1547
  %conv517 = zext i1 %cmp516 to i32, !dbg !1547
  %add518 = add nsw i32 %add506, %conv517, !dbg !1548
  %cmp519 = icmp sgt i32 %add518, 1, !dbg !1549
  %conv520 = zext i1 %cmp519 to i32, !dbg !1549
  store i32 %conv520, i32* %bit, align 4, !dbg !1550
  %371 = load i16*, i16** %dst360, align 8, !dbg !1551
  %tobool521 = icmp ne i16* %371, null, !dbg !1551
  br i1 %tobool521, label %if.then522, label %if.end527, !dbg !1553

if.then522:                                       ; preds = %for.end482
  %372 = load i32, i32* %factor, align 4, !dbg !1554
  %373 = load i32, i32* %bit, align 4, !dbg !1556
  %mul523 = mul nsw i32 %372, %373, !dbg !1557
  %conv524 = trunc i32 %mul523 to i16, !dbg !1554
  %374 = load i32, i32* %x, align 4, !dbg !1558
  %idxprom525 = sext i32 %374 to i64, !dbg !1559
  %375 = load i16*, i16** %dst360, align 8, !dbg !1559
  %arrayidx526 = getelementptr inbounds i16, i16* %375, i64 %idxprom525, !dbg !1559
  store i16 %conv524, i16* %arrayidx526, align 2, !dbg !1560
  br label %if.end527, !dbg !1559

if.end527:                                        ; preds = %if.then522, %for.end482
  %376 = load i32, i32* %bit, align 4, !dbg !1561
  %conv528 = sitofp i32 %376 to float, !dbg !1561
  %377 = load i32, i32* %plane, align 4, !dbg !1563
  %idxprom529 = sext i32 %377 to i64, !dbg !1564
  %arrayidx530 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom529, !dbg !1564
  %378 = load float, float* %arrayidx530, align 4, !dbg !1565
  %add531 = fadd float %378, %conv528, !dbg !1565
  store float %add531, float* %arrayidx530, align 4, !dbg !1565
  %379 = load i32, i32* %linesize347, align 4, !dbg !1566
  %380 = load i16*, i16** %val356, align 8, !dbg !1567
  %idx.ext532 = sext i32 %379 to i64, !dbg !1567
  %add.ptr533 = getelementptr inbounds i16, i16* %380, i64 %idx.ext532, !dbg !1567
  store i16* %add.ptr533, i16** %val356, align 8, !dbg !1567
  %381 = load i16*, i16** %dst360, align 8, !dbg !1568
  %tobool534 = icmp ne i16* %381, null, !dbg !1568
  br i1 %tobool534, label %if.then535, label %if.end538, !dbg !1570

if.then535:                                       ; preds = %if.end527
  %382 = load i32, i32* %dlinesize351, align 4, !dbg !1571
  %383 = load i16*, i16** %dst360, align 8, !dbg !1572
  %idx.ext536 = sext i32 %382 to i64, !dbg !1572
  %add.ptr537 = getelementptr inbounds i16, i16* %383, i64 %idx.ext536, !dbg !1572
  store i16* %add.ptr537, i16** %dst360, align 8, !dbg !1572
  br label %if.end538, !dbg !1573

if.end538:                                        ; preds = %if.then535, %if.end527
  br label %for.inc539, !dbg !1574

for.inc539:                                       ; preds = %if.end538
  %384 = load i32, i32* %y, align 4, !dbg !1575
  %inc540 = add nsw i32 %384, 1, !dbg !1575
  store i32 %inc540, i32* %y, align 4, !dbg !1575
  br label %for.cond373, !dbg !1577, !llvm.loop !1578

for.end541:                                       ; preds = %for.cond373
  %385 = load i16*, i16** %val356, align 8, !dbg !1580
  %arrayidx542 = getelementptr inbounds i16, i16* %385, i64 0, !dbg !1580
  %386 = load i16, i16* %arrayidx542, align 2, !dbg !1580
  %conv543 = zext i16 %386 to i32, !dbg !1580
  %387 = load i32, i32* %mask, align 4, !dbg !1582
  %and544 = and i32 %conv543, %387, !dbg !1583
  %388 = load i16*, i16** %val356, align 8, !dbg !1584
  %arrayidx545 = getelementptr inbounds i16, i16* %388, i64 1, !dbg !1584
  %389 = load i16, i16* %arrayidx545, align 2, !dbg !1584
  %conv546 = zext i16 %389 to i32, !dbg !1584
  %390 = load i32, i32* %mask, align 4, !dbg !1585
  %and547 = and i32 %conv546, %390, !dbg !1586
  %cmp548 = icmp eq i32 %and544, %and547, !dbg !1587
  %conv549 = zext i1 %cmp548 to i32, !dbg !1587
  %391 = load i16*, i16** %val356, align 8, !dbg !1588
  %arrayidx550 = getelementptr inbounds i16, i16* %391, i64 0, !dbg !1588
  %392 = load i16, i16* %arrayidx550, align 2, !dbg !1588
  %conv551 = zext i16 %392 to i32, !dbg !1588
  %393 = load i32, i32* %mask, align 4, !dbg !1589
  %and552 = and i32 %conv551, %393, !dbg !1590
  %394 = load i32, i32* %linesize347, align 4, !dbg !1591
  %sub553 = sub nsw i32 1, %394, !dbg !1592
  %add554 = add nsw i32 0, %sub553, !dbg !1593
  %idxprom555 = sext i32 %add554 to i64, !dbg !1594
  %395 = load i16*, i16** %val356, align 8, !dbg !1594
  %arrayidx556 = getelementptr inbounds i16, i16* %395, i64 %idxprom555, !dbg !1594
  %396 = load i16, i16* %arrayidx556, align 2, !dbg !1594
  %conv557 = zext i16 %396 to i32, !dbg !1594
  %397 = load i32, i32* %mask, align 4, !dbg !1595
  %and558 = and i32 %conv557, %397, !dbg !1596
  %cmp559 = icmp eq i32 %and552, %and558, !dbg !1597
  %conv560 = zext i1 %cmp559 to i32, !dbg !1597
  %add561 = add nsw i32 %conv549, %conv560, !dbg !1598
  %398 = load i16*, i16** %val356, align 8, !dbg !1599
  %arrayidx562 = getelementptr inbounds i16, i16* %398, i64 0, !dbg !1599
  %399 = load i16, i16* %arrayidx562, align 2, !dbg !1599
  %conv563 = zext i16 %399 to i32, !dbg !1599
  %400 = load i32, i32* %mask, align 4, !dbg !1600
  %and564 = and i32 %conv563, %400, !dbg !1601
  %401 = load i32, i32* %linesize347, align 4, !dbg !1602
  %sub565 = sub nsw i32 0, %401, !dbg !1603
  %add566 = add nsw i32 0, %sub565, !dbg !1604
  %idxprom567 = sext i32 %add566 to i64, !dbg !1605
  %402 = load i16*, i16** %val356, align 8, !dbg !1605
  %arrayidx568 = getelementptr inbounds i16, i16* %402, i64 %idxprom567, !dbg !1605
  %403 = load i16, i16* %arrayidx568, align 2, !dbg !1605
  %conv569 = zext i16 %403 to i32, !dbg !1605
  %404 = load i32, i32* %mask, align 4, !dbg !1606
  %and570 = and i32 %conv569, %404, !dbg !1607
  %cmp571 = icmp eq i32 %and564, %and570, !dbg !1608
  %conv572 = zext i1 %cmp571 to i32, !dbg !1608
  %add573 = add nsw i32 %add561, %conv572, !dbg !1609
  %cmp574 = icmp sgt i32 %add573, 1, !dbg !1610
  %conv575 = zext i1 %cmp574 to i32, !dbg !1610
  store i32 %conv575, i32* %bit, align 4, !dbg !1611
  %405 = load i16*, i16** %dst360, align 8, !dbg !1612
  %tobool576 = icmp ne i16* %405, null, !dbg !1612
  br i1 %tobool576, label %if.then577, label %if.end581, !dbg !1614

if.then577:                                       ; preds = %for.end541
  %406 = load i32, i32* %factor, align 4, !dbg !1615
  %407 = load i32, i32* %bit, align 4, !dbg !1617
  %mul578 = mul nsw i32 %406, %407, !dbg !1618
  %conv579 = trunc i32 %mul578 to i16, !dbg !1615
  %408 = load i16*, i16** %dst360, align 8, !dbg !1619
  %arrayidx580 = getelementptr inbounds i16, i16* %408, i64 0, !dbg !1619
  store i16 %conv579, i16* %arrayidx580, align 2, !dbg !1620
  br label %if.end581, !dbg !1619

if.end581:                                        ; preds = %if.then577, %for.end541
  %409 = load i32, i32* %bit, align 4, !dbg !1621
  %conv582 = sitofp i32 %409 to float, !dbg !1621
  %410 = load i32, i32* %plane, align 4, !dbg !1623
  %idxprom583 = sext i32 %410 to i64, !dbg !1624
  %arrayidx584 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom583, !dbg !1624
  %411 = load float, float* %arrayidx584, align 4, !dbg !1625
  %add585 = fadd float %411, %conv582, !dbg !1625
  store float %add585, float* %arrayidx584, align 4, !dbg !1625
  store i32 1, i32* %x, align 4, !dbg !1626
  br label %for.cond586, !dbg !1628

for.cond586:                                      ; preds = %for.inc643, %if.end581
  %412 = load i32, i32* %x, align 4, !dbg !1629
  %413 = load i32, i32* %plane, align 4, !dbg !1632
  %idxprom587 = sext i32 %413 to i64, !dbg !1633
  %414 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1633
  %planewidth588 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %414, i32 0, i32 5, !dbg !1634
  %arrayidx589 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth588, i64 0, i64 %idxprom587, !dbg !1633
  %415 = load i32, i32* %arrayidx589, align 4, !dbg !1633
  %sub590 = sub nsw i32 %415, 1, !dbg !1635
  %cmp591 = icmp slt i32 %412, %sub590, !dbg !1636
  br i1 %cmp591, label %for.body593, label %for.end645, !dbg !1637

for.body593:                                      ; preds = %for.cond586
  %416 = load i32, i32* %x, align 4, !dbg !1638
  %idxprom594 = sext i32 %416 to i64, !dbg !1641
  %417 = load i16*, i16** %val356, align 8, !dbg !1641
  %arrayidx595 = getelementptr inbounds i16, i16* %417, i64 %idxprom594, !dbg !1641
  %418 = load i16, i16* %arrayidx595, align 2, !dbg !1641
  %conv596 = zext i16 %418 to i32, !dbg !1641
  %419 = load i32, i32* %mask, align 4, !dbg !1642
  %and597 = and i32 %conv596, %419, !dbg !1643
  %420 = load i32, i32* %x, align 4, !dbg !1644
  %add598 = add nsw i32 %420, -1, !dbg !1645
  %idxprom599 = sext i32 %add598 to i64, !dbg !1646
  %421 = load i16*, i16** %val356, align 8, !dbg !1646
  %arrayidx600 = getelementptr inbounds i16, i16* %421, i64 %idxprom599, !dbg !1646
  %422 = load i16, i16* %arrayidx600, align 2, !dbg !1646
  %conv601 = zext i16 %422 to i32, !dbg !1646
  %423 = load i32, i32* %mask, align 4, !dbg !1647
  %and602 = and i32 %conv601, %423, !dbg !1648
  %cmp603 = icmp eq i32 %and597, %and602, !dbg !1649
  %conv604 = zext i1 %cmp603 to i32, !dbg !1649
  %424 = load i32, i32* %x, align 4, !dbg !1650
  %idxprom605 = sext i32 %424 to i64, !dbg !1651
  %425 = load i16*, i16** %val356, align 8, !dbg !1651
  %arrayidx606 = getelementptr inbounds i16, i16* %425, i64 %idxprom605, !dbg !1651
  %426 = load i16, i16* %arrayidx606, align 2, !dbg !1651
  %conv607 = zext i16 %426 to i32, !dbg !1651
  %427 = load i32, i32* %mask, align 4, !dbg !1652
  %and608 = and i32 %conv607, %427, !dbg !1653
  %428 = load i32, i32* %x, align 4, !dbg !1654
  %add609 = add nsw i32 %428, 1, !dbg !1655
  %idxprom610 = sext i32 %add609 to i64, !dbg !1656
  %429 = load i16*, i16** %val356, align 8, !dbg !1656
  %arrayidx611 = getelementptr inbounds i16, i16* %429, i64 %idxprom610, !dbg !1656
  %430 = load i16, i16* %arrayidx611, align 2, !dbg !1656
  %conv612 = zext i16 %430 to i32, !dbg !1656
  %431 = load i32, i32* %mask, align 4, !dbg !1657
  %and613 = and i32 %conv612, %431, !dbg !1658
  %cmp614 = icmp eq i32 %and608, %and613, !dbg !1659
  %conv615 = zext i1 %cmp614 to i32, !dbg !1659
  %add616 = add nsw i32 %conv604, %conv615, !dbg !1660
  %432 = load i32, i32* %x, align 4, !dbg !1661
  %idxprom617 = sext i32 %432 to i64, !dbg !1662
  %433 = load i16*, i16** %val356, align 8, !dbg !1662
  %arrayidx618 = getelementptr inbounds i16, i16* %433, i64 %idxprom617, !dbg !1662
  %434 = load i16, i16* %arrayidx618, align 2, !dbg !1662
  %conv619 = zext i16 %434 to i32, !dbg !1662
  %435 = load i32, i32* %mask, align 4, !dbg !1663
  %and620 = and i32 %conv619, %435, !dbg !1664
  %436 = load i32, i32* %x, align 4, !dbg !1665
  %437 = load i32, i32* %linesize347, align 4, !dbg !1666
  %sub621 = sub nsw i32 0, %437, !dbg !1667
  %add622 = add nsw i32 %436, %sub621, !dbg !1668
  %idxprom623 = sext i32 %add622 to i64, !dbg !1669
  %438 = load i16*, i16** %val356, align 8, !dbg !1669
  %arrayidx624 = getelementptr inbounds i16, i16* %438, i64 %idxprom623, !dbg !1669
  %439 = load i16, i16* %arrayidx624, align 2, !dbg !1669
  %conv625 = zext i16 %439 to i32, !dbg !1669
  %440 = load i32, i32* %mask, align 4, !dbg !1670
  %and626 = and i32 %conv625, %440, !dbg !1671
  %cmp627 = icmp eq i32 %and620, %and626, !dbg !1672
  %conv628 = zext i1 %cmp627 to i32, !dbg !1672
  %add629 = add nsw i32 %add616, %conv628, !dbg !1673
  %cmp630 = icmp sgt i32 %add629, 1, !dbg !1674
  %conv631 = zext i1 %cmp630 to i32, !dbg !1674
  store i32 %conv631, i32* %bit, align 4, !dbg !1675
  %441 = load i16*, i16** %dst360, align 8, !dbg !1676
  %tobool632 = icmp ne i16* %441, null, !dbg !1676
  br i1 %tobool632, label %if.then633, label %if.end638, !dbg !1678

if.then633:                                       ; preds = %for.body593
  %442 = load i32, i32* %factor, align 4, !dbg !1679
  %443 = load i32, i32* %bit, align 4, !dbg !1681
  %mul634 = mul nsw i32 %442, %443, !dbg !1682
  %conv635 = trunc i32 %mul634 to i16, !dbg !1679
  %444 = load i32, i32* %x, align 4, !dbg !1683
  %idxprom636 = sext i32 %444 to i64, !dbg !1684
  %445 = load i16*, i16** %dst360, align 8, !dbg !1684
  %arrayidx637 = getelementptr inbounds i16, i16* %445, i64 %idxprom636, !dbg !1684
  store i16 %conv635, i16* %arrayidx637, align 2, !dbg !1685
  br label %if.end638, !dbg !1684

if.end638:                                        ; preds = %if.then633, %for.body593
  %446 = load i32, i32* %bit, align 4, !dbg !1686
  %conv639 = sitofp i32 %446 to float, !dbg !1686
  %447 = load i32, i32* %plane, align 4, !dbg !1688
  %idxprom640 = sext i32 %447 to i64, !dbg !1689
  %arrayidx641 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom640, !dbg !1689
  %448 = load float, float* %arrayidx641, align 4, !dbg !1690
  %add642 = fadd float %448, %conv639, !dbg !1690
  store float %add642, float* %arrayidx641, align 4, !dbg !1690
  br label %for.inc643, !dbg !1691

for.inc643:                                       ; preds = %if.end638
  %449 = load i32, i32* %x, align 4, !dbg !1692
  %inc644 = add nsw i32 %449, 1, !dbg !1692
  store i32 %inc644, i32* %x, align 4, !dbg !1692
  br label %for.cond586, !dbg !1694, !llvm.loop !1695

for.end645:                                       ; preds = %for.cond586
  %450 = load i32, i32* %x, align 4, !dbg !1697
  %idxprom646 = sext i32 %450 to i64, !dbg !1699
  %451 = load i16*, i16** %val356, align 8, !dbg !1699
  %arrayidx647 = getelementptr inbounds i16, i16* %451, i64 %idxprom646, !dbg !1699
  %452 = load i16, i16* %arrayidx647, align 2, !dbg !1699
  %conv648 = zext i16 %452 to i32, !dbg !1699
  %453 = load i32, i32* %mask, align 4, !dbg !1700
  %and649 = and i32 %conv648, %453, !dbg !1701
  %454 = load i32, i32* %x, align 4, !dbg !1702
  %add650 = add nsw i32 %454, -1, !dbg !1703
  %idxprom651 = sext i32 %add650 to i64, !dbg !1704
  %455 = load i16*, i16** %val356, align 8, !dbg !1704
  %arrayidx652 = getelementptr inbounds i16, i16* %455, i64 %idxprom651, !dbg !1704
  %456 = load i16, i16* %arrayidx652, align 2, !dbg !1704
  %conv653 = zext i16 %456 to i32, !dbg !1704
  %457 = load i32, i32* %mask, align 4, !dbg !1705
  %and654 = and i32 %conv653, %457, !dbg !1706
  %cmp655 = icmp eq i32 %and649, %and654, !dbg !1707
  %conv656 = zext i1 %cmp655 to i32, !dbg !1707
  %458 = load i32, i32* %x, align 4, !dbg !1708
  %idxprom657 = sext i32 %458 to i64, !dbg !1709
  %459 = load i16*, i16** %val356, align 8, !dbg !1709
  %arrayidx658 = getelementptr inbounds i16, i16* %459, i64 %idxprom657, !dbg !1709
  %460 = load i16, i16* %arrayidx658, align 2, !dbg !1709
  %conv659 = zext i16 %460 to i32, !dbg !1709
  %461 = load i32, i32* %mask, align 4, !dbg !1710
  %and660 = and i32 %conv659, %461, !dbg !1711
  %462 = load i32, i32* %x, align 4, !dbg !1712
  %463 = load i32, i32* %linesize347, align 4, !dbg !1713
  %sub661 = sub nsw i32 -1, %463, !dbg !1714
  %add662 = add nsw i32 %462, %sub661, !dbg !1715
  %idxprom663 = sext i32 %add662 to i64, !dbg !1716
  %464 = load i16*, i16** %val356, align 8, !dbg !1716
  %arrayidx664 = getelementptr inbounds i16, i16* %464, i64 %idxprom663, !dbg !1716
  %465 = load i16, i16* %arrayidx664, align 2, !dbg !1716
  %conv665 = zext i16 %465 to i32, !dbg !1716
  %466 = load i32, i32* %mask, align 4, !dbg !1717
  %and666 = and i32 %conv665, %466, !dbg !1718
  %cmp667 = icmp eq i32 %and660, %and666, !dbg !1719
  %conv668 = zext i1 %cmp667 to i32, !dbg !1719
  %add669 = add nsw i32 %conv656, %conv668, !dbg !1720
  %467 = load i32, i32* %x, align 4, !dbg !1721
  %idxprom670 = sext i32 %467 to i64, !dbg !1722
  %468 = load i16*, i16** %val356, align 8, !dbg !1722
  %arrayidx671 = getelementptr inbounds i16, i16* %468, i64 %idxprom670, !dbg !1722
  %469 = load i16, i16* %arrayidx671, align 2, !dbg !1722
  %conv672 = zext i16 %469 to i32, !dbg !1722
  %470 = load i32, i32* %mask, align 4, !dbg !1723
  %and673 = and i32 %conv672, %470, !dbg !1724
  %471 = load i32, i32* %x, align 4, !dbg !1725
  %472 = load i32, i32* %linesize347, align 4, !dbg !1726
  %sub674 = sub nsw i32 0, %472, !dbg !1727
  %add675 = add nsw i32 %471, %sub674, !dbg !1728
  %idxprom676 = sext i32 %add675 to i64, !dbg !1729
  %473 = load i16*, i16** %val356, align 8, !dbg !1729
  %arrayidx677 = getelementptr inbounds i16, i16* %473, i64 %idxprom676, !dbg !1729
  %474 = load i16, i16* %arrayidx677, align 2, !dbg !1729
  %conv678 = zext i16 %474 to i32, !dbg !1729
  %475 = load i32, i32* %mask, align 4, !dbg !1730
  %and679 = and i32 %conv678, %475, !dbg !1731
  %cmp680 = icmp eq i32 %and673, %and679, !dbg !1732
  %conv681 = zext i1 %cmp680 to i32, !dbg !1732
  %add682 = add nsw i32 %add669, %conv681, !dbg !1733
  %cmp683 = icmp sgt i32 %add682, 1, !dbg !1734
  %conv684 = zext i1 %cmp683 to i32, !dbg !1734
  store i32 %conv684, i32* %bit, align 4, !dbg !1735
  %476 = load i16*, i16** %dst360, align 8, !dbg !1736
  %tobool685 = icmp ne i16* %476, null, !dbg !1736
  br i1 %tobool685, label %if.then686, label %if.end691, !dbg !1738

if.then686:                                       ; preds = %for.end645
  %477 = load i32, i32* %factor, align 4, !dbg !1739
  %478 = load i32, i32* %bit, align 4, !dbg !1741
  %mul687 = mul nsw i32 %477, %478, !dbg !1742
  %conv688 = trunc i32 %mul687 to i16, !dbg !1739
  %479 = load i32, i32* %x, align 4, !dbg !1743
  %idxprom689 = sext i32 %479 to i64, !dbg !1744
  %480 = load i16*, i16** %dst360, align 8, !dbg !1744
  %arrayidx690 = getelementptr inbounds i16, i16* %480, i64 %idxprom689, !dbg !1744
  store i16 %conv688, i16* %arrayidx690, align 2, !dbg !1745
  br label %if.end691, !dbg !1744

if.end691:                                        ; preds = %if.then686, %for.end645
  %481 = load i32, i32* %bit, align 4, !dbg !1746
  %conv692 = sitofp i32 %481 to float, !dbg !1746
  %482 = load i32, i32* %plane, align 4, !dbg !1748
  %idxprom693 = sext i32 %482 to i64, !dbg !1749
  %arrayidx694 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom693, !dbg !1749
  %483 = load float, float* %arrayidx694, align 4, !dbg !1750
  %add695 = fadd float %483, %conv692, !dbg !1750
  store float %add695, float* %arrayidx694, align 4, !dbg !1750
  br label %for.inc696, !dbg !1751

for.inc696:                                       ; preds = %if.end691
  %484 = load i32, i32* %plane, align 4, !dbg !1752
  %inc697 = add nsw i32 %484, 1, !dbg !1752
  store i32 %inc697, i32* %plane, align 4, !dbg !1752
  br label %for.cond342, !dbg !1754, !llvm.loop !1755

for.end698:                                       ; preds = %for.cond342
  br label %if.end699

if.end699:                                        ; preds = %for.end698, %for.end341
  store i32 0, i32* %plane, align 4, !dbg !1757
  br label %for.cond700, !dbg !1759

for.cond700:                                      ; preds = %for.inc730, %if.end699
  %485 = load i32, i32* %plane, align 4, !dbg !1760
  %486 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1763
  %nb_planes701 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %486, i32 0, i32 3, !dbg !1764
  %487 = load i32, i32* %nb_planes701, align 8, !dbg !1764
  %cmp702 = icmp slt i32 %485, %487, !dbg !1765
  br i1 %cmp702, label %for.body704, label %for.end732, !dbg !1766

for.body704:                                      ; preds = %for.cond700
  call void @llvm.dbg.declare(metadata [32 x i8]* %key, metadata !1767, metadata !808), !dbg !1772
  %488 = load i32, i32* %plane, align 4, !dbg !1773
  %idxprom705 = sext i32 %488 to i64, !dbg !1774
  %489 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1774
  %planewidth706 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %489, i32 0, i32 5, !dbg !1775
  %arrayidx707 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth706, i64 0, i64 %idxprom705, !dbg !1774
  %490 = load i32, i32* %arrayidx707, align 4, !dbg !1774
  %491 = load i32, i32* %plane, align 4, !dbg !1776
  %idxprom708 = sext i32 %491 to i64, !dbg !1777
  %492 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1777
  %planeheight709 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %492, i32 0, i32 4, !dbg !1778
  %arrayidx710 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight709, i64 0, i64 %idxprom708, !dbg !1777
  %493 = load i32, i32* %arrayidx710, align 4, !dbg !1777
  %mul711 = mul nsw i32 %490, %493, !dbg !1779
  %conv712 = sitofp i32 %mul711 to float, !dbg !1774
  %494 = load i32, i32* %plane, align 4, !dbg !1780
  %idxprom713 = sext i32 %494 to i64, !dbg !1781
  %arrayidx714 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom713, !dbg !1781
  %495 = load float, float* %arrayidx714, align 4, !dbg !1782
  %div715 = fdiv float %495, %conv712, !dbg !1782
  store float %div715, float* %arrayidx714, align 4, !dbg !1782
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %key, i32 0, i32 0, !dbg !1783
  %496 = load i32, i32* %plane, align 4, !dbg !1784
  %497 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1785
  %bitplane716 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %497, i32 0, i32 1, !dbg !1786
  %498 = load i32, i32* %bitplane716, align 8, !dbg !1786
  %call717 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i32 0, i32 0), i32 %496, i32 %498) #6, !dbg !1787
  %arraydecay718 = getelementptr inbounds [128 x i8], [128 x i8]* %metabuf, i32 0, i32 0, !dbg !1788
  %499 = load i32, i32* %plane, align 4, !dbg !1789
  %idxprom719 = sext i32 %499 to i64, !dbg !1790
  %arrayidx720 = getelementptr inbounds [4 x float], [4 x float]* %stats, i64 0, i64 %idxprom719, !dbg !1790
  %500 = load float, float* %arrayidx720, align 4, !dbg !1790
  %conv721 = fpext float %500 to double, !dbg !1790
  %sub722 = fsub double %conv721, 5.000000e-01, !dbg !1791
  %call723 = call double @fabs(double %sub722) #1, !dbg !1792
  %mul724 = fmul double 2.000000e+00, %call723, !dbg !1793
  %sub725 = fsub double 1.000000e+00, %mul724, !dbg !1794
  %call726 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay718, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0), double %sub725) #6, !dbg !1795
  %501 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1797
  %metadata = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %501, i32 0, i32 39, !dbg !1798
  %arraydecay727 = getelementptr inbounds [32 x i8], [32 x i8]* %key, i32 0, i32 0, !dbg !1799
  %arraydecay728 = getelementptr inbounds [128 x i8], [128 x i8]* %metabuf, i32 0, i32 0, !dbg !1800
  %call729 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* %arraydecay727, i8* %arraydecay728, i32 0), !dbg !1801
  br label %for.inc730, !dbg !1802

for.inc730:                                       ; preds = %for.body704
  %502 = load i32, i32* %plane, align 4, !dbg !1803
  %inc731 = add nsw i32 %502, 1, !dbg !1803
  store i32 %inc731, i32* %plane, align 4, !dbg !1803
  br label %for.cond700, !dbg !1805, !llvm.loop !1806

for.end732:                                       ; preds = %for.cond700
  %503 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1808
  %504 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1810
  %cmp733 = icmp ne %struct.AVFrame* %503, %504, !dbg !1811
  br i1 %cmp733, label %if.then735, label %if.end736, !dbg !1812

if.then735:                                       ; preds = %for.end732
  call void @av_frame_free(%struct.AVFrame** %in.addr), !dbg !1813
  br label %if.end736, !dbg !1813

if.end736:                                        ; preds = %if.then735, %for.end732
  %505 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1814
  %506 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1815
  %call737 = call i32 @ff_filter_frame(%struct.AVFilterLink* %505, %struct.AVFrame* %506), !dbg !1816
  store i32 %call737, i32* %retval, align 4, !dbg !1817
  br label %return, !dbg !1817

return:                                           ; preds = %if.end736, %if.then5
  %507 = load i32, i32* %retval, align 4, !dbg !1818
  ret i32 %507, !dbg !1818
}

; Function Attrs: nounwind uwtable
define internal i32 @config_input(%struct.AVFilterLink* %inlink) #0 !dbg !1819 {
entry:
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.BPNContext*, align 8
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !1820, metadata !808), !dbg !1821
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !1822, metadata !808), !dbg !1848
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1849
  %format = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 10, !dbg !1850
  %1 = load i32, i32* %format, align 4, !dbg !1850
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %1), !dbg !1851
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1848
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !1852, metadata !808), !dbg !1853
  %2 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1854
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %2, i32 0, i32 2, !dbg !1855
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !1855
  store %struct.AVFilterContext* %3, %struct.AVFilterContext** %ctx, align 8, !dbg !1853
  call void @llvm.dbg.declare(metadata %struct.BPNContext** %s, metadata !1856, metadata !808), !dbg !1857
  %4 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1858
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %4, i32 0, i32 9, !dbg !1859
  %5 = load i8*, i8** %priv, align 8, !dbg !1859
  %6 = bitcast i8* %5 to %struct.BPNContext*, !dbg !1858
  store %struct.BPNContext* %6, %struct.BPNContext** %s, align 8, !dbg !1857
  %7 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1860
  %nb_components = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i32 0, i32 1, !dbg !1861
  %8 = load i8, i8* %nb_components, align 8, !dbg !1861
  %conv = zext i8 %8 to i32, !dbg !1860
  %9 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1862
  %nb_planes = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %9, i32 0, i32 3, !dbg !1863
  store i32 %conv, i32* %nb_planes, align 8, !dbg !1864
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1865
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 6, !dbg !1866
  %11 = load i32, i32* %h, align 8, !dbg !1866
  %sub = sub nsw i32 0, %11, !dbg !1867
  %12 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1868
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %12, i32 0, i32 3, !dbg !1869
  %13 = load i8, i8* %log2_chroma_h, align 2, !dbg !1869
  %conv1 = zext i8 %13 to i32, !dbg !1870
  %shr = ashr i32 %sub, %conv1, !dbg !1871
  %sub2 = sub nsw i32 0, %shr, !dbg !1872
  %14 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1873
  %planeheight = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %14, i32 0, i32 4, !dbg !1874
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight, i64 0, i64 2, !dbg !1873
  store i32 %sub2, i32* %arrayidx, align 4, !dbg !1875
  %15 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1876
  %planeheight3 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %15, i32 0, i32 4, !dbg !1877
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight3, i64 0, i64 1, !dbg !1876
  store i32 %sub2, i32* %arrayidx4, align 4, !dbg !1878
  %16 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1879
  %h5 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %16, i32 0, i32 6, !dbg !1880
  %17 = load i32, i32* %h5, align 8, !dbg !1880
  %18 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1881
  %planeheight6 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %18, i32 0, i32 4, !dbg !1882
  %arrayidx7 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight6, i64 0, i64 3, !dbg !1881
  store i32 %17, i32* %arrayidx7, align 4, !dbg !1883
  %19 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1884
  %planeheight8 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %19, i32 0, i32 4, !dbg !1885
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight8, i64 0, i64 0, !dbg !1884
  store i32 %17, i32* %arrayidx9, align 4, !dbg !1886
  %20 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1887
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %20, i32 0, i32 5, !dbg !1888
  %21 = load i32, i32* %w, align 4, !dbg !1888
  %sub10 = sub nsw i32 0, %21, !dbg !1889
  %22 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1890
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %22, i32 0, i32 2, !dbg !1891
  %23 = load i8, i8* %log2_chroma_w, align 1, !dbg !1891
  %conv11 = zext i8 %23 to i32, !dbg !1892
  %shr12 = ashr i32 %sub10, %conv11, !dbg !1893
  %sub13 = sub nsw i32 0, %shr12, !dbg !1894
  %24 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1895
  %planewidth = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %24, i32 0, i32 5, !dbg !1896
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth, i64 0, i64 2, !dbg !1895
  store i32 %sub13, i32* %arrayidx14, align 4, !dbg !1897
  %25 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1898
  %planewidth15 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %25, i32 0, i32 5, !dbg !1899
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth15, i64 0, i64 1, !dbg !1898
  store i32 %sub13, i32* %arrayidx16, align 4, !dbg !1900
  %26 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1901
  %w17 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %26, i32 0, i32 5, !dbg !1902
  %27 = load i32, i32* %w17, align 4, !dbg !1902
  %28 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1903
  %planewidth18 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %28, i32 0, i32 5, !dbg !1904
  %arrayidx19 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth18, i64 0, i64 3, !dbg !1903
  store i32 %27, i32* %arrayidx19, align 4, !dbg !1905
  %29 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1906
  %planewidth20 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %29, i32 0, i32 5, !dbg !1907
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth20, i64 0, i64 0, !dbg !1906
  store i32 %27, i32* %arrayidx21, align 4, !dbg !1908
  %30 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1909
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %30, i32 0, i32 5, !dbg !1910
  %arrayidx22 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !1909
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx22, i32 0, i32 4, !dbg !1911
  %31 = load i32, i32* %depth, align 8, !dbg !1911
  %32 = load %struct.BPNContext*, %struct.BPNContext** %s, align 8, !dbg !1912
  %depth23 = getelementptr inbounds %struct.BPNContext, %struct.BPNContext* %32, i32 0, i32 6, !dbg !1913
  store i32 %31, i32* %depth23, align 4, !dbg !1914
  ret i32 0, !dbg !1915
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

declare %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink*, i32, i32) #3

declare void @av_frame_free(%struct.AVFrame**) #3

declare i32 @av_frame_copy_props(%struct.AVFrame*, %struct.AVFrame*) #3

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind readnone
declare double @fabs(double) #5

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #3

declare i32 @ff_filter_frame(%struct.AVFilterLink*, %struct.AVFrame*) #3

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #3

declare i8* @av_default_item_name(i8*) #3

declare %struct.AVFilterFormats* @ff_make_format_list(i32*) #3

declare i32 @ff_set_common_formats(%struct.AVFilterContext*, %struct.AVFilterFormats*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!804, !805}
!llvm.ident = !{!806}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !778, globals: !782)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--vf_bitplanenoise.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !23, !47, !54, !72, !96, !115, !125, !147, !168, !579}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22}
!15 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!16 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!17 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!18 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!19 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!20 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!21 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!22 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !24, line: 48, size: 32, align: 32, elements: !25)
!24 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!26 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!27 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!28 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!29 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!30 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!31 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!32 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!33 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!34 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!35 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!36 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!37 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!38 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!39 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!40 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!41 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!42 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!43 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!44 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!45 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!46 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !48, line: 516, size: 32, align: 32, elements: !49)
!48 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!51 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!52 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!53 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !48, line: 440, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!56 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!57 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!58 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!59 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!60 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!61 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!62 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!63 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!64 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!65 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!66 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!67 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!68 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!69 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!70 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!71 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !48, line: 464, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!74 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!75 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!76 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!77 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!78 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!79 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!80 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!81 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!82 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!83 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!84 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!85 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!86 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!87 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!88 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!89 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!90 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!91 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!92 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!93 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!94 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!95 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !48, line: 493, size: 32, align: 32, elements: !97)
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!98 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!99 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!100 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!101 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!102 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!103 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!104 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!105 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!106 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!107 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!108 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!109 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!110 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!111 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!112 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!113 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!114 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !48, line: 538, size: 32, align: 32, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124}
!117 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!118 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!119 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!120 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!121 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!122 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!123 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!124 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !126, line: 221, size: 32, align: 32, elements: !127)
!126 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!128 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!129 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!130 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!131 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!132 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!133 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!134 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!135 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!136 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!137 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!138 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!139 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!140 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!141 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!142 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!143 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!144 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!145 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!146 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !148, line: 29, size: 32, align: 32, elements: !149)
!148 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167}
!150 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!151 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!152 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!153 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!154 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!155 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!156 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!157 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!158 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!159 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!160 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!161 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!162 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!163 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!164 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!165 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!166 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!167 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !170, file: !169, line: 503, size: 32, align: 32, elements: !575)
!169 = !DIFile(filename: "libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !169, line: 439, size: 493504, align: 64, elements: !171)
!171 = !{!172, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !536, !537, !538, !539, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !170, file: !169, line: 440, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !169, line: 67, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !169, line: 338, size: 1344, align: 64, elements: !176)
!176 = !{!177, !264, !436, !437, !439, !441, !443, !444, !445, !446, !447, !487, !488, !494, !503, !504, !505, !507, !508, !509, !510, !511}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !175, file: !169, line: 339, baseType: !178, size: 64, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !148, line: 143, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !148, line: 67, size: 640, align: 64, elements: !182)
!182 = !{!183, !187, !192, !223, !224, !225, !226, !230, !236, !238, !242}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !181, file: !148, line: 72, baseType: !184, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !181, file: !148, line: 78, baseType: !188, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!184, !191}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !181, file: !148, line: 85, baseType: !193, size: 64, align: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !126, line: 246, size: 512, align: 64, elements: !196)
!196 = !{!197, !198, !199, !201, !202, !219, !220, !221, !222}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !126, line: 247, baseType: !184, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !195, file: !126, line: 253, baseType: !184, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !195, file: !126, line: 259, baseType: !200, size: 32, align: 32, offset: 128)
!200 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !195, file: !126, line: 260, baseType: !125, size: 32, align: 32, offset: 160)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !195, file: !126, line: 271, baseType: !203, size: 64, align: 64, offset: 192)
!203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !195, file: !126, line: 265, size: 64, align: 64, elements: !204)
!204 = !{!205, !209, !211, !212}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !203, file: !126, line: 266, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !207, line: 40, baseType: !208)
!207 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!208 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !203, file: !126, line: 267, baseType: !210, size: 64, align: 64)
!210 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !203, file: !126, line: 268, baseType: !184, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !203, file: !126, line: 270, baseType: !213, size: 64, align: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !214, line: 61, baseType: !215)
!214 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !214, line: 58, size: 64, align: 32, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !215, file: !214, line: 59, baseType: !200, size: 32, align: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !215, file: !214, line: 60, baseType: !200, size: 32, align: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !195, file: !126, line: 272, baseType: !210, size: 64, align: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !195, file: !126, line: 273, baseType: !210, size: 64, align: 64, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !195, file: !126, line: 275, baseType: !200, size: 32, align: 32, offset: 384)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !195, file: !126, line: 300, baseType: !184, size: 64, align: 64, offset: 448)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !181, file: !148, line: 93, baseType: !200, size: 32, align: 32, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !181, file: !148, line: 99, baseType: !200, size: 32, align: 32, offset: 224)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !181, file: !148, line: 108, baseType: !200, size: 32, align: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !181, file: !148, line: 113, baseType: !227, size: 64, align: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!191, !191, !191}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !181, file: !148, line: 123, baseType: !231, size: 64, align: 64, offset: 384)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !234}
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !181, file: !148, line: 130, baseType: !237, size: 32, align: 32, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !148, line: 48, baseType: !147)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !181, file: !148, line: 136, baseType: !239, size: 64, align: 64, offset: 512)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!237, !191}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !181, file: !148, line: 142, baseType: !243, size: 64, align: 64, offset: 576)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!200, !246, !191, !184, !200}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !126, line: 329, size: 128, align: 64, elements: !249)
!249 = !{!250, !262, !263}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !248, file: !126, line: 360, baseType: !251, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !126, line: 324, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !126, line: 306, size: 384, align: 64, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !254, file: !126, line: 307, baseType: !184, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !254, file: !126, line: 323, baseType: !200, size: 32, align: 32, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !248, file: !126, line: 364, baseType: !200, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !248, file: !126, line: 368, baseType: !200, size: 32, align: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !175, file: !169, line: 341, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !169, line: 328, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !169, line: 144, size: 1024, align: 64, elements: !269)
!269 = !{!270, !271, !272, !404, !405, !406, !407, !411, !412, !417, !421, !422, !423, !424, !426, !431, !435}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !268, file: !169, line: 148, baseType: !184, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !268, file: !169, line: 155, baseType: !184, size: 64, align: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !268, file: !169, line: 164, baseType: !273, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !169, line: 69, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !277, line: 54, size: 576, align: 64, elements: !278)
!277 = !DIFile(filename: "libavfilter/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!278 = !{!279, !280, !281, !388, !392, !396, !400, !401, !402, !403}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 60, baseType: !184, size: 64, align: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !276, file: !277, line: 65, baseType: !3, size: 32, align: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "get_video_buffer", scope: !276, file: !277, line: 73, baseType: !282, size: 64, align: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!285, !386, !200, !200}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !24, line: 646, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !24, line: 268, size: 4288, align: 64, elements: !288)
!288 = !{!289, !296, !298, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !318, !319, !320, !321, !322, !323, !324, !325, !338, !340, !341, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !374, !375, !376, !377, !378, !379, !382, !383, !384, !385}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !287, file: !24, line: 282, baseType: !290, size: 512, align: 64)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 512, align: 64, elements: !294)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !207, line: 48, baseType: !293)
!293 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!294 = !{!295}
!295 = !DISubrange(count: 8)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !287, file: !24, line: 299, baseType: !297, size: 256, align: 32, offset: 512)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 256, align: 32, elements: !294)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !287, file: !24, line: 315, baseType: !299, size: 64, align: 64, offset: 768)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 832)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 864)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !287, file: !24, line: 334, baseType: !200, size: 32, align: 32, offset: 896)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !287, file: !24, line: 341, baseType: !200, size: 32, align: 32, offset: 928)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !287, file: !24, line: 346, baseType: !200, size: 32, align: 32, offset: 960)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !287, file: !24, line: 351, baseType: !13, size: 32, align: 32, offset: 992)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !287, file: !24, line: 356, baseType: !213, size: 64, align: 32, offset: 1024)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !287, file: !24, line: 361, baseType: !206, size: 64, align: 64, offset: 1088)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !287, file: !24, line: 369, baseType: !206, size: 64, align: 64, offset: 1152)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !287, file: !24, line: 377, baseType: !206, size: 64, align: 64, offset: 1216)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !287, file: !24, line: 382, baseType: !200, size: 32, align: 32, offset: 1280)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !287, file: !24, line: 386, baseType: !200, size: 32, align: 32, offset: 1312)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !287, file: !24, line: 391, baseType: !200, size: 32, align: 32, offset: 1344)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !287, file: !24, line: 396, baseType: !191, size: 64, align: 64, offset: 1408)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !287, file: !24, line: 403, baseType: !315, size: 512, align: 64, offset: 1472)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 512, align: 64, elements: !294)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !207, line: 55, baseType: !317)
!317 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !287, file: !24, line: 410, baseType: !200, size: 32, align: 32, offset: 1984)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !287, file: !24, line: 415, baseType: !200, size: 32, align: 32, offset: 2016)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !287, file: !24, line: 420, baseType: !200, size: 32, align: 32, offset: 2048)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !287, file: !24, line: 425, baseType: !200, size: 32, align: 32, offset: 2080)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !287, file: !24, line: 435, baseType: !206, size: 64, align: 64, offset: 2112)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !287, file: !24, line: 440, baseType: !200, size: 32, align: 32, offset: 2176)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !287, file: !24, line: 445, baseType: !316, size: 64, align: 64, offset: 2240)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !287, file: !24, line: 459, baseType: !326, size: 512, align: 64, offset: 2304)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 512, align: 64, elements: !294)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !329, line: 94, baseType: !330)
!329 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !329, line: 81, size: 192, align: 64, elements: !331)
!331 = !{!332, !336, !337}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !330, file: !329, line: 82, baseType: !333, size: 64, align: 64)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !329, line: 73, baseType: !335)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !329, line: 73, flags: DIFlagFwdDecl)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !330, file: !329, line: 89, baseType: !291, size: 64, align: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !330, file: !329, line: 93, baseType: !200, size: 32, align: 32, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !287, file: !24, line: 473, baseType: !339, size: 64, align: 64, offset: 2816)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !287, file: !24, line: 477, baseType: !200, size: 32, align: 32, offset: 2880)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !287, file: !24, line: 479, baseType: !342, size: 64, align: 64, offset: 2944)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64, align: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !24, line: 207, baseType: !345)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !24, line: 201, size: 320, align: 64, elements: !346)
!346 = !{!347, !348, !349, !350, !355}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !345, file: !24, line: 202, baseType: !23, size: 32, align: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !345, file: !24, line: 203, baseType: !291, size: 64, align: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !345, file: !24, line: 204, baseType: !200, size: 32, align: 32, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !345, file: !24, line: 205, baseType: !351, size: 64, align: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !353, line: 86, baseType: !354)
!353 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !353, line: 86, flags: DIFlagFwdDecl)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !345, file: !24, line: 206, baseType: !327, size: 64, align: 64, offset: 256)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !287, file: !24, line: 480, baseType: !200, size: 32, align: 32, offset: 3008)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !287, file: !24, line: 505, baseType: !200, size: 32, align: 32, offset: 3040)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !287, file: !24, line: 512, baseType: !47, size: 32, align: 32, offset: 3072)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !287, file: !24, line: 514, baseType: !54, size: 32, align: 32, offset: 3104)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !287, file: !24, line: 516, baseType: !72, size: 32, align: 32, offset: 3136)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !287, file: !24, line: 523, baseType: !96, size: 32, align: 32, offset: 3168)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !287, file: !24, line: 525, baseType: !115, size: 32, align: 32, offset: 3200)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !287, file: !24, line: 532, baseType: !206, size: 64, align: 64, offset: 3264)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !287, file: !24, line: 539, baseType: !206, size: 64, align: 64, offset: 3328)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !287, file: !24, line: 547, baseType: !206, size: 64, align: 64, offset: 3392)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !287, file: !24, line: 554, baseType: !351, size: 64, align: 64, offset: 3456)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !287, file: !24, line: 563, baseType: !200, size: 32, align: 32, offset: 3520)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !287, file: !24, line: 572, baseType: !200, size: 32, align: 32, offset: 3552)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !287, file: !24, line: 581, baseType: !200, size: 32, align: 32, offset: 3584)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !287, file: !24, line: 588, baseType: !371, size: 64, align: 64, offset: 3648)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !207, line: 36, baseType: !373)
!373 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !287, file: !24, line: 593, baseType: !200, size: 32, align: 32, offset: 3712)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !287, file: !24, line: 596, baseType: !200, size: 32, align: 32, offset: 3744)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !287, file: !24, line: 599, baseType: !327, size: 64, align: 64, offset: 3776)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !287, file: !24, line: 605, baseType: !327, size: 64, align: 64, offset: 3840)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !287, file: !24, line: 616, baseType: !327, size: 64, align: 64, offset: 3904)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !287, file: !24, line: 626, baseType: !380, size: 64, align: 64, offset: 3968)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !381, line: 216, baseType: !317)
!381 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!382 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !287, file: !24, line: 627, baseType: !380, size: 64, align: 64, offset: 4032)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !287, file: !24, line: 628, baseType: !380, size: 64, align: 64, offset: 4096)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !287, file: !24, line: 629, baseType: !380, size: 64, align: 64, offset: 4160)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !287, file: !24, line: 645, baseType: !327, size: 64, align: 64, offset: 4224)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !169, line: 68, baseType: !170)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "get_audio_buffer", scope: !276, file: !277, line: 81, baseType: !389, size: 64, align: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!390 = !DISubroutineType(types: !391)
!391 = !{!285, !386, !200}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !276, file: !277, line: 93, baseType: !393, size: 64, align: 64, offset: 256)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{!200, !386, !285}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "poll_frame", scope: !276, file: !277, line: 104, baseType: !397, size: 64, align: 64, offset: 320)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64, align: 64)
!398 = !DISubroutineType(types: !399)
!399 = !{!200, !386}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "request_frame", scope: !276, file: !277, line: 113, baseType: !397, size: 64, align: 64, offset: 384)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "config_props", scope: !276, file: !277, line: 129, baseType: !397, size: 64, align: 64, offset: 448)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "needs_fifo", scope: !276, file: !277, line: 137, baseType: !200, size: 32, align: 32, offset: 512)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_writable", scope: !276, file: !277, line: 145, baseType: !200, size: 32, align: 32, offset: 544)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !268, file: !169, line: 172, baseType: !273, size: 64, align: 64, offset: 192)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !268, file: !169, line: 182, baseType: !178, size: 64, align: 64, offset: 256)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !268, file: !169, line: 187, baseType: !200, size: 32, align: 32, offset: 320)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !268, file: !169, line: 210, baseType: !408, size: 64, align: 64, offset: 384)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64, align: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{!200, !173}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !268, file: !169, line: 233, baseType: !408, size: 64, align: 64, offset: 448)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !268, file: !169, line: 246, baseType: !413, size: 64, align: 64, offset: 512)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, align: 64)
!414 = !DISubroutineType(types: !415)
!415 = !{!200, !173, !416}
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !268, file: !169, line: 258, baseType: !418, size: 64, align: 64, offset: 576)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{null, !173}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !268, file: !169, line: 282, baseType: !408, size: 64, align: 64, offset: 640)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !268, file: !169, line: 284, baseType: !200, size: 32, align: 32, offset: 704)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !268, file: !169, line: 286, baseType: !200, size: 32, align: 32, offset: 736)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !268, file: !169, line: 292, baseType: !425, size: 64, align: 64, offset: 768)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !268, file: !169, line: 306, baseType: !427, size: 64, align: 64, offset: 832)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64, align: 64)
!428 = !DISubroutineType(types: !429)
!429 = !{!200, !173, !184, !184, !430, !200, !200}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !268, file: !169, line: 313, baseType: !432, size: 64, align: 64, offset: 896)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64, align: 64)
!433 = !DISubroutineType(types: !434)
!434 = !{!200, !173, !191}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !268, file: !169, line: 327, baseType: !408, size: 64, align: 64, offset: 960)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !169, line: 343, baseType: !430, size: 64, align: 64, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !175, file: !169, line: 345, baseType: !438, size: 64, align: 64, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !175, file: !169, line: 346, baseType: !440, size: 64, align: 64, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !175, file: !169, line: 347, baseType: !442, size: 32, align: 32, offset: 320)
!442 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !175, file: !169, line: 349, baseType: !438, size: 64, align: 64, offset: 384)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !175, file: !169, line: 350, baseType: !440, size: 64, align: 64, offset: 448)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !175, file: !169, line: 351, baseType: !442, size: 32, align: 32, offset: 512)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !175, file: !169, line: 353, baseType: !191, size: 64, align: 64, offset: 576)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !175, file: !169, line: 355, baseType: !448, size: 64, align: 64, offset: 640)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64, align: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !169, line: 840, size: 768, align: 64, elements: !450)
!450 = !{!451, !452, !454, !455, !456, !457, !458, !459, !481, !482, !483, !484, !485, !486}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !449, file: !169, line: 841, baseType: !178, size: 64, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !449, file: !169, line: 842, baseType: !453, size: 64, align: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !449, file: !169, line: 843, baseType: !442, size: 32, align: 32, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !449, file: !169, line: 845, baseType: !430, size: 64, align: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !449, file: !169, line: 847, baseType: !430, size: 64, align: 64, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !449, file: !169, line: 862, baseType: !200, size: 32, align: 32, offset: 320)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !449, file: !169, line: 869, baseType: !200, size: 32, align: 32, offset: 352)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !449, file: !169, line: 874, baseType: !460, size: 64, align: 64, offset: 384)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !169, line: 809, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !277, line: 148, size: 192, align: 64, elements: !463)
!463 = !{!464, !465, !475}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !462, file: !277, line: 149, baseType: !191, size: 64, align: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "thread_execute", scope: !462, file: !277, line: 150, baseType: !466, size: 64, align: 64, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !169, line: 837, baseType: !468)
!468 = !DISubroutineType(types: !469)
!469 = !{!200, !173, !470, !191, !474, !200}
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !169, line: 823, baseType: !472)
!472 = !DISubroutineType(types: !473)
!473 = !{!200, !173, !191, !200, !200}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queues", scope: !462, file: !277, line: 151, baseType: !476, size: 8, align: 8, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameQueueGlobal", file: !477, line: 48, baseType: !478)
!477 = !DIFile(filename: "libavfilter/framequeue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameQueueGlobal", file: !477, line: 46, size: 8, align: 8, elements: !479)
!479 = !{!480}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !478, file: !477, line: 47, baseType: !186, size: 8, align: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !449, file: !169, line: 881, baseType: !191, size: 64, align: 64, offset: 448)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !449, file: !169, line: 895, baseType: !466, size: 64, align: 64, offset: 512)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !449, file: !169, line: 897, baseType: !430, size: 64, align: 64, offset: 576)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !449, file: !169, line: 906, baseType: !440, size: 64, align: 64, offset: 640)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !449, file: !169, line: 907, baseType: !200, size: 32, align: 32, offset: 704)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !449, file: !169, line: 909, baseType: !442, size: 32, align: 32, offset: 736)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !175, file: !169, line: 373, baseType: !200, size: 32, align: 32, offset: 704)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !175, file: !169, line: 378, baseType: !489, size: 64, align: 64, offset: 768)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64, align: 64)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !169, line: 335, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !277, line: 154, size: 64, align: 64, elements: !492)
!492 = !{!493}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !491, file: !277, line: 155, baseType: !466, size: 64, align: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !175, file: !169, line: 380, baseType: !495, size: 64, align: 64, offset: 832)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !277, line: 38, size: 320, align: 64, elements: !497)
!497 = !{!498, !499, !500, !501, !502}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !496, file: !277, line: 39, baseType: !210, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !496, file: !277, line: 40, baseType: !430, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !496, file: !277, line: 41, baseType: !430, size: 64, align: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !496, file: !277, line: 42, baseType: !200, size: 32, align: 32, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !496, file: !277, line: 43, baseType: !495, size: 64, align: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !175, file: !169, line: 382, baseType: !430, size: 64, align: 64, offset: 896)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !175, file: !169, line: 383, baseType: !191, size: 64, align: 64, offset: 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !175, file: !169, line: 384, baseType: !506, size: 64, align: 64, offset: 1024)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !175, file: !169, line: 385, baseType: !200, size: 32, align: 32, offset: 1088)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !175, file: !169, line: 394, baseType: !327, size: 64, align: 64, offset: 1152)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !175, file: !169, line: 401, baseType: !200, size: 32, align: 32, offset: 1216)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !175, file: !169, line: 408, baseType: !442, size: 32, align: 32, offset: 1248)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !175, file: !169, line: 424, baseType: !200, size: 32, align: 32, offset: 1280)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !170, file: !169, line: 441, baseType: !438, size: 64, align: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !170, file: !169, line: 443, baseType: !173, size: 64, align: 64, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !170, file: !169, line: 444, baseType: !438, size: 64, align: 64, offset: 192)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !170, file: !169, line: 446, baseType: !3, size: 32, align: 32, offset: 256)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !170, file: !169, line: 449, baseType: !200, size: 32, align: 32, offset: 288)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !170, file: !169, line: 450, baseType: !200, size: 32, align: 32, offset: 320)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !170, file: !169, line: 451, baseType: !213, size: 64, align: 32, offset: 352)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !170, file: !169, line: 453, baseType: !316, size: 64, align: 64, offset: 448)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !170, file: !169, line: 454, baseType: !200, size: 32, align: 32, offset: 512)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !170, file: !169, line: 456, baseType: !200, size: 32, align: 32, offset: 544)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !170, file: !169, line: 465, baseType: !213, size: 64, align: 32, offset: 576)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !170, file: !169, line: 481, baseType: !524, size: 64, align: 64, offset: 640)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64, align: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !169, line: 70, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !527, line: 64, size: 256, align: 64, elements: !528)
!527 = !DIFile(filename: "libavfilter/formats.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!528 = !{!529, !530, !531, !532}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "nb_formats", scope: !526, file: !527, line: 65, baseType: !442, size: 32, align: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !526, file: !527, line: 66, baseType: !474, size: 64, align: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !526, file: !527, line: 68, baseType: !442, size: 32, align: 32, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !526, file: !527, line: 69, baseType: !533, size: 64, align: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !170, file: !169, line: 482, baseType: !524, size: 64, align: 64, offset: 704)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !170, file: !169, line: 488, baseType: !524, size: 64, align: 64, offset: 768)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !170, file: !169, line: 489, baseType: !524, size: 64, align: 64, offset: 832)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !170, file: !169, line: 490, baseType: !540, size: 64, align: 64, offset: 896)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64, align: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !527, line: 85, size: 256, align: 64, elements: !542)
!542 = !{!543, !545, !546, !547, !548, !549}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !541, file: !527, line: 86, baseType: !544, size: 64, align: 64)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channel_layouts", scope: !541, file: !527, line: 87, baseType: !200, size: 32, align: 32, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "all_layouts", scope: !541, file: !527, line: 88, baseType: !186, size: 8, align: 8, offset: 96)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "all_counts", scope: !541, file: !527, line: 89, baseType: !186, size: 8, align: 8, offset: 104)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !541, file: !527, line: 91, baseType: !442, size: 32, align: 32, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !541, file: !527, line: 92, baseType: !550, size: 64, align: 64, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64, align: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !170, file: !169, line: 491, baseType: !540, size: 64, align: 64, offset: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !170, file: !169, line: 500, baseType: !200, size: 32, align: 32, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !170, file: !169, line: 507, baseType: !168, size: 32, align: 32, offset: 1056)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !170, file: !169, line: 512, baseType: !448, size: 64, align: 64, offset: 1088)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !170, file: !169, line: 518, baseType: !206, size: 64, align: 64, offset: 1152)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !170, file: !169, line: 524, baseType: !206, size: 64, align: 64, offset: 1216)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !170, file: !169, line: 529, baseType: !200, size: 32, align: 32, offset: 1280)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !170, file: !169, line: 542, baseType: !213, size: 64, align: 32, offset: 1312)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !170, file: !169, line: 547, baseType: !285, size: 64, align: 64, offset: 1408)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !170, file: !169, line: 553, baseType: !200, size: 32, align: 32, offset: 1472)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !170, file: !169, line: 562, baseType: !200, size: 32, align: 32, offset: 1504)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !170, file: !169, line: 568, baseType: !200, size: 32, align: 32, offset: 1536)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !170, file: !169, line: 573, baseType: !200, size: 32, align: 32, offset: 1568)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !170, file: !169, line: 578, baseType: !442, size: 32, align: 32, offset: 1600)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1664)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1728)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !170, file: !169, line: 588, baseType: !191, size: 64, align: 64, offset: 1792)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !170, file: !169, line: 595, baseType: !200, size: 32, align: 32, offset: 1856)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !170, file: !169, line: 601, baseType: !327, size: 64, align: 64, offset: 1920)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !170, file: !169, line: 610, baseType: !572, size: 491520, align: 8, offset: 1984)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 491520, align: 8, elements: !573)
!573 = !{!574}
!574 = !DISubrange(count: 61440)
!575 = !{!576, !577, !578}
!576 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!577 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!578 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !48, line: 64, size: 32, align: 32, elements: !580)
!580 = !{!581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777}
!581 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!584 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!585 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!590 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!591 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!592 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!593 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!597 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!598 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!599 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!600 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!601 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!603 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!604 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!607 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!609 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!611 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!612 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!616 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!617 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!618 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!619 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!620 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!621 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!626 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!627 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!628 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!629 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!636 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!637 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!638 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!639 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!640 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!641 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!642 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!643 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!666 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!667 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!672 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!685 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!686 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!687 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!688 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!689 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!690 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!691 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!692 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!693 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!694 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!695 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!696 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!697 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!698 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!702 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!703 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!704 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!705 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!706 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!707 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!708 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!709 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!710 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!715 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!716 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!717 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!722 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!723 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!724 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!725 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!726 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!727 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!728 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!729 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!730 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!731 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!732 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!733 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!734 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!735 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!736 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!737 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!738 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!739 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!740 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!743 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!744 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!745 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!746 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!747 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!748 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!750 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!751 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!752 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!753 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!754 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!755 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!756 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!757 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!758 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!759 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!760 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!761 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!762 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!763 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!764 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!765 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!766 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!767 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!768 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!769 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!770 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!771 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!772 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!773 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!774 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!775 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!776 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!777 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!778 = !{!779}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64, align: 64)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !207, line: 49, baseType: !781)
!781 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!782 = !{!783, !785, !789, !790, !791, !797}
!783 = distinct !DIGlobalVariable(name: "ff_vf_bitplanenoise", scope: !0, file: !784, line: 217, type: !267, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_vf_bitplanenoise)
!784 = !DIFile(filename: "libavfilter/vf_bitplanenoise.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!785 = distinct !DIGlobalVariable(name: "inputs", scope: !0, file: !784, line: 199, type: !786, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @inputs)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 1152, align: 64, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 2)
!789 = distinct !DIGlobalVariable(name: "outputs", scope: !0, file: !784, line: 209, type: !786, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @outputs)
!790 = distinct !DIGlobalVariable(name: "bitplanenoise_class", scope: !0, file: !784, line: 48, type: !179, isLocal: true, isDefinition: true, variable: %struct.AVClass* @bitplanenoise_class)
!791 = distinct !DIGlobalVariable(name: "bitplanenoise_options", scope: !0, file: !784, line: 42, type: !792, isLocal: true, isDefinition: true, variable: [3 x %struct.AVOption]* @bitplanenoise_options)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 1536, align: 64, elements: !795)
!793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !126, line: 301, baseType: !195)
!795 = !{!796}
!796 = !DISubrange(count: 3)
!797 = distinct !DIGlobalVariable(name: "pixfmts", scope: !798, file: !784, line: 52, type: !800, isLocal: true, isDefinition: true, variable: [40 x i32]* @query_formats.pixfmts)
!798 = distinct !DISubprogram(name: "query_formats", scope: !784, file: !784, line: 50, type: !409, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !799)
!799 = !{}
!800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 1280, align: 32, elements: !802)
!801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!802 = !{!803}
!803 = !DISubrange(count: 40)
!804 = !{i32 2, !"Dwarf Version", i32 4}
!805 = !{i32 2, !"Debug Info Version", i32 3}
!806 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!807 = !DILocalVariable(name: "ctx", arg: 1, scope: !798, file: !784, line: 50, type: !173)
!808 = !DIExpression()
!809 = !DILocation(line: 50, column: 43, scope: !798)
!810 = !DILocalVariable(name: "formats", scope: !798, file: !784, line: 70, type: !524)
!811 = !DILocation(line: 70, column: 22, scope: !798)
!812 = !DILocation(line: 70, column: 32, scope: !798)
!813 = !DILocation(line: 71, column: 10, scope: !814)
!814 = distinct !DILexicalBlock(scope: !798, file: !784, line: 71, column: 9)
!815 = !DILocation(line: 71, column: 9, scope: !798)
!816 = !DILocation(line: 72, column: 9, scope: !814)
!817 = !DILocation(line: 73, column: 34, scope: !798)
!818 = !DILocation(line: 73, column: 39, scope: !798)
!819 = !DILocation(line: 73, column: 12, scope: !798)
!820 = !DILocation(line: 73, column: 5, scope: !798)
!821 = !DILocation(line: 74, column: 1, scope: !798)
!822 = distinct !DISubprogram(name: "filter_frame", scope: !784, file: !784, line: 102, type: !394, isLocal: true, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !799)
!823 = !DILocalVariable(name: "inlink", arg: 1, scope: !822, file: !784, line: 102, type: !386)
!824 = !DILocation(line: 102, column: 39, scope: !822)
!825 = !DILocalVariable(name: "in", arg: 2, scope: !822, file: !784, line: 102, type: !285)
!826 = !DILocation(line: 102, column: 56, scope: !822)
!827 = !DILocalVariable(name: "ctx", scope: !822, file: !784, line: 104, type: !173)
!828 = !DILocation(line: 104, column: 22, scope: !822)
!829 = !DILocation(line: 104, column: 28, scope: !822)
!830 = !DILocation(line: 104, column: 36, scope: !822)
!831 = !DILocalVariable(name: "outlink", scope: !822, file: !784, line: 105, type: !386)
!832 = !DILocation(line: 105, column: 19, scope: !822)
!833 = !DILocation(line: 105, column: 29, scope: !822)
!834 = !DILocation(line: 105, column: 34, scope: !822)
!835 = !DILocalVariable(name: "s", scope: !822, file: !784, line: 106, type: !836)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64, align: 64)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPNContext", file: !784, line: 38, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPNContext", file: !784, line: 28, size: 448, align: 64, elements: !839)
!839 = !{!840, !841, !842, !843, !844, !848, !849}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !838, file: !784, line: 29, baseType: !178, size: 64, align: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "bitplane", scope: !838, file: !784, line: 31, baseType: !200, size: 32, align: 32, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !838, file: !784, line: 32, baseType: !200, size: 32, align: 32, offset: 96)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "nb_planes", scope: !838, file: !784, line: 34, baseType: !200, size: 32, align: 32, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "planeheight", scope: !838, file: !784, line: 35, baseType: !845, size: 128, align: 32, offset: 160)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 128, align: 32, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 4)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "planewidth", scope: !838, file: !784, line: 36, baseType: !845, size: 128, align: 32, offset: 288)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !838, file: !784, line: 37, baseType: !200, size: 32, align: 32, offset: 416)
!850 = !DILocation(line: 106, column: 17, scope: !822)
!851 = !DILocation(line: 106, column: 21, scope: !822)
!852 = !DILocation(line: 106, column: 26, scope: !822)
!853 = !DILocalVariable(name: "mask", scope: !822, file: !784, line: 107, type: !854)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!855 = !DILocation(line: 107, column: 15, scope: !822)
!856 = !DILocation(line: 107, column: 29, scope: !822)
!857 = !DILocation(line: 107, column: 32, scope: !822)
!858 = !DILocation(line: 107, column: 41, scope: !822)
!859 = !DILocation(line: 107, column: 25, scope: !822)
!860 = !DILocalVariable(name: "factor", scope: !822, file: !784, line: 108, type: !854)
!861 = !DILocation(line: 108, column: 15, scope: !822)
!862 = !DILocation(line: 108, column: 30, scope: !822)
!863 = !DILocation(line: 108, column: 33, scope: !822)
!864 = !DILocation(line: 108, column: 27, scope: !822)
!865 = !DILocation(line: 108, column: 40, scope: !822)
!866 = !DILocalVariable(name: "stats", scope: !822, file: !784, line: 109, type: !867)
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !868, size: 128, align: 32, elements: !846)
!868 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!869 = !DILocation(line: 109, column: 11, scope: !822)
!870 = !DILocalVariable(name: "metabuf", scope: !822, file: !784, line: 110, type: !871)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 1024, align: 8, elements: !872)
!872 = !{!873}
!873 = !DISubrange(count: 128)
!874 = !DILocation(line: 110, column: 10, scope: !822)
!875 = !DILocalVariable(name: "plane", scope: !822, file: !784, line: 111, type: !200)
!876 = !DILocation(line: 111, column: 9, scope: !822)
!877 = !DILocalVariable(name: "y", scope: !822, file: !784, line: 111, type: !200)
!878 = !DILocation(line: 111, column: 16, scope: !822)
!879 = !DILocalVariable(name: "x", scope: !822, file: !784, line: 111, type: !200)
!880 = !DILocation(line: 111, column: 19, scope: !822)
!881 = !DILocalVariable(name: "bit", scope: !822, file: !784, line: 111, type: !200)
!882 = !DILocation(line: 111, column: 22, scope: !822)
!883 = !DILocalVariable(name: "out", scope: !822, file: !784, line: 112, type: !285)
!884 = !DILocation(line: 112, column: 14, scope: !822)
!885 = !DILocation(line: 112, column: 20, scope: !822)
!886 = !DILocation(line: 112, column: 23, scope: !822)
!887 = !DILocation(line: 112, column: 20, scope: !888)
!888 = !DILexicalBlockFile(scope: !822, file: !784, discriminator: 1)
!889 = !DILocation(line: 112, column: 38, scope: !890)
!890 = !DILexicalBlockFile(scope: !822, file: !784, discriminator: 2)
!891 = !DILocation(line: 112, column: 20, scope: !890)
!892 = !DILocation(line: 112, column: 20, scope: !893)
!893 = !DILexicalBlockFile(scope: !822, file: !784, discriminator: 3)
!894 = !DILocation(line: 112, column: 14, scope: !893)
!895 = !DILocation(line: 114, column: 10, scope: !896)
!896 = distinct !DILexicalBlock(scope: !822, file: !784, line: 114, column: 9)
!897 = !DILocation(line: 114, column: 9, scope: !822)
!898 = !DILocation(line: 115, column: 35, scope: !899)
!899 = distinct !DILexicalBlock(scope: !896, file: !784, line: 114, column: 15)
!900 = !DILocation(line: 115, column: 44, scope: !899)
!901 = !DILocation(line: 115, column: 53, scope: !899)
!902 = !DILocation(line: 115, column: 56, scope: !899)
!903 = !DILocation(line: 115, column: 65, scope: !899)
!904 = !DILocation(line: 115, column: 15, scope: !899)
!905 = !DILocation(line: 115, column: 13, scope: !899)
!906 = !DILocation(line: 116, column: 14, scope: !907)
!907 = distinct !DILexicalBlock(scope: !899, file: !784, line: 116, column: 13)
!908 = !DILocation(line: 116, column: 13, scope: !899)
!909 = !DILocation(line: 117, column: 13, scope: !910)
!910 = distinct !DILexicalBlock(scope: !907, file: !784, line: 116, column: 19)
!911 = !DILocation(line: 118, column: 13, scope: !910)
!912 = !DILocation(line: 120, column: 29, scope: !899)
!913 = !DILocation(line: 120, column: 34, scope: !899)
!914 = !DILocation(line: 120, column: 9, scope: !899)
!915 = !DILocation(line: 121, column: 5, scope: !899)
!916 = !DILocation(line: 123, column: 9, scope: !917)
!917 = distinct !DILexicalBlock(scope: !822, file: !784, line: 123, column: 9)
!918 = !DILocation(line: 123, column: 12, scope: !917)
!919 = !DILocation(line: 123, column: 18, scope: !917)
!920 = !DILocation(line: 123, column: 9, scope: !822)
!921 = !DILocation(line: 124, column: 20, scope: !922)
!922 = distinct !DILexicalBlock(scope: !923, file: !784, line: 124, column: 9)
!923 = distinct !DILexicalBlock(scope: !917, file: !784, line: 123, column: 24)
!924 = !DILocation(line: 124, column: 14, scope: !922)
!925 = !DILocation(line: 124, column: 25, scope: !926)
!926 = !DILexicalBlockFile(scope: !927, file: !784, discriminator: 1)
!927 = distinct !DILexicalBlock(scope: !922, file: !784, line: 124, column: 9)
!928 = !DILocation(line: 124, column: 33, scope: !926)
!929 = !DILocation(line: 124, column: 36, scope: !926)
!930 = !DILocation(line: 124, column: 31, scope: !926)
!931 = !DILocation(line: 124, column: 9, scope: !926)
!932 = !DILocalVariable(name: "linesize", scope: !933, file: !784, line: 125, type: !854)
!933 = distinct !DILexicalBlock(scope: !927, file: !784, line: 124, column: 56)
!934 = !DILocation(line: 125, column: 23, scope: !933)
!935 = !DILocation(line: 125, column: 47, scope: !933)
!936 = !DILocation(line: 125, column: 34, scope: !933)
!937 = !DILocation(line: 125, column: 38, scope: !933)
!938 = !DILocalVariable(name: "dlinesize", scope: !933, file: !784, line: 126, type: !854)
!939 = !DILocation(line: 126, column: 23, scope: !933)
!940 = !DILocation(line: 126, column: 49, scope: !933)
!941 = !DILocation(line: 126, column: 35, scope: !933)
!942 = !DILocation(line: 126, column: 40, scope: !933)
!943 = !DILocalVariable(name: "val", scope: !933, file: !784, line: 127, type: !291)
!944 = !DILocation(line: 127, column: 22, scope: !933)
!945 = !DILocation(line: 127, column: 37, scope: !933)
!946 = !DILocation(line: 127, column: 28, scope: !933)
!947 = !DILocation(line: 127, column: 32, scope: !933)
!948 = !DILocalVariable(name: "dst", scope: !933, file: !784, line: 128, type: !291)
!949 = !DILocation(line: 128, column: 22, scope: !933)
!950 = !DILocation(line: 128, column: 28, scope: !933)
!951 = !DILocation(line: 128, column: 31, scope: !933)
!952 = !DILocation(line: 128, column: 50, scope: !953)
!953 = !DILexicalBlockFile(scope: !933, file: !784, discriminator: 1)
!954 = !DILocation(line: 128, column: 40, scope: !953)
!955 = !DILocation(line: 128, column: 45, scope: !953)
!956 = !DILocation(line: 128, column: 28, scope: !953)
!957 = !DILocation(line: 128, column: 28, scope: !958)
!958 = !DILexicalBlockFile(scope: !933, file: !784, discriminator: 2)
!959 = !DILocation(line: 128, column: 28, scope: !960)
!960 = !DILexicalBlockFile(scope: !933, file: !784, discriminator: 3)
!961 = !DILocation(line: 128, column: 22, scope: !960)
!962 = !DILocation(line: 130, column: 20, scope: !963)
!963 = distinct !DILexicalBlock(scope: !933, file: !784, line: 130, column: 13)
!964 = !DILocation(line: 130, column: 18, scope: !963)
!965 = !DILocation(line: 130, column: 25, scope: !966)
!966 = !DILexicalBlockFile(scope: !967, file: !784, discriminator: 1)
!967 = distinct !DILexicalBlock(scope: !963, file: !784, line: 130, column: 13)
!968 = !DILocation(line: 130, column: 44, scope: !966)
!969 = !DILocation(line: 130, column: 29, scope: !966)
!970 = !DILocation(line: 130, column: 32, scope: !966)
!971 = !DILocation(line: 130, column: 51, scope: !966)
!972 = !DILocation(line: 130, column: 27, scope: !966)
!973 = !DILocation(line: 130, column: 13, scope: !966)
!974 = !DILocation(line: 131, column: 28, scope: !975)
!975 = distinct !DILexicalBlock(scope: !976, file: !784, line: 131, column: 17)
!976 = distinct !DILexicalBlock(scope: !967, file: !784, line: 130, column: 61)
!977 = !DILocation(line: 131, column: 39, scope: !975)
!978 = !DILocation(line: 131, column: 37, scope: !975)
!979 = !DILocation(line: 131, column: 49, scope: !975)
!980 = !DILocation(line: 131, column: 66, scope: !975)
!981 = !DILocation(line: 131, column: 64, scope: !975)
!982 = !DILocation(line: 131, column: 45, scope: !975)
!983 = !DILocation(line: 131, column: 77, scope: !975)
!984 = !DILocation(line: 131, column: 88, scope: !975)
!985 = !DILocation(line: 131, column: 86, scope: !975)
!986 = !DILocation(line: 131, column: 113, scope: !975)
!987 = !DILocation(line: 131, column: 111, scope: !975)
!988 = !DILocation(line: 131, column: 106, scope: !975)
!989 = !DILocation(line: 131, column: 98, scope: !975)
!990 = !DILocation(line: 131, column: 126, scope: !975)
!991 = !DILocation(line: 131, column: 124, scope: !975)
!992 = !DILocation(line: 131, column: 94, scope: !975)
!993 = !DILocation(line: 131, column: 73, scope: !975)
!994 = !DILocation(line: 131, column: 137, scope: !975)
!995 = !DILocation(line: 131, column: 148, scope: !975)
!996 = !DILocation(line: 131, column: 146, scope: !975)
!997 = !DILocation(line: 131, column: 169, scope: !975)
!998 = !DILocation(line: 131, column: 166, scope: !975)
!999 = !DILocation(line: 131, column: 158, scope: !975)
!1000 = !DILocation(line: 131, column: 182, scope: !975)
!1001 = !DILocation(line: 131, column: 180, scope: !975)
!1002 = !DILocation(line: 131, column: 154, scope: !975)
!1003 = !DILocation(line: 131, column: 133, scope: !975)
!1004 = !DILocation(line: 131, column: 190, scope: !975)
!1005 = !DILocation(line: 131, column: 23, scope: !975)
!1006 = !DILocation(line: 131, column: 199, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !975, file: !784, line: 131, column: 199)
!1008 = !DILocation(line: 131, column: 199, scope: !975)
!1009 = !DILocation(line: 131, column: 215, scope: !1010)
!1010 = !DILexicalBlockFile(scope: !1007, file: !784, discriminator: 1)
!1011 = !DILocation(line: 131, column: 224, scope: !1010)
!1012 = !DILocation(line: 131, column: 222, scope: !1010)
!1013 = !DILocation(line: 131, column: 204, scope: !1010)
!1014 = !DILocation(line: 131, column: 213, scope: !1010)
!1015 = !DILocation(line: 131, column: 245, scope: !1016)
!1016 = !DILexicalBlockFile(scope: !975, file: !784, discriminator: 2)
!1017 = !DILocation(line: 131, column: 235, scope: !1016)
!1018 = !DILocation(line: 131, column: 229, scope: !1016)
!1019 = !DILocation(line: 131, column: 242, scope: !1016)
!1020 = !DILocation(line: 133, column: 24, scope: !1021)
!1021 = distinct !DILexicalBlock(scope: !976, file: !784, line: 133, column: 17)
!1022 = !DILocation(line: 133, column: 22, scope: !1021)
!1023 = !DILocation(line: 133, column: 29, scope: !1024)
!1024 = !DILexicalBlockFile(scope: !1025, file: !784, discriminator: 1)
!1025 = distinct !DILexicalBlock(scope: !1021, file: !784, line: 133, column: 17)
!1026 = !DILocation(line: 133, column: 47, scope: !1024)
!1027 = !DILocation(line: 133, column: 33, scope: !1024)
!1028 = !DILocation(line: 133, column: 36, scope: !1024)
!1029 = !DILocation(line: 133, column: 54, scope: !1024)
!1030 = !DILocation(line: 133, column: 31, scope: !1024)
!1031 = !DILocation(line: 133, column: 17, scope: !1024)
!1032 = !DILocation(line: 134, column: 37, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !1034, file: !784, line: 134, column: 21)
!1034 = distinct !DILexicalBlock(scope: !1025, file: !784, line: 133, column: 64)
!1035 = !DILocation(line: 134, column: 32, scope: !1033)
!1036 = !DILocation(line: 134, column: 43, scope: !1033)
!1037 = !DILocation(line: 134, column: 41, scope: !1033)
!1038 = !DILocation(line: 134, column: 58, scope: !1033)
!1039 = !DILocation(line: 134, column: 61, scope: !1033)
!1040 = !DILocation(line: 134, column: 53, scope: !1033)
!1041 = !DILocation(line: 134, column: 71, scope: !1033)
!1042 = !DILocation(line: 134, column: 69, scope: !1033)
!1043 = !DILocation(line: 134, column: 49, scope: !1033)
!1044 = !DILocation(line: 134, column: 87, scope: !1033)
!1045 = !DILocation(line: 134, column: 82, scope: !1033)
!1046 = !DILocation(line: 134, column: 93, scope: !1033)
!1047 = !DILocation(line: 134, column: 91, scope: !1033)
!1048 = !DILocation(line: 134, column: 108, scope: !1033)
!1049 = !DILocation(line: 134, column: 111, scope: !1033)
!1050 = !DILocation(line: 134, column: 103, scope: !1033)
!1051 = !DILocation(line: 134, column: 120, scope: !1033)
!1052 = !DILocation(line: 134, column: 118, scope: !1033)
!1053 = !DILocation(line: 134, column: 99, scope: !1033)
!1054 = !DILocation(line: 134, column: 78, scope: !1033)
!1055 = !DILocation(line: 134, column: 136, scope: !1033)
!1056 = !DILocation(line: 134, column: 131, scope: !1033)
!1057 = !DILocation(line: 134, column: 142, scope: !1033)
!1058 = !DILocation(line: 134, column: 140, scope: !1033)
!1059 = !DILocation(line: 134, column: 157, scope: !1033)
!1060 = !DILocation(line: 134, column: 163, scope: !1033)
!1061 = !DILocation(line: 134, column: 160, scope: !1033)
!1062 = !DILocation(line: 134, column: 152, scope: !1033)
!1063 = !DILocation(line: 134, column: 176, scope: !1033)
!1064 = !DILocation(line: 134, column: 174, scope: !1033)
!1065 = !DILocation(line: 134, column: 148, scope: !1033)
!1066 = !DILocation(line: 134, column: 127, scope: !1033)
!1067 = !DILocation(line: 134, column: 184, scope: !1033)
!1068 = !DILocation(line: 134, column: 27, scope: !1033)
!1069 = !DILocation(line: 134, column: 193, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1033, file: !784, line: 134, column: 193)
!1071 = !DILocation(line: 134, column: 193, scope: !1033)
!1072 = !DILocation(line: 134, column: 209, scope: !1073)
!1073 = !DILexicalBlockFile(scope: !1070, file: !784, discriminator: 1)
!1074 = !DILocation(line: 134, column: 218, scope: !1073)
!1075 = !DILocation(line: 134, column: 216, scope: !1073)
!1076 = !DILocation(line: 134, column: 203, scope: !1073)
!1077 = !DILocation(line: 134, column: 198, scope: !1073)
!1078 = !DILocation(line: 134, column: 207, scope: !1073)
!1079 = !DILocation(line: 134, column: 239, scope: !1080)
!1080 = !DILexicalBlockFile(scope: !1033, file: !784, discriminator: 2)
!1081 = !DILocation(line: 134, column: 229, scope: !1080)
!1082 = !DILocation(line: 134, column: 223, scope: !1080)
!1083 = !DILocation(line: 134, column: 236, scope: !1080)
!1084 = !DILocation(line: 135, column: 17, scope: !1034)
!1085 = !DILocation(line: 133, column: 60, scope: !1086)
!1086 = !DILexicalBlockFile(scope: !1025, file: !784, discriminator: 2)
!1087 = !DILocation(line: 133, column: 17, scope: !1086)
!1088 = distinct !{!1088, !1089}
!1089 = !DILocation(line: 133, column: 17, scope: !976)
!1090 = !DILocation(line: 137, column: 33, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !976, file: !784, line: 137, column: 17)
!1092 = !DILocation(line: 137, column: 28, scope: !1091)
!1093 = !DILocation(line: 137, column: 39, scope: !1091)
!1094 = !DILocation(line: 137, column: 37, scope: !1091)
!1095 = !DILocation(line: 137, column: 54, scope: !1091)
!1096 = !DILocation(line: 137, column: 57, scope: !1091)
!1097 = !DILocation(line: 137, column: 49, scope: !1091)
!1098 = !DILocation(line: 137, column: 67, scope: !1091)
!1099 = !DILocation(line: 137, column: 65, scope: !1091)
!1100 = !DILocation(line: 137, column: 45, scope: !1091)
!1101 = !DILocation(line: 137, column: 83, scope: !1091)
!1102 = !DILocation(line: 137, column: 78, scope: !1091)
!1103 = !DILocation(line: 137, column: 89, scope: !1091)
!1104 = !DILocation(line: 137, column: 87, scope: !1091)
!1105 = !DILocation(line: 137, column: 104, scope: !1091)
!1106 = !DILocation(line: 137, column: 115, scope: !1091)
!1107 = !DILocation(line: 137, column: 113, scope: !1091)
!1108 = !DILocation(line: 137, column: 107, scope: !1091)
!1109 = !DILocation(line: 137, column: 99, scope: !1091)
!1110 = !DILocation(line: 137, column: 128, scope: !1091)
!1111 = !DILocation(line: 137, column: 126, scope: !1091)
!1112 = !DILocation(line: 137, column: 95, scope: !1091)
!1113 = !DILocation(line: 137, column: 74, scope: !1091)
!1114 = !DILocation(line: 137, column: 144, scope: !1091)
!1115 = !DILocation(line: 137, column: 139, scope: !1091)
!1116 = !DILocation(line: 137, column: 150, scope: !1091)
!1117 = !DILocation(line: 137, column: 148, scope: !1091)
!1118 = !DILocation(line: 137, column: 165, scope: !1091)
!1119 = !DILocation(line: 137, column: 171, scope: !1091)
!1120 = !DILocation(line: 137, column: 168, scope: !1091)
!1121 = !DILocation(line: 137, column: 160, scope: !1091)
!1122 = !DILocation(line: 137, column: 184, scope: !1091)
!1123 = !DILocation(line: 137, column: 182, scope: !1091)
!1124 = !DILocation(line: 137, column: 156, scope: !1091)
!1125 = !DILocation(line: 137, column: 135, scope: !1091)
!1126 = !DILocation(line: 137, column: 192, scope: !1091)
!1127 = !DILocation(line: 137, column: 23, scope: !1091)
!1128 = !DILocation(line: 137, column: 201, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1091, file: !784, line: 137, column: 201)
!1130 = !DILocation(line: 137, column: 201, scope: !1091)
!1131 = !DILocation(line: 137, column: 217, scope: !1132)
!1132 = !DILexicalBlockFile(scope: !1129, file: !784, discriminator: 1)
!1133 = !DILocation(line: 137, column: 226, scope: !1132)
!1134 = !DILocation(line: 137, column: 224, scope: !1132)
!1135 = !DILocation(line: 137, column: 211, scope: !1132)
!1136 = !DILocation(line: 137, column: 206, scope: !1132)
!1137 = !DILocation(line: 137, column: 215, scope: !1132)
!1138 = !DILocation(line: 137, column: 247, scope: !1139)
!1139 = !DILexicalBlockFile(scope: !1091, file: !784, discriminator: 2)
!1140 = !DILocation(line: 137, column: 237, scope: !1139)
!1141 = !DILocation(line: 137, column: 231, scope: !1139)
!1142 = !DILocation(line: 137, column: 244, scope: !1139)
!1143 = !DILocation(line: 139, column: 24, scope: !976)
!1144 = !DILocation(line: 139, column: 21, scope: !976)
!1145 = !DILocation(line: 140, column: 21, scope: !1146)
!1146 = distinct !DILexicalBlock(scope: !976, file: !784, line: 140, column: 21)
!1147 = !DILocation(line: 140, column: 21, scope: !976)
!1148 = !DILocation(line: 141, column: 28, scope: !1146)
!1149 = !DILocation(line: 141, column: 25, scope: !1146)
!1150 = !DILocation(line: 141, column: 21, scope: !1146)
!1151 = !DILocation(line: 142, column: 13, scope: !976)
!1152 = !DILocation(line: 130, column: 57, scope: !1153)
!1153 = !DILexicalBlockFile(scope: !967, file: !784, discriminator: 2)
!1154 = !DILocation(line: 130, column: 13, scope: !1153)
!1155 = distinct !{!1155, !1156}
!1156 = !DILocation(line: 130, column: 13, scope: !933)
!1157 = !DILocation(line: 144, column: 24, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !933, file: !784, line: 144, column: 13)
!1159 = !DILocation(line: 144, column: 35, scope: !1158)
!1160 = !DILocation(line: 144, column: 33, scope: !1158)
!1161 = !DILocation(line: 144, column: 45, scope: !1158)
!1162 = !DILocation(line: 144, column: 62, scope: !1158)
!1163 = !DILocation(line: 144, column: 60, scope: !1158)
!1164 = !DILocation(line: 144, column: 41, scope: !1158)
!1165 = !DILocation(line: 144, column: 73, scope: !1158)
!1166 = !DILocation(line: 144, column: 84, scope: !1158)
!1167 = !DILocation(line: 144, column: 82, scope: !1158)
!1168 = !DILocation(line: 144, column: 109, scope: !1158)
!1169 = !DILocation(line: 144, column: 107, scope: !1158)
!1170 = !DILocation(line: 144, column: 102, scope: !1158)
!1171 = !DILocation(line: 144, column: 94, scope: !1158)
!1172 = !DILocation(line: 144, column: 122, scope: !1158)
!1173 = !DILocation(line: 144, column: 120, scope: !1158)
!1174 = !DILocation(line: 144, column: 90, scope: !1158)
!1175 = !DILocation(line: 144, column: 69, scope: !1158)
!1176 = !DILocation(line: 144, column: 133, scope: !1158)
!1177 = !DILocation(line: 144, column: 144, scope: !1158)
!1178 = !DILocation(line: 144, column: 142, scope: !1158)
!1179 = !DILocation(line: 144, column: 166, scope: !1158)
!1180 = !DILocation(line: 144, column: 165, scope: !1158)
!1181 = !DILocation(line: 144, column: 162, scope: !1158)
!1182 = !DILocation(line: 144, column: 154, scope: !1158)
!1183 = !DILocation(line: 144, column: 179, scope: !1158)
!1184 = !DILocation(line: 144, column: 177, scope: !1158)
!1185 = !DILocation(line: 144, column: 150, scope: !1158)
!1186 = !DILocation(line: 144, column: 129, scope: !1158)
!1187 = !DILocation(line: 144, column: 187, scope: !1158)
!1188 = !DILocation(line: 144, column: 19, scope: !1158)
!1189 = !DILocation(line: 144, column: 196, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1158, file: !784, line: 144, column: 196)
!1191 = !DILocation(line: 144, column: 196, scope: !1158)
!1192 = !DILocation(line: 144, column: 212, scope: !1193)
!1193 = !DILexicalBlockFile(scope: !1190, file: !784, discriminator: 1)
!1194 = !DILocation(line: 144, column: 221, scope: !1193)
!1195 = !DILocation(line: 144, column: 219, scope: !1193)
!1196 = !DILocation(line: 144, column: 201, scope: !1193)
!1197 = !DILocation(line: 144, column: 210, scope: !1193)
!1198 = !DILocation(line: 144, column: 242, scope: !1199)
!1199 = !DILexicalBlockFile(scope: !1158, file: !784, discriminator: 2)
!1200 = !DILocation(line: 144, column: 232, scope: !1199)
!1201 = !DILocation(line: 144, column: 226, scope: !1199)
!1202 = !DILocation(line: 144, column: 239, scope: !1199)
!1203 = !DILocation(line: 146, column: 20, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !933, file: !784, line: 146, column: 13)
!1205 = !DILocation(line: 146, column: 18, scope: !1204)
!1206 = !DILocation(line: 146, column: 25, scope: !1207)
!1207 = !DILexicalBlockFile(scope: !1208, file: !784, discriminator: 1)
!1208 = distinct !DILexicalBlock(scope: !1204, file: !784, line: 146, column: 13)
!1209 = !DILocation(line: 146, column: 43, scope: !1207)
!1210 = !DILocation(line: 146, column: 29, scope: !1207)
!1211 = !DILocation(line: 146, column: 32, scope: !1207)
!1212 = !DILocation(line: 146, column: 50, scope: !1207)
!1213 = !DILocation(line: 146, column: 27, scope: !1207)
!1214 = !DILocation(line: 146, column: 13, scope: !1207)
!1215 = !DILocation(line: 147, column: 33, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !1217, file: !784, line: 147, column: 17)
!1217 = distinct !DILexicalBlock(scope: !1208, file: !784, line: 146, column: 60)
!1218 = !DILocation(line: 147, column: 28, scope: !1216)
!1219 = !DILocation(line: 147, column: 39, scope: !1216)
!1220 = !DILocation(line: 147, column: 37, scope: !1216)
!1221 = !DILocation(line: 147, column: 54, scope: !1216)
!1222 = !DILocation(line: 147, column: 57, scope: !1216)
!1223 = !DILocation(line: 147, column: 49, scope: !1216)
!1224 = !DILocation(line: 147, column: 67, scope: !1216)
!1225 = !DILocation(line: 147, column: 65, scope: !1216)
!1226 = !DILocation(line: 147, column: 45, scope: !1216)
!1227 = !DILocation(line: 147, column: 83, scope: !1216)
!1228 = !DILocation(line: 147, column: 78, scope: !1216)
!1229 = !DILocation(line: 147, column: 89, scope: !1216)
!1230 = !DILocation(line: 147, column: 87, scope: !1216)
!1231 = !DILocation(line: 147, column: 104, scope: !1216)
!1232 = !DILocation(line: 147, column: 107, scope: !1216)
!1233 = !DILocation(line: 147, column: 99, scope: !1216)
!1234 = !DILocation(line: 147, column: 116, scope: !1216)
!1235 = !DILocation(line: 147, column: 114, scope: !1216)
!1236 = !DILocation(line: 147, column: 95, scope: !1216)
!1237 = !DILocation(line: 147, column: 74, scope: !1216)
!1238 = !DILocation(line: 147, column: 132, scope: !1216)
!1239 = !DILocation(line: 147, column: 127, scope: !1216)
!1240 = !DILocation(line: 147, column: 138, scope: !1216)
!1241 = !DILocation(line: 147, column: 136, scope: !1216)
!1242 = !DILocation(line: 147, column: 153, scope: !1216)
!1243 = !DILocation(line: 147, column: 160, scope: !1216)
!1244 = !DILocation(line: 147, column: 159, scope: !1216)
!1245 = !DILocation(line: 147, column: 156, scope: !1216)
!1246 = !DILocation(line: 147, column: 148, scope: !1216)
!1247 = !DILocation(line: 147, column: 173, scope: !1216)
!1248 = !DILocation(line: 147, column: 171, scope: !1216)
!1249 = !DILocation(line: 147, column: 144, scope: !1216)
!1250 = !DILocation(line: 147, column: 123, scope: !1216)
!1251 = !DILocation(line: 147, column: 181, scope: !1216)
!1252 = !DILocation(line: 147, column: 23, scope: !1216)
!1253 = !DILocation(line: 147, column: 190, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1216, file: !784, line: 147, column: 190)
!1255 = !DILocation(line: 147, column: 190, scope: !1216)
!1256 = !DILocation(line: 147, column: 206, scope: !1257)
!1257 = !DILexicalBlockFile(scope: !1254, file: !784, discriminator: 1)
!1258 = !DILocation(line: 147, column: 215, scope: !1257)
!1259 = !DILocation(line: 147, column: 213, scope: !1257)
!1260 = !DILocation(line: 147, column: 200, scope: !1257)
!1261 = !DILocation(line: 147, column: 195, scope: !1257)
!1262 = !DILocation(line: 147, column: 204, scope: !1257)
!1263 = !DILocation(line: 147, column: 236, scope: !1264)
!1264 = !DILexicalBlockFile(scope: !1216, file: !784, discriminator: 2)
!1265 = !DILocation(line: 147, column: 226, scope: !1264)
!1266 = !DILocation(line: 147, column: 220, scope: !1264)
!1267 = !DILocation(line: 147, column: 233, scope: !1264)
!1268 = !DILocation(line: 148, column: 13, scope: !1217)
!1269 = !DILocation(line: 146, column: 56, scope: !1270)
!1270 = !DILexicalBlockFile(scope: !1208, file: !784, discriminator: 2)
!1271 = !DILocation(line: 146, column: 13, scope: !1270)
!1272 = distinct !{!1272, !1273}
!1273 = !DILocation(line: 146, column: 13, scope: !933)
!1274 = !DILocation(line: 150, column: 29, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !933, file: !784, line: 150, column: 13)
!1276 = !DILocation(line: 150, column: 24, scope: !1275)
!1277 = !DILocation(line: 150, column: 35, scope: !1275)
!1278 = !DILocation(line: 150, column: 33, scope: !1275)
!1279 = !DILocation(line: 150, column: 50, scope: !1275)
!1280 = !DILocation(line: 150, column: 53, scope: !1275)
!1281 = !DILocation(line: 150, column: 45, scope: !1275)
!1282 = !DILocation(line: 150, column: 63, scope: !1275)
!1283 = !DILocation(line: 150, column: 61, scope: !1275)
!1284 = !DILocation(line: 150, column: 41, scope: !1275)
!1285 = !DILocation(line: 150, column: 79, scope: !1275)
!1286 = !DILocation(line: 150, column: 74, scope: !1275)
!1287 = !DILocation(line: 150, column: 85, scope: !1275)
!1288 = !DILocation(line: 150, column: 83, scope: !1275)
!1289 = !DILocation(line: 150, column: 100, scope: !1275)
!1290 = !DILocation(line: 150, column: 111, scope: !1275)
!1291 = !DILocation(line: 150, column: 109, scope: !1275)
!1292 = !DILocation(line: 150, column: 103, scope: !1275)
!1293 = !DILocation(line: 150, column: 95, scope: !1275)
!1294 = !DILocation(line: 150, column: 124, scope: !1275)
!1295 = !DILocation(line: 150, column: 122, scope: !1275)
!1296 = !DILocation(line: 150, column: 91, scope: !1275)
!1297 = !DILocation(line: 150, column: 70, scope: !1275)
!1298 = !DILocation(line: 150, column: 140, scope: !1275)
!1299 = !DILocation(line: 150, column: 135, scope: !1275)
!1300 = !DILocation(line: 150, column: 146, scope: !1275)
!1301 = !DILocation(line: 150, column: 144, scope: !1275)
!1302 = !DILocation(line: 150, column: 161, scope: !1275)
!1303 = !DILocation(line: 150, column: 168, scope: !1275)
!1304 = !DILocation(line: 150, column: 167, scope: !1275)
!1305 = !DILocation(line: 150, column: 164, scope: !1275)
!1306 = !DILocation(line: 150, column: 156, scope: !1275)
!1307 = !DILocation(line: 150, column: 181, scope: !1275)
!1308 = !DILocation(line: 150, column: 179, scope: !1275)
!1309 = !DILocation(line: 150, column: 152, scope: !1275)
!1310 = !DILocation(line: 150, column: 131, scope: !1275)
!1311 = !DILocation(line: 150, column: 189, scope: !1275)
!1312 = !DILocation(line: 150, column: 19, scope: !1275)
!1313 = !DILocation(line: 150, column: 198, scope: !1314)
!1314 = distinct !DILexicalBlock(scope: !1275, file: !784, line: 150, column: 198)
!1315 = !DILocation(line: 150, column: 198, scope: !1275)
!1316 = !DILocation(line: 150, column: 214, scope: !1317)
!1317 = !DILexicalBlockFile(scope: !1314, file: !784, discriminator: 1)
!1318 = !DILocation(line: 150, column: 223, scope: !1317)
!1319 = !DILocation(line: 150, column: 221, scope: !1317)
!1320 = !DILocation(line: 150, column: 208, scope: !1317)
!1321 = !DILocation(line: 150, column: 203, scope: !1317)
!1322 = !DILocation(line: 150, column: 212, scope: !1317)
!1323 = !DILocation(line: 150, column: 244, scope: !1324)
!1324 = !DILexicalBlockFile(scope: !1275, file: !784, discriminator: 2)
!1325 = !DILocation(line: 150, column: 234, scope: !1324)
!1326 = !DILocation(line: 150, column: 228, scope: !1324)
!1327 = !DILocation(line: 150, column: 241, scope: !1324)
!1328 = !DILocation(line: 151, column: 9, scope: !933)
!1329 = !DILocation(line: 124, column: 52, scope: !1330)
!1330 = !DILexicalBlockFile(scope: !927, file: !784, discriminator: 2)
!1331 = !DILocation(line: 124, column: 9, scope: !1330)
!1332 = distinct !{!1332, !1333}
!1333 = !DILocation(line: 124, column: 9, scope: !923)
!1334 = !DILocation(line: 152, column: 5, scope: !923)
!1335 = !DILocation(line: 153, column: 20, scope: !1336)
!1336 = distinct !DILexicalBlock(scope: !1337, file: !784, line: 153, column: 9)
!1337 = distinct !DILexicalBlock(scope: !917, file: !784, line: 152, column: 12)
!1338 = !DILocation(line: 153, column: 14, scope: !1336)
!1339 = !DILocation(line: 153, column: 25, scope: !1340)
!1340 = !DILexicalBlockFile(scope: !1341, file: !784, discriminator: 1)
!1341 = distinct !DILexicalBlock(scope: !1336, file: !784, line: 153, column: 9)
!1342 = !DILocation(line: 153, column: 33, scope: !1340)
!1343 = !DILocation(line: 153, column: 36, scope: !1340)
!1344 = !DILocation(line: 153, column: 31, scope: !1340)
!1345 = !DILocation(line: 153, column: 9, scope: !1340)
!1346 = !DILocalVariable(name: "linesize", scope: !1347, file: !784, line: 154, type: !854)
!1347 = distinct !DILexicalBlock(scope: !1341, file: !784, line: 153, column: 56)
!1348 = !DILocation(line: 154, column: 23, scope: !1347)
!1349 = !DILocation(line: 154, column: 47, scope: !1347)
!1350 = !DILocation(line: 154, column: 34, scope: !1347)
!1351 = !DILocation(line: 154, column: 38, scope: !1347)
!1352 = !DILocation(line: 154, column: 54, scope: !1347)
!1353 = !DILocalVariable(name: "dlinesize", scope: !1347, file: !784, line: 155, type: !854)
!1354 = !DILocation(line: 155, column: 23, scope: !1347)
!1355 = !DILocation(line: 155, column: 49, scope: !1347)
!1356 = !DILocation(line: 155, column: 35, scope: !1347)
!1357 = !DILocation(line: 155, column: 40, scope: !1347)
!1358 = !DILocation(line: 155, column: 56, scope: !1347)
!1359 = !DILocalVariable(name: "val", scope: !1347, file: !784, line: 156, type: !779)
!1360 = !DILocation(line: 156, column: 23, scope: !1347)
!1361 = !DILocation(line: 156, column: 50, scope: !1347)
!1362 = !DILocation(line: 156, column: 41, scope: !1347)
!1363 = !DILocation(line: 156, column: 45, scope: !1347)
!1364 = !DILocation(line: 156, column: 29, scope: !1347)
!1365 = !DILocalVariable(name: "dst", scope: !1347, file: !784, line: 157, type: !779)
!1366 = !DILocation(line: 157, column: 23, scope: !1347)
!1367 = !DILocation(line: 157, column: 29, scope: !1347)
!1368 = !DILocation(line: 157, column: 32, scope: !1347)
!1369 = !DILocation(line: 157, column: 63, scope: !1370)
!1370 = !DILexicalBlockFile(scope: !1347, file: !784, discriminator: 1)
!1371 = !DILocation(line: 157, column: 53, scope: !1370)
!1372 = !DILocation(line: 157, column: 58, scope: !1370)
!1373 = !DILocation(line: 157, column: 41, scope: !1370)
!1374 = !DILocation(line: 157, column: 29, scope: !1370)
!1375 = !DILocation(line: 157, column: 29, scope: !1376)
!1376 = !DILexicalBlockFile(scope: !1347, file: !784, discriminator: 2)
!1377 = !DILocation(line: 157, column: 29, scope: !1378)
!1378 = !DILexicalBlockFile(scope: !1347, file: !784, discriminator: 3)
!1379 = !DILocation(line: 157, column: 23, scope: !1378)
!1380 = !DILocation(line: 159, column: 40, scope: !1347)
!1381 = !DILocation(line: 159, column: 31, scope: !1347)
!1382 = !DILocation(line: 159, column: 35, scope: !1347)
!1383 = !DILocation(line: 159, column: 19, scope: !1347)
!1384 = !DILocation(line: 159, column: 17, scope: !1347)
!1385 = !DILocation(line: 160, column: 20, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1347, file: !784, line: 160, column: 13)
!1387 = !DILocation(line: 160, column: 18, scope: !1386)
!1388 = !DILocation(line: 160, column: 25, scope: !1389)
!1389 = !DILexicalBlockFile(scope: !1390, file: !784, discriminator: 1)
!1390 = distinct !DILexicalBlock(scope: !1386, file: !784, line: 160, column: 13)
!1391 = !DILocation(line: 160, column: 44, scope: !1389)
!1392 = !DILocation(line: 160, column: 29, scope: !1389)
!1393 = !DILocation(line: 160, column: 32, scope: !1389)
!1394 = !DILocation(line: 160, column: 51, scope: !1389)
!1395 = !DILocation(line: 160, column: 27, scope: !1389)
!1396 = !DILocation(line: 160, column: 13, scope: !1389)
!1397 = !DILocation(line: 161, column: 28, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1399, file: !784, line: 161, column: 17)
!1399 = distinct !DILexicalBlock(scope: !1390, file: !784, line: 160, column: 61)
!1400 = !DILocation(line: 161, column: 39, scope: !1398)
!1401 = !DILocation(line: 161, column: 37, scope: !1398)
!1402 = !DILocation(line: 161, column: 49, scope: !1398)
!1403 = !DILocation(line: 161, column: 66, scope: !1398)
!1404 = !DILocation(line: 161, column: 64, scope: !1398)
!1405 = !DILocation(line: 161, column: 45, scope: !1398)
!1406 = !DILocation(line: 161, column: 77, scope: !1398)
!1407 = !DILocation(line: 161, column: 88, scope: !1398)
!1408 = !DILocation(line: 161, column: 86, scope: !1398)
!1409 = !DILocation(line: 161, column: 113, scope: !1398)
!1410 = !DILocation(line: 161, column: 111, scope: !1398)
!1411 = !DILocation(line: 161, column: 106, scope: !1398)
!1412 = !DILocation(line: 161, column: 98, scope: !1398)
!1413 = !DILocation(line: 161, column: 126, scope: !1398)
!1414 = !DILocation(line: 161, column: 124, scope: !1398)
!1415 = !DILocation(line: 161, column: 94, scope: !1398)
!1416 = !DILocation(line: 161, column: 73, scope: !1398)
!1417 = !DILocation(line: 161, column: 137, scope: !1398)
!1418 = !DILocation(line: 161, column: 148, scope: !1398)
!1419 = !DILocation(line: 161, column: 146, scope: !1398)
!1420 = !DILocation(line: 161, column: 169, scope: !1398)
!1421 = !DILocation(line: 161, column: 166, scope: !1398)
!1422 = !DILocation(line: 161, column: 158, scope: !1398)
!1423 = !DILocation(line: 161, column: 182, scope: !1398)
!1424 = !DILocation(line: 161, column: 180, scope: !1398)
!1425 = !DILocation(line: 161, column: 154, scope: !1398)
!1426 = !DILocation(line: 161, column: 133, scope: !1398)
!1427 = !DILocation(line: 161, column: 190, scope: !1398)
!1428 = !DILocation(line: 161, column: 23, scope: !1398)
!1429 = !DILocation(line: 161, column: 199, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1398, file: !784, line: 161, column: 199)
!1431 = !DILocation(line: 161, column: 199, scope: !1398)
!1432 = !DILocation(line: 161, column: 215, scope: !1433)
!1433 = !DILexicalBlockFile(scope: !1430, file: !784, discriminator: 1)
!1434 = !DILocation(line: 161, column: 224, scope: !1433)
!1435 = !DILocation(line: 161, column: 222, scope: !1433)
!1436 = !DILocation(line: 161, column: 204, scope: !1433)
!1437 = !DILocation(line: 161, column: 213, scope: !1433)
!1438 = !DILocation(line: 161, column: 245, scope: !1439)
!1439 = !DILexicalBlockFile(scope: !1398, file: !784, discriminator: 2)
!1440 = !DILocation(line: 161, column: 235, scope: !1439)
!1441 = !DILocation(line: 161, column: 229, scope: !1439)
!1442 = !DILocation(line: 161, column: 242, scope: !1439)
!1443 = !DILocation(line: 163, column: 24, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1399, file: !784, line: 163, column: 17)
!1445 = !DILocation(line: 163, column: 22, scope: !1444)
!1446 = !DILocation(line: 163, column: 29, scope: !1447)
!1447 = !DILexicalBlockFile(scope: !1448, file: !784, discriminator: 1)
!1448 = distinct !DILexicalBlock(scope: !1444, file: !784, line: 163, column: 17)
!1449 = !DILocation(line: 163, column: 47, scope: !1447)
!1450 = !DILocation(line: 163, column: 33, scope: !1447)
!1451 = !DILocation(line: 163, column: 36, scope: !1447)
!1452 = !DILocation(line: 163, column: 54, scope: !1447)
!1453 = !DILocation(line: 163, column: 31, scope: !1447)
!1454 = !DILocation(line: 163, column: 17, scope: !1447)
!1455 = !DILocation(line: 164, column: 37, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1457, file: !784, line: 164, column: 21)
!1457 = distinct !DILexicalBlock(scope: !1448, file: !784, line: 163, column: 64)
!1458 = !DILocation(line: 164, column: 32, scope: !1456)
!1459 = !DILocation(line: 164, column: 43, scope: !1456)
!1460 = !DILocation(line: 164, column: 41, scope: !1456)
!1461 = !DILocation(line: 164, column: 58, scope: !1456)
!1462 = !DILocation(line: 164, column: 61, scope: !1456)
!1463 = !DILocation(line: 164, column: 53, scope: !1456)
!1464 = !DILocation(line: 164, column: 71, scope: !1456)
!1465 = !DILocation(line: 164, column: 69, scope: !1456)
!1466 = !DILocation(line: 164, column: 49, scope: !1456)
!1467 = !DILocation(line: 164, column: 87, scope: !1456)
!1468 = !DILocation(line: 164, column: 82, scope: !1456)
!1469 = !DILocation(line: 164, column: 93, scope: !1456)
!1470 = !DILocation(line: 164, column: 91, scope: !1456)
!1471 = !DILocation(line: 164, column: 108, scope: !1456)
!1472 = !DILocation(line: 164, column: 111, scope: !1456)
!1473 = !DILocation(line: 164, column: 103, scope: !1456)
!1474 = !DILocation(line: 164, column: 120, scope: !1456)
!1475 = !DILocation(line: 164, column: 118, scope: !1456)
!1476 = !DILocation(line: 164, column: 99, scope: !1456)
!1477 = !DILocation(line: 164, column: 78, scope: !1456)
!1478 = !DILocation(line: 164, column: 136, scope: !1456)
!1479 = !DILocation(line: 164, column: 131, scope: !1456)
!1480 = !DILocation(line: 164, column: 142, scope: !1456)
!1481 = !DILocation(line: 164, column: 140, scope: !1456)
!1482 = !DILocation(line: 164, column: 157, scope: !1456)
!1483 = !DILocation(line: 164, column: 163, scope: !1456)
!1484 = !DILocation(line: 164, column: 160, scope: !1456)
!1485 = !DILocation(line: 164, column: 152, scope: !1456)
!1486 = !DILocation(line: 164, column: 176, scope: !1456)
!1487 = !DILocation(line: 164, column: 174, scope: !1456)
!1488 = !DILocation(line: 164, column: 148, scope: !1456)
!1489 = !DILocation(line: 164, column: 127, scope: !1456)
!1490 = !DILocation(line: 164, column: 184, scope: !1456)
!1491 = !DILocation(line: 164, column: 27, scope: !1456)
!1492 = !DILocation(line: 164, column: 193, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1456, file: !784, line: 164, column: 193)
!1494 = !DILocation(line: 164, column: 193, scope: !1456)
!1495 = !DILocation(line: 164, column: 209, scope: !1496)
!1496 = !DILexicalBlockFile(scope: !1493, file: !784, discriminator: 1)
!1497 = !DILocation(line: 164, column: 218, scope: !1496)
!1498 = !DILocation(line: 164, column: 216, scope: !1496)
!1499 = !DILocation(line: 164, column: 203, scope: !1496)
!1500 = !DILocation(line: 164, column: 198, scope: !1496)
!1501 = !DILocation(line: 164, column: 207, scope: !1496)
!1502 = !DILocation(line: 164, column: 239, scope: !1503)
!1503 = !DILexicalBlockFile(scope: !1456, file: !784, discriminator: 2)
!1504 = !DILocation(line: 164, column: 229, scope: !1503)
!1505 = !DILocation(line: 164, column: 223, scope: !1503)
!1506 = !DILocation(line: 164, column: 236, scope: !1503)
!1507 = !DILocation(line: 165, column: 17, scope: !1457)
!1508 = !DILocation(line: 163, column: 60, scope: !1509)
!1509 = !DILexicalBlockFile(scope: !1448, file: !784, discriminator: 2)
!1510 = !DILocation(line: 163, column: 17, scope: !1509)
!1511 = distinct !{!1511, !1512}
!1512 = !DILocation(line: 163, column: 17, scope: !1399)
!1513 = !DILocation(line: 167, column: 33, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1399, file: !784, line: 167, column: 17)
!1515 = !DILocation(line: 167, column: 28, scope: !1514)
!1516 = !DILocation(line: 167, column: 39, scope: !1514)
!1517 = !DILocation(line: 167, column: 37, scope: !1514)
!1518 = !DILocation(line: 167, column: 54, scope: !1514)
!1519 = !DILocation(line: 167, column: 57, scope: !1514)
!1520 = !DILocation(line: 167, column: 49, scope: !1514)
!1521 = !DILocation(line: 167, column: 67, scope: !1514)
!1522 = !DILocation(line: 167, column: 65, scope: !1514)
!1523 = !DILocation(line: 167, column: 45, scope: !1514)
!1524 = !DILocation(line: 167, column: 83, scope: !1514)
!1525 = !DILocation(line: 167, column: 78, scope: !1514)
!1526 = !DILocation(line: 167, column: 89, scope: !1514)
!1527 = !DILocation(line: 167, column: 87, scope: !1514)
!1528 = !DILocation(line: 167, column: 104, scope: !1514)
!1529 = !DILocation(line: 167, column: 115, scope: !1514)
!1530 = !DILocation(line: 167, column: 113, scope: !1514)
!1531 = !DILocation(line: 167, column: 107, scope: !1514)
!1532 = !DILocation(line: 167, column: 99, scope: !1514)
!1533 = !DILocation(line: 167, column: 128, scope: !1514)
!1534 = !DILocation(line: 167, column: 126, scope: !1514)
!1535 = !DILocation(line: 167, column: 95, scope: !1514)
!1536 = !DILocation(line: 167, column: 74, scope: !1514)
!1537 = !DILocation(line: 167, column: 144, scope: !1514)
!1538 = !DILocation(line: 167, column: 139, scope: !1514)
!1539 = !DILocation(line: 167, column: 150, scope: !1514)
!1540 = !DILocation(line: 167, column: 148, scope: !1514)
!1541 = !DILocation(line: 167, column: 165, scope: !1514)
!1542 = !DILocation(line: 167, column: 171, scope: !1514)
!1543 = !DILocation(line: 167, column: 168, scope: !1514)
!1544 = !DILocation(line: 167, column: 160, scope: !1514)
!1545 = !DILocation(line: 167, column: 184, scope: !1514)
!1546 = !DILocation(line: 167, column: 182, scope: !1514)
!1547 = !DILocation(line: 167, column: 156, scope: !1514)
!1548 = !DILocation(line: 167, column: 135, scope: !1514)
!1549 = !DILocation(line: 167, column: 192, scope: !1514)
!1550 = !DILocation(line: 167, column: 23, scope: !1514)
!1551 = !DILocation(line: 167, column: 201, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1514, file: !784, line: 167, column: 201)
!1553 = !DILocation(line: 167, column: 201, scope: !1514)
!1554 = !DILocation(line: 167, column: 217, scope: !1555)
!1555 = !DILexicalBlockFile(scope: !1552, file: !784, discriminator: 1)
!1556 = !DILocation(line: 167, column: 226, scope: !1555)
!1557 = !DILocation(line: 167, column: 224, scope: !1555)
!1558 = !DILocation(line: 167, column: 211, scope: !1555)
!1559 = !DILocation(line: 167, column: 206, scope: !1555)
!1560 = !DILocation(line: 167, column: 215, scope: !1555)
!1561 = !DILocation(line: 167, column: 247, scope: !1562)
!1562 = !DILexicalBlockFile(scope: !1514, file: !784, discriminator: 2)
!1563 = !DILocation(line: 167, column: 237, scope: !1562)
!1564 = !DILocation(line: 167, column: 231, scope: !1562)
!1565 = !DILocation(line: 167, column: 244, scope: !1562)
!1566 = !DILocation(line: 169, column: 24, scope: !1399)
!1567 = !DILocation(line: 169, column: 21, scope: !1399)
!1568 = !DILocation(line: 170, column: 21, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1399, file: !784, line: 170, column: 21)
!1570 = !DILocation(line: 170, column: 21, scope: !1399)
!1571 = !DILocation(line: 171, column: 28, scope: !1569)
!1572 = !DILocation(line: 171, column: 25, scope: !1569)
!1573 = !DILocation(line: 171, column: 21, scope: !1569)
!1574 = !DILocation(line: 172, column: 13, scope: !1399)
!1575 = !DILocation(line: 160, column: 57, scope: !1576)
!1576 = !DILexicalBlockFile(scope: !1390, file: !784, discriminator: 2)
!1577 = !DILocation(line: 160, column: 13, scope: !1576)
!1578 = distinct !{!1578, !1579}
!1579 = !DILocation(line: 160, column: 13, scope: !1347)
!1580 = !DILocation(line: 174, column: 24, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1347, file: !784, line: 174, column: 13)
!1582 = !DILocation(line: 174, column: 35, scope: !1581)
!1583 = !DILocation(line: 174, column: 33, scope: !1581)
!1584 = !DILocation(line: 174, column: 45, scope: !1581)
!1585 = !DILocation(line: 174, column: 62, scope: !1581)
!1586 = !DILocation(line: 174, column: 60, scope: !1581)
!1587 = !DILocation(line: 174, column: 41, scope: !1581)
!1588 = !DILocation(line: 174, column: 73, scope: !1581)
!1589 = !DILocation(line: 174, column: 84, scope: !1581)
!1590 = !DILocation(line: 174, column: 82, scope: !1581)
!1591 = !DILocation(line: 174, column: 109, scope: !1581)
!1592 = !DILocation(line: 174, column: 107, scope: !1581)
!1593 = !DILocation(line: 174, column: 102, scope: !1581)
!1594 = !DILocation(line: 174, column: 94, scope: !1581)
!1595 = !DILocation(line: 174, column: 122, scope: !1581)
!1596 = !DILocation(line: 174, column: 120, scope: !1581)
!1597 = !DILocation(line: 174, column: 90, scope: !1581)
!1598 = !DILocation(line: 174, column: 69, scope: !1581)
!1599 = !DILocation(line: 174, column: 133, scope: !1581)
!1600 = !DILocation(line: 174, column: 144, scope: !1581)
!1601 = !DILocation(line: 174, column: 142, scope: !1581)
!1602 = !DILocation(line: 174, column: 166, scope: !1581)
!1603 = !DILocation(line: 174, column: 165, scope: !1581)
!1604 = !DILocation(line: 174, column: 162, scope: !1581)
!1605 = !DILocation(line: 174, column: 154, scope: !1581)
!1606 = !DILocation(line: 174, column: 179, scope: !1581)
!1607 = !DILocation(line: 174, column: 177, scope: !1581)
!1608 = !DILocation(line: 174, column: 150, scope: !1581)
!1609 = !DILocation(line: 174, column: 129, scope: !1581)
!1610 = !DILocation(line: 174, column: 187, scope: !1581)
!1611 = !DILocation(line: 174, column: 19, scope: !1581)
!1612 = !DILocation(line: 174, column: 196, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1581, file: !784, line: 174, column: 196)
!1614 = !DILocation(line: 174, column: 196, scope: !1581)
!1615 = !DILocation(line: 174, column: 212, scope: !1616)
!1616 = !DILexicalBlockFile(scope: !1613, file: !784, discriminator: 1)
!1617 = !DILocation(line: 174, column: 221, scope: !1616)
!1618 = !DILocation(line: 174, column: 219, scope: !1616)
!1619 = !DILocation(line: 174, column: 201, scope: !1616)
!1620 = !DILocation(line: 174, column: 210, scope: !1616)
!1621 = !DILocation(line: 174, column: 242, scope: !1622)
!1622 = !DILexicalBlockFile(scope: !1581, file: !784, discriminator: 2)
!1623 = !DILocation(line: 174, column: 232, scope: !1622)
!1624 = !DILocation(line: 174, column: 226, scope: !1622)
!1625 = !DILocation(line: 174, column: 239, scope: !1622)
!1626 = !DILocation(line: 176, column: 20, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1347, file: !784, line: 176, column: 13)
!1628 = !DILocation(line: 176, column: 18, scope: !1627)
!1629 = !DILocation(line: 176, column: 25, scope: !1630)
!1630 = !DILexicalBlockFile(scope: !1631, file: !784, discriminator: 1)
!1631 = distinct !DILexicalBlock(scope: !1627, file: !784, line: 176, column: 13)
!1632 = !DILocation(line: 176, column: 43, scope: !1630)
!1633 = !DILocation(line: 176, column: 29, scope: !1630)
!1634 = !DILocation(line: 176, column: 32, scope: !1630)
!1635 = !DILocation(line: 176, column: 50, scope: !1630)
!1636 = !DILocation(line: 176, column: 27, scope: !1630)
!1637 = !DILocation(line: 176, column: 13, scope: !1630)
!1638 = !DILocation(line: 177, column: 33, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !784, line: 177, column: 17)
!1640 = distinct !DILexicalBlock(scope: !1631, file: !784, line: 176, column: 60)
!1641 = !DILocation(line: 177, column: 28, scope: !1639)
!1642 = !DILocation(line: 177, column: 39, scope: !1639)
!1643 = !DILocation(line: 177, column: 37, scope: !1639)
!1644 = !DILocation(line: 177, column: 54, scope: !1639)
!1645 = !DILocation(line: 177, column: 57, scope: !1639)
!1646 = !DILocation(line: 177, column: 49, scope: !1639)
!1647 = !DILocation(line: 177, column: 67, scope: !1639)
!1648 = !DILocation(line: 177, column: 65, scope: !1639)
!1649 = !DILocation(line: 177, column: 45, scope: !1639)
!1650 = !DILocation(line: 177, column: 83, scope: !1639)
!1651 = !DILocation(line: 177, column: 78, scope: !1639)
!1652 = !DILocation(line: 177, column: 89, scope: !1639)
!1653 = !DILocation(line: 177, column: 87, scope: !1639)
!1654 = !DILocation(line: 177, column: 104, scope: !1639)
!1655 = !DILocation(line: 177, column: 107, scope: !1639)
!1656 = !DILocation(line: 177, column: 99, scope: !1639)
!1657 = !DILocation(line: 177, column: 116, scope: !1639)
!1658 = !DILocation(line: 177, column: 114, scope: !1639)
!1659 = !DILocation(line: 177, column: 95, scope: !1639)
!1660 = !DILocation(line: 177, column: 74, scope: !1639)
!1661 = !DILocation(line: 177, column: 132, scope: !1639)
!1662 = !DILocation(line: 177, column: 127, scope: !1639)
!1663 = !DILocation(line: 177, column: 138, scope: !1639)
!1664 = !DILocation(line: 177, column: 136, scope: !1639)
!1665 = !DILocation(line: 177, column: 153, scope: !1639)
!1666 = !DILocation(line: 177, column: 160, scope: !1639)
!1667 = !DILocation(line: 177, column: 159, scope: !1639)
!1668 = !DILocation(line: 177, column: 156, scope: !1639)
!1669 = !DILocation(line: 177, column: 148, scope: !1639)
!1670 = !DILocation(line: 177, column: 173, scope: !1639)
!1671 = !DILocation(line: 177, column: 171, scope: !1639)
!1672 = !DILocation(line: 177, column: 144, scope: !1639)
!1673 = !DILocation(line: 177, column: 123, scope: !1639)
!1674 = !DILocation(line: 177, column: 181, scope: !1639)
!1675 = !DILocation(line: 177, column: 23, scope: !1639)
!1676 = !DILocation(line: 177, column: 190, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1639, file: !784, line: 177, column: 190)
!1678 = !DILocation(line: 177, column: 190, scope: !1639)
!1679 = !DILocation(line: 177, column: 206, scope: !1680)
!1680 = !DILexicalBlockFile(scope: !1677, file: !784, discriminator: 1)
!1681 = !DILocation(line: 177, column: 215, scope: !1680)
!1682 = !DILocation(line: 177, column: 213, scope: !1680)
!1683 = !DILocation(line: 177, column: 200, scope: !1680)
!1684 = !DILocation(line: 177, column: 195, scope: !1680)
!1685 = !DILocation(line: 177, column: 204, scope: !1680)
!1686 = !DILocation(line: 177, column: 236, scope: !1687)
!1687 = !DILexicalBlockFile(scope: !1639, file: !784, discriminator: 2)
!1688 = !DILocation(line: 177, column: 226, scope: !1687)
!1689 = !DILocation(line: 177, column: 220, scope: !1687)
!1690 = !DILocation(line: 177, column: 233, scope: !1687)
!1691 = !DILocation(line: 178, column: 13, scope: !1640)
!1692 = !DILocation(line: 176, column: 56, scope: !1693)
!1693 = !DILexicalBlockFile(scope: !1631, file: !784, discriminator: 2)
!1694 = !DILocation(line: 176, column: 13, scope: !1693)
!1695 = distinct !{!1695, !1696}
!1696 = !DILocation(line: 176, column: 13, scope: !1347)
!1697 = !DILocation(line: 180, column: 29, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1347, file: !784, line: 180, column: 13)
!1699 = !DILocation(line: 180, column: 24, scope: !1698)
!1700 = !DILocation(line: 180, column: 35, scope: !1698)
!1701 = !DILocation(line: 180, column: 33, scope: !1698)
!1702 = !DILocation(line: 180, column: 50, scope: !1698)
!1703 = !DILocation(line: 180, column: 53, scope: !1698)
!1704 = !DILocation(line: 180, column: 45, scope: !1698)
!1705 = !DILocation(line: 180, column: 63, scope: !1698)
!1706 = !DILocation(line: 180, column: 61, scope: !1698)
!1707 = !DILocation(line: 180, column: 41, scope: !1698)
!1708 = !DILocation(line: 180, column: 79, scope: !1698)
!1709 = !DILocation(line: 180, column: 74, scope: !1698)
!1710 = !DILocation(line: 180, column: 85, scope: !1698)
!1711 = !DILocation(line: 180, column: 83, scope: !1698)
!1712 = !DILocation(line: 180, column: 100, scope: !1698)
!1713 = !DILocation(line: 180, column: 110, scope: !1698)
!1714 = !DILocation(line: 180, column: 109, scope: !1698)
!1715 = !DILocation(line: 180, column: 103, scope: !1698)
!1716 = !DILocation(line: 180, column: 95, scope: !1698)
!1717 = !DILocation(line: 180, column: 123, scope: !1698)
!1718 = !DILocation(line: 180, column: 121, scope: !1698)
!1719 = !DILocation(line: 180, column: 91, scope: !1698)
!1720 = !DILocation(line: 180, column: 70, scope: !1698)
!1721 = !DILocation(line: 180, column: 139, scope: !1698)
!1722 = !DILocation(line: 180, column: 134, scope: !1698)
!1723 = !DILocation(line: 180, column: 145, scope: !1698)
!1724 = !DILocation(line: 180, column: 143, scope: !1698)
!1725 = !DILocation(line: 180, column: 160, scope: !1698)
!1726 = !DILocation(line: 180, column: 167, scope: !1698)
!1727 = !DILocation(line: 180, column: 166, scope: !1698)
!1728 = !DILocation(line: 180, column: 163, scope: !1698)
!1729 = !DILocation(line: 180, column: 155, scope: !1698)
!1730 = !DILocation(line: 180, column: 180, scope: !1698)
!1731 = !DILocation(line: 180, column: 178, scope: !1698)
!1732 = !DILocation(line: 180, column: 151, scope: !1698)
!1733 = !DILocation(line: 180, column: 130, scope: !1698)
!1734 = !DILocation(line: 180, column: 188, scope: !1698)
!1735 = !DILocation(line: 180, column: 19, scope: !1698)
!1736 = !DILocation(line: 180, column: 197, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1698, file: !784, line: 180, column: 197)
!1738 = !DILocation(line: 180, column: 197, scope: !1698)
!1739 = !DILocation(line: 180, column: 213, scope: !1740)
!1740 = !DILexicalBlockFile(scope: !1737, file: !784, discriminator: 1)
!1741 = !DILocation(line: 180, column: 222, scope: !1740)
!1742 = !DILocation(line: 180, column: 220, scope: !1740)
!1743 = !DILocation(line: 180, column: 207, scope: !1740)
!1744 = !DILocation(line: 180, column: 202, scope: !1740)
!1745 = !DILocation(line: 180, column: 211, scope: !1740)
!1746 = !DILocation(line: 180, column: 243, scope: !1747)
!1747 = !DILexicalBlockFile(scope: !1698, file: !784, discriminator: 2)
!1748 = !DILocation(line: 180, column: 233, scope: !1747)
!1749 = !DILocation(line: 180, column: 227, scope: !1747)
!1750 = !DILocation(line: 180, column: 240, scope: !1747)
!1751 = !DILocation(line: 181, column: 9, scope: !1347)
!1752 = !DILocation(line: 153, column: 52, scope: !1753)
!1753 = !DILexicalBlockFile(scope: !1341, file: !784, discriminator: 2)
!1754 = !DILocation(line: 153, column: 9, scope: !1753)
!1755 = distinct !{!1755, !1756}
!1756 = !DILocation(line: 153, column: 9, scope: !1337)
!1757 = !DILocation(line: 184, column: 16, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !822, file: !784, line: 184, column: 5)
!1759 = !DILocation(line: 184, column: 10, scope: !1758)
!1760 = !DILocation(line: 184, column: 21, scope: !1761)
!1761 = !DILexicalBlockFile(scope: !1762, file: !784, discriminator: 1)
!1762 = distinct !DILexicalBlock(scope: !1758, file: !784, line: 184, column: 5)
!1763 = !DILocation(line: 184, column: 29, scope: !1761)
!1764 = !DILocation(line: 184, column: 32, scope: !1761)
!1765 = !DILocation(line: 184, column: 27, scope: !1761)
!1766 = !DILocation(line: 184, column: 5, scope: !1761)
!1767 = !DILocalVariable(name: "key", scope: !1768, file: !784, line: 185, type: !1769)
!1768 = distinct !DILexicalBlock(scope: !1762, file: !784, line: 184, column: 52)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 256, align: 8, elements: !1770)
!1770 = !{!1771}
!1771 = !DISubrange(count: 32)
!1772 = !DILocation(line: 185, column: 14, scope: !1768)
!1773 = !DILocation(line: 187, column: 39, scope: !1768)
!1774 = !DILocation(line: 187, column: 25, scope: !1768)
!1775 = !DILocation(line: 187, column: 28, scope: !1768)
!1776 = !DILocation(line: 187, column: 63, scope: !1768)
!1777 = !DILocation(line: 187, column: 48, scope: !1768)
!1778 = !DILocation(line: 187, column: 51, scope: !1768)
!1779 = !DILocation(line: 187, column: 46, scope: !1768)
!1780 = !DILocation(line: 187, column: 15, scope: !1768)
!1781 = !DILocation(line: 187, column: 9, scope: !1768)
!1782 = !DILocation(line: 187, column: 22, scope: !1768)
!1783 = !DILocation(line: 188, column: 18, scope: !1768)
!1784 = !DILocation(line: 188, column: 65, scope: !1768)
!1785 = !DILocation(line: 188, column: 72, scope: !1768)
!1786 = !DILocation(line: 188, column: 75, scope: !1768)
!1787 = !DILocation(line: 188, column: 9, scope: !1768)
!1788 = !DILocation(line: 189, column: 18, scope: !1768)
!1789 = !DILocation(line: 189, column: 71, scope: !1768)
!1790 = !DILocation(line: 189, column: 65, scope: !1768)
!1791 = !DILocation(line: 189, column: 78, scope: !1768)
!1792 = !DILocation(line: 189, column: 59, scope: !1768)
!1793 = !DILocation(line: 189, column: 57, scope: !1768)
!1794 = !DILocation(line: 189, column: 53, scope: !1768)
!1795 = !DILocation(line: 189, column: 9, scope: !1796)
!1796 = !DILexicalBlockFile(scope: !1768, file: !784, discriminator: 1)
!1797 = !DILocation(line: 190, column: 22, scope: !1768)
!1798 = !DILocation(line: 190, column: 27, scope: !1768)
!1799 = !DILocation(line: 190, column: 37, scope: !1768)
!1800 = !DILocation(line: 190, column: 42, scope: !1768)
!1801 = !DILocation(line: 190, column: 9, scope: !1768)
!1802 = !DILocation(line: 191, column: 5, scope: !1768)
!1803 = !DILocation(line: 184, column: 48, scope: !1804)
!1804 = !DILexicalBlockFile(scope: !1762, file: !784, discriminator: 2)
!1805 = !DILocation(line: 184, column: 5, scope: !1804)
!1806 = distinct !{!1806, !1807}
!1807 = !DILocation(line: 184, column: 5, scope: !822)
!1808 = !DILocation(line: 193, column: 9, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !822, file: !784, line: 193, column: 9)
!1810 = !DILocation(line: 193, column: 16, scope: !1809)
!1811 = !DILocation(line: 193, column: 13, scope: !1809)
!1812 = !DILocation(line: 193, column: 9, scope: !822)
!1813 = !DILocation(line: 194, column: 9, scope: !1809)
!1814 = !DILocation(line: 196, column: 28, scope: !822)
!1815 = !DILocation(line: 196, column: 37, scope: !822)
!1816 = !DILocation(line: 196, column: 12, scope: !822)
!1817 = !DILocation(line: 196, column: 5, scope: !822)
!1818 = !DILocation(line: 197, column: 1, scope: !822)
!1819 = distinct !DISubprogram(name: "config_input", scope: !784, file: !784, line: 76, type: !398, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !799)
!1820 = !DILocalVariable(name: "inlink", arg: 1, scope: !1819, file: !784, line: 76, type: !386)
!1821 = !DILocation(line: 76, column: 39, scope: !1819)
!1822 = !DILocalVariable(name: "desc", scope: !1819, file: !784, line: 78, type: !1823)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64, align: 64)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !1826, line: 123, baseType: !1827)
!1826 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !1826, line: 81, size: 1280, align: 64, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832, !1833, !1834, !1847}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1827, file: !1826, line: 82, baseType: !184, size: 64, align: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1827, file: !1826, line: 83, baseType: !292, size: 8, align: 8, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !1827, file: !1826, line: 92, baseType: !292, size: 8, align: 8, offset: 72)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !1827, file: !1826, line: 101, baseType: !292, size: 8, align: 8, offset: 80)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1827, file: !1826, line: 106, baseType: !316, size: 64, align: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1827, file: !1826, line: 117, baseType: !1835, size: 1024, align: 32, offset: 192)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1836, size: 1024, align: 32, elements: !846)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !1826, line: 70, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !1826, line: 31, size: 256, align: 32, elements: !1838)
!1838 = !{!1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1837, file: !1826, line: 35, baseType: !200, size: 32, align: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1837, file: !1826, line: 41, baseType: !200, size: 32, align: 32, offset: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1837, file: !1826, line: 47, baseType: !200, size: 32, align: 32, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1837, file: !1826, line: 53, baseType: !200, size: 32, align: 32, offset: 96)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1837, file: !1826, line: 58, baseType: !200, size: 32, align: 32, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !1837, file: !1826, line: 62, baseType: !200, size: 32, align: 32, offset: 160)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !1837, file: !1826, line: 65, baseType: !200, size: 32, align: 32, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !1837, file: !1826, line: 68, baseType: !200, size: 32, align: 32, offset: 224)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1827, file: !1826, line: 122, baseType: !184, size: 64, align: 64, offset: 1216)
!1848 = !DILocation(line: 78, column: 31, scope: !1819)
!1849 = !DILocation(line: 78, column: 58, scope: !1819)
!1850 = !DILocation(line: 78, column: 66, scope: !1819)
!1851 = !DILocation(line: 78, column: 38, scope: !1819)
!1852 = !DILocalVariable(name: "ctx", scope: !1819, file: !784, line: 79, type: !173)
!1853 = !DILocation(line: 79, column: 22, scope: !1819)
!1854 = !DILocation(line: 79, column: 28, scope: !1819)
!1855 = !DILocation(line: 79, column: 36, scope: !1819)
!1856 = !DILocalVariable(name: "s", scope: !1819, file: !784, line: 80, type: !836)
!1857 = !DILocation(line: 80, column: 17, scope: !1819)
!1858 = !DILocation(line: 80, column: 21, scope: !1819)
!1859 = !DILocation(line: 80, column: 26, scope: !1819)
!1860 = !DILocation(line: 82, column: 20, scope: !1819)
!1861 = !DILocation(line: 82, column: 26, scope: !1819)
!1862 = !DILocation(line: 82, column: 5, scope: !1819)
!1863 = !DILocation(line: 82, column: 8, scope: !1819)
!1864 = !DILocation(line: 82, column: 18, scope: !1819)
!1865 = !DILocation(line: 84, column: 96, scope: !1819)
!1866 = !DILocation(line: 84, column: 104, scope: !1819)
!1867 = !DILocation(line: 84, column: 94, scope: !1819)
!1868 = !DILocation(line: 84, column: 112, scope: !1819)
!1869 = !DILocation(line: 84, column: 118, scope: !1819)
!1870 = !DILocation(line: 84, column: 111, scope: !1819)
!1871 = !DILocation(line: 84, column: 108, scope: !1819)
!1872 = !DILocation(line: 84, column: 91, scope: !1819)
!1873 = !DILocation(line: 84, column: 25, scope: !1819)
!1874 = !DILocation(line: 84, column: 28, scope: !1819)
!1875 = !DILocation(line: 84, column: 43, scope: !1819)
!1876 = !DILocation(line: 84, column: 5, scope: !1819)
!1877 = !DILocation(line: 84, column: 8, scope: !1819)
!1878 = !DILocation(line: 84, column: 23, scope: !1819)
!1879 = !DILocation(line: 85, column: 45, scope: !1819)
!1880 = !DILocation(line: 85, column: 53, scope: !1819)
!1881 = !DILocation(line: 85, column: 25, scope: !1819)
!1882 = !DILocation(line: 85, column: 28, scope: !1819)
!1883 = !DILocation(line: 85, column: 43, scope: !1819)
!1884 = !DILocation(line: 85, column: 5, scope: !1819)
!1885 = !DILocation(line: 85, column: 8, scope: !1819)
!1886 = !DILocation(line: 85, column: 23, scope: !1819)
!1887 = !DILocation(line: 86, column: 94, scope: !1819)
!1888 = !DILocation(line: 86, column: 102, scope: !1819)
!1889 = !DILocation(line: 86, column: 92, scope: !1819)
!1890 = !DILocation(line: 86, column: 110, scope: !1819)
!1891 = !DILocation(line: 86, column: 116, scope: !1819)
!1892 = !DILocation(line: 86, column: 109, scope: !1819)
!1893 = !DILocation(line: 86, column: 106, scope: !1819)
!1894 = !DILocation(line: 86, column: 89, scope: !1819)
!1895 = !DILocation(line: 86, column: 24, scope: !1819)
!1896 = !DILocation(line: 86, column: 27, scope: !1819)
!1897 = !DILocation(line: 86, column: 41, scope: !1819)
!1898 = !DILocation(line: 86, column: 5, scope: !1819)
!1899 = !DILocation(line: 86, column: 8, scope: !1819)
!1900 = !DILocation(line: 86, column: 22, scope: !1819)
!1901 = !DILocation(line: 87, column: 43, scope: !1819)
!1902 = !DILocation(line: 87, column: 51, scope: !1819)
!1903 = !DILocation(line: 87, column: 24, scope: !1819)
!1904 = !DILocation(line: 87, column: 27, scope: !1819)
!1905 = !DILocation(line: 87, column: 41, scope: !1819)
!1906 = !DILocation(line: 87, column: 5, scope: !1819)
!1907 = !DILocation(line: 87, column: 8, scope: !1819)
!1908 = !DILocation(line: 87, column: 22, scope: !1819)
!1909 = !DILocation(line: 89, column: 16, scope: !1819)
!1910 = !DILocation(line: 89, column: 22, scope: !1819)
!1911 = !DILocation(line: 89, column: 30, scope: !1819)
!1912 = !DILocation(line: 89, column: 5, scope: !1819)
!1913 = !DILocation(line: 89, column: 8, scope: !1819)
!1914 = !DILocation(line: 89, column: 14, scope: !1819)
!1915 = !DILocation(line: 91, column: 5, scope: !1819)
